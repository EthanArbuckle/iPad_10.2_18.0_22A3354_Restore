double sub_1000FF254(uint64_t a1)
{
  uint64_t v1;
  double result;
  int v3;

  result = *(double *)(v1 + 464);
  v3 = *(_DWORD *)(v1 + 472);
  *(double *)(a1 + 24) = result;
  *(_DWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_1000FF268(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000EDC8(&qword_100483F38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000FF2A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1000FF2CC()
{
  uint64_t v0;

  sub_1000FEBAC(*(_QWORD **)(v0 + 16));
}

uint64_t sub_1000FF2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000EDC8(&qword_100483F38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FF31C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)sub_10000EDC8(&qword_100483F38);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v7 + v1[9];
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[11]));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000FF3DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000EDC8(&qword_100483F38) - 8) + 80);
  return sub_1000F4360(a1, v1 + ((v3 + 16) & ~v3), &qword_100483F38, &qword_100483F48);
}

uint64_t sub_1000FF448()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1000FF470()
{
  uint64_t v0;

  return sub_1000FE7E8(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000FF47C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1000FF4A8()
{
  uint64_t v0;

  return sub_1000FE88C(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

BOOL sub_1000FF4B4(double a1, double a2)
{
  uint64_t v2;

  return sub_1000FE920(*(_QWORD *)(v2 + 16), *(_QWORD **)(v2 + 24), a1, a2);
}

double sub_1000FF4C0()
{
  uint64_t v0;

  return sub_1000FEB0C(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_1000FF4C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, __n128);
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, __n128);
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, __n128);
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, __n128);
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, __n128);
  __n128 v61;
  uint64_t v62;
  simd_float4 v63;
  simd_float4 v64;
  simd_float4 v65;
  id v66;
  uint64_t v67;
  NSString v68;
  uint64_t v69;
  __n128 v70;
  _BYTE v72[24];
  void *v73;
  void *v74;

  v3 = v2;
  v6 = *v2;
  v72[0] = 0;
  v7 = sub_10000EDC8(&qword_10047E638);
  swift_allocObject(v7, 32, 7);
  swift_retain(v2);
  v2[8] = Synchronized.init(wrappedValue:)(v72);
  sub_10000EDC8(&qword_100483FA0);
  KeyPath = swift_getKeyPath(&unk_1003B74F8);
  v2[11] = MutableStateValue.__allocating_init(_:_:)(KeyPath, v6);
  v9 = swift_getKeyPath(&unk_1003B7520);
  v10 = sub_10000EDC8(&qword_100481BA0);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v11 = qword_1004AF890;
  v12 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v10 + 272);
  v13 = swift_retain(qword_1004AF890);
  v3[12] = v12(v9, v11, v13);
  sub_10000EDC8(&qword_100483FA8);
  v14 = swift_getKeyPath(&unk_1003B7548);
  v3[13] = MutableStateValue.__allocating_init(_:_:)(v14, v6);
  sub_10000EDC8(&qword_100483FB0);
  v15 = swift_getKeyPath(&unk_1003B7570);
  v3[14] = MutableStateValue.__allocating_init(_:_:)(v15, v6);
  v16 = swift_getKeyPath(&unk_1003B7598);
  v17 = sub_10000EDC8((uint64_t *)&unk_1004873C0);
  v18 = qword_1004AF890;
  v19 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v17 + 272);
  v20 = swift_retain(qword_1004AF890);
  v3[15] = v19(v16, v18, v20);
  sub_10000EDC8(&qword_100483FB8);
  v21 = swift_getKeyPath(&unk_1003B75C0);
  v3[16] = MutableStateValue.__allocating_init(_:_:)(v21, v6);
  v22 = swift_getKeyPath(&unk_1003B75E8);
  v23 = sub_10000EDC8((uint64_t *)&unk_10047E5C0);
  v24 = qword_1004AF890;
  v25 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v23 + 272);
  v26 = swift_retain(qword_1004AF890);
  v3[17] = v25(v22, v24, v26);
  v27 = swift_getKeyPath(&unk_1003B7610);
  v28 = sub_10000EDC8(&qword_10047BBD0);
  v29 = qword_1004AF890;
  v30 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v28 + 272);
  v31 = swift_retain(qword_1004AF890);
  v3[18] = v30(v27, v29, v31);
  v32 = swift_getKeyPath(&unk_1003B7638);
  v33 = sub_10000EDC8((uint64_t *)&unk_10047E5D0);
  v34 = qword_1004AF890;
  v35 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v33 + 272);
  v36 = swift_retain(qword_1004AF890);
  v3[19] = v35(v32, v34, v36);
  v37 = sub_10000EDC8(&qword_10047E5E0);
  v38 = swift_getKeyPath(&unk_1003B7660);
  v39 = qword_1004AF890;
  v40 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v37 + 272);
  v41 = swift_retain(qword_1004AF890);
  v3[20] = v40(v38, v39, v41);
  v42 = swift_getKeyPath(&unk_1003B7688);
  v43 = sub_10000EDC8((uint64_t *)&unk_100487000);
  v44 = qword_1004AF890;
  v45 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v43 + 272);
  v46 = swift_retain(qword_1004AF890);
  v3[21] = v45(v42, v44, v46);
  v47 = swift_getKeyPath(&unk_1003B76B0);
  v48 = sub_10000EDC8(&qword_1004830F0);
  v49 = qword_1004AF890;
  v50 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v48 + 272);
  v51 = swift_retain(qword_1004AF890);
  v3[22] = v50(v47, v49, v51);
  v52 = sub_10000EDC8(&qword_100483B58);
  v53 = swift_getKeyPath(&unk_1003B76D8);
  v54 = qword_1004AF890;
  v55 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v52 + 272);
  v56 = swift_retain(qword_1004AF890);
  v3[23] = v55(v53, v54, v56);
  v57 = swift_getKeyPath(&unk_1003B7700);
  v58 = sub_10000EDC8(&qword_100482548);
  v59 = qword_1004AF890;
  v60 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v58 + 272);
  v61 = swift_retain(qword_1004AF890);
  v3[24] = v60(v57, v59, v61);
  sub_10000EDC8(&qword_100483FC0);
  v62 = swift_getKeyPath(&unk_1003B7728);
  v3[25] = MutableStateValue.__allocating_init(_:_:)(v62, v6);
  *((_BYTE *)v3 + 208) = 0;
  *(_OWORD *)(v3 + 27) = 0u;
  v63 = matrix_identity_float4x4.columns[1];
  v64 = matrix_identity_float4x4.columns[2];
  v65 = matrix_identity_float4x4.columns[3];
  *((_OWORD *)v3 + 15) = matrix_identity_float4x4.columns[0];
  *((simd_float4 *)v3 + 16) = v63;
  *((simd_float4 *)v3 + 17) = v64;
  *((simd_float4 *)v3 + 18) = v65;
  *((_OWORD *)v3 + 19) = 0u;
  *(_DWORD *)((char *)v3 + 319) = 0;
  *((_OWORD *)v3 + 21) = 0u;
  *((_OWORD *)v3 + 22) = 0u;
  *((_OWORD *)v3 + 23) = 0u;
  *((_OWORD *)v3 + 24) = 0u;
  *((_OWORD *)v3 + 25) = 0u;
  *((_OWORD *)v3 + 26) = 0u;
  *((_OWORD *)v3 + 27) = 0u;
  *((_DWORD *)v3 + 112) = 0;
  *(_OWORD *)(v3 + 57) = 0u;
  *((_DWORD *)v3 + 118) = 1106247680;
  *((_OWORD *)v3 + 30) = 0u;
  *((_OWORD *)v3 + 31) = 0u;
  *((_OWORD *)v3 + 32) = xmmword_1003B39C0;
  v66 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v67 = *(_QWORD *)(Defaults.snapReticleToEdges.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain(v67);
  v68 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v67);
  LOBYTE(v67) = objc_msgSend(v66, "BOOLForKey:", v68);

  *((_BYTE *)v3 + 528) = v67;
  v3[67] = 0xC000000000000000;
  *((_BYTE *)v3 + 544) = 3;
  v69 = sub_10000EDC8(&qword_10047E470);
  swift_allocObject(v69, *(unsigned int *)(v69 + 48), *(unsigned __int16 *)(v69 + 52));
  v3[69] = PassthroughSubject.init()(v70);
  *((_OWORD *)v3 + 35) = 0u;
  *((_BYTE *)v3 + 576) = 1;
  v3[9] = a2;
  v3[10] = a1;
  swift_retain(a1);
  swift_retain(a2);
  swift_release(v3);
  v73 = &type metadata for Configurations.Default;
  v74 = &protocol witness table for Configurations.Default;
  return StateObserver.init(configuration:)(v72);
}

double sub_1000FFA34(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 144) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

void sub_1000FFA54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  if (a19)
  {
    swift_bridgeObjectRelease(a19);

  }
}

uint64_t sub_1000FFAA4(uint64_t a1)
{
  sub_1000475C4(*(_QWORD *)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
  return a1;
}

uint64_t sub_1000FFB04(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 144);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1000FFB1C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 144))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

__n128 sub_1000FFB38(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __n128 a17)
{
  __n128 v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v24;
  __n128 v25;
  __n128 v34;

  type metadata accessor for MeasureCamera(0);
  v17 = (__n128)*(unint64_t *)&a1;
  v17.n128_u32[2] = 0;
  v18.n128_f64[0] = static MeasureCamera.unprojectPoint(_:viewProjectionInv:viewportSize:)(v17);
  v25 = v18;
  v19 = (__n128)*(unint64_t *)&a1;
  v19.n128_u32[2] = 1.0;
  v20.n128_f64[0] = static MeasureCamera.unprojectPoint(_:viewProjectionInv:viewportSize:)(v19);
  v24 = v20;
  v21.n128_f64[0] = simd_float4x4.position.getter(a2, a3, a4, a5);
  v34 = v21;
  v22.n128_f64[0] = simd_float4x4.position.getter(a6, a7, a8, a17);
  lineIntersection(line1P1:line1P2:line2P1:line2P2:)(v25, v24, v34, v22);
  return a2;
}

uint64_t sub_1000FFC5C(uint64_t result)
{
  *(_BYTE *)(result + 144) = 0;
  return result;
}

double sub_1000FFC64(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 144) = 1;
  return result;
}

uint64_t sub_1000FFC88(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 120);
  swift_retain(*(_QWORD *)(a1 + 136));
  swift_retain(v2);
  return a1;
}

uint64_t sub_1000FFCBC(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 136);
  swift_release(*(_QWORD *)(a1 + 120));
  swift_release(v2);
  return a1;
}

uint64_t sub_1000FFCF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 80, 7);
}

void sub_1000FFD00()
{
  uint64_t v0;

  sub_1000FCD28((uint64_t *)(v0 + 16));
}

_QWORD *sub_1000FFD08(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18]);
  return a1;
}

id sub_1000FFD6C(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  id v19;
  id v20;

  if (a19)
  {
    v20 = result;
    v19 = a18;
    swift_bridgeObjectRetain(a19);
    return v20;
  }
  return result;
}

uint64_t sub_1000FFDBC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v5;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(id *)(a1 + 136);
  swift_bridgeObjectRetain(v3);
  v5 = v2;
  return a1;
}

void sub_1000FFDFC(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1000F9AB8(a1, v1);
}

uint64_t sub_1000FFE44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1000FFE70(void **a1)
{
  uint64_t v1;

  sub_1000F61C0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1000FFE78()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000FFED0(uint64_t a1)
{
  return sub_1001002E4(a1, &type metadata accessor for WorldLineGuide, &qword_100484150, &qword_100484148, (uint64_t *)sub_1001333AC);
}

_QWORD *sub_1000FFEF4(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  int64_t v13;

  v2 = result[2];
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)result && v5 <= v3[3] >> 1)
  {
    if (v6[2])
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v13 = v4 + v2;
  else
    v13 = v4;
  result = sub_10005F44C(result, v13, 1, v3);
  v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v7 = v3[2];
  if ((v3[3] >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = (uint64_t)&v3[2 * v7 + 4];
  v9 = sub_10000EDC8(&qword_10047E548);
  result = (_QWORD *)swift_arrayInitWithCopy(v8, v6 + 4, v2, v9);
  if (!v2)
  {
LABEL_14:
    result = (_QWORD *)swift_bridgeObjectRelease(v6);
    *v1 = v3;
    return result;
  }
  v10 = v3[2];
  v11 = __OFADD__(v10, v2);
  v12 = v10 + v2;
  if (!v11)
  {
    v3[2] = v12;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_1000FFFEC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    sub_100106E38(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease(v10);
    specialized Array._endMutation()(v15);
    return;
  }
  __break(1u);
}

uint64_t sub_1001001A4(uint64_t a1)
{
  return sub_1001002E4(a1, &type metadata accessor for MeasureObject, &qword_100484188, &qword_10047C018, (uint64_t *)sub_100133400);
}

uint64_t sub_1001001C8(uint64_t a1)
{
  return sub_1001005E0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10010719C);
}

char *sub_1001001D4(char *result)
{
  char **v1;
  uint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  int64_t v11;

  v2 = *((_QWORD *)result + 2);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)result && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*((_QWORD *)v6 + 2))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v11 = v4 + v2;
  else
    v11 = v4;
  result = sub_100060538(result, v11, 1, v3);
  v3 = result;
  if (!*((_QWORD *)v6 + 2))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v7 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = (char *)swift_arrayInitWithCopy(&v3[304 * v7 + 32], v6 + 32, v2, &type metadata for WorldRectangleData);
  if (!v2)
  {
LABEL_14:
    result = (char *)swift_bridgeObjectRelease(v6);
    *v1 = v3;
    return result;
  }
  v8 = *((_QWORD *)v3 + 2);
  v9 = __OFADD__(v8, v2);
  v10 = v8 + v2;
  if (!v9)
  {
    *((_QWORD *)v3 + 2) = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1001002C0(uint64_t a1)
{
  return sub_1001002E4(a1, (unint64_t *)type metadata accessor for SpatialGenericPlatter, &qword_100484170, &qword_100484168, (uint64_t *)sub_1001333AC);
}

uint64_t sub_1001002E4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v25 = *v5;
  else
    v25 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v5);
  v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v12);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v27 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain(v12);
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease(*v5);
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v27;
LABEL_15:
    result = sub_100106FF0(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (uint64_t (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v12);
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    v23 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v23);
  }
  __break(1u);
  return result;
}

void sub_1001004F4(uint64_t a1)
{
  double **v1;
  uint64_t v2;
  double *v3;
  int64_t v4;
  int64_t v5;
  double *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  int64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v12 = v4 + v2;
  else
    v12 = v4;
  v3 = sub_100060788(isUniquelyReferenced_nonNull_native, v12, 1, (uint64_t)v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  memcpy(&v3[v8 + 4], (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v9 = *((_QWORD *)v3 + 2);
  v10 = __OFADD__(v9, v2);
  v11 = v9 + v2;
  if (!v10)
  {
    *((_QWORD *)v3 + 2) = v11;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_1001005D4(uint64_t a1)
{
  return sub_1001005E0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100107354);
}

uint64_t sub_1001005E0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_10010079C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = (uint64_t *)swift_allocObject(v1, 153, 7);
  v4 = a1[3];
  v5 = a1[4];
  v6 = sub_1000A8224((uint64_t)a1, v4);
  __chkstk_darwin(v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v8);
  v10 = sub_10010752C((uint64_t)v8, v3, v4, v5);
  sub_10000F690(a1);
  return v10;
}

void sub_100100854(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t (*v10)(void);

  v1 = (uint64_t)sub_1001035C8(0, a1);
  v2 = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v1 &= 0xFFFFFFFFFFFFFF8uLL;
    v3 = _CocoaArrayWrapper.endIndex.getter(v1);
    if (!v3)
      goto LABEL_17;
  }
  else
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
    {
LABEL_17:
      swift_bridgeObjectRelease(v2);
      return;
    }
  }
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      else
        v5 = *(id *)(v2 + 8 * i + 32);
      v6 = v5;
      (*(void (**)(void))((swift_isaMask & *v5) + 0x280))();
      v8 = v7;
      v9 = swift_bridgeObjectRelease(v7);
      if (!v8 && (*(uint64_t (**)(__n128))((swift_isaMask & *v6) + 0x2F0))(v9) == 1)
      {
        v10 = *(uint64_t (**)(void))((swift_isaMask & *v6) + 0xD0);
        if (v10() != 1 && v10() != 6)
          (*(void (**)(uint64_t))((swift_isaMask & *v6) + 0xD8))(9);
      }

    }
    goto LABEL_17;
  }
  __break(1u);
}

void sub_10010099C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  void (*v13)(void);
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];
  _BYTE v27[24];
  _BYTE v28[24];

  v1 = v0;
  v2 = (uint64_t)(v0 + 11);
  swift_beginAccess(v0 + 11, v28, 0, 0);
  v3 = v0[11];
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v6 = v0[12];
    v5 = v0[13];
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(v6);
    v25 = v5;
    swift_bridgeObjectRetain(v5);
    v7 = (uint64_t *)(v3 + 40);
    while (*(_QWORD *)(v6 + 16))
    {
      v8 = *(v7 - 1);
      v9 = *v7;
      swift_bridgeObjectRetain(*v7);
      v10 = sub_1000C80A8(v8, v9);
      if ((v11 & 1) == 0)
        goto LABEL_19;
      v12 = *(_QWORD **)(*(_QWORD *)(v6 + 56) + 8 * v10);
      v13 = *(void (**)(void))((swift_isaMask & *v12) + 0x308);
      v14 = v12;
      v13();

      swift_bridgeObjectRelease(v9);
      v7 += 2;
      if (!--v4)
      {
        swift_bridgeObjectRelease(v25);
        swift_bridgeObjectRelease(v6);
        swift_bridgeObjectRelease(v3);
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    if (v2 < 0)
      v24 = v2;
    else
      v24 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v16 = _CocoaArrayWrapper.endIndex.getter(v24);
    if (!v16)
      goto LABEL_24;
    goto LABEL_9;
  }
LABEL_7:
  swift_beginAccess(v2, v27, 33, 0);
  sub_10000EDC8(&qword_100484138);
  OrderedDictionary.removeAll()();
  swift_endAccess(v27);
  swift_beginAccess(v1 + 10, v27, 1, 0);
  v15 = v1[10];
  v1[10] = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v15);
  swift_beginAccess(v1 + 8, v26, 0, 0);
  v2 = v1[8];
  if ((unint64_t)v2 >> 62)
    goto LABEL_20;
  v16 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v1[8]);
  if (!v16)
  {
LABEL_24:
    swift_bridgeObjectRelease(v2);
    sub_1001053B0();
    return;
  }
LABEL_9:
  if (v16 >= 1)
  {
    for (i = 0; i != v16; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      }
      else
      {
        v22 = *(_QWORD *)(v2 + 8 * i + 32);
        swift_retain();
      }
      Strong = swift_unknownObjectWeakLoadStrong(v22 + 16, v21);
      if (Strong)
      {
        v18 = Strong;
        v19 = *(_QWORD *)(v22 + 24);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t))(v19 + 112))(ObjectType, v19);
        swift_release();
        swift_unknownObjectRelease(v18);
      }
      else
      {
        swift_release();
      }
    }
    goto LABEL_24;
  }
  __break(1u);
}

void sub_100100C00(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;

  v1 = (uint64_t)sub_1001035C8(1, a1);
  v2 = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v1 &= 0xFFFFFFFFFFFFFF8uLL;
    v3 = _CocoaArrayWrapper.endIndex.getter(v1);
    if (!v3)
      goto LABEL_16;
  }
  else
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
    {
LABEL_16:
      swift_bridgeObjectRelease(v2);
      return;
    }
  }
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      else
        v5 = *(id *)(v2 + 8 * i + 32);
      v6 = v5;
      (*(void (**)(void))((swift_isaMask & *v5) + 0x280))();
      v8 = v7;
      v9 = swift_bridgeObjectRelease(v7);
      if (!v8
        && (*(uint64_t (**)(__n128))((swift_isaMask & *v6) + 0x2F0))(v9) == 1
        && (*(uint64_t (**)(void))((swift_isaMask & *v6) + 0xD0))() != 6)
      {
        (*(void (**)(_QWORD))((swift_isaMask & *v6) + 0xD8))(0);
      }

    }
    goto LABEL_16;
  }
  __break(1u);
}

void sub_100100D3C()
{
  sub_100100D4C(9);
}

void sub_100100D44()
{
  sub_100100D4C(0);
}

void sub_100100D4C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  void (*v16)(void);
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  _BYTE v24[24];
  uint64_t v25;

  v25 = (uint64_t)_swiftEmptyArrayStorage;
  swift_beginAccess(v1 + 11, v24, 0, 0);
  v2 = v1[11];
  v3 = v1[12];
  v4 = v1[13];
  v5 = type metadata accessor for WorldLine(0);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v6 = OrderedDictionary.values.getter(v2, v3, v4, &type metadata for String, v5, &protocol witness table for String);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v12 = v6;
    else
      v12 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v12);
    if (!v7)
      goto LABEL_13;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v6);
    if (!v7)
      goto LABEL_13;
  }
  if (v7 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  v8 = 0;
  do
  {
    if ((v6 & 0xC000000000000001) != 0)
      v9 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
    else
      v9 = *(id *)(v6 + 8 * v8 + 32);
    v10 = v9;
    ++v8;
    v11 = (*(uint64_t (**)(void))((swift_isaMask & *v9) + 0x250))();
    sub_1001002E4(v11, &type metadata accessor for WorldPoint, &qword_100484140, &qword_100483F50, (uint64_t *)sub_1001333AC);

  }
  while (v7 != v8);
LABEL_13:
  swift_bridgeObjectRelease_n(v6, 2);
  v13 = v25;
  if ((unint64_t)v25 >> 62)
  {
    if (v25 < 0)
      v22 = v25;
    else
      v22 = v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v25);
    v14 = _CocoaArrayWrapper.endIndex.getter(v22);
  }
  else
  {
    v14 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v25);
  }
  if (!v14)
  {
LABEL_24:
    swift_bridgeObjectRelease_n(v13, 2);
    return;
  }
  if (v14 >= 1)
  {
    v15 = (id *)(v13 + 32);
    do
    {
      v16 = *(void (**)(void))((swift_isaMask & *(_QWORD *)*v15) + 0x280);
      v17 = *v15;
      v16();
      v19 = v18;
      v20 = swift_bridgeObjectRelease(v18);
      if (!v19 && (*(uint64_t (**)(__n128))((swift_isaMask & *v17) + 0x2F0))(v20) == 1)
      {
        v21 = *(uint64_t (**)(void))((swift_isaMask & *v17) + 0xD0);
        if (v21() != 1 && v21() != 6)
          (*(void (**)(uint64_t))((swift_isaMask & *v17) + 0xD8))(a1);
      }

      ++v15;
      --v14;
    }
    while (v14);
    goto LABEL_24;
  }
LABEL_30:
  __break(1u);
}

void sub_100101018(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  _QWORD *v10;
  uint64_t (*v11)(_BYTE *, __n128);
  __n128 v12;
  void (*v13)(_BYTE *, _QWORD);
  _BYTE v14[32];

  v3 = v2;
  swift_beginAccess(v2 + 88, v14, 32, 0);
  v6 = *(_QWORD *)(v2 + 96);
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_10;
  swift_bridgeObjectRetain(a2);
  v7 = sub_1000C80A8(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease(a2);
LABEL_10:
    swift_endAccess(v14);
    return;
  }
  v9 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v7);
  swift_endAccess(v14);
  v10 = v9;
  swift_bridgeObjectRelease(a2);
  sub_100102B04(v10, 0, 1);
  if ((objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable") & 1) == 0)
    goto LABEL_11;
  if (qword_10047AC58 != -1)
    swift_once(&qword_10047AC58, sub_1001833E8);
  if (byte_1004AF790 == 1 && ((*(uint64_t (**)(void))((swift_isaMask & *v10) + 0x2C8))() & 1) != 0)
  {
    v11 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v3 + 136) + 400);
    v12 = swift_retain();
    v13 = (void (*)(_BYTE *, _QWORD))v11(v14, v12);
    sub_100093DD8(a1, a2);
    v13(v14, 0);

    swift_release();
  }
  else
  {
LABEL_11:

  }
}

uint64_t sub_1001011A0(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t (*v17)(double);
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  uint64_t Strong;
  uint64_t v34;
  _QWORD v35[2];
  _QWORD *v36;
  _BYTE v37[24];

  v3 = v2;
  v5 = a1;
  v6 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8);
  v7 = v6();
  v9 = v8;
  v10 = (_QWORD *)(v2 + 88);
  swift_beginAccess(v2 + 88, v37, 32, 0);
  if (*(_QWORD *)(*(_QWORD *)(v2 + 96) + 16))
  {
    sub_1000C80A8(v7, v9);
    if ((v11 & 1) != 0)
    {
      swift_endAccess(v37);
      swift_bridgeObjectRelease(v9);
      return 0;
    }
  }
  swift_bridgeObjectRelease(v9);
  swift_endAccess(v37);
  if (!objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
    goto LABEL_9;
  if (qword_10047AC58 != -1)
    goto LABEL_31;
  while (1)
  {
    if (byte_1004AF790 == 1 && ((*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x2C8))() & 1) != 0)
      sub_100105004(v5);
LABEL_9:
    v13 = v6();
    v35[1] = v14;
    v36 = v5;
    v35[0] = v13;
    swift_beginAccess(v10, v37, 33, 0);
    v5 = v5;
    v15 = sub_10000EDC8(&qword_100484138);
    OrderedDictionary.subscript.setter(&v36, v35, v15);
    swift_endAccess(v37);
    v16 = sub_100105248(v5);
    v17 = *(uint64_t (**)(double))((swift_isaMask & *v5) + 0x250);
    v18 = v17(v16);
    v19 = v18;
    if ((v18 & 0xC000000000000001) == 0)
      break;
    v20 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v18);
LABEL_12:
    v10 = v20;
    swift_bridgeObjectRelease(v19);
    sub_100102060(v10, a2 & 1);

    v21 = ((uint64_t (*)(void))v17)();
    v19 = v21;
    if ((v21 & 0xC000000000000001) != 0)
      goto LABEL_29;
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      v22 = *(id *)(v21 + 40);
      goto LABEL_15;
    }
    __break(1u);
LABEL_31:
    swift_once(&qword_10047AC58, sub_1001833E8);
  }
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v20 = *(id *)(v18 + 32);
    goto LABEL_12;
  }
  __break(1u);
LABEL_29:
  v22 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v19);
LABEL_15:
  v23 = v22;
  swift_bridgeObjectRelease(v19);
  sub_100102060(v23, a2 & 1);

  v24 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x268))();
  sub_100102060(v24, a2 & 1);

  if ((a2 & 1) == 0)
    goto LABEL_37;
  swift_beginAccess(v3 + 64, v37, 0, 0);
  v25 = *(_QWORD *)(v3 + 64);
  if ((unint64_t)v25 >> 62)
  {
    if (v25 < 0)
      v34 = *(_QWORD *)(v3 + 64);
    else
      v34 = v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v3 + 64));
    result = _CocoaArrayWrapper.endIndex.getter(v34);
    v26 = result;
    if (!result)
      goto LABEL_36;
LABEL_18:
    if (v26 >= 1)
    {
      for (i = 0; i != v26; ++i)
      {
        if ((v25 & 0xC000000000000001) != 0)
        {
          v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v25);
        }
        else
        {
          v32 = *(_QWORD *)(v25 + 8 * i + 32);
          swift_retain();
        }
        Strong = swift_unknownObjectWeakLoadStrong(v32 + 16, v31);
        if (Strong)
        {
          v28 = Strong;
          v29 = *(_QWORD *)(v32 + 24);
          ObjectType = swift_getObjectType(Strong);
          (*(void (**)(_QWORD *, uint64_t, uint64_t))(v29 + 32))(v5, ObjectType, v29);
          swift_release();
          swift_unknownObjectRelease(v28);
        }
        else
        {
          swift_release();
        }
      }
      goto LABEL_36;
    }
    __break(1u);
  }
  else
  {
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(*(_QWORD *)(v3 + 64));
    if (v26)
      goto LABEL_18;
LABEL_36:
    swift_bridgeObjectRelease(v25);
LABEL_37:
    sub_1001053B0();
    return 1;
  }
  return result;
}

void sub_10010154C(uint64_t a1, _QWORD *a2, _QWORD *a3, char a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t (*v25)(__n128);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __n128 v29;
  uint64_t v30;
  _QWORD *v31;
  __n128 v32;
  char v33;
  uint64_t (*v34)(void);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v45;
  void (*v46)(void);
  _QWORD *v47;
  uint64_t v48;
  char v49;
  uint64_t (*v50)(void);
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(void);
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v61;
  void (*v62)(void);
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t (*v67)(void);
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t i;
  uint64_t v78;
  uint64_t v79;
  uint64_t ObjectType;
  uint64_t v81;
  uint64_t v82;
  uint64_t Strong;
  uint64_t (*v84)(void);
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  _BYTE v94[24];

  v7 = v4;
  v10 = (_QWORD *)a1;
  if (a2)
  {
    v11 = (*(uint64_t (**)(void))((swift_isaMask & *a2) + 0xB8))();
    v5 = v12;
    swift_beginAccess(v4 + 80, v94, 32, 0);
    v13 = *(_QWORD *)(v4 + 80);
    if (*(_QWORD *)(v13 + 16) && (v14 = sub_1000C80A8(v11, (uint64_t)v5), (v15 & 1) != 0))
    {
      v16 = *(_QWORD **)(*(_QWORD *)(v13 + 56) + 8 * v14);
      v17 = v16;
    }
    else
    {
      v16 = 0;
    }
    swift_bridgeObjectRelease(v5);
    a1 = swift_endAccess(v94);
    if (a3)
      goto LABEL_7;
LABEL_13:
    v23 = 0;
    goto LABEL_14;
  }
  v16 = 0;
  if (!a3)
    goto LABEL_13;
LABEL_7:
  v18 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a3) + 0xB8))(a1);
  v5 = v19;
  swift_beginAccess(v7 + 80, v94, 32, 0);
  v20 = *(_QWORD *)(v7 + 80);
  if (*(_QWORD *)(v20 + 16) && (v21 = sub_1000C80A8(v18, (uint64_t)v5), (v22 & 1) != 0))
  {
    v23 = *(_QWORD **)(*(_QWORD *)(v20 + 56) + 8 * v21);
    v24 = v23;
  }
  else
  {
    v23 = 0;
  }
  swift_bridgeObjectRelease(v5);
  a1 = swift_endAccess(v94);
LABEL_14:
  v25 = *(uint64_t (**)(__n128))((swift_isaMask & *v10) + 0x250);
  v26 = ((uint64_t (*)(uint64_t))v25)(a1);
  v27 = v26;
  if ((v26 & 0xC000000000000001) != 0)
  {
    v28 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v26);
  }
  else
  {
    if (!*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_61;
    }
    v28 = *(id *)(v26 + 32);
  }
  v5 = v28;
  v29 = swift_bridgeObjectRelease(v27);
  v30 = v25(v29);
  v27 = v30;
  if ((v30 & 0xC000000000000001) != 0)
  {
LABEL_61:
    v31 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v27);
    goto LABEL_20;
  }
  if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
    goto LABEL_63;
  }
  v31 = *(id *)(v30 + 40);
LABEL_20:
  v6 = v31;
  v32 = swift_bridgeObjectRelease(v27);
  v92 = v23;
  v93 = v16;
  v91 = v7;
  if (!v16)
    goto LABEL_29;
  v33 = a4;
  v34 = *(uint64_t (**)(void))((swift_isaMask & *v16) + 0xB8);
  v35 = v16;
  v36 = v34();
  v38 = v37;

  v39 = *(uint64_t (**)(void))((swift_isaMask & *v6) + 0xB8);
  v40 = v6;
  v41 = v39();
  v43 = v42;

  if (v36 == v41 && v38 == v43)
  {
    swift_bridgeObjectRelease_n(v38, 2);
  }
  else
  {
    v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v38, v41, v43, 0);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v43);
    if ((v45 & 1) == 0)
    {
      v46 = *(void (**)(void))((swift_isaMask & *v10) + 0x318);
      v47 = v35;
      v46();

      v23 = v92;
      v16 = v93;
      a4 = v33;
      v7 = v91;
      goto LABEL_29;
    }
  }
  a4 = v33;
  v48 = v33 & 1;
  v16 = v93;
  v7 = v91;
  sub_100102B04(v10, v93, v48);
  v23 = v92;
LABEL_29:
  if (!v23)
    goto LABEL_38;
  v49 = a4;
  v50 = *(uint64_t (**)(void))((swift_isaMask & *v23) + 0xB8);
  v51 = v23;
  v52 = v50();
  v54 = v53;

  v55 = *(uint64_t (**)(void))((swift_isaMask & *v5) + 0xB8);
  v56 = v5;
  v57 = v55();
  v59 = v58;

  if (v52 == v57 && v54 == v59)
  {
    swift_bridgeObjectRelease_n(v54, 2);
  }
  else
  {
    v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v54, v57, v59, 0);
    swift_bridgeObjectRelease(v54);
    swift_bridgeObjectRelease(v59);
    if ((v61 & 1) == 0)
    {
      v62 = *(void (**)(void))((swift_isaMask & *v10) + 0x320);
      v63 = v51;
      v62();

      v23 = v92;
      v16 = v93;
      a4 = v49;
      v7 = v91;
      goto LABEL_38;
    }
  }
  a4 = v49;
  v64 = v49 & 1;
  v7 = v91;
  v23 = v92;
  sub_100102B04(v10, v92, v64);
  v16 = v93;
LABEL_38:
  v27 = (*(uint64_t (**)(__n128))((swift_isaMask & *v5) + 0x238))(v32);
  if (!((unint64_t)v27 >> 62))
  {
    v65 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_40;
  }
LABEL_63:
  if (v27 < 0)
    v89 = v27;
  else
    v89 = v27 & 0xFFFFFFFFFFFFFF8;
  v65 = _CocoaArrayWrapper.endIndex.getter(v89);
LABEL_40:
  v66 = swift_bridgeObjectRelease(v27);
  if (!v65)
  {
    v67 = *(uint64_t (**)(void))((swift_isaMask & *v5) + 0xB8);
    v68 = v5;
    v69 = v67();
    v71 = v70;

    sub_100102788(v69, v71, a4 & 1);
    v66 = swift_bridgeObjectRelease(v71);
  }
  v72 = (*(uint64_t (**)(__n128))((swift_isaMask & *v6) + 0x238))(v66);
  v73 = v72;
  if ((unint64_t)v72 >> 62)
  {
    if (v72 >= 0)
      v72 &= 0xFFFFFFFFFFFFFF8uLL;
    v74 = _CocoaArrayWrapper.endIndex.getter(v72);
  }
  else
  {
    v74 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v73);
  if (v74)
  {
    if ((a4 & 1) != 0)
      goto LABEL_46;
LABEL_58:

    v6 = v16;
LABEL_75:

    return;
  }
  v84 = *(uint64_t (**)(void))((swift_isaMask & *v6) + 0xB8);
  v85 = v6;
  v86 = v84();
  v88 = v87;

  sub_100102788(v86, v88, a4 & 1);
  swift_bridgeObjectRelease(v88);
  if ((a4 & 1) == 0)
    goto LABEL_58;
LABEL_46:
  swift_beginAccess(v7 + 64, v94, 0, 0);
  v75 = *(_QWORD *)(v7 + 64);
  if (!((unint64_t)v75 >> 62))
  {
    v76 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v75);
    if (v76)
      goto LABEL_48;
LABEL_74:
    swift_bridgeObjectRelease(v75);

    v23 = v92;
    goto LABEL_75;
  }
  if (v75 < 0)
    v90 = v75;
  else
    v90 = v75 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v75);
  v76 = _CocoaArrayWrapper.endIndex.getter(v90);
  if (!v76)
    goto LABEL_74;
LABEL_48:
  if (v76 >= 1)
  {
    for (i = 0; i != v76; ++i)
    {
      if ((v75 & 0xC000000000000001) != 0)
      {
        v82 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v75);
      }
      else
      {
        v82 = *(_QWORD *)(v75 + 8 * i + 32);
        swift_retain();
      }
      Strong = swift_unknownObjectWeakLoadStrong(v82 + 16, v81);
      if (Strong)
      {
        v78 = Strong;
        v79 = *(_QWORD *)(v82 + 24);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v79 + 48))(v10, ObjectType, v79);
        swift_release();
        swift_unknownObjectRelease(v78);
      }
      else
      {
        swift_release();
      }
    }
    goto LABEL_74;
  }
  __break(1u);
}

void sub_100101BD8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t (*v10)(void);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (uint64_t)sub_1001035C8(0, a1);
  v2 = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v1 &= 0xFFFFFFFFFFFFFF8uLL;
    v3 = _CocoaArrayWrapper.endIndex.getter(v1);
    if (!v3)
      goto LABEL_15;
  }
  else
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
    {
LABEL_15:
      swift_bridgeObjectRelease(v2);
      return;
    }
  }
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      else
        v5 = *(id *)(v2 + 8 * i + 32);
      v6 = v5;
      (*(void (**)(void))((swift_isaMask & *v5) + 0x280))();
      v8 = v7;
      v9 = swift_bridgeObjectRelease(v7);
      if (!v8 && (*(uint64_t (**)(__n128))((swift_isaMask & *v6) + 0x2F0))(v9) == 1)
      {
        v10 = *(uint64_t (**)(void))((swift_isaMask & *v6) + 0xB8);
        v11 = v6;
        v12 = v10();
        v14 = v13;

        sub_100102788(v12, v14, 1);
        swift_bridgeObjectRelease(v14);
      }

    }
    goto LABEL_15;
  }
  __break(1u);
}

unint64_t sub_100101D38()
{
  uint64_t v0;
  void (*v1)(_QWORD *__return_ptr, __n128);
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  v1 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v0 + 72) + 144);
  v2 = swift_retain();
  v1(v14, v2);
  swift_release();
  v3 = v14[0];
  v4 = v14[1];
  v5 = v14[2];
  v13 = v14[0];
  swift_bridgeObjectRetain(v14[0]);
  v6 = sub_10000EDC8(&qword_10047C018);
  v7 = sub_10000EDC8(&qword_10047C020);
  swift_dynamicCast(v14, &v13, v6, v7, 7);
  v8 = v14[0];
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v12 = v8;
    else
      v12 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v9 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v8);
    if (!v9)
      goto LABEL_9;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v9)
    {
LABEL_9:
      swift_bridgeObjectRelease(v8);
      return v9;
    }
  }
  result = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_16:
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v8);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v8 + 8 * result + 32);
LABEL_8:
    v9 = (uint64_t)v11;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_100101E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v16)(uint64_t);
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD);
  _QWORD *v21;
  _BYTE v22[24];

  swift_beginAccess(v0 + 80, v22, 0, 0);
  v1 = *(_QWORD *)(v0 + 80);
  v2 = v1 + 64;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain(*(_QWORD *)(v0 + 80));
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_21;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v6)
      return swift_release(v1);
    v12 = *(_QWORD *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v6)
        return swift_release(v1);
      v12 = *(_QWORD *)(v2 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v6)
          return swift_release(v1);
        v12 = *(_QWORD *)(v2 + 8 * v8);
        if (!v12)
          break;
      }
    }
LABEL_20:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_21:
    v14 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v10 + 8);
    v15 = *(_QWORD **)(*(_QWORD *)(v1 + 56) + 8 * v10);
    v16 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v15) + 0x2F0);
    v17 = v15;
    v18 = swift_bridgeObjectRetain(v14);
    v19 = v16(v18);

    if (v19 == 1)
    {
      v20 = *(void (**)(_QWORD))((swift_isaMask & *v17) + 0xD8);
      v21 = v17;
      v20(0);

    }
    result = swift_bridgeObjectRelease(v14);
  }
  v13 = v11 + 3;
  if (v13 >= v6)
    return swift_release(v1);
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v6)
      return swift_release(v1);
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100102060(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  void (*v19)(uint64_t, _UNKNOWN **);
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t i;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t Strong;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];

  v3 = v2;
  v6 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8);
  v7 = v6();
  v9 = v8;
  swift_beginAccess(v2 + 80, v32, 32, 0);
  if (*(_QWORD *)(*(_QWORD *)(v2 + 80) + 16))
  {
    sub_1000C80A8(v7, v9);
    if ((v10 & 1) != 0)
    {
      swift_endAccess(v32);
      v11 = 0;
LABEL_22:
      swift_bridgeObjectRelease(v9);
      return v11;
    }
  }
  swift_bridgeObjectRelease(v9);
  v12 = swift_endAccess(v32);
  v13 = ((uint64_t (*)(uint64_t))v6)(v12);
  v15 = v14;
  swift_beginAccess(v2 + 80, v32, 33, 0);
  v16 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v2 + 80));
  v31 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v2 + 80) = 0x8000000000000000;
  sub_1000BCD40((uint64_t)v16, v13, v15, isUniquelyReferenced_nonNull_native);
  v18 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v2 + 80) = v31;
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v18);
  swift_endAccess(v32);
  v19 = *(void (**)(uint64_t, _UNKNOWN **))((swift_isaMask & *v16) + 0x2A0);
  v20 = swift_unknownObjectRetain(v2);
  v19(v20, &off_1004467F8);
  if ((a2 & 1) == 0)
    return 1;
  swift_beginAccess(v2 + 64, v32, 0, 0);
  v9 = *(_QWORD *)(v2 + 64);
  if (!((unint64_t)v9 >> 62))
  {
    v21 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v9);
    if (v21)
      goto LABEL_7;
LABEL_21:
    v11 = 1;
    goto LABEL_22;
  }
  if (v9 < 0)
    v30 = *(_QWORD *)(v2 + 64);
  else
    v30 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v3 + 64));
  result = _CocoaArrayWrapper.endIndex.getter(v30);
  v21 = result;
  if (!result)
    goto LABEL_21;
LABEL_7:
  if (v21 >= 1)
  {
    for (i = 0; i != v21; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
      }
      else
      {
        v28 = *(_QWORD *)(v9 + 8 * i + 32);
        swift_retain();
      }
      Strong = swift_unknownObjectWeakLoadStrong(v28 + 16, v27);
      if (Strong)
      {
        v24 = Strong;
        v25 = *(_QWORD *)(v28 + 24);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v25 + 8))(v16, ObjectType, v25);
        swift_release();
        swift_unknownObjectRelease(v24);
      }
      else
      {
        swift_release();
      }
    }
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_1001022D8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t (*v19)(void);
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v2 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8))();
  v4 = v3;
  v5 = a1;
  swift_retain();
  Synchronized.wrappedValue.getter(&v27, v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v27);
  v26 = v27;
  v27 = 0x8000000000000000;
  sub_1000BD018((uint64_t)v5, v2, v4, isUniquelyReferenced_nonNull_native);
  v8 = v27;
  v27 = v26;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v8);
  v26 = v27;
  Synchronized.wrappedValue.setter(&v26);
  v9 = swift_release();
  v10 = (*(uint64_t (**)(__n128))((swift_isaMask & *v5) + 0x238))(v9);
  v11 = v10;
  if ((unint64_t)v10 >> 62)
  {
    if (v10 >= 0)
      v10 &= 0xFFFFFFFFFFFFFF8uLL;
    v12 = _CocoaArrayWrapper.endIndex.getter(v10);
    if (v12)
      goto LABEL_3;
LABEL_24:
    swift_bridgeObjectRelease(v11);
    return;
  }
  v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v12)
    goto LABEL_24;
LABEL_3:
  if (v12 >= 1)
  {
    v13 = 0;
    v14 = *(uint64_t (**)(void))((swift_isaMask & *v5) + 0xD0);
    v24 = v11;
    v25 = v11 & 0xC000000000000001;
    while (1)
    {
      v17 = v25
          ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11)
          : *(id *)(v11 + 8 * v13 + 32);
      v18 = v17;
      v16 = v14();
      v19 = *(uint64_t (**)(void))((swift_isaMask & *v18) + 0xD0);
      v20 = v18;
      v21 = v19();

      if ((unint64_t)(v21 - 3) > 1 || v14() != 2)
        break;
      v22 = v20;
      v23 = v19();

      if (v23 == 3)
      {
        v11 = v24;
        if ((unint64_t)(v16 - 3) < 2)
          break;
      }
      else if (v16 == 3)
      {
        v11 = v24;
        if (v23 == 4)
          break;
      }
      else
      {
        v11 = v24;
        if ((v16 != 4) != (v23 == 4))
          break;
      }
LABEL_5:
      v15 = v20;
      v16 = v19();

LABEL_6:
      ++v13;
      sub_100102584(v20, v16);

      if (v12 == v13)
        goto LABEL_24;
    }
    if (v14() != 6)
      goto LABEL_6;
    goto LABEL_5;
  }
  __break(1u);
}

void sub_100102584(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  void *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;

  v4 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xD8))(a2);
  v5 = (_QWORD *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x268))(v4);
  (*(void (**)(uint64_t))((swift_isaMask & *v5) + 0xD8))(a2);

  v6 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x310))();
  v7 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x280))(v6);
  v8 = v7;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 >= 0)
      v7 &= 0xFFFFFFFFFFFFFF8uLL;
    v9 = _CocoaArrayWrapper.endIndex.getter(v7);
    if (!v9)
      goto LABEL_12;
  }
  else
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v9)
    {
LABEL_12:
      v13 = swift_bridgeObjectRelease(v8);
      v14 = (*(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0xB8))(v13);
      v16 = v15;
      v17 = a1;
      swift_retain();
      Synchronized.wrappedValue.getter(&v22, v18);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v22);
      v21 = v22;
      v22 = 0x8000000000000000;
      sub_1000BD018((uint64_t)v17, v14, v16, isUniquelyReferenced_nonNull_native);
      v20 = v22;
      v22 = v21;
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v20);
      v21 = v22;
      Synchronized.wrappedValue.setter(&v21);
      swift_release();
      sub_1001053B0();
      return;
    }
  }
  if (v9 >= 1)
  {
    for (i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
      else
        v11 = *(id *)(v8 + 8 * i + 32);
      v12 = v11;
      sub_1001022D8();

    }
    goto LABEL_12;
  }
  __break(1u);
}

void sub_100102788(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  void *v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t (*v15)(__n128);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  uint64_t (*v33)(void);
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t Strong;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _BYTE v48[24];

  v4 = v3;
  v8 = v3 + 80;
  swift_beginAccess(v3 + 80, v48, 32, 0);
  v9 = *(_QWORD *)(v3 + 80);
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_15;
  swift_bridgeObjectRetain(a2);
  v10 = sub_1000C80A8(a1, a2);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease(a2);
LABEL_15:
    swift_endAccess(v48);
    return;
  }
  v12 = *(void **)(*(_QWORD *)(v9 + 56) + 8 * v10);
  swift_endAccess(v48);
  v13 = v12;
  v14 = swift_bridgeObjectRelease(a2);
  v15 = *(uint64_t (**)(__n128))((swift_isaMask & *v13) + 0x238);
  v16 = v15(v14);
  v17 = v16;
  if ((unint64_t)v16 >> 62)
  {
    if (v16 >= 0)
      v16 &= 0xFFFFFFFFFFFFFF8uLL;
    v18 = _CocoaArrayWrapper.endIndex.getter(v16);
  }
  else
  {
    v18 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v19 = swift_bridgeObjectRelease(v17);
  if (v18 <= 0)
  {
    (*(void (**)(_QWORD, _QWORD, __n128))((swift_isaMask & *v13) + 0x2A0))(0, 0, v19);
    swift_beginAccess(v8, v48, 33, 0);
    v26 = (void *)sub_100093DB8(a1, a2);
    swift_endAccess(v48);

    if ((a3 & 1) == 0)
    {

      return;
    }
    swift_beginAccess(v4 + 64, v48, 0, 0);
    v4 = *(_QWORD *)(v4 + 64);
    if (!((unint64_t)v4 >> 62))
    {
      v27 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v4);
      if (!v27)
      {
LABEL_41:

        v44 = v4;
        goto LABEL_42;
      }
LABEL_19:
      if (v27 < 1)
      {
        __break(1u);
        return;
      }
      v28 = 0;
      v46 = v27;
      v47 = v4 & 0xC000000000000001;
      do
      {
        if (v47)
        {
          v42 = specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v4);
        }
        else
        {
          v42 = *(_QWORD *)(v4 + 8 * v28 + 32);
          swift_retain();
        }
        Strong = swift_unknownObjectWeakLoadStrong(v42 + 16, v41);
        if (Strong)
        {
          v29 = Strong;
          v30 = *(_QWORD *)(v42 + 24);
          ObjectType = swift_getObjectType(Strong);
          v32 = v4;
          v33 = *(uint64_t (**)(void))((swift_isaMask & *v13) + 0xB8);
          v34 = v13;
          v35 = v13;
          v36 = v33();
          v38 = v37;

          v39 = v36;
          v13 = v35;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 16))(v39, v38, ObjectType, v30);
          v40 = v38;
          v4 = v32;
          v27 = v46;
          swift_bridgeObjectRelease(v40);
          swift_release();
          swift_unknownObjectRelease(v29);
        }
        else
        {
          swift_release();
        }
        ++v28;
      }
      while (v27 != v28);
      goto LABEL_41;
    }
LABEL_37:
    if (v4 < 0)
      v45 = v4;
    else
      v45 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v27 = _CocoaArrayWrapper.endIndex.getter(v45);
    if (!v27)
      goto LABEL_41;
    goto LABEL_19;
  }
  v20 = v15(v19);
  v21 = v20;
  if ((unint64_t)v20 >> 62)
  {
    if (v20 >= 0)
      v20 &= 0xFFFFFFFFFFFFFF8uLL;
    v22 = _CocoaArrayWrapper.endIndex.getter(v20);
    if (!v22)
      goto LABEL_35;
    goto LABEL_8;
  }
  v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v22)
  {
LABEL_8:
    if (v22 >= 1)
    {
      for (i = 0; i != v22; ++i)
      {
        if ((v21 & 0xC000000000000001) != 0)
          v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v21);
        else
          v24 = *(id *)(v21 + 8 * i + 32);
        v25 = v24;
        sub_100102B04(v24, 0, a3 & 1);

      }
      goto LABEL_35;
    }
    __break(1u);
    goto LABEL_37;
  }
LABEL_35:

  v44 = v21;
LABEL_42:
  swift_bridgeObjectRelease(v44);
}

void sub_100102B04(_QWORD *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t Strong;
  _QWORD *v27;
  uint64_t v28;
  __n128 v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __n128 v39;
  uint64_t v40;
  void *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t ObjectType;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  __n128 v68;
  uint64_t v69;
  id v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  id v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  id v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint64_t (*v106)(void);
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  _QWORD *v113;
  unint64_t v114;
  uint64_t (*v115)(void);
  _QWORD *v116;
  uint64_t v117;
  _QWORD v118[3];
  _BYTE v119[24];
  id v120;

  v8 = a1;
  v9 = &swift_isaMask;
  v10 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x308))();
  v115 = *(uint64_t (**)(void))((swift_isaMask & *v8) + 0xB8);
  v11 = ((uint64_t (*)(uint64_t))v115)(v10);
  v13 = v12;
  v118[0] = v11;
  v118[1] = v12;
  swift_beginAccess(v3 + 88, v119, 33, 0);
  v14 = sub_10000EDC8(&qword_100484138);
  OrderedDictionary.removeValue(forKey:)(&v120, v118, v14);
  swift_endAccess(v119);
  swift_bridgeObjectRelease(v13);

  v117 = v3;
  v15.n128_f64[0] = sub_1001055B0(v8);
  v112 = a3;
  v116 = v8;
  if ((a3 & 1) != 0)
  {
    v16 = v3;
    swift_beginAccess(v3 + 64, v118, 0, 0);
    v4 = *(_QWORD *)(v3 + 64);
    if ((unint64_t)v4 >> 62)
    {
      if (v4 < 0)
        v16 = *(_QWORD *)(v3 + 64);
      else
        v16 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v5 = _CocoaArrayWrapper.endIndex.getter(v16);
      if (v5)
        goto LABEL_4;
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v4);
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
          goto LABEL_84;
        for (i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0)
          {
            v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
          }
          else
          {
            v25 = *(_QWORD *)(v4 + 8 * i + 32);
            swift_retain();
          }
          Strong = swift_unknownObjectWeakLoadStrong(v25 + 16, v24);
          if (Strong)
          {
            v18 = Strong;
            v19 = *(_QWORD *)(v25 + 24);
            swift_getObjectType(Strong);
            v20 = v115();
            v22 = v21;
            v9 = &swift_isaMask;
            (*(void (**)(uint64_t))(v19 + 40))(v20);
            v23 = v22;
            v8 = v116;
            swift_bridgeObjectRelease(v23);
            swift_release();
            swift_unknownObjectRelease(v18);
          }
          else
          {
            swift_release();
          }
        }
      }
    }
    v15 = swift_bridgeObjectRelease(v4);
  }
  v115 = *(uint64_t (**)(void))((swift_isaMask & *v8) + 0x268);
  v27 = (_QWORD *)((uint64_t (*)(__n128))v115)(v15);
  v16 = (*(uint64_t (**)(void))((swift_isaMask & *v27) + 0x238))();

  if ((unint64_t)v16 >> 62)
    goto LABEL_74;
  v28 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_20:
  v29 = swift_bridgeObjectRelease(v16);
  if (!v28)
  {
    v42 = (_QWORD *)((uint64_t (*)(__n128))v115)(v29);
    (*(void (**)(_QWORD, _QWORD))((*v9 & *v42) + 0x2A0))(0, 0);

    v43 = (_QWORD *)v115();
    v44 = (*(uint64_t (**)(void))((*v9 & *v43) + 0xB8))();
    v46 = v45;

    swift_beginAccess(v117 + 80, v119, 33, 0);
    v16 = sub_100093DB8(v44, v46);
    swift_endAccess(v119);
    swift_bridgeObjectRelease(v46);

    if ((v112 & 1) == 0)
      goto LABEL_92;
    v16 = v117;
    swift_beginAccess(v117 + 64, v119, 0, 0);
    v4 = *(_QWORD *)(v117 + 64);
    if (!((unint64_t)v4 >> 62))
    {
      a2 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)(v117 + 64));
      if (!a2)
      {
LABEL_91:
        v47 = swift_bridgeObjectRelease(v4);
        goto LABEL_92;
      }
LABEL_33:
      if (a2 < 1)
        goto LABEL_114;
      v5 = 0;
      do
      {
        if ((v4 & 0xC000000000000001) != 0)
        {
          v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v4);
        }
        else
        {
          v16 = *(_QWORD *)(v4 + 8 * v5 + 32);
          swift_retain();
        }
        v58 = swift_unknownObjectWeakLoadStrong(v16 + 16, v57);
        if (v58)
        {
          v48 = v58;
          v49 = *(_QWORD *)(v16 + 24);
          ObjectType = swift_getObjectType(v58);
          v51 = (_QWORD *)v115();
          v52 = (*(uint64_t (**)(void))((*v9 & *v51) + 0xB8))();
          v54 = v53;

          v55 = v52;
          v9 = &swift_isaMask;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 16))(v55, v54, ObjectType, v49);
          v56 = v54;
          v8 = v116;
          swift_bridgeObjectRelease(v56);
          swift_release();
          swift_unknownObjectRelease(v48);
        }
        else
        {
          swift_release();
        }
        ++v5;
      }
      while (a2 != v5);
      goto LABEL_91;
    }
LABEL_87:
    if (v4 < 0)
      v16 = v4;
    else
      v16 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    a2 = _CocoaArrayWrapper.endIndex.getter(v16);
    if (!a2)
      goto LABEL_91;
    goto LABEL_33;
  }
  v30 = (void *)a2;
  if (!a2)
  {
    v5 = *(_QWORD *)((*v9 & *v8) + 0x250);
    v31 = ((uint64_t (*)(__n128))v5)(v29);
    v16 = v31;
    if ((v31 & 0xC000000000000001) != 0)
      goto LABEL_85;
    if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v32 = *(id *)(v31 + 32);
      goto LABEL_25;
    }
    __break(1u);
    goto LABEL_87;
  }
  while (1)
  {
    v5 = v30;
    v71 = (_QWORD *)((uint64_t (*)(id))v115)((id)a2);
    v72 = (*(uint64_t (**)(void))((*v9 & *v71) + 0x238))();

    if ((unint64_t)v72 >> 62)
    {
      if (v72 < 0)
        v16 = v72;
      else
        v16 = v72 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v72);
      a2 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease(v72);
      if (!a2)
      {
LABEL_82:

        swift_bridgeObjectRelease(v72);
        v9 = &swift_isaMask;
        v8 = v116;
        goto LABEL_92;
      }
    }
    else
    {
      a2 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!a2)
        goto LABEL_82;
    }
    if (a2 >= 1)
    {
      v9 = 0;
      v113 = v30;
      v114 = v72 & 0xC000000000000001;
      v73 = v72;
      while (1)
      {
        if (v114)
          v79 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v72);
        else
          v79 = *(id *)(v72 + 8 * (_QWORD)v9 + 32);
        v8 = v79;
        v80 = (_QWORD *)v115();
        v16 = (*(uint64_t (**)(void))((swift_isaMask & *v80) + 0xB8))();
        v82 = v81;

        v83 = (*(uint64_t (**)(void))((swift_isaMask & *v8) + 0x250))();
        v84 = v83;
        if ((v83 & 0xC000000000000001) != 0)
        {
          v85 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v83);
        }
        else
        {
          if (!*(_QWORD *)((v83 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_74:
            if (v16 < 0)
              v96 = v16;
            else
              v96 = v16 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v16);
            v28 = _CocoaArrayWrapper.endIndex.getter(v96);
            swift_bridgeObjectRelease(v16);
            goto LABEL_20;
          }
          v85 = *(id *)(v83 + 32);
        }
        v86 = v85;
        v87 = swift_bridgeObjectRelease(v84);
        v4 = (*(uint64_t (**)(__n128))((swift_isaMask & *v86) + 0xB8))(v87);
        v89 = v88;

        if (v16 == v4 && v82 == v89)
        {
          swift_bridgeObjectRelease_n(v82, 2);
          v72 = v73;
          v74 = (_QWORD *)a2;
        }
        else
        {
          v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v82, v4, v89, 0);
          swift_bridgeObjectRelease(v89);
          swift_bridgeObjectRelease(v82);
          v72 = v73;
          v74 = (_QWORD *)a2;
          if ((v16 & 1) == 0)
          {
            v91 = (id)v5;
            v76 = (uint64_t)v8;
            v77 = 0;
            v78 = v113;
            goto LABEL_58;
          }
        }
        v75 = (id)v5;
        v76 = (uint64_t)v8;
        v77 = v113;
        v78 = 0;
LABEL_58:
        sub_10010154C(v76, v77, v78, 1);
        v9 = (_QWORD *)((char *)v9 + 1);

        if (v74 == v9)
          goto LABEL_82;
      }
    }
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    v32 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
LABEL_25:
    v33 = v32;
    v34 = swift_bridgeObjectRelease(v16);
    v35 = (*(uint64_t (**)(__n128))((*v9 & *v33) + 0xB8))(v34);
    v37 = v36;

    v4 = v117 + 80;
    swift_beginAccess(v117 + 80, v119, 32, 0);
    if (!*(_QWORD *)(*(_QWORD *)(v117 + 80) + 16))
      break;
    sub_1000C80A8(v35, v37);
    if ((v38 & 1) == 0)
      break;
    swift_endAccess(v119);
    v39 = swift_bridgeObjectRelease(v37);
    v40 = ((uint64_t (*)(__n128))v5)(v39);
    v16 = v40;
    if ((v40 & 0xC000000000000001) != 0)
      goto LABEL_115;
    if (!*(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_117:
      v111 = 1;
      goto LABEL_118;
    }
    v41 = *(void **)(v40 + 32);
LABEL_50:
    v70 = v41;
LABEL_51:
    v30 = v70;
    swift_bridgeObjectRelease(v16);
  }
  swift_bridgeObjectRelease(v37);
  v59 = swift_endAccess(v119);
  v60 = ((uint64_t (*)(uint64_t))v5)(v59);
  v16 = v60;
  if ((v60 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      v61 = *(id *)(v60 + 40);
      goto LABEL_45;
    }
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    v111 = 0;
LABEL_118:
    v70 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v111, v16);
    goto LABEL_51;
  }
  while (1)
  {
    v61 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v16);
LABEL_45:
    v62 = v61;
    v63 = swift_bridgeObjectRelease(v16);
    v64 = (*(uint64_t (**)(__n128))((*v9 & *v62) + 0xB8))(v63);
    v66 = v65;

    swift_beginAccess(v4, v119, 32, 0);
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      sub_1000C80A8(v64, v66);
      if ((v67 & 1) != 0)
      {
        swift_endAccess(v119);
        v68 = swift_bridgeObjectRelease(v66);
        v69 = ((uint64_t (*)(__n128))v5)(v68);
        v16 = v69;
        if ((v69 & 0xC000000000000001) != 0)
          goto LABEL_117;
        if (*(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          return;
        }
        v41 = *(void **)(v69 + 40);
        goto LABEL_50;
      }
    }
    swift_bridgeObjectRelease(v66);
    v92 = swift_endAccess(v119);
    v16 = (uint64_t)v115;
    v93 = (_QWORD *)((uint64_t (*)(uint64_t))v115)(v92);
    (*(void (**)(uint64_t))((*v9 & *v93) + 0x2F8))(1);

    v94 = (_QWORD *)v115();
    (*(void (**)(_QWORD))((*v9 & *v94) + 0xD8))(0);

    v95 = (_QWORD *)v115();
    (*(void (**)(void))((*v9 & *v95) + 0x330))();

LABEL_92:
    v97 = (*(uint64_t (**)(__n128))((*v9 & *v8) + 0x250))(v47);
    v98 = v97;
    if ((unint64_t)v97 >> 62)
    {
      if (v97 >= 0)
        v97 &= 0xFFFFFFFFFFFFFF8uLL;
      a2 = _CocoaArrayWrapper.endIndex.getter(v97);
      if (!a2)
        goto LABEL_110;
    }
    else
    {
      a2 = *(_QWORD *)((v97 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!a2)
        goto LABEL_110;
    }
    if (a2 >= 1)
      break;
    __break(1u);
  }
  v99 = 0;
  do
  {
    if ((v98 & 0xC000000000000001) != 0)
      v100 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v99, v98);
    else
      v100 = *(id *)(v98 + 8 * v99 + 32);
    v101 = v100;
    v102 = (*(uint64_t (**)(void))((*v9 & *v100) + 0x238))();
    v103 = v102;
    if ((unint64_t)v102 >> 62)
    {
      if (v102 >= 0)
        v102 &= 0xFFFFFFFFFFFFFF8uLL;
      v104 = _CocoaArrayWrapper.endIndex.getter(v102);
    }
    else
    {
      v104 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v105 = swift_bridgeObjectRelease(v103);
    if (!v104)
    {
      (*(void (**)(_QWORD, _QWORD, __n128))((*v9 & *v101) + 0x2A0))(0, 0, v105);
      v106 = *(uint64_t (**)(void))((*v9 & *v101) + 0xB8);
      v107 = v101;
      v108 = v106();
      v110 = v109;

      sub_100102788(v108, v110, v112 & 1);
      swift_bridgeObjectRelease(v110);
    }
    ++v99;

  }
  while (a2 != v99);
LABEL_110:
  swift_bridgeObjectRelease(v98);
  sub_1001053B0();
}

_QWORD *sub_1001035C8(char a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(__n128);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  _QWORD *result;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  BOOL v37;
  unint64_t v38;
  uint64_t (*v39)(void);
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t (*v57)(void);
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  __n128 v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  unint64_t v73;
  _BOOL8 v74;
  uint64_t v75;
  char v76;
  unint64_t v77;
  char v78;
  _QWORD *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(__n128);
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  __n128 v89;
  _QWORD *v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t (*v108)(void);
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  _QWORD *v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  unint64_t v124;
  _BOOL8 v125;
  uint64_t v126;
  char v127;
  unint64_t v128;
  char v129;
  _QWORD *v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __n128 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  int64_t v149;
  int64_t v150;
  unint64_t v151;
  unint64_t i;
  int64_t v153;
  unint64_t v154;
  int64_t v155;
  uint64_t v156;
  id v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  int64_t v167;
  int64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  int64_t v172;
  unint64_t v173;
  int64_t v174;
  _QWORD *v175;
  uint64_t (*v176)(uint64_t);
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  _QWORD *v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t (*v189)(__n128);
  uint64_t v190;
  uint64_t (*v191)(void);
  _QWORD *v192;
  unint64_t v193;
  void *v194;
  _QWORD *v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  uint64_t v200;
  char v201[32];

  v187 = (_QWORD *)(v2 + 80);
  swift_beginAccess(v2 + 80, v201, 0, 0);
  v4 = *(_QWORD *)(v2 + 80);
  v5 = *(uint64_t (**)(__n128))((swift_isaMask & *a2) + 0xB8);
  v6 = swift_bridgeObjectRetain(v4);
  v189 = v5;
  v7 = ((uint64_t (*)(uint64_t))v5)(v6);
  v9 = v8;
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v9);
    return _swiftEmptyArrayStorage;
  }
  sub_1000C80A8(v7, v8);
  v11 = v10;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v9);
  result = _swiftEmptyArrayStorage;
  if ((v11 & 1) != 0)
  {
    v200 = (uint64_t)_swiftEmptyArrayStorage;
    v13 = a2;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
    v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v15 >= v14 >> 1)
      goto LABEL_137;
    while (1)
    {
      v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
      v17 = specialized Array._endMutation()(v16);
      v15 = ((uint64_t (*)(uint64_t))v189)(v17);
      v19 = v18;
      v20 = (id)v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
      sub_1000BCD40((uint64_t)v20, v15, v19, isUniquelyReferenced_nonNull_native);
      v199 = _swiftEmptyDictionarySingleton;
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(0x8000000000000000);
      v13 = v200;
      if (!((unint64_t)v200 >> 62))
      {
        if (*(uint64_t *)((v200 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
          goto LABEL_6;
LABEL_142:
        v140 = swift_bridgeObjectRelease(v13);
        if ((a1 & 1) != 0)
        {
          v141 = v189(v140);
          v143 = v142;
          v144 = (void *)sub_100093DB8(v141, v142);
          swift_bridgeObjectRelease(v143);

          v145 = v199 + 8;
          v146 = 1 << *((_BYTE *)v199 + 32);
          v147 = -1;
          if (v146 < 64)
            v147 = ~(-1 << v146);
          v148 = v147 & v199[8];
          v149 = (unint64_t)(v146 + 63) >> 6;
          swift_bridgeObjectRetain(v199);
          v150 = 0;
          if (!v148)
            goto LABEL_147;
LABEL_146:
          v151 = __clz(__rbit64(v148));
          v148 &= v148 - 1;
          for (i = v151 | (v150 << 6); ; i = __clz(__rbit64(v154)) + (v150 << 6))
          {
            v156 = *(_QWORD *)(v199[6] + 16 * i + 8);
            v157 = *(id *)(v199[7] + 8 * i);
            v158 = swift_bridgeObjectRetain(v156);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v158);
            v160 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v159 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v160 >= v159 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v159 > 1, v160 + 1, 1);
            v161 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v160, v157);
            specialized Array._endMutation()(v161);

            swift_bridgeObjectRelease(v156);
            if (v148)
              goto LABEL_146;
LABEL_147:
            v153 = v150 + 1;
            if (__OFADD__(v150, 1))
            {
              __break(1u);
              goto LABEL_194;
            }
            if (v153 >= v149)
              goto LABEL_191;
            v154 = v145[v153];
            ++v150;
            if (!v154)
            {
              v150 = v153 + 1;
              if (v153 + 1 >= v149)
                goto LABEL_191;
              v154 = v145[v150];
              if (!v154)
              {
                v150 = v153 + 2;
                if (v153 + 2 >= v149)
                  goto LABEL_191;
                v154 = v145[v150];
                if (!v154)
                {
                  v155 = v153 + 3;
                  if (v155 >= v149)
                    goto LABEL_191;
                  v154 = v145[v155];
                  if (!v154)
                  {
                    while (1)
                    {
                      v150 = v155 + 1;
                      if (__OFADD__(v155, 1))
                        break;
                      if (v150 >= v149)
                        goto LABEL_191;
                      v154 = v145[v150];
                      ++v155;
                      if (v154)
                        goto LABEL_160;
                    }
LABEL_195:
                    __break(1u);
LABEL_196:
                    __break(1u);
LABEL_197:
                    result = (_QWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
                    __break(1u);
                    return result;
                  }
                  v150 = v155;
                }
              }
            }
LABEL_160:
            v148 = (v154 - 1) & v154;
          }
        }
        v162 = *v187;
        v163 = *v187 + 64;
        v164 = 1 << *(_BYTE *)(*v187 + 32);
        v165 = -1;
        if (v164 < 64)
          v165 = ~(-1 << v164);
        v166 = v165 & *(_QWORD *)(*v187 + 64);
        v167 = (unint64_t)(v164 + 63) >> 6;
        swift_bridgeObjectRetain(*v187);
        v168 = 0;
        while (1)
        {
          if (v166)
          {
            v170 = __clz(__rbit64(v166));
            v166 &= v166 - 1;
            v171 = v170 | (v168 << 6);
          }
          else
          {
            v172 = v168 + 1;
            if (__OFADD__(v168, 1))
            {
LABEL_194:
              __break(1u);
              goto LABEL_195;
            }
            if (v172 >= v167)
              goto LABEL_191;
            v173 = *(_QWORD *)(v163 + 8 * v172);
            ++v168;
            if (!v173)
            {
              v168 = v172 + 1;
              if (v172 + 1 >= v167)
                goto LABEL_191;
              v173 = *(_QWORD *)(v163 + 8 * v168);
              if (!v173)
              {
                v168 = v172 + 2;
                if (v172 + 2 >= v167)
                  goto LABEL_191;
                v173 = *(_QWORD *)(v163 + 8 * v168);
                if (!v173)
                {
                  v174 = v172 + 3;
                  if (v174 >= v167)
                    goto LABEL_191;
                  v173 = *(_QWORD *)(v163 + 8 * v174);
                  if (!v173)
                  {
                    while (1)
                    {
                      v168 = v174 + 1;
                      if (__OFADD__(v174, 1))
                        goto LABEL_196;
                      if (v168 >= v167)
                        break;
                      v173 = *(_QWORD *)(v163 + 8 * v168);
                      ++v174;
                      if (v173)
                        goto LABEL_185;
                    }
LABEL_191:
                    swift_release();
                    swift_bridgeObjectRelease(v199);
                    return _swiftEmptyArrayStorage;
                  }
                  v168 = v174;
                }
              }
            }
LABEL_185:
            v166 = (v173 - 1) & v173;
            v171 = __clz(__rbit64(v173)) + (v168 << 6);
          }
          v169 = *(_QWORD *)(*(_QWORD *)(v162 + 48) + 16 * v171 + 8);
          v175 = *(_QWORD **)(*(_QWORD *)(v162 + 56) + 8 * v171);
          v176 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v175) + 0xB8);
          v177 = v175;
          v178 = swift_bridgeObjectRetain(v169);
          v179 = v176(v178);
          v181 = v180;

          if (v199[2] && (sub_1000C80A8(v179, v181), (v182 & 1) != 0))
          {

            swift_bridgeObjectRelease(v169);
            v169 = v181;
          }
          else
          {
            swift_bridgeObjectRelease(v181);
            v183 = v177;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v183);
            v185 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v184 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v185 >= v184 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v184 > 1, v185 + 1, 1);
            v186 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v185, v183);
            specialized Array._endMutation()(v186);

          }
          swift_bridgeObjectRelease(v169);
        }
      }
      if (v200 < 0)
        v138 = v200;
      else
        v138 = v200 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v200);
      v139 = _CocoaArrayWrapper.endIndex.getter(v138);
      swift_bridgeObjectRelease(v200);
      if (v139 < 1)
        goto LABEL_142;
      while (1)
      {
LABEL_6:
        if ((unint64_t)v13 >> 62)
        {
          if (v13 < 0)
            v134 = v13;
          else
            v134 = v13 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v13);
          v135 = _CocoaArrayWrapper.endIndex.getter(v134);
          swift_bridgeObjectRelease(v13);
          if (!v135)
            goto LABEL_135;
        }
        else
        {
          v14 = v13 & 0xFFFFFFFFFFFFF8;
          if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_135;
        }
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v13);
        if (!(_DWORD)isUniquelyReferenced_nonNull_bridgeObject || v13 < 0 || (v13 & 0x4000000000000000) != 0)
        {
          isUniquelyReferenced_nonNull_bridgeObject = sub_10002874C(v13);
          v13 = isUniquelyReferenced_nonNull_bridgeObject;
          v200 = isUniquelyReferenced_nonNull_bridgeObject;
        }
        v14 = v13 & 0xFFFFFFFFFFFFFF8;
        v23 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v23)
          break;
        v24 = v23 - 1;
        v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 8 * v24 + 0x20);
        *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) = v24;
        v25 = specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
        v13 = (uint64_t)&swift_isaMask;
        v198 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v15) + 0x238))(v25);
        v192 = (_QWORD *)v15;
        v26 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v15) + 0x250))();
        if (v26)
        {
          v13 = v26;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          v15 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v27 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v15 >= v27 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v15 + 1, 1);
          v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
          specialized Array._endMutation()(v28);

        }
        v29 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v192) + 0x268))();
        if (v29)
        {
          v13 = v29;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          v15 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v30 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v15 >= v30 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v15 + 1, 1);
          v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
          specialized Array._endMutation()(v31);

        }
        v32 = v198;
        if (!((unint64_t)v198 >> 62))
        {
          v33 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v33)
            goto LABEL_23;
          goto LABEL_116;
        }
        if (v198 < 0)
          v13 = v198;
        else
          v13 = v198 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v198);
        v33 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease(v198);
        if (v33)
        {
LABEL_23:
          v34 = 0;
          v191 = *(uint64_t (**)(void))((swift_isaMask & *v192) + 0xB8);
          v190 = v33;
          do
          {
            if ((v198 & 0xC000000000000001) != 0)
            {
              v35 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v32);
            }
            else
            {
              v14 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v34 >= v14)
                goto LABEL_132;
              v35 = *(id *)(v198 + 32 + 8 * v34);
            }
            v36 = v35;
            v37 = __OFADD__(v34, 1);
            v38 = v34 + 1;
            if (v37)
              goto LABEL_128;
            v39 = *(uint64_t (**)(void))((swift_isaMask & *v35) + 0x250);
            v40 = v39();
            v13 = v40;
            v195 = v36;
            if ((v40 & 0xC000000000000001) != 0)
            {
              v41 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v40);
            }
            else
            {
              v14 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (!v14)
                goto LABEL_129;
              v41 = *(id *)(v40 + 32);
            }
            v42 = v41;
            v43 = swift_bridgeObjectRelease(v13);
            v15 = (*(uint64_t (**)(__n128))((swift_isaMask & *v42) + 0xB8))(v43);
            v45 = v44;

            v46 = v192;
            v47 = v191();
            v49 = v48;

            if (v15 == v47 && v45 == v49)
            {
              v51 = swift_bridgeObjectRelease_n(v45, 2);
            }
            else
            {
              v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v45, v47, v49, 0);
              swift_bridgeObjectRelease(v45);
              v51 = swift_bridgeObjectRelease(v49);
              if ((v15 & 1) == 0)
              {
                v52 = ((uint64_t (*)(__n128))v39)(v51);
                v13 = v52;
                if ((v52 & 0xC000000000000001) == 0)
                {
                  v14 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
                  if (!v14)
                    goto LABEL_134;
                  v53 = *(void **)(v52 + 32);
                  goto LABEL_45;
                }
                v133 = 0;
                goto LABEL_106;
              }
            }
            v54 = ((uint64_t (*)(__n128))v39)(v51);
            v13 = v54;
            if ((v54 & 0xC000000000000001) == 0)
            {
              v14 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v14 < 2)
                goto LABEL_130;
              v53 = *(void **)(v54 + 40);
LABEL_45:
              v55 = v53;
              goto LABEL_46;
            }
            v133 = 1;
LABEL_106:
            v55 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v133, v13);
LABEL_46:
            v56 = v55;
            swift_bridgeObjectRelease(v13);
            v57 = *(uint64_t (**)(void))((swift_isaMask & *v56) + 0xB8);
            v58 = v56;
            v59 = v57();
            v61 = v60;
            v194 = v58;

            if (!v199[2])
            {
              swift_bridgeObjectRelease(v61);
LABEL_50:
              v65 = v194;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v65);
              v67 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v66 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v67 >= v66 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1);
              v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v65);
              specialized Array._endMutation()(v68);
              v15 = (unint64_t)v65;
              v69 = v57();
              v13 = v70;
              v71 = swift_isUniquelyReferenced_nonNull_native(v199);
              v73 = sub_1000C80A8(v69, v13);
              v14 = v199[2];
              v74 = (v72 & 1) == 0;
              v75 = v14 + v74;
              if (__OFADD__(v14, v74))
                goto LABEL_131;
              v76 = v72;
              if (v199[3] >= v75)
              {
                if ((v71 & 1) != 0)
                {
                  v79 = v199;
                  if ((v72 & 1) == 0)
                    goto LABEL_56;
                }
                else
                {
                  sub_1000BF3FC();
                  v79 = v199;
                  if ((v76 & 1) == 0)
                    goto LABEL_56;
                }
              }
              else
              {
                sub_1000B92B4(v75, v71);
                v77 = sub_1000C80A8(v69, v13);
                if ((v76 & 1) != (v78 & 1))
                  goto LABEL_197;
                v73 = v77;
                v79 = v199;
                if ((v76 & 1) == 0)
                {
LABEL_56:
                  v79[(v73 >> 6) + 8] |= 1 << v73;
                  v80 = (uint64_t *)(v79[6] + 16 * v73);
                  *v80 = v69;
                  v80[1] = v13;
                  *(_QWORD *)(v79[7] + 8 * v73) = v15;
                  v81 = v79[2];
                  v37 = __OFADD__(v81, 1);
                  v14 = v81 + 1;
                  if (v37)
                    goto LABEL_133;
                  v79[2] = v14;
                  swift_bridgeObjectRetain(v13);
                  goto LABEL_61;
                }
              }
              v82 = v79[7];

              *(_QWORD *)(v82 + 8 * v73) = v15;
LABEL_61:
              v199 = v79;
              swift_bridgeObjectRelease(v13);
              v64 = swift_bridgeObjectRelease(0x8000000000000000);
              goto LABEL_62;
            }
            sub_1000C80A8(v59, v61);
            v63 = v62;
            v64 = swift_bridgeObjectRelease(v61);
            if ((v63 & 1) == 0)
              goto LABEL_50;
LABEL_62:
            v83 = *(uint64_t (**)(__n128))((swift_isaMask & *v195) + 0x268);
            v84 = (_QWORD *)v83(v64);
            v85 = (*(uint64_t (**)(void))((swift_isaMask & *v84) + 0xB8))();
            v13 = v86;

            if (v199[2])
            {
              sub_1000C80A8(v85, v13);
              v88 = v87;
              v89 = swift_bridgeObjectRelease(v13);
              v90 = v195;
              if ((v88 & 1) != 0)
                goto LABEL_69;
            }
            else
            {
              v89 = swift_bridgeObjectRelease(v13);
              v90 = v195;
            }
            v91 = v83(v89);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v91);
            v93 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v92 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v93 >= v92 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v92 > 1, v93 + 1, 1);
            v94 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v93, v91);
            v95 = specialized Array._endMutation()(v94);
            v96 = (_QWORD *)((uint64_t (*)(uint64_t))v83)(v95);
            v97 = (*(uint64_t (**)(void))((swift_isaMask & *v96) + 0xB8))();
            v99 = v98;

            v100 = ((uint64_t (*)(void))v83)();
            v101 = swift_isUniquelyReferenced_nonNull_native(v199);
            sub_1000BCD40(v100, v97, v99, v101);
            v13 = 0x8000000000000000;
            swift_bridgeObjectRelease(v99);
            v89 = swift_bridgeObjectRelease(0x8000000000000000);
LABEL_69:
            v193 = v38;
            v102 = (*(uint64_t (**)(__n128))((swift_isaMask & *v90) + 0x280))(v89);
            v15 = v102;
            if ((unint64_t)v102 >> 62)
            {
              if (v102 < 0)
                v13 = v102;
              else
                v13 = v102 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v102);
              v103 = _CocoaArrayWrapper.endIndex.getter(v13);
              swift_bridgeObjectRelease(v15);
              if (!v103)
                goto LABEL_24;
LABEL_71:
              v196 = v15;
              v197 = v15 & 0xC000000000000001;
              v104 = 4;
              while (2)
              {
                v106 = v104 - 4;
                if (v197)
                {
                  v107 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v104 - 4, v15);
                  v13 = v104 - 3;
                  if (__OFADD__(v106, 1))
                    goto LABEL_125;
                }
                else
                {
                  v107 = *(id *)(v15 + 8 * v104);
                  v13 = v104 - 3;
                  if (__OFADD__(v106, 1))
                  {
LABEL_125:
                    __break(1u);
LABEL_126:
                    __break(1u);
LABEL_127:
                    __break(1u);
LABEL_128:
                    __break(1u);
LABEL_129:
                    __break(1u);
LABEL_130:
                    __break(1u);
LABEL_131:
                    __break(1u);
LABEL_132:
                    __break(1u);
LABEL_133:
                    __break(1u);
LABEL_134:
                    __break(1u);
LABEL_135:
                    __break(1u);
                    goto LABEL_136;
                  }
                }
                v108 = *(uint64_t (**)(void))((swift_isaMask & *v107) + 0xB8);
                v109 = v107;
                v110 = v108();
                v112 = v111;

                if (v199[2])
                {
                  sub_1000C80A8(v110, v112);
                  if ((v113 & 1) != 0)
                  {

                    swift_bridgeObjectRelease(v112);
LABEL_74:
                    ++v104;
                    if (v13 == v103)
                      goto LABEL_24;
                    continue;
                  }
                }
                break;
              }
              v15 = v103;
              swift_bridgeObjectRelease(v112);
              v114 = v109;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v114);
              v116 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v115 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v116 >= v115 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v115 > 1, v116 + 1, 1);
              v117 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v116, v114);
              specialized Array._endMutation()(v117);
              v118 = v114;
              v119 = v108();
              v121 = v120;
              v122 = swift_isUniquelyReferenced_nonNull_native(v199);
              v124 = sub_1000C80A8(v119, v121);
              v14 = v199[2];
              v125 = (v123 & 1) == 0;
              v126 = v14 + v125;
              if (__OFADD__(v14, v125))
                goto LABEL_126;
              v127 = v123;
              if (v199[3] >= v126)
              {
                if ((v122 & 1) != 0)
                {
                  v130 = v199;
                  if ((v123 & 1) == 0)
                    goto LABEL_92;
                }
                else
                {
                  sub_1000BF3FC();
                  v130 = v199;
                  if ((v127 & 1) == 0)
                    goto LABEL_92;
                }
              }
              else
              {
                sub_1000B92B4(v126, v122);
                v128 = sub_1000C80A8(v119, v121);
                if ((v127 & 1) != (v129 & 1))
                  goto LABEL_197;
                v124 = v128;
                v130 = v199;
                if ((v127 & 1) == 0)
                {
LABEL_92:
                  v130[(v124 >> 6) + 8] |= 1 << v124;
                  v131 = (uint64_t *)(v130[6] + 16 * v124);
                  *v131 = v119;
                  v131[1] = v121;
                  *(_QWORD *)(v130[7] + 8 * v124) = v118;
                  v132 = v130[2];
                  v37 = __OFADD__(v132, 1);
                  v14 = v132 + 1;
                  if (v37)
                    goto LABEL_127;
                  v130[2] = v14;
                  swift_bridgeObjectRetain(v121);
                  goto LABEL_73;
                }
              }
              v105 = v130[7];

              *(_QWORD *)(v105 + 8 * v124) = v118;
LABEL_73:
              v199 = v130;

              swift_bridgeObjectRelease(v121);
              swift_bridgeObjectRelease(0x8000000000000000);
              v103 = v15;
              v15 = v196;
              goto LABEL_74;
            }
            v103 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v103)
              goto LABEL_71;
LABEL_24:

            swift_bridgeObjectRelease(v15);
            v32 = v198;
            v34 = v193;
          }
          while (v193 != v190);
        }
LABEL_116:

        swift_bridgeObjectRelease(v32);
        v13 = v200;
        if ((unint64_t)v200 >> 62)
        {
          if (v200 < 0)
            v136 = v200;
          else
            v136 = v200 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v200);
          v137 = _CocoaArrayWrapper.endIndex.getter(v136);
          swift_bridgeObjectRelease(v200);
          if (v137 <= 0)
            goto LABEL_142;
        }
        else if (*(uint64_t *)((v200 & 0xFFFFFFFFFFFFF8) + 0x10) <= 0)
        {
          goto LABEL_142;
        }
      }
LABEL_136:
      __break(1u);
LABEL_137:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
    }
  }
  return result;
}

double sub_10010461C()
{
  uint64_t v0;
  double result;
  void (*v2)(uint64_t *__return_ptr, __n128);
  __n128 v3;
  uint64_t v4;
  void (*v5)(uint64_t *__return_ptr, __n128);
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *__return_ptr, __n128);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  BOOL v19;
  unint64_t v20;
  void *v21;
  id v22;
  void *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t Strong;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  id v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t k;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  char v79;
  uint64_t v80;
  uint64_t j;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t ObjectType;
  unint64_t v112;
  _BYTE v113[24];
  char v114[24];
  char v115[24];
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;

  if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
  {
    v2 = *(void (**)(uint64_t *__return_ptr, __n128))(**(_QWORD **)(v0 + 120) + 144);
    v3 = swift_retain();
    v2(&v116, v3);
    swift_release();
    swift_bridgeObjectRelease(v116);
    v4 = v117;
    swift_bridgeObjectRelease(v118);
    v5 = *(void (**)(uint64_t *__return_ptr, __n128))(**(_QWORD **)(v0 + 120) + 144);
    v6 = swift_retain();
    v5(&v116, v6);
    swift_release();
    v7 = v116;
    swift_bridgeObjectRelease(v117);
    swift_bridgeObjectRelease(v118);
    v116 = v4;
    sub_1001002E4(v7, &type metadata accessor for WorldLineGuide, &qword_100484150, &qword_100484148, (uint64_t *)sub_1001333AC);
    v8 = v116;
    v9 = *(void (**)(uint64_t *__return_ptr, __n128))(**(_QWORD **)(v0 + 120) + 144);
    v10 = swift_retain();
    v9(&v116, v10);
    swift_release();
    v11 = v116;
    v12 = v118;
    swift_bridgeObjectRelease(v117);
    swift_bridgeObjectRelease(v11);
    v116 = v8;
    sub_1001002E4(v12, &type metadata accessor for WorldLineGuide, &qword_100484150, &qword_100484148, (uint64_t *)sub_1001333AC);
    v13 = v116;
    v106 = (uint64_t *)(v0 + 128);
    swift_beginAccess(v0 + 128, &v116, 1, 0);
    v96 = v0;
    v14 = *(_QWORD *)(v0 + 128);
    if ((unint64_t)v14 >> 62)
      goto LABEL_128;
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 128));
LABEL_4:
    v107 = v13;
    v95 = (unint64_t)v13 >> 62;
    if (v15)
    {
      if ((unint64_t)v13 >> 62)
      {
        if (v13 < 0)
          v94 = v13;
        else
          v94 = v13 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v13);
        v108 = _CocoaArrayWrapper.endIndex.getter(v94);
        swift_bridgeObjectRelease(v13);
      }
      else
      {
        v108 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v104 = v14 & 0xC000000000000001;
      v101 = (uint64_t *)(v96 + 64);
      swift_beginAccess(v96 + 64, v115, 0, 0);
      v16 = 0;
      v99 = v14 + 32;
      v100 = v14 & 0xFFFFFFFFFFFFFF8;
      v103 = v13 & 0xC000000000000001;
      v97 = v15;
      v98 = v14;
      do
      {
        if (v104)
        {
          v17 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v14);
        }
        else
        {
          if (v16 >= *(_QWORD *)(v100 + 16))
            goto LABEL_122;
          v17 = *(id *)(v99 + 8 * v16);
        }
        v18 = v17;
        v19 = __OFADD__(v16++, 1);
        if (v19)
        {
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
          goto LABEL_121;
        }
        if (v108)
        {
          v20 = v16;
          if (v103)
          {
            swift_bridgeObjectRetain(v13);
            v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
          }
          else
          {
            v21 = *(void **)(v13 + 32);
            swift_bridgeObjectRetain(v13);
            v22 = v21;
          }
          v23 = v22;
          type metadata accessor for WorldLineGuide(0);
          v24 = static NSObject.== infix(_:_:)(v23, v18);

          if ((v24 & 1) != 0)
          {
LABEL_8:

            swift_bridgeObjectRelease(v13);
            v16 = v20;
            continue;
          }
          if (v108 != 1)
          {
            if (v103)
            {
              v41 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v13);
              v42 = static NSObject.== infix(_:_:)(v41, v18);
              swift_unknownObjectRelease(v41);
              if ((v42 & 1) != 0)
                goto LABEL_8;
              if (v108 != 2)
              {
                v43 = 2;
                while (1)
                {
                  v44 = specialized _ArrayBuffer._getElementSlowPath(_:)(v43, v13);
                  v45 = v43 + 1;
                  if (__OFADD__(v43, 1))
                    break;
                  v46 = v44;
                  v47 = static NSObject.== infix(_:_:)(v44, v18);
                  swift_unknownObjectRelease(v46);
                  if ((v47 & 1) != 0)
                    goto LABEL_8;
                  ++v43;
                  if (v45 == v108)
                    goto LABEL_20;
                }
LABEL_121:
                __break(1u);
LABEL_122:
                __break(1u);
LABEL_123:
                __break(1u);
LABEL_124:
                __break(1u);
LABEL_125:
                __break(1u);
                goto LABEL_126;
              }
            }
            else
            {
              v48 = *(id *)(v13 + 40);
              v49 = static NSObject.== infix(_:_:)(v48, v18);

              if ((v49 & 1) != 0)
                goto LABEL_8;
              if (v108 != 2)
              {
                v50 = 6;
                while (1)
                {
                  v51 = v50 - 3;
                  if (__OFADD__(v50 - 4, 1))
                    break;
                  v52 = *(id *)(v13 + 8 * v50);
                  v53 = static NSObject.== infix(_:_:)(v52, v18);

                  if ((v53 & 1) != 0)
                    goto LABEL_8;
                  ++v50;
                  if (v51 == v108)
                    goto LABEL_20;
                }
LABEL_126:
                __break(1u);
LABEL_127:
                __break(1u);
LABEL_128:
                if (v14 < 0)
                  v91 = v14;
                else
                  v91 = v14 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v14);
                v15 = _CocoaArrayWrapper.endIndex.getter(v91);
                goto LABEL_4;
              }
            }
          }
LABEL_20:
          swift_bridgeObjectRelease(v13);
          v16 = v20;
        }
        v25 = *v101;
        if ((unint64_t)*v101 >> 62)
        {
          if (v25 < 0)
            v54 = *v101;
          else
            v54 = v25 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v101);
          v26 = _CocoaArrayWrapper.endIndex.getter(v54);
          if (!v26)
          {
LABEL_53:

            swift_bridgeObjectRelease(v25);
            continue;
          }
        }
        else
        {
          v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(*v101);
          if (!v26)
            goto LABEL_53;
        }
        if (v26 < 1)
          goto LABEL_123;
        v102 = v16;
        for (i = 0; i != v26; ++i)
        {
          if ((v25 & 0xC000000000000001) != 0)
          {
            v39 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v25);
          }
          else
          {
            v39 = *(_QWORD *)(v25 + 8 * i + 32);
            swift_retain();
          }
          Strong = swift_unknownObjectWeakLoadStrong(v39 + 16, v38);
          if (Strong)
          {
            v28 = Strong;
            v29 = *(_QWORD *)(v39 + 24);
            ObjectType = swift_getObjectType(Strong);
            v30 = *(uint64_t (**)(void))((swift_isaMask & *v18) + 0xB8);
            v31 = v26;
            v32 = v18;
            v33 = v30();
            v34 = v18;
            v36 = v35;

            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 96))(v33, v36, ObjectType, v29);
            v26 = v31;
            v37 = v36;
            v18 = v34;
            swift_bridgeObjectRelease(v37);
            swift_release();
            swift_unknownObjectRelease(v28);
          }
          else
          {
            swift_release();
          }
        }

        swift_bridgeObjectRelease(v25);
        v13 = v107;
        v15 = v97;
        v14 = v98;
        v16 = v102;
      }
      while (v16 != v15);
    }
    swift_bridgeObjectRelease(v14);
    if (v95)
    {
      if (v13 < 0)
        v92 = v13;
      else
        v92 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
      v55 = _CocoaArrayWrapper.endIndex.getter(v92);
      if (v55)
        goto LABEL_56;
    }
    else
    {
      v55 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v13);
      if (v55)
      {
LABEL_56:
        v110 = (uint64_t *)(v96 + 64);
        v112 = v13 & 0xC000000000000001;
        swift_beginAccess(v96 + 64, v114, 0, 0);
        v14 = 0;
        v109 = v13 & 0xFFFFFFFFFFFFFF8;
        v105 = v13 + 32;
        do
        {
          if (v112)
          {
            v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v13);
          }
          else
          {
            if ((unint64_t)v14 >= *(_QWORD *)(v109 + 16))
              goto LABEL_125;
            v56 = *(id *)(v105 + 8 * v14);
          }
          v13 = (uint64_t)v56;
          v19 = __OFADD__(v14++, 1);
          if (v19)
            goto LABEL_119;
          v57 = *v106;
          if ((unint64_t)*v106 >> 62)
          {
            if (v57 < 0)
              v88 = *v106;
            else
              v88 = v57 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain_n(*v106, 2);
            v58 = _CocoaArrayWrapper.endIndex.getter(v88);
            if (!v58)
              goto LABEL_90;
          }
          else
          {
            v58 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain_n(*v106, 2);
            if (!v58)
              goto LABEL_90;
          }
          if ((v57 & 0xC000000000000001) != 0)
            v59 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v57);
          else
            v59 = *(id *)(v57 + 32);
          v60 = v59;
          type metadata accessor for WorldLineGuide(0);
          v61 = static NSObject.== infix(_:_:)(v60, v13);

          if ((v61 & 1) == 0)
          {
            if (v58 != 1)
            {
              if ((v57 & 0xC000000000000001) != 0)
              {
                v71 = 1;
                while (1)
                {
                  v72 = specialized _ArrayBuffer._getElementSlowPath(_:)(v71, v57);
                  v73 = v71 + 1;
                  if (__OFADD__(v71, 1))
                    break;
                  v74 = v72;
                  v75 = static NSObject.== infix(_:_:)(v72, v13);
                  swift_unknownObjectRelease(v74);
                  if ((v75 & 1) != 0)
                    goto LABEL_68;
                  ++v71;
                  if (v73 == v58)
                    goto LABEL_90;
                }
                __break(1u);
                goto LABEL_118;
              }
              v76 = 5;
              do
              {
                v77 = v76 - 3;
                if (__OFADD__(v76 - 4, 1))
                  goto LABEL_120;
                v78 = *(id *)(v57 + 8 * v76);
                v79 = static NSObject.== infix(_:_:)(v78, v13);

                if ((v79 & 1) != 0)
                  goto LABEL_68;
                ++v76;
              }
              while (v77 != v58);
            }
LABEL_90:
            swift_bridgeObjectRelease_n(v57, 2);
            v62 = *v110;
            if ((unint64_t)*v110 >> 62)
            {
              if (v62 < 0)
                v89 = *v110;
              else
                v89 = v62 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(*v110);
              v80 = _CocoaArrayWrapper.endIndex.getter(v89);
              if (!v80)
                goto LABEL_57;
            }
            else
            {
              v80 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain(*v110);
              if (!v80)
                goto LABEL_57;
            }
            if (v80 < 1)
              goto LABEL_124;
            for (j = 0; j != v80; ++j)
            {
              if ((v62 & 0xC000000000000001) != 0)
              {
                v86 = specialized _ArrayBuffer._getElementSlowPath(_:)(j, v62);
              }
              else
              {
                v86 = *(_QWORD *)(v62 + 8 * j + 32);
                swift_retain();
              }
              v87 = swift_unknownObjectWeakLoadStrong(v86 + 16, v85);
              if (v87)
              {
                v82 = v87;
                v83 = *(_QWORD *)(v86 + 24);
                v84 = swift_getObjectType(v87);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 88))(v13, v84, v83);
                swift_release();
                swift_unknownObjectRelease(v82);
              }
              else
              {
                swift_release();
              }
            }
            goto LABEL_57;
          }
LABEL_68:
          swift_bridgeObjectRelease_n(v57, 2);
          v62 = *v110;
          if ((unint64_t)*v110 >> 62)
          {
            if (v62 < 0)
              v90 = *v110;
            else
              v90 = v62 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(*v110);
            v63 = _CocoaArrayWrapper.endIndex.getter(v90);
            if (!v63)
              goto LABEL_57;
          }
          else
          {
            v63 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain(*v110);
            if (!v63)
              goto LABEL_57;
          }
          if (v63 < 1)
            goto LABEL_127;
          for (k = 0; k != v63; ++k)
          {
            if ((v62 & 0xC000000000000001) != 0)
            {
              v66 = specialized _ArrayBuffer._getElementSlowPath(_:)(k, v62);
            }
            else
            {
              v66 = *(_QWORD *)(v62 + 8 * k + 32);
              swift_retain();
            }
            v67 = swift_unknownObjectWeakLoadStrong(v66 + 16, v65);
            if (v67)
            {
              v68 = v67;
              v69 = *(_QWORD *)(v66 + 24);
              v70 = swift_getObjectType(v67);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 104))(v13, v70, v69);
              swift_release();
              swift_unknownObjectRelease(v68);
            }
            else
            {
              swift_release();
            }
          }
LABEL_57:

          swift_bridgeObjectRelease(v62);
          v13 = v107;
        }
        while (v14 != v55);
      }
    }
    swift_bridgeObjectRelease(v13);
    v93 = *v106;
    *v106 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v93);
    swift_beginAccess(v106, v113, 33, 0);
    sub_1001002E4(v13, &type metadata accessor for WorldLineGuide, &qword_100484150, &qword_100484148, (uint64_t *)sub_1001333AC);
    *(_QWORD *)&result = swift_endAccess(v113).n128_u64[0];
  }
  return result;
}

void sub_100105004(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(void);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  void (*v23)(_QWORD *__return_ptr, __n128);
  __n128 v24;
  float v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD *, __n128);
  __n128 v31;
  void (*v32)(_QWORD *, _QWORD, __n128);
  uint64_t v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  uint64_t v46;
  _QWORD __src[64];
  __n128 __dst[32];

  v2 = v1;
  v4 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x250);
  v5 = a1;
  v6 = v4();
  v7 = v6;
  if ((v6 & 0xC000000000000001) != 0)
  {
    v8 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
  }
  else
  {
    if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_12;
    }
    v8 = *(id *)(v6 + 32);
  }
  v9 = v8;
  v10 = swift_bridgeObjectRelease(v7);
  v11.n128_f64[0] = (*(double (**)(__n128))((swift_isaMask & *v9) + 0x2B0))(v10);
  v44 = v12;
  v45 = v11;
  v42 = v14;
  v43 = v13;

  v15 = v4();
  v5 = (_QWORD *)v15;
  if ((v15 & 0xC000000000000001) != 0)
  {
LABEL_12:
    v16 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v5);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
    return;
  }
  v16 = *(id *)(v15 + 40);
LABEL_7:
  v17 = v16;
  v18 = swift_bridgeObjectRelease(v5);
  v19.n128_f64[0] = (*(double (**)(__n128))((swift_isaMask & *v17) + 0x2B0))(v18);
  v40 = v20;
  v41 = v19;
  v38 = v22;
  v39 = v21;

  v23 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v2 + 144) + 144);
  v24 = swift_retain();
  v23(__src, v24);
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  v25 = sub_100091DAC(__dst, v45, v44, v43, v42, v41, v40, v39, v38);
  v26 = sub_100012C00((uint64_t)__dst);
  v27 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8))(v26);
  v29 = v28;
  if (v25 > 1.0)
    v25 = 1.0;
  v30 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)(v2 + 136) + 400);
  v31 = swift_retain();
  v32 = (void (*)(_QWORD *, _QWORD, __n128))v30(__src, v31);
  v34 = v33;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v33 + 32));
  v46 = *(_QWORD *)(v34 + 32);
  *(_QWORD *)(v34 + 32) = 0x8000000000000000;
  sub_1000BCEC4(v27, v29, isUniquelyReferenced_nonNull_native, v25);
  v36 = *(_QWORD *)(v34 + 32);
  *(_QWORD *)(v34 + 32) = v46;
  swift_bridgeObjectRelease(v29);
  v37 = swift_bridgeObjectRelease(v36);
  v32(__src, 0, v37);
  swift_release();
}

double sub_100105248(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  uint64_t (*v5)(_BYTE *, __n128);
  _QWORD *v6;
  __n128 v7;
  void (*v8)(_BYTE *, _QWORD, __n128);
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[32];

  v2 = v1;
  if (((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x2C8))() & 1) != 0)
  {
    v5 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v2 + 72) + 400);
    v6 = a1;
    v7 = swift_retain();
    v8 = (void (*)(_BYTE *, _QWORD, __n128))v5(v22, v7);
    v10 = v9;
    v20 = *v9;
    swift_bridgeObjectRetain(v20);
    v11 = sub_10000EDC8(&qword_10047C018);
    v12 = sub_10000EDC8(&qword_10047C020);
    v13 = swift_dynamicCast(&v21, &v20, v11, v12, 7);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
    v15 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v14 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v15 >= v14 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
    v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v6);
    specialized Array._endMutation()(v16);
    v20 = v21;
    swift_dynamicCast(&v19, &v20, v12, v11, 7);
    v17 = v19;
    v18 = swift_bridgeObjectRelease(*v10);
    *v10 = v17;
    v8(v22, 0, v18);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_1001053B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  __n128 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD aBlock[6];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v16 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v8 = (void *)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (*((_QWORD *)&xmmword_1004AF258 + 1))
  {
    v9 = (void *)Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
    aBlock[4] = sub_10010750C;
    aBlock[5] = v0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003ECA0;
    aBlock[3] = &unk_100446808;
    v10 = _Block_copy(aBlock);
    v11 = v8;
    v12 = swift_retain();
    static DispatchQoS.unspecified.getter(v12);
    v17 = _swiftEmptyArrayStorage;
    v13 = sub_100030E1C();
    v14 = sub_10000EDC8((uint64_t *)&unk_10047E430);
    v15 = sub_100043310((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v17, v14, v15, v1, v13);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v10);
    _Block_release(v10);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v1);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

double sub_1001055B0(_QWORD *a1)
{
  uint64_t v1;
  double result;
  uint64_t (*v4)(_BYTE *, __n128);
  __n128 v5;
  void (*v6)(_BYTE *, _QWORD, __n128);
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[32];

  if (((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x2C8))() & 1) != 0)
  {
    v4 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v1 + 72) + 400);
    v5 = swift_retain();
    v6 = (void (*)(_BYTE *, _QWORD, __n128))v4(v17, v5);
    v8 = v7;
    v15 = *v7;
    swift_bridgeObjectRetain(v15);
    v9 = sub_10000EDC8(&qword_10047C018);
    v10 = sub_10000EDC8(&qword_10047C020);
    swift_dynamicCast(&v16, &v15, v9, v10, 7);
    sub_10005B8BC((uint64_t)a1);

    v15 = v16;
    swift_dynamicCast(&v14, &v15, v10, v9, 7);
    v12 = v14;
    v13 = swift_bridgeObjectRelease(*v8);
    *v8 = v12;
    v6(v17, 0, v13);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_1001056D4(uint64_t a1)
{
  void (*v2)(uint64_t *__return_ptr, __n128);
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *(void (**)(uint64_t *__return_ptr, __n128))(**(_QWORD **)(a1 + 72) + 144);
  v3 = swift_retain();
  v2(&v19, v3);
  swift_release();
  v4 = v19;
  v5 = v20;
  v6 = v21;
  sub_1001C6B68(v19, v20, v21);
  v8 = v7;
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  v9 = *(unsigned __int8 *)(a1 + 152);
  *(_BYTE *)(a1 + 152) = v8 & 1;
  if ((v8 & 1) != v9)
  {
    swift_beginAccess(a1 + 64, &v19, 0, 0);
    v10 = *(_QWORD *)(a1 + 64);
    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v18 = *(_QWORD *)(a1 + 64);
      else
        v18 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(a1 + 64));
      v11 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (v11)
        goto LABEL_4;
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)(a1 + 64));
      if (v11)
      {
LABEL_4:
        if (v11 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v11; ++i)
        {
          if ((v10 & 0xC000000000000001) != 0)
          {
            v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v10);
          }
          else
          {
            v14 = *(_QWORD *)(v10 + 8 * i + 32);
            swift_retain();
          }
          Strong = swift_unknownObjectWeakLoadStrong(v14 + 16, v13);
          v16 = *(_QWORD *)(v14 + 24);
          swift_release();
          if (Strong)
          {
            ObjectType = swift_getObjectType(Strong);
            (*(void (**)(_QWORD, uint64_t, uint64_t))(v16 + 128))(*(unsigned __int8 *)(a1 + 152), ObjectType, v16);
            swift_unknownObjectRelease(Strong);
          }
        }
      }
    }
    swift_bridgeObjectRelease(v10);
  }
}

void sub_10010586C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t i;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t Strong;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t j;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  int64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  _QWORD v51[3];
  _QWORD *v52;

  sub_1001053B0();
  swift_retain();
  Synchronized.wrappedValue.getter(v51, v1);
  swift_release();
  v2 = v51[0];
  swift_retain();
  Synchronized.wrappedValue.getter(v51, v3);
  swift_bridgeObjectRelease(v51[0]);
  v52 = _swiftEmptyDictionarySingleton;
  Synchronized.wrappedValue.setter(&v52);
  swift_release();
  v4 = *(_QWORD *)(v2 + 64);
  v45 = v2 + 64;
  v48 = v2;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & v4;
  v47 = (uint64_t *)(v0 + 64);
  swift_beginAccess(v0 + 64, v51, 0, 0);
  v8 = 0;
  v46 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v8 << 6);
      goto LABEL_22;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_60;
    if (v12 >= v46)
      break;
    v13 = *(_QWORD *)(v45 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v46)
        break;
      v13 = *(_QWORD *)(v45 + 8 * v8);
      if (!v13)
      {
        v8 = v12 + 2;
        if (v12 + 2 >= v46)
          break;
        v13 = *(_QWORD *)(v45 + 8 * v8);
        if (!v13)
        {
          v14 = v12 + 3;
          if (v14 >= v46)
            break;
          v13 = *(_QWORD *)(v45 + 8 * v14);
          if (!v13)
          {
            while (1)
            {
              v8 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_62;
              if (v8 >= v46)
                goto LABEL_56;
              v13 = *(_QWORD *)(v45 + 8 * v8);
              ++v14;
              if (v13)
                goto LABEL_21;
            }
          }
          v8 = v14;
        }
      }
    }
LABEL_21:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_22:
    v9 = *(_QWORD *)(*(_QWORD *)(v48 + 48) + 16 * v11 + 8);
    v15 = *(void **)(*(_QWORD *)(v48 + 56) + 8 * v11);
    v16 = type metadata accessor for WorldPoint(0);
    v17 = swift_dynamicCastClass(v15, v16);
    if (v17)
    {
      v18 = v17;
      v19 = *v47;
      if (!((unint64_t)*v47 >> 62))
      {
        v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
        v21 = v15;
        swift_bridgeObjectRetain(v9);
        swift_bridgeObjectRetain(v19);
        if (v20)
          goto LABEL_25;
        goto LABEL_5;
      }
      if (v19 < 0)
        v41 = *v47;
      else
        v41 = v19 & 0xFFFFFFFFFFFFFF8;
      v42 = v15;
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v19);
      v20 = _CocoaArrayWrapper.endIndex.getter(v41);
      if (!v20)
        goto LABEL_5;
LABEL_25:
      if (v20 < 1)
      {
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
        return;
      }
      v49 = v9;
      v50 = v8;
      for (i = 0; i != v20; ++i)
      {
        if ((v19 & 0xC000000000000001) != 0)
        {
          v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v19);
        }
        else
        {
          v27 = *(_QWORD *)(v19 + 8 * i + 32);
          swift_retain();
        }
        Strong = swift_unknownObjectWeakLoadStrong(v27 + 16, v26);
        if (Strong)
        {
          v23 = Strong;
          v24 = *(_QWORD *)(v27 + 24);
          ObjectType = swift_getObjectType(Strong);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 24))(v18, ObjectType, v24);
          swift_release();
          swift_unknownObjectRelease(v23);
        }
        else
        {
          swift_release();
        }
      }
LABEL_4:
      v9 = v49;
      v8 = v50;
      goto LABEL_5;
    }
    v29 = type metadata accessor for WorldLine(0);
    v30 = swift_dynamicCastClass(v15, v29);
    if (v30)
    {
      v31 = v30;
      v19 = *v47;
      if ((unint64_t)*v47 >> 62)
      {
        if (v19 < 0)
          v43 = *v47;
        else
          v43 = v19 & 0xFFFFFFFFFFFFFF8;
        v44 = v15;
        swift_bridgeObjectRetain(v9);
        swift_bridgeObjectRetain(v19);
        v32 = _CocoaArrayWrapper.endIndex.getter(v43);
        if (!v32)
          goto LABEL_5;
LABEL_37:
        if (v32 < 1)
          goto LABEL_61;
        v49 = v9;
        v50 = v8;
        for (j = 0; j != v32; ++j)
        {
          if ((v19 & 0xC000000000000001) != 0)
          {
            v39 = specialized _ArrayBuffer._getElementSlowPath(_:)(j, v19);
          }
          else
          {
            v39 = *(_QWORD *)(v19 + 8 * j + 32);
            swift_retain();
          }
          v40 = swift_unknownObjectWeakLoadStrong(v39 + 16, v38);
          if (v40)
          {
            v35 = v40;
            v36 = *(_QWORD *)(v39 + 24);
            v37 = swift_getObjectType(v40);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v31, v37, v36);
            swift_release();
            swift_unknownObjectRelease(v35);
          }
          else
          {
            swift_release();
          }
        }
        goto LABEL_4;
      }
      v32 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      v33 = v15;
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v19);
      if (v32)
        goto LABEL_37;
LABEL_5:
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v19);

    }
  }
LABEL_56:
  swift_release();
  if ((objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable") & 1) != 0)
    sub_10010461C();
}

void sub_100105CDC(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  CGFloat v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  unint64_t v13;
  __int128 v14;
  double Height;
  float64x2_t v16;
  float32x2_t v17;
  float32x2_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(__int128 *__return_ptr, __n128);
  __n128 v45;
  void (*v46)(__int128 *__return_ptr, __n128);
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(void);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t (*v55)(_OWORD *, __n128);
  __n128 v56;
  void (*v57)(_OWORD *, _QWORD, __n128);
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t (*v61)(_OWORD *, __n128);
  __n128 v62;
  void (*v63)(_OWORD *, _QWORD);
  uint64_t v64;
  uint64_t (*v65)(_OWORD *, __n128);
  __n128 v66;
  void (*v67)(_OWORD *, _QWORD);
  uint64_t v68;
  void *v69;
  char v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(__int128 *, __n128);
  __n128 v76;
  void (*v77)(__int128 *, _QWORD, __n128);
  uint64_t v78;
  uint64_t v79;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(__int128 *__return_ptr, __n128);
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  unsigned __int32 v91;
  int v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(__int128 *__return_ptr, __n128);
  __n128 v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  float v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  float v105;
  float v106;
  uint64_t (*v107)(__int128 *, __n128);
  __n128 v108;
  void (*v109)(__int128 *, _QWORD, __n128);
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  __n128 v114;
  void (*v115)(__int128 *__return_ptr, __n128);
  __n128 v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(__int128 *__return_ptr, __n128);
  __n128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  float v130;
  void (*v131)(_QWORD *__return_ptr, __n128);
  __n128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  float v137;
  float v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t (*v143)(_QWORD *, __n128);
  __n128 v144;
  void (*v145)(_QWORD *, _QWORD, __n128);
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  uint64_t (*v149)(_QWORD *, __n128);
  __n128 v150;
  void (*v151)(_QWORD *, _QWORD);
  uint64_t v152;
  uint64_t (*v153)(__int128 *, __n128);
  __n128 v154;
  void (*v155)(__int128 *, _QWORD);
  uint64_t v156;
  void (*v157)(__int128 *__return_ptr, __n128);
  __n128 v158;
  __int128 v159;
  __n128 v160;
  __int128 v161;
  __n128 v162;
  uint64_t (*v163)(__int128 *, __n128);
  __n128 v164;
  void (*v165)(__int128 *, _QWORD);
  uint64_t v166;
  uint64_t (*v167)(_BYTE *, __n128);
  __n128 v168;
  void (*v169)(_BYTE *, _QWORD);
  uint64_t v170;
  void *v171;
  uint64_t (*v172)(_BYTE *, __n128);
  __n128 v173;
  void (*v174)(_BYTE *, _QWORD);
  uint64_t v175;
  uint64_t (*v176)(_BYTE *, __n128);
  __n128 v177;
  void (*v178)(_BYTE *, _QWORD);
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  float v184;
  float v185;
  uint64_t (*v186)(_BYTE *, __n128);
  __n128 v187;
  void (*v188)(_BYTE *, _QWORD, __n128);
  uint64_t v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  __n128 v193;
  __int128 v194;
  uint64_t v195;
  uint64_t (*v196)(_BYTE *, __n128);
  __n128 v197;
  void (*v198)(_BYTE *, _QWORD);
  uint64_t v199;
  void *v200;
  uint64_t (*v201)(_BYTE *, __n128);
  __n128 v202;
  void (*v203)(_BYTE *, _QWORD);
  __int128 v204;
  uint64_t v205;
  uint64_t (*v206)(_BYTE *, __n128);
  __n128 v207;
  void (*v208)(_BYTE *, _QWORD);
  uint64_t v209;
  __n128 v210;
  __n128 v211;
  __n128 v212;
  __n128 v213;
  __n128 v214;
  __n128 v215;
  __n128 v216;
  __int128 v217;
  __n128 v218;
  __int128 v219;
  uint64_t v220;
  _BYTE v221[32];
  __int128 v222;
  __n128 v223;
  __int128 v224;
  __n128 v225;
  __int128 v226;
  __int128 v227;
  char v228;
  _QWORD v229[18];
  char v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  char v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  char v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  char v260;
  _OWORD v261[9];
  char v262;
  _OWORD v263[9];
  char v264;
  uint64_t v265;
  id v266[12];
  _BYTE v267[96];
  _QWORD *v268;
  CGRect v269;

  v2 = v1;
  v4 = (_QWORD *)type metadata accessor for Date(0);
  v5 = *(v4 - 1);
  __chkstk_darwin(v4);
  v7 = (char *)&v210 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10047B190 != -1)
    swift_once(&qword_10047B190, sub_1001C81CC);
  v8 = qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits;
  if ((*(_BYTE *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80) & 1) != 0)
  {
    __break(1u);
    goto LABEL_74;
  }
  v10 = *(double *)(v8 + 64);
  v9 = *(double *)(v8 + 72);
  v12 = *(double *)(v8 + 48);
  v11 = *(double *)(v8 + 56);
  v13 = SIMD2<>.init(_:)(*(double *)v8, *(double *)(v8 + 8));
  v269.origin.x = v12;
  v269.origin.y = v11;
  v269.size.width = v10;
  v269.size.height = v9;
  *(double *)&v14 = CGRectGetWidth(v269);
  v219 = v14;
  if ((*(_BYTE *)(v8 + 80) & 1) != 0)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  Height = CGRectGetHeight(*(CGRect *)(v8 + 48));
  if ((*(_BYTE *)(v8 + 80) & 1) == 0)
  {
    *(_QWORD *)&v16.f64[0] = v219;
    v16.f64[1] = Height;
    v17 = vcvt_f32_f64(v16);
    *(float *)&v10 = sqrtf(vaddv_f32(vmul_f32(v17, v17))) * 0.5;
    v18 = COERCE_FLOAT32X2_T(SIMD2<>.init(_:)(*(double *)v8, *(double *)(v8 + 8)));
    swift_beginAccess(v2 + 88, &v265, 0, 0);
    v19 = *(_QWORD *)(v2 + 88);
    v20 = *(_QWORD *)(v2 + 96);
    v21 = *(_QWORD *)(v2 + 104);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
    sub_1000921EC(v19, v20, v21, a1, (uint64_t)v266, v13, *(float *)&v10);
    v22 = v266[0];
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v19);
    v23 = sub_100012C58((uint64_t)v266, (uint64_t)&v268, &qword_100483F70);
    if (!v268)
    {
      v55 = *(uint64_t (**)(_OWORD *, __n128))(**(_QWORD **)(v2 + 136) + 400);
      v56 = swift_retain();
      v57 = (void (*)(_OWORD *, _QWORD, __n128))v55(v263, v56);
      v59 = *(_QWORD *)(v58 + 16);
      *(_QWORD *)(v58 + 8) = 0;
      *(_QWORD *)(v58 + 16) = 0;
      v60 = swift_bridgeObjectRelease(v59);
      v57(v263, 0, v60);
      swift_release();
      v61 = *(uint64_t (**)(_OWORD *, __n128))(**(_QWORD **)(v2 + 136) + 400);
      v62 = swift_retain();
      v63 = (void (*)(_OWORD *, _QWORD))v61(v263, v62);
      *(_DWORD *)(v64 + 24) = 0;
      *(_BYTE *)(v64 + 28) = 1;
      v63(v263, 0);
      swift_release();
      v65 = *(uint64_t (**)(_OWORD *, __n128))(**(_QWORD **)(v2 + 136) + 400);
      v66 = swift_retain();
      v67 = (void (*)(_OWORD *, _QWORD))v65(v263, v66);
      *(_BYTE *)(v68 + 1) = 0;
      v67(v263, 0);
LABEL_67:
      swift_release();
      return;
    }
    *(_QWORD *)&v217 = a1;
    v24 = *(__int128 **)((swift_isaMask & *v268) + 0x250);
    *(_QWORD *)&v219 = v268;
    v25 = ((uint64_t (*)(uint64_t))v24)(v23);
    v26 = v25;
    if ((v25 & 0xC000000000000001) != 0)
    {
      v27 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v25);
    }
    else
    {
      if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_70;
      }
      v27 = *(id *)(v25 + 32);
    }
    v28 = v27;
    v29 = swift_bridgeObjectRelease(v26);
    v30.n128_f64[0] = (*(double (**)(__n128))((swift_isaMask & *v28) + 0x2B0))(v29);
    v218 = v30;
    v215 = v32;
    v216 = v31;
    v214 = v33;

    v34 = ((uint64_t (*)(void))v24)();
    v21 = v34;
    if ((v34 & 0xC000000000000001) == 0)
    {
      if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
      {
        __break(1u);
        goto LABEL_72;
      }
      v35 = *(id *)(v34 + 40);
LABEL_13:
      v36 = v35;
      v24 = &v222;
      v37 = swift_bridgeObjectRelease(v21);
      v38.n128_f64[0] = (*(double (**)(__n128))((swift_isaMask & *v36) + 0x2B0))(v37);
      v212 = v39;
      v213 = v38;
      v210 = v41;
      v211 = v40;

      v43 = Date.init()(v42);
      v10 = Date.timeIntervalSince1970.getter(v43);
      (*(void (**)(char *, _QWORD *))(v5 + 8))(v7, v4);
      LODWORD(v13) = sub_100091DAC((__n128 *)v217, v218, v216, v215, v214, v213, v212, v211, v210);
      v44 = *(void (**)(__int128 *__return_ptr, __n128))(**(_QWORD **)(v2 + 136) + 144);
      v45 = swift_retain();
      v44(&v251, v45);
      swift_release();
      v261[6] = v257;
      v261[7] = v258;
      v261[8] = v259;
      v262 = v260;
      v261[2] = v253;
      v261[3] = v254;
      v261[4] = v255;
      v261[5] = v256;
      v261[0] = v251;
      v261[1] = v252;
      sub_1000D2080(v261);
      v216.n128_u32[0] = BYTE1(v261[0]);
      v46 = *(void (**)(__int128 *__return_ptr, __n128))(**(_QWORD **)(v2 + 136) + 144);
      v47 = swift_retain();
      v46(&v251, v47);
      swift_release();
      v263[6] = v257;
      v263[7] = v258;
      v263[8] = v259;
      v264 = v260;
      v263[2] = v253;
      v263[3] = v254;
      v263[4] = v255;
      v263[5] = v256;
      v263[0] = v251;
      v263[1] = v252;
      v48 = *((_QWORD *)&v251 + 1);
      v49 = v252;
      swift_bridgeObjectRetain(v252);
      sub_1000D2080(v263);
      v50 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v219) + 0xB8);
      v51 = ((uint64_t (*)(id))v50)(v22);
      v53 = v52;
      sub_100012810(v266);
      v218.n128_u64[0] = (unint64_t)v50;
      if (v49)
      {
        if (v48 == v51 && v49 == v53)
        {
          swift_bridgeObjectRelease(v49);
          swift_bridgeObjectRelease(v53);
          v54 = 0;
LABEL_21:
          v69 = (void *)v219;
          goto LABEL_26;
        }
        v70 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v49, v51, v53, 0);
        swift_bridgeObjectRelease(v49);
        swift_bridgeObjectRelease(v53);
        v54 = 0;
        v69 = (void *)v219;
        if ((v70 & 1) == 0)
        {
          v54 = 1;
          if (*(float *)&v13 > 1.0 && *(float *)&v13 < 2.0)
            goto LABEL_25;
        }
      }
      else
      {
        swift_bridgeObjectRelease(v53);
        v54 = 1;
        if (*(float *)&v13 <= 1.0)
          goto LABEL_21;
        v69 = (void *)v219;
        if (*(float *)&v13 < 2.0)
        {
LABEL_25:
          v71 = v69;
          v72 = v50();
          v74 = v73;
          sub_100012810(v266);
          v75 = *(uint64_t (**)(__int128 *, __n128))(**(_QWORD **)(v2 + 136) + 400);
          v76 = swift_retain();
          v77 = (void (*)(__int128 *, _QWORD, __n128))v75(&v251, v76);
          v79 = v78;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v78 + 32));
          *(_QWORD *)&v241 = *(_QWORD *)(v79 + 32);
          *(_QWORD *)(v79 + 32) = 0x8000000000000000;
          sub_1000BCEC4(v72, v74, isUniquelyReferenced_nonNull_native, *(float *)&v13);
          v81 = *(_QWORD *)(v79 + 32);
          *(_QWORD *)(v79 + 32) = v241;
          swift_bridgeObjectRelease(v74);
          v82 = v81;
          v69 = (void *)v219;
          v83 = swift_bridgeObjectRelease(v82);
          v77(&v251, 0, v83);
          v50 = (uint64_t (*)(void))v218.n128_u64[0];
          swift_release();
          v54 = 1;
        }
      }
LABEL_26:
      v4 = v69;
      v84 = v50();
      v86 = v85;
      sub_100012810(v266);
      v87 = *(void (**)(__int128 *__return_ptr, __n128))(**(_QWORD **)(v2 + 136) + 144);
      v88 = swift_retain();
      v87(&v241, v88);
      swift_release();
      v257 = v247;
      v258 = v248;
      v259 = v249;
      v260 = v250;
      v253 = v243;
      v254 = v244;
      v255 = v245;
      v256 = v246;
      v251 = v241;
      v252 = v242;
      v89 = *((_QWORD *)&v241 + 1);
      v90 = v242;
      swift_bridgeObjectRetain(v242);
      sub_1000D2080(&v251);
      if (v90)
      {
        if (v84 == v89 && v90 == v86)
        {
          swift_bridgeObjectRelease(v86);
          swift_bridgeObjectRelease(v90);
          v5 = v218.n128_u64[0];
          v91 = v216.n128_u32[0];
          if ((v216.n128_u8[0] & 1) == 0)
          {
LABEL_42:
            if (((v54 | v91) & 1) != 0)
            {
LABEL_45:
              v117 = v4;
              v118 = ((uint64_t (*)(void))v5)();
              v120 = v119;
              sub_100012810(v266);
              v121 = *(void (**)(__int128 *__return_ptr, __n128))(**(_QWORD **)(v2 + 136) + 144);
              v122 = swift_retain();
              v121(&v231, v122);
              swift_release();
              v123 = v24[27];
              v24[36] = v24[26];
              v24[37] = v123;
              v24[38] = v24[28];
              v250 = v240;
              v124 = v24[23];
              v24[32] = v24[22];
              v24[33] = v124;
              v125 = v24[25];
              v24[34] = v24[24];
              v24[35] = v125;
              v126 = v24[21];
              v24[30] = v24[20];
              v24[31] = v126;
              v127 = v243;
              if (!*(_QWORD *)(v243 + 16) || (v128 = sub_1000C80A8(v118, v120), (v129 & 1) == 0))
              {
                sub_1000D2080(&v241);
                swift_bridgeObjectRelease(v120);
                sub_100012810(v266);
                return;
              }
              v130 = *(float *)(*(_QWORD *)(v127 + 56) + 4 * v128);
              sub_1000D2080(&v241);
              swift_bridgeObjectRelease(v120);
              v131 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v2 + 136) + 144);
              v132 = swift_retain();
              v131(v229, v132);
              swift_release();
              v133 = v24[17];
              v24[26] = v24[16];
              v24[27] = v133;
              v24[28] = v24[18];
              v240 = v230;
              v134 = v24[13];
              v24[22] = v24[12];
              v24[23] = v134;
              v135 = v24[15];
              v24[24] = v24[14];
              v24[25] = v135;
              v136 = v24[11];
              v24[20] = v24[10];
              v24[21] = v136;
              sub_1000D2080(&v231);
              if (BYTE1(v231) == 1)
              {
                v137 = 0.0;
                if (v130 >= 0.0)
                  goto LABEL_56;
LABEL_55:
                v138 = v130 * 0.5;
LABEL_57:
                v139 = v117;
                v140 = ((uint64_t (*)(void))v5)();
                v142 = v141;
                sub_100012810(v266);
                v143 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)(v2 + 136) + 400);
                v144 = swift_retain();
                v145 = (void (*)(_QWORD *, _QWORD, __n128))v143(v229, v144);
                v147 = *(_QWORD *)(v146 + 16);
                *(_QWORD *)(v146 + 8) = v140;
                *(_QWORD *)(v146 + 16) = v142;
                v148 = swift_bridgeObjectRelease(v147);
                v145(v229, 0, v148);
                swift_release();
                v149 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)(v2 + 136) + 400);
                v150 = swift_retain();
                v151 = (void (*)(_QWORD *, _QWORD))v149(v229, v150);
                *(_DWORD *)(v152 + 24) = v13;
                *(_BYTE *)(v152 + 28) = 0;
                v151(v229, 0);
                swift_release();
                v153 = *(uint64_t (**)(__int128 *, __n128))(**(_QWORD **)(v2 + 136) + 400);
                v154 = swift_retain();
                v155 = (void (*)(__int128 *, _QWORD))v153(&v222, v154);
                *(_BYTE *)(v156 + 1) = (*(float *)&v13 <= v138) & ~(_BYTE)v54;
                v155(&v222, 0);
                swift_release();
                v157 = *(void (**)(__int128 *__return_ptr, __n128))(**(_QWORD **)(v2 + 136) + 144);
                v158 = swift_retain();
                v157(&v222, v158);
                swift_release();
                v159 = v24[7];
                v24[16] = v24[6];
                v24[17] = v159;
                v24[18] = v24[8];
                v230 = v228;
                v160 = v225;
                v24[12] = v224;
                v24[13] = (__int128)v160;
                v161 = v227;
                v24[14] = v226;
                v24[15] = v161;
                v162 = v223;
                v24[10] = v222;
                v24[11] = (__int128)v162;
                sub_1000D2080(v229);
                if (BYTE1(v229[0]) == 1)
                {
                  v163 = *(uint64_t (**)(__int128 *, __n128))(**(_QWORD **)(v2 + 136) + 400);
                  v164 = swift_retain();
                  v165 = (void (*)(__int128 *, _QWORD))v163(&v222, v164);
                  *(CGFloat *)(v166 + 40) = v10;
                  v165(&v222, 0);
                  swift_release();
                }
                sub_10009297C((uint64_t)v139, (__n128 *)v217, (unint64_t)v267, v18, 30.0);
                sub_100012C58((uint64_t)v267, (uint64_t)&v222, &qword_100484190);
                if ((BYTE8(v227) & 1) != 0)
                {
                  v167 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v2 + 136) + 400);
                  v168 = swift_retain();
                  v169 = (void (*)(_BYTE *, _QWORD))v167(v221, v168);
                  v171 = *(void **)(v170 + 48);
                  *(_QWORD *)(v170 + 48) = 0;

                  v169(v221, 0);
                  swift_release();
                  v172 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v2 + 136) + 400);
                  v173 = swift_retain();
                  v174 = (void (*)(_BYTE *, _QWORD))v172(v221, v173);
                  *(_OWORD *)(v175 + 64) = 0u;
                  *(_OWORD *)(v175 + 80) = 0u;
                  *(_OWORD *)(v175 + 96) = 0u;
                  *(_OWORD *)(v175 + 112) = 0u;
                  *(_BYTE *)(v175 + 128) = 1;
                  v174(v221, 0);
                  swift_release();
                  v176 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v2 + 136) + 400);
                  v177 = swift_retain();
                  v178 = (void (*)(_BYTE *, _QWORD))v176(v221, v177);
                  *(_QWORD *)(v179 + 136) = 0;
                  *(_BYTE *)(v179 + 144) = 1;
                  v178(v221, 0);
                  swift_release();
                  v180 = v139;
                  v181 = ((uint64_t (*)(void))v218.n128_u64[0])();
                  v183 = v182;
                  sub_100012810(v266);
                  v184 = 2.0;
                  if (*(float *)&v13 <= 2.0)
                    v184 = *(float *)&v13;
                  if (v184 > v130)
                    v185 = v184;
                  else
                    v185 = v130;
                  v186 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v2 + 136) + 400);
                  v187 = swift_retain();
                  v188 = (void (*)(_BYTE *, _QWORD, __n128))v186(v221, v187);
                  v190 = v189;
                  v191 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v189 + 32));
                  v220 = *(_QWORD *)(v190 + 32);
                  *(_QWORD *)(v190 + 32) = 0x8000000000000000;
                  sub_1000BCEC4(v181, v183, v191, v185);
                  v192 = *(_QWORD *)(v190 + 32);
                  *(_QWORD *)(v190 + 32) = v220;
                  swift_bridgeObjectRelease(v183);
                  v193 = swift_bridgeObjectRelease(v192);
                  v188(v221, 0, v193);
                  sub_100012810(v266);
                }
                else
                {
                  v217 = v224;
                  v218 = v223;
                  v216 = v225;
                  v194 = v226;
                  v195 = v227;
                  v196 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v2 + 136) + 400);
                  sub_1000127E8(v266);
                  v197 = swift_retain();
                  v198 = (void (*)(_BYTE *, _QWORD))v196(v221, v197);
                  v200 = *(void **)(v199 + 48);
                  *(_QWORD *)(v199 + 48) = v219;

                  v198(v221, 0);
                  swift_release();
                  v201 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v2 + 136) + 400);
                  v202 = swift_retain();
                  v203 = (void (*)(_BYTE *, _QWORD))v201(v221, v202);
                  v204 = v217;
                  *(__n128 *)(v205 + 64) = v218;
                  *(_OWORD *)(v205 + 80) = v204;
                  *(__n128 *)(v205 + 96) = v216;
                  *(_OWORD *)(v205 + 112) = v194;
                  *(_BYTE *)(v205 + 128) = 0;
                  v203(v221, 0);
                  swift_release();
                  v206 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v2 + 136) + 400);
                  v207 = swift_retain();
                  v208 = (void (*)(_BYTE *, _QWORD))v206(v221, v207);
                  *(_QWORD *)(v209 + 136) = v195;
                  *(_BYTE *)(v209 + 144) = 0;
                  v208(v221, 0);
                  sub_100012810(v266);
                }
                goto LABEL_67;
              }
              if (*(float *)&v13 >= 1.0)
              {
                v137 = (float)((float)(*(float *)&v13 + -1.0) * 0.5) + 0.15;
                if (v130 < (float)(v137 + v137))
                  goto LABEL_55;
              }
              else
              {
                if (v130 < 0.3)
                  goto LABEL_55;
                v137 = 0.15;
              }
LABEL_56:
              v138 = v130 - v137;
              goto LABEL_57;
            }
            v115 = *(void (**)(__int128 *__return_ptr, __n128))(**(_QWORD **)(v2 + 136) + 144);
            v116 = swift_retain();
            v115(&v231, v116);
            swift_release();
            v247 = v237;
            v248 = v238;
            v249 = v239;
            v250 = v240;
            v243 = v233;
            v244 = v234;
            v245 = v235;
            v246 = v236;
            v241 = v231;
            v242 = v232;
            sub_1000D2080(&v241);
            v11 = *((double *)&v243 + 1);
            if (qword_10047AD48 == -1)
            {
LABEL_44:
              LOBYTE(v54) = v10 < v11 + *(float *)&dword_1004AF84C;
              goto LABEL_45;
            }
LABEL_72:
            swift_once(&qword_10047AD48, sub_100183D88);
            goto LABEL_44;
          }
        }
        else
        {
          v92 = _stringCompareWithSmolCheck(_:_:expecting:)(v84, v86, v89, v90, 0);
          swift_bridgeObjectRelease(v86);
          swift_bridgeObjectRelease(v90);
          v91 = v216.n128_u32[0];
          v5 = v218.n128_u64[0];
          if ((v92 & v216.n128_u32[0] & 1) == 0)
            goto LABEL_42;
        }
        v93 = v4;
        v94 = ((uint64_t (*)(void))v5)();
        v86 = v95;
        sub_100012810(v266);
        v96 = *(void (**)(__int128 *__return_ptr, __n128))(**(_QWORD **)(v2 + 136) + 144);
        v97 = swift_retain();
        v96(&v231, v97);
        swift_release();
        v247 = v237;
        v248 = v238;
        v249 = v239;
        v250 = v240;
        v243 = v233;
        v244 = v234;
        v245 = v235;
        v246 = v236;
        v241 = v231;
        v242 = v232;
        v98 = v233;
        if (*(_QWORD *)(v233 + 16))
        {
          v99 = sub_1000C80A8(v94, v86);
          if ((v100 & 1) != 0)
          {
            v101 = *(float *)(*(_QWORD *)(v98 + 56) + 4 * v99);
            sub_1000D2080(&v241);
            swift_bridgeObjectRelease(v86);
            v102 = v93;
            v215.n128_u64[0] = ((uint64_t (*)(void))v218.n128_u64[0])();
            v104 = v103;
            sub_100012810(v266);
            v105 = (float)((float)(*(float *)&v13 + -1.0) * 0.5) + 0.15;
            if (*(float *)&v13 < 1.0)
              v105 = 0.15;
            v106 = *(float *)&v13 + v105;
            if (v101 >= v106)
              v101 = v106;
            v107 = *(uint64_t (**)(__int128 *, __n128))(**(_QWORD **)(v2 + 136) + 400);
            v108 = swift_retain();
            v109 = (void (*)(__int128 *, _QWORD, __n128))v107(&v231, v108);
            v111 = v110;
            v112 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v110 + 32));
            v229[0] = *(_QWORD *)(v111 + 32);
            *(_QWORD *)(v111 + 32) = 0x8000000000000000;
            sub_1000BCEC4(v215.n128_i64[0], v104, v112, v101);
            v113 = *(_QWORD *)(v111 + 32);
            *(_QWORD *)(v111 + 32) = v229[0];
            swift_bridgeObjectRelease(v104);
            v114 = swift_bridgeObjectRelease(v113);
            v109(&v231, 0, v114);
            v5 = v218.n128_u64[0];
            swift_release();
            goto LABEL_41;
          }
        }
        sub_1000D2080(&v241);
      }
      swift_bridgeObjectRelease(v86);
      v5 = v218.n128_u64[0];
LABEL_41:
      v91 = v216.n128_u32[0];
      goto LABEL_42;
    }
LABEL_70:
    v35 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v21);
    goto LABEL_13;
  }
LABEL_75:
  __break(1u);
}

uint64_t sub_100106C5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[8]);
  swift_release(v0[9]);
  swift_bridgeObjectRelease(v0[10]);
  v1 = v0[11];
  v2 = v0[12];
  swift_bridgeObjectRelease(v0[13]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  swift_release(v0[14]);
  swift_release(v0[15]);
  swift_bridgeObjectRelease(v0[16]);
  swift_release(v0[17]);
  return swift_release(v0[18]);
}

_QWORD *sub_100106CD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v0 = (_QWORD *)StateObserver.deinit();
  swift_bridgeObjectRelease(v0[8]);
  swift_release(v0[9]);
  swift_bridgeObjectRelease(v0[10]);
  v1 = v0[11];
  v2 = v0[12];
  swift_bridgeObjectRelease(v0[13]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  swift_release(v0[14]);
  swift_release(v0[15]);
  swift_bridgeObjectRelease(v0[16]);
  swift_release(v0[17]);
  swift_release(v0[18]);
  return v0;
}

uint64_t sub_100106D5C()
{
  _QWORD *v0;

  v0 = sub_100106CD4();
  return swift_deallocClassInstance(v0, 153, 7);
}

uint64_t type metadata accessor for LinesRenderer(uint64_t a1)
{
  uint64_t result;

  result = qword_100483FF0;
  if (!qword_100483FF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LinesRenderer);
  return result;
}

uint64_t sub_100106DB4(uint64_t a1)
{
  _QWORD v2[10];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[3] = &unk_1003B7820;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[9] = &unk_1003B7838;
  return swift_initClassMetadata2(a1, 256, 10, v2, a1 + 208);
}

uint64_t sub_100106E28@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 200);
  *a2 = v2;
  return swift_retain(v2);
}

void sub_100106E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  void (*v17[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return;
  }
  if (!a1)
  {
LABEL_23:
    __break(1u);
    return;
  }
  if (!v6)
  {
    v8 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8 <= a2)
    {
      v9 = sub_100018148(0, (unint64_t *)&qword_100486300, NSLayoutConstraint_ptr);
      swift_arrayInitWithCopy(a1, (a3 & 0xFFFFFFFFFFFFFF8) + 32, v8, v9);
      return;
    }
    __break(1u);
    goto LABEL_21;
  }
  if (a3 < 0)
    v10 = a3;
  else
    v10 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a3);
  v11 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(a3);
  if (v11 > a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v7 < 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_100043310(&qword_100484160, &qword_100484158, (uint64_t)&protocol conformance descriptor for [A]);
  swift_bridgeObjectRetain(a3);
  for (i = 0; i != v7; ++i)
  {
    sub_10000EDC8(&qword_100484158);
    v13 = sub_1001333AC(v17, i, a3);
    v15 = *v14;
    ((void (*)(void (**)(id *), _QWORD))v13)(v17, 0);
    *(_QWORD *)(a1 + 8 * i) = v15;
  }
  swift_bridgeObjectRelease(a3);
}

uint64_t sub_100106FF0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  id *v24;
  id v25;
  uint64_t v26;
  _BYTE v27[32];

  v13 = result;
  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    result = swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (v13)
  {
    if (v14)
    {
      if (a3 < 0)
        v18 = a3;
      else
        v18 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a3);
      v19 = _CocoaArrayWrapper.endIndex.getter(v18);
      result = swift_bridgeObjectRelease(a3);
      if (v19 <= a2)
      {
        if (v15 >= 1)
        {
          v20 = sub_100043310(a5, a6, (uint64_t)&protocol conformance descriptor for [A]);
          swift_bridgeObjectRetain(a3);
          for (i = 0; i != v15; ++i)
          {
            v22 = sub_10000EDC8(a6);
            v23 = (void (*)(_BYTE *, _QWORD))a7(v27, i, a3, v22, v20);
            v25 = *v24;
            v23(v27, 0);
            *(_QWORD *)(v13 + 8 * i) = v25;
          }
          swift_bridgeObjectRelease(a3);
          return a3;
        }
        goto LABEL_22;
      }
    }
    else
    {
      v16 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v16 <= a2)
      {
        v17 = a4(0);
        swift_arrayInitWithCopy(v13, (a3 & 0xFFFFFFFFFFFFFF8) + 32, v16, v17);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10010719C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  void (*v17[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return;
  }
  if (!a1)
  {
LABEL_23:
    __break(1u);
    return;
  }
  if (!v6)
  {
    v8 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8 <= a2)
    {
      v9 = sub_100018148(0, (unint64_t *)&qword_100483100, ARHitTestResult_ptr);
      swift_arrayInitWithCopy(a1, (a3 & 0xFFFFFFFFFFFFFF8) + 32, v8, v9);
      return;
    }
    __break(1u);
    goto LABEL_21;
  }
  if (a3 < 0)
    v10 = a3;
  else
    v10 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a3);
  v11 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(a3);
  if (v11 > a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v7 < 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_100043310(&qword_1004841A0, &qword_100484198, (uint64_t)&protocol conformance descriptor for [A]);
  swift_bridgeObjectRetain(a3);
  for (i = 0; i != v7; ++i)
  {
    sub_10000EDC8(&qword_100484198);
    v13 = sub_1001333AC(v17, i, a3);
    v15 = *v14;
    ((void (*)(void (**)(id *), _QWORD))v13)(v17, 0);
    *(_QWORD *)(a1 + 8 * i) = v15;
  }
  swift_bridgeObjectRelease(a3);
}

void sub_100107354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  void (*v17[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return;
  }
  if (!a1)
  {
LABEL_23:
    __break(1u);
    return;
  }
  if (!v6)
  {
    v8 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8 <= a2)
    {
      v9 = sub_100018148(0, &qword_10047BCE8, SCNNode_ptr);
      swift_arrayInitWithCopy(a1, (a3 & 0xFFFFFFFFFFFFFF8) + 32, v8, v9);
      return;
    }
    __break(1u);
    goto LABEL_21;
  }
  if (a3 < 0)
    v10 = a3;
  else
    v10 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a3);
  v11 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(a3);
  if (v11 > a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v7 < 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_100043310(&qword_100484180, &qword_100484178, (uint64_t)&protocol conformance descriptor for [A]);
  swift_bridgeObjectRetain(a3);
  for (i = 0; i != v7; ++i)
  {
    sub_10000EDC8(&qword_100484178);
    v13 = sub_1001333AC(v17, i, a3);
    v15 = *v14;
    ((void (*)(void (**)(id *), _QWORD))v13)(v17, 0);
    *(_QWORD *)(a1 + 8 * i) = v15;
  }
  swift_bridgeObjectRelease(a3);
}

void sub_10010750C()
{
  uint64_t v0;

  sub_1001056D4(v0);
}

uint64_t sub_100107514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100107524(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10010752C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  _QWORD v27[5];
  _QWORD v28[5];

  v7 = *a2;
  v28[3] = a3;
  v28[4] = a4;
  v8 = sub_100068AE8(v28);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v8, a1, a3);
  a2[8] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10000EDC8(&qword_100483B80);
  KeyPath = swift_getKeyPath(&unk_1003B7860);
  swift_retain();
  a2[9] = MutableStateValue.__allocating_init(_:_:)(KeyPath, v7);
  a2[10] = (uint64_t)_swiftEmptyDictionarySingleton;
  v10 = type metadata accessor for WorldLine(0);
  a2[11] = OrderedDictionary.init()(&type metadata for String, v10, &protocol witness table for String);
  a2[12] = v11;
  a2[13] = v12;
  v27[0] = _swiftEmptyDictionarySingleton;
  v13 = sub_10000EDC8(&qword_100483B88);
  swift_allocObject(v13, 32, 7);
  a2[14] = Synchronized.init(wrappedValue:)(v27);
  v14 = swift_getKeyPath(&unk_1003B7888);
  v15 = sub_10000EDC8(&qword_1004830F0);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v16 = qword_1004AF890;
  v17 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v15 + 272);
  v18 = swift_retain();
  a2[15] = v17(v14, v16, v18);
  a2[16] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10000EDC8(&qword_100483B90);
  v19 = swift_getKeyPath(&unk_1003B78B0);
  a2[17] = MutableStateValue.__allocating_init(_:_:)(v19, v7);
  v20 = swift_getKeyPath(&unk_1003B78D8);
  v21 = sub_10000EDC8(&qword_10047BBD0);
  v22 = qword_1004AF890;
  v23 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v21 + 272);
  v24 = swift_retain();
  a2[18] = v23(v20, v22, v24);
  *((_BYTE *)a2 + 152) = 1;
  swift_release();
  sub_100068B24((uint64_t)v28, (uint64_t)v27);
  v25 = StateObserver.init(configuration:)(v27);
  sub_10000F690(v28);
  return v25;
}

uint64_t sub_10010774C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 200);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t type metadata accessor for WeakLinesRendererDelegate()
{
  return objc_opt_self(_TtC7Measure25WeakLinesRendererDelegate);
}

void sub_100107784()
{
  qword_100484260 = 0x4024000000000000;
}

void sub_100107794()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  Class isa;
  id v35;
  uint64_t v36;

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor];
  if (v3)
  {
    objc_msgSend(v3, "setActive:", 0);
    v4 = objc_msgSend(*(id *)&v0[v2], "bottomAnchor");
    v5 = objc_msgSend(v1, "contentView");
    v6 = objc_msgSend(v5, "bottomAnchor");

    if (qword_10047A758 != -1)
      swift_once(&qword_10047A758, sub_10000EF18);
    v7 = objc_msgSend(v4, "constraintEqualToAnchor:constant:", v6, -*(double *)&qword_1004AF090);

    LODWORD(v8) = 1148813312;
    objc_msgSend(v7, "setPriority:", v8);
    v9 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
    v10 = swift_allocObject(v9, 64, 7);
    *(_OWORD *)(v10 + 16) = xmmword_1003B1410;
    v11 = objc_msgSend(*(id *)&v1[v2], "leadingAnchor");
    v12 = objc_msgSend(v1, "contentView");
    v13 = objc_msgSend(v12, "leadingAnchor");

    if (qword_10047A7A0 != -1)
      swift_once(&qword_10047A7A0, sub_10000F068);
    v14 = objc_msgSend(v11, "constraintEqualToAnchor:constant:", v13, *(double *)&qword_1004AF0F0);

    *(_QWORD *)(v10 + 32) = v14;
    v15 = objc_msgSend(*(id *)&v1[v2], "trailingAnchor");
    v16 = objc_msgSend(v1, "contentView");
    v17 = objc_msgSend(v16, "trailingAnchor");

    v18 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v17, -*(double *)&qword_1004AF0F0);
    *(_QWORD *)(v10 + 40) = v18;
    v19 = objc_msgSend(*(id *)&v1[v2], "heightAnchor");
    v20 = objc_msgSend(*(id *)&v1[v2], "widthAnchor");
    v21 = objc_msgSend(v19, "constraintLessThanOrEqualToAnchor:multiplier:", v20, 0.75);

    *(_QWORD *)(v10 + 48) = v21;
    *(_QWORD *)(v10 + 56) = v7;
    v36 = v10;
    specialized Array._endMutation()(v22);
    v23 = (void *)objc_opt_self(UITraitCollection);
    v35 = v7;
    v24 = objc_msgSend(v23, "currentTraitCollection");
    v25 = objc_msgSend(v24, "preferredContentSizeCategory");

    LOBYTE(v19) = UIContentSizeCategory.isAccessibilityCategory.getter(v25);
    v26 = objc_msgSend(*(id *)&v1[v2], "topAnchor");
    if ((v19 & 1) != 0)
      v27 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel], "bottomAnchor");
    else
      v27 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels], "bottomAnchor");
    v28 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v27, *(double *)&qword_1004AF090);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
    v31 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v30 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v31 >= v30 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
    v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v28);
    specialized Array._endMutation()(v32);
    v33 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_10002277C();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v33, "activateConstraints:", isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

  }
  else
  {
    __break(1u);
  }
}

char *sub_100107C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v8;
  id v9;
  char *v10;
  double v11;
  NSString v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  id v18;
  id v19;
  objc_super v21;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  v8 = OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot;
  v9 = objc_allocWithZone((Class)UIImageView);
  v10 = v4;
  *(_QWORD *)&v4[v8] = objc_msgSend(v9, "init");

  if (a3)
  {
    v12 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v12 = 0;
  }
  v21.receiver = v10;
  v21.super_class = ObjectType;
  v13 = (char *)objc_msgSendSuper2(&v21, "initWithStyle:reuseIdentifier:", a1, v12, v11);

  v14 = OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot;
  v15 = *(void **)&v13[OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot];
  v16 = v13;
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v13[v14], "setClipsToBounds:", 1);
  v17 = qword_10047AAF0;
  v18 = *(id *)&v13[v14];
  if (v17 != -1)
    swift_once(&qword_10047AAF0, sub_100107784);
  objc_msgSend(v18, "_setContinuousCornerRadius:", *(double *)&qword_100484260);

  v19 = objc_msgSend(v16, "contentView");
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v13[v14]);

  sub_100107794();
  return v16;
}

char *sub_100107E44(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  id v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot;
  v5 = objc_allocWithZone((Class)UIImageView);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "init");

  v16.receiver = v6;
  v16.super_class = ObjectType;
  v7 = (char *)objc_msgSendSuper2(&v16, "initWithCoder:", a1);
  v8 = v7;
  if (v7)
  {
    v9 = OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot;
    v10 = *(void **)&v7[OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot];
    v11 = v7;
    objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(*(id *)&v8[v9], "setClipsToBounds:", 1);
    v12 = qword_10047AAF0;
    v13 = *(id *)&v8[v9];
    if (v12 != -1)
      swift_once(&qword_10047AAF0, sub_100107784);
    objc_msgSend(v13, "_setContinuousCornerRadius:", *(double *)&qword_100484260);

    v14 = objc_msgSend(v11, "contentView");
    objc_msgSend(v14, "addSubview:", *(_QWORD *)&v8[v9]);

    sub_100107794();
  }

  return v8;
}

void sub_100107FD0()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v2 = OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot], "removeFromSuperview");
  v3 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v4 = *(void **)&v0[v2];
  *(_QWORD *)&v0[v2] = v3;

  v8.receiver = v0;
  v8.super_class = ObjectType;
  objc_msgSendSuper2(&v8, "prepareForReuse");
  objc_msgSend(*(id *)&v0[v2], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[v2], "setClipsToBounds:", 1);
  v5 = qword_10047AAF0;
  v6 = *(id *)&v0[v2];
  if (v5 != -1)
    swift_once(&qword_10047AAF0, sub_100107784);
  objc_msgSend(v6, "_setContinuousCornerRadius:", *(double *)&qword_100484260);

  v7 = objc_msgSend(v0, "contentView");
  objc_msgSend(v7, "addSubview:", *(_QWORD *)&v0[v2]);

  sub_100107794();
}

uint64_t sub_100108134(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  float v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  float v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  id v27;
  id v28;
  id v29;
  char v30;
  char *v31;
  void *v32;
  char *v33;
  NSString v34;
  NSString v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  id v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  id v47;
  id v48;
  Swift::String v49;
  Swift::String v50;
  Swift::String v51;
  id v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  uint64_t v56;
  id v57;
  NSString v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  id v63;
  Swift::String v64;
  Swift::String v65;
  void *object;
  NSString v67;
  id v68;
  uint64_t v69;
  NSString v70;
  void *v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  id v78;
  id v79;
  Swift::String v80;
  Swift::String v81;
  void *v82;
  NSString v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  NSString v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  void *v94;
  id v95;
  uint64_t result;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  NSString v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE v119[848];
  _BYTE v120[848];
  Swift::String v121;
  Swift::String v122;
  Swift::String v123;
  Swift::String v124;
  Swift::String v125;
  Swift::String v126;

  v2 = v1;
  v4 = type metadata accessor for MeasurementHistoryItem(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000226FC(a1, (uint64_t)v6);
  sub_10001F970(&v6[*(int *)(v4 + 28)], v119);
  sub_10001F970(v119, v120);
  if (sub_10001F9AC((uint64_t)v120) == 1)
  {
    v118 = a1;
    v7 = sub_10001F9B8((uint64_t)v120);
    v8 = *(_QWORD *)v7;
    v100 = *(_QWORD *)(v7 + 8);
    v9 = *(float *)(v7 + 32);
    v10 = *(unsigned __int8 *)(v7 + 36);
    v11 = *(_QWORD *)(v7 + 40);
    v102 = *(_QWORD *)(v7 + 48);
    v103 = v11;
    v12 = *(_QWORD *)(v7 + 56);
    v108 = *(NSString *)(v7 + 64);
    v109 = v12;
    v13 = *(_QWORD *)(v7 + 80);
    v106 = *(_QWORD *)(v7 + 88);
    v107 = v13;
    v14 = *(_QWORD *)(v7 + 96);
    v104 = *(_QWORD *)(v7 + 104);
    v105 = v14;
    v15 = v9;
    v16 = *(_QWORD *)(v7 + 128);
    v101 = *(_QWORD *)(v7 + 120);
    v17 = *(float *)(v7 + 152);
    v18 = *(unsigned __int8 *)(v7 + 156);
    v19 = *(_QWORD *)(v7 + 160);
    v20 = *(_QWORD *)(v7 + 168);
    v21 = *(_QWORD *)(v7 + 176);
    v114 = *(void **)(v7 + 184);
    v115 = v21;
    v22 = *(_QWORD *)(v7 + 200);
    v112 = *(_QWORD *)(v7 + 208);
    v113 = v22;
    v23 = *(_QWORD *)(v7 + 216);
    v110 = *(_QWORD *)(v7 + 224);
    v111 = v23;
    v24 = v17;
    if (v10)
      v25 = 0.0;
    else
      v25 = v15;
    if (v18)
      v26 = 0.0;
    else
      v26 = v24;
    v27 = *(id *)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView);
    sub_100045520(v25, v26);

    v28 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v29 = objc_msgSend(v28, "preferredContentSizeCategory");

    v30 = UIContentSizeCategory.isAccessibilityCategory.getter(v29);
    v116 = v20;
    v117 = v19;
    if ((v30 & 1) != 0)
    {
      v31 = *(char **)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle);
      v32 = *(void **)&v31[OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label];
      v33 = v31;
      v34 = String._bridgeToObjectiveC()();
      objc_msgSend(v32, "setText:", v34);

      v35 = String._bridgeToObjectiveC()();
      objc_msgSend(v32, "setAccessibilityLabel:", v35);

      v36 = *(void **)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel);
      v37 = (void *)objc_opt_self(NSBundle);
      v38 = v36;
      v39 = objc_msgSend(v37, "mainBundle");
      v121._object = (void *)0xE000000000000000;
      v40._countAndFlagsBits = 0xD000000000000010;
      v40._object = (void *)0x80000001003D8710;
      v41._countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      v121._countAndFlagsBits = 0;
      v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, (Swift::String_optional)0, (NSBundle)v39, v41, v121);

      v43 = objc_msgSend(v37, "mainBundle");
      v122._object = (void *)0xE000000000000000;
      v44._countAndFlagsBits = 0xD000000000000010;
      v44._object = (void *)0x80000001003D8710;
      v45._countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      v122._countAndFlagsBits = 0;
      v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v44, (Swift::String_optional)0, (NSBundle)v43, v45, v122);

      sub_100125740(v42._countAndFlagsBits, (uint64_t)v42._object, v46._countAndFlagsBits, v46._object, v103, v102, v109, (uint64_t)v108, v107, v106, v105, v104);
      swift_bridgeObjectRelease(v42._object);
      swift_bridgeObjectRelease(v46._object);
      v47 = *(id *)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel);
      v48 = objc_msgSend(v37, "mainBundle");
      v123._object = (void *)0xE000000000000000;
      v49._countAndFlagsBits = 0x4C474E4154434552;
      v49._object = (void *)0xEF48544449575F45;
      v50._countAndFlagsBits = 0;
      v50._object = (void *)0xE000000000000000;
      v123._countAndFlagsBits = 0;
      v51 = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, (Swift::String_optional)0, (NSBundle)v48, v50, v123);

      v52 = objc_msgSend(v37, "mainBundle");
      v124._object = (void *)0xE000000000000000;
      v53._countAndFlagsBits = 0x4C474E4154434552;
      v53._object = (void *)0xEF48544449575F45;
      v54._countAndFlagsBits = 0;
      v54._object = (void *)0xE000000000000000;
      v124._countAndFlagsBits = 0;
      v55 = NSLocalizedString(_:tableName:bundle:value:comment:)(v53, (Swift::String_optional)0, (NSBundle)v52, v54, v124);

      sub_100125740(v51._countAndFlagsBits, (uint64_t)v51._object, v55._countAndFlagsBits, v55._object, v117, v116, v115, (uint64_t)v114, v113, v112, v111, v110);
      swift_bridgeObjectRelease(v51._object);
      swift_bridgeObjectRelease(v55._object);
      v56 = v118;
    }
    else
    {
      v99 = v16;
      v57 = *(id *)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle);
      v58 = String._bridgeToObjectiveC()();
      objc_msgSend(v57, "setText:", v58);

      v59 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels;
      v60 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels)
                     + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
      v61 = (void *)objc_opt_self(NSBundle);
      v62 = v60;
      v98 = v61;
      v63 = objc_msgSend(v61, "mainBundle");
      v125._object = (void *)0xE000000000000000;
      v64._object = (void *)0x80000001003D8710;
      v64._countAndFlagsBits = 0xD000000000000010;
      v65._countAndFlagsBits = 0;
      v65._object = (void *)0xE000000000000000;
      v125._countAndFlagsBits = 0;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)v63, v65, v125)._object;

      v67 = String._bridgeToObjectiveC()();
      objc_msgSend(v62, "setText:", v67, swift_bridgeObjectRelease(object).n128_f64[0]);

      v68 = objc_retain(*(id *)(*(_QWORD *)(v2 + v59)
                              + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits));
      v69 = v100;
      v70 = String._bridgeToObjectiveC()();
      objc_msgSend(v68, "setText:", v70);

      v71 = *(void **)(*(_QWORD *)(v2 + v59)
                     + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
      v72 = v103;
      if (v8 == v103 && v69 == v102)
      {
        v73 = 1;
        v74 = v102;
      }
      else
      {
        v75 = v69;
        v74 = v102;
        v73 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v75, v103, v102, 0);
      }
      v76 = v71;
      sub_100134B8C(v72, v74, v109, v108, v107, v106, v105, v104, v73 & 1);

      v77 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels;
      v78 = objc_retain(*(id *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels)
                              + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title));
      v79 = objc_msgSend(v98, "mainBundle");
      v126._object = (void *)0xE000000000000000;
      v80._countAndFlagsBits = 0x4C474E4154434552;
      v80._object = (void *)0xEF48544449575F45;
      v81._countAndFlagsBits = 0;
      v81._object = (void *)0xE000000000000000;
      v126._countAndFlagsBits = 0;
      v82 = NSLocalizedString(_:tableName:bundle:value:comment:)(v80, (Swift::String_optional)0, (NSBundle)v79, v81, v126)._object;

      v83 = String._bridgeToObjectiveC()();
      objc_msgSend(v78, "setText:", v83, swift_bridgeObjectRelease(v82).n128_f64[0]);

      v84 = objc_retain(*(id *)(*(_QWORD *)(v2 + v77)
                              + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits));
      v85 = v101;
      v86 = v99;
      v87 = String._bridgeToObjectiveC()();
      objc_msgSend(v84, "setText:", v87);

      v88 = v86;
      v89 = *(void **)(*(_QWORD *)(v2 + v77)
                     + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
      v91 = v116;
      v90 = v117;
      if (v85 == v117 && v88 == v116)
        v92 = 1;
      else
        v92 = _stringCompareWithSmolCheck(_:_:expecting:)(v85, v88, v117, v116, 0);
      v56 = v118;
      v94 = v114;
      v93 = v115;
      v95 = v89;
      sub_100134B8C(v90, v91, v93, v94, v113, v112, v111, v110, v92 & 1);

    }
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot), "setImage:", *(_QWORD *)(v56 + *(int *)(type metadata accessor for SpatialPlattersHistoryItem(0) + 20)));
    return sub_100022740((uint64_t)v6);
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ALL, 0x80000001003D8820, "Measure/RectangleHistoryCellWithScreenshot.swift", 48, 2, 129, 0);
    __break(1u);
  }
  return result;
}

void sub_100108A40()
{
  uint64_t v0;

}

uint64_t type metadata accessor for RectangleHistoryCellWithScreenshot()
{
  return objc_opt_self(_TtC7Measure34RectangleHistoryCellWithScreenshot);
}

Swift::String *localizationWarning.unsafeMutableAddressor()
{
  return &localizationWarning;
}

uint64_t sub_100108A90(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_QWORD *)((char *)v6 + 14) = *(_QWORD *)((char *)a1 + 30);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_QWORD *)((char *)v8 + 14) = *(_QWORD *)((char *)a2 + 30);
  return sub_100108D3C((float *)&v5, (uint64_t)&v7) & 1;
}

void sub_100108AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  Class isa;
  uint64_t v6;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  static Locale.current.getter(objc_msgSend(v4, "setNumberStyle:", 0));
  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, "setLocale:", isa);

  qword_1004AF658 = (uint64_t)v4;
}

void sub_100108BA8(uint64_t a1)
{
  sub_100108BC8(a1, 2, &qword_1004AF660);
}

void sub_100108BB8(uint64_t a1)
{
  sub_100108BC8(a1, 0, &qword_1004AF668);
}

void sub_100108BC8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  Class isa;
  uint64_t v11;

  v5 = type metadata accessor for Locale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v9, "setNumberStyle:", 1);
  static Locale.current.getter(objc_msgSend(v9, "setMaximumFractionDigits:", a2));
  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(v9, "setLocale:", isa);

  *a3 = v9;
}

uint64_t sub_100108CB4()
{
  uint64_t v0;
  __CFRunLoopObserver *v1;

  v1 = *(__CFRunLoopObserver **)(v0 + 16);
  CFRunLoopRemoveObserver(*(CFRunLoopRef *)(v0 + 24), v1, kCFRunLoopCommonModes);

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for MeasureUtil()
{
  return objc_opt_self(_TtC7Measure11MeasureUtil);
}

uint64_t type metadata accessor for MeasureUtil.MainRunLoopExitObserver()
{
  return objc_opt_self(_TtCC7Measure11MeasureUtilP33_00DEFDFA983F973AFB7E898E8ADFE27623MainRunLoopExitObserver);
}

uint64_t sub_100108D3C(float *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  char v16;
  int v17;
  int v18;

  v4 = *(_QWORD *)a1;
  v5 = *((_QWORD *)a1 + 1);
  v6 = *(_QWORD *)(a2 + 8);
  if (v4 != *(_QWORD *)a2 || v5 != v6)
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v6, 0);
    result = 0;
    if ((v8 & 1) == 0)
      return result;
  }
  v10 = *((_QWORD *)a1 + 3);
  v11 = *(_QWORD *)(a2 + 24);
  if (!v10)
  {
    if (!v11)
      goto LABEL_15;
    return 0;
  }
  if (!v11)
    return 0;
  v12 = *((_QWORD *)a1 + 2);
  v13 = *(_QWORD *)(a2 + 16);
  v14 = v12 == v13 && v10 == v11;
  if (v14 || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v10, v13, v11, 0), result = 0, (v15 & 1) != 0))
  {
LABEL_15:
    v16 = *(_BYTE *)(a2 + 36);
    if (((_BYTE)a1[9] & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 36))
        return 0;
    }
    else
    {
      if (a1[8] != *(float *)(a2 + 32))
        v16 = 1;
      if ((v16 & 1) != 0)
        return 0;
    }
    v17 = *((unsigned __int8 *)a1 + 37);
    v18 = *(unsigned __int8 *)(a2 + 37);
    if (v17 == 4)
    {
      if (v18 != 4)
        return 0;
    }
    else if (v18 == 4 || v17 != v18)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

void sub_100108E28(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t *a4@<X8>, float a5@<S0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t **v14;
  id v15;
  uint64_t v16;
  NSString v17;
  id v18;
  float v19;
  id v20;
  uint64_t v21;
  NSString v22;
  float v23;
  float v24;
  float v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  double v30;
  void (*v31)(char *, uint64_t);
  float v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  double v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;
  uint64_t v66;
  uint64_t countAndFlagsBits;
  void *v68;
  void *v69;
  uint64_t v70;
  NSString v71;
  float v72;
  float v73;
  float v74;
  uint64_t v75;
  NSString v76;
  uint64_t v77;
  float v78;
  void *v79;
  uint64_t v80;
  id v81;
  double v82;
  void (*v83)(char *, uint64_t);
  float v84;
  uint64_t v85;
  char *v86;
  void *v87;
  id v88;
  double v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  id v96;
  Swift::String v97;
  Swift::String v98;
  Swift::String v99;
  uint64_t v100;
  void *v101;
  id v102;
  Swift::String v103;
  Swift::String v104;
  Swift::String v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  char *v109;
  void *v110;
  id v111;
  double v112;
  id v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  id v119;
  Swift::String v120;
  Swift::String v121;
  Swift::String v122;
  uint64_t v123;
  void *v124;
  id v125;
  Swift::String v126;
  Swift::String v127;
  Swift::String v128;
  uint64_t v129;
  void *v130;
  void *object;
  uint64_t v132;
  char *v133;
  void *v134;
  id v135;
  double v136;
  id v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  id v143;
  Swift::String_optional v144;
  Swift::String v145;
  Swift::String v146;
  Swift::String v147;
  uint64_t v148;
  void *v149;
  id v150;
  Swift::String v151;
  Swift::String v152;
  Swift::String v153;
  uint64_t v154;
  void *v155;
  NSString v156;
  float v157;
  float v158;
  char v159;
  float v160;
  uint64_t v161;
  uint64_t v162;
  __int128 *v163;
  __int128 *v164;
  void *v165;
  id v166;
  id v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  id v172;
  Swift::String v173;
  Swift::String v174;
  Swift::String v175;
  uint64_t v176;
  void *v177;
  id v178;
  Swift::String v179;
  Swift::String v180;
  Swift::String v181;
  uint64_t v182;
  void *v183;
  NSString v184;
  float v185;
  float v186;
  uint64_t v187;
  char *v188;
  void *v189;
  id v190;
  id v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  id v196;
  Swift::String v197;
  Swift::String v198;
  Swift::String v199;
  uint64_t v200;
  uint64_t v201;
  void *v202;
  id v203;
  Swift::String v204;
  Swift::String v205;
  Swift::String v206;
  uint64_t v207;
  void *v208;
  NSString v209;
  float v210;
  float v211;
  float v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  void *v216;
  id v217;
  id v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  id v223;
  Swift::String_optional v224;
  Swift::String v225;
  Swift::String v226;
  Swift::String v227;
  uint64_t v228;
  void *v229;
  id v230;
  Swift::String v231;
  Swift::String v232;
  Swift::String v233;
  uint64_t v234;
  void *v235;
  NSString v236;
  float v237;
  float v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  void *v242;
  id v243;
  id v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  void *v248;
  id v249;
  Swift::String v250;
  Swift::String v251;
  Swift::String v252;
  uint64_t v253;
  void *v254;
  id v255;
  Swift::String v256;
  Swift::String v257;
  Swift::String v258;
  void *v259;
  NSString v260;
  float v261;
  void *v262;
  id v263;
  Swift::String v264;
  Swift::String v265;
  unint64_t v266;
  Swift::String v267;
  id v268;
  unint64_t v269;
  const char *v270;
  uint64_t v271;
  uint64_t v272;
  void *v273;
  id v274;
  double v275;
  id v276;
  id v277;
  uint64_t v278;
  uint64_t v279;
  void *v280;
  id v281;
  Swift::String_optional v282;
  Swift::String v283;
  Swift::String v284;
  Swift::String v285;
  uint64_t v286;
  unint64_t v287;
  uint64_t v288;
  void *v289;
  id v290;
  Swift::String v291;
  Swift::String v292;
  Swift::String v293;
  uint64_t v294;
  uint64_t v295;
  void *v296;
  uint64_t v297;
  NSString v298;
  float v299;
  float v300;
  uint64_t v301;
  float v302;
  void *v303;
  id v304;
  Swift::String v305;
  Swift::String v306;
  Swift::String v307;
  uint64_t v308;
  uint64_t v309;
  void *v310;
  id v311;
  Swift::String v312;
  Swift::String v313;
  Swift::String v314;
  void *v315;
  id v316;
  Swift::String v317;
  Swift::String v318;
  unint64_t v319;
  Swift::String v320;
  void *v321;
  id v322;
  unint64_t v323;
  unint64_t v324;
  Swift::String v325;
  Swift::String v326;
  unint64_t v327;
  Swift::String v328;
  unint64_t v329;
  Swift::String v330;
  uint64_t v331;
  Swift::String v332;
  Swift::String v333;
  Swift::String v334;
  unint64_t v335;
  Swift::String v336;
  void *v337;
  Swift::String v338;
  uint64_t v339;
  Swift::String v340;
  uint64_t *v341;
  unint64_t v342;
  unint64_t v343;
  unint64_t v344;
  unint64_t v345;
  __int128 v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  __int128 v351;
  uint64_t *v352;
  __int128 v353;
  Swift::String v354;
  Swift::String v355;
  Swift::String v356;
  Swift::String v357;
  Swift::String v358;
  Swift::String v359;
  Swift::String v360;
  Swift::String v361;
  Swift::String v362;
  Swift::String v363;
  Swift::String v364;
  Swift::String v365;
  Swift::String v366;
  Swift::String v367;
  Swift::String v368;
  Swift::String v369;
  Swift::String v370;
  Swift::String v371;
  Swift::String v372;
  Swift::String v373;
  Swift::String v374;

  LODWORD(v351) = a3;
  LODWORD(v350) = a2;
  v352 = a4;
  v7 = sub_10000EDC8(&qword_1004843D8);
  *(_QWORD *)&v353 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v346 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v346 - v11;
  v13 = (void *)objc_opt_self(NSUserDefaults);
  v14 = &off_10046F000;
  v15 = objc_msgSend(v13, "standardUserDefaults");
  v16 = *(_QWORD *)(Defaults.showPreciseMeasurement.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain(v16);
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v15, "BOOLForKey:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v19 = 0.0;
  if (a5 != 0.0)
  {
    v19 = fabsf(a5);
    if (v19 > 5000.0)
      v19 = 5000.0;
  }
  v20 = objc_msgSend(v13, "standardUserDefaults");
  v21 = *(_QWORD *)(Defaults.measurementBias.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain(v21);
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "floatForKey:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);
  v24 = v23;

  v25 = v19 * (float)(v24 + 1.0);
  if (!a1)
  {
    v26 = (void *)objc_opt_self(NSUnitLength);
    v27 = objc_msgSend(v26, "meters");
    v28 = sub_100018148(0, &qword_1004843E0, NSUnitLength_ptr);
    Measurement.init(value:unit:)(v27, v28, v25);
    v29 = objc_msgSend(v26, "inches");
    Measurement<>.converted(to:)();

    v30 = Measurement.value.getter(v7);
    v31 = *(void (**)(char *, uint64_t))(v353 + 8);
    v31(v10, v7);
    v25 = v30;
    v31(v12, v7);
    if ((v351 & 1) != 0)
    {
      if (v25 >= 12.0)
      {
LABEL_7:
        v32 = v25 / 12.0;
        if ((~COERCE_INT(v25 / 12.0) & 0x7F800000) != 0)
        {
          if (v32 <= -9.2234e18)
          {
            __break(1u);
          }
          else if (v32 < 9.2234e18)
          {
            v7 = (uint64_t)v32;
            v33 = 12 * (uint64_t)v32;
            if ((unsigned __int128)((uint64_t)v32 * (__int128)12) >> 64 == v33 >> 63)
            {
              v25 = v25 - (float)v33;
              if ((_DWORD)v18)
              {
                v18 = (id)sub_10000EDC8((uint64_t *)&unk_10048A100);
                v34 = swift_allocObject(v18, 72, 7);
                v353 = xmmword_1003B0BD0;
                *(_OWORD *)(v34 + 16) = xmmword_1003B0BD0;
                *(_QWORD *)(v34 + 56) = &type metadata for Float;
                *(_QWORD *)(v34 + 64) = &protocol witness table for Float;
                *(float *)(v34 + 32) = v25;
                v14 = (uint64_t **)String.init(format:_:)(1714564645, 0xE400000000000000, v34);
                v27 = v35;
                v36 = swift_allocObject(v18, 72, 7);
                *(_OWORD *)(v36 + 16) = v353;
                *(_QWORD *)(v36 + 56) = &type metadata for Int;
                *(_QWORD *)(v36 + 64) = &protocol witness table for Int;
                *(_QWORD *)(v36 + 32) = v7;
                v15 = (id)String.init(format:_:)(25637, 0xE200000000000000, v36);
                v21 = v37;
                if (qword_10047AB00 == -1)
                  goto LABEL_13;
                goto LABEL_95;
              }
              v211 = roundf(v25);
              if (v211 == 12.0)
                v212 = 0.0;
              else
                v212 = v211;
              if (v211 == 12.0)
                ++v7;
              v161 = sub_10000EDC8((uint64_t *)&unk_10048A100);
              v213 = swift_allocObject(v161, 72, 7);
              v353 = xmmword_1003B0BD0;
              *(_OWORD *)(v213 + 16) = xmmword_1003B0BD0;
              *(_QWORD *)(v213 + 56) = &type metadata for Int;
              *(_QWORD *)(v213 + 64) = &protocol witness table for Int;
              *(_QWORD *)(v213 + 32) = v7;
              *(_QWORD *)&v351 = String.init(format:_:)(25637, 0xE200000000000000, v213);
              v215 = v214;
              if (qword_10047AAF8 != -1)
                swift_once(&qword_10047AAF8, sub_100108AD8);
              v164 = &xmmword_1004AF000;
              v216 = (void *)qword_1004AF658;
              v217 = objc_msgSend(objc_allocWithZone((Class)NSDecimalNumber), "initWithInteger:", v7);
              v218 = objc_msgSend(v216, "stringFromNumber:", v217);

              if (!v218)
                goto LABEL_105;
              v219 = static String._unconditionallyBridgeFromObjectiveC(_:)(v218);
              v221 = v220;

              if (v212 == 0.0)
              {
                v222 = (void *)objc_opt_self(NSBundle);
                v223 = objc_msgSend(v222, "mainBundle");
                v224.value._countAndFlagsBits = 0xD000000000000014;
                v367._object = (void *)0x80000001003DFC50;
                v224.value._object = (void *)0x80000001003DFD80;
                v225._countAndFlagsBits = 0xB280E240243125;
                v225._object = (void *)0xA700000000000000;
                v226._countAndFlagsBits = 0;
                v226._object = (void *)0xE000000000000000;
                v367._countAndFlagsBits = 0xD00000000000009DLL;
                v227 = NSLocalizedString(_:tableName:bundle:value:comment:)(v225, v224, (NSBundle)v223, v226, v367);

                v228 = swift_allocObject(v161, 72, 7);
                *(_OWORD *)(v228 + 16) = v353;
                *(_QWORD *)(v228 + 56) = &type metadata for String;
                *(_QWORD *)(v228 + 64) = sub_100018B34();
                *(_QWORD *)(v228 + 32) = v219;
                *(_QWORD *)(v228 + 40) = v221;
                v77 = String.init(format:_:)(v227._countAndFlagsBits, v227._object, v228);
                v61 = v229;
                v230 = objc_msgSend(v222, "mainBundle", swift_bridgeObjectRelease(v227._object).n128_f64[0]);
                v368._object = (void *)0xE000000000000000;
                v231._countAndFlagsBits = 0x74656566204025;
                v231._object = (void *)0xE700000000000000;
                v232._countAndFlagsBits = 0;
                v232._object = (void *)0xE000000000000000;
                v368._countAndFlagsBits = 0;
                v233 = NSLocalizedString(_:tableName:bundle:value:comment:)(v231, (Swift::String_optional)0, (NSBundle)v230, v232, v368);

                v234 = swift_allocObject(v161, 72, 7);
                *(_OWORD *)(v234 + 16) = v353;
                *(_QWORD *)(v234 + 56) = &type metadata for Int;
                *(_QWORD *)(v234 + 64) = &protocol witness table for Int;
                *(_QWORD *)(v234 + 32) = v7;
                countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v233._countAndFlagsBits, v233._object, v234);
                v69 = v235;
                swift_bridgeObjectRelease(v233._object);
                swift_bridgeObjectRelease(v234);
                v236 = String._bridgeToObjectiveC()();
                objc_msgSend(v236, "floatValue", swift_bridgeObjectRelease(v215).n128_f64[0]);
                v238 = v237;

                v158 = v238 * 12.0;
                v159 = 2;
                goto LABEL_81;
              }
              v271 = swift_allocObject(v161, 72, 7);
              *(_OWORD *)(v271 + 16) = v353;
              if ((~LODWORD(v212) & 0x7F800000) != 0)
              {
                if (v212 > -9.2234e18)
                {
                  *(_QWORD *)&v353 = v215;
                  if (v212 < 9.2234e18)
                  {
                    *(_QWORD *)(v271 + 56) = &type metadata for Int;
                    *(_QWORD *)(v271 + 64) = &protocol witness table for Int;
                    v348 = (uint64_t)v212;
                    *(_QWORD *)(v271 + 32) = (uint64_t)v212;
                    v349 = String.init(format:_:)(25637, 0xE200000000000000, v271);
                    v350 = v272;
                    v273 = (void *)qword_1004AF658;
                    v274 = objc_allocWithZone((Class)NSDecimalNumber);
                    *(float *)&v275 = v212;
                    v276 = objc_msgSend(v274, "initWithFloat:", v275);
                    v277 = objc_msgSend(v273, "stringFromNumber:", v276);

                    if (v277)
                    {
                      v278 = static String._unconditionallyBridgeFromObjectiveC(_:)(v277);
                      v347 = v279;

                      v280 = (void *)objc_opt_self(NSBundle);
                      v281 = objc_msgSend(v280, "mainBundle");
                      v282.value._countAndFlagsBits = 0xD000000000000014;
                      v371._object = (void *)0x80000001003DFC50;
                      v282.value._object = (void *)0x80000001003DFD80;
                      v283._countAndFlagsBits = 0x20B280E240243125;
                      v283._object = (void *)0xAFB380E240243225;
                      v284._countAndFlagsBits = 0;
                      v284._object = (void *)0xE000000000000000;
                      v371._countAndFlagsBits = 0xD00000000000009DLL;
                      v285 = NSLocalizedString(_:tableName:bundle:value:comment:)(v283, v282, (NSBundle)v281, v284, v371);

                      v286 = swift_allocObject(v161, 112, 7);
                      v346 = xmmword_1003B0F60;
                      *(_OWORD *)(v286 + 16) = xmmword_1003B0F60;
                      *(_QWORD *)(v286 + 56) = &type metadata for String;
                      v287 = sub_100018B34();
                      *(_QWORD *)(v286 + 32) = v219;
                      *(_QWORD *)(v286 + 40) = v221;
                      *(_QWORD *)(v286 + 96) = &type metadata for String;
                      *(_QWORD *)(v286 + 104) = v287;
                      *(_QWORD *)(v286 + 64) = v287;
                      *(_QWORD *)(v286 + 72) = v278;
                      *(_QWORD *)(v286 + 80) = v347;
                      v288 = String.init(format:_:)(v285._countAndFlagsBits, v285._object, v286);
                      v61 = v289;
                      v290 = objc_msgSend(v280, "mainBundle", swift_bridgeObjectRelease(v285._object).n128_f64[0]);
                      v291._countAndFlagsBits = 0xD000000000000011;
                      v372._object = (void *)0xE000000000000000;
                      v291._object = (void *)0x80000001003DFDA0;
                      v292._countAndFlagsBits = 0;
                      v292._object = (void *)0xE000000000000000;
                      v372._countAndFlagsBits = 0;
                      v293 = NSLocalizedString(_:tableName:bundle:value:comment:)(v291, (Swift::String_optional)0, (NSBundle)v290, v292, v372);

                      v294 = swift_allocObject(v161, 112, 7);
                      *(_OWORD *)(v294 + 16) = v346;
                      *(_QWORD *)(v294 + 56) = &type metadata for Int;
                      *(_QWORD *)(v294 + 32) = v7;
                      *(_QWORD *)(v294 + 96) = &type metadata for Int;
                      *(_QWORD *)(v294 + 104) = &protocol witness table for Int;
                      v295 = v348;
                      *(_QWORD *)(v294 + 64) = &protocol witness table for Int;
                      *(_QWORD *)(v294 + 72) = v295;
                      countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v293._countAndFlagsBits, v293._object, v294);
                      v69 = v296;
                      swift_bridgeObjectRelease(v293._object);
                      swift_bridgeObjectRelease(v294);
                      v297 = v353;
                      v298 = String._bridgeToObjectiveC()();
                      objc_msgSend(v298, "floatValue", swift_bridgeObjectRelease(v297).n128_f64[0]);
                      v300 = v299;

                      v74 = v300 * 12.0;
                      v301 = v350;
                      v76 = String._bridgeToObjectiveC()();
                      v77 = v288;
                      objc_msgSend(v76, "floatValue", swift_bridgeObjectRelease(v301).n128_f64[0]);
                      goto LABEL_72;
                    }
                    goto LABEL_107;
                  }
                  goto LABEL_98;
                }
              }
              else
              {
                __break(1u);
              }
              __break(1u);
LABEL_98:
              __break(1u);
LABEL_99:
              swift_once(&qword_10047AAF8, sub_100108AD8);
LABEL_38:
              v165 = (void *)qword_1004AF658;
              v166 = objc_msgSend(objc_allocWithZone((Class)NSDecimalNumber), "initWithInteger:", v7);
              v167 = objc_msgSend(v165, "stringFromNumber:", v166);

              if (!v167)
              {
LABEL_108:
                __break(1u);
LABEL_109:
                __break(1u);
                goto LABEL_110;
              }
              v168 = static String._unconditionallyBridgeFromObjectiveC(_:)(v167);
              v170 = v169;

              v171 = (void *)objc_opt_self(NSBundle);
              v172 = objc_msgSend(v171, "mainBundle");
              v363._object = (void *)0x80000001003DFC50;
              v173._countAndFlagsBits = 0x9D80E2BDC24025;
              v173._object = (void *)0xA700000000000000;
              v174._countAndFlagsBits = 0;
              v174._object = (void *)0xE000000000000000;
              v363._countAndFlagsBits = 0xD00000000000009DLL;
              v175 = NSLocalizedString(_:tableName:bundle:value:comment:)(v173, (Swift::String_optional)0, (NSBundle)v172, v174, v363);

              v176 = swift_allocObject(v161, 72, 7);
              *(_OWORD *)(v176 + 16) = v353;
              *(_QWORD *)(v176 + 56) = &type metadata for String;
              *(_QWORD *)(v176 + 64) = sub_100018B34();
              *(_QWORD *)(v176 + 32) = v168;
              *(_QWORD *)(v176 + 40) = v170;
              v77 = String.init(format:_:)(v175._countAndFlagsBits, v175._object, v176);
              v61 = v177;
              v178 = objc_msgSend(v171, "mainBundle", swift_bridgeObjectRelease(v175._object).n128_f64[0]);
              v179._countAndFlagsBits = 0xD000000000000014;
              v364._object = (void *)0xE000000000000000;
              v179._object = (void *)0x80000001003DFDE0;
              v180._countAndFlagsBits = 0;
              v180._object = (void *)0xE000000000000000;
              v364._countAndFlagsBits = 0;
              v181 = NSLocalizedString(_:tableName:bundle:value:comment:)(v179, (Swift::String_optional)0, (NSBundle)v178, v180, v364);

              v182 = swift_allocObject(v161, 72, 7);
              *(_OWORD *)(v182 + 16) = v353;
              *(_QWORD *)(v182 + 56) = &type metadata for Int;
              *(_QWORD *)(v182 + 64) = &protocol witness table for Int;
              *(_QWORD *)(v182 + 32) = v7;
              countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v181._countAndFlagsBits, v181._object, v182);
              v69 = v183;
              swift_bridgeObjectRelease(v181._object);
              swift_bridgeObjectRelease(v182);
              v184 = String._bridgeToObjectiveC()();
              objc_msgSend(v184, "floatValue", swift_bridgeObjectRelease(v164).n128_f64[0]);
              v186 = v185;

              v158 = v186 + 0.5;
              v159 = 2;
LABEL_81:
              v341 = v352;
              *v352 = v77;
              v341[1] = (uint64_t)v61;
              v341[2] = countAndFlagsBits;
              v341[3] = (uint64_t)v69;
              *((float *)v341 + 8) = v158;
              *((_BYTE *)v341 + 36) = 0;
              *((_BYTE *)v341 + 37) = v159;
              return;
            }
            goto LABEL_86;
          }
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          swift_once(&qword_10047AB00, sub_100108BA8);
LABEL_27:
          v110 = (void *)qword_1004AF660;
          v111 = objc_allocWithZone((Class)NSNumber);
          *(float *)&v112 = v25;
          v113 = objc_msgSend(v111, "initWithFloat:", v112);
          v114 = objc_msgSend(v110, "stringFromNumber:", v113);

          if (v114)
          {
            v115 = static String._unconditionallyBridgeFromObjectiveC(_:)(v114);
            v117 = v116;

            v118 = (void *)objc_opt_self(NSBundle);
            v119 = objc_msgSend(v118, "mainBundle");
            v359._object = (void *)0x80000001003DFC50;
            v120._countAndFlagsBits = 0x9D80E24025;
            v120._object = (void *)0xA500000000000000;
            v121._countAndFlagsBits = 0;
            v121._object = (void *)0xE000000000000000;
            v359._countAndFlagsBits = 0xD00000000000009DLL;
            v122 = NSLocalizedString(_:tableName:bundle:value:comment:)(v120, (Swift::String_optional)0, (NSBundle)v119, v121, v359);

            v123 = swift_allocObject(v7, 72, 7);
            *(_OWORD *)(v123 + 16) = v353;
            *(_QWORD *)(v123 + 56) = &type metadata for String;
            *(_QWORD *)(v123 + 64) = sub_100018B34();
            *(_QWORD *)(v123 + 32) = v115;
            *(_QWORD *)(v123 + 40) = v117;
            v77 = String.init(format:_:)(v122._countAndFlagsBits, v122._object, v123);
            v61 = v124;
            v125 = objc_msgSend(v118, "mainBundle", swift_bridgeObjectRelease(v122._object).n128_f64[0]);
            v126._countAndFlagsBits = 0xD000000000000013;
            v360._object = (void *)0xE000000000000000;
            v126._object = (void *)0x80000001003DFEA0;
            v127._countAndFlagsBits = 0;
            v127._object = (void *)0xE000000000000000;
            v360._countAndFlagsBits = 0;
            v128 = NSLocalizedString(_:tableName:bundle:value:comment:)(v126, (Swift::String_optional)0, (NSBundle)v125, v127, v360);

            v129 = swift_allocObject(v7, 72, 7);
            *(_OWORD *)(v129 + 16) = v353;
            *(_QWORD *)(v129 + 56) = &type metadata for Float;
            *(_QWORD *)(v129 + 64) = &protocol witness table for Float;
            *(float *)(v129 + 32) = v25;
            countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v128._countAndFlagsBits, v128._object, v129);
            v69 = v130;
            object = v128._object;
LABEL_64:
            swift_bridgeObjectRelease(object);
            swift_bridgeObjectRelease(v129);
            v260 = String._bridgeToObjectiveC()();
            objc_msgSend(v260, "floatValue", swift_bridgeObjectRelease(v12).n128_f64[0]);
            v158 = v261;

            v159 = 2;
            goto LABEL_81;
          }
          goto LABEL_101;
        }
        __break(1u);
        goto LABEL_83;
      }
    }
    else if (v25 >= 36.0)
    {
      goto LABEL_7;
    }
    if ((_DWORD)v18)
    {
      v7 = sub_10000EDC8((uint64_t *)&unk_10048A100);
      v108 = swift_allocObject(v7, 72, 7);
      v353 = xmmword_1003B0BD0;
      *(_OWORD *)(v108 + 16) = xmmword_1003B0BD0;
      *(_QWORD *)(v108 + 56) = &type metadata for Float;
      *(_QWORD *)(v108 + 64) = &protocol witness table for Float;
      *(float *)(v108 + 32) = v25;
      *(_QWORD *)&v351 = String.init(format:_:)(1714564645, 0xE400000000000000, v108);
      v12 = v109;
      if (qword_10047AB00 == -1)
        goto LABEL_27;
      goto LABEL_87;
    }
    v160 = roundf(v25 + v25) * 0.5;
    if ((~LODWORD(v160) & 0x7F800000) != 0)
    {
      if (v160 > -9.2234e18)
      {
        if (v160 < 9.2234e18)
        {
          v7 = (uint64_t)v160;
          if ((float)(v160 - (float)(uint64_t)v160) > 0.00000011921)
          {
            if (!v7)
            {
              v303 = (void *)objc_opt_self(NSBundle);
              v304 = objc_msgSend(v303, "mainBundle");
              v373._object = (void *)0x80000001003DFC50;
              v305._countAndFlagsBits = 0x9D80E2BDC24025;
              v305._object = (void *)0xA700000000000000;
              v306._countAndFlagsBits = 0;
              v306._object = (void *)0xE000000000000000;
              v373._countAndFlagsBits = 0xD00000000000009DLL;
              v307 = NSLocalizedString(_:tableName:bundle:value:comment:)(v305, (Swift::String_optional)0, (NSBundle)v304, v306, v373);

              v308 = sub_10000EDC8((uint64_t *)&unk_10048A100);
              v309 = swift_allocObject(v308, 72, 7);
              *(_OWORD *)(v309 + 16) = xmmword_1003B0BD0;
              *(_QWORD *)(v309 + 56) = &type metadata for String;
              *(_QWORD *)(v309 + 64) = sub_100018B34();
              *(_QWORD *)(v309 + 32) = 0;
              *(_QWORD *)(v309 + 40) = 0xE000000000000000;
              v77 = String.init(format:_:)(v307._countAndFlagsBits, v307._object, v309);
              v61 = v310;
              v311 = objc_msgSend(v303, "mainBundle", swift_bridgeObjectRelease(v307._object).n128_f64[0]);
              v374._object = (void *)0xE000000000000000;
              v312._countAndFlagsBits = 0x206E6120666C6148;
              v312._object = (void *)0xEC00000068636E69;
              v313._countAndFlagsBits = 0;
              v313._object = (void *)0xE000000000000000;
              v374._countAndFlagsBits = 0;
              v314 = NSLocalizedString(_:tableName:bundle:value:comment:)(v312, (Swift::String_optional)0, (NSBundle)v311, v313, v374);
              countAndFlagsBits = v314._countAndFlagsBits;
              v69 = v314._object;

              v159 = 2;
              v158 = 0.5;
              goto LABEL_81;
            }
            v161 = sub_10000EDC8((uint64_t *)&unk_10048A100);
            v162 = swift_allocObject(v161, 72, 7);
            v353 = xmmword_1003B0BD0;
            *(_OWORD *)(v162 + 16) = xmmword_1003B0BD0;
            *(_QWORD *)(v162 + 56) = &type metadata for Int;
            *(_QWORD *)(v162 + 64) = &protocol witness table for Int;
            *(_QWORD *)(v162 + 32) = v7;
            *(_QWORD *)&v351 = String.init(format:_:)(25637, 0xE200000000000000, v162);
            v164 = v163;
            if (qword_10047AAF8 == -1)
              goto LABEL_38;
            goto LABEL_99;
          }
          if (v7)
          {
            v239 = sub_10000EDC8((uint64_t *)&unk_10048A100);
            v240 = swift_allocObject(v239, 72, 7);
            v353 = xmmword_1003B0BD0;
            *(_OWORD *)(v240 + 16) = xmmword_1003B0BD0;
            *(_QWORD *)(v240 + 56) = &type metadata for Int;
            *(_QWORD *)(v240 + 64) = &protocol witness table for Int;
            *(_QWORD *)(v240 + 32) = v7;
            *(_QWORD *)&v351 = String.init(format:_:)(25637, 0xE200000000000000, v240);
            v12 = v241;
            if (qword_10047AAF8 != -1)
              swift_once(&qword_10047AAF8, sub_100108AD8);
            v242 = (void *)qword_1004AF658;
            v243 = objc_msgSend(objc_allocWithZone((Class)NSDecimalNumber), "initWithInteger:", v7);
            v244 = objc_msgSend(v242, "stringFromNumber:", v243);

            if (!v244)
              goto LABEL_109;
            v245 = static String._unconditionallyBridgeFromObjectiveC(_:)(v244);
            v247 = v246;

            v248 = (void *)objc_opt_self(NSBundle);
            v249 = objc_msgSend(v248, "mainBundle");
            v369._object = (void *)0x80000001003DFC50;
            v250._countAndFlagsBits = 0x9D80E24025;
            v250._object = (void *)0xA500000000000000;
            v251._countAndFlagsBits = 0;
            v251._object = (void *)0xE000000000000000;
            v369._countAndFlagsBits = 0xD00000000000009DLL;
            v252 = NSLocalizedString(_:tableName:bundle:value:comment:)(v250, (Swift::String_optional)0, (NSBundle)v249, v251, v369);

            v253 = swift_allocObject(v239, 72, 7);
            *(_OWORD *)(v253 + 16) = v353;
            *(_QWORD *)(v253 + 56) = &type metadata for String;
            *(_QWORD *)(v253 + 64) = sub_100018B34();
            *(_QWORD *)(v253 + 32) = v245;
            *(_QWORD *)(v253 + 40) = v247;
            v77 = String.init(format:_:)(v252._countAndFlagsBits, v252._object, v253);
            v61 = v254;
            v255 = objc_msgSend(v248, "mainBundle", swift_bridgeObjectRelease(v252._object).n128_f64[0]);
            v370._object = (void *)0xE000000000000000;
            v256._countAndFlagsBits = 0x6568636E69204025;
            v256._object = (void *)0xE900000000000073;
            v257._countAndFlagsBits = 0;
            v257._object = (void *)0xE000000000000000;
            v370._countAndFlagsBits = 0;
            v258 = NSLocalizedString(_:tableName:bundle:value:comment:)(v256, (Swift::String_optional)0, (NSBundle)v255, v257, v370);

            v129 = swift_allocObject(v239, 72, 7);
            *(_OWORD *)(v129 + 16) = v353;
            *(_QWORD *)(v129 + 56) = &type metadata for Int;
            *(_QWORD *)(v129 + 64) = &protocol witness table for Int;
            *(_QWORD *)(v129 + 32) = v7;
            countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v258._countAndFlagsBits, v258._object, v129);
            v69 = v259;
            object = v258._object;
            goto LABEL_64;
          }
          v315 = (void *)objc_opt_self(NSBundle);
          v316 = objc_msgSend(v315, "mainBundle");
          v344 = 0x80000001003DFC50;
          if ((v350 & 1) != 0)
          {
            v317._countAndFlagsBits = 2642469424;
            v317._object = (void *)0xA400000000000000;
            v318._countAndFlagsBits = 0;
            v318._object = (void *)0xE000000000000000;
            v319 = 0xD00000000000009DLL;
            v320 = NSLocalizedString(_:tableName:bundle:value:comment:)(v317, (Swift::String_optional)0, (NSBundle)v316, v318, *(Swift::String *)(&v344 - 1));

            v354 = v320;
            v77 = String.init<A>(_:)(&v354, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
            v61 = v321;
            v322 = objc_msgSend(v315, "mainBundle");
            v345 = 0xE000000000000000;
            v323 = 0x636E69206F72655ALL;
            v324 = 0xEB00000000736568;
          }
          else
          {
            v333._countAndFlagsBits = 0x9D80E2BDC2203CLL;
            v333._object = (void *)0xA700000000000000;
            v334._countAndFlagsBits = 0;
            v334._object = (void *)0xE000000000000000;
            v335 = 0xD00000000000009DLL;
            v336 = NSLocalizedString(_:tableName:bundle:value:comment:)(v333, (Swift::String_optional)0, (NSBundle)v316, v334, *(Swift::String *)(&v344 - 1));

            v354 = v336;
            v77 = String.init<A>(_:)(&v354, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
            v61 = v337;
            v322 = objc_msgSend(v315, "mainBundle");
            v323 = 0xD000000000000016;
            v345 = 0xE000000000000000;
            v324 = 0x80000001003DFDC0;
          }
          v338._countAndFlagsBits = 0;
          v338._object = (void *)0xE000000000000000;
          v339 = 0;
          v340 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v323, (Swift::String_optional)0, (NSBundle)v322, v338, *(Swift::String *)(&v345 - 1));
          countAndFlagsBits = v340._countAndFlagsBits;
          v69 = v340._object;

          v159 = 2;
LABEL_80:
          v158 = 0.0;
          goto LABEL_81;
        }
        goto LABEL_93;
      }
      goto LABEL_91;
    }
    __break(1u);
    goto LABEL_89;
  }
  if (a1 == 1)
  {
    v79 = (void *)objc_opt_self(NSUnitLength);
    v27 = objc_msgSend(v79, "meters");
    v80 = sub_100018148(0, &qword_1004843E0, NSUnitLength_ptr);
    Measurement.init(value:unit:)(v27, v80, v25);
    v81 = objc_msgSend(v79, "centimeters");
    Measurement<>.converted(to:)();

    v82 = Measurement.value.getter(v7);
    v83 = *(void (**)(char *, uint64_t))(v353 + 8);
    v83(v10, v7);
    v19 = v82;
    v83(v12, v7);
    v84 = roundf(v19);
    if (v84 >= 100.0)
    {
      v7 = sub_10000EDC8((uint64_t *)&unk_10048A100);
      v132 = swift_allocObject(v7, 72, 7);
      v353 = xmmword_1003B0BD0;
      *(_OWORD *)(v132 + 16) = xmmword_1003B0BD0;
      *(_QWORD *)(v132 + 56) = &type metadata for Float;
      *(_QWORD *)(v132 + 64) = &protocol witness table for Float;
      *(float *)(v132 + 32) = v25;
      *(_QWORD *)&v351 = String.init(format:_:)(1714564645, 0xE400000000000000, v132);
      v12 = v133;
      if (qword_10047AB00 == -1)
      {
LABEL_30:
        v134 = (void *)qword_1004AF660;
        v135 = objc_allocWithZone((Class)NSNumber);
        *(float *)&v136 = v25;
        v137 = objc_msgSend(v135, "initWithFloat:", v136);
        v138 = objc_msgSend(v134, "stringFromNumber:", v137);

        if (v138)
        {
          v139 = static String._unconditionallyBridgeFromObjectiveC(_:)(v138);
          v141 = v140;

          v142 = (void *)objc_opt_self(NSBundle);
          v143 = objc_msgSend(v142, "mainBundle");
          v144.value._countAndFlagsBits = 0xD000000000000014;
          v361._object = (void *)0x80000001003DFC50;
          v144.value._object = (void *)0x80000001003DFD80;
          v145._countAndFlagsBits = 1830830117;
          v145._object = (void *)0xE400000000000000;
          v146._countAndFlagsBits = 0;
          v146._object = (void *)0xE000000000000000;
          v361._countAndFlagsBits = 0xD00000000000009DLL;
          v147 = NSLocalizedString(_:tableName:bundle:value:comment:)(v145, v144, (NSBundle)v143, v146, v361);

          v148 = swift_allocObject(v7, 72, 7);
          *(_OWORD *)(v148 + 16) = v353;
          *(_QWORD *)(v148 + 56) = &type metadata for String;
          *(_QWORD *)(v148 + 64) = sub_100018B34();
          *(_QWORD *)(v148 + 32) = v139;
          *(_QWORD *)(v148 + 40) = v141;
          v77 = String.init(format:_:)(v147._countAndFlagsBits, v147._object, v148);
          v61 = v149;
          v150 = objc_msgSend(v142, "mainBundle", swift_bridgeObjectRelease(v147._object).n128_f64[0]);
          v151._countAndFlagsBits = 0xD000000000000013;
          v362._object = (void *)0xE000000000000000;
          v151._object = (void *)0x80000001003DFE40;
          v152._countAndFlagsBits = 0;
          v152._object = (void *)0xE000000000000000;
          v362._countAndFlagsBits = 0;
          v153 = NSLocalizedString(_:tableName:bundle:value:comment:)(v151, (Swift::String_optional)0, (NSBundle)v150, v152, v362);

          v154 = swift_allocObject(v7, 72, 7);
          *(_OWORD *)(v154 + 16) = v353;
          *(_QWORD *)(v154 + 56) = &type metadata for Float;
          *(_QWORD *)(v154 + 64) = &protocol witness table for Float;
          *(float *)(v154 + 32) = v25;
          countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v153._countAndFlagsBits, v153._object, v154);
          v69 = v155;
          swift_bridgeObjectRelease(v153._object);
          swift_bridgeObjectRelease(v154);
          v156 = String._bridgeToObjectiveC()();
          objc_msgSend(v156, "floatValue", swift_bridgeObjectRelease(v12).n128_f64[0]);
          v158 = v157;

          v159 = 0;
          goto LABEL_81;
        }
        __break(1u);
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
LABEL_83:
      swift_once(&qword_10047AB00, sub_100108BA8);
      goto LABEL_30;
    }
    if (!(_DWORD)v18)
    {
      if ((~LODWORD(v84) & 0x7F800000) == 0)
      {
        __break(1u);
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
      if (v84 <= -9.2234e18)
      {
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      if (v84 >= 9.2234e18)
      {
LABEL_94:
        __break(1u);
LABEL_95:
        swift_once(&qword_10047AB00, sub_100108BA8);
LABEL_13:
        v38 = (void *)qword_1004AF660;
        v39 = objc_allocWithZone((Class)NSNumber);
        *(float *)&v40 = v25;
        v41 = objc_msgSend(v39, "initWithFloat:", v40);
        v42 = objc_msgSend(v38, "stringFromNumber:", v41);

        if (v42)
        {
          v349 = (uint64_t)v15;
          v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
          v347 = v44;
          v348 = v43;

          if (qword_10047AAF8 != -1)
            swift_once(&qword_10047AAF8, sub_100108AD8);
          v350 = v21;
          *(_QWORD *)&v351 = v14;
          *(_QWORD *)&v353 = v27;
          v45 = (void *)qword_1004AF658;
          v46 = objc_msgSend(objc_allocWithZone((Class)NSDecimalNumber), "initWithInteger:", v7);
          v47 = objc_msgSend(v45, "stringFromNumber:", v46);

          if (v47)
          {
            v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
            v50 = v49;

            v51 = (void *)objc_opt_self(NSBundle);
            v52 = objc_msgSend(v51, "mainBundle");
            v355._object = (void *)0x80000001003DFC50;
            v53._countAndFlagsBits = 0x80E2402520274025;
            v53._object = (void *)0xA90000000000009DLL;
            v54._countAndFlagsBits = 0;
            v54._object = (void *)0xE000000000000000;
            v355._countAndFlagsBits = 0xD00000000000009DLL;
            v55 = NSLocalizedString(_:tableName:bundle:value:comment:)(v53, (Swift::String_optional)0, (NSBundle)v52, v54, v355);

            v56 = swift_allocObject(v18, 112, 7);
            v346 = xmmword_1003B0F60;
            *(_OWORD *)(v56 + 16) = xmmword_1003B0F60;
            *(_QWORD *)(v56 + 56) = &type metadata for String;
            v57 = sub_100018B34();
            *(_QWORD *)(v56 + 32) = v48;
            *(_QWORD *)(v56 + 40) = v50;
            *(_QWORD *)(v56 + 96) = &type metadata for String;
            *(_QWORD *)(v56 + 104) = v57;
            v58 = v348;
            *(_QWORD *)(v56 + 64) = v57;
            *(_QWORD *)(v56 + 72) = v58;
            *(_QWORD *)(v56 + 80) = v347;
            v59 = String.init(format:_:)(v55._countAndFlagsBits, v55._object, v56);
            v61 = v60;
            v62 = objc_msgSend(v51, "mainBundle", swift_bridgeObjectRelease(v55._object).n128_f64[0]);
            v63._countAndFlagsBits = 0xD00000000000001BLL;
            v356._object = (void *)0xE000000000000000;
            v63._object = (void *)0x80000001003DFE80;
            v64._countAndFlagsBits = 0;
            v64._object = (void *)0xE000000000000000;
            v356._countAndFlagsBits = 0;
            v65 = NSLocalizedString(_:tableName:bundle:value:comment:)(v63, (Swift::String_optional)0, (NSBundle)v62, v64, v356);

            v66 = swift_allocObject(v18, 112, 7);
            *(_OWORD *)(v66 + 16) = v346;
            *(_QWORD *)(v66 + 56) = &type metadata for Int;
            *(_QWORD *)(v66 + 64) = &protocol witness table for Int;
            *(_QWORD *)(v66 + 32) = v7;
            *(_QWORD *)(v66 + 96) = &type metadata for Float;
            *(_QWORD *)(v66 + 104) = &protocol witness table for Float;
            *(float *)(v66 + 72) = v25;
            countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v65._countAndFlagsBits, v65._object, v66);
            v69 = v68;
            swift_bridgeObjectRelease(v65._object);
            swift_bridgeObjectRelease(v66);
            v70 = v350;
            v71 = String._bridgeToObjectiveC()();
            objc_msgSend(v71, "floatValue", swift_bridgeObjectRelease(v70).n128_f64[0]);
            v73 = v72;

            v74 = v73 * 12.0;
            v75 = v353;
            v76 = String._bridgeToObjectiveC()();
            v77 = v59;
            objc_msgSend(v76, "floatValue", swift_bridgeObjectRelease(v75).n128_f64[0]);
LABEL_72:
            v302 = v78;

            v158 = v74 + v302;
            v159 = 2;
            goto LABEL_81;
          }
          goto LABEL_104;
        }
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
        goto LABEL_108;
      }
      v187 = (uint64_t)v84;
      if (!(uint64_t)v84)
      {
        v262 = (void *)objc_opt_self(NSBundle);
        v263 = objc_msgSend(v262, "mainBundle");
        v342 = 0x80000001003DFC50;
        if ((v350 & 1) != 0)
        {
          v264._countAndFlagsBits = 1835212848;
          v264._object = (void *)0xE400000000000000;
          v265._countAndFlagsBits = 0;
          v265._object = (void *)0xE000000000000000;
          v266 = 0xD00000000000009DLL;
          v267 = NSLocalizedString(_:tableName:bundle:value:comment:)(v264, (Swift::String_optional)0, (NSBundle)v263, v265, *(Swift::String *)(&v342 - 1));
          v61 = v267._object;

          v268 = objc_msgSend(v262, "mainBundle");
          v269 = 0xD000000000000010;
          v343 = 0xE000000000000000;
          v77 = v267._countAndFlagsBits;
          v270 = "Zero centimeters";
        }
        else
        {
          v325._countAndFlagsBits = 0x6D632031203CLL;
          v325._object = (void *)0xE600000000000000;
          v326._countAndFlagsBits = 0;
          v326._object = (void *)0xE000000000000000;
          v327 = 0xD00000000000009DLL;
          v328 = NSLocalizedString(_:tableName:bundle:value:comment:)(v325, (Swift::String_optional)0, (NSBundle)v263, v326, *(Swift::String *)(&v342 - 1));
          v61 = v328._object;

          v268 = objc_msgSend(v262, "mainBundle");
          v269 = 0xD000000000000018;
          v343 = 0xE000000000000000;
          v77 = v328._countAndFlagsBits;
          v270 = "Less than one centimeter";
        }
        v329 = (unint64_t)(v270 - 32) | 0x8000000000000000;
        v330._countAndFlagsBits = 0;
        v330._object = (void *)0xE000000000000000;
        v331 = 0;
        v332 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v269, (Swift::String_optional)0, (NSBundle)v268, v330, *(Swift::String *)(&v343 - 1));
        countAndFlagsBits = v332._countAndFlagsBits;
        v69 = v332._object;

        v159 = 1;
        goto LABEL_80;
      }
      v354._countAndFlagsBits = (uint64_t)v84;
      *(_QWORD *)&v353 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v12 = v188;
      if (qword_10047AAF8 != -1)
        swift_once(&qword_10047AAF8, sub_100108AD8);
      v189 = (void *)qword_1004AF658;
      v190 = objc_msgSend(objc_allocWithZone((Class)NSDecimalNumber), "initWithInteger:", v187);
      v191 = objc_msgSend(v189, "stringFromNumber:", v190);

      if (!v191)
        goto LABEL_106;
      v192 = static String._unconditionallyBridgeFromObjectiveC(_:)(v191);
      v194 = v193;

      v195 = (void *)objc_opt_self(NSBundle);
      v196 = objc_msgSend(v195, "mainBundle");
      v365._object = (void *)0x80000001003DFC50;
      v197._countAndFlagsBits = 0x6D63204025;
      v197._object = (void *)0xE500000000000000;
      v198._countAndFlagsBits = 0;
      v198._object = (void *)0xE000000000000000;
      v365._countAndFlagsBits = 0xD00000000000009DLL;
      v199 = NSLocalizedString(_:tableName:bundle:value:comment:)(v197, (Swift::String_optional)0, (NSBundle)v196, v198, v365);

      v200 = sub_10000EDC8((uint64_t *)&unk_10048A100);
      v201 = swift_allocObject(v200, 72, 7);
      v351 = xmmword_1003B0BD0;
      *(_OWORD *)(v201 + 16) = xmmword_1003B0BD0;
      *(_QWORD *)(v201 + 56) = &type metadata for String;
      *(_QWORD *)(v201 + 64) = sub_100018B34();
      *(_QWORD *)(v201 + 32) = v192;
      *(_QWORD *)(v201 + 40) = v194;
      v77 = String.init(format:_:)(v199._countAndFlagsBits, v199._object, v201);
      v61 = v202;
      v203 = objc_msgSend(v195, "mainBundle", swift_bridgeObjectRelease(v199._object).n128_f64[0]);
      v366._object = (void *)0xE000000000000000;
      v204._countAndFlagsBits = 0x69746E6563204025;
      v204._object = (void *)0xEE0073726574656DLL;
      v205._countAndFlagsBits = 0;
      v205._object = (void *)0xE000000000000000;
      v366._countAndFlagsBits = 0;
      v206 = NSLocalizedString(_:tableName:bundle:value:comment:)(v204, (Swift::String_optional)0, (NSBundle)v203, v205, v366);

      v207 = swift_allocObject(v200, 72, 7);
      *(_OWORD *)(v207 + 16) = v351;
      *(_QWORD *)(v207 + 56) = &type metadata for Int;
      *(_QWORD *)(v207 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v207 + 32) = v187;
      countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v206._countAndFlagsBits, v206._object, v207);
      v69 = v208;
      swift_bridgeObjectRelease(v206._object);
      swift_bridgeObjectRelease(v207);
LABEL_48:
      v209 = String._bridgeToObjectiveC()();
      objc_msgSend(v209, "floatValue", swift_bridgeObjectRelease(v12).n128_f64[0]);
      v158 = v210;

      v159 = 1;
      goto LABEL_81;
    }
    v7 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v85 = swift_allocObject(v7, 72, 7);
    v353 = xmmword_1003B0BD0;
    *(_OWORD *)(v85 + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(v85 + 56) = &type metadata for Float;
    *(_QWORD *)(v85 + 64) = &protocol witness table for Float;
    *(float *)(v85 + 32) = v19;
    *(_QWORD *)&v351 = String.init(format:_:)(1714564645, 0xE400000000000000, v85);
    v12 = v86;
    if (qword_10047AB00 == -1)
    {
LABEL_22:
      v87 = (void *)qword_1004AF660;
      v88 = objc_allocWithZone((Class)NSNumber);
      *(float *)&v89 = v19;
      v90 = objc_msgSend(v88, "initWithFloat:", v89);
      v91 = objc_msgSend(v87, "stringFromNumber:", v90);

      if (!v91)
      {
LABEL_102:
        __break(1u);
        goto LABEL_103;
      }
      v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v91);
      v94 = v93;

      v95 = (void *)objc_opt_self(NSBundle);
      v96 = objc_msgSend(v95, "mainBundle");
      v357._object = (void *)0x80000001003DFC50;
      v97._countAndFlagsBits = 0x6D63204025;
      v97._object = (void *)0xE500000000000000;
      v98._countAndFlagsBits = 0;
      v98._object = (void *)0xE000000000000000;
      v357._countAndFlagsBits = 0xD00000000000009DLL;
      v99 = NSLocalizedString(_:tableName:bundle:value:comment:)(v97, (Swift::String_optional)0, (NSBundle)v96, v98, v357);

      v100 = swift_allocObject(v7, 72, 7);
      *(_OWORD *)(v100 + 16) = v353;
      *(_QWORD *)(v100 + 56) = &type metadata for String;
      *(_QWORD *)(v100 + 64) = sub_100018B34();
      *(_QWORD *)(v100 + 32) = v92;
      *(_QWORD *)(v100 + 40) = v94;
      v77 = String.init(format:_:)(v99._countAndFlagsBits, v99._object, v100);
      v61 = v101;
      v102 = objc_msgSend(v95, "mainBundle", swift_bridgeObjectRelease(v99._object).n128_f64[0]);
      v103._countAndFlagsBits = 0xD000000000000018;
      v358._object = (void *)0xE000000000000000;
      v103._object = (void *)0x80000001003DFE60;
      v104._countAndFlagsBits = 0;
      v104._object = (void *)0xE000000000000000;
      v358._countAndFlagsBits = 0;
      v105 = NSLocalizedString(_:tableName:bundle:value:comment:)(v103, (Swift::String_optional)0, (NSBundle)v102, v104, v358);

      v106 = swift_allocObject(v7, 72, 7);
      *(_OWORD *)(v106 + 16) = v353;
      *(_QWORD *)(v106 + 56) = &type metadata for Float;
      *(_QWORD *)(v106 + 64) = &protocol witness table for Float;
      *(float *)(v106 + 32) = v19;
      countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v105._countAndFlagsBits, v105._object, v106);
      v69 = v107;
      swift_bridgeObjectRelease(v105._object);
      swift_bridgeObjectRelease(v106);
      goto LABEL_48;
    }
LABEL_89:
    swift_once(&qword_10047AB00, sub_100108BA8);
    goto LABEL_22;
  }
LABEL_110:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Measure/MeasureUtil.swift", 25, 2, 289, 0);
  __break(1u);
}

uint64_t sub_10010B204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  float v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  double v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  double v22;
  void (*v23)(char *, uint64_t);
  float v24;
  uint64_t v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;
  char v31;
  uint64_t result;
  uint64_t v33[2];
  uint64_t v34;
  uint64_t v35[2];
  uint64_t v36;
  char v37;

  v6 = sub_10000EDC8(&qword_1004843D8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)v33 - v11;
  v13 = 5000.0;
  if (a3 <= 5000.0)
    v13 = a3;
  if (a3 < 0.0)
    v13 = 0.0;
  if (a1 == 1)
  {
    v14 = v35;
    v15 = &v36;
    sub_100108E28(1, 0, 0, v35, v13);
    v16 = (uint64_t *)&v37;
LABEL_20:
    v27 = *v14;
    v28 = v14[1];
    v29 = *((_DWORD *)v14 + 8);
    v30 = *((_BYTE *)v14 + 36);
    v31 = *((_BYTE *)v14 + 37);
    sub_10001F9D8((uint64_t)v15, (uint64_t)v16);
    result = sub_1000C22B0((uint64_t)v16);
    *(_QWORD *)a2 = v27;
    *(_QWORD *)(a2 + 8) = v28;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = 0;
    *(_DWORD *)(a2 + 32) = v29;
    *(_BYTE *)(a2 + 36) = v30;
    *(_BYTE *)(a2 + 37) = v31;
    return result;
  }
  if (!a1)
  {
    v17 = v13;
    v18 = (void *)objc_opt_self(NSUnitLength);
    v19 = objc_msgSend(v18, "meters");
    v20 = sub_100018148(0, &qword_1004843E0, NSUnitLength_ptr);
    Measurement.init(value:unit:)(v19, v20, v17);
    v21 = objc_msgSend(v18, "inches");
    Measurement<>.converted(to:)();

    v22 = Measurement.value.getter(v6);
    v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23(v10, v6);
    *(float *)&v22 = v22;
    v23(v12, v6);
    v24 = roundf(*(float *)&v22 + *(float *)&v22) * 0.5;
    if ((~LODWORD(v24) & 0x7F800000) != 0)
    {
      if (v24 > -9.2234e18)
      {
        if (v24 < 9.2234e18)
        {
          v15 = &v34;
          v25 = (uint64_t)v24;
          if ((unint64_t)(uint64_t)v24 >= 0xA)
          {
            if ((unint64_t)((uint64_t)v24 - 10) >= 0x1A)
            {
              if (v25 >= 36)
              {
                v26 = 30.455;
                if ((unint64_t)v25 < 0x78)
                  v26 = 1.17;
              }
              else
              {
                v26 = 30.455;
              }
            }
            else
            {
              v26 = 0.85;
            }
          }
          else
          {
            v26 = 0.089;
          }
          v14 = v33;
          sub_100108E28(0, 0, 0, v33, v26);
          v16 = v35;
          goto LABEL_20;
        }
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Measure/MeasureUtil.swift", 25, 2, 319, 0);
  __break(1u);
  return result;
}

void sub_10010B508(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>, float a4@<S0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  double v19;
  void (*v20)(char *, uint64_t);
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v33;
  uint64_t v34;
  void *v35;
  id v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t countAndFlagsBits;
  void *v43;
  void *object;
  id v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  NSString v54;
  float v55;
  float v56;
  float v57;
  float v58;
  uint64_t v59;
  uint64_t v60;
  float v61;
  float v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  double v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  id v86;
  Swift::String_optional v87;
  Swift::String v88;
  Swift::String v89;
  Swift::String v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  void *v95;
  id v96;
  Swift::String v97;
  Swift::String v98;
  Swift::String v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  NSString v104;
  float v105;
  float v106;
  float v107;
  uint64_t v108;
  NSString v109;
  float v110;
  float v111;
  void *v112;
  id v113;
  Swift::String v114;
  Swift::String v115;
  Swift::String v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  id v120;
  Swift::String v121;
  Swift::String v122;
  Swift::String v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  NSString v127;
  float v128;
  void *v129;
  id v130;
  Swift::String v131;
  Swift::String v132;
  Swift::String v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  id v137;
  Swift::String v138;
  Swift::String v139;
  Swift::String v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  NSString v144;
  float v145;
  void *v146;
  id v147;
  Swift::String v148;
  Swift::String v149;
  Swift::String v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  id v154;
  Swift::String v155;
  Swift::String v156;
  Swift::String v157;
  void *v158;
  id v159;
  Swift::String v160;
  Swift::String v161;
  unint64_t v162;
  Swift::String v163;
  id v164;
  unint64_t v165;
  unint64_t v166;
  Swift::String v167;
  Swift::String v168;
  unint64_t v169;
  Swift::String v170;
  Swift::String v171;
  uint64_t v172;
  Swift::String v173;
  unint64_t v174;
  unint64_t v175;
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  __int128 v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  Swift::String v187;
  Swift::String v188;
  Swift::String v189;
  Swift::String v190;
  Swift::String v191;
  Swift::String v192;
  Swift::String v193;
  Swift::String v194;
  Swift::String v195;
  Swift::String v196;

  v8 = sub_10000EDC8(&qword_1004843D8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v176 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v176 - v13;
  v15 = (void *)objc_opt_self(NSUnitLength);
  v16 = objc_msgSend(v15, "meters");
  v17 = sub_100018148(0, &qword_1004843E0, NSUnitLength_ptr);
  Measurement.init(value:unit:)(v16, v17, a4);
  v18 = objc_msgSend(v15, "inches");
  Measurement<>.converted(to:)(v18, v8);

  v19 = Measurement.value.getter(v8);
  v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v12, v8);
  v21 = v19;
  v20(v14, v8);
  v22 = roundf(v21 + v21) * 0.5;
  if ((~LODWORD(v22) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v22 <= -9.2234e18)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v22 >= 9.2234e18)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    swift_once(&qword_10047AAF8, sub_100108AD8);
    goto LABEL_8;
  }
  v12 = (char *)(uint64_t)v22;
  if ((uint64_t)v22)
  {
    v23 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v24 = swift_allocObject(v23, 72, 7);
    *(_OWORD *)(v24 + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(v24 + 56) = &type metadata for Int;
    *(_QWORD *)(v24 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v24 + 32) = v12;
    v184 = String.init(format:_:)(25637, 0xE200000000000000, v24);
    *(_QWORD *)&v186 = v25;
  }
  else
  {
    v184 = 0;
    *(_QWORD *)&v186 = 0xE000000000000000;
  }
  v185 = a3;
  if (qword_10047AAF8 != -1)
    goto LABEL_51;
LABEL_8:
  v26 = (void *)qword_1004AF658;
  v27 = objc_msgSend(objc_allocWithZone((Class)NSDecimalNumber), "initWithInteger:", v12);
  v28 = objc_msgSend(v26, "stringFromNumber:", v27);

  if (!v28)
  {
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v31 = v30;

  if (v21 >= 0.0 && v21 < 12.0)
  {
    if ((float)(v22 - (float)(uint64_t)v12) <= 0.00000011921)
    {
      v34 = v185;
      if (v12)
      {
        v112 = (void *)objc_opt_self(NSBundle);
        v113 = objc_msgSend(v112, "mainBundle");
        v191._object = (void *)0x80000001003DFC50;
        v114._countAndFlagsBits = 0x9D80E24025;
        v114._object = (void *)0xA500000000000000;
        v115._countAndFlagsBits = 0;
        v115._object = (void *)0xE000000000000000;
        v191._countAndFlagsBits = 0xD00000000000009DLL;
        v116 = NSLocalizedString(_:tableName:bundle:value:comment:)(v114, (Swift::String_optional)0, (NSBundle)v113, v115, v191);

        v117 = sub_10000EDC8((uint64_t *)&unk_10048A100);
        v118 = swift_allocObject(v117, 72, 7);
        v183 = xmmword_1003B0BD0;
        *(_OWORD *)(v118 + 16) = xmmword_1003B0BD0;
        *(_QWORD *)(v118 + 56) = &type metadata for String;
        *(_QWORD *)(v118 + 64) = sub_100018B34();
        *(_QWORD *)(v118 + 32) = v29;
        *(_QWORD *)(v118 + 40) = v31;
        countAndFlagsBits = String.init(format:_:)(v116._countAndFlagsBits, v116._object, v118);
        object = v119;
        v120 = objc_msgSend(v112, "mainBundle", swift_bridgeObjectRelease(v116._object).n128_f64[0]);
        v192._object = (void *)0xE000000000000000;
        v121._countAndFlagsBits = 0x6568636E69204025;
        v121._object = (void *)0xE900000000000073;
        v122._countAndFlagsBits = 0;
        v122._object = (void *)0xE000000000000000;
        v192._countAndFlagsBits = 0;
        v123 = NSLocalizedString(_:tableName:bundle:value:comment:)(v121, (Swift::String_optional)0, (NSBundle)v120, v122, v192);

        v124 = swift_allocObject(v117, 72, 7);
        *(_OWORD *)(v124 + 16) = v183;
        *(_QWORD *)(v124 + 56) = &type metadata for Int;
        *(_QWORD *)(v124 + 64) = &protocol witness table for Int;
        *(_QWORD *)(v124 + 32) = v12;
        v50 = static String.localizedStringWithFormat(_:_:)(v123._countAndFlagsBits, v123._object, v124);
        v52 = v125;
        swift_bridgeObjectRelease(v123._object);
        swift_bridgeObjectRelease(v124);
        v126 = v186;
        v127 = String._bridgeToObjectiveC()();
        objc_msgSend(v127, "floatValue", swift_bridgeObjectRelease(v126).n128_f64[0]);
        v57 = v128;

      }
      else
      {
        swift_bridgeObjectRelease(v31);
        swift_bridgeObjectRelease(v186);
        v158 = (void *)objc_opt_self(NSBundle);
        v159 = objc_msgSend(v158, "mainBundle");
        v174 = 0x80000001003DFC50;
        if ((a2 & 1) != 0)
        {
          v160._countAndFlagsBits = 2642469424;
          v160._object = (void *)0xA400000000000000;
          v161._countAndFlagsBits = 0;
          v161._object = (void *)0xE000000000000000;
          v162 = 0xD00000000000009DLL;
          v163 = NSLocalizedString(_:tableName:bundle:value:comment:)(v160, (Swift::String_optional)0, (NSBundle)v159, v161, *(Swift::String *)(&v174 - 1));
          countAndFlagsBits = v163._countAndFlagsBits;
          object = v163._object;

          v164 = objc_msgSend(v158, "mainBundle");
          v175 = 0xE000000000000000;
          v165 = 0x636E69206F72655ALL;
          v166 = 0xEB00000000736568;
        }
        else
        {
          v167._countAndFlagsBits = 0x9D80E2BDC2203CLL;
          v167._object = (void *)0xA700000000000000;
          v168._countAndFlagsBits = 0;
          v168._object = (void *)0xE000000000000000;
          v169 = 0xD00000000000009DLL;
          v170 = NSLocalizedString(_:tableName:bundle:value:comment:)(v167, (Swift::String_optional)0, (NSBundle)v159, v168, *(Swift::String *)(&v174 - 1));
          countAndFlagsBits = v170._countAndFlagsBits;
          object = v170._object;

          v164 = objc_msgSend(v158, "mainBundle");
          v165 = 0xD000000000000016;
          v175 = 0xE000000000000000;
          v166 = 0x80000001003DFDC0;
        }
        v171._countAndFlagsBits = 0;
        v171._object = (void *)0xE000000000000000;
        v172 = 0;
        v173 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v165, (Swift::String_optional)0, (NSBundle)v164, v171, *(Swift::String *)(&v175 - 1));
        v50 = v173._countAndFlagsBits;
        v52 = v173._object;

        v57 = 0.0;
      }
    }
    else
    {
      v34 = v185;
      if (v12)
      {
        v35 = (void *)objc_opt_self(NSBundle);
        v36 = objc_msgSend(v35, "mainBundle");
        v187._object = (void *)0x80000001003DFC50;
        v37._countAndFlagsBits = 0x9D80E2BDC24025;
        v37._object = (void *)0xA700000000000000;
        v38._countAndFlagsBits = 0;
        v38._object = (void *)0xE000000000000000;
        v187._countAndFlagsBits = 0xD00000000000009DLL;
        v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v187);

        v40 = sub_10000EDC8((uint64_t *)&unk_10048A100);
        v41 = swift_allocObject(v40, 72, 7);
        v183 = xmmword_1003B0BD0;
        *(_OWORD *)(v41 + 16) = xmmword_1003B0BD0;
        *(_QWORD *)(v41 + 56) = &type metadata for String;
        *(_QWORD *)(v41 + 64) = sub_100018B34();
        *(_QWORD *)(v41 + 32) = v29;
        *(_QWORD *)(v41 + 40) = v31;
        countAndFlagsBits = String.init(format:_:)(v39._countAndFlagsBits, v39._object, v41);
        object = v43;
        v45 = objc_msgSend(v35, "mainBundle", swift_bridgeObjectRelease(v39._object).n128_f64[0]);
        v46._countAndFlagsBits = 0xD000000000000014;
        v188._object = (void *)0xE000000000000000;
        v46._object = (void *)0x80000001003DFDE0;
        v47._countAndFlagsBits = 0;
        v47._object = (void *)0xE000000000000000;
        v188._countAndFlagsBits = 0;
        v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, (Swift::String_optional)0, (NSBundle)v45, v47, v188);

        v49 = swift_allocObject(v40, 72, 7);
        *(_OWORD *)(v49 + 16) = v183;
        *(_QWORD *)(v49 + 56) = &type metadata for Int;
        *(_QWORD *)(v49 + 64) = &protocol witness table for Int;
        *(_QWORD *)(v49 + 32) = v12;
        v50 = static String.localizedStringWithFormat(_:_:)(v48._countAndFlagsBits, v48._object, v49);
        v52 = v51;
        swift_bridgeObjectRelease(v48._object);
        swift_bridgeObjectRelease(v49);
        v53 = v186;
        v54 = String._bridgeToObjectiveC()();
        objc_msgSend(v54, "floatValue", swift_bridgeObjectRelease(v53).n128_f64[0]);
        v56 = v55;

        v57 = v56 + 0.5;
      }
      else
      {
        swift_bridgeObjectRelease(v31);
        swift_bridgeObjectRelease(v186);
        v146 = (void *)objc_opt_self(NSBundle);
        v147 = objc_msgSend(v146, "mainBundle");
        v195._object = (void *)0x80000001003DFC50;
        v148._countAndFlagsBits = 0x9D80E2BDC24025;
        v148._object = (void *)0xA700000000000000;
        v149._countAndFlagsBits = 0;
        v149._object = (void *)0xE000000000000000;
        v195._countAndFlagsBits = 0xD00000000000009DLL;
        v150 = NSLocalizedString(_:tableName:bundle:value:comment:)(v148, (Swift::String_optional)0, (NSBundle)v147, v149, v195);

        v151 = sub_10000EDC8((uint64_t *)&unk_10048A100);
        v152 = swift_allocObject(v151, 72, 7);
        *(_OWORD *)(v152 + 16) = xmmword_1003B0BD0;
        *(_QWORD *)(v152 + 56) = &type metadata for String;
        *(_QWORD *)(v152 + 64) = sub_100018B34();
        *(_QWORD *)(v152 + 32) = 0;
        *(_QWORD *)(v152 + 40) = 0xE000000000000000;
        countAndFlagsBits = String.init(format:_:)(v150._countAndFlagsBits, v150._object, v152);
        object = v153;
        v154 = objc_msgSend(v146, "mainBundle", swift_bridgeObjectRelease(v150._object).n128_f64[0]);
        v196._object = (void *)0xE000000000000000;
        v155._countAndFlagsBits = 0x206E6120666C6148;
        v155._object = (void *)0xEC00000068636E69;
        v156._countAndFlagsBits = 0;
        v156._object = (void *)0xE000000000000000;
        v196._countAndFlagsBits = 0;
        v157 = NSLocalizedString(_:tableName:bundle:value:comment:)(v155, (Swift::String_optional)0, (NSBundle)v154, v156, v196);
        v50 = v157._countAndFlagsBits;
        v52 = v157._object;

        v57 = 0.5;
      }
    }
    goto LABEL_42;
  }
  v33 = v21 >= 12.0 && v21 < 36.0;
  if (!v33 || (a1 & 1) == 0)
  {
    v129 = (void *)objc_opt_self(NSBundle);
    v130 = objc_msgSend(v129, "mainBundle");
    v193._object = (void *)0x80000001003DFC50;
    v131._countAndFlagsBits = 0x9D80E24025;
    v131._object = (void *)0xA500000000000000;
    v132._countAndFlagsBits = 0;
    v132._object = (void *)0xE000000000000000;
    v193._countAndFlagsBits = 0xD00000000000009DLL;
    v133 = NSLocalizedString(_:tableName:bundle:value:comment:)(v131, (Swift::String_optional)0, (NSBundle)v130, v132, v193);

    v134 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v135 = swift_allocObject(v134, 72, 7);
    v183 = xmmword_1003B0BD0;
    *(_OWORD *)(v135 + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(v135 + 56) = &type metadata for String;
    *(_QWORD *)(v135 + 64) = sub_100018B34();
    *(_QWORD *)(v135 + 32) = v29;
    *(_QWORD *)(v135 + 40) = v31;
    countAndFlagsBits = String.init(format:_:)(v133._countAndFlagsBits, v133._object, v135);
    object = v136;
    v137 = objc_msgSend(v129, "mainBundle", swift_bridgeObjectRelease(v133._object).n128_f64[0]);
    v194._object = (void *)0xE000000000000000;
    v138._countAndFlagsBits = 0x6568636E69204025;
    v138._object = (void *)0xE900000000000073;
    v139._countAndFlagsBits = 0;
    v139._object = (void *)0xE000000000000000;
    v194._countAndFlagsBits = 0;
    v140 = NSLocalizedString(_:tableName:bundle:value:comment:)(v138, (Swift::String_optional)0, (NSBundle)v137, v139, v194);

    v141 = swift_allocObject(v134, 72, 7);
    *(_OWORD *)(v141 + 16) = v183;
    *(_QWORD *)(v141 + 56) = &type metadata for Int;
    *(_QWORD *)(v141 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v141 + 32) = v12;
    v50 = static String.localizedStringWithFormat(_:_:)(v140._countAndFlagsBits, v140._object, v141);
    v52 = v142;
    swift_bridgeObjectRelease(v140._object);
    swift_bridgeObjectRelease(v141);
    v143 = v186;
    v144 = String._bridgeToObjectiveC()();
    objc_msgSend(v144, "floatValue", swift_bridgeObjectRelease(v143).n128_f64[0]);
    v57 = v145;

    goto LABEL_41;
  }
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v186);
  v58 = v21 / 12.0;
  if ((~COERCE_INT(v21 / 12.0) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_53;
  }
  if (v58 <= -9.2234e18)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v58 >= 9.2234e18)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v59 = (uint64_t)v58;
  v60 = 12 * (uint64_t)v58;
  if ((unsigned __int128)((uint64_t)v58 * (__int128)12) >> 64 != v60 >> 63)
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v61 = roundf(v21 - (float)v60);
  if (v61 == 12.0)
    v62 = 0.0;
  else
    v62 = v61;
  if (v61 == 12.0)
    v63 = v59 + 1;
  else
    v63 = v59;
  v64 = sub_10000EDC8((uint64_t *)&unk_10048A100);
  v65 = swift_allocObject(v64, 72, 7);
  v186 = xmmword_1003B0BD0;
  *(_OWORD *)(v65 + 16) = xmmword_1003B0BD0;
  *(_QWORD *)(v65 + 56) = &type metadata for Int;
  *(_QWORD *)(v65 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v65 + 32) = v63;
  v66 = String.init(format:_:)(25637, 0xE200000000000000, v65);
  v68 = v67;
  v69 = (void *)qword_1004AF658;
  v70 = objc_msgSend(objc_allocWithZone((Class)NSDecimalNumber), "initWithInteger:", v63);
  v71 = objc_msgSend(v69, "stringFromNumber:", v70);

  if (!v71)
    goto LABEL_60;
  v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
  v74 = v73;

  v75 = swift_allocObject(v64, 72, 7);
  *(_OWORD *)(v75 + 16) = v186;
  if ((~LODWORD(v62) & 0x7F800000) == 0)
    goto LABEL_56;
  if (v62 <= -9.2234e18)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v62 >= 9.2234e18)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v177 = v74;
  v178 = v72;
  v182 = v64;
  *(_QWORD *)&v183 = v66;
  v184 = v68;
  *(_QWORD *)&v186 = v63;
  *(_QWORD *)(v75 + 56) = &type metadata for Int;
  *(_QWORD *)(v75 + 64) = &protocol witness table for Int;
  v179 = (uint64_t)v62;
  *(_QWORD *)(v75 + 32) = (uint64_t)v62;
  v180 = String.init(format:_:)(25637, 0xE200000000000000, v75);
  v181 = v76;
  v77 = (void *)qword_1004AF658;
  v78 = objc_allocWithZone((Class)NSDecimalNumber);
  *(float *)&v79 = v62;
  v80 = objc_msgSend(v78, "initWithFloat:", v79);
  v81 = objc_msgSend(v77, "stringFromNumber:", v80);

  if (v81)
  {
    v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
    v84 = v83;

    v85 = (void *)objc_opt_self(NSBundle);
    v86 = objc_msgSend(v85, "mainBundle");
    v87.value._countAndFlagsBits = 0xD000000000000014;
    v189._object = (void *)0x80000001003DFC50;
    v87.value._object = (void *)0x80000001003DFD80;
    v88._countAndFlagsBits = 0x20B280E240243125;
    v88._object = (void *)0xAFB380E240243225;
    v89._countAndFlagsBits = 0;
    v89._object = (void *)0xE000000000000000;
    v189._countAndFlagsBits = 0xD00000000000009DLL;
    v90 = NSLocalizedString(_:tableName:bundle:value:comment:)(v88, v87, (NSBundle)v86, v89, v189);

    v91 = v182;
    v92 = swift_allocObject(v182, 112, 7);
    v176 = xmmword_1003B0F60;
    *(_OWORD *)(v92 + 16) = xmmword_1003B0F60;
    *(_QWORD *)(v92 + 56) = &type metadata for String;
    v93 = sub_100018B34();
    v94 = v177;
    *(_QWORD *)(v92 + 32) = v178;
    *(_QWORD *)(v92 + 40) = v94;
    *(_QWORD *)(v92 + 96) = &type metadata for String;
    *(_QWORD *)(v92 + 104) = v93;
    *(_QWORD *)(v92 + 64) = v93;
    *(_QWORD *)(v92 + 72) = v82;
    *(_QWORD *)(v92 + 80) = v84;
    countAndFlagsBits = String.init(format:_:)(v90._countAndFlagsBits, v90._object, v92);
    object = v95;
    v96 = objc_msgSend(v85, "mainBundle", swift_bridgeObjectRelease(v90._object).n128_f64[0]);
    v97._countAndFlagsBits = 0xD000000000000011;
    v190._object = (void *)0xE000000000000000;
    v97._object = (void *)0x80000001003DFDA0;
    v98._countAndFlagsBits = 0;
    v98._object = (void *)0xE000000000000000;
    v190._countAndFlagsBits = 0;
    v99 = NSLocalizedString(_:tableName:bundle:value:comment:)(v97, (Swift::String_optional)0, (NSBundle)v96, v98, v190);

    v100 = swift_allocObject(v91, 112, 7);
    *(_OWORD *)(v100 + 16) = v176;
    *(_QWORD *)(v100 + 56) = &type metadata for Int;
    *(_QWORD *)(v100 + 32) = v186;
    *(_QWORD *)(v100 + 96) = &type metadata for Int;
    *(_QWORD *)(v100 + 104) = &protocol witness table for Int;
    v101 = v179;
    *(_QWORD *)(v100 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v100 + 72) = v101;
    v50 = static String.localizedStringWithFormat(_:_:)(v99._countAndFlagsBits, v99._object, v100);
    v52 = v102;
    swift_bridgeObjectRelease(v99._object);
    swift_bridgeObjectRelease(v100);
    v103 = v184;
    v104 = String._bridgeToObjectiveC()();
    objc_msgSend(v104, "floatValue", swift_bridgeObjectRelease(v103).n128_f64[0]);
    v106 = v105;

    v107 = v106 * 12.0;
    v108 = v181;
    v109 = String._bridgeToObjectiveC()();
    objc_msgSend(v109, "floatValue", swift_bridgeObjectRelease(v108).n128_f64[0]);
    v111 = v110;

    v57 = v107 + v111;
LABEL_41:
    v34 = v185;
LABEL_42:
    *(_QWORD *)v34 = countAndFlagsBits;
    *(_QWORD *)(v34 + 8) = object;
    *(_QWORD *)(v34 + 16) = v50;
    *(_QWORD *)(v34 + 24) = v52;
    *(float *)(v34 + 32) = v57;
    *(_WORD *)(v34 + 36) = 1024;
    return;
  }
LABEL_61:
  __break(1u);
}

void sub_10010C62C(char a1@<W0>, uint64_t a2@<X8>, float a3@<S0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  double v17;
  void (*v18)(char *, uint64_t);
  float v19;
  float v20;
  void *v21;
  id v22;
  Swift::String v23;
  Swift::String v24;
  unint64_t v25;
  Swift::String v26;
  uint64_t countAndFlagsBits;
  void *object;
  id v29;
  unint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  double v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  uint64_t v49;
  void *v50;
  id v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  NSString v60;
  int v61;
  int v62;
  Swift::String v63;
  Swift::String v64;
  unint64_t v65;
  Swift::String v66;
  unint64_t v67;
  Swift::String v68;
  uint64_t v69;
  Swift::String v70;
  unint64_t v71;
  unint64_t v72;
  _QWORD v73[2];
  __int128 v74;
  Swift::String v75;
  Swift::String v76;

  v6 = sub_10000EDC8(&qword_1004843D8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)v73 - v11;
  v13 = (void *)objc_opt_self(NSUnitLength);
  v14 = objc_msgSend(v13, "meters");
  v15 = sub_100018148(0, &qword_1004843E0, NSUnitLength_ptr);
  Measurement.init(value:unit:)(v14, v15, a3);
  v16 = objc_msgSend(v13, "centimeters");
  Measurement<>.converted(to:)(v16, v6);

  v17 = Measurement.value.getter(v6);
  v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v10, v6);
  v19 = v17;
  v18(v12, v6);
  v20 = roundf(v19);
  if (v20 == 0.0)
  {
    v21 = (void *)objc_opt_self(NSBundle);
    v22 = objc_msgSend(v21, "mainBundle");
    v71 = 0x80000001003DFC50;
    if ((a1 & 1) != 0)
    {
      v23._countAndFlagsBits = 1835212848;
      v23._object = (void *)0xE400000000000000;
      v24._countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      v25 = 0xD00000000000009DLL;
      v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, *(Swift::String *)(&v71 - 1));
      countAndFlagsBits = v26._countAndFlagsBits;
      object = v26._object;

      v29 = objc_msgSend(v21, "mainBundle");
      v30 = 0xD000000000000010;
      v72 = 0xE000000000000000;
      v31 = "Zero centimeters";
    }
    else
    {
      v63._countAndFlagsBits = 0x6D632031203CLL;
      v63._object = (void *)0xE600000000000000;
      v64._countAndFlagsBits = 0;
      v64._object = (void *)0xE000000000000000;
      v65 = 0xD00000000000009DLL;
      v66 = NSLocalizedString(_:tableName:bundle:value:comment:)(v63, (Swift::String_optional)0, (NSBundle)v22, v64, *(Swift::String *)(&v71 - 1));
      countAndFlagsBits = v66._countAndFlagsBits;
      object = v66._object;

      v29 = objc_msgSend(v21, "mainBundle");
      v30 = 0xD000000000000018;
      v72 = 0xE000000000000000;
      v31 = "Less than one centimeter";
    }
    v67 = (unint64_t)(v31 - 32) | 0x8000000000000000;
    v68._countAndFlagsBits = 0;
    v68._object = (void *)0xE000000000000000;
    v69 = 0;
    v70 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v30, (Swift::String_optional)0, (NSBundle)v29, v68, *(Swift::String *)(&v72 - 1));
    v57 = v70._countAndFlagsBits;
    v59 = v70._object;

    v62 = 0;
    goto LABEL_13;
  }
  v32 = sub_10000EDC8((uint64_t *)&unk_10048A100);
  v33 = swift_allocObject(v32, 72, 7);
  v74 = xmmword_1003B0BD0;
  *(_OWORD *)(v33 + 16) = xmmword_1003B0BD0;
  *(_QWORD *)(v33 + 56) = &type metadata for Float;
  *(_QWORD *)(v33 + 64) = &protocol witness table for Float;
  *(float *)(v33 + 32) = v19;
  v73[1] = String.init(format:_:)(1714433573, 0xE400000000000000, v33);
  v35 = v34;
  if (qword_10047AB08 != -1)
    swift_once(&qword_10047AB08, sub_100108BB8);
  v36 = (void *)qword_1004AF668;
  v37 = objc_allocWithZone((Class)NSDecimalNumber);
  *(float *)&v38 = v19;
  v39 = objc_msgSend(v37, "initWithFloat:", v38);
  v40 = objc_msgSend(v36, "stringFromNumber:", v39);

  if (v40)
  {
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v43 = v42;

    v44 = (void *)objc_opt_self(NSBundle);
    v45 = objc_msgSend(v44, "mainBundle");
    v75._object = (void *)0x80000001003DFC50;
    v46._countAndFlagsBits = 0x6D63204025;
    v46._object = (void *)0xE500000000000000;
    v47._countAndFlagsBits = 0;
    v47._object = (void *)0xE000000000000000;
    v75._countAndFlagsBits = 0xD00000000000009DLL;
    v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, (Swift::String_optional)0, (NSBundle)v45, v47, v75);

    v49 = swift_allocObject(v32, 72, 7);
    *(_OWORD *)(v49 + 16) = v74;
    *(_QWORD *)(v49 + 56) = &type metadata for String;
    *(_QWORD *)(v49 + 64) = sub_100018B34();
    *(_QWORD *)(v49 + 32) = v41;
    *(_QWORD *)(v49 + 40) = v43;
    countAndFlagsBits = String.init(format:_:)(v48._countAndFlagsBits, v48._object, v49);
    object = v50;
    v51 = objc_msgSend(v44, "mainBundle", swift_bridgeObjectRelease(v48._object).n128_f64[0]);
    v76._object = (void *)0xE000000000000000;
    v52._countAndFlagsBits = 0x69746E6563204025;
    v52._object = (void *)0xEE0073726574656DLL;
    v53._countAndFlagsBits = 0;
    v53._object = (void *)0xE000000000000000;
    v76._countAndFlagsBits = 0;
    v54 = NSLocalizedString(_:tableName:bundle:value:comment:)(v52, (Swift::String_optional)0, (NSBundle)v51, v53, v76);

    v55 = swift_allocObject(v32, 72, 7);
    *(_OWORD *)(v55 + 16) = v74;
    if ((~LODWORD(v20) & 0x7F800000) != 0)
    {
      if (v20 > -9.2234e18)
      {
        if (v20 < 9.2234e18)
        {
          v56 = v55;
          *(_QWORD *)(v55 + 56) = &type metadata for Int;
          *(_QWORD *)(v55 + 64) = &protocol witness table for Int;
          *(_QWORD *)(v55 + 32) = (uint64_t)v20;
          v57 = static String.localizedStringWithFormat(_:_:)(v54._countAndFlagsBits, v54._object, v55);
          v59 = v58;
          swift_bridgeObjectRelease(v54._object);
          swift_bridgeObjectRelease(v56);
          v60 = String._bridgeToObjectiveC()();
          objc_msgSend(v60, "floatValue", swift_bridgeObjectRelease(v35).n128_f64[0]);
          v62 = v61;

LABEL_13:
          *(_QWORD *)a2 = countAndFlagsBits;
          *(_QWORD *)(a2 + 8) = object;
          *(_QWORD *)(a2 + 16) = v57;
          *(_QWORD *)(a2 + 24) = v59;
          *(_DWORD *)(a2 + 32) = v62;
          *(_WORD *)(a2 + 36) = 1024;
          return;
        }
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
}

float sub_10010CC14(char a1, char a2, float a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  double v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v6 = sub_10000EDC8(&qword_1004843D8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v19 - v11;
  v13 = objc_msgSend((id)objc_opt_self(NSUnitLength), *off_100446910[a1]);
  v14 = sub_100018148(0, &qword_1004843E0, NSUnitLength_ptr);
  Measurement.init(value:unit:)(v13, v14, a3);
  v15 = objc_msgSend((id)objc_opt_self(NSUnitLength), *off_100446910[a2]);
  Measurement<>.converted(to:)();

  v16 = Measurement.value.getter(v6);
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v10, v6);
  v17(v12, v6);
  return v16;
}

void sub_10010CD7C(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, char a4@<W3>, uint64_t *a5@<X8>, float a6@<S0>)
{
  double v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  double v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  unint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  id v42;
  void (*v43)(char *, uint64_t);
  id v44;
  double v45;
  float v46;
  void *v47;
  id v48;
  double v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  Swift::String v57;
  Swift::String v58;
  Swift::String v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  double v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  Swift::String_optional v73;
  Swift::String v74;
  Swift::String v75;
  Swift::String v76;
  uint64_t v77;
  uint64_t v78;
  const char *v79;
  uint64_t v80;
  void *v81;
  id v82;
  double v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  Swift::String v91;
  Swift::String v92;
  Swift::String v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  Swift::String v97;
  uint64_t v98;
  Swift::String v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  void *v106;
  id v107;
  uint64_t v108;
  id v109;
  double v110;
  void (*v111)(char *, uint64_t);
  float v112;
  uint64_t v113;
  void *v114;
  id v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  id v121;
  Swift::String v122;
  Swift::String v123;
  Swift::String v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  Swift::String v129;
  Swift::String v130;
  Swift::String v131;
  void *object;
  uint64_t v133;
  uint64_t countAndFlagsBits;
  void *v135;
  id v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  id v142;
  Swift::String v143;
  Swift::String v144;
  Swift::String v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  Swift::String v150;
  Swift::String v151;
  Swift::String v152;
  uint64_t v153;
  id v154;
  void *v155;
  id v156;
  double v157;
  id v158;
  id v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  id v164;
  Swift::String v165;
  Swift::String v166;
  Swift::String v167;
  uint64_t v168;
  uint64_t v169;
  id v170;
  void *v171;
  id v172;
  double v173;
  id v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  id v180;
  Swift::String v181;
  Swift::String v182;
  Swift::String v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  __int128 v187;
  uint64_t *v188;
  Swift::String v189;
  Swift::String v190;
  Swift::String v191;
  Swift::String v192;
  Swift::String v193;
  Swift::String v194;
  Swift::String v195;
  Swift::String v196;
  Swift::String v197;
  Swift::String v198;

  *(float *)&v10 = a6;
  v12 = sub_10000EDC8(&qword_1004843E8);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v187 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v187 - v17;
  v188 = a5;
  if (a1 == 1)
  {
    if ((a4 & 1) != 0)
    {
      if (qword_10047AB00 == -1)
      {
LABEL_4:
        v19 = (void *)qword_1004AF660;
        v20 = objc_allocWithZone((Class)NSNumber);
        LODWORD(v21) = LODWORD(v10);
        v22 = objc_msgSend(v20, "initWithFloat:", v21);
        v23 = objc_msgSend(v19, "stringFromNumber:", v22);

        if (v23)
        {
          v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
          v26 = v25;

          v27 = (void *)objc_opt_self(NSBundle);
          v28 = objc_msgSend(v27, "mainBundle");
          v189._object = (void *)0x80000001003DFC50;
          v29._countAndFlagsBits = 0xB2C26D204025;
          v29._object = (void *)0xA600000000000000;
          v30._countAndFlagsBits = 0;
          v30._object = (void *)0xE000000000000000;
          v189._countAndFlagsBits = 0xD00000000000009DLL;
          v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v189);

          v32 = sub_10000EDC8((uint64_t *)&unk_10048A100);
          v33 = swift_allocObject(v32, 72, 7);
          v187 = xmmword_1003B0BD0;
          *(_OWORD *)(v33 + 16) = xmmword_1003B0BD0;
          *(_QWORD *)(v33 + 56) = &type metadata for String;
          *(_QWORD *)(v33 + 64) = sub_100018B34();
          *(_QWORD *)(v33 + 32) = v24;
          *(_QWORD *)(v33 + 40) = v26;
          v34 = String.init(format:_:)(v31._countAndFlagsBits, v31._object, v33);
          v36 = v35;
          v37 = objc_msgSend(v27, "mainBundle", swift_bridgeObjectRelease(v31._object).n128_f64[0]);
          v38 = 0xD00000000000001ALL;
          v186 = 0xE000000000000000;
LABEL_21:
          v79 = "%@ square meters (precise)";
LABEL_28:
          v96 = (unint64_t)(v79 - 32) | 0x8000000000000000;
          v97._countAndFlagsBits = 0;
          v97._object = (void *)0xE000000000000000;
          v98 = 0;
          v99 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v38, (Swift::String_optional)0, (NSBundle)v37, v97, *(Swift::String *)(&v186 - 1));

          v100 = swift_allocObject(v32, 72, 7);
          *(_OWORD *)(v100 + 16) = v187;
          *(_QWORD *)(v100 + 56) = &type metadata for Float;
          *(_QWORD *)(v100 + 64) = &protocol witness table for Float;
          *(_DWORD *)(v100 + 32) = LODWORD(v10);
          v101 = static String.localizedStringWithFormat(_:_:)(v99._countAndFlagsBits, v99._object, v100);
          v103 = v102;
          swift_bridgeObjectRelease(v99._object);
          v104 = v100;
LABEL_29:
          swift_bridgeObjectRelease(v104);
          v105 = v188;
          *v188 = v34;
          v105[1] = v36;
          v105[2] = v101;
          v105[3] = v103;
          *((_DWORD *)v105 + 8) = 0;
          *((_WORD *)v105 + 18) = 1025;
          return;
        }
        __break(1u);
        goto LABEL_62;
      }
LABEL_55:
      swift_once(&qword_10047AB00, sub_100108BA8);
      goto LABEL_4;
    }
    if ((*(float *)&v10 >= 0.1) | a2 & 1 && *(float *)&v10 >= 0.01 && (a3 & 1) == 0)
    {
      if (qword_10047AB00 == -1)
        goto LABEL_19;
      goto LABEL_57;
    }
    v10 = *(float *)&v10;
    v106 = (void *)objc_opt_self(NSUnitArea);
    v107 = objc_msgSend(v106, "squareMeters");
    v108 = sub_100018148(0, &qword_1004843F0, NSUnitArea_ptr);
    Measurement.init(value:unit:)(v107, v108, v10);
    v109 = objc_msgSend(v106, "squareCentimeters");
    Measurement<>.converted(to:)();

    v110 = Measurement.value.getter(v12);
    v111 = *(void (**)(char *, uint64_t))(v13 + 8);
    v111(v16, v12);
    *(float *)&v110 = v110;
    v111(v18, v12);
    v112 = roundf(*(float *)&v110);
    if ((~LODWORD(v112) & 0x7F800000) == 0)
    {
      __break(1u);
LABEL_57:
      swift_once(&qword_10047AB00, sub_100108BA8);
LABEL_19:
      v63 = (void *)qword_1004AF660;
      v64 = objc_allocWithZone((Class)NSNumber);
      LODWORD(v65) = LODWORD(v10);
      v66 = objc_msgSend(v64, "initWithFloat:", v65);
      v67 = objc_msgSend(v63, "stringFromNumber:", v66);

      if (v67)
      {
        v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
        v70 = v69;

        v71 = (void *)objc_opt_self(NSBundle);
        v72 = objc_msgSend(v71, "mainBundle");
        v73.value._countAndFlagsBits = 0xD000000000000014;
        v191._object = (void *)0x80000001003DFC50;
        v73.value._object = (void *)0x80000001003DFD80;
        v74._countAndFlagsBits = 0xB2C26D204025;
        v74._object = (void *)0xA600000000000000;
        v75._countAndFlagsBits = 0;
        v75._object = (void *)0xE000000000000000;
        v191._countAndFlagsBits = 0xD00000000000009DLL;
        v76 = NSLocalizedString(_:tableName:bundle:value:comment:)(v74, v73, (NSBundle)v72, v75, v191);

        v32 = sub_10000EDC8((uint64_t *)&unk_10048A100);
        v77 = swift_allocObject(v32, 72, 7);
        v187 = xmmword_1003B0BD0;
        *(_OWORD *)(v77 + 16) = xmmword_1003B0BD0;
        *(_QWORD *)(v77 + 56) = &type metadata for String;
        *(_QWORD *)(v77 + 64) = sub_100018B34();
        *(_QWORD *)(v77 + 32) = v68;
        *(_QWORD *)(v77 + 40) = v70;
        v34 = String.init(format:_:)(v76._countAndFlagsBits, v76._object, v77);
        v36 = v78;
        v37 = objc_msgSend(v71, "mainBundle", swift_bridgeObjectRelease(v76._object).n128_f64[0]);
        v38 = 0xD00000000000001ALL;
        v186 = 0xE000000000000000;
        goto LABEL_21;
      }
      goto LABEL_63;
    }
    if (v112 <= -9.2234e18)
    {
      __break(1u);
    }
    else if (v112 < 9.2234e18)
    {
      v113 = (uint64_t)v112;
      if (!(uint64_t)v112)
      {
        Measurement.init(value:unit:)(objc_msgSend(v106, "squareMeters"), v108, v10);
        v154 = objc_msgSend(v106, "squareCentimeters");
        Measurement<>.converted(to:)();

        v10 = Measurement.value.getter(v12);
        v111(v16, v12);
        *(float *)&v10 = v10;
        v111(v18, v12);
        if (qword_10047AB00 != -1)
          swift_once(&qword_10047AB00, sub_100108BA8);
        v155 = (void *)qword_1004AF660;
        v156 = objc_allocWithZone((Class)NSNumber);
        LODWORD(v157) = LODWORD(v10);
        v158 = objc_msgSend(v156, "initWithFloat:", v157);
        v159 = objc_msgSend(v155, "stringFromNumber:", v158);

        if (v159)
        {
          v160 = static String._unconditionallyBridgeFromObjectiveC(_:)(v159);
          v162 = v161;

          v163 = (void *)objc_opt_self(NSBundle);
          v164 = objc_msgSend(v163, "mainBundle");
          v197._object = (void *)0x80000001003DFC50;
          v165._countAndFlagsBits = 0xB2C26D63204025;
          v165._object = (void *)0xA700000000000000;
          v166._countAndFlagsBits = 0;
          v166._object = (void *)0xE000000000000000;
          v197._countAndFlagsBits = 0xD00000000000009DLL;
          v167 = NSLocalizedString(_:tableName:bundle:value:comment:)(v165, (Swift::String_optional)0, (NSBundle)v164, v166, v197);

          v32 = sub_10000EDC8((uint64_t *)&unk_10048A100);
          v168 = swift_allocObject(v32, 72, 7);
          v187 = xmmword_1003B0BD0;
          *(_OWORD *)(v168 + 16) = xmmword_1003B0BD0;
          *(_QWORD *)(v168 + 56) = &type metadata for String;
          *(_QWORD *)(v168 + 64) = sub_100018B34();
          *(_QWORD *)(v168 + 32) = v160;
          *(_QWORD *)(v168 + 40) = v162;
          v34 = String.init(format:_:)(v167._countAndFlagsBits, v167._object, v168);
          v36 = v169;
          v37 = objc_msgSend(v163, "mainBundle", swift_bridgeObjectRelease(v167._object).n128_f64[0]);
          v38 = 0xD000000000000015;
          v186 = 0xE000000000000000;
          v79 = "%@ square centimeters";
          goto LABEL_28;
        }
        goto LABEL_67;
      }
      if (qword_10047AAF8 != -1)
        swift_once(&qword_10047AAF8, sub_100108AD8);
      v114 = (void *)qword_1004AF658;
      v115 = objc_msgSend(objc_allocWithZone((Class)NSDecimalNumber), "initWithInteger:", v113);
      v116 = objc_msgSend(v114, "stringFromNumber:", v115);

      if (!v116)
        goto LABEL_65;
      v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
      v119 = v118;

      v120 = (void *)objc_opt_self(NSBundle);
      v121 = objc_msgSend(v120, "mainBundle");
      v193._object = (void *)0x80000001003DFC50;
      v122._countAndFlagsBits = 0xB2C26D63204025;
      v122._object = (void *)0xA700000000000000;
      v123._countAndFlagsBits = 0;
      v123._object = (void *)0xE000000000000000;
      v193._countAndFlagsBits = 0xD00000000000009DLL;
      v124 = NSLocalizedString(_:tableName:bundle:value:comment:)(v122, (Swift::String_optional)0, (NSBundle)v121, v123, v193);

      v125 = sub_10000EDC8((uint64_t *)&unk_10048A100);
      v126 = swift_allocObject(v125, 72, 7);
      v187 = xmmword_1003B0BD0;
      *(_OWORD *)(v126 + 16) = xmmword_1003B0BD0;
      *(_QWORD *)(v126 + 56) = &type metadata for String;
      *(_QWORD *)(v126 + 64) = sub_100018B34();
      *(_QWORD *)(v126 + 32) = v117;
      *(_QWORD *)(v126 + 40) = v119;
      v34 = String.init(format:_:)(v124._countAndFlagsBits, v124._object, v126);
      v36 = v127;
      v128 = objc_msgSend(v120, "mainBundle", swift_bridgeObjectRelease(v124._object).n128_f64[0]);
      v129._countAndFlagsBits = 0xD000000000000015;
      v194._object = (void *)0xE000000000000000;
      v129._object = (void *)0x80000001003DFEE0;
      v130._countAndFlagsBits = 0;
      v130._object = (void *)0xE000000000000000;
      v194._countAndFlagsBits = 0;
      v131 = NSLocalizedString(_:tableName:bundle:value:comment:)(v129, (Swift::String_optional)0, (NSBundle)v128, v130, v194);
      object = v131._object;

      v133 = swift_allocObject(v125, 72, 7);
      *(_OWORD *)(v133 + 16) = v187;
      *(_QWORD *)(v133 + 56) = &type metadata for Int;
      *(_QWORD *)(v133 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v133 + 32) = v113;
      countAndFlagsBits = v131._countAndFlagsBits;
LABEL_43:
      v101 = static String.localizedStringWithFormat(_:_:)(countAndFlagsBits, object, v133);
      v103 = v153;
      swift_bridgeObjectRelease(object);
      v104 = v133;
      goto LABEL_29;
    }
    __break(1u);
    goto LABEL_60;
  }
  LODWORD(v187) = a3;
  if (!a1)
  {
    v39 = (void *)objc_opt_self(NSUnitArea);
    v40 = objc_msgSend(v39, "squareMeters");
    v41 = sub_100018148(0, &qword_1004843F0, NSUnitArea_ptr);
    Measurement.init(value:unit:)(v40, v41, *(float *)&v10);
    v42 = objc_msgSend(v39, "squareFeet");
    Measurement<>.converted(to:)();

    v10 = Measurement.value.getter(v12);
    v43 = *(void (**)(char *, uint64_t))(v13 + 8);
    v43(v16, v12);
    *(float *)&v10 = v10;
    v43(v18, v12);
    Measurement.init(value:unit:)(objc_msgSend(v39, "squareFeet"), v41, *(float *)&v10);
    v44 = objc_msgSend(v39, "squareInches");
    Measurement<>.converted(to:)();

    v45 = Measurement.value.getter(v12);
    v43(v16, v12);
    *(float *)&v45 = v45;
    v43(v18, v12);
    v46 = roundf(*(float *)&v45);
    if ((~LODWORD(v46) & 0x7F800000) != 0)
    {
      if (v46 > -9.2234e18)
      {
        if (v46 < 9.2234e18)
        {
          if ((a4 & 1) != 0)
          {
            if (qword_10047AB00 != -1)
              swift_once(&qword_10047AB00, sub_100108BA8);
            v47 = (void *)qword_1004AF660;
            v48 = objc_allocWithZone((Class)NSNumber);
            LODWORD(v49) = roundf(*(float *)&v10);
            v50 = objc_msgSend(v48, "initWithFloat:", v49);
            v51 = objc_msgSend(v47, "stringFromNumber:", v50);

            if (!v51)
            {
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
            v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
            v54 = v53;

            v55 = (void *)objc_opt_self(NSBundle);
            v56 = objc_msgSend(v55, "mainBundle");
            v190._object = (void *)0x80000001003DFC50;
            v57._countAndFlagsBits = 0xB2C27466204025;
            v57._object = (void *)0xA700000000000000;
            v58._countAndFlagsBits = 0;
            v58._object = (void *)0xE000000000000000;
            v190._countAndFlagsBits = 0xD00000000000009DLL;
            v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, (Swift::String_optional)0, (NSBundle)v56, v58, v190);

            v32 = sub_10000EDC8((uint64_t *)&unk_10048A100);
            v60 = swift_allocObject(v32, 72, 7);
            v187 = xmmword_1003B0BD0;
            *(_OWORD *)(v60 + 16) = xmmword_1003B0BD0;
            *(_QWORD *)(v60 + 56) = &type metadata for String;
            *(_QWORD *)(v60 + 64) = sub_100018B34();
            *(_QWORD *)(v60 + 32) = v52;
            *(_QWORD *)(v60 + 40) = v54;
            v34 = String.init(format:_:)(v59._countAndFlagsBits, v59._object, v60);
            v36 = v61;
            v62 = objc_msgSend(v55, "mainBundle", swift_bridgeObjectRelease(v59._object).n128_f64[0]);
LABEL_27:
            v37 = v62;
            v38 = 0xD000000000000018;
            v186 = 0xE000000000000000;
            v79 = "%@ square feet (precise)";
            goto LABEL_28;
          }
          v80 = (uint64_t)v46;
          if ((uint64_t)v46 < 36 || (v187 & 1) != 0)
          {
            if (!v80)
            {
              Measurement.init(value:unit:)(objc_msgSend(v39, "squareFeet"), v41, *(float *)&v10);
              v170 = objc_msgSend(v39, "squareInches");
              Measurement<>.converted(to:)();

              v10 = Measurement.value.getter(v12);
              v43(v16, v12);
              *(float *)&v10 = v10;
              v43(v18, v12);
              if (qword_10047AB00 != -1)
                swift_once(&qword_10047AB00, sub_100108BA8);
              v171 = (void *)qword_1004AF660;
              v172 = objc_allocWithZone((Class)NSNumber);
              LODWORD(v173) = LODWORD(v10);
              v174 = objc_msgSend(v172, "initWithFloat:", v173);
              v175 = objc_msgSend(v171, "stringFromNumber:", v174);

              if (v175)
              {
                v176 = static String._unconditionallyBridgeFromObjectiveC(_:)(v175);
                v178 = v177;

                v179 = (void *)objc_opt_self(NSBundle);
                v180 = objc_msgSend(v179, "mainBundle");
                v198._object = (void *)0x80000001003DFC50;
                v181._countAndFlagsBits = 0x6E69207173204025;
                v181._object = (void *)0xE800000000000000;
                v182._countAndFlagsBits = 0;
                v182._object = (void *)0xE000000000000000;
                v198._countAndFlagsBits = 0xD00000000000009DLL;
                v183 = NSLocalizedString(_:tableName:bundle:value:comment:)(v181, (Swift::String_optional)0, (NSBundle)v180, v182, v198);

                v32 = sub_10000EDC8((uint64_t *)&unk_10048A100);
                v184 = swift_allocObject(v32, 72, 7);
                v187 = xmmword_1003B0BD0;
                *(_OWORD *)(v184 + 16) = xmmword_1003B0BD0;
                *(_QWORD *)(v184 + 56) = &type metadata for String;
                *(_QWORD *)(v184 + 64) = sub_100018B34();
                *(_QWORD *)(v184 + 32) = v176;
                *(_QWORD *)(v184 + 40) = v178;
                v34 = String.init(format:_:)(v183._countAndFlagsBits, v183._object, v184);
                v36 = v185;
                v37 = objc_msgSend(v179, "mainBundle", swift_bridgeObjectRelease(v183._object).n128_f64[0]);
                v38 = 0xD000000000000010;
                v186 = 0xE000000000000000;
                v79 = "%@ square inches";
                goto LABEL_28;
              }
              goto LABEL_68;
            }
            if (qword_10047AAF8 != -1)
              swift_once(&qword_10047AAF8, sub_100108AD8);
            v135 = (void *)qword_1004AF658;
            v136 = objc_msgSend(objc_allocWithZone((Class)NSDecimalNumber), "initWithInteger:", v80);
            v137 = objc_msgSend(v135, "stringFromNumber:", v136);

            if (!v137)
              goto LABEL_66;
            v138 = static String._unconditionallyBridgeFromObjectiveC(_:)(v137);
            v140 = v139;

            v141 = (void *)objc_opt_self(NSBundle);
            v142 = objc_msgSend(v141, "mainBundle");
            v195._object = (void *)0x80000001003DFC50;
            v143._countAndFlagsBits = 0x6E69207173204025;
            v143._object = (void *)0xE800000000000000;
            v144._countAndFlagsBits = 0;
            v144._object = (void *)0xE000000000000000;
            v195._countAndFlagsBits = 0xD00000000000009DLL;
            v145 = NSLocalizedString(_:tableName:bundle:value:comment:)(v143, (Swift::String_optional)0, (NSBundle)v142, v144, v195);

            v146 = sub_10000EDC8((uint64_t *)&unk_10048A100);
            v147 = swift_allocObject(v146, 72, 7);
            v187 = xmmword_1003B0BD0;
            *(_OWORD *)(v147 + 16) = xmmword_1003B0BD0;
            *(_QWORD *)(v147 + 56) = &type metadata for String;
            *(_QWORD *)(v147 + 64) = sub_100018B34();
            *(_QWORD *)(v147 + 32) = v138;
            *(_QWORD *)(v147 + 40) = v140;
            v34 = String.init(format:_:)(v145._countAndFlagsBits, v145._object, v147);
            v36 = v148;
            v149 = objc_msgSend(v141, "mainBundle", swift_bridgeObjectRelease(v145._object).n128_f64[0]);
            v150._countAndFlagsBits = 0xD000000000000010;
            v196._object = (void *)0xE000000000000000;
            v150._object = (void *)0x80000001003DFF20;
            v151._countAndFlagsBits = 0;
            v151._object = (void *)0xE000000000000000;
            v196._countAndFlagsBits = 0;
            v152 = NSLocalizedString(_:tableName:bundle:value:comment:)(v150, (Swift::String_optional)0, (NSBundle)v149, v151, v196);
            object = v152._object;

            v133 = swift_allocObject(v146, 72, 7);
            *(_OWORD *)(v133 + 16) = v187;
            *(_QWORD *)(v133 + 56) = &type metadata for Int;
            *(_QWORD *)(v133 + 64) = &protocol witness table for Int;
            *(_QWORD *)(v133 + 32) = v80;
            countAndFlagsBits = v152._countAndFlagsBits;
            goto LABEL_43;
          }
          if (qword_10047AB00 == -1)
          {
LABEL_25:
            v81 = (void *)qword_1004AF660;
            v82 = objc_allocWithZone((Class)NSNumber);
            LODWORD(v83) = LODWORD(v10);
            v84 = objc_msgSend(v82, "initWithFloat:", v83);
            v85 = objc_msgSend(v81, "stringFromNumber:", v84);

            if (!v85)
            {
LABEL_64:
              __break(1u);
LABEL_65:
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
              goto LABEL_69;
            }
            v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
            v88 = v87;

            v89 = (void *)objc_opt_self(NSBundle);
            v90 = objc_msgSend(v89, "mainBundle");
            v192._object = (void *)0x80000001003DFC50;
            v91._countAndFlagsBits = 0x7466207173204025;
            v91._object = (void *)0xE800000000000000;
            v92._countAndFlagsBits = 0;
            v92._object = (void *)0xE000000000000000;
            v192._countAndFlagsBits = 0xD00000000000009DLL;
            v93 = NSLocalizedString(_:tableName:bundle:value:comment:)(v91, (Swift::String_optional)0, (NSBundle)v90, v92, v192);

            v32 = sub_10000EDC8((uint64_t *)&unk_10048A100);
            v94 = swift_allocObject(v32, 72, 7);
            v187 = xmmword_1003B0BD0;
            *(_OWORD *)(v94 + 16) = xmmword_1003B0BD0;
            *(_QWORD *)(v94 + 56) = &type metadata for String;
            *(_QWORD *)(v94 + 64) = sub_100018B34();
            *(_QWORD *)(v94 + 32) = v86;
            *(_QWORD *)(v94 + 40) = v88;
            v34 = String.init(format:_:)(v93._countAndFlagsBits, v93._object, v94);
            v36 = v95;
            v62 = objc_msgSend(v89, "mainBundle", swift_bridgeObjectRelease(v93._object).n128_f64[0]);
            goto LABEL_27;
          }
LABEL_60:
          swift_once(&qword_10047AB00, sub_100108BA8);
          goto LABEL_25;
        }
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_54;
  }
LABEL_69:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Measure/MeasureUtil.swift", 25, 2, 412, 0);
  __break(1u);
}

float sub_10010E16C(char a1, char a2, float a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  double v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v6 = sub_10000EDC8(&qword_1004843E8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v19 - v11;
  v13 = objc_msgSend((id)objc_opt_self(NSUnitArea), *off_100446930[a1]);
  v14 = sub_100018148(0, &qword_1004843F0, NSUnitArea_ptr);
  Measurement.init(value:unit:)(v13, v14, a3);
  v15 = objc_msgSend((id)objc_opt_self(NSUnitArea), *off_100446930[a2]);
  Measurement<>.converted(to:)(v15, v6);

  v16 = Measurement.value.getter(v6);
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v10, v6);
  v17(v12, v6);
  return v16;
}

BOOL sub_10010E2D4(float32x2_t a1, float32x2_t a2, float32x2_t a3, float32x2_t a4)
{
  _BOOL4 v4;
  float32x2_t v5;
  float32x2_t v6;
  float32x2_t v7;
  unsigned __int32 v8;
  float32x2_t v9;
  float32x2_t v10;
  float32x2_t v11;
  float32x2_t v12;
  float32x2_t v13;
  float32x2_t v14;
  float v15;
  float32x2_t v16;
  float v17;
  _BOOL8 result;
  float32x2_t v19;
  float32x2_t v20;
  float32x2_t v21;
  float32x2_t v22;
  float32x2_t v23;
  float v24;

  v4 = 0;
  v5 = vsub_f32(a3, a4);
  v6 = vsub_f32(a2, a4);
  v7 = vmul_f32(v5, v5);
  v8 = vadd_f32(v7, (float32x2_t)vdup_lane_s32((int32x2_t)v7, 1)).u32[0];
  v9 = vrsqrte_f32((float32x2_t)v8);
  v10 = vmul_f32(v9, vrsqrts_f32((float32x2_t)v8, vmul_f32(v9, v9)));
  v11 = vmul_n_f32(v5, vmul_f32(v10, vrsqrts_f32((float32x2_t)v8, vmul_f32(v10, v10))).f32[0]);
  v12 = vsub_f32(a1, a4);
  v13 = vmul_f32(v12, v11);
  v14 = vmul_f32(v6, v6);
  LODWORD(v15) = vadd_f32(v14, (float32x2_t)vdup_lane_s32((int32x2_t)v14, 1)).u32[0];
  if (vaddv_f32(v13) > 0.0)
  {
    v16 = vsub_f32(a1, vadd_f32(vmul_n_f32(v11, vadd_f32(v13, (float32x2_t)vdup_lane_s32((int32x2_t)v13, 1)).f32[0]), a4));
    v17 = sqrtf(vaddv_f32(vmul_f32(v16, v16)));
    if (v17 > 0.0)
      v4 = v17 < sqrtf(v15);
  }
  result = 0;
  v19 = vrsqrte_f32((float32x2_t)LODWORD(v15));
  v20 = vmul_f32(v19, vrsqrts_f32((float32x2_t)LODWORD(v15), vmul_f32(v19, v19)));
  v21 = vmul_n_f32(v6, vmul_f32(v20, vrsqrts_f32((float32x2_t)LODWORD(v15), vmul_f32(v20, v20))).f32[0]);
  v22 = vmul_f32(v12, v21);
  if (vaddv_f32(v22) > 0.0)
  {
    v23 = vsub_f32(a1, vadd_f32(vmul_n_f32(v21, vadd_f32(v22, (float32x2_t)vdup_lane_s32((int32x2_t)v22, 1)).f32[0]), a4));
    v24 = sqrtf(vaddv_f32(vmul_f32(v23, v23)));
    if (v24 > 0.0)
      return v24 < sqrtf(vaddv_f32(v7)) && v4;
  }
  return result;
}

uint64_t initializeWithCopy for MeasurementStringDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for MeasurementStringDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 37) = *(_BYTE *)(a2 + 37);
  return a1;
}

__n128 initializeWithTake for MeasurementStringDetails(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 30) = *(_QWORD *)(a2 + 30);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MeasurementStringDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  return a1;
}

uint64_t getEnumTagSinglePayload for MeasurementStringDetails(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 38))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MeasurementStringDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 38) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 38) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MeasurementStringDetails()
{
  return &type metadata for MeasurementStringDetails;
}

_QWORD *sub_10010E5B0(uint64_t a1)
{
  int64_t v2;
  _QWORD *result;
  __int128 *v4;
  __int128 v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_1000A5698(0, v2, 0);
    result = _swiftEmptyArrayStorage;
    v4 = (__int128 *)(a1 + 32);
    do
    {
      v5 = *v4;
      v9 = result;
      v7 = result[2];
      v6 = result[3];
      if (v7 >= v6 >> 1)
      {
        v8 = *v4;
        sub_1000A5698((char *)(v6 > 1), v7 + 1, 1);
        v5 = v8;
        result = v9;
      }
      result[2] = v7 + 1;
      *(_OWORD *)&result[2 * v7 + 4] = v5;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_10010E678(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_1000A7994(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_100115CBC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_10010E6E0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for UUID(0);
  sub_1000477C8(v0, qword_1004AF670);
  v1 = sub_1000362E8(v0, (uint64_t)qword_1004AF670);
  return UUID.init()(v1);
}

uint64_t sub_10010E728(void (*a1)(_BYTE *), uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v8;
  uint64_t (*v9)(_BYTE *);
  void (*v10)(_BYTE *, _QWORD);
  void **v11;
  void *v12;
  _BYTE v14[32];

  if (a4 >= 2u)
  {
    swift_retain(a2);
  }
  else
  {
    v8 = *(_QWORD *)(a3 + 144);
    v9 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)v8 + 400);
    swift_retain(a2);
    swift_retain(v8);
    v10 = (void (*)(_BYTE *, _QWORD))v9(v14);
    v12 = *v11;
    *v11 = 0;

    v10(v14, 0);
    swift_release(v8);
  }
  *(_BYTE *)(a3 + 64) = a4;
  v14[0] = 0;
  a1(v14);
  return swift_release(a2);
}

void sub_10010E7E4()
{
  qword_1004AF688 = 0x3FA999999999999ALL;
}

void sub_10010E7FC()
{
  dword_1004AF690 = 1147207680;
}

void sub_10010E80C()
{
  dword_1004AF694 = 1163984896;
}

void sub_10010E81C()
{
  dword_1004AF698 = 1063105495;
}

void sub_10010E830()
{
  dword_1004AF69C = 1048871919;
}

void sub_10010E844()
{
  dword_1004AF6A0 = 1065289374;
}

void sub_10010E858()
{
  dword_1004AF6A4 = 1064781546;
}

void sub_10010E86C()
{
  dword_1004AF6A8 = 1065098332;
}

void sub_10010E880()
{
  id v0;
  uint64_t v1;
  NSString v2;
  int v3;
  int v4;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = *(_QWORD *)(Defaults.peFirstPointMaxDistance.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain(v1);
  v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  objc_msgSend(v0, "floatForKey:", v2);
  v4 = v3;

  dword_1004AF6AC = v4;
}

void sub_10010E91C()
{
  qword_1004AF6B0 = 30;
}

uint64_t sub_10010E92C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(_QWORD *__return_ptr, __n128);
  __n128 v4;
  float v5;
  uint64_t v6;
  void (*v7)(_QWORD *__return_ptr, __n128);
  __n128 v8;
  float v9;
  uint64_t v10;
  void (*v11)(_QWORD *__return_ptr, __n128);
  __n128 v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  float v18;
  _BOOL4 v19;
  int v20;
  _QWORD v21[8];
  int v22;
  char v23;
  float v24;
  char v25;
  float v26;
  char v27;

  v1 = v0;
  v2 = v0[11];
  v3 = *(void (**)(_QWORD *__return_ptr, __n128))(*(_QWORD *)v2 + 144);
  v4 = swift_retain(v2);
  v3(v21, v4);
  swift_release(v2);
  if ((v25 & 1) != 0)
    return 0;
  v5 = v24;
  v6 = v1[11];
  v7 = *(void (**)(_QWORD *__return_ptr, __n128))(*(_QWORD *)v6 + 144);
  v8 = swift_retain(v6);
  v7(v21, v8);
  swift_release(v6);
  if ((v27 & 1) != 0)
    return 0;
  v9 = v26;
  v10 = v1[11];
  v11 = *(void (**)(_QWORD *__return_ptr, __n128))(*(_QWORD *)v10 + 144);
  v12 = swift_retain(v10);
  v11(v21, v12);
  swift_release(v10);
  if ((v23 & 1) != 0)
    return 0;
  v20 = v22;
  swift_beginAccess(v1 + 22, v21, 33, 0);
  v14 = sub_10000EDC8(&qword_10047E460);
  RingBuffer.append(_:)(&v20, v14);
  swift_endAccess(v21);
  v15 = v1[22];
  v16 = v1[23];
  v17 = v1[24];
  swift_bridgeObjectRetain(v17);
  v18 = RingBuffer<A>.average()(v15, v16, v17);
  swift_bridgeObjectRelease(v17);
  v19 = v18 > 0.3;
  if (v5 > 0.3)
    v19 = 1;
  return v9 > 4.0 || v19;
}

BOOL sub_10010EA90(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BOOL8 result;
  uint64_t v14;
  double v15;
  uint64_t v16;
  void (*v17)(unint64_t *__return_ptr);
  id v18;
  double v19;
  unint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(unint64_t *__return_ptr, __n128);
  __n128 v26;
  id v27;
  unsigned __int8 v28;
  uint64_t v29;
  void (*v30)(unint64_t *__return_ptr, __n128);
  __n128 v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  void (*v35)(__n128);
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(unint64_t *__return_ptr, __n128);
  __n128 v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  void *v45;
  double v46;
  double v47;
  _BYTE v48[16];
  unint64_t v49;
  void *v50;
  id v51;
  id v52;

  v2 = v1;
  v4 = type metadata accessor for ARCamera.TrackingState(0);
  v5 = __chkstk_darwin(v4);
  v7 = &v48[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v48[-v8];
  v10 = type metadata accessor for SessionState(0);
  __chkstk_darwin(v10);
  v12 = &v48[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a1)
    return 0;
  if ((*(_BYTE *)(v1 + 232) & 1) != 0)
  {
    objc_msgSend(a1, "timestamp");
    result = 0;
    *(_QWORD *)(v1 + 224) = v14;
    *(_BYTE *)(v1 + 232) = 0;
    return result;
  }
  v15 = *(double *)(v1 + 224);
  v16 = *(_QWORD *)(v1 + 136);
  v17 = *(void (**)(unint64_t *__return_ptr))(*(_QWORD *)v16 + 144);
  swift_retain(*(_QWORD *)(v2 + 136));
  v18 = a1;
  v17(&v49);
  *(_QWORD *)&v19 = swift_release(v16).n128_u64[0];
  v20 = v49;
  if (v49 >> 62 == 2)
    goto LABEL_15;
  if (v49 >> 62 == 1)
    goto LABEL_15;
  objc_msgSend(v18, "timestamp", v19);
  v22 = v21;
  objc_msgSend(v18, "timestamp");
  *(_QWORD *)(v2 + 224) = v23;
  *(_BYTE *)(v2 + 232) = 0;
  if (!*(_BYTE *)(v2 + 64))
    goto LABEL_15;
  if (*(_BYTE *)(v2 + 64) == 1)
    goto LABEL_15;
  v24 = *(_QWORD *)(v2 + 104);
  v25 = *(void (**)(unint64_t *__return_ptr, __n128))(*(_QWORD *)v24 + 144);
  v26 = swift_retain(v24);
  v25(&v49, v26);
  swift_release(v24);
  if ((v49 & 0x1000000) != 0)
    goto LABEL_15;
  if (ARFrame.isVIOTrackingUnacceptable()())
    goto LABEL_15;
  v27 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v28 = objc_msgSend(v27, "kADEdgeDetectionEnabled");

  if ((v28 & 1) == 0)
    goto LABEL_15;
  v29 = *(_QWORD *)(v2 + 120);
  v30 = *(void (**)(unint64_t *__return_ptr, __n128))(*(_QWORD *)v29 + 144);
  v31 = swift_retain(v29);
  v30(&v49, v31);
  swift_release(v29);
  v32 = (_QWORD *)v49;
  v33 = v50;

  if (!v32)
    goto LABEL_15;
  (*(void (**)(void))((swift_isaMask & *v32) + 0x200))();

  v34 = *(_QWORD *)(v2 + 96);
  v35 = *(void (**)(__n128))(*(_QWORD *)v34 + 144);
  v36 = swift_retain(v34);
  v35(v36);
  swift_release(v34);
  sub_10003E4F0((uint64_t)&v12[*(int *)(v10 + 20)], (uint64_t)v9);
  sub_1000258F8((uint64_t)v12, type metadata accessor for SessionState);
  v37 = type metadata accessor for ARCamera.TrackingState.Reason(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v7, 2, 2, v37);
  LOBYTE(v34) = static ARCamera.TrackingState.== infix(_:_:)(v9, v7);
  sub_1000258F8((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for ARCamera.TrackingState);
  sub_1000258F8((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for ARCamera.TrackingState);
  if ((v34 & 1) == 0 || (sub_10010E92C() & 1) != 0 || (sub_10010EE80() & 1) != 0)
  {
LABEL_15:

LABEL_16:
    sub_10001A810(v20);
    return 0;
  }
  v38 = *(_QWORD *)(v2 + 128);
  v39 = *(void (**)(unint64_t *__return_ptr, __n128))(*(_QWORD *)v38 + 144);
  v40 = swift_retain(v38);
  v39(&v49, v40);
  swift_release(v38);
  v41 = v49;
  v42 = (uint64_t)v50;
  v43 = v51;
  v44 = sub_1001C70BC(v49, (uint64_t)v50, (uint64_t)v51);
  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v41);
  v45 = sub_100116ED0(v44, (uint64_t)&off_10043BF68);
  swift_bridgeObjectRelease(v44);
  if (v45)
  {

    goto LABEL_16;
  }
  v46 = v22 - v15;
  if (qword_10047AB18 != -1)
    swift_once(&qword_10047AB18, sub_10010E7E4);
  v47 = *(double *)&qword_1004AF688;

  sub_10001A810(v20);
  return v46 < v47;
}

uint64_t sub_10010EE80()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(_QWORD *__return_ptr, __n128);
  __n128 v4;
  _QWORD *v5;
  void *v6;
  float32x2_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *__return_ptr, __n128);
  __n128 v10;
  void *v11;
  _QWORD *v12;
  uint64_t v14;
  void (*v15)(_QWORD *__return_ptr, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  uint64_t (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  uint64_t v40;
  void (*v41)(double *__return_ptr, __n128);
  __n128 v42;
  uint64_t v43;
  void (*v44)(double *__return_ptr, __n128);
  __n128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  __n128 v58;
  uint64_t v59;
  void (*v60)(_QWORD *__return_ptr, __n128);
  __n128 v61;
  uint64_t v62;
  void (*v63)(_QWORD *__return_ptr, __n128);
  __n128 v64;
  uint64_t v65;
  double v66;
  float v67;
  BOOL v69;
  char v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  __n128 v74;
  __n128 v75;
  __n128 v76;
  __n128 v77;
  __n128 v78;
  __n128 v79;
  __n128 v80;
  __n128 v81;
  __n128 v82;
  __n128 v83;
  __n128 v84;
  __n128 v85;
  __n128 v86;
  __n128 v87;
  __n128 v88;
  __n128 v89;
  __n128 v90;
  __n128 v91;
  __int128 v92;
  _QWORD v93[64];
  _OWORD v94[32];
  double __src[64];
  _OWORD __dst[32];
  _QWORD v97[66];

  v1 = v0;
  v2 = v0[15];
  v3 = *(void (**)(_QWORD *__return_ptr, __n128))(*(_QWORD *)v2 + 144);
  v4 = swift_retain(v2);
  v3(v97, v4);
  swift_release(v2);
  v5 = (_QWORD *)v97[0];
  v6 = (void *)v97[1];

  if (!v5)
    return 1;
  v7 = COERCE_FLOAT32X2_T((*(double (**)(void))((swift_isaMask & *v5) + 0x200))());

  v8 = v1[15];
  v9 = *(void (**)(_QWORD *__return_ptr, __n128))(*(_QWORD *)v8 + 144);
  v10 = swift_retain(v8);
  v9(v97, v10);
  swift_release(v8);
  v11 = (void *)v97[0];
  v12 = (_QWORD *)v97[1];

  if (!v12)
    return 1;
  if ((*(uint64_t (**)(void))((swift_isaMask & *v12) + 0x2F0))())
  {

    return 1;
  }
  v72 = v12;
  v14 = v1[16];
  v15 = *(void (**)(_QWORD *__return_ptr, __n128))(*(_QWORD *)v14 + 144);
  v16 = swift_retain(v14);
  v15(v97, v16);
  swift_release(v14);
  v17 = v97[0];
  v18 = v97[1];
  v19 = v97[2];
  *(_QWORD *)&__dst[0] = v97[0];
  swift_bridgeObjectRetain(v97[0]);
  v20 = sub_10000EDC8(&qword_10047C018);
  v21 = sub_10000EDC8(&qword_10047C020);
  swift_dynamicCast(v97, __dst, v20, v21, 7);
  v22 = v97[0];
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v17);
  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0)
      v71 = v22;
    else
      v71 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v22);
    v23 = _CocoaArrayWrapper.endIndex.getter(v71);
    swift_bridgeObjectRelease(v22);
    if (v23)
      goto LABEL_8;
LABEL_50:

    swift_bridgeObjectRelease(v22);
    return 0;
  }
  v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v23)
    goto LABEL_50;
LABEL_8:
  v73 = v23;
  v24 = 4;
  while (1)
  {
    v25 = (v22 & 0xC000000000000001) != 0
        ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v24 - 4, v22)
        : *(id *)(v22 + 8 * v24);
    v26 = v25;
    v27 = v24 - 3;
    if (__OFADD__(v24 - 4, 1))
      break;
    v28 = *(uint64_t (**)(void))((swift_isaMask & *v25) + 0xD0);
    if (v28() != 5 && v28() && v28() != 2)
      goto LABEL_9;
    v29 = *(uint64_t (**)(void))((swift_isaMask & *v26) + 0x250);
    v30 = v29();
    v31 = v30;
    if ((v30 & 0xC000000000000001) != 0)
    {
      v32 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v30);
    }
    else
    {
      if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        goto LABEL_43;
      v32 = *(id *)(v30 + 40);
    }
    v33 = v32;
    swift_bridgeObjectRelease(v31);
    type metadata accessor for MeasureCamera(0);
    v34 = (*(uint64_t (**)(void))((swift_isaMask & *v33) + 0x2C0))();

    v35.n128_f64[0] = (*(double (**)(void))(*(_QWORD *)v34 + 368))();
    v86 = v36;
    v90 = v35;
    v78 = v38;
    v82 = v37;
    swift_release(v34);
    v39.n128_f64[0] = simd_float4x4.position.getter(v90, v86, v82, v78);
    v91 = v39;
    v40 = v1[10];
    v41 = *(void (**)(double *__return_ptr, __n128))(*(_QWORD *)v40 + 144);
    v42 = swift_retain(v40);
    v41(__src, v42);
    swift_release(v40);
    memcpy(__dst, __src, sizeof(__dst));
    sub_100012C00((uint64_t)__dst);
    v83 = (__n128)__dst[12];
    v87 = (__n128)__dst[11];
    v75 = (__n128)__dst[14];
    v79 = (__n128)__dst[13];
    v43 = v1[10];
    v44 = *(void (**)(double *__return_ptr, __n128))(*(_QWORD *)v43 + 144);
    v45 = swift_retain(v43);
    v44(__src, v45);
    swift_release(v43);
    memcpy(v97, __src, 0x200uLL);
    v46 = sub_100012C00((uint64_t)v97);
    *(double *)&v47 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v46, v91, v87, v83, v79, v75, *(double *)&v97[4]);
    v92 = v47;
    v48 = v29();
    v49 = v48;
    if ((v48 & 0xC000000000000001) != 0)
    {
      v50 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v48);
    }
    else
    {
      if (!*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_44;
      v50 = *(id *)(v48 + 32);
    }
    v51 = v50;
    v52 = swift_bridgeObjectRelease(v49);
    v53 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v51) + 0x2C0))(v52);

    v54.n128_f64[0] = (*(double (**)(void))(*(_QWORD *)v53 + 368))();
    v84 = v55;
    v88 = v54;
    v76 = v57;
    v80 = v56;
    swift_release(v53);
    v58.n128_f64[0] = simd_float4x4.position.getter(v88, v84, v80, v76);
    v89 = v58;
    v59 = v1[10];
    v60 = *(void (**)(_QWORD *__return_ptr, __n128))(*(_QWORD *)v59 + 144);
    v61 = swift_retain(v59);
    v60(v93, v61);
    swift_release(v59);
    memcpy(v94, v93, sizeof(v94));
    sub_100012C00((uint64_t)v94);
    v81 = (__n128)v94[12];
    v85 = (__n128)v94[11];
    v74 = (__n128)v94[14];
    v77 = (__n128)v94[13];
    v62 = v1[10];
    v63 = *(void (**)(_QWORD *__return_ptr, __n128))(*(_QWORD *)v62 + 144);
    v64 = swift_retain(v62);
    v63(v93, v64);
    swift_release(v62);
    memcpy(__src, v93, sizeof(__src));
    v65 = sub_100012C00((uint64_t)__src);
    v66 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v65, v89, v85, v81, v77, v74, __src[4]);
    if ((~DWORD2(v92) & 0x7F800000) == 0 && (DWORD2(v92) & 0x7FFFFF) != 0)
    {

      v23 = v73;
      goto LABEL_10;
    }
    if ((v23 = v73, *((float *)&v92 + 2) <= 1.0)
      && *((float *)&v92 + 2) >= 0.0
      && ((~LODWORD(v67) & 0x7F800000) == 0 ? (v69 = (LODWORD(v67) & 0x7FFFFF) == 0) : (v69 = 1),
          v69 && v67 <= 1.0 && v67 >= 0.0))
    {
      v70 = sub_10011821C(v7, *(float32x2_t *)&v92, *(float32x2_t *)&v66, 6400.0);

      if ((v70 & 1) != 0)
        goto LABEL_45;
    }
    else
    {
LABEL_9:

    }
LABEL_10:
    ++v24;
    if (v27 == v23)
      goto LABEL_50;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:

  swift_bridgeObjectRelease(v22);
  return 1;
}

_QWORD *sub_10010F45C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 248);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 248);
  }
  else
  {
    v2 = sub_100117040(v0);
    v3 = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 248) = v2;
    swift_retain(v2);
    swift_release(v3);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

void sub_10010F4B8(void *__src, uint64_t a2)
{
  void *v3;
  BOOL v4;
  int v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _QWORD v9[64];

  memcpy(v9, __src, sizeof(v9));
  v3 = (void *)sub_10008F8B8();
  v4 = sub_10010EA90(v3);

  if (v4)
  {
    v5 = *(unsigned __int8 *)(a2 + 64);
    v6 = 16 * (v5 == 2);
    v7 = v5 == 3;
    v8 = 4;
    if (!v7)
      v8 = v6;
    if (!v8)
      __break(1u);
  }
}

uint64_t sub_10010F550@<X0>(void *__src@<X0>, uint64_t a2@<X8>)
{
  _BYTE v5[512];
  _BYTE __dst[512];

  memcpy(v5, __src, sizeof(v5));
  memcpy(__dst, __src, sizeof(__dst));
  nullsub_1(__dst);
  sub_100012C58((uint64_t)__dst, a2, &qword_100484660);
  return sub_1000471E8((uint64_t)v5);
}

uint64_t sub_10010F5C4@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  _BYTE v5[512];

  memcpy(v5, __src, sizeof(v5));
  memcpy(a2, __src, 0x200uLL);
  return sub_1000471E8((uint64_t)v5);
}

void sub_10010F61C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, __n128);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, __n128);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, __n128);
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, __n128);
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  id v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  id v73;
  id v74;
  id v75;
  _QWORD v76[5];

  v1 = v0;
  v2 = *v0;
  *((_BYTE *)v0 + 64) = 3;
  v3 = sub_10000EDC8(&qword_10047E470);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v4 = swift_retain();
  v0[9] = PassthroughSubject.init()(v4);
  KeyPath = swift_getKeyPath(&unk_1003B7B60);
  v6 = sub_10000EDC8(&qword_10047BBD0);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v7 = qword_1004AF890;
  v8 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v6 + 272);
  v9 = swift_retain();
  v1[10] = v8(KeyPath, v7, v9);
  v10 = swift_getKeyPath(&unk_1003B7B88);
  v11 = sub_10000EDC8((uint64_t *)&unk_10047E5D0);
  v12 = qword_1004AF890;
  v13 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v11 + 272);
  v14 = swift_retain();
  v1[11] = v13(v10, v12, v14);
  v15 = swift_getKeyPath(&unk_1003B7BB0);
  v16 = sub_10000EDC8((uint64_t *)&unk_10047E5C0);
  v17 = qword_1004AF890;
  v18 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v16 + 272);
  v19 = swift_retain();
  v1[12] = v18(v15, v17, v19);
  v20 = swift_getKeyPath(&unk_1003B7BD8);
  v21 = sub_10000EDC8((uint64_t *)&unk_100481B90);
  v22 = qword_1004AF890;
  v23 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v21 + 272);
  v24 = swift_retain();
  v1[13] = v23(v20, v22, v24);
  v25 = swift_getKeyPath(&unk_1003B7C00);
  v26 = sub_10000EDC8(&qword_10047E610);
  v27 = qword_1004AF890;
  v28 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v26 + 272);
  v29 = swift_retain();
  v1[14] = v28(v25, v27, v29);
  v30 = swift_getKeyPath(&unk_1003B7C28);
  v31 = sub_10000EDC8(&qword_10047BBA0);
  v32 = qword_1004AF890;
  v33 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v31 + 272);
  v34 = swift_retain();
  v1[15] = v33(v30, v32, v34);
  v35 = swift_getKeyPath(&unk_1003B7C50);
  v36 = sub_10000EDC8(&qword_100481BA0);
  v37 = qword_1004AF890;
  v38 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v36 + 272);
  v39 = swift_retain();
  v1[16] = v38(v35, v37, v39);
  v40 = swift_getKeyPath(&unk_1003B7C78);
  v41 = sub_10000EDC8((uint64_t *)&unk_100486710);
  v42 = qword_1004AF890;
  v43 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v41 + 272);
  v44 = swift_retain();
  v1[17] = v43(v40, v42, v44);
  sub_10000EDC8(&qword_1004845C0);
  v45 = swift_getKeyPath(&unk_1003B7CA0);
  v1[18] = MutableStateValue.__allocating_init(_:_:)(v45, v2);
  v1[19] = (uint64_t)_swiftEmptyArrayStorage;
  v1[20] = 0;
  *((_WORD *)v1 + 84) = 257;
  if (qword_10047AB60 != -1)
    swift_once(&qword_10047AB60, sub_10010E91C);
  v46 = qword_1004AF6B0;
  v47 = sub_10005F240(0, qword_1004AF6B0 & ~(qword_1004AF6B0 >> 63), 0, (char *)_swiftEmptyArrayStorage);
  v1[22] = v46;
  v1[23] = 0;
  v1[24] = (uint64_t)v47;
  v48 = sub_10005F120(0, 4, 0, _swiftEmptyArrayStorage);
  *(_OWORD *)(v1 + 25) = xmmword_1003B4EF0;
  v1[27] = (uint64_t)v48;
  v1[28] = 0;
  *((_BYTE *)v1 + 232) = 1;
  v1[31] = 0;
  v1[32] = 0;
  v1[30] = (uint64_t)_swiftEmptyArrayStorage;
  v49 = objc_msgSend(objc_allocWithZone((Class)SCNNode), "init");
  v50 = (void *)v1[32];
  v1[32] = (uint64_t)v49;

  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v51 = (void *)*((_QWORD *)&xmmword_1004AF228 + 1);
  if (!*((_QWORD *)&xmmword_1004AF228 + 1))
  {
    __break(1u);
    goto LABEL_12;
  }
  v71 = (void *)qword_1004AF280;
  v52 = (void *)*((_QWORD *)&xmmword_1004AF258 + 1);
  v53 = (void *)xmmword_1004AF258;
  v54 = (void *)qword_1004AF240;
  v55 = (void *)xmmword_1004AF228;
  v73 = (id)qword_1004AF288;
  v75 = v55;
  v56 = v51;
  swift_retain();
  v74 = v54;
  swift_retain();
  v72 = v53;
  v57 = v52;
  swift_retain();
  swift_retain();
  swift_retain();
  v58 = v71;
  v59 = sub_1001CA908();
  v60 = objc_msgSend(v59, "scene");

  v61 = objc_msgSend(v60, "rootNode");
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  v62 = (void *)v1[32];
  if (!v62)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v63 = v62;
  objc_msgSend(v61, "addChildNode:", v63);

  swift_release();
  v76[3] = &type metadata for Configurations.Default;
  v76[4] = &protocol witness table for Configurations.Default;
  v64 = StateObserver.init(configuration:)(v76);
  swift_retain();
  v65 = sub_10010F45C()[9];
  swift_retain();
  swift_release();
  if (v65)
  {
    v76[0] = v65;
    swift_retain();
    v66 = sub_10000EDC8(&qword_1004845C8);
    v67 = sub_100043310(&qword_1004845D0, &qword_1004845C8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    Publisher<>.sink(receiveValue:)(sub_100115CB4, v64, v66, v67, v68);
    swift_release();
    swift_release();
    swift_beginAccess(v64 + 240, v76, 33, 0);
    v69 = sub_10000EDC8(&qword_10047D9A0);
    v70 = sub_100043310(&qword_10047D9A8, &qword_10047D9A0, (uint64_t)&protocol conformance descriptor for [A]);
    AnyCancellable.store<A>(in:)(v64 + 240, v69, v70);
    swift_endAccess(v76);
    swift_release();
    swift_release();
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_10010FC94(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  double *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  id v31;
  _OWORD v32[32];

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  memcpy(v32, a1 + 2, sizeof(v32));
  v31 = (id)sub_10008F8B8();
  v29 = (__n128)v32[22];
  v30 = (__n128)v32[21];
  v27 = (__n128)v32[24];
  v28 = (__n128)v32[23];
  ariadne_trace(_:_:_:_:_:)(727056584, 0, 0, 0, 0);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain(v8);
    v26 = v8;
    v11 = (uint64_t *)(v8 + 56);
    do
    {
      v12 = *(v11 - 3);
      v13 = *(v11 - 2);
      v14 = *(v11 - 1);
      v15 = *v11;
      v16 = Date.init()(isUniquelyReferenced_nonNull_native);
      v17 = Date.timeIntervalSince1970.getter(v16);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v18 = *(_QWORD *)(a2 + 152);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
      *(_QWORD *)(a2 + 152) = v18;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_100060004(0, *(_QWORD *)(v18 + 16) + 1, 1, (char *)v18);
        v18 = isUniquelyReferenced_nonNull_native;
        *(_QWORD *)(a2 + 152) = isUniquelyReferenced_nonNull_native;
      }
      v20 = *(_QWORD *)(v18 + 16);
      v19 = *(_QWORD *)(v18 + 24);
      if (v20 >= v19 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_100060004((char *)(v19 > 1), v20 + 1, 1, (char *)v18);
        v18 = isUniquelyReferenced_nonNull_native;
        *(_QWORD *)(a2 + 152) = isUniquelyReferenced_nonNull_native;
      }
      *(_QWORD *)(v18 + 16) = v20 + 1;
      v21 = (double *)(v18 + 40 * v20);
      *((_QWORD *)v21 + 4) = v12;
      *((_QWORD *)v21 + 5) = v13;
      *((_QWORD *)v21 + 6) = v14;
      *((_QWORD *)v21 + 7) = v15;
      v21[8] = v17;
      v11 += 4;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease(v26);
  }
  v22 = v31;
  if (v31)
  {
    v23 = v31;
    sub_1001104E4(v23, v30, v29, v28, v27);
    sub_100110714((uint64_t)v23);

  }
  v24 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a2 + 152) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v24);
  ariadne_trace(_:_:_:_:_:)(727056588, 0, 0, 0, 0);

}

void sub_10010FED4()
{
  uint64_t v0;

  swift_allocObject(v0, 264, 7);
  sub_10010FEF8();
}

void sub_10010FEF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, __n128);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, __n128);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, __n128);
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, __n128);
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;

  v1 = v0;
  v2 = *v0;
  *((_BYTE *)v0 + 64) = 3;
  v3 = sub_10000EDC8(&qword_10047E470);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v0[9] = PassthroughSubject.init()(v4);
  KeyPath = swift_getKeyPath(&unk_1003B7B60);
  v6 = sub_10000EDC8(&qword_10047BBD0);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v7 = qword_1004AF890;
  v8 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v6 + 272);
  v9 = swift_retain();
  v1[10] = v8(KeyPath, v7, v9);
  v10 = swift_getKeyPath(&unk_1003B7B88);
  v11 = sub_10000EDC8((uint64_t *)&unk_10047E5D0);
  v12 = qword_1004AF890;
  v13 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v11 + 272);
  v14 = swift_retain();
  v1[11] = v13(v10, v12, v14);
  v15 = swift_getKeyPath(&unk_1003B7BB0);
  v16 = sub_10000EDC8((uint64_t *)&unk_10047E5C0);
  v17 = qword_1004AF890;
  v18 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v16 + 272);
  v19 = swift_retain();
  v1[12] = v18(v15, v17, v19);
  v20 = swift_getKeyPath(&unk_1003B7BD8);
  v21 = sub_10000EDC8((uint64_t *)&unk_100481B90);
  v22 = qword_1004AF890;
  v23 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v21 + 272);
  v24 = swift_retain();
  v1[13] = v23(v20, v22, v24);
  v25 = swift_getKeyPath(&unk_1003B7C00);
  v26 = sub_10000EDC8(&qword_10047E610);
  v27 = qword_1004AF890;
  v28 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v26 + 272);
  v29 = swift_retain();
  v1[14] = v28(v25, v27, v29);
  v30 = swift_getKeyPath(&unk_1003B7C28);
  v31 = sub_10000EDC8(&qword_10047BBA0);
  v32 = qword_1004AF890;
  v33 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v31 + 272);
  v34 = swift_retain();
  v1[15] = v33(v30, v32, v34);
  v35 = swift_getKeyPath(&unk_1003B7C50);
  v36 = sub_10000EDC8(&qword_100481BA0);
  v37 = qword_1004AF890;
  v38 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v36 + 272);
  v39 = swift_retain();
  v1[16] = v38(v35, v37, v39);
  v40 = swift_getKeyPath(&unk_1003B7C78);
  v41 = sub_10000EDC8((uint64_t *)&unk_100486710);
  v42 = qword_1004AF890;
  v43 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v41 + 272);
  v44 = swift_retain();
  v1[17] = v43(v40, v42, v44);
  sub_10000EDC8(&qword_1004845C0);
  v45 = swift_getKeyPath(&unk_1003B7CA0);
  v1[18] = MutableStateValue.__allocating_init(_:_:)(v45, v2);
  v1[19] = (uint64_t)_swiftEmptyArrayStorage;
  v1[20] = 0;
  *((_WORD *)v1 + 84) = 257;
  if (qword_10047AB60 != -1)
    swift_once(&qword_10047AB60, sub_10010E91C);
  v46 = qword_1004AF6B0;
  v47 = sub_10005F240(0, qword_1004AF6B0 & ~(qword_1004AF6B0 >> 63), 0, (char *)_swiftEmptyArrayStorage);
  v1[22] = v46;
  v1[23] = 0;
  v1[24] = (uint64_t)v47;
  v48 = sub_10005F120(0, 4, 0, _swiftEmptyArrayStorage);
  *(_OWORD *)(v1 + 25) = xmmword_1003B4EF0;
  v1[27] = (uint64_t)v48;
  v1[28] = 0;
  *((_BYTE *)v1 + 232) = 1;
  v1[31] = 0;
  v1[32] = 0;
  v1[30] = (uint64_t)_swiftEmptyArrayStorage;
  swift_release();
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002DLL, 0x80000001003D7D70, "Measure/EdgeInstrument.swift", 28, 2, 272, 0);
  __break(1u);
}

void sub_10011029C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 104));
  swift_release(*(_QWORD *)(v0 + 112));
  swift_release(*(_QWORD *)(v0 + 120));
  swift_release(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 136));
  swift_release(*(_QWORD *)(v0 + 144));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 152));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 192));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 216));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 240));
  swift_release(*(_QWORD *)(v0 + 248));

}

uint64_t sub_100110330()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = *(id *)(v0 + 256);
  if (v1)
    v1 = objc_msgSend(v1, "removeFromParentNode");
  v2 = StateObserver.deinit(v1);
  swift_release(*(_QWORD *)(v2 + 72));
  swift_release(*(_QWORD *)(v2 + 80));
  swift_release(*(_QWORD *)(v2 + 88));
  swift_release(*(_QWORD *)(v2 + 96));
  swift_release(*(_QWORD *)(v2 + 104));
  swift_release(*(_QWORD *)(v2 + 112));
  swift_release(*(_QWORD *)(v2 + 120));
  swift_release(*(_QWORD *)(v2 + 128));
  swift_release(*(_QWORD *)(v2 + 136));
  swift_release(*(_QWORD *)(v2 + 144));
  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 152));

  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 192));
  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 216));
  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 240));
  swift_release(*(_QWORD *)(v2 + 248));

  return v2;
}

uint64_t sub_1001103F0()
{
  uint64_t v0;

  v0 = sub_100110330();
  return swift_deallocClassInstance(v0, 264, 7);
}

uint64_t type metadata accessor for EdgeInstrument(uint64_t a1)
{
  uint64_t result;

  result = qword_100484420;
  if (!qword_100484420)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EdgeInstrument);
  return result;
}

uint64_t sub_100110448(uint64_t a1)
{
  _QWORD v2[20];

  v2[0] = &unk_1003B7AC8;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[9] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[10] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[12] = &unk_1003B7AE0;
  v2[13] = &unk_1003B7AF8;
  v2[14] = &unk_1003B7B10;
  v2[15] = &unk_1003B7B10;
  v2[16] = &unk_1003B7B28;
  v2[17] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[18] = &unk_1003B7AE0;
  v2[19] = &unk_1003B7AE0;
  return swift_initClassMetadata2(a1, 256, 20, v2, a1 + 208);
}

void sub_1001104E4(void *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v5;
  uint64_t v6;
  void (*v8)(_QWORD *__return_ptr, __n128);
  __n128 v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  _QWORD *v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  id v19;
  unsigned int v20;
  void *v21;
  void *v22;
  float32x4_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  float32x4_t v34;
  void *v35;
  void *v36;
  _QWORD v37[2];
  id v38;
  void *v39;

  v6 = v5;
  v8 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v5 + 120) + 144);
  v9 = swift_retain();
  v8(v37, v9);
  swift_release();
  v10 = (void *)v37[0];
  v11 = (void *)v37[1];
  v12 = v38;
  v13 = v39;
  v14 = v38;

  if (v12)
  {
    v15 = (*(double (**)(void))((swift_isaMask & *v14) + 0x200))();

    v16 = CGPoint.init(_:)(v15);
    sub_100111BCC(a1, (uint64_t)v37, v16, v17, a2, a3, a4, a5);
    v18 = (void *)v37[0];
    v19 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v20 = objc_msgSend(v19, "guideSnapPointsEnabled");

    if (v20)
    {
      sub_10011899C(a1, a2, a3, a4, a5);
      v22 = v21;
      if (!v18)
        goto LABEL_9;
    }
    else
    {
      v22 = 0;
      if (!v18)
      {
LABEL_9:
        v35 = 0;
        v36 = v22;
        swift_beginAccess(v6 + 200, v37, 33, 0);
        v28 = v22;
        v29 = sub_10000EDC8(&qword_1004845F0);
        RingBuffer.append(_:)(&v35, v29);
        swift_endAccess(v37);

        return;
      }
    }
    *(double *)v23.i64 = simd_float4x4.position.getter(a2, a3, a4, a5);
    v34 = v23;
    v24 = v18;
    if (sub_100118E4C((uint64_t)v24, v34))
    {
      v35 = v18;
      v36 = v22;
      swift_beginAccess(v6 + 200, v37, 33, 0);
      v25 = v22;
      v26 = v24;
      v27 = sub_10000EDC8(&qword_1004845F0);
      RingBuffer.append(_:)(&v35, v27);
      swift_endAccess(v37);

      *(_WORD *)(v6 + 168) = 257;
      return;
    }

    goto LABEL_9;
  }
}

void sub_100110714(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v4)(__int128 *__return_ptr, __n128);
  __n128 v5;
  __int128 v6;
  double v7;
  void (*v8)(__int128 *__return_ptr, __n128);
  __n128 v9;
  __int128 v10;
  __n128 v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  int8x16_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  id v22;
  unsigned int v23;
  char *v24;
  char **v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  __int128 v31;
  char *v32;
  char *v33;
  char *v34;
  float32x2_t v35;
  unint64_t v36;
  char *v37;
  const double *v38;
  float32x2_t v39;
  float64x2_t v40;
  char *v41;
  char *v42;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v44;
  unint64_t v45;
  char **v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  __int128 v52;
  char *v53;
  char *v54;
  char *v55;
  float32x2_t v56;
  unint64_t v57;
  char *v58;
  const double *v59;
  float32x2_t v60;
  float64x2_t v61;
  char *v62;
  char *v63;
  char v64;
  unint64_t v65;
  unint64_t v66;
  void (*v67)(__int128 *__return_ptr, __n128);
  __n128 v68;
  void *v69;
  id v70;
  void (*v71)(_OWORD *__return_ptr, __n128);
  __n128 v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  float32x2_t v76;
  float32x2_t v77;
  float32x2_t v78;
  char v79;
  char v80;
  float v81;
  void *v82;
  char *v83;
  void *v84;
  void *v85;
  double v86;
  double v87;
  double v88;
  id v89;
  float v90;
  Swift::String v91;
  id v92;
  char *v93;
  char *v94;
  char *v95;
  float *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  void (*v100)(_QWORD *, __n128);
  id v101;
  char *v102;
  id v103;
  char *v104;
  __n128 v105;
  void *v106;
  id v107;
  float v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  void *v114;
  int8x16_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  __n128 v119;
  char *v120;
  __n128 v121;
  float32x4_t v122;
  float32x4_t v123;
  __n128 v124;
  __int128 v125;
  __int128 v126;
  __n128 v127;
  __int128 v128;
  __int128 v129;
  char v130[24];
  char v131[24];
  char v132[24];
  char v133[24];
  char v134[24];
  char v135[24];
  _OWORD v136[8];
  __int128 v137;
  uint64_t v138;
  char v139[24];
  _QWORD v140[2];
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  uint64_t v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  uint64_t v160;

  v2 = v1;
  v4 = *(void (**)(__int128 *__return_ptr, __n128))(**(_QWORD **)(v1 + 120) + 144);
  v5 = swift_retain();
  v4(&v151, v5);
  swift_release();
  v6 = v151;

  if ((_QWORD)v6)
  {
    v7 = (*(double (**)(void))((swift_isaMask & *(_QWORD *)v6) + 0x200))();

    v8 = *(void (**)(__int128 *__return_ptr, __n128))(**(_QWORD **)(v1 + 120) + 144);
    v9 = swift_retain();
    v8(&v151, v9);
    swift_release();
    v10 = v151;

    if (*((_QWORD *)&v10 + 1))
    {
      v112 = a1;
      v11.n128_f64[0] = (*(double (**)(void))((swift_isaMask & **((_QWORD **)&v10 + 1)) + 0x2B0))();
      v124 = v12;
      v127 = v11;
      v119 = v14;
      v121 = v13;

      *(double *)v15.i64 = simd_float4x4.position.getter(v127, v124, v121, v119);
      v115 = v15;
      v16 = (char *)sub_10011106C();
      v17 = v16;
      v19 = v18;
      if (v16 == (char *)1)
      {
        v21 = 0;
      }
      else
      {
        v20 = v16;
        v21 = v17;
      }
      v22 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v23 = objc_msgSend(v22, "guideSnapPointsEnabled");

      v120 = 0;
      v113 = v17;
      if (v17 != (char *)1 && v23)
      {
        v24 = v19;
        v120 = v19;
      }
      v114 = v19;
      v117 = v2;
      v118 = v21;
      if (v21)
      {
        v25 = (char **)&v21[direct field offset for WorldEdge.connectedSurfaces];
        swift_beginAccess(&v21[direct field offset for WorldEdge.connectedSurfaces], v132, 1, 0);
        v26 = *v25;
        *v25 = (char *)_swiftEmptyArrayStorage;
        v27 = v21;
        swift_bridgeObjectRelease(v26);
        v109 = v27;
        sub_100119210((uint64_t)v27, v115);
        v110 = v28;
        v29 = *(_QWORD *)(v28 + 16);
        if (v29)
        {
          v30 = (_OWORD *)(v28 + 64);
          do
          {
            v33 = (char *)*((_QWORD *)v30 - 4);
            v125 = *v30;
            v128 = *(v30 - 1);
            v34 = &v33[direct field offset for WorldEdge.p1];
            swift_beginAccess(&v33[direct field offset for WorldEdge.p1], v131, 0, 0);
            if ((v34[16] & 1) == 0)
            {
              v35 = *(float32x2_t *)v34;
              v36 = *((_QWORD *)v34 + 1);
              v37 = &v33[direct field offset for WorldEdge.p2];
              swift_beginAccess(&v33[direct field offset for WorldEdge.p2], v130, 0, 0);
              if (v37[16] != 1)
              {
                v38 = (const double *)(v37 + 8);
                v39 = *(float32x2_t *)v37;
                v40 = vld1q_dup_f64(v38);
                v122 = (float32x4_t)v40;
                v41 = *v25;
                v42 = v33;
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v41);
                *v25 = v41;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  v41 = sub_100060444(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
                  *v25 = v41;
                }
                v45 = *((_QWORD *)v41 + 2);
                v44 = *((_QWORD *)v41 + 3);
                if (v45 >= v44 >> 1)
                {
                  v41 = sub_100060444((char *)(v44 > 1), v45 + 1, 1, v41);
                  *v25 = v41;
                }
                *(float32x2_t *)&v31 = vsub_f32(v39, v35);
                *((_QWORD *)&v31 + 1) = vsubq_f32(v122, (float32x4_t)vdupq_n_s64(v36)).u32[2];
                *((_QWORD *)v41 + 2) = v45 + 1;
                v32 = &v41[64 * v45];
                *((_OWORD *)v32 + 2) = v31;
                *((_OWORD *)v32 + 3) = v128;
                *((_OWORD *)v32 + 4) = v125;
                v32[80] = 0;

              }
            }
            v30 += 3;
            --v29;
          }
          while (v29);
        }

        swift_bridgeObjectRelease(v110);
        v2 = v117;
      }
      if (v120)
      {
        v46 = (char **)&v120[direct field offset for WorldEdge.connectedSurfaces];
        swift_beginAccess(&v120[direct field offset for WorldEdge.connectedSurfaces], v135, 1, 0);
        v47 = *v46;
        *v46 = (char *)_swiftEmptyArrayStorage;
        v48 = v120;
        swift_bridgeObjectRelease(v47);
        v111 = v48;
        sub_100119210((uint64_t)v48, v115);
        v116 = v49;
        v50 = *(_QWORD *)(v49 + 16);
        if (v50)
        {
          v51 = (_OWORD *)(v49 + 64);
          do
          {
            v54 = (char *)*((_QWORD *)v51 - 4);
            v126 = *v51;
            v129 = *(v51 - 1);
            v55 = &v54[direct field offset for WorldEdge.p1];
            swift_beginAccess(&v54[direct field offset for WorldEdge.p1], v134, 0, 0);
            if ((v55[16] & 1) == 0)
            {
              v56 = *(float32x2_t *)v55;
              v57 = *((_QWORD *)v55 + 1);
              v58 = &v54[direct field offset for WorldEdge.p2];
              swift_beginAccess(&v54[direct field offset for WorldEdge.p2], v133, 0, 0);
              if (v58[16] != 1)
              {
                v59 = (const double *)(v58 + 8);
                v60 = *(float32x2_t *)v58;
                v61 = vld1q_dup_f64(v59);
                v123 = (float32x4_t)v61;
                v62 = *v46;
                v63 = v54;
                v64 = swift_isUniquelyReferenced_nonNull_native(v62);
                *v46 = v62;
                if ((v64 & 1) == 0)
                {
                  v62 = sub_100060444(0, *((_QWORD *)v62 + 2) + 1, 1, v62);
                  *v46 = v62;
                }
                v66 = *((_QWORD *)v62 + 2);
                v65 = *((_QWORD *)v62 + 3);
                if (v66 >= v65 >> 1)
                {
                  v62 = sub_100060444((char *)(v65 > 1), v66 + 1, 1, v62);
                  *v46 = v62;
                }
                *(float32x2_t *)&v52 = vsub_f32(v60, v56);
                *((_QWORD *)&v52 + 1) = vsubq_f32(v123, (float32x4_t)vdupq_n_s64(v57)).u32[2];
                *((_QWORD *)v62 + 2) = v66 + 1;
                v53 = &v62[64 * v66];
                *((_OWORD *)v53 + 2) = v52;
                *((_OWORD *)v53 + 3) = v129;
                *((_OWORD *)v53 + 4) = v126;
                v53[80] = 0;

              }
            }
            v51 += 3;
            --v50;
          }
          while (v50);
        }

        swift_bridgeObjectRelease(v116);
        v2 = v117;
      }
      v67 = *(void (**)(__int128 *__return_ptr, __n128))(**(_QWORD **)(v2 + 112) + 144);
      v68 = swift_retain();
      v67(&v141, v68);
      swift_release();
      v157 = v147;
      v158 = v148;
      v159 = v149;
      v160 = v150;
      v153 = v143;
      v154 = v144;
      v155 = v145;
      v156 = v146;
      v151 = v141;
      v152 = v142;
      v69 = (void *)*((_QWORD *)&v149 + 1);
      v70 = *((id *)&v149 + 1);
      sub_100012BC4((uint64_t)&v151);
      if (v69)
      {
        v71 = *(void (**)(_OWORD *__return_ptr, __n128))(**(_QWORD **)(v2 + 112) + 144);
        v72 = swift_retain();
        v71(v136, v72);
        swift_release();
        v147 = v136[6];
        v148 = v136[7];
        v149 = v137;
        v150 = v138;
        v143 = v136[2];
        v144 = v136[3];
        v145 = v136[4];
        v146 = v136[5];
        v141 = v136[0];
        v142 = v136[1];
        v73 = *((_QWORD *)&v137 + 1);
        v74 = *((id *)&v137 + 1);
        sub_100012BC4((uint64_t)&v141);
        v75 = v112;
        if (!v73
          || (v76 = (float32x2_t)WorldEdge.projected(for:)(v112), v78 = v77,
                                                                  v80 = v79,
                                                                  v74,
                                                                  (v80 & 1) != 0))
        {

          sub_100012774(v113, v114);
          return;
        }
        sub_10011818C(*(float32x2_t *)&v7, v76, v78);
        if (qword_10047AB28 != -1)
        {
          v108 = v81;
          swift_once(&qword_10047AB28, sub_10010E80C);
          v81 = v108;
        }
        if (v81 >= *(float *)&dword_1004AF694)
        {

          v82 = 0;
          v69 = 0;
        }
        else
        {
          v82 = v120;
          v83 = v120;
        }
        v84 = v118;
        v85 = *(void **)(v2 + 160);
        if (!v85)
          goto LABEL_53;
      }
      else
      {
        v82 = 0;
        v84 = v118;
        v75 = v112;
        v85 = *(void **)(v2 + 160);
        if (!v85)
          goto LABEL_53;
      }
      v86 = CGPoint.init(_:)(v7);
      v88 = v87;
      v89 = v85;
      WorldEdge.getClosestScreenSpacePoint(from:for:)(v136, v75, v86, v88);

      sub_100012C58((uint64_t)v136, (uint64_t)&v141, &qword_1004845D8);
      if ((BYTE4(v143) & 1) == 0)
      {
        v90 = *(float *)&v143 * *(float *)&v143;
        if (qword_10047AB20 != -1)
          swift_once(&qword_10047AB20, sub_10010E7FC);
        if (v90 < *(float *)&dword_1004AF690)
        {
          if (qword_10047AA18 != -1)
            swift_once(&qword_10047AA18, sub_1000E1018);
          v91._object = (void *)0x80000001003E0070;
          v91._countAndFlagsBits = 0xD000000000000022;
          Log.debug(_:isPrivate:)(v91, 0);

          v69 = *(void **)(v2 + 160);
          if (!v69)
          {
            __break(1u);
            return;
          }
          v92 = v69;
          v82 = v120;
          v93 = v120;
          v94 = v93;
          goto LABEL_59;
        }
      }
LABEL_53:
      if (!v84 || v69)
      {
        v93 = v120;
        v94 = (char *)v82;
      }
      else
      {
        v95 = v84;

        v96 = (float *)&v95[direct field offset for WorldEdge.adVariance];
        swift_beginAccess(&v95[direct field offset for WorldEdge.adVariance], v139, 0, 0);
        if (*v96 <= 0.5)
        {
          v97 = v95;
          v69 = v84;
        }
        v82 = v120;
        v93 = v120;
        v98 = v95;
        sub_1001117DC((char *)v69, v120, v84);

        v94 = v93;
      }
LABEL_59:
      v99 = *(_QWORD *)(v2 + 144);
      v140[0] = v69;
      v140[1] = v82;
      v100 = *(void (**)(_QWORD *, __n128))(*(_QWORD *)v99 + 392);
      v101 = v69;
      v102 = v94;
      v103 = v101;
      v104 = v102;
      v105 = swift_retain();
      v100(v140, v105);
      sub_100012774(v113, v114);
      swift_release();

      v106 = *(void **)(v2 + 160);
      *(_QWORD *)(v2 + 160) = v69;
      v107 = v103;

      *(_WORD *)(v2 + 168) = 257;
    }
  }
}

uint64_t sub_10011106C()
{
  _QWORD *v0;
  id v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  float32x2_t v12;
  float32x2_t v13;
  float32x2_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t i;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  float *v26;
  _QWORD *v27;
  _QWORD *countAndFlagsBits;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  void *v32;
  id v33;
  id v34;
  Swift::String v35;
  void *object;
  Swift::String v37;
  float32x4_t v38;
  float32x2_t v39;
  unsigned __int32 v40;
  float32x2_t v41;
  float32x2_t v42;
  uint64_t *v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  float v47;
  uint64_t v48;
  float32x2_t v49;
  unint64_t v50;
  float32x2_t *v51;
  float32x4_t v52;
  const double *v53;
  float32x4_t v54;
  float32x4_t v55;
  int32x4_t v56;
  float32x2_t v57;
  float32x2_t v58;
  float32x4_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  float v65;
  uint64_t v66;
  float v67;
  Swift::String v68;
  void *v69;
  _DWORD *v70;
  Swift::String v71;
  float32x2_t v73;
  float32x2_t v74;
  float32x2_t v75;
  float32x2_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  float32x4_t v81;
  _BYTE v82[24];
  int64_t v83[3];
  Swift::String v84;
  _QWORD v85[3];
  _BYTE v86[24];
  _BYTE v87[32];

  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v2 = objc_msgSend(v1, "throttleEdges");

  v3 = 1;
  if (v2)
    v4 = 2;
  else
    v4 = 1;
  swift_beginAccess(v0 + 25, v87, 0, 0);
  v5 = v0[27];
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 < 4)
    return v3;
  swift_beginAccess(v0 + 25, v86, 32, 0);
  v7 = v0[25];
  v8 = v0[26];
  v9 = sub_10000EDC8(&qword_10047E530);
  RingBuffer.subscript.getter(v85, v6 - 1, v7, v8, v5, v9);
  v3 = v85[0];
  v10 = (void *)v85[1];
  swift_endAccess(v86);
  if (!v3)
  {
LABEL_49:

    return 1;
  }
  v11 = v3 + direct field offset for WorldEdge.p1;
  swift_beginAccess(v3 + direct field offset for WorldEdge.p1, v86, 0, 0);
  if ((*(_BYTE *)(v11 + 16) & 1) != 0
    || (v13 = *(float32x2_t *)v11,
        v12 = *(float32x2_t *)(v11 + 8),
        v14 = (float32x2_t *)(v3 + direct field offset for WorldEdge.p2),
        swift_beginAccess(v3 + direct field offset for WorldEdge.p2, v85, 0, 0),
        (v14[2].i8[0] & 1) != 0))
  {
LABEL_48:

    goto LABEL_49;
  }
  v75 = v13;
  v76 = v12;
  v77 = v4;
  v73 = *v14;
  v74 = v14[1];
  swift_retain();
  sub_100116D58(0, 4, v0);
  v16 = v15;
  swift_release();
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain(v16);
    v18 = sub_10005F120(0, 1, 1, _swiftEmptyArrayStorage);
    for (i = 0; i != v17; ++i)
    {
      v79 = *(_OWORD *)(v16 + 16 * i + 32);
      v20 = *(void **)(v16 + 16 * i + 40);
      v21 = v18[2];
      v22 = v18[3];
      v23 = (id)v79;
      v24 = v20;
      if (v21 >= v22 >> 1)
        v18 = sub_10005F120((_QWORD *)(v22 > 1), v21 + 1, 1, v18);
      v18[2] = v21 + 1;
      *(_OWORD *)&v18[2 * v21 + 4] = v79;
    }
    swift_bridgeObjectRelease(v16);
  }
  else
  {
    v18 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v16);
  v25 = v18[2];
  v26 = (float *)_swiftEmptyArrayStorage;
  if (v25)
  {
    v27 = v18 + 4;
    countAndFlagsBits = _swiftEmptyArrayStorage;
    do
    {
      if (*v27)
      {
        v80 = *(_OWORD *)v27;
        v32 = (void *)v27[1];
        v33 = (id)*v27;
        v34 = v32;
        v84._countAndFlagsBits = (uint64_t)countAndFlagsBits;
        if ((swift_isUniquelyReferenced_nonNull_native(countAndFlagsBits) & 1) == 0)
        {
          sub_1000A57C4(0, countAndFlagsBits[2] + 1, 1);
          countAndFlagsBits = (_QWORD *)v84._countAndFlagsBits;
        }
        v30 = countAndFlagsBits[2];
        v29 = countAndFlagsBits[3];
        v31 = v80;
        if (v30 >= v29 >> 1)
        {
          sub_1000A57C4((_QWORD *)(v29 > 1), v30 + 1, 1);
          v31 = v80;
          countAndFlagsBits = (_QWORD *)v84._countAndFlagsBits;
        }
        countAndFlagsBits[2] = v30 + 1;
        *(_OWORD *)&countAndFlagsBits[2 * v30 + 4] = v31;
      }
      v27 += 2;
      --v25;
    }
    while (v25);
  }
  else
  {
    countAndFlagsBits = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v18);
  if (qword_10047AA18 != -1)
    swift_once(&qword_10047AA18, sub_1000E1018);
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease(0xE000000000000000);
  v84._countAndFlagsBits = 0xD000000000000017;
  v84._object = (void *)0x80000001003E00A0;
  v83[0] = countAndFlagsBits[2];
  v35._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v35._object;
  String.append(_:)(v35);
  swift_bridgeObjectRelease(object);
  v37._countAndFlagsBits = 0xD000000000000017;
  v37._object = (void *)0x80000001003E00A0;
  Log.debug(_:isPrivate:)(v37, 0);
  swift_bridgeObjectRelease(0x80000001003E00A0);
  v78 = v83[0];
  if (v83[0])
  {
    *(float32x2_t *)v38.f32 = vsub_f32(v73, v75);
    v39 = vmul_f32(*(float32x2_t *)v38.f32, *(float32x2_t *)v38.f32);
    *(float32x2_t *)&v38.u32[2] = vsub_f32(v74, v76);
    v40 = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32((int32x4_t)vmulq_f32(v38, v38), 2), vadd_f32(v39, (float32x2_t)vdup_lane_s32((int32x2_t)v39, 1))).u32[0];
    v41 = vrsqrte_f32((float32x2_t)v40);
    v42 = vmul_f32(v41, vrsqrts_f32((float32x2_t)v40, vmul_f32(v41, v41)));
    v81 = vmulq_n_f32(v38, vmul_f32(v42, vrsqrts_f32((float32x2_t)v40, vmul_f32(v42, v42))).f32[0]);
    v84._countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
    sub_1000A567C(0, v83[0], 0);
    v26 = (float *)_swiftEmptyArrayStorage;
    v43 = countAndFlagsBits + 4;
    v44 = v83[0];
    do
    {
      v46 = *v43;
      v43 += 2;
      v45 = v46;
      v47 = 1.0;
      if (v46)
      {
        v48 = v45 + direct field offset for WorldEdge.p2;
        swift_beginAccess(v45 + direct field offset for WorldEdge.p2, v83, 0, 0);
        if ((*(_BYTE *)(v48 + 16) & 1) == 0)
        {
          v49 = *(float32x2_t *)v48;
          v50 = *(_QWORD *)(v48 + 8);
          v51 = (float32x2_t *)(v45 + direct field offset for WorldEdge.p1);
          v52 = (float32x4_t)swift_beginAccess(v45 + direct field offset for WorldEdge.p1, v82, 0, 0);
          if ((v51[2].i8[0] & 1) == 0)
          {
            v53 = (const double *)&v51[1];
            v54 = (float32x4_t)vld1q_dup_f64(v53);
            *(float32x2_t *)v52.f32 = vsub_f32(v49, *v51);
            v52.i32[2] = vsubq_f32((float32x4_t)vdupq_n_s64(v50), v54).i32[2];
            v55 = v52;
            v55.i32[3] = 0;
            v56 = (int32x4_t)vmulq_f32(v55, v55);
            v56.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v56, 2), vadd_f32(*(float32x2_t *)v56.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v56.i8, 1))).u32[0];
            v57 = vrsqrte_f32((float32x2_t)v56.u32[0]);
            v58 = vmul_f32(v57, vrsqrts_f32((float32x2_t)v56.u32[0], vmul_f32(v57, v57)));
            v59 = vmulq_f32(v81, vmulq_n_f32(v52, vmul_f32(v58, vrsqrts_f32((float32x2_t)v56.u32[0], vmul_f32(v58, v58))).f32[0]));
            v47 = 1.0 - fabsf(v59.f32[2] + vaddv_f32(*(float32x2_t *)v59.f32));
          }
        }
      }
      v84._countAndFlagsBits = (uint64_t)v26;
      v61 = *((_QWORD *)v26 + 2);
      v60 = *((_QWORD *)v26 + 3);
      v62 = v61 + 1;
      if (v61 >= v60 >> 1)
      {
        sub_1000A567C((char *)(v60 > 1), v61 + 1, 1);
        v26 = (float *)v84._countAndFlagsBits;
      }
      *((_QWORD *)v26 + 2) = v62;
      v26[v61 + 8] = v47;
      --v44;
    }
    while (v44);
  }
  else
  {
    v62 = _swiftEmptyArrayStorage[2];
    if (!v62)
    {
      v65 = 0.0;
      v63 = v77;
      goto LABEL_46;
    }
  }
  v63 = v77;
  if (v62 >= 2)
  {
    v66 = 0;
    v64 = v62 & 0xFFFFFFFFFFFFFFFELL;
    v65 = 0.0;
    do
    {
      v65 = (float)(v65 + v26[v66 + 8]) + v26[v66 + 9];
      v66 += 2;
    }
    while (v64 != v66);
    goto LABEL_45;
  }
  v64 = 0;
  v65 = 0.0;
  do
  {
    v67 = v26[v64++ + 8];
    v65 = v65 + v67;
LABEL_45:
    ;
  }
  while (v62 != v64);
LABEL_46:
  swift_bridgeObjectRelease(v26);
  v84._countAndFlagsBits = 0;
  v84._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(24);
  v68._object = (void *)0x80000001003E00C0;
  v68._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v68);
  Float.write<A>(to:)(&v84, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v65 / (float)v78);
  v69 = v84._object;
  Log.debug(_:isPrivate:)(v84, 0);
  swift_bridgeObjectRelease(v69);
  v70 = (_DWORD *)(v3 + direct field offset for WorldEdge.typeConfidence);
  swift_beginAccess(v3 + direct field offset for WorldEdge.typeConfidence, &v84, 1, 0);
  *v70 = 1065353216;
  swift_release();
  if (v78 < v63)
  {
    v71._object = (void *)0x80000001003E00E0;
    v71._countAndFlagsBits = 0xD000000000000016;
    Log.debug(_:isPrivate:)(v71, 0);
    goto LABEL_48;
  }
  return v3;
}

void sub_1001117DC(char *a1, char *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  id v9;
  unsigned int v10;
  double *v11;
  double v12;
  double *v13;
  void *v14;
  char *v15;
  id v16;
  double *v17;
  double v18;
  double *v19;
  void *v20;
  char *v21;
  id v22;
  char *v23;
  id v24;
  unsigned int v25;
  void *v26;
  id v27;
  __n128 **v28;
  unint64_t v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  char *v34;
  int v35;
  id v36;
  char *v37;
  int v38;
  uint64_t v39;
  Swift::String v40;
  void *object;
  uint64_t v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  __n128 v47;
  __n128 v48;
  double v49;
  double v50;
  __n128 v51;
  double v52;
  __n128 v53;
  char v54[24];
  char v55[24];
  char v56[24];
  char v57[24];
  char v58[24];
  int v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  char v63[24];
  char v64[32];

  v4 = v3;
  v8 = (void *)objc_opt_self(NSUserDefaults);
  v9 = objc_msgSend(v8, "standardUserDefaults");
  v10 = objc_msgSend(v9, "showSnappableEdges");

  if (v10)
  {
    if (a1)
    {
      v11 = (double *)&a1[direct field offset for WorldEdge.p1];
      swift_beginAccess(&a1[direct field offset for WorldEdge.p1], v55, 0, 0);
      if (((_BYTE)v11[2] & 1) != 0)
      {
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      v12 = *v11;
      v13 = (double *)&a1[direct field offset for WorldEdge.p2];
      swift_beginAccess(&a1[direct field offset for WorldEdge.p2], v54, 0, 0);
      if (((_BYTE)v13[2] & 1) != 0)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      v52 = v12;
      v49 = *v13;
      v14 = (void *)objc_opt_self(UIColor);
      v15 = a1;
      v16 = objc_msgSend(v14, "magentaColor");
      sub_100115860((uint64_t)v16, v52, v49);

    }
    if (a2)
    {
      v17 = (double *)&a2[direct field offset for WorldEdge.p1];
      swift_beginAccess(&a2[direct field offset for WorldEdge.p1], v57, 0, 0);
      if (((_BYTE)v17[2] & 1) != 0)
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      v18 = *v17;
      v19 = (double *)&a2[direct field offset for WorldEdge.p2];
      swift_beginAccess(&a2[direct field offset for WorldEdge.p2], v56, 0, 0);
      if (((_BYTE)v19[2] & 1) != 0)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      v50 = *v19;
      v20 = (void *)objc_opt_self(UIColor);
      v21 = a2;
      v22 = objc_msgSend(v20, "blueColor");
      sub_100115860((uint64_t)v22, v18, v50);

    }
  }
  if (!a3)
    return;
  v23 = a3;
  v24 = objc_msgSend(v8, "standardUserDefaults");
  v25 = objc_msgSend(v24, "showFinalPlanes");

  if (v25)
  {
    v26 = *(void **)(v4 + 256);
    if (v26)
    {
      v27 = v26;
      SCNNode.removeAllChildren()();

    }
    v28 = (__n128 **)&v23[direct field offset for WorldEdge.backingPlanes];
    swift_beginAccess(&v23[direct field offset for WorldEdge.backingPlanes], v64, 0, 0);
    v29 = (*v28)[1].n128_u64[0];
    if (v29)
    {
      v30.n128_f64[0] = static simd_float4x4.make(position:normalizedForward:)((*v28)[2 * v29], (*v28)[2 * v29 + 1]);
      v51 = v31;
      v53 = v30;
      v47 = v33;
      v48 = v32;
      v34 = &v23[direct field offset for WorldEdge.type];
      swift_beginAccess(&v23[direct field offset for WorldEdge.type], v63, 0, 0);
      v35 = *v34;
      if (v35 != 4)
      {
        v36 = sub_1001198A0(v35);
        v61 = 0x203A726F727265;
        v62 = 0xE700000000000000;
        if (a1)
        {
          v37 = &a1[direct field offset for WorldEdge.adVariance];
          swift_beginAccess(&a1[direct field offset for WorldEdge.adVariance], v58, 0, 0);
          v38 = *(_DWORD *)v37;
        }
        else
        {
          v38 = 0;
        }
        v59 = v38;
        v60 = a1 == 0;
        v39 = sub_10000EDC8(&qword_10047F0A8);
        v40._countAndFlagsBits = String.init<A>(describing:)(&v59, v39);
        object = v40._object;
        String.append(_:)(v40);
        swift_bridgeObjectRelease(object);
        v42 = v62;
        sub_1001146B4(v36, 1, v61, v62, 3, v53, v51, v48, v47);
        swift_bridgeObjectRelease(v42);
        if ((*v28)[1].n128_u64[0] == 2)
        {
          v43.n128_f64[0] = static simd_float4x4.make(position:normalizedForward:)((*v28)[2], (*v28)[3]);
          sub_1001146B4(v36, 1, 0, 0, 3, v43, v44, v45, v46);
        }

        goto LABEL_23;
      }
LABEL_30:
      __break(1u);
      return;
    }
    __break(1u);
    goto LABEL_26;
  }
  v36 = v23;
LABEL_23:

}

void sub_100111BCC(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, __n128 a5@<Q2>, __n128 a6@<Q3>, __n128 a7@<Q4>, __n128 a8@<Q5>)
{
  uint64_t v8;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  float v18;
  float v19;
  double *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  float32x2_t v25;
  float32x2_t v26;
  float32x2_t v27;
  unsigned __int32 v28;
  float32x2_t v29;
  float32x2_t v30;
  float32x2_t v31;
  float32x2_t v32;
  float32x2_t v33;
  float32x2_t v34;
  float32x2_t v35;
  float32x2_t v36;
  float v37;
  float v38;
  float v39;
  float32x2_t v40;
  float v41;
  BOOL v42;
  float v43;
  float v44;
  BOOL v45;
  double v47;
  uint64_t v48;
  char v49;
  double v50;
  char v56;
  double v57;
  double v58;
  double v59;
  double v60;
  float32x2_t v61;
  float32x2_t v62;
  double v63[6];

  v10 = *(_QWORD *)(v8 + 152);
  v11 = *(double *)(v10 + 16);
  if (v11 == 0.0)
  {
    v48 = 0;
    v12 = 0.0;
    v50 = 0.0;
    v13 = 0.0;
    v47 = 0.0;
    v49 = 1;
  }
  else
  {
    v61 = COERCE_FLOAT32X2_T(CGPoint.floats.getter(a3, a4));
    swift_bridgeObjectRetain(v10);
    v12 = 0.0;
    v59 = 0.0;
    v60 = 0.0;
    v13 = 0.0;
    v14 = 0.0;
    v15 = 0;
    v16 = -*(_QWORD *)&v11;
    v17 = 1;
    v18 = INFINITY;
LABEL_3:
    v56 = v17;
    v57 = v14;
    v58 = v12;
    v19 = v18;
    v20 = (double *)(v10 + 64 + 40 * v15++);
    do
    {
      v22 = *(v20 - 4);
      v21 = *(v20 - 3);
      v24 = *(v20 - 2);
      v23 = *(v20 - 1);
      v14 = *v20;
      v62 = COERCE_FLOAT32X2_T(CGPoint.floats.getter(v22, v21));
      v25 = COERCE_FLOAT32X2_T(CGPoint.floats.getter(v24, v23));
      if (qword_10047AB20 != -1)
        swift_once(&qword_10047AB20, sub_10010E7FC);
      v26 = vsub_f32(v25, v62);
      v27 = vmul_f32(v26, v26);
      v28 = vadd_f32(v27, (float32x2_t)vdup_lane_s32((int32x2_t)v27, 1)).u32[0];
      v29 = vrsqrte_f32((float32x2_t)v28);
      v30 = vmul_f32(v29, vrsqrts_f32((float32x2_t)v28, vmul_f32(v29, v29)));
      v31 = vmul_n_f32(v26, vmul_f32(v30, vrsqrts_f32((float32x2_t)v28, vmul_f32(v30, v30))).f32[0]);
      v32 = vmul_f32(v31, v31);
      v32.i32[0] = vadd_f32(v32, (float32x2_t)vdup_lane_s32((int32x2_t)v32, 1)).u32[0];
      v33 = vrsqrte_f32((float32x2_t)v32.u32[0]);
      v34 = vmul_f32(v33, vrsqrts_f32((float32x2_t)v32.u32[0], vmul_f32(v33, v33)));
      v35 = vmul_n_f32(v31, vmul_f32(v34, vrsqrts_f32((float32x2_t)v32.u32[0], vmul_f32(v34, v34))).f32[0]);
      v36 = vsub_f32(v61, v62);
      v34.f32[0] = vmul_f32(v36, v35).f32[0] + vmuls_lane_f32(v61.f32[1] - v62.f32[1], v35, 1);
      v37 = v34.f32[0] * v35.f32[0];
      v35.f32[0] = vmuls_lane_f32(v34.f32[0], v35, 1);
      v38 = v62.f32[0] + v37;
      v39 = v62.f32[1] + v35.f32[0];
      v18 = (float)((float)(v61.f32[0] - v38) * (float)(v61.f32[0] - v38))
          + (float)((float)(v61.f32[1] - v39) * (float)(v61.f32[1] - v39));
      v42 = (float)(vmul_f32(v36, v36).f32[0]
                  + (float)((float)(v61.f32[1] - v62.f32[1]) * (float)(v61.f32[1] - v62.f32[1]))) < *(float *)&dword_1004AF690;
      v40 = vsub_f32(v61, v25);
      v41 = vaddv_f32(vmul_f32(v40, v40));
      v42 = v42 || v41 < *(float *)&dword_1004AF690;
      if (v42)
      {
        if (v18 < v19)
          goto LABEL_21;
      }
      else if (v18 < *(float *)&dword_1004AF690)
      {
        v43 = (float)((float)(v38 - v62.f32[0]) * v26.f32[0]) + vmuls_lane_f32(v39 - v62.f32[1], v26, 1);
        v44 = v27.f32[0] + vmuls_lane_f32(v26.f32[1], v26, 1);
        v45 = v43 < 0.0 || v43 > v44;
        if (!v45 && v18 < v19)
        {
LABEL_21:
          v17 = 0;
          v12 = v22;
          v59 = v24;
          v60 = v21;
          v13 = v23;
          if (v16 + v15)
            goto LABEL_3;
          swift_bridgeObjectRelease(v10);
          v47 = v14;
          goto LABEL_27;
        }
      }
      v20 += 5;
      ++v15;
    }
    while (v16 + v15 != 1);
    swift_bridgeObjectRelease(v10);
    if ((v56 & 1) != 0)
    {
      v48 = 0;
      v49 = 1;
      v47 = v57;
      v12 = v58;
      v50 = v59;
      v11 = v60;
      goto LABEL_28;
    }
    v47 = v57;
    v12 = v58;
    v14 = v57;
LABEL_27:
    v50 = v59;
    v11 = v60;
    v63[0] = v12;
    v63[1] = v60;
    v63[2] = v59;
    v63[3] = v13;
    v63[4] = v14;
    sub_100111ED8(v63, a1, a5, a6, a7, a8);
    v49 = 0;
  }
LABEL_28:
  *(_QWORD *)a2 = v48;
  *(double *)(a2 + 8) = v12;
  *(double *)(a2 + 16) = v11;
  *(double *)(a2 + 24) = v50;
  *(double *)(a2 + 32) = v13;
  *(double *)(a2 + 40) = v47;
  *(_BYTE *)(a2 + 48) = v49;
}

void sub_100111ED8(double *a1, void *a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  uint64_t v6;
  uint64_t v7;
  double v10;
  double v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  CGPoint v19;
  double v20;
  __n128 v21;
  __n128 v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  CGPoint v31;
  double v32;
  __n128 v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  float32x2_t v44;
  uint64_t v45;
  float32x2_t v46;
  uint64_t v47;
  float32x4_t v48;
  char v49;
  float32x4_t v50;
  float32x4_t v51;
  float v52;
  float v53;
  float v54;
  float32x4_t v55;
  int32x4_t v56;
  float32x2_t v57;
  float32x2_t v58;
  int8x16_t v59;
  float v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  uint64_t v64;
  float32x4_t v65;
  __n128 v66;
  float32x2_t v67;
  float32x2_t v68;
  __n128 v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __n128 v73;
  id v74;
  char *v75;
  void (*v76)(double *__return_ptr, __n128);
  __n128 v77;
  void (*v78)(double *__return_ptr, __n128);
  __n128 v79;
  uint64_t v80;
  float32x2_t v81;
  void (*v82)(_QWORD *__return_ptr, __n128);
  __n128 v83;
  void (*v84)(_QWORD *__return_ptr, __n128);
  __n128 v85;
  uint64_t v86;
  float32x2_t v87;
  unint64_t v88;
  const char *v89;
  unint64_t v90;
  Swift::String v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  Swift::String v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __n128 v110;
  __n128 v111;
  __n128 v112;
  __n128 v113;
  __n128 v114;
  __n128 v115;
  __n128 v116;
  __n128 v117;
  float v118;
  __n128 v119;
  __n128 v120;
  __n128 v121;
  __n128 v122;
  float32x4_t v123;
  __n128 v124;
  float32x4_t v125;
  __int128 v126;
  __int128 v127;
  __n128 v128;
  float32x4_t v129;
  __n128 v130;
  __n128 v131;
  float32x4_t v132;
  __int128 v133;
  __int128 v134;
  __n128 v135;
  __n128 v136;
  __n128 v137;
  __n128 v138;
  char v143[24];
  char v144[24];
  char v145[24];
  _QWORD v146[64];
  __n128 v147[32];
  double __src[64];
  __n128 __dst[32];
  _BYTE _[512];
  char v151[24];
  char v152[24];
  char v153[24];
  char v154[24];
  _OWORD v155[2];
  uint64_t v156;
  uint64_t v157;
  _OWORD v158[2];
  uint64_t v159;
  uint64_t v160;
  CGPoint v161;
  CGPoint v162;

  v7 = v6;
  v10 = *a1;
  v11 = a1[1];
  v12 = (uint64_t *)MeasureCore.shared.unsafeMutableAddressor(a1);
  v13 = *v12;
  swift_beginAccess(*v12 + 112, v154, 0, 0);
  v14 = *(_QWORD *)(v13 + 112);
  if (!v14)
  {
    __break(1u);
    goto LABEL_34;
  }
  swift_beginAccess(v14 + 208, v153, 0, 0);
  if (!*(_QWORD *)(v14 + 208))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  swift_retain();
  ADProcessor.transformer.getter(v15);
  v16 = swift_release();
  Transformer.viewToCameraNormalized.getter(v155, v16);
  v126 = v155[1];
  v133 = v155[0];
  v17 = v156;
  v18 = v157;
  swift_release();
  *(_OWORD *)_ = v133;
  *(_OWORD *)&_[16] = v126;
  *(_QWORD *)&_[32] = v17;
  *(_QWORD *)&_[40] = v18;
  v161.x = v10;
  v161.y = v11;
  v19 = CGPointApplyAffineTransform(v161, (CGAffineTransform *)_);
  v20 = CGPoint.floats.getter(v19.x, v19.y);
  v21.n128_f64[0] = ARFrame.getHitRay(cameraPoint:)(v20);
  v117 = v22;
  v122 = v21;
  v23 = a1[2];
  v24 = a1[3];
  v25 = *v12;
  swift_beginAccess(*v12 + 112, v152, 0, 0);
  v26 = *(_QWORD *)(v25 + 112);
  if (!v26)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  swift_beginAccess(v26 + 208, v151, 0, 0);
  if (!*(_QWORD *)(v26 + 208))
  {
LABEL_36:
    __break(1u);
    return;
  }
  swift_retain();
  ADProcessor.transformer.getter(v27);
  v28 = swift_release();
  Transformer.viewToCameraNormalized.getter(v158, v28);
  v127 = v158[1];
  v134 = v158[0];
  v29 = v159;
  v30 = v160;
  swift_release();
  *(_OWORD *)_ = v134;
  *(_OWORD *)&_[16] = v127;
  *(_QWORD *)&_[32] = v29;
  *(_QWORD *)&_[40] = v30;
  v162.x = v23;
  v162.y = v24;
  v31 = CGPointApplyAffineTransform(v162, (CGAffineTransform *)_);
  v32 = CGPoint.floats.getter(v31.x, v31.y);
  v33.n128_f64[0] = ARFrame.getHitRay(cameraPoint:)(v32);
  v128 = v33;
  v113 = v34;
  sub_100112E14(a1, a2, (uint64_t)_, a3, a4, a5, a6);
  if ((_[32] & 1) != 0)
    goto LABEL_19;
  v35 = *(_QWORD *)_;
  v36 = *(_QWORD *)&_[8];
  v37 = *(_QWORD *)&_[48];
  v108 = *(_QWORD *)&_[64];
  v109 = *(_QWORD *)&_[56];
  v107 = *(_QWORD *)&_[72];
  v106 = _[80];
  v38 = *(_QWORD *)&_[84];
  v39 = *(_DWORD *)&_[92];
  v40 = *(_DWORD *)&_[96];
  v110 = *(__n128 *)_;
  v104 = *(_QWORD *)&_[24];
  v105 = *(_QWORD *)&_[16];
  v135 = *(__n128 *)&_[16];
  type metadata accessor for PlaneUtil(0);
  v41 = static PlaneUtil.getIntersection(ray:plane:)(v122, v117, v110, v135);
  if ((v43 & 1) != 0
    || (v44 = (float32x2_t)v41,
        v45 = v42,
        v46 = (float32x2_t)static PlaneUtil.getIntersection(ray:plane:)(v128, v113, v110, v135),
        (v49 & 1) != 0))
  {
LABEL_19:
    if (qword_10047AA18 != -1)
      swift_once(&qword_10047AA18, sub_1000E1018);
    v91._countAndFlagsBits = 0xD000000000000047;
    v91._object = (void *)0x80000001003E0100;
    Log.default(_:isPrivate:)(v91, 0);
  }
  else
  {
    *(float32x2_t *)v50.f32 = v44;
    v50.i64[1] = v45;
    *(float32x2_t *)v51.f32 = v46;
    v51.i64[1] = v47;
    v52 = v44.f32[1];
    v53 = v46.f32[1];
    *(float32x2_t *)v48.f32 = vsub_f32(v44, v46);
    v54 = *(float *)&v47;
    v48.f32[2] = *(float *)&v45 - *(float *)&v47;
    v55 = v48;
    v55.i32[3] = 0;
    v56 = (int32x4_t)vmulq_f32(v55, v55);
    v56.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v56, 2), vadd_f32(*(float32x2_t *)v56.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v56.i8, 1))).u32[0];
    v57 = vrsqrte_f32((float32x2_t)v56.u32[0]);
    v58 = vmul_f32(v57, vrsqrts_f32((float32x2_t)v56.u32[0], vmul_f32(v57, v57)));
    v59 = (int8x16_t)vmulq_n_f32(v48, vmul_f32(v58, vrsqrts_f32((float32x2_t)v56.u32[0], vmul_f32(v58, v58))).f32[0]);
    v56.i32[0] = v59.i32[1];
    v58.i32[0] = vextq_s8(v59, v59, 8uLL).u32[0];
    v58.i32[1] = v59.i32[0];
    *(float32x2_t *)v59.i8 = vmul_f32(v58, 0);
    v103 = v39;
    if (fabsf(*(float *)v59.i32 + (float)(*(float *)v56.i32 + *(float *)&v59.i32[1])) < 0.20791)
    {
      v60 = (float)(v44.f32[1] + v46.f32[1]) * 0.5;
      v118 = v60;
      if (qword_10047AA18 != -1)
      {
        v125 = v51;
        v132 = v50;
        swift_once(&qword_10047AA18, sub_1000E1018);
        v60 = v118;
        v51 = v125;
        v50 = v132;
      }
      v50.f32[1] = v60;
      v51.f32[1] = v60;
      v123 = v51;
      v129 = v50;
      *(_QWORD *)_ = 0;
      *(_QWORD *)&_[8] = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      v61._countAndFlagsBits = 0xD00000000000003BLL;
      v61._object = (void *)0x80000001003E0230;
      String.append(_:)(v61);
      Float.write<A>(to:)(_, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v118 - v118);
      v62._countAndFlagsBits = 0x646E6520646E6120;
      v62._object = (void *)0xED00002079622059;
      String.append(_:)(v62);
      Float.write<A>(to:)(_, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v118 - v118);
      v63._countAndFlagsBits = 0x6E6169726156202ELL;
      v63._object = (void *)0xEF20736177206563;
      String.append(_:)(v63);
      Float.write<A>(to:)(_, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v118 - v118);
      v64 = *(_QWORD *)&_[8];
      Log.default(_:isPrivate:)(*(Swift::String *)_, 0);
      v46 = (float32x2_t)swift_bridgeObjectRelease(v64);
      v52 = v118;
      v51 = v123;
      v50 = v129;
      v53 = v118;
    }
    v124 = (__n128)v51;
    v130 = (__n128)v50;
    v65 = vsubq_f32(v51, v50);
    v65.f32[1] = v53 - v52;
    v65.f32[2] = v54 - *(float *)&v45;
    v66 = (__n128)vmulq_f32(v65, v65);
    v66.n128_u32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32((int32x4_t)v66, 2), vadd_f32((float32x2_t)v66.n128_u64[0], (float32x2_t)vdup_lane_s32((int32x2_t)v66.n128_u64[0], 1))).u32[0];
    v67 = vrsqrte_f32((float32x2_t)v66.n128_u32[0]);
    v68 = vmul_f32(v67, vrsqrts_f32((float32x2_t)v66.n128_u32[0], vmul_f32(v67, v67)));
    v69 = (__n128)vmulq_n_f32(v65, vmul_f32(v68, vrsqrts_f32((float32x2_t)v66.n128_u32[0], vmul_f32(v68, v68))).f32[0]);
    v66.n128_u32[3] = 0;
    v66.n128_f32[0] = 0.5 * vaddq_f32(v50, v51).f32[0];
    v66.n128_f32[1] = (float)(v52 + v53) * 0.5;
    v66.n128_f32[2] = (float)(*(float *)&v45 + v54) * 0.5;
    v70.n128_f64[0] = createTransform(forward:normal:position:)(*(_QWORD *)&v46, v69, v135, v66);
    v136 = v70;
    v114 = v72;
    v119 = v71;
    v111 = v73;
    v74 = objc_allocWithZone((Class)type metadata accessor for WorldEdge(0));
    v75 = (char *)WorldEdge.init(transform:p1:p2:type:adVariance:)(v130.n128_u64[0], v130.n128_u64[1], 0, v124.n128_u64[0], v124.n128_u64[1], 0, 4, v136, v119, v114, v111, 0.0);
    type metadata accessor for MeasureCamera(0);
    v76 = *(void (**)(double *__return_ptr, __n128))(**(_QWORD **)(v7 + 80) + 144);
    v77 = swift_retain();
    v76(__src, v77);
    swift_release();
    memcpy(__dst, __src, sizeof(__dst));
    sub_100012C00((uint64_t)__dst);
    v137 = __dst[11];
    v115 = __dst[13];
    v120 = __dst[12];
    v112 = __dst[14];
    v78 = *(void (**)(double *__return_ptr, __n128))(**(_QWORD **)(v7 + 80) + 144);
    v79 = swift_retain();
    v78(__src, v79);
    swift_release();
    memcpy(_, __src, sizeof(_));
    v80 = sub_100012C00((uint64_t)_);
    v137.n128_u64[0] = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v80, v130, v137, v120, v115, v112, *(double *)&_[32]);
    v81 = vsub_f32((float32x2_t)v137.n128_u64[0], COERCE_FLOAT32X2_T(CGPoint.floats.getter(v10, v11)));
    if (vaddv_f32(vmul_f32(v81, v81)) > 25.0)
      goto LABEL_14;
    v82 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v7 + 80) + 144);
    v83 = swift_retain();
    v82(v146, v83);
    swift_release();
    memcpy(v147, v146, sizeof(v147));
    sub_100012C00((uint64_t)v147);
    v131 = v147[12];
    v138 = v147[11];
    v116 = v147[14];
    v121 = v147[13];
    v84 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v7 + 80) + 144);
    v85 = swift_retain();
    v84(v146, v85);
    swift_release();
    memcpy(__src, v146, sizeof(__src));
    v86 = sub_100012C00((uint64_t)__src);
    v138.n128_u64[0] = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v86, v124, v138, v131, v121, v116, __src[4]);
    v87 = vsub_f32((float32x2_t)v138.n128_u64[0], COERCE_FLOAT32X2_T(CGPoint.floats.getter(v23, v24)));
    if (vaddv_f32(vmul_f32(v87, v87)) > 25.0)
    {
LABEL_14:
      if (qword_10047AA18 != -1)
        swift_once(&qword_10047AA18, sub_1000E1018);
      v88 = 0xD000000000000040;
      v89 = "Dropped edge. Reason: Screen space projection error is too high.";
LABEL_17:
      v90 = (unint64_t)(v89 - 32) | 0x8000000000000000;
LABEL_18:
      Log.default(_:isPrivate:)(*(Swift::String *)&v88, 0);

      return;
    }
    v92 = sub_10000EDC8(&qword_100481270);
    v93 = swift_allocObject(v92, 128, 15);
    *(_OWORD *)(v93 + 16) = xmmword_1003B0F60;
    *(_QWORD *)(v93 + 32) = v35;
    *(_QWORD *)(v93 + 40) = v36;
    *(_QWORD *)(v93 + 48) = v105;
    *(_QWORD *)(v93 + 56) = v104;
    *(_BYTE *)(v93 + 64) = 0;
    *(_QWORD *)(v93 + 80) = v37;
    *(_QWORD *)(v93 + 88) = v109;
    *(_QWORD *)(v93 + 96) = v108;
    *(_QWORD *)(v93 + 104) = v107;
    *(_BYTE *)(v93 + 112) = v106;
    v94 = sub_100113D14(v93, (uint64_t)v75, a3, a4, a5, a6);
    v96 = v95;
    swift_setDeallocating(v93);
    swift_deallocClassInstance(v93, 32, 7);
    if (v94 == 2)
    {
      swift_bridgeObjectRelease(v96);
      if (qword_10047AA18 != -1)
        swift_once(&qword_10047AA18, sub_1000E1018);
      v88 = 0xD000000000000029;
      v89 = "Dropped edge. Reason: Edge type is planar";
      goto LABEL_17;
    }
    if (v94 == 4)
    {
      swift_bridgeObjectRelease(v96);
      if (qword_10047AA18 != -1)
        swift_once(&qword_10047AA18, sub_1000E1018);
      v90 = 0x80000001003E0150;
      v88 = 0xD000000000000026;
      goto LABEL_18;
    }
    v97 = &v75[direct field offset for WorldEdge.type];
    swift_beginAccess(&v75[direct field offset for WorldEdge.type], v146, 1, 0);
    *v97 = v94;
    v98 = &v75[direct field offset for WorldEdge.backingPlanes];
    swift_beginAccess(&v75[direct field offset for WorldEdge.backingPlanes], v145, 1, 0);
    v99 = *(_QWORD *)v98;
    *(_QWORD *)v98 = v96;
    swift_bridgeObjectRelease(v99);
    v100 = &v75[direct field offset for WorldEdge.edgePlanesMetrics];
    swift_beginAccess(&v75[direct field offset for WorldEdge.edgePlanesMetrics], v144, 1, 0);
    *(_QWORD *)v100 = v38;
    *((_DWORD *)v100 + 2) = v103;
    v101 = &v75[direct field offset for WorldEdge.adVariance];
    swift_beginAccess(&v75[direct field offset for WorldEdge.adVariance], v143, 1, 0);
    *(_DWORD *)v101 = v40;
    if (qword_10047AA18 != -1)
      swift_once(&qword_10047AA18, sub_1000E1018);
    v102._countAndFlagsBits = 0xD00000000000002ALL;
    v102._object = (void *)0x80000001003E0180;
    Log.default(_:isPrivate:)(v102, 0);
  }
}

uint64_t getEnumTagSinglePayload for CandidateEdge(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CandidateEdge(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CandidateEdge()
{
  return &type metadata for CandidateEdge;
}

uint64_t sub_100112A04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10047AB10 != -1)
    swift_once(&qword_10047AB10, sub_10010E6E0);
  v2 = type metadata accessor for UUID(0);
  v3 = sub_1000362E8(v2, (uint64_t)qword_1004AF670);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100112A74()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t sub_100112A7C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10000EDC8(&qword_10047E470);
  v1 = sub_100043310(&qword_10047E478, &qword_10047E470, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t sub_100112AE8(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  v3 = swift_allocObject(&unk_100446A38, 25, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_BYTE *)(v3 + 24) = a1;
  v4 = sub_10000EDC8((uint64_t *)&unk_10047E420);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = swift_retain();
  return Future.init(_:)(sub_100112B88, v3, v5);
}

uint64_t sub_100112B64()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100112B88(void (*a1)(_BYTE *), uint64_t a2)
{
  uint64_t v2;

  return sub_10010E728(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

void sub_100112B94(uint64_t a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  void (*v11)(_QWORD *__return_ptr, __n128);
  __n128 v12;
  double v13;
  void *v14;
  float32x2_t v15;
  float32x2_t v16;
  float32x2_t v17;
  float32x2_t v18;
  float32x2_t v19;
  float32x2_t v20;
  float32x2_t v21;
  float32x2_t v22;
  float32x2_t v23;
  float32x2_t v24;
  float32x2_t v25;
  float v26;
  float v27;
  float v28;
  float v29;
  float v30;
  float v31;
  double v32;
  double v33;
  double v34;
  int v35;
  char v36;
  float32x2_t v37;
  float32x2_t v38;
  float32x2_t v39;
  float32x2_t v40;
  _QWORD v41[4];
  _QWORD v42[5];
  char v43;

  sub_100012C58(a1, (uint64_t)v42, &qword_100484610);
  if ((v43 & 1) != 0)
    goto LABEL_11;
  v7 = *(double *)v42;
  v6 = *(double *)&v42[1];
  v9 = *(double *)&v42[2];
  v8 = *(double *)&v42[3];
  v10 = v42[4];
  v11 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v3 + 120) + 144);
  v12 = swift_retain();
  v11(v41, v12);
  swift_release();
  v13 = *(double *)v41;
  v14 = (void *)v41[1];

  if (v13 == 0.0)
  {
LABEL_12:
    v32 = 0.0;
    v33 = 0.0;
    v34 = 0.0;
    v10 = 0;
    v36 = 1;
    v35 = 2139095040;
    goto LABEL_13;
  }
  v15 = COERCE_FLOAT32X2_T((*(double (**)(void))((swift_isaMask & **(_QWORD **)&v13) + 0x200))());

  v40 = COERCE_FLOAT32X2_T(CGPoint.floats.getter(*a2, a2[1]));
  v38 = COERCE_FLOAT32X2_T(CGPoint.floats.getter(a2[2], a2[3]));
  v16 = vsub_f32(v40, v38);
  v17 = vmul_f32(v16, v16);
  v17.i32[0] = vadd_f32(v17, (float32x2_t)vdup_lane_s32((int32x2_t)v17, 1)).u32[0];
  v18 = vrsqrte_f32((float32x2_t)v17.u32[0]);
  v19 = vmul_f32(v18, vrsqrts_f32((float32x2_t)v17.u32[0], vmul_f32(v18, v18)));
  v20 = vmul_n_f32(v16, vmul_f32(v19, vrsqrts_f32((float32x2_t)v17.u32[0], vmul_f32(v19, v19))).f32[0]);
  v39 = COERCE_FLOAT32X2_T(CGPoint.floats.getter(v7, v6));
  v21 = COERCE_FLOAT32X2_T(CGPoint.floats.getter(v9, v8));
  v22 = vsub_f32(v39, v21);
  v23 = vmul_f32(v22, v22);
  v23.i32[0] = vadd_f32(v23, (float32x2_t)vdup_lane_s32((int32x2_t)v23, 1)).u32[0];
  v24 = vrsqrte_f32((float32x2_t)v23.u32[0]);
  v25 = vmul_f32(v24, vrsqrts_f32((float32x2_t)v23.u32[0], vmul_f32(v24, v24)));
  if (fabsf(vaddv_f32(vmul_f32(v20, vmul_n_f32(v22, vmul_f32(v25, vrsqrts_f32((float32x2_t)v23.u32[0], vmul_f32(v25, v25))).f32[0])))) > 0.3|| ((v37 = v21, lineIntersection(line1P1:line1P2:line2P1:line2P2:)((__n128)(unint64_t)v39, (__n128)(unint64_t)v21, (__n128)(unint64_t)v40, (__n128)(unint64_t)v38), v27 <= 0.0)|| v26 >= 1.0)&& ((sub_10011818C(v39, v40, v38), v29 = v28, sub_10011818C(v37, v40, v38), v30 >= v29) ? (v31 = v29) : (v31 = v30), v31 >= 64.0))
  {
LABEL_11:
    v13 = 0.0;
    goto LABEL_12;
  }
  v13 = v7;
  v32 = v6;
  v33 = v9;
  v34 = v8;
  sub_10011821C(v15, v39, v37, INFINITY);
  v36 = 0;
LABEL_13:
  *(double *)a3 = v13;
  *(double *)(a3 + 8) = v32;
  *(double *)(a3 + 16) = v33;
  *(double *)(a3 + 24) = v34;
  *(_QWORD *)(a3 + 32) = v10;
  *(_BYTE *)(a3 + 40) = v36;
  *(_DWORD *)(a3 + 44) = v35;
}

__n128 sub_100112E14@<Q0>(double *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>, __n128 a4@<Q0>, __n128 a5@<Q1>, __n128 a6@<Q2>, __n128 a7@<Q3>)
{
  float32x2_t v9;
  float32x2_t v10;
  float32x2_t v11;
  unsigned __int32 v12;
  float32x2_t v13;
  float32x2_t v14;
  float32x2_t v15;
  _QWORD *v16;
  int64_t v17;
  float32x2_t v18;
  uint64_t v19;
  float32x2_t *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  float32x2_t *v25;
  float32x2_t *v26;
  float32x2_t v27;
  unint64_t v28;
  int64_t v29;
  float32x2_t v30;
  unint64_t v31;
  float32x2_t v32;
  id v33;
  char *v34;
  int64_t v35;
  float32x2_t *v36;
  __n128 *v37;
  unint64_t v38;
  int8x16_t v39;
  unint64_t v40;
  unint64_t v41;
  float32x2_t *v42;
  uint64_t v43;
  float32x2_t *v44;
  float32x2_t v45;
  unint64_t v46;
  float32x2_t v47;
  unint64_t v48;
  float32x2_t v49;
  id v50;
  char *v51;
  int64_t v52;
  float32x2_t *v53;
  __n128 *v54;
  unint64_t v55;
  int8x16_t v56;
  unint64_t v57;
  unint64_t v58;
  float32x2_t *v59;
  _QWORD *v60;
  _QWORD *v61;
  void *v62;
  id v63;
  unsigned __int8 v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t inited;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  id v74;
  unsigned int v75;
  id v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  float32x4_t *v99;
  float32x4_t v100;
  BOOL v101;
  int8x16_t v102;
  int8x16_t v103;
  unint64_t v104;
  int8x16_t v105;
  float v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  float32x2_t *v110;
  uint64_t (*v111)(__n128);
  __n128 v112;
  void *v113;
  __n128 v114;
  __n128 v115;
  __n128 v116;
  __n128 v117;
  int8x16_t v118;
  unint64_t v119;
  unint64_t v120;
  float32x4_t v121;
  uint64_t v122;
  float32x4_t v123;
  float32x2_t v124;
  float32x2_t v125;
  float32x4_t v126;
  int8x16_t v127;
  int8x16_t v128;
  unint64_t v129;
  int8x16_t v130;
  uint64_t v131;
  float32x4_t *v132;
  float32x4_t v133;
  BOOL v134;
  unint64_t v135;
  int8x16_t v136;
  int v137;
  int v138;
  float v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  float32x2_t v145;
  uint64_t v146;
  float32x2_t *v147;
  unint64_t v148;
  uint64_t v149;
  float32x2_t *v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t (*v153)(__n128);
  __n128 v154;
  void *v155;
  __n128 v156;
  __n128 v157;
  __n128 v158;
  __n128 v159;
  int8x16_t v160;
  unint64_t v161;
  unint64_t v162;
  float32x4_t v163;
  uint64_t v164;
  float32x4_t v165;
  float32x2_t v166;
  float32x2_t v167;
  float32x4_t v168;
  unint64_t v169;
  int8x16_t v170;
  int v171;
  unsigned __int8 v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  float32x2_t v177;
  uint64_t v178;
  float32x2_t *v179;
  unsigned __int8 v180;
  __n128 result;
  uint64_t v182;
  __n128 v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  BOOL v187;
  uint64_t v188;
  int8x16_t v189;
  int8x16_t v190;
  __n128 v191;
  uint64_t v197;
  __n128 v198;
  __n128 v199;
  void *v200;
  __n128 v201;
  __n128 v202;
  __n128 v203;
  __n128 v204;
  __n128 v205;
  int8x16_t v206;
  __n128 v207;
  float32x2_t v208;
  int8x16_t v209;
  int8x16_t v210;
  int8x16_t v211;
  __n128 v212;
  int8x16_t v213;
  float32x4_t v214;
  int8x16_t v215;
  int8x16_t v216;
  int8x16_t v217;
  __n128 v218;
  int8x16_t v219;
  float32x4_t v220;
  int8x16_t v221;
  char v222[48];
  char v223[56];
  float32x2_t *v224;

  v9 = COERCE_FLOAT32X2_T(CGPoint.floats.getter(a1[2], a1[3]));
  v10 = COERCE_FLOAT32X2_T(CGPoint.floats.getter(*a1, a1[1]));
  v11 = vsub_f32(v9, v10);
  v208 = vmul_f32(v11, v11);
  v12 = vadd_f32(v208, (float32x2_t)vdup_lane_s32((int32x2_t)v208, 1)).u32[0];
  v13 = vrsqrte_f32((float32x2_t)v12);
  v14 = vmul_f32(v13, vrsqrts_f32((float32x2_t)v12, vmul_f32(v13, v13)));
  v15 = vmul_n_f32(v11, vmul_f32(v14, vrsqrts_f32((float32x2_t)v12, vmul_f32(v14, v14))).f32[0]);
  v16 = sub_10006BD8C((_QWORD *)1, 15);
  v17 = v16[2];
  if (v17)
  {
    v18 = vmul_n_f32(v15, sqrtf(vaddv_f32(v208)) * 0.066667);
    v224 = (float32x2_t *)_swiftEmptyArrayStorage;
    sub_1000A578C(0, v17, 0);
    v19 = 0;
    v20 = (float32x2_t *)_swiftEmptyArrayStorage;
    v21 = _swiftEmptyArrayStorage[2];
    do
    {
      v22 = v16[v19 + 4];
      v224 = v20;
      v23 = (unint64_t)v20[3];
      if (v21 >= v23 >> 1)
      {
        sub_1000A578C((char *)(v23 > 1), v21 + 1, 1);
        v20 = v224;
      }
      ++v19;
      v20[2] = (float32x2_t)(v21 + 1);
      v20[v21++ + 4] = vadd_f32(v10, vmul_n_f32(v18, (float)v22));
    }
    while (v17 != v19);
    swift_release();
  }
  else
  {
    swift_release();
    v20 = (float32x2_t *)_swiftEmptyArrayStorage;
  }
  v24 = (int64_t)v20[2];
  if (v24)
  {
    v224 = (float32x2_t *)_swiftEmptyArrayStorage;
    sub_1000A578C(0, v24, 0);
    v25 = (float32x2_t *)_swiftEmptyArrayStorage;
    v26 = v20 + 4;
    v27 = (float32x2_t)vrev64_s32((int32x2_t)vmul_f32(v15, (float32x2_t)vdup_n_s32(0x42480000u)));
    v28 = _swiftEmptyArrayStorage[2];
    v29 = v24;
    do
    {
      v30 = *v26;
      v224 = v25;
      v31 = (unint64_t)v25[3];
      if (v28 >= v31 >> 1)
      {
        sub_1000A578C((char *)(v31 > 1), v28 + 1, 1);
        v25 = v224;
      }
      v32.i32[0] = vsub_f32(v30, v27).u32[0];
      v32.i32[1] = vadd_f32(v30, v27).i32[1];
      v25[2] = (float32x2_t)(v28 + 1);
      v25[v28 + 4] = v32;
      ++v26;
      ++v28;
      --v29;
    }
    while (v29);
  }
  else
  {
    v25 = (float32x2_t *)_swiftEmptyArrayStorage;
  }
  v33 = a2;
  v34 = sub_100117F80((uint64_t)v25, (uint64_t)v33, (uint64_t)&off_10043BF98, 1);
  swift_bridgeObjectRelease(v25);
  v200 = v33;

  v35 = *((_QWORD *)v34 + 2);
  if (v35)
  {
    v224 = (float32x2_t *)_swiftEmptyArrayStorage;
    sub_1000A5718(0, v35, 0);
    v36 = (float32x2_t *)_swiftEmptyArrayStorage;
    v37 = (__n128 *)(v34 + 80);
    do
    {
      v38 = v37[3].n128_u64[1];
      *(double *)v39.i64 = simd_float4x4.position.getter(v37[-2], v37[-1], *v37, v37[1]);
      v209 = v39;
      v224 = v36;
      v41 = (unint64_t)v36[2];
      v40 = (unint64_t)v36[3];
      swift_retain();
      if (v41 >= v40 >> 1)
      {
        sub_1000A5718((_QWORD *)(v40 > 1), v41 + 1, 1);
        v36 = v224;
      }
      v36[2] = (float32x2_t)(v41 + 1);
      v42 = &v36[4 * v41];
      *(int8x16_t *)v42[4].f32 = v209;
      v42[6] = (float32x2_t)v38;
      v37 += 8;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease(v34);
    if (v24)
      goto LABEL_21;
LABEL_27:
    swift_bridgeObjectRelease(v20);
    v44 = (float32x2_t *)_swiftEmptyArrayStorage;
    goto LABEL_28;
  }
  swift_bridgeObjectRelease(v34);
  v36 = (float32x2_t *)_swiftEmptyArrayStorage;
  if (!v24)
    goto LABEL_27;
LABEL_21:
  v224 = (float32x2_t *)_swiftEmptyArrayStorage;
  sub_1000A578C(0, v24, 0);
  v43 = 0;
  v44 = (float32x2_t *)_swiftEmptyArrayStorage;
  v45 = (float32x2_t)vrev64_s32((int32x2_t)vmul_f32(v15, (float32x2_t)vdup_n_s32(0x42480000u)));
  v46 = _swiftEmptyArrayStorage[2];
  do
  {
    v47 = v20[v43 + 4];
    v224 = v44;
    v48 = (unint64_t)v44[3];
    if (v46 >= v48 >> 1)
    {
      sub_1000A578C((char *)(v48 > 1), v46 + 1, 1);
      v44 = v224;
    }
    v49.i32[0] = vadd_f32(v47, v45).u32[0];
    v49.i32[1] = vsub_f32(v47, v45).i32[1];
    ++v43;
    v44[2] = (float32x2_t)(v46 + 1);
    v44[v46++ + 4] = v49;
  }
  while (v24 != v43);
  swift_bridgeObjectRelease(v20);
LABEL_28:
  v50 = v200;
  v51 = sub_100117F80((uint64_t)v44, (uint64_t)v50, (uint64_t)&off_10043BF98, 1);
  swift_bridgeObjectRelease(v44);

  v52 = *((_QWORD *)v51 + 2);
  if (v52)
  {
    v224 = (float32x2_t *)_swiftEmptyArrayStorage;
    sub_1000A5718(0, v52, 0);
    v53 = (float32x2_t *)_swiftEmptyArrayStorage;
    v54 = (__n128 *)(v51 + 80);
    do
    {
      v55 = v54[3].n128_u64[1];
      *(double *)v56.i64 = simd_float4x4.position.getter(v54[-2], v54[-1], *v54, v54[1]);
      v210 = v56;
      v224 = v53;
      v57 = (unint64_t)v53[2];
      v58 = (unint64_t)v53[3];
      swift_retain();
      if (v57 >= v58 >> 1)
      {
        sub_1000A5718((_QWORD *)(v58 > 1), v57 + 1, 1);
        v53 = v224;
      }
      v53[2] = (float32x2_t)(v57 + 1);
      v59 = &v53[4 * v57];
      *(int8x16_t *)v59[4].f32 = v210;
      v59[6] = (float32x2_t)v55;
      v54 += 8;
      --v52;
    }
    while (v52);
    swift_bridgeObjectRelease(v51);
  }
  else
  {
    swift_bridgeObjectRelease(v51);
    v53 = (float32x2_t *)_swiftEmptyArrayStorage;
  }
  v60 = sub_1001182CC((uint64_t)v36);
  swift_bridgeObjectRelease(v36);
  v61 = sub_1001182CC((uint64_t)v53);
  swift_bridgeObjectRelease(v53);
  v62 = (void *)objc_opt_self(NSUserDefaults);
  v63 = objc_msgSend(v62, "standardUserDefaults");
  v64 = objc_msgSend(v63, "showRefinementPlanes");

  if ((v64 & 1) != 0)
  {
    v65 = *(void **)(v197 + 256);
    if (v65)
    {
      v66 = v65;
      SCNNode.removeAllChildren()();

    }
    v67 = sub_10000EDC8(&qword_1004845F8);
    inited = swift_initStackObject(v67, v222);
    *(_OWORD *)(inited + 16) = xmmword_1003B0F60;
    *(_QWORD *)(inited + 32) = v60;
    v69 = inited + 32;
    *(_QWORD *)(inited + 40) = v61;
    swift_bridgeObjectRetain(v60);
    swift_bridgeObjectRetain(v61);
    sub_100117450(inited, sub_100119900);
    swift_setDeallocating(inited);
    v70 = *(_QWORD *)(inited + 16);
    v71 = sub_10000EDC8(&qword_100484600);
    swift_arrayDestroy(v69, v70, v71);
  }
  v72 = sub_1001182CC((uint64_t)v60);
  swift_bridgeObjectRelease(v60);
  v73 = sub_1001182CC((uint64_t)v61);
  swift_bridgeObjectRelease(v61);
  v74 = objc_msgSend(v62, "standardUserDefaults");
  v75 = objc_msgSend(v74, "showRefinementPlanes");

  if (v75)
  {
    v76 = objc_msgSend(v62, "standardUserDefaults");
    v77 = objc_msgSend(v76, "showFilteredRefinementPlanes");

    if (v77)
    {
      v78 = sub_10000EDC8(&qword_1004845F8);
      v79 = swift_initStackObject(v78, v223);
      *(_OWORD *)(v79 + 16) = xmmword_1003B0F60;
      *(_QWORD *)(v79 + 32) = v72;
      v80 = v79 + 32;
      *(_QWORD *)(v79 + 40) = v73;
      swift_bridgeObjectRetain(v72);
      swift_bridgeObjectRetain(v73);
      sub_100117450(v79, sub_1001198F8);
      swift_setDeallocating(v79);
      v81 = *(_QWORD *)(v79 + 16);
      v82 = sub_10000EDC8(&qword_100484600);
      swift_arrayDestroy(v80, v81, v82);
    }
  }
  v83 = sub_100114E90((uint64_t)v72, (uint64_t)v73, a4, a5, a6, a7);
  v85 = v84;
  swift_bridgeObjectRelease(v72);
  swift_bridgeObjectRelease(v73);
  swift_retain();
  v86 = swift_bridgeObjectRetain(v83);
  sub_10011768C(v86);
  v88 = v87;
  swift_bridgeObjectRelease(v83);
  swift_release();
  swift_retain();
  v89 = swift_bridgeObjectRetain(v83);
  sub_10011788C(v89);
  v91 = v90;
  swift_bridgeObjectRelease(v83);
  swift_release();
  swift_retain();
  v92 = swift_bridgeObjectRetain(v85);
  sub_10011768C(v92);
  v94 = v93;
  swift_bridgeObjectRelease(v85);
  swift_release();
  swift_retain();
  v95 = swift_bridgeObjectRetain(v85);
  sub_10011788C(v95);
  v97 = v96;
  swift_bridgeObjectRelease(v85);
  swift_release();
  v98 = *(_QWORD *)(v97 + 16);
  if ((unint64_t)v98 >= 4)
  {
    swift_bridgeObjectRelease(v94);
    v204 = sub_1001184DC(v97);
    v99 = (float32x4_t *)SIMD3<>.up.unsafeMutableAddressor();
    v100 = *v99;
    v211 = *(int8x16_t *)v99;
    if (qword_10047AB38 != -1)
    {
      v99 = (float32x4_t *)swift_once(&qword_10047AB38, sub_10010E830);
      v100 = (float32x4_t)v211;
    }
    v101 = sub_1001186F4((uint64_t)v99, v100, a4.n128_f64[0], a5.n128_f64[0], a6.n128_f64[0], a7.n128_f64[0], *(float *)&dword_1004AF69C);
    swift_bridgeObjectRelease(v97);
    v103.i64[0] = v204.n128_u64[0];
    v102 = vextq_s8((int8x16_t)v204, v211, 8uLL);
    v103.i64[1] = v211.i64[1];
    if (v101)
      v104 = -1;
    else
      v104 = 0;
    v105 = (int8x16_t)vdupq_n_s64(v104);
    v189 = vbicq_s8(v103, v105);
    v190 = vbicq_s8(v102, v105);
    v106 = (float)v98 / 15.0;
    v107 = 0x1000000;
    goto LABEL_56;
  }
  swift_bridgeObjectRelease(v97);
  v108 = *(_QWORD *)(v94 + 16);
  if (v108 < 4)
  {
    swift_bridgeObjectRelease(v94);
    v189 = 0u;
    v190 = 0u;
    v101 = 1;
    v106 = 0.0;
    v107 = 0x2000000;
LABEL_56:
    v188 = v107;
    goto LABEL_63;
  }
  v184 = v91;
  v186 = v88;
  v191 = sub_1001184DC(v94);
  v224 = (float32x2_t *)_swiftEmptyArrayStorage;
  sub_1000A5698(0, v108, 0);
  v109 = 48;
  v110 = v224;
  v182 = v108;
  do
  {
    v111 = *(uint64_t (**)(__n128))(**(_QWORD **)(v94 + v109) + 160);
    v112 = swift_retain();
    v113 = (void *)v111(v112);
    objc_msgSend(v113, "transform");
    v205 = v115;
    v212 = v114;
    v198 = v117;
    v201 = v116;

    *(double *)v118.i64 = simd_float4x4.up.getter(v212, v205, v201, v198);
    v213 = v118;
    swift_release();
    v224 = v110;
    v120 = (unint64_t)v110[2];
    v119 = (unint64_t)v110[3];
    if (v120 >= v119 >> 1)
    {
      sub_1000A5698((char *)(v119 > 1), v120 + 1, 1);
      v110 = v224;
    }
    v110[2] = (float32x2_t)(v120 + 1);
    *(int8x16_t *)v110[2 * v120 + 4].f32 = v213;
    v109 += 32;
    --v108;
  }
  while (v108);
  *(double *)v121.i64 = static SIMD3<>.average(_:)(v110);
  v214 = v121;
  v122 = swift_bridgeObjectRelease(v110);
  v123 = vmulq_f32(v214, v214);
  v123.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32((int32x4_t)v123, 2), vadd_f32(*(float32x2_t *)v123.f32, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v123.f32, 1))).u32[0];
  v124 = vrsqrte_f32((float32x2_t)v123.u32[0]);
  v125 = vmul_f32(v124, vrsqrts_f32((float32x2_t)v123.u32[0], vmul_f32(v124, v124)));
  *(float32x2_t *)v123.f32 = vmul_f32(v125, vrsqrts_f32((float32x2_t)v123.u32[0], vmul_f32(v125, v125)));
  v123.i64[1] = v123.i64[0];
  v126 = (float32x4_t)vtrn2q_s32(vrev64q_s32((int32x4_t)vmulq_f32(v214, v123)), (int32x4_t)0);
  v91 = v184;
  v215 = (int8x16_t)v126;
  if (qword_10047AB38 != -1)
  {
    v122 = swift_once(&qword_10047AB38, sub_10010E830);
    v126 = (float32x4_t)v215;
  }
  v101 = sub_1001186F4(v122, v126, a4.n128_f64[0], a5.n128_f64[0], a6.n128_f64[0], a7.n128_f64[0], *(float *)&dword_1004AF69C);
  swift_bridgeObjectRelease(v94);
  v188 = 0;
  v128.i64[0] = v191.n128_u64[0];
  v127 = vextq_s8((int8x16_t)v191, v215, 8uLL);
  v128.i64[1] = v215.i64[1];
  if (v101)
    v129 = -1;
  else
    v129 = 0;
  v130 = (int8x16_t)vdupq_n_s64(v129);
  v189 = vbicq_s8(v128, v130);
  v190 = vbicq_s8(v127, v130);
  v106 = (float)v182 / 15.0;
  v88 = v186;
LABEL_63:
  v131 = *(_QWORD *)(v91 + 16);
  if ((unint64_t)v131 < 4)
  {
    swift_bridgeObjectRelease(v91);
    v148 = *(_QWORD *)(v88 + 16);
    if (v148 < 4)
    {
      swift_bridgeObjectRelease(v88);
      v206 = 0u;
      v217 = 0u;
      v134 = 1;
      v139 = 0.0;
      v138 = 2139095040;
      v140 = 0x20000;
      v141 = *(_QWORD *)(v85 + 16);
      if (v141)
      {
LABEL_70:
        v224 = (float32x2_t *)_swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)(v141);
        v142 = 48;
        do
        {
          v143 = *(_QWORD *)(v85 + v142);
          swift_retain();
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v144);
          v145 = v224[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v145);
          v146 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v145, v143);
          specialized ContiguousArray._endMutation()(v146);
          v142 += 32;
          --v141;
        }
        while (v141);
        v147 = v224;
        swift_bridgeObjectRelease(v85);
        goto LABEL_88;
      }
    }
    else
    {
      v187 = v101;
      v183 = sub_1001184DC(v88);
      v224 = (float32x2_t *)_swiftEmptyArrayStorage;
      sub_1000A5698(0, v148, 0);
      v149 = 48;
      v150 = v224;
      v185 = v148;
      v151 = v148;
      do
      {
        v152 = v88;
        v153 = *(uint64_t (**)(__n128))(**(_QWORD **)(v88 + v149) + 160);
        v154 = swift_retain();
        v155 = (void *)v153(v154);
        objc_msgSend(v155, "transform");
        v207 = v157;
        v218 = v156;
        v199 = v159;
        v203 = v158;

        *(double *)v160.i64 = simd_float4x4.up.getter(v218, v207, v203, v199);
        v219 = v160;
        swift_release();
        v224 = v150;
        v162 = (unint64_t)v150[2];
        v161 = (unint64_t)v150[3];
        if (v162 >= v161 >> 1)
        {
          sub_1000A5698((char *)(v161 > 1), v162 + 1, 1);
          v150 = v224;
        }
        v150[2] = (float32x2_t)(v162 + 1);
        *(int8x16_t *)v150[2 * v162 + 4].f32 = v219;
        v149 += 32;
        --v151;
        v88 = v152;
      }
      while (v151);
      *(double *)v163.i64 = static SIMD3<>.average(_:)(v150);
      v220 = v163;
      v164 = swift_bridgeObjectRelease(v150);
      v165 = vmulq_f32(v220, v220);
      v165.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32((int32x4_t)v165, 2), vadd_f32(*(float32x2_t *)v165.f32, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v165.f32, 1))).u32[0];
      v166 = vrsqrte_f32((float32x2_t)v165.u32[0]);
      v167 = vmul_f32(v166, vrsqrts_f32((float32x2_t)v165.u32[0], vmul_f32(v166, v166)));
      *(float32x2_t *)v165.f32 = vmul_f32(v167, vrsqrts_f32((float32x2_t)v165.u32[0], vmul_f32(v167, v167)));
      v165.i64[1] = v165.i64[0];
      v168 = (float32x4_t)vtrn2q_s32(vrev64q_s32((int32x4_t)vmulq_f32(v220, v165)), (int32x4_t)0);
      v221 = (int8x16_t)v168;
      if (qword_10047AB38 != -1)
      {
        v164 = swift_once(&qword_10047AB38, sub_10010E830);
        v168 = (float32x4_t)v221;
      }
      v134 = sub_1001186F4(v164, v168, a4.n128_f64[0], a5.n128_f64[0], a6.n128_f64[0], a7.n128_f64[0], *(float *)&dword_1004AF69C);
      if (v134)
        v169 = -1;
      else
        v169 = 0;
      v170 = (int8x16_t)vdupq_n_s64(v169);
      v206 = vbicq_s8(v221, v170);
      v217 = vbicq_s8((int8x16_t)v183, v170);
      sub_1001187FC(v152);
      v138 = v171;
      swift_bridgeObjectRelease(v152);
      v140 = 0;
      v139 = (float)v185 / 15.0;
      v101 = v187;
      v141 = *(_QWORD *)(v85 + 16);
      if (v141)
        goto LABEL_70;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v88);
    v202 = sub_1001184DC(v91);
    v132 = (float32x4_t *)SIMD3<>.up.unsafeMutableAddressor();
    v133 = *v132;
    v216 = *(int8x16_t *)v132;
    if (qword_10047AB38 != -1)
    {
      v132 = (float32x4_t *)swift_once(&qword_10047AB38, sub_10010E830);
      v133 = (float32x4_t)v216;
    }
    v134 = sub_1001186F4((uint64_t)v132, v133, a4.n128_f64[0], a5.n128_f64[0], a6.n128_f64[0], a7.n128_f64[0], *(float *)&dword_1004AF69C);
    if (v134)
      v135 = -1;
    else
      v135 = 0;
    v136 = (int8x16_t)vdupq_n_s64(v135);
    v206 = vbicq_s8(v216, v136);
    v217 = vbicq_s8((int8x16_t)v202, v136);
    sub_1001187FC(v91);
    v138 = v137;
    swift_bridgeObjectRelease(v91);
    v139 = (float)v131 / 15.0;
    v140 = 0x10000;
    v141 = *(_QWORD *)(v85 + 16);
    if (v141)
      goto LABEL_70;
  }
  swift_bridgeObjectRelease(v85);
  v147 = (float32x2_t *)_swiftEmptyArrayStorage;
LABEL_88:
  v172 = sub_100115370((uint64_t)v147);
  swift_bridgeObjectRelease(v147);
  v173 = *(_QWORD *)(v83 + 16);
  if (v173)
  {
    v224 = (float32x2_t *)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v173);
    v174 = 48;
    do
    {
      v175 = *(_QWORD *)(v83 + v174);
      swift_retain();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v176);
      v177 = v224[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v177);
      v178 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v177, v175);
      specialized ContiguousArray._endMutation()(v178);
      v174 += 32;
      --v173;
    }
    while (v173);
    v179 = v224;
    swift_bridgeObjectRelease(v83);
  }
  else
  {
    swift_bridgeObjectRelease(v83);
    v179 = (float32x2_t *)_swiftEmptyArrayStorage;
  }
  v180 = sub_100115370((uint64_t)v179);
  swift_bridgeObjectRelease(v179);
  *(int8x16_t *)a3 = v217;
  *(int8x16_t *)(a3 + 16) = v206;
  *(_BYTE *)(a3 + 32) = v134;
  *(_QWORD *)(a3 + 48) = v189.i64[0];
  *(_QWORD *)(a3 + 72) = v189.i64[1];
  result = (__n128)v190;
  *(int8x16_t *)(a3 + 56) = v190;
  *(_BYTE *)(a3 + 80) = v101;
  *(_QWORD *)(a3 + 84) = v180 | ((unint64_t)v172 << 8) | v140 | v188 | ((unint64_t)LODWORD(v139) << 32);
  *(float *)(a3 + 92) = v106;
  *(_DWORD *)(a3 + 96) = v138;
  return result;
}

uint64_t sub_100113D14(uint64_t a1, uint64_t a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  float32x2_t *v8;
  float32x2_t v9;
  unint64_t v10;
  float32x2_t *v11;
  float32x2_t *v12;
  float32x4_t v13;
  const double *v14;
  int64x2_t v15;
  float64x2_t v16;
  float32x4_t v17;
  int32x4_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _BYTE *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t result;
  Swift::String v34;
  float32x4_t v35;
  int32x4_t v36;
  float32x2_t v37;
  float32x2_t v38;
  float32x4_t v39;
  float32x4_t v40;
  int32x4_t v41;
  float32x2_t v42;
  float32x2_t v43;
  float32x4_t v44;
  float v45;
  float32x4_t v46;
  float v47;
  uint64_t v48;
  _OWORD *v49;
  __n128 v50;
  float32x4_t v51;
  float32x4_t v52;
  int8x16_t v53;
  int8x8_t v54;
  float32x2_t v55;
  Swift::String v56;
  uint64_t v57;
  __n128 v58;
  Swift::String v59;
  uint64_t v60;
  float32x4_t v61;
  float v62;
  float v63;
  float32x4_t v64;
  float32x4_t v65;
  float v66;
  __n128 v70;
  __n128 v71;
  __n128 v73;
  __int128 v74;
  char v75[24];
  char v76[32];

  v8 = (float32x2_t *)(a2 + direct field offset for WorldEdge.p1);
  swift_beginAccess(a2 + direct field offset for WorldEdge.p1, v76, 0, 0);
  if ((v8[2].i8[0] & 1) != 0)
    return 4;
  v11 = v8;
  v9 = *v8;
  v10 = (unint64_t)v11[1];
  v12 = (float32x2_t *)(a2 + direct field offset for WorldEdge.p2);
  v13 = (float32x4_t)swift_beginAccess(v12, v75, 0, 0);
  if ((v12[2].i8[0] & 1) != 0)
    return 4;
  v14 = (const double *)&v12[1];
  v15 = vdupq_n_s64(v10);
  v16 = vld1q_dup_f64(v14);
  *(float32x2_t *)v17.f32 = vmul_f32(vadd_f32(v9, *v12), (float32x2_t)0x3F0000003F000000);
  v17.f32[2] = (float)(*(float *)&v15.i32[2] + *(float *)&v16.f64[1]) * 0.5;
  v17.i32[3] = 0;
  *(float32x2_t *)v13.f32 = vsub_f32(*v12, v9);
  v13.f32[2] = *(float *)&v16.f64[1] - *(float *)&v15.i32[2];
  v18 = (int32x4_t)vmulq_f32(v13, v13);
  v18.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v18, 2), vadd_f32(*(float32x2_t *)v18.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v18.i8, 1))).u32[0];
  *(float32x2_t *)v15.i8 = vrsqrte_f32((float32x2_t)v18.u32[0]);
  *(float32x2_t *)v15.i8 = vmul_f32(*(float32x2_t *)v15.i8, vrsqrts_f32((float32x2_t)v18.u32[0], vmul_f32(*(float32x2_t *)v15.i8, *(float32x2_t *)v15.i8)));
  v61 = v17;
  v64 = vmulq_n_f32(v13, vmul_f32(*(float32x2_t *)v15.i8, vrsqrts_f32((float32x2_t)v18.u32[0], vmul_f32(*(float32x2_t *)v15.i8, *(float32x2_t *)v15.i8))).f32[0]);
  swift_retain();
  v19 = (char *)swift_bridgeObjectRetain(a1);
  v20 = sub_100117D58(v19, v61, v64);
  swift_bridgeObjectRelease(a1);
  swift_release();
  v21 = *((_QWORD *)v20 + 2);
  if (v21)
  {
    v22 = v20 + 64;
    v23 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if ((*v22 & 1) == 0)
      {
        v25 = *((_QWORD *)v22 - 4);
        v26 = *((_QWORD *)v22 - 3);
        v27 = *((_QWORD *)v22 - 2);
        v28 = *((_QWORD *)v22 - 1);
        if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0)
          v23 = sub_100060214(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
        v30 = *((_QWORD *)v23 + 2);
        v29 = *((_QWORD *)v23 + 3);
        if (v30 >= v29 >> 1)
          v23 = sub_100060214((char *)(v29 > 1), v30 + 1, 1, v23);
        *((_QWORD *)v23 + 2) = v30 + 1;
        v24 = &v23[32 * v30];
        *((_QWORD *)v24 + 4) = v25;
        *((_QWORD *)v24 + 5) = v26;
        *((_QWORD *)v24 + 6) = v27;
        *((_QWORD *)v24 + 7) = v28;
      }
      v22 += 48;
      --v21;
    }
    while (v21);
  }
  else
  {
    v23 = (char *)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v20);
  v31 = *((_QWORD *)v23 + 2);
  if ((unint64_t)(v31 - 3) < 0xFFFFFFFFFFFFFFFELL)
  {
    swift_bridgeObjectRelease(v23);
    if (qword_10047AA18 != -1)
      swift_once(&qword_10047AA18, sub_1000E1018);
    v32._countAndFlagsBits = 0xD00000000000002ELL;
    v32._object = (void *)0x80000001003E0300;
    Log.default(_:isPrivate:)(v32, 0);
    return 4;
  }
  if (v31 != 1)
  {
    v35 = *((float32x4_t *)v23 + 3);
    v36 = (int32x4_t)vmulq_f32(v35, v35);
    v36.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v36, 2), vadd_f32(*(float32x2_t *)v36.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v36.i8, 1))).u32[0];
    v37 = vrsqrte_f32((float32x2_t)v36.u32[0]);
    v38 = vmul_f32(v37, vrsqrts_f32((float32x2_t)v36.u32[0], vmul_f32(v37, v37)));
    v39 = vmulq_n_f32(v35, vmul_f32(v38, vrsqrts_f32((float32x2_t)v36.u32[0], vmul_f32(v38, v38))).f32[0]);
    v40 = *((float32x4_t *)v23 + 5);
    v41 = (int32x4_t)vmulq_f32(v40, v40);
    v41.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v41, 2), vadd_f32(*(float32x2_t *)v41.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v41.i8, 1))).u32[0];
    v42 = vrsqrte_f32((float32x2_t)v41.u32[0]);
    v43 = vmul_f32(v42, vrsqrts_f32((float32x2_t)v41.u32[0], vmul_f32(v42, v42)));
    v44 = vmulq_f32(v39, vmulq_n_f32(v40, vmul_f32(v43, vrsqrts_f32((float32x2_t)v41.u32[0], vmul_f32(v43, v43))).f32[0]));
    LODWORD(v45) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v44, 2), vaddq_f32(v44, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v44.f32, 1))).u32[0];
    if (qword_10047AB40 != -1)
    {
      v62 = v45;
      swift_once(&qword_10047AB40, sub_10010E844);
      v45 = v62;
    }
    if (*(float *)&dword_1004AF6A0 < v45)
    {
      v73 = *((__n128 *)v23 + 3);
      if (sub_1001175EC((float32x4_t)v73, 5.0)
        && sub_1001175EC(*((float32x4_t *)v23 + 5), 5.0)
        && (float)(COERCE_FLOAT(HIDWORD(*((_QWORD *)v23 + 4))) - *((float *)v23 + 17)) > 0.04)
      {
        v70 = *((__n128 *)v23 + 2);
      }
      else
      {
        if (!sub_100117550((float32x4_t)v73, 5.0))
          return 2;
        if (!sub_100117550(*((float32x4_t *)v23 + 5), 5.0))
          return 2;
        type metadata accessor for PlaneUtil(0);
        v70 = *((__n128 *)v23 + 2);
        if (static PlaneUtil.distance(point:plane:)(*((__n128 *)v23 + 4), v70, v73) <= 0.04)
          return 2;
      }
      v48 = sub_10000EDC8(&qword_10047E670);
      v49 = (_OWORD *)swift_allocObject(v48, 64, 15);
      v49[1] = xmmword_1003B0BD0;
      swift_bridgeObjectRelease(v23);
      result = 0;
      v49[2] = v70;
      v50 = v73;
      goto LABEL_51;
    }
    if (qword_10047AB48 != -1)
    {
      v63 = v45;
      swift_once(&qword_10047AB48, sub_10010E858);
      v45 = v63;
    }
    if (v45 < *(float *)&dword_1004AF6A4 && v45 > (float)-*(float *)&dword_1004AF6A4)
    {
      v46 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(*((int32x4_t *)v23 + 5), *((int32x4_t *)v23 + 5)), *((int8x16_t *)v23 + 5), 0xCuLL), vnegq_f32(*((float32x4_t *)v23 + 3))), *((float32x4_t *)v23 + 5), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(*((int32x4_t *)v23 + 3), *((int32x4_t *)v23 + 3)), *((int8x16_t *)v23 + 3), 0xCuLL));
      v47 = fabsf(vaddq_f32((float32x4_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmulq_laneq_f32(v46, v64, 2), 1), vaddq_f32(vmulq_laneq_f32(v64, v46, 2), vmulq_lane_f32(v46, *(float32x2_t *)v64.f32, 1))).f32[0]);
      if (qword_10047AB50 != -1)
      {
        v66 = v47;
        swift_once(&qword_10047AB50, sub_10010E86C);
        v47 = v66;
      }
      if (*(float *)&dword_1004AF6A8 < v47)
        return 1;
      v65 = *((float32x4_t *)v23 + 2);
      *(double *)v51.i64 = simd_float4x4.position.getter(a3, a4, a5, a6);
      v52 = vsubq_f32(v65, v51);
      v53 = (int8x16_t)vmulq_f32(v52, v52);
      v54.i32[0] = vextq_s8(v53, v53, 8uLL).u32[0];
      v54.i32[1] = v53.i32[0];
      *(float32x2_t *)v51.f32 = vsub_f32(*(float32x2_t *)(v23 + 64), *(float32x2_t *)v51.f32);
      *(float32x2_t *)v51.f32 = vmul_f32(*(float32x2_t *)v51.f32, *(float32x2_t *)v51.f32);
      v55 = (float32x2_t)vext_s8(v54, *(int8x8_t *)v51.f32, 4uLL);
      v51.i32[0] = v53.i32[1];
      *(float *)&v54.i32[1] = (float)(*((float *)v23 + 18) - v51.f32[2]) * (float)(*((float *)v23 + 18) - v51.f32[2]);
      *(float32x2_t *)v51.f32 = vadd_f32((float32x2_t)v54, vadd_f32(v55, *(float32x2_t *)v51.f32));
      if ((vcgt_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v51.f32, 1), *(float32x2_t *)v51.f32).u8[0] & 1) != 0)
      {
        if (qword_10047AA18 != -1)
          swift_once(&qword_10047AA18, sub_1000E1018);
        v56._object = (void *)0x80000001003E0270;
        v56._countAndFlagsBits = 0xD000000000000043;
        Log.default(_:isPrivate:)(v56, 0);
        v57 = sub_10000EDC8(&qword_10047E670);
        v49 = (_OWORD *)swift_allocObject(v57, 64, 15);
        v49[1] = xmmword_1003B0BD0;
        v74 = *((_OWORD *)v23 + 2);
        v58 = *((__n128 *)v23 + 3);
      }
      else
      {
        if (qword_10047AA18 != -1)
          swift_once(&qword_10047AA18, sub_1000E1018);
        v59._object = (void *)0x80000001003E0270;
        v59._countAndFlagsBits = 0xD000000000000043;
        Log.default(_:isPrivate:)(v59, 0);
        v60 = sub_10000EDC8(&qword_10047E670);
        v49 = (_OWORD *)swift_allocObject(v60, 64, 15);
        v49[1] = xmmword_1003B0BD0;
        v74 = *((_OWORD *)v23 + 4);
        v58 = *((__n128 *)v23 + 5);
      }
      v71 = v58;
      swift_bridgeObjectRelease(v23);
      result = 0;
      v49[2] = v74;
      v50 = v71;
LABEL_51:
      v49[3] = v50;
      return result;
    }
    swift_bridgeObjectRelease(v23);
    return 4;
  }
  if (qword_10047AA18 != -1)
    swift_once(&qword_10047AA18, sub_1000E1018);
  v34._countAndFlagsBits = 0xD00000000000003BLL;
  v34._object = (void *)0x80000001003E02C0;
  Log.default(_:isPrivate:)(v34, 0);
  return 0;
}

void sub_100114470(uint64_t a1, __n128 a2)
{
  uint64_t (*v3)(void);
  void *v4;
  __n128 v5;
  __n128 v6;
  __n128 v7;
  __int128 v8;
  float32x4_t v9;
  int32x4_t v10;
  float32x2_t v11;
  float32x2_t v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  void *v17;
  __int128 v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  float32x4_t v22;
  int32x4_t v23;
  float32x2_t v24;
  float32x2_t v25;
  int8x16_t v26;
  char v27;
  void *v28;
  __int128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  float32x4_t v33;
  int32x4_t v34;
  float32x2_t v35;
  float32x2_t v36;
  int8x16_t v37;
  float v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  __n128 v44;
  id v45[2];
  id v46[2];
  id v47[2];
  id v48;
  __n128 v49;
  __n128 v50;
  __n128 v51;
  __n128 v52;
  __n128 v53;
  __n128 v54;
  __n128 v56;

  v3 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 160);
  v4 = (void *)((uint64_t (*)(uint64_t))v3)(a1);
  objc_msgSend(v4, "transform");
  v51 = v6;
  v53 = v5;
  *(_OWORD *)v45 = v8;
  v49 = v7;

  *(double *)v9.i64 = simd_float4x4.up.getter(v53, v51, v49, *(__n128 *)v45);
  v10 = (int32x4_t)vmulq_f32(v9, v9);
  v10.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v10, 2), vadd_f32(*(float32x2_t *)v10.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v10.i8, 1))).u32[0];
  v11 = vrsqrte_f32((float32x2_t)v10.u32[0]);
  v12 = vmul_f32(v11, vrsqrts_f32((float32x2_t)v10.u32[0], vmul_f32(v11, v11)));
  v13.n128_f64[0] = static simd_float4x4.make(position:normalizedForward:)(a2, (__n128)vmulq_n_f32(v9, vmul_f32(v12, vrsqrts_f32((float32x2_t)v10.u32[0], vmul_f32(v12, v12))).f32[0]));
  v56 = v13;
  v52 = v15;
  v54 = v14;
  v50 = v16;
  v17 = (void *)v3();
  objc_msgSend(v17, "transform");
  v43 = v19;
  *(_OWORD *)v46 = v18;
  v39 = v21;
  v41 = v20;

  *(double *)v22.i64 = simd_float4x4.up.getter(*(__n128 *)v46, v43, v41, v39);
  v23 = (int32x4_t)vmulq_f32(v22, v22);
  v23.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v23, 2), vadd_f32(*(float32x2_t *)v23.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v23.i8, 1))).u32[0];
  v24 = vrsqrte_f32((float32x2_t)v23.u32[0]);
  v25 = vmul_f32(v24, vrsqrts_f32((float32x2_t)v23.u32[0], vmul_f32(v24, v24)));
  v26 = (int8x16_t)vmulq_n_f32(v22, vmul_f32(v25, vrsqrts_f32((float32x2_t)v23.u32[0], vmul_f32(v25, v25))).f32[0]);
  v23.i32[0] = v26.i32[1];
  v25.i32[0] = vextq_s8(v26, v26, 8uLL).u32[0];
  v25.i32[1] = v26.i32[0];
  *(float32x2_t *)v26.i8 = vmul_f32(v25, 0);
  if (fabsf(*(float *)v26.i32 + (float)(*(float *)v23.i32 + *(float *)&v26.i32[1])) >= 0.20791)
  {
    v28 = (void *)v3();
    objc_msgSend(v28, "transform");
    v44 = v30;
    *(_OWORD *)v47 = v29;
    v40 = v32;
    v42 = v31;

    *(double *)v33.i64 = simd_float4x4.up.getter(*(__n128 *)v47, v44, v42, v40);
    v34 = (int32x4_t)vmulq_f32(v33, v33);
    v34.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v34, 2), vadd_f32(*(float32x2_t *)v34.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v34.i8, 1))).u32[0];
    v35 = vrsqrte_f32((float32x2_t)v34.u32[0]);
    v36 = vmul_f32(v35, vrsqrts_f32((float32x2_t)v34.u32[0], vmul_f32(v35, v35)));
    v37 = (int8x16_t)vmulq_n_f32(v33, vmul_f32(v36, vrsqrts_f32((float32x2_t)v34.u32[0], vmul_f32(v36, v36))).f32[0]);
    v34.i32[0] = v37.i32[1];
    v36.i32[0] = vextq_s8(v37, v37, 8uLL).u32[0];
    v36.i32[1] = v37.i32[0];
    *(float32x2_t *)v37.i8 = vmul_f32(v36, 0);
    v38 = fabsf(*(float *)v37.i32 + (float)(*(float *)v34.i32 + *(float *)&v37.i32[1]));
    if (v38 > 1.0)
      v38 = 1.0;
    v27 = (float)(acosf(v38) * 57.296) < 12.0;
  }
  else
  {
    v27 = 1;
  }
  v48 = sub_100119908(a1);
  sub_1001146B4(v48, v27, 0, 0, 1, v56, v54, v52, v50);

}

void sub_1001146B4(id a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6, __n128 a7, __n128 a8, __n128 a9)
{
  uint64_t v9;
  uint64_t v10;
  double v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  char v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  __n128 v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  double v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  double v46;
  double v47;
  double v48;
  void *v49;
  void *v50;
  id v51;
  _OWORD v57[4];
  _OWORD v58[4];
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __C::SCNVector3 v63;

  v10 = v9;
  v14 = (double)a5 * 0.04;
  v15 = (void *)objc_opt_self(SCNBox);
  v16 = objc_msgSend(v15, "boxWithWidth:height:length:chamferRadius:", v14, v14, 0.0, 0.0);
  v17 = objc_msgSend(v15, "boxWithWidth:height:length:chamferRadius:", 0.001, 0.001, 0.05, 0.0);
  v18 = objc_msgSend(v17, "firstMaterial");
  if (!v18)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  v19 = v18;
  v20 = objc_msgSend(v18, "diffuse");

  v21 = (void *)objc_opt_self(UIColor);
  v22 = objc_msgSend(v21, "redColor");
  objc_msgSend(v20, "setContents:", v22);

  v23 = objc_msgSend(v21, "blackColor");
  if (v23 == a1
    || (sub_100018148(0, (unint64_t *)&qword_10047C128, NSObject_ptr),
        v24 = objc_msgSend(v21, "magentaColor"),
        v25 = static NSObject.== infix(_:_:)(a1, v24),
        v24,
        (v25 & 1) != 0))
  {
    objc_msgSend(v16, "setWidth:", 0.07);
    objc_msgSend(v16, "setHeight:", 0.07);
  }
  v26 = objc_msgSend(v16, "firstMaterial");
  if (!v26)
    goto LABEL_17;
  v27 = v26;
  v28 = objc_msgSend(v26, "diffuse");

  objc_msgSend(v28, "setContents:", a1);
  v29 = objc_msgSend(objc_allocWithZone((Class)SCNNode), "init");
  v30 = objc_msgSend(objc_allocWithZone((Class)SCNNode), "init");
  SCNMatrix4.init(_:)(v58, a6, a7, a8, a9);
  v59 = v58[0];
  v60 = v58[1];
  v61 = v58[2];
  v62 = v58[3];
  v31.n128_f64[0] = simd_float4x4.forward.getter(objc_msgSend(v29, "setTransform:", &v59));
  *(double *)v32.i64 = static simd_float4x4.make(position:normalizedForward:)(v31, v31);
  v33 = (float32x4_t)vdupq_n_s32(0x3CCCCCCDu);
  SCNMatrix4.init(_:)(&v59, (__n128)vaddq_f32(vmulq_f32(v32, v33), (float32x4_t)a6), (__n128)vaddq_f32(vmulq_f32(v34, v33), (float32x4_t)a7), (__n128)vaddq_f32(vmulq_f32(v35, v33), (float32x4_t)a8), (__n128)vaddq_f32(vmulq_f32(v36, v33), (float32x4_t)a9));
  v57[0] = v59;
  v57[1] = v60;
  v57[2] = v61;
  v57[3] = v62;
  objc_msgSend(v30, "setTransform:", v57);
  v37 = 0.4;
  if ((a2 & 1) != 0)
    v37 = 0.9;
  objc_msgSend(v29, "setOpacity:", v37);
  objc_msgSend(v29, "setGeometry:", v16);
  objc_msgSend(v30, "setGeometry:", v17);
  if (a4)
  {
    *(_QWORD *)&v57[0] = a3;
    *((_QWORD *)&v57[0] + 1) = a4;
    swift_bridgeObjectRetain(a4);
    v38 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v57, &type metadata for String);
    v39 = objc_msgSend((id)objc_opt_self(SCNText), "textWithString:extrusionDepth:", v38, 0.1);
    swift_unknownObjectRelease(v38);
    v40 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 1.0);
    objc_msgSend(v39, "setFont:", v40);

    objc_msgSend(v39, "setFlatness:", 0.1);
    v41 = objc_msgSend(v39, "firstMaterial");
    if (v41)
    {
      v42 = v41;
      v43 = objc_msgSend(v41, "diffuse");

      v44 = objc_msgSend(v21, "whiteColor");
      objc_msgSend(v43, "setContents:", v44);

    }
    v45 = objc_msgSend((id)objc_opt_self(SCNNode), "nodeWithGeometry:", v39);
    v63 = SCNVector3.init(_:_:_:)(0.01, 0.01, 0.01);
    objc_msgSend(v45, "setScale:", *(double *)&v63.x, *(double *)&v63.y, *(double *)&v63.z);
    *(float *)&v46 = SCNVector3Zero.x;
    *(float *)&v47 = SCNVector3Zero.y;
    *(float *)&v48 = SCNVector3Zero.z;
    objc_msgSend(v45, "setPosition:", v46, v47, v48);
    objc_msgSend(v29, "addChildNode:", v45);

  }
  v49 = *(void **)(v10 + 256);
  if (v49)
  {
    objc_msgSend(v49, "addChildNode:", v29);
    v50 = *(void **)(v10 + 256);
    if (v50)
    {
      v51 = v50;
      objc_msgSend(v51, "addChildNode:", v30);

    }
  }

}

void sub_100114C34(uint64_t a1, __n128 a2)
{
  uint64_t (*v2)(void);
  void *v3;
  __n128 v4;
  __n128 v5;
  __n128 v6;
  __int128 v7;
  float32x4_t v8;
  int32x4_t v9;
  float32x2_t v10;
  float32x2_t v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  void *v16;
  __int128 v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  float32x4_t v21;
  int32x4_t v22;
  float32x2_t v23;
  float32x2_t v24;
  int8x16_t v25;
  char v26;
  void *v27;
  __int128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  float32x4_t v32;
  int32x4_t v33;
  float32x2_t v34;
  float32x2_t v35;
  int8x16_t v36;
  float v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  id v44[2];
  id v45[2];
  id v46[2];
  id v47;
  __n128 v48;
  __n128 v49;
  __n128 v50;
  __n128 v51;
  __n128 v52;
  __n128 v53;
  __n128 v55;

  v2 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 160);
  v3 = (void *)((uint64_t (*)(uint64_t))v2)(a1);
  objc_msgSend(v3, "transform");
  v50 = v5;
  v52 = v4;
  *(_OWORD *)v44 = v7;
  v48 = v6;

  *(double *)v8.i64 = simd_float4x4.up.getter(v52, v50, v48, *(__n128 *)v44);
  v9 = (int32x4_t)vmulq_f32(v8, v8);
  v9.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v9, 2), vadd_f32(*(float32x2_t *)v9.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v9.i8, 1))).u32[0];
  v10 = vrsqrte_f32((float32x2_t)v9.u32[0]);
  v11 = vmul_f32(v10, vrsqrts_f32((float32x2_t)v9.u32[0], vmul_f32(v10, v10)));
  v12.n128_f64[0] = static simd_float4x4.make(position:normalizedForward:)(a2, (__n128)vmulq_n_f32(v8, vmul_f32(v11, vrsqrts_f32((float32x2_t)v9.u32[0], vmul_f32(v11, v11))).f32[0]));
  v55 = v12;
  v51 = v14;
  v53 = v13;
  v49 = v15;
  v16 = (void *)v2();
  objc_msgSend(v16, "transform");
  v42 = v18;
  *(_OWORD *)v45 = v17;
  v38 = v20;
  v40 = v19;

  *(double *)v21.i64 = simd_float4x4.up.getter(*(__n128 *)v45, v42, v40, v38);
  v22 = (int32x4_t)vmulq_f32(v21, v21);
  v22.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v22, 2), vadd_f32(*(float32x2_t *)v22.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v22.i8, 1))).u32[0];
  v23 = vrsqrte_f32((float32x2_t)v22.u32[0]);
  v24 = vmul_f32(v23, vrsqrts_f32((float32x2_t)v22.u32[0], vmul_f32(v23, v23)));
  v25 = (int8x16_t)vmulq_n_f32(v21, vmul_f32(v24, vrsqrts_f32((float32x2_t)v22.u32[0], vmul_f32(v24, v24))).f32[0]);
  v22.i32[0] = v25.i32[1];
  v24.i32[0] = vextq_s8(v25, v25, 8uLL).u32[0];
  v24.i32[1] = v25.i32[0];
  *(float32x2_t *)v25.i8 = vmul_f32(v24, 0);
  if (fabsf(*(float *)v25.i32 + (float)(*(float *)v22.i32 + *(float *)&v25.i32[1])) >= 0.20791)
  {
    v27 = (void *)v2();
    objc_msgSend(v27, "transform");
    v43 = v29;
    *(_OWORD *)v46 = v28;
    v39 = v31;
    v41 = v30;

    *(double *)v32.i64 = simd_float4x4.up.getter(*(__n128 *)v46, v43, v41, v39);
    v33 = (int32x4_t)vmulq_f32(v32, v32);
    v33.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v33, 2), vadd_f32(*(float32x2_t *)v33.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v33.i8, 1))).u32[0];
    v34 = vrsqrte_f32((float32x2_t)v33.u32[0]);
    v35 = vmul_f32(v34, vrsqrts_f32((float32x2_t)v33.u32[0], vmul_f32(v34, v34)));
    v36 = (int8x16_t)vmulq_n_f32(v32, vmul_f32(v35, vrsqrts_f32((float32x2_t)v33.u32[0], vmul_f32(v35, v35))).f32[0]);
    v33.i32[0] = v36.i32[1];
    v35.i32[0] = vextq_s8(v36, v36, 8uLL).u32[0];
    v35.i32[1] = v36.i32[0];
    *(float32x2_t *)v36.i8 = vmul_f32(v35, 0);
    v37 = fabsf(*(float *)v36.i32 + (float)(*(float *)v33.i32 + *(float *)&v36.i32[1]));
    if (v37 > 1.0)
      v37 = 1.0;
    v26 = (float)(acosf(v37) * 57.296) < 12.0;
  }
  else
  {
    v26 = 1;
  }
  v47 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  sub_1001146B4(v47, v26, 0, 0, 1, v55, v53, v51, v49);

}

uint64_t sub_100114E90(uint64_t a1, uint64_t a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  uint64_t v6;
  uint64_t v7;
  int64_t v10;
  __int128 v11;
  float v12;
  float v13;
  unint64_t v14;
  float *v15;
  int64_t v16;
  unint64_t v17;
  float v18;
  float v19;
  float v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  float v25;
  float v26;
  int64_t v27;
  float v28;
  float *v29;
  unint64_t v30;
  float v31;
  __int128 v32;
  float v33;
  float v34;
  unint64_t v35;
  float *v36;
  int64_t v37;
  unint64_t v38;
  float v39;
  float v40;
  float v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  float v46;
  float *v47;
  unint64_t v48;
  float v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t inited;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v69;
  __int128 v74;
  char v75[64];
  char v76[80];

  v7 = v6;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    sub_1000A567C(0, v10, 0);
    *(double *)&v11 = simd_float4x4.position.getter(a3, a4, a5, a6);
    v12 = *((float *)&v11 + 1);
    v13 = *((float *)&v11 + 2);
    v14 = _swiftEmptyArrayStorage[2];
    v15 = (float *)(a1 + 40);
    v16 = v10;
    v17 = v14;
    do
    {
      v18 = *(v15 - 2);
      v19 = *(v15 - 1);
      v20 = *v15;
      v21 = _swiftEmptyArrayStorage[3];
      v22 = v17 + 1;
      if (v17 >= v21 >> 1)
      {
        v69 = v11;
        sub_1000A567C((char *)(v21 > 1), v17 + 1, 1);
        v11 = v69;
      }
      _swiftEmptyArrayStorage[2] = v22;
      *((float *)&_swiftEmptyArrayStorage[4] + v17) = sqrtf((float)((float)(v20 - v13) * (float)(v20 - v13))+ (float)((float)((float)(v18 - *(float *)&v11)* (float)(v18 - *(float *)&v11))+ (float)((float)(v19 - v12) * (float)(v19 - v12))));
      v15 += 8;
      ++v17;
      --v16;
    }
    while (v16);
    v23 = v10 + v14;
    if (v10 + v14 >= 2)
    {
      v24 = v23 & 0xFFFFFFFFFFFFFFFELL;
      v29 = (float *)&_swiftEmptyArrayStorage[4] + 1;
      v25 = 0.0;
      v30 = v23 & 0xFFFFFFFFFFFFFFFELL;
      do
      {
        v25 = (float)(v25 + *(v29 - 1)) + *v29;
        v29 += 2;
        v30 -= 2;
      }
      while (v30);
      if (v23 == v24)
      {
LABEL_14:
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        v26 = v25 / (float)v10;
        v27 = *(_QWORD *)(a2 + 16);
        if (v27)
          goto LABEL_15;
LABEL_9:
        v28 = INFINITY;
        goto LABEL_26;
      }
    }
    else
    {
      v24 = 0;
      v25 = 0.0;
    }
    do
    {
      v31 = *((float *)&_swiftEmptyArrayStorage[4] + v24++);
      v25 = v25 + v31;
    }
    while (v22 != v24);
    goto LABEL_14;
  }
  v26 = INFINITY;
  v27 = *(_QWORD *)(a2 + 16);
  if (!v27)
    goto LABEL_9;
LABEL_15:
  sub_1000A567C(0, v27, 0);
  *(double *)&v32 = simd_float4x4.position.getter(a3, a4, a5, a6);
  v33 = *((float *)&v32 + 1);
  v34 = *((float *)&v32 + 2);
  v35 = _swiftEmptyArrayStorage[2];
  v36 = (float *)(a2 + 40);
  v37 = v27;
  v38 = v35;
  do
  {
    v39 = *(v36 - 2);
    v40 = *(v36 - 1);
    v41 = *v36;
    v42 = _swiftEmptyArrayStorage[3];
    v43 = v38 + 1;
    if (v38 >= v42 >> 1)
    {
      v74 = v32;
      sub_1000A567C((char *)(v42 > 1), v38 + 1, 1);
      v32 = v74;
    }
    _swiftEmptyArrayStorage[2] = v43;
    *((float *)&_swiftEmptyArrayStorage[4] + v38) = sqrtf((float)((float)(v41 - v34) * (float)(v41 - v34))+ (float)((float)((float)(v39 - *(float *)&v32)* (float)(v39 - *(float *)&v32))+ (float)((float)(v40 - v33) * (float)(v40 - v33))));
    v36 += 8;
    ++v38;
    --v37;
  }
  while (v37);
  v44 = v27 + v35;
  if (v27 + v35 >= 2)
  {
    v45 = v44 & 0xFFFFFFFFFFFFFFFELL;
    v47 = (float *)&_swiftEmptyArrayStorage[4] + 1;
    v46 = 0.0;
    v48 = v44 & 0xFFFFFFFFFFFFFFFELL;
    do
    {
      v46 = (float)(v46 + *(v47 - 1)) + *v47;
      v47 += 2;
      v48 -= 2;
    }
    while (v48);
    if (v44 == v45)
      goto LABEL_25;
  }
  else
  {
    v45 = 0;
    v46 = 0.0;
  }
  do
  {
    v49 = *((float *)&_swiftEmptyArrayStorage[4] + v45++);
    v46 = v46 + v49;
  }
  while (v43 != v45);
LABEL_25:
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v28 = v46 / (float)v27;
LABEL_26:
  if (vabds_f32(v26, v28) >= 0.04)
    goto LABEL_44;
  swift_retain(v6);
  v50 = swift_bridgeObjectRetain(a1);
  sub_10011768C(v50);
  v52 = v51;
  swift_bridgeObjectRelease(a1);
  swift_release(v7);
  v53 = *(_QWORD *)(v52 + 16);
  swift_bridgeObjectRelease(v52);
  swift_retain(v7);
  swift_bridgeObjectRetain(a1);
  v54 = swift_bridgeObjectRetain(a2);
  sub_10011768C(v54);
  v56 = v55;
  swift_bridgeObjectRelease(a2);
  swift_release(v7);
  v57 = *(_QWORD *)(v56 + 16);
  swift_bridgeObjectRelease(v56);
  if (v57 <= v53)
    v58 = v53;
  else
    v58 = v57;
  if (v57 >= v53)
    v59 = v53;
  else
    v59 = v57;
  if ((uint64_t)(v58 - v59) < 8)
  {
    swift_bridgeObjectRelease(a1);
LABEL_44:
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(a2);
    if (v26 >= v28)
      return a2;
    else
      return a1;
  }
  v60 = qword_10047AA18;
  swift_bridgeObjectRetain(a2);
  if (v60 != -1)
    swift_once(&qword_10047AA18, sub_1000E1018);
  v61._object = (void *)0x80000001003E03C0;
  v61._countAndFlagsBits = 0xD00000000000004ELL;
  Log.default(_:isPrivate:)(v61, 0);
  v62 = sub_10000EDC8(&qword_100484608);
  inited = swift_initStackObject(v62, v76);
  *(_OWORD *)(inited + 16) = xmmword_1003B0F60;
  *(_QWORD *)(inited + 32) = v53;
  *(_QWORD *)(inited + 40) = a1;
  *(_QWORD *)(inited + 48) = v57;
  *(_QWORD *)(inited + 56) = a2;
  if (v57 >= v53)
    v64 = a1;
  else
    v64 = a2;
  swift_bridgeObjectRetain(v64);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(inited);
  v65 = swift_initStackObject(v62, v75);
  v66 = v65;
  *(_OWORD *)(v65 + 16) = xmmword_1003B0F60;
  *(_QWORD *)(v65 + 32) = v53;
  *(_QWORD *)(v65 + 40) = a1;
  if (v53 >= v57)
    v67 = a1;
  else
    v67 = a2;
  *(_QWORD *)(v65 + 48) = v57;
  *(_QWORD *)(v65 + 56) = a2;
  swift_bridgeObjectRetain(v67);
  swift_bridgeObjectRelease(v66);
  return v64;
}

uint64_t sub_100115370(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t result;

  swift_retain(v1);
  v3 = swift_bridgeObjectRetain(a1);
  v4 = (uint64_t)sub_100117AAC(v3);
  swift_bridgeObjectRelease(a1);
  swift_release(v1);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v11 = v4;
    else
      v11 = v4 & 0xFFFFFFFFFFFFFF8;
    v5 = _CocoaArrayWrapper.endIndex.getter(v11);
    if (!v5)
      goto LABEL_16;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      goto LABEL_16;
  }
  sub_1000A5770(0, v5 & ~(v5 >> 63), 0);
  if (v5 < 0)
    goto LABEL_36;
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
    {
      v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      v8 = *(_BYTE *)(v7 + 48);
      swift_unknownObjectRelease(v7);
    }
    else
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v4 + 8 * i + 32) + 48);
    }
    v10 = _swiftEmptyArrayStorage[2];
    v9 = _swiftEmptyArrayStorage[3];
    if (v10 >= v9 >> 1)
      sub_1000A5770((char *)(v9 > 1), v10 + 1, 1);
    _swiftEmptyArrayStorage[2] = v10 + 1;
    *((_BYTE *)&_swiftEmptyArrayStorage[4] + v10) = v8;
  }
LABEL_16:
  swift_bridgeObjectRelease(v4);
  v12 = (_QWORD *)sub_1000C9438((uint64_t)_swiftEmptyArrayStorage);
  v13 = _swiftEmptyArrayStorage[2];
  if (!v13)
  {
LABEL_30:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v31 = sub_100115640((uint64_t)v12);
    swift_bridgeObjectRelease(v12);
    if (v31 == 7)
      return 7;
    else
      return v31;
  }
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v14 = 0;
  while (1)
  {
    v15 = *((_BYTE *)&_swiftEmptyArrayStorage[4] + v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
    v18 = sub_1000C81A0(v15);
    v19 = v12[2];
    v20 = (v17 & 1) == 0;
    v21 = v19 + v20;
    if (__OFADD__(v19, v20))
      break;
    v22 = v17;
    if (v12[3] >= v21)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1000BF770();
    }
    else
    {
      sub_1000B98CC(v21, isUniquelyReferenced_nonNull_native);
      v23 = sub_1000C81A0(v15);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_37;
      v18 = v23;
    }
    swift_bridgeObjectRelease(0x8000000000000000);
    if ((v22 & 1) == 0)
    {
      v12[(v18 >> 6) + 8] |= 1 << v18;
      *(_BYTE *)(v12[6] + v18) = v15;
      *(_QWORD *)(v12[7] + 8 * v18) = 0;
      v25 = v12[2];
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        goto LABEL_35;
      v12[2] = v27;
    }
    v28 = v12[7];
    v29 = *(_QWORD *)(v28 + 8 * v18);
    v26 = __OFADD__(v29, 1);
    v30 = v29 + 1;
    if (v26)
      goto LABEL_34;
    ++v14;
    *(_QWORD *)(v28 + 8 * v18) = v30;
    if (v13 == v14)
    {
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for WorldPlaneType);
  __break(1u);
  return result;
}

uint64_t sub_100115640(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = a1 + 64;
  v2 = *(_BYTE *)(a1 + 32);
  v3 = 1 << v2;
  v4 = -1;
  if (1 << v2 < 64)
    v4 = ~(-1 << (1 << v2));
  v5 = v4 & *(_QWORD *)(a1 + 64);
  if (!v5)
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 > 6)
    {
      v9 = (unint64_t)(v3 + 63) >> 6;
      v22 = *(_QWORD *)(a1 + 72);
      if (v22)
      {
        v6 = 1;
LABEL_32:
        v8 = (v22 - 1) & v22;
        v7 = __clz(__rbit64(v22)) + (v6 << 6);
        goto LABEL_5;
      }
      if (v6 >= 8)
      {
        v22 = *(_QWORD *)(a1 + 80);
        if (v22)
        {
          v6 = 2;
          goto LABEL_32;
        }
        v22 = *(_QWORD *)(a1 + 88);
        if (v22)
        {
          v6 = 3;
          goto LABEL_32;
        }
LABEL_39:
        if (v6 >= 9)
        {
          v22 = *(_QWORD *)(a1 + 96);
          if (v22)
          {
            v6 = 4;
          }
          else
          {
            v22 = *(_QWORD *)(a1 + 104);
            if (!v22)
              goto LABEL_46;
            v6 = 5;
          }
          goto LABEL_32;
        }
      }
    }
    return 7;
  }
  v6 = 0;
  v7 = __clz(__rbit64(v5));
  v8 = (v5 - 1) & v5;
  v9 = (unint64_t)(v3 + 63) >> 6;
LABEL_5:
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_BYTE *)(v10 + v7);
  v13 = *(_QWORD *)(v11 + 8 * v7);
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v6 << 6);
      goto LABEL_7;
    }
    v18 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v18 >= v9)
      return v12;
    v19 = *(_QWORD *)(v1 + 8 * v18);
    ++v6;
    if (!v19)
    {
      v6 = v18 + 1;
      if (v18 + 1 >= v9)
        return v12;
      v19 = *(_QWORD *)(v1 + 8 * v6);
      if (!v19)
      {
        v6 = v18 + 2;
        if (v18 + 2 >= v9)
          return v12;
        v19 = *(_QWORD *)(v1 + 8 * v6);
        if (!v19)
        {
          v6 = v18 + 3;
          if (v18 + 3 >= v9)
            return v12;
          v19 = *(_QWORD *)(v1 + 8 * v6);
          if (!v19)
            break;
        }
      }
    }
LABEL_27:
    v8 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v6 << 6);
LABEL_7:
    v16 = *(_BYTE *)(v10 + v15);
    v17 = *(_QWORD *)(v11 + 8 * v15);
    if (v13 < v17)
      v12 = v16;
    if (v13 <= v17)
      v13 = v17;
  }
  v20 = v18 + 4;
  if (v20 >= v9)
    return v12;
  v19 = *(_QWORD *)(v1 + 8 * v20);
  if (v19)
  {
    v6 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v6 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v6 >= v9)
      return v12;
    v19 = *(_QWORD *)(v1 + 8 * v6);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
  __break(1u);
LABEL_46:
  v23 = 0;
  v24 = 6;
  if (v9 > 6)
    v24 = v9;
  while (v24 - 6 != v23)
  {
    v22 = *(_QWORD *)(a1 + 112 + 8 * v23++);
    if (v22)
    {
      v6 = v23 + 5;
      goto LABEL_32;
    }
  }
  return 7;
}

void sub_100115860(uint64_t a1, double a2, double a3)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  NSString *v16;
  Class isa;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  Class v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Class v29;
  Class v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v41;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD v47[8];

  SCNVector3.init(_:)(a2);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  SCNVector3.init(_:)(a3);
  v47[0] = v4;
  v47[1] = v6;
  v47[2] = v8;
  v47[3] = v9;
  v47[4] = v10;
  v47[5] = v11;
  v12 = objc_msgSend(objc_allocWithZone((Class)NSData), "initWithBytes:length:", v47, 24);
  v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  v15 = v14;

  v16 = SCNGeometrySourceSemanticVertex;
  sub_10003649C(v13, v15);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v18 = objc_msgSend((id)objc_opt_self(SCNGeometrySource), "geometrySourceWithData:semantic:vectorCount:floatComponents:componentsPerVector:bytesPerComponent:dataOffset:dataStride:", isa, v16, 2, 1, 3, 4, 0, 12);

  sub_100036300(v13, v15);
  v19 = objc_msgSend(objc_allocWithZone((Class)NSData), "initWithBytes:length:", &unk_10043BFE0, 8);
  v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  v22 = v21;

  sub_10003649C(v20, v22);
  v23 = Data._bridgeToObjectiveC()().super.isa;
  sub_100036300(v20, v22);
  v24 = objc_msgSend((id)objc_opt_self(SCNGeometryElement), "geometryElementWithData:primitiveType:primitiveCount:bytesPerIndex:", v23, 2, 1, 4);

  v25 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
  v26 = swift_allocObject(v25, 40, 7);
  *(_OWORD *)(v26 + 16) = xmmword_1003B0F00;
  *(_QWORD *)(v26 + 32) = v18;
  v45 = v26;
  specialized Array._endMutation()(v26);
  v27 = v45;
  v28 = swift_allocObject(v25, 40, 7);
  *(_OWORD *)(v28 + 16) = xmmword_1003B0F00;
  *(_QWORD *)(v28 + 32) = v24;
  v46 = v28;
  specialized Array._endMutation()(v28);
  sub_100018148(0, &qword_1004845E0, SCNGeometrySource_ptr);
  v43 = v18;
  v41 = v24;
  v29 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v27);
  sub_100018148(0, &qword_1004845E8, SCNGeometryElement_ptr);
  v30 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v46);
  v31 = objc_msgSend((id)objc_opt_self(SCNGeometry), "geometryWithSources:elements:", v29, v30);

  v32 = objc_msgSend(v31, "firstMaterial");
  if (v32)
  {
    v33 = v32;
    objc_msgSend(v32, "setLightingModelName:", SCNLightingModelConstant);

  }
  v34 = objc_msgSend(v31, "firstMaterial");
  if (v34)
  {
    v35 = v34;
    v36 = objc_msgSend(v34, "diffuse");

    objc_msgSend(v36, "setContents:", a1);
  }
  v37 = objc_msgSend((id)objc_opt_self(SCNNode), "nodeWithGeometry:", v31);
  v38 = *(void **)(v44 + 256);
  if (v38)
  {
    v39 = v38;
    objc_msgSend(v39, "addChildNode:", v37);
    sub_100036300(v13, v15);
    sub_100036300(v20, v22);

  }
  else
  {
    sub_100036300(v13, v15);
    sub_100036300(v20, v22);
  }

}

uint64_t sub_100115C74@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 192);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_100115CA4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 192);
  *a2 = v2;
  return swift_retain(v2);
}

void sub_100115CB4(uint64_t *a1)
{
  uint64_t v1;

  sub_10010FC94(a1, v1);
}

uint64_t sub_100115CBC(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  Swift::Int v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  Swift::Int v14;
  float v15;
  uint64_t v16;
  float v17;
  float *v18;
  uint64_t v19;
  Swift::Int v20;
  Swift::Int v21;
  __int128 v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  int v28;
  Swift::Int v29;
  float *v30;
  float *v31;
  Swift::Int v32;
  float v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  float v94;
  __int128 v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  unint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  Swift::Int v110;
  uint64_t v111;
  float *v112;

  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return result;
      v88 = *a1;
      v89 = *a1 + 32;
      v90 = -1;
      v91 = 1;
      while (1)
      {
        v92 = v89;
        v93 = v90;
        do
        {
          v94 = *(float *)(v92 + 24);
          if (v94 >= *(float *)(v92 - 8))
            break;
          if (!v88)
            goto LABEL_148;
          v95 = *(_OWORD *)v92;
          v96 = *(_QWORD *)(v92 + 16);
          v97 = *(_OWORD *)(v92 - 16);
          *(_OWORD *)v92 = *(_OWORD *)(v92 - 32);
          *(_OWORD *)(v92 + 16) = v97;
          *(_QWORD *)(v92 - 16) = v96;
          *(float *)(v92 - 8) = v94;
          *(_OWORD *)(v92 - 32) = v95;
          v92 -= 32;
        }
        while (!__CFADD__(v93++, 1));
        ++v91;
        --v90;
        v89 += 32;
        if (v91 == v3)
          return result;
      }
    }
    goto LABEL_144;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_143;
  v6 = result;
  v105 = a1;
  if (v3 <= 1)
  {
    v9 = _swiftEmptyArrayStorage;
    v112 = (float *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v13 = _swiftEmptyArrayStorage[2];
      v12 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_109;
    }
    v108 = _swiftEmptyArrayStorage;
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_10000EDC8(&qword_100481280);
    result = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)(result + 16) = v7;
    v108 = (_QWORD *)result;
    v112 = (float *)(result + 32);
  }
  v10 = 0;
  v11 = *a1;
  v106 = *a1 + 88;
  v107 = *a1 + 24;
  v12 = (char *)_swiftEmptyArrayStorage;
  v109 = v6;
  v110 = v3;
  v111 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(float *)(v107 + 32 * v10);
      v16 = 32 * v14;
      v17 = *(float *)(v107 + 32 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (float *)(v106 + 32 * v14);
        while (v15 < v17 != *v18 >= *(v18 - 8))
        {
          ++v10;
          v18 += 8;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14)
          goto LABEL_145;
        if (v14 < v10)
        {
          v19 = 32 * v10 - 32;
          v20 = v10;
          v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11)
                goto LABEL_151;
              v24 = (_OWORD *)(v11 + v16);
              v25 = (_OWORD *)(v11 + v19);
              v26 = *(_OWORD *)(v11 + v16);
              v27 = *(_QWORD *)(v11 + v16 + 16);
              v28 = *(_DWORD *)(v11 + v16 + 24);
              if (v16 != v19 || v24 >= v25 + 2)
              {
                v22 = v25[1];
                *v24 = *v25;
                v24[1] = v22;
              }
              v23 = v11 + v19;
              *(_OWORD *)v23 = v26;
              *(_QWORD *)(v23 + 16) = v27;
              *(_DWORD *)(v23 + 24) = v28;
            }
            ++v21;
            v19 -= 32;
            v16 += 32;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 < v3)
    {
      if (__OFSUB__(v10, v14))
        goto LABEL_142;
      if (v10 - v14 < v6)
      {
        v29 = v14 + v6;
        if (__OFADD__(v14, v6))
          goto LABEL_146;
        if (v29 >= v3)
          v29 = v3;
        if (v29 < v14)
          goto LABEL_147;
        if (v10 != v29)
        {
          v30 = (float *)(v11 + 32 * v10);
          do
          {
            v31 = v30;
            v32 = v14;
            do
            {
              v33 = v31[6];
              if (v33 >= *(v31 - 2))
                break;
              if (!v11)
                goto LABEL_149;
              v34 = *(_OWORD *)v31;
              v35 = *((_QWORD *)v31 + 2);
              v36 = *((_OWORD *)v31 - 1);
              *(_OWORD *)v31 = *((_OWORD *)v31 - 2);
              *((_OWORD *)v31 + 1) = v36;
              *((_QWORD *)v31 - 2) = v35;
              *(v31 - 2) = v33;
              *((_OWORD *)v31 - 2) = v34;
              v31 -= 8;
              ++v32;
            }
            while (v10 != v32);
            ++v10;
            v30 += 8;
          }
          while (v10 != v29);
          v10 = v29;
        }
      }
    }
    if (v10 < v14)
    {
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    result = swift_isUniquelyReferenced_nonNull_native(v12);
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1000A7838(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
      v12 = (char *)result;
    }
    v38 = *((_QWORD *)v12 + 2);
    v37 = *((_QWORD *)v12 + 3);
    v13 = v38 + 1;
    v11 = v111;
    if (v38 >= v37 >> 1)
    {
      result = (uint64_t)sub_1000A7838((char *)(v37 > 1), v38 + 1, 1, v12);
      v11 = v111;
      v12 = (char *)result;
    }
    *((_QWORD *)v12 + 2) = v13;
    v39 = v12 + 32;
    v40 = &v12[16 * v38 + 32];
    *(_QWORD *)v40 = v14;
    *((_QWORD *)v40 + 1) = v10;
    if (v38)
      break;
    v13 = 1;
LABEL_15:
    v6 = v109;
    v3 = v110;
    if (v10 >= v110)
    {
      v9 = v108;
LABEL_109:
      result = (uint64_t)v12;
      v108 = v9;
      if (v13 < 2)
        goto LABEL_99;
      v99 = *v105;
      while (1)
      {
        v100 = v13 - 2;
        if (v13 < 2)
          break;
        if (!v99)
          goto LABEL_152;
        v87 = result;
        v101 = *(_QWORD *)(result + 32 + 16 * v100);
        v102 = *(_QWORD *)(result + 32 + 16 * (v13 - 1) + 8);
        result = sub_100116380((float *)(v99 + 32 * v101), (float *)(v99 + 32 * *(_QWORD *)(result + 32 + 16 * (v13 - 1))), v99 + 32 * v102, v112);
        if (v1)
          goto LABEL_98;
        if (v102 < v101)
          goto LABEL_139;
        result = swift_isUniquelyReferenced_nonNull_native(v87);
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1000A7930(v87);
          v87 = result;
        }
        if (v100 >= *(_QWORD *)(v87 + 16))
          goto LABEL_140;
        v103 = (_QWORD *)(v87 + 32 + 16 * v100);
        *v103 = v101;
        v103[1] = v102;
        v104 = *(_QWORD *)(v87 + 16);
        if (v13 > v104)
          goto LABEL_141;
        memmove((void *)(v87 + 32 + 16 * (v13 - 1)), (const void *)(v87 + 32 + 16 * v13), 16 * (v104 - v13));
        result = v87;
        *(_QWORD *)(v87 + 16) = v104 - 1;
        v13 = v104 - 1;
        if (v104 <= 2)
          goto LABEL_99;
      }
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
      return result;
    }
  }
  while (1)
  {
    v41 = v13 - 1;
    if (v13 >= 4)
    {
      v46 = &v39[2 * v13];
      v47 = *(v46 - 8);
      v48 = *(v46 - 7);
      v52 = __OFSUB__(v48, v47);
      v49 = v48 - v47;
      if (v52)
        goto LABEL_126;
      v51 = *(v46 - 6);
      v50 = *(v46 - 5);
      v52 = __OFSUB__(v50, v51);
      v44 = v50 - v51;
      v45 = v52;
      if (v52)
        goto LABEL_127;
      v53 = v13 - 2;
      v54 = &v39[2 * v13 - 4];
      v56 = *v54;
      v55 = v54[1];
      v52 = __OFSUB__(v55, v56);
      v57 = v55 - v56;
      if (v52)
        goto LABEL_128;
      v52 = __OFADD__(v44, v57);
      v58 = v44 + v57;
      if (v52)
        goto LABEL_130;
      if (v58 >= v49)
      {
        v76 = &v39[2 * v41];
        v78 = *v76;
        v77 = v76[1];
        v52 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v52)
          goto LABEL_136;
        v69 = v44 < v79;
        goto LABEL_87;
      }
    }
    else
    {
      if (v13 != 3)
      {
        v70 = *((_QWORD *)v12 + 4);
        v71 = *((_QWORD *)v12 + 5);
        v52 = __OFSUB__(v71, v70);
        v63 = v71 - v70;
        v64 = v52;
        goto LABEL_81;
      }
      v43 = *((_QWORD *)v12 + 4);
      v42 = *((_QWORD *)v12 + 5);
      v52 = __OFSUB__(v42, v43);
      v44 = v42 - v43;
      v45 = v52;
    }
    if ((v45 & 1) != 0)
      goto LABEL_129;
    v53 = v13 - 2;
    v59 = &v39[2 * v13 - 4];
    v61 = *v59;
    v60 = v59[1];
    v62 = __OFSUB__(v60, v61);
    v63 = v60 - v61;
    v64 = v62;
    if (v62)
      goto LABEL_131;
    v65 = &v39[2 * v41];
    v67 = *v65;
    v66 = v65[1];
    v52 = __OFSUB__(v66, v67);
    v68 = v66 - v67;
    if (v52)
      goto LABEL_133;
    if (__OFADD__(v63, v68))
      goto LABEL_135;
    if (v63 + v68 >= v44)
    {
      v69 = v44 < v68;
LABEL_87:
      if (v69)
        v41 = v53;
      goto LABEL_89;
    }
LABEL_81:
    if ((v64 & 1) != 0)
      goto LABEL_132;
    v72 = &v39[2 * v41];
    v74 = *v72;
    v73 = v72[1];
    v52 = __OFSUB__(v73, v74);
    v75 = v73 - v74;
    if (v52)
      goto LABEL_134;
    if (v75 < v63)
      goto LABEL_15;
LABEL_89:
    v80 = v41 - 1;
    if (v41 - 1 >= v13)
    {
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
      goto LABEL_137;
    }
    if (!v11)
      goto LABEL_150;
    v81 = v12;
    v82 = &v39[2 * v80];
    v83 = *v82;
    v84 = &v39[2 * v41];
    v85 = v84[1];
    result = sub_100116380((float *)(v11 + 32 * *v82), (float *)(v11 + 32 * *v84), v11 + 32 * v85, v112);
    if (v1)
      break;
    if (v85 < v83)
      goto LABEL_123;
    if (v41 > *((_QWORD *)v81 + 2))
      goto LABEL_124;
    *v82 = v83;
    v39[2 * v80 + 1] = v85;
    v86 = *((_QWORD *)v81 + 2);
    if (v41 >= v86)
      goto LABEL_125;
    v12 = v81;
    v13 = v86 - 1;
    result = (uint64_t)memmove(&v39[2 * v41], v84 + 2, 16 * (v86 - 1 - v41));
    *((_QWORD *)v81 + 2) = v86 - 1;
    v11 = v111;
    if (v86 <= 2)
      goto LABEL_15;
  }
  v87 = (uint64_t)v81;
LABEL_98:
  result = v87;
LABEL_99:
  swift_bridgeObjectRelease(result);
  v108[2] = 0;
  return swift_bridgeObjectRelease(v108);
}

uint64_t sub_100116380(float *__dst, float *__src, unint64_t a3, float *a4)
{
  float *v4;
  float *v6;
  float *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  float *v15;
  float *v16;
  float *v17;
  float *v18;
  __int128 v19;
  uint64_t v20;
  float *v21;
  float *v22;
  float *v23;
  BOOL v24;
  __int128 v25;
  size_t v26;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = (char *)__src - (char *)__dst;
  v9 = (char *)__src - (char *)__dst + 31;
  if ((char *)__src - (char *)__dst >= 0)
    v9 = (char *)__src - (char *)__dst;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 31;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 5;
  if (v10 >= v13)
  {
    v20 = 8 * v13;
    if (a4 != __src || &__src[v20] <= a4)
      memmove(a4, __src, 32 * v13);
    v15 = &v4[v20];
    if (v7 >= v6 || v11 < 32)
      goto LABEL_43;
    v21 = (float *)(a3 - 32);
    while (1)
    {
      v22 = v21 + 8;
      if (*(v15 - 2) >= *(v6 - 2))
      {
        v23 = v15 - 8;
        if (v22 != v15)
        {
          v15 -= 8;
          goto LABEL_40;
        }
        v24 = v21 >= v15;
        v15 -= 8;
        if (v24)
          goto LABEL_40;
      }
      else
      {
        v23 = v6 - 8;
        if (v22 != v6)
        {
          v6 -= 8;
LABEL_40:
          v25 = *((_OWORD *)v23 + 1);
          *(_OWORD *)v21 = *(_OWORD *)v23;
          *((_OWORD *)v21 + 1) = v25;
          goto LABEL_41;
        }
        v24 = v21 >= v6;
        v6 -= 8;
        if (v24)
          goto LABEL_40;
      }
LABEL_41:
      if (v6 > v7)
      {
        v21 -= 8;
        if (v15 > v4)
          continue;
      }
      goto LABEL_43;
    }
  }
  v14 = 8 * v10;
  if (a4 != __dst || &__dst[v14] <= a4)
    memmove(a4, __dst, v14 * 4);
  v15 = &v4[v14];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    while (1)
    {
      if (v6[6] >= v4[6])
      {
        v18 = v4 + 8;
        v17 = v4;
        v16 = v6;
        if (v7 == v4)
        {
          v4 += 8;
          if (v7 < v18)
            goto LABEL_20;
        }
        else
        {
          v4 += 8;
        }
      }
      else
      {
        v16 = v6 + 8;
        v17 = v6;
        if (v7 == v6 && v7 < v16)
          goto LABEL_20;
      }
      v19 = *((_OWORD *)v17 + 1);
      *(_OWORD *)v7 = *(_OWORD *)v17;
      *((_OWORD *)v7 + 1) = v19;
LABEL_20:
      v7 += 8;
      if (v4 < v15)
      {
        v6 = v16;
        if ((unint64_t)v16 < a3)
          continue;
      }
      break;
    }
  }
  v6 = v7;
LABEL_43:
  v26 = ((char *)v15 - (char *)v4 + ((char *)v15 - (char *)v4 < 0 ? 0x1FuLL : 0)) & 0xFFFFFFFFFFFFFFE0;
  if (v6 != v4 || v6 >= (float *)((char *)v4 + v26))
    memmove(v6, v4, v26);
  return 1;
}

void sub_10011659C(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  __n128 *v3;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t (*v12)(__n128);
  __n128 v13;
  void *v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  void *v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  unint64_t v26;
  __int128 v27;
  unint64_t v28;
  uint64_t v29;
  __n128 *v30;
  __n128 v31;
  unint64_t v32;
  BOOL v33;
  float v34;
  float v35;
  __n128 v36;
  char v37;
  char isUniquelyReferenced_nonNull_native;
  __n128 v39;
  unint64_t v40;
  unint64_t v41;
  __n128 *v42;
  uint64_t v43;
  __n128 *v44;
  float v45;
  __n128 v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  __n128 v58;
  __n128 v59;
  __n128 v60;
  __n128 v61;
  __n128 v62;
  __int128 v63;
  __n128 v64;
  __n128 v65;
  __n128 v66;
  __n128 v67;
  __int128 v68;
  __n128 *v69;
  _QWORD *v70;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (__n128 *)_swiftEmptyArrayStorage;
  if (!v2)
    return;
  v70 = _swiftEmptyArrayStorage;
  sub_1000A5744(0, v2, 0);
  v6 = 0;
  v7 = _swiftEmptyArrayStorage;
  v51 = a2;
  v52 = a1 + 32;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = a2 + 32;
  v50 = v2;
  do
  {
    v53 = v7;
    v10 = (__int128 *)(v52 + 32 * v6);
    v63 = *v10;
    v11 = *((_QWORD *)v10 + 2);
    v12 = *(uint64_t (**)(__n128))(*(_QWORD *)v11 + 160);
    v13 = swift_retain(v11);
    v14 = (void *)v12(v13);
    objc_msgSend(v14, "transform");
    v64 = v15;
    v58 = v17;
    v61 = v16;
    v56 = v18;

    v19.n128_f64[0] = simd_float4x4.position.getter(v64, v61, v58, v56);
    v62 = v19;
    v20 = (void *)((uint64_t (*)(void))v12)();
    objc_msgSend(v20, "transform");
    v65 = v21;
    v57 = v23;
    v59 = v22;
    v55 = v24;

    v25.n128_f64[0] = simd_float4x4.up.getter(v65, v59, v57, v55);
    v60 = v25;
    swift_retain(v11);
    swift_bridgeObjectRetain(a2);
    v54 = v6;
    if (!v8)
      goto LABEL_25;
    v26 = 0;
    v27 = v63;
    while (2)
    {
      if (v26 <= v8)
        v28 = v8;
      else
        v28 = v26;
      while (2)
      {
        if (v26 == v28)
        {
          __break(1u);
          return;
        }
        v29 = 0;
        v30 = (__n128 *)(v9 + 32 * v26);
        v31 = *v30;
        v32 = v30[1].n128_u64[0];
        ++v26;
        v33 = 1;
        v66 = v31;
        while (!v33)
        {
          if (v29 == 2)
            goto LABEL_19;
          v33 = 0;
LABEL_11:
          ++v29;
        }
        v67 = v31;
        v34 = *(float *)((unint64_t)&v67 & 0xFFFFFFFFFFFFFFF3 | (4 * (v29 & 3)));
        v68 = v27;
        v35 = *(float *)((unint64_t)&v68 & 0xFFFFFFFFFFFFFFF3 | (4 * (v29 & 3)));
        v33 = v34 == v35;
        if (v29 != 2)
          goto LABEL_11;
        if (v34 != v35)
        {
LABEL_19:
          swift_retain(v32);
          break;
        }
        type metadata accessor for WorldPlane(0);
        swift_retain_n(v32, 2, v36);
        swift_retain(v11);
        v37 = static WorldPlane.== infix(_:_:)(v32, v11);
        swift_release(v32);
        swift_release(v11);
        if ((v37 & 1) != 0)
        {
          swift_release(v32);
          v27 = v63;
          if (v26 != v8)
            continue;
          goto LABEL_25;
        }
        break;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
      v69 = v3;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1000A5718(0, v3[1].n128_u64[0] + 1, 1);
        v3 = v69;
      }
      v27 = v63;
      v39 = v66;
      v41 = v3[1].n128_u64[0];
      v40 = v3[1].n128_u64[1];
      if (v41 >= v40 >> 1)
      {
        sub_1000A5718((_QWORD *)(v40 > 1), v41 + 1, 1);
        v27 = v63;
        v39 = v66;
        v3 = v69;
      }
      v3[1].n128_u64[0] = v41 + 1;
      v42 = &v3[2 * v41];
      v42[2] = v39;
      v42[3].n128_u64[0] = v32;
      if (v26 != v8)
        continue;
      break;
    }
LABEL_25:
    a2 = v51;
    swift_bridgeObjectRelease(v51);
    swift_release(v11);
    v43 = v3[1].n128_i64[0];
    if (v43)
    {
      type metadata accessor for PlaneUtil(0);
      v44 = v3 + 2;
      v45 = 0.0;
      do
      {
        v46 = *v44;
        v44 += 2;
        v45 = v45 + static PlaneUtil.distance(point:plane:)(v46, v62, v60);
        --v43;
      }
      while (v43);
    }
    else
    {
      v45 = 0.0;
    }
    swift_release(v3);
    v7 = v53;
    v70 = v53;
    v48 = v53[2];
    v47 = v53[3];
    if (v48 >= v47 >> 1)
    {
      sub_1000A5744((_QWORD *)(v47 > 1), v48 + 1, 1);
      v7 = v70;
    }
    v7[2] = v48 + 1;
    v49 = &v7[4 * v48];
    *((_OWORD *)v49 + 2) = v63;
    v6 = v54 + 1;
    v49[6] = v11;
    *((float *)v49 + 14) = v45;
    v3 = (__n128 *)_swiftEmptyArrayStorage;
  }
  while (v54 + 1 != v50);
}

void sub_100116930(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  _BYTE *v10;
  uint64_t (*v11)(__n128);
  __n128 v12;
  void *v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  double v18;
  void *v19;
  char **v20;
  void *v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  float32x4_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  unint64_t v31;
  uint64_t v32;
  __int128 *v33;
  __int128 v34;
  uint64_t v35;
  BOOL v36;
  float v37;
  float v38;
  __n128 v39;
  char v40;
  char isUniquelyReferenced_nonNull_native;
  __int128 v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  float v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(__n128);
  __n128 v52;
  void *v53;
  __n128 v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  float32x4_t v58;
  float32x4_t v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  float32x4_t v68;
  __int128 v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;
  __n128 v75;
  __n128 v76;
  __n128 v77;
  __n128 v78;
  __n128 v79;
  __n128 v80;
  __int128 v81;
  __n128 v82;
  float32x4_t v83;
  __int128 v84;
  __int128 v85;
  _QWORD *v86;
  _QWORD *v87;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v87 = _swiftEmptyArrayStorage;
    sub_1000A5744(0, v2, 0);
    v5 = 0;
    v6 = _swiftEmptyArrayStorage;
    v7 = a1 + 32;
    v8 = a2 + 32;
    v64 = v2;
    v65 = a2;
    v63 = a1 + 32;
    do
    {
      v9 = (__int128 *)(v7 + 32 * v5);
      v69 = *v9;
      v10 = (_BYTE *)*((_QWORD *)v9 + 2);
      if (v10[48] == 6)
      {
        v66 = v6;
        v67 = v5;
        v11 = *(uint64_t (**)(__n128))(*(_QWORD *)v10 + 160);
        v12 = swift_retain(v10);
        v13 = (void *)v11(v12);
        objc_msgSend(v13, "transform");
        v76 = v15;
        v79 = v14;
        v70 = v17;
        v73 = v16;

        v18 = simd_float4x4.position.getter(v79, v76, v73, v70);
        v19 = (void *)((uint64_t (*)(double))v11)(v18);
        v20 = &selRef_renderer_didAddNode_forAnchor_;
        v21 = v19;
        objc_msgSend(v19, "transform");
        v77 = v23;
        v80 = v22;
        v71 = v25;
        v74 = v24;

        *(double *)v26.i64 = simd_float4x4.up.getter(v80, v77, v74, v71);
        v68 = v26;
        v27 = *(_QWORD *)(a2 + 16);
        swift_retain(v10);
        swift_bridgeObjectRetain(a2);
        if (v27)
        {
          v28 = 0;
          v29 = _swiftEmptyArrayStorage;
          v30 = v69;
          while (2)
          {
            if (v28 <= v27)
              v31 = v27;
            else
              v31 = v28;
            while (2)
            {
              if (v28 == v31)
              {
                __break(1u);
                return;
              }
              v32 = 0;
              v33 = (__int128 *)(v8 + 32 * v28);
              v34 = *v33;
              v35 = *((_QWORD *)v33 + 2);
              ++v28;
              v36 = 1;
              v81 = v34;
              while (1)
              {
                while (!v36)
                {
                  if (v32 == 2)
                    goto LABEL_20;
                  v36 = 0;
                  ++v32;
                }
                v84 = v34;
                v37 = *(float *)((unint64_t)&v84 & 0xFFFFFFFFFFFFFFF3 | (4 * (v32 & 3)));
                v85 = v30;
                v38 = *(float *)((unint64_t)&v85 & 0xFFFFFFFFFFFFFFF3 | (4 * (v32 & 3)));
                v36 = v37 == v38;
                if (v32 == 2)
                  break;
                ++v32;
              }
              if (v37 != v38)
              {
LABEL_20:
                swift_retain(v35);
                break;
              }
              type metadata accessor for WorldPlane(0);
              swift_retain_n(v35, 2, v39);
              swift_retain(v10);
              v40 = static WorldPlane.== infix(_:_:)(v35, v10);
              swift_release(v35);
              swift_release(v10);
              if ((v40 & 1) != 0)
              {
                swift_release(v35);
                v30 = v69;
                if (v28 != v27)
                  continue;
                goto LABEL_29;
              }
              break;
            }
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v29);
            v86 = v29;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1000A5718(0, v29[2] + 1, 1);
              v29 = v86;
            }
            v30 = v69;
            v42 = v81;
            v44 = v29[2];
            v43 = v29[3];
            if (v44 >= v43 >> 1)
            {
              sub_1000A5718((_QWORD *)(v43 > 1), v44 + 1, 1);
              v42 = v81;
              v30 = v69;
              v29 = v86;
            }
            v29[2] = v44 + 1;
            v45 = &v29[4 * v44];
            *((_OWORD *)v45 + 2) = v42;
            v45[6] = v35;
            v20 = &selRef_renderer_didAddNode_forAnchor_;
            if (v28 != v27)
              continue;
            break;
          }
        }
        else
        {
          v29 = _swiftEmptyArrayStorage;
        }
LABEL_29:
        a2 = v65;
        swift_bridgeObjectRelease(v65);
        swift_release(v10);
        v48 = v29[2];
        if (v48)
        {
          swift_retain(v29);
          v47 = 0.0;
          v49 = 6;
          do
          {
            v50 = v29[v49];
            v51 = *(uint64_t (**)(__n128))(*(_QWORD *)v50 + 160);
            v52 = swift_retain(v50);
            v53 = (void *)v51(v52);
            objc_msgSend(v53, v20[42]);
            v78 = v55;
            v82 = v54;
            v72 = v57;
            v75 = v56;

            *(double *)v58.i64 = simd_float4x4.up.getter(v82, v78, v75, v72);
            v83 = v58;
            swift_release(v50);
            v59 = vmulq_f32(v68, v83);
            v47 = v47 + (float)(1.0 - fabsf(v59.f32[2] + vaddv_f32(*(float32x2_t *)v59.f32)));
            v49 += 4;
            --v48;
          }
          while (v48);
          swift_release_n(v29, 2);
        }
        else
        {
          swift_release(v29);
          v47 = 0.0;
        }
        v7 = v63;
        v2 = v64;
        v6 = v66;
        v5 = v67;
      }
      else
      {
        v46 = v6;
        swift_retain(v10);
        v6 = v46;
        v47 = 0.0;
      }
      v87 = v6;
      v61 = v6[2];
      v60 = v6[3];
      if (v61 >= v60 >> 1)
      {
        sub_1000A5744((_QWORD *)(v60 > 1), v61 + 1, 1);
        v6 = v87;
      }
      v6[2] = v61 + 1;
      v62 = &v6[4 * v61];
      *((_OWORD *)v62 + 2) = v69;
      ++v5;
      v62[6] = v10;
      *((float *)v62 + 14) = v47;
    }
    while (v5 != v2);
  }
}

void sub_100116D58(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  _BYTE v20[24];
  __int128 v21;
  _QWORD *v22;

  v3 = a2 - a1;
  if (__OFSUB__(a2, a1))
    goto LABEL_16;
  if (v3)
  {
    v6 = a1;
    v22 = _swiftEmptyArrayStorage;
    sub_1000A57C4(0, v3 & ~(v3 >> 63), 0);
    if (a2 < v6 || v3 < 0)
      goto LABEL_17;
    v7 = v22;
    while (a2 != v6)
    {
      swift_beginAccess(a3 + 25, v20, 32, 0);
      v8 = a3[27];
      v9 = *(_QWORD *)(v8 + 16);
      v10 = __OFSUB__(v9, v6);
      v11 = v9 - v6;
      if (v10)
        goto LABEL_14;
      v12 = v11 - 1;
      if (__OFSUB__(v11, 1))
        goto LABEL_15;
      v13 = a3[25];
      v14 = a3[26];
      v15 = sub_10000EDC8(&qword_10047E530);
      RingBuffer.subscript.getter(&v21, v12, v13, v14, v8, v15);
      swift_endAccess(v20);
      v16 = v21;
      v22 = v7;
      v18 = v7[2];
      v17 = v7[3];
      if (v18 >= v17 >> 1)
      {
        v19 = v21;
        sub_1000A57C4((_QWORD *)(v17 > 1), v18 + 1, 1);
        v16 = v19;
        v7 = v22;
      }
      v7[2] = v18 + 1;
      *(_OWORD *)&v7[2 * v18 + 4] = v16;
      if (a2 == ++v6)
        return;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
}

void *sub_100116ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_21;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v13))
  {
    v5 = 0;
    v6 = *(_QWORD *)(a2 + 16);
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0
         ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1)
         : *(id *)(a1 + 32 + 8 * v5);
      v8 = v7;
      if (__OFADD__(v5++, 1))
        break;
      v10 = (*(uint64_t (**)(void))((swift_isaMask & *v7) + 0xD0))();
      if (v6)
      {
        if (*(_QWORD *)(a2 + 32) == v10)
        {
LABEL_17:
          swift_bridgeObjectRelease(a1);
          return v8;
        }
        if (v6 != 1)
        {
          v11 = 5;
          while (1)
          {
            v12 = v11 - 3;
            if (__OFADD__(v11 - 4, 1))
              break;
            if (*(_QWORD *)(a2 + 8 * v11) == v10)
              goto LABEL_17;
            ++v11;
            if (v12 == v6)
              goto LABEL_4;
          }
          __break(1u);
          break;
        }
      }
LABEL_4:

      if (v5 == v4)
        goto LABEL_25;
    }
    __break(1u);
LABEL_21:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_25:
  swift_bridgeObjectRelease(a1);
  return 0;
}

_QWORD *sub_100117040(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(__n128);
  __n128 v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;

  v2 = sub_10000EDC8(&qword_1004816B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_10000EDC8(&qword_100484618);
  v38 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_10000EDC8(&qword_100484620);
  v42 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_10000EDC8(&qword_100484628);
  v39 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_10000EDC8(&qword_100484630);
  v41 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(uint64_t (**)(__n128))(*(_QWORD *)v13 + 200);
  v15 = swift_retain(v13);
  v16 = v14(v15);
  v17 = swift_release(v13);
  v18 = (*(uint64_t (**)(__n128))(*(_QWORD *)v16 + 208))(v17);
  swift_release(v16);
  v47 = v18;
  if (qword_10047AA08 != -1)
    swift_once(&qword_10047AA08, sub_1000D25A8);
  v19 = (void *)qword_100482580;
  v46 = (id)qword_100482580;
  v20 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 1, 1, v20);
  v21 = v19;
  v22 = sub_10000EDC8(&qword_100484638);
  v23 = sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  v24 = sub_100043310(&qword_100484640, &qword_100484638, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v25 = sub_1000F2D40();
  Publisher.receive<A>(on:options:)(&v46, v4, v22, v23, v24, v25);
  sub_10011995C((uint64_t)v4);

  swift_release(v47);
  v26 = sub_100043310(&qword_100484648, &qword_100484618, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v27 = swift_retain(a1);
  v28 = v40;
  Publisher.filter(_:)(sub_10011999C, a1, v40, v26, v27);
  v29 = swift_release(a1);
  (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v6, v28, v29);
  v30 = sub_100043310(&qword_100484650, &qword_100484620, (uint64_t)&protocol conformance descriptor for Publishers.Filter<A>);
  v31 = v45;
  Publisher.compactMap<A>(_:)(sub_10010F550, 0, v45, &type metadata for Frame, v30);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v31);
  v32 = v43;
  Publishers.CompactMap.map<A>(_:)(sub_10010F5C4, 0, v43, &type metadata for DepthEdgeDetector.Input);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v32);
  v33 = sub_100043310(&qword_100484658, &qword_100484630, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v34 = v44;
  v35 = Publisher.eraseToAnyPublisher()(v44, v33);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v34);
  v36 = type metadata accessor for DepthEdgeDetector();
  swift_allocObject(v36, 104, 7);
  return sub_1000CD0F0(v35);
}

uint64_t sub_100117450(uint64_t a1, void (*a2)(uint64_t, __n128))
{
  uint64_t v4;
  uint64_t result;
  __n128 *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __n128 *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 *v14;
  __n128 v15;

  v4 = a1 + 32;
  result = swift_bridgeObjectRetain(a1);
  v6 = 0;
  v7 = 0;
  while (1)
  {
LABEL_6:
    v13 = *(_QWORD *)(a1 + 16);
    if (v7 == v13)
    {
      swift_bridgeObjectRelease(a1);
      return swift_bridgeObjectRelease(v6);
    }
    if (v7 >= v13)
      break;
    v14 = *(__n128 **)(v4 + 8 * v7);
    swift_bridgeObjectRetain(v14);
    result = swift_bridgeObjectRelease(v6);
    v6 = v14;
    ++v7;
    if (v14)
    {
      v8 = v14[1].n128_u64[0];
      if (v8)
      {
        v9 = 0;
        v10 = v14 + 3;
        while (v9 < v8)
        {
          ++v9;
          v11 = v10->n128_u64[0];
          v15 = v10[-1];
          v12 = swift_retain(v10->n128_u64[0]);
          a2(v12, v15);
          result = swift_release(v11);
          v8 = v6[1].n128_u64[0];
          v10 += 2;
          if (v9 == v8)
            goto LABEL_6;
        }
        __break(1u);
        break;
      }
    }
  }
  __break(1u);
  return result;
}

BOOL sub_100117550(float32x4_t a1, float a2)
{
  int32x4_t v2;
  float32x2_t v3;
  float32x2_t v4;
  int8x16_t v5;

  v2 = (int32x4_t)vmulq_f32(a1, a1);
  v2.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v2, 2), vadd_f32(*(float32x2_t *)v2.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v2.i8, 1))).u32[0];
  v3 = vrsqrte_f32((float32x2_t)v2.u32[0]);
  v4 = vmul_f32(v3, vrsqrts_f32((float32x2_t)v2.u32[0], vmul_f32(v3, v3)));
  v5 = (int8x16_t)vmulq_n_f32(a1, vmul_f32(v4, vrsqrts_f32((float32x2_t)v2.u32[0], vmul_f32(v4, v4))).f32[0]);
  v2.i32[0] = v5.i32[1];
  v4.i32[0] = vextq_s8(v5, v5, 8uLL).u32[0];
  v4.i32[1] = v5.i32[0];
  *(float32x2_t *)v5.i8 = vmul_f32(v4, 0);
  return fabsf(*(float *)v5.i32 + (float)(*(float *)v2.i32 + *(float *)&v5.i32[1])) < cosf((float)(90.0 - a2) * 0.017453);
}

BOOL sub_1001175EC(float32x4_t a1, float a2)
{
  int32x4_t v3;
  float32x2_t v4;
  float32x2_t v5;
  int8x16_t v6;
  float v7;

  v3 = (int32x4_t)vmulq_f32(a1, a1);
  v3.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v3, 2), vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v3.i8, 1))).u32[0];
  v4 = vrsqrte_f32((float32x2_t)v3.u32[0]);
  v5 = vmul_f32(v4, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v4, v4)));
  v6 = (int8x16_t)vmulq_n_f32(a1, vmul_f32(v5, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v5, v5))).f32[0]);
  v3.i32[0] = v6.i32[1];
  v5.i32[0] = vextq_s8(v6, v6, 8uLL).u32[0];
  v5.i32[1] = v6.i32[0];
  *(float32x2_t *)v6.i8 = vmul_f32(v5, 0);
  v7 = fabsf(*(float *)v6.i32 + (float)(*(float *)v3.i32 + *(float *)&v6.i32[1]));
  if (v7 > 1.0)
    v7 = 1.0;
  return (float)(acosf(v7) * 57.296) < a2;
}

void sub_10011768C(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *i;
  uint64_t v8;
  uint64_t (*v9)(__n128);
  __n128 v10;
  void *v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  float32x4_t v16;
  int32x4_t v17;
  float32x2_t v18;
  float32x2_t v19;
  int8x16_t v20;
  __int128 v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = a1 + 48;
    v4 = -(uint64_t)v1;
    v25 = a1 + 48;
    v26 = *(_QWORD *)(a1 + 16);
    do
    {
      if (v2 <= v1)
        v5 = v1;
      else
        v5 = v2;
      v6 = -(uint64_t)v5;
      for (i = (_QWORD *)(v3 + 32 * v2++); ; i += 4)
      {
        if (v6 + v2 == 1)
        {
          __break(1u);
          return;
        }
        v27 = *((_OWORD *)i - 1);
        v8 = *i;
        v9 = *(uint64_t (**)(__n128))(*(_QWORD *)*i + 160);
        v10 = swift_retain(*i);
        v11 = (void *)v9(v10);
        objc_msgSend(v11, "transform");
        v30 = v13;
        v31 = v12;
        v28 = v15;
        v29 = v14;

        *(double *)v16.i64 = simd_float4x4.up.getter(v31, v30, v29, v28);
        v17 = (int32x4_t)vmulq_f32(v16, v16);
        v17.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v17, 2), vadd_f32(*(float32x2_t *)v17.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v17.i8, 1))).u32[0];
        v18 = vrsqrte_f32((float32x2_t)v17.u32[0]);
        v19 = vmul_f32(v18, vrsqrts_f32((float32x2_t)v17.u32[0], vmul_f32(v18, v18)));
        v20 = (int8x16_t)vmulq_n_f32(v16, vmul_f32(v19, vrsqrts_f32((float32x2_t)v17.u32[0], vmul_f32(v19, v19))).f32[0]);
        v17.i32[0] = v20.i32[1];
        v19.i32[0] = vextq_s8(v20, v20, 8uLL).u32[0];
        v19.i32[1] = v20.i32[0];
        *(float32x2_t *)v20.i8 = vmul_f32(v19, 0);
        if (fabsf(*(float *)v20.i32 + (float)(*(float *)v17.i32 + *(float *)&v20.i32[1])) < 0.20791)
          break;
        swift_release(v8);
        ++v2;
        if (v4 + v2 == 1)
          return;
      }
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
        sub_1000A5718(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v21 = v27;
      v23 = _swiftEmptyArrayStorage[2];
      v22 = _swiftEmptyArrayStorage[3];
      if (v23 >= v22 >> 1)
      {
        sub_1000A5718((_QWORD *)(v22 > 1), v23 + 1, 1);
        v21 = v27;
      }
      _swiftEmptyArrayStorage[2] = v23 + 1;
      v24 = &_swiftEmptyArrayStorage[4 * v23];
      *((_OWORD *)v24 + 2) = v21;
      v24[6] = v8;
      v3 = v25;
      v1 = v26;
    }
    while (v4 + v2);
  }
}

void sub_10011788C(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *i;
  uint64_t v8;
  uint64_t (*v9)(__n128);
  __n128 v10;
  void *v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  float32x4_t v16;
  int32x4_t v17;
  float32x2_t v18;
  float32x2_t v19;
  int8x16_t v20;
  float v21;
  __int128 v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  __int128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = a1 + 48;
    v4 = -(uint64_t)v1;
    v26 = a1 + 48;
    v27 = *(_QWORD *)(a1 + 16);
    do
    {
      if (v2 <= v1)
        v5 = v1;
      else
        v5 = v2;
      v6 = -(uint64_t)v5;
      for (i = (_QWORD *)(v3 + 32 * v2++); ; i += 4)
      {
        if (v6 + v2 == 1)
        {
          __break(1u);
          return;
        }
        v28 = *((_OWORD *)i - 1);
        v8 = *i;
        v9 = *(uint64_t (**)(__n128))(*(_QWORD *)*i + 160);
        v10 = swift_retain(*i);
        v11 = (void *)v9(v10);
        objc_msgSend(v11, "transform");
        v31 = v13;
        v32 = v12;
        v29 = v15;
        v30 = v14;

        *(double *)v16.i64 = simd_float4x4.up.getter(v32, v31, v30, v29);
        v17 = (int32x4_t)vmulq_f32(v16, v16);
        v17.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v17, 2), vadd_f32(*(float32x2_t *)v17.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v17.i8, 1))).u32[0];
        v18 = vrsqrte_f32((float32x2_t)v17.u32[0]);
        v19 = vmul_f32(v18, vrsqrts_f32((float32x2_t)v17.u32[0], vmul_f32(v18, v18)));
        v20 = (int8x16_t)vmulq_n_f32(v16, vmul_f32(v19, vrsqrts_f32((float32x2_t)v17.u32[0], vmul_f32(v19, v19))).f32[0]);
        v17.i32[0] = v20.i32[1];
        v19.i32[0] = vextq_s8(v20, v20, 8uLL).u32[0];
        v19.i32[1] = v20.i32[0];
        *(float32x2_t *)v20.i8 = vmul_f32(v19, 0);
        v21 = fabsf(*(float *)v20.i32 + (float)(*(float *)v17.i32 + *(float *)&v20.i32[1]));
        if (v21 > 1.0)
          v21 = 1.0;
        if ((float)(acosf(v21) * 57.296) < 12.0)
          break;
        swift_release(v8);
        ++v2;
        if (v4 + v2 == 1)
          return;
      }
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
        sub_1000A5718(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v22 = v28;
      v24 = _swiftEmptyArrayStorage[2];
      v23 = _swiftEmptyArrayStorage[3];
      if (v24 >= v23 >> 1)
      {
        sub_1000A5718((_QWORD *)(v23 > 1), v24 + 1, 1);
        v22 = v28;
      }
      _swiftEmptyArrayStorage[2] = v24 + 1;
      v25 = &_swiftEmptyArrayStorage[4 * v24];
      *((_OWORD *)v25 + 2) = v22;
      v25[6] = v8;
      v3 = v26;
      v1 = v27;
    }
    while (v4 + v2);
  }
}

_QWORD *sub_100117AAC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(void);
  void *v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  float32x4_t v15;
  int32x4_t v16;
  float32x2_t v17;
  float32x2_t v18;
  int8x16_t v19;
  void *v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  float32x4_t v25;
  int32x4_t v26;
  float32x2_t v27;
  float32x2_t v28;
  int8x16_t v29;
  float v30;
  uint64_t v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;

  if ((unint64_t)a1 >> 62)
    goto LABEL_19;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, a1);
        v7 = v3 + 1;
        if (__OFADD__(v3, 1))
        {
LABEL_16:
          __break(1u);
          return _swiftEmptyArrayStorage;
        }
LABEL_9:
        v8 = *(uint64_t (**)(void))(*(_QWORD *)v6 + 160);
        v9 = (void *)v8();
        objc_msgSend(v9, "transform");
        v37 = v11;
        v39 = v10;
        v33 = v13;
        v35 = v12;

        *(double *)v15.i64 = simd_float4x4.up.getter(v39, v37, v35, v33);
        v16 = (int32x4_t)vmulq_f32(v15, v15);
        v16.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v16, 2), vadd_f32(*(float32x2_t *)v16.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v16.i8, 1))).u32[0];
        v17 = vrsqrte_f32((float32x2_t)v16.u32[0]);
        v18 = vmul_f32(v17, vrsqrts_f32((float32x2_t)v16.u32[0], vmul_f32(v17, v17)));
        v19 = (int8x16_t)vmulq_n_f32(v15, vmul_f32(v18, vrsqrts_f32((float32x2_t)v16.u32[0], vmul_f32(v18, v18))).f32[0]);
        v16.i32[0] = v19.i32[1];
        v18.i32[0] = vextq_s8(v19, v19, 8uLL).u32[0];
        v18.i32[1] = v19.i32[0];
        *(float32x2_t *)v19.i8 = vmul_f32(v18, 0);
        if (fabsf(*(float *)v19.i32 + (float)(*(float *)v16.i32 + *(float *)&v19.i32[1])) < 0.17365)
          goto LABEL_4;
        v20 = (void *)v8();
        objc_msgSend(v20, "transform");
        v38 = v22;
        v40 = v21;
        v34 = v24;
        v36 = v23;

        *(double *)v25.i64 = simd_float4x4.up.getter(v40, v38, v36, v34);
        v26 = (int32x4_t)vmulq_f32(v25, v25);
        v26.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v26, 2), vadd_f32(*(float32x2_t *)v26.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v26.i8, 1))).u32[0];
        v27 = vrsqrte_f32((float32x2_t)v26.u32[0]);
        v28 = vmul_f32(v27, vrsqrts_f32((float32x2_t)v26.u32[0], vmul_f32(v27, v27)));
        v29 = (int8x16_t)vmulq_n_f32(v25, vmul_f32(v28, vrsqrts_f32((float32x2_t)v26.u32[0], vmul_f32(v28, v28))).f32[0]);
        v26.i32[0] = v29.i32[1];
        v28.i32[0] = vextq_s8(v29, v29, 8uLL).u32[0];
        v28.i32[1] = v29.i32[0];
        *(float32x2_t *)v29.i8 = vmul_f32(v28, 0);
        v30 = fabsf(*(float *)v29.i32 + (float)(*(float *)v26.i32 + *(float *)&v29.i32[1]));
        if (v30 > 1.0)
          v30 = 1.0;
        if ((float)(acosf(v30) * 57.296) < 10.0)
        {
LABEL_4:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
          v4 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v4);
          v5 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, v6);
          specialized ContiguousArray._endMutation()(v5);
        }
        else
        {
          swift_release(v6);
        }
        ++v3;
        if (v7 == v2)
          return _swiftEmptyArrayStorage;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_19:
      if (a1 < 0)
        v32 = a1;
      else
        v32 = a1 & 0xFFFFFFFFFFFFFF8;
      v2 = _CocoaArrayWrapper.endIndex.getter(v32);
      if (!v2)
        return _swiftEmptyArrayStorage;
    }
    v6 = *(_QWORD *)(a1 + 8 * v3 + 32);
    swift_retain(v6);
    v7 = v3 + 1;
    if (__OFADD__(v3, 1))
      goto LABEL_16;
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

char *sub_100117D58(char *result, float32x4_t a2, float32x4_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v7;
  int32x4_t v8;
  float v9;
  char *v10;
  float32x2_t v11;
  float32x2_t v12;
  float32x4_t v13;
  unint64_t v14;
  uint64_t v15;
  char *i;
  float32x2_t v17;
  unint64_t v18;
  int64x2_t v19;
  float32x2_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  float32x4_t v27;
  float32x4_t v28;

  v4 = v3;
  v5 = *((_QWORD *)result + 2);
  if (v5)
  {
    v7 = 0;
    v8 = (int32x4_t)vmulq_f32(a3, a3);
    v8.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v8, 2), vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v8.i8, 1))).u32[0];
    v9 = a2.f32[2];
    v10 = result + 64;
    v11 = vrsqrte_f32((float32x2_t)v8.u32[0]);
    v12 = vmul_f32(v11, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v11, v11)));
    v13 = vmulq_n_f32(a3, vmul_f32(v12, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v12, v12))).f32[0]);
    do
    {
      if (v7 <= v5)
        v14 = v5;
      else
        v14 = v7;
      v15 = -(uint64_t)v14;
      for (i = &v10[48 * v7++]; ; i += 48)
      {
        if (v15 + v7 == 1)
        {
          __break(1u);
          return result;
        }
        if ((*i & 1) == 0)
        {
          v17 = *(float32x2_t *)(i - 32);
          v18 = *((_QWORD *)i - 3);
          *(float32x2_t *)a3.f32 = v17;
          v19 = vdupq_n_s64(v18);
          a3 = vsubq_f32(a3, a2);
          a3.f32[0] = vmuls_lane_f32(*(float *)&v19.i32[2] - v9, v13, 2)
                    + (float)((float)((float)(v17.f32[0] - a2.f32[0]) * v13.f32[0])
                            + vmuls_lane_f32(a3.f32[1], *(float32x2_t *)v13.f32, 1));
          *(float *)v19.i32 = (float)(v9 + vmuls_lane_f32(a3.f32[0], v13, 2)) - *(float *)&v19.i32[2];
          v20 = vsub_f32(vadd_f32(*(float32x2_t *)a2.f32, vmul_n_f32(*(float32x2_t *)v13.f32, a3.f32[0])), v17);
          if ((float)((float)(*(float *)v19.i32 * *(float *)v19.i32) + vaddv_f32(vmul_f32(v20, v20))) < 0.0225)
            break;
        }
        if (++v7 - v5 == 1)
          return (char *)_swiftEmptyArrayStorage;
      }
      v27 = v13;
      v28 = a2;
      v24 = *((_QWORD *)i - 1);
      v25 = *((_QWORD *)i - 2);
      result = (char *)swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      v26 = v4;
      if ((result & 1) == 0)
        result = sub_1000A57A8(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v22 = _swiftEmptyArrayStorage[2];
      v21 = _swiftEmptyArrayStorage[3];
      v13 = v27;
      a2 = v28;
      if (v22 >= v21 >> 1)
      {
        result = sub_1000A57A8((char *)(v21 > 1), v22 + 1, 1);
        v13 = v27;
        a2 = v28;
      }
      _swiftEmptyArrayStorage[2] = v22 + 1;
      v23 = &_swiftEmptyArrayStorage[6 * v22];
      v23[4] = v17;
      v23[5] = v18;
      v23[6] = v25;
      v23[7] = v24;
      *((_BYTE *)v23 + 64) = 0;
      v4 = v26;
    }
    while (v7 != v5);
  }
  return (char *)_swiftEmptyArrayStorage;
}

char *sub_100117F80(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  unsigned int v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[12];
  uint64_t v37;
  uint64_t v38;
  int v39;
  _BYTE v40[104];
  uint64_t v41;

  v24 = *(_QWORD *)(a1 + 16);
  if (!v24)
    return (char *)_swiftEmptyArrayStorage;
  v5 = a1;
  v6 = swift_bridgeObjectRetain(a1);
  v7 = (char *)_swiftEmptyArrayStorage;
  v23 = (_QWORD *)MeasureCore.shared.unsafeMutableAddressor(v6);
  v8 = 0;
  v22 = a4 & 1;
  v21 = v5;
  do
  {
    v10 = *(double *)(v5 + 8 * v8 + 32);
    v11 = *v23;
    swift_retain(*v23);
    MeasureCore.edgeHitTest(screenPoint:frame:orientation:planeTypes:useHyperLocalStrategy:)(v36, a2, 1, a3, v22, v10);
    v13 = v36[0];
    v12 = v36[1];
    v14 = v36[5];
    v33 = v36[4];
    v34 = v36[2];
    v15 = v36[7];
    v16 = v36[9];
    v31 = v36[8];
    v32 = v36[6];
    v27 = v36[3];
    v28 = v36[11];
    v29 = v36[10];
    v30 = v37;
    v35 = v38;
    v17 = v39;
    swift_release(v11);
    sub_100012C58((uint64_t)v36, (uint64_t)v40, &qword_1004866F0);
    if (v41)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
        v7 = sub_100060114(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
      v19 = *((_QWORD *)v7 + 2);
      v18 = *((_QWORD *)v7 + 3);
      if (v19 >= v18 >> 1)
        v7 = sub_100060114((char *)(v18 > 1), v19 + 1, 1, v7);
      *((_QWORD *)v7 + 2) = v19 + 1;
      v9 = &v7[128 * v19];
      *((_QWORD *)v9 + 4) = v13;
      *((_QWORD *)v9 + 5) = v12;
      *((_QWORD *)v9 + 6) = v34;
      *((_QWORD *)v9 + 7) = v27;
      *((_QWORD *)v9 + 8) = v33;
      *((_QWORD *)v9 + 9) = v14;
      *((_QWORD *)v9 + 10) = v32;
      *((_QWORD *)v9 + 11) = v15;
      *((_QWORD *)v9 + 12) = v31;
      *((_QWORD *)v9 + 13) = v16;
      *((_QWORD *)v9 + 14) = v29;
      *((_QWORD *)v9 + 15) = v28;
      v9[128] = v30 & 1;
      *((_QWORD *)v9 + 17) = v35;
      *((_DWORD *)v9 + 36) = v17;
      v5 = v21;
    }
    ++v8;
  }
  while (v24 != v8);
  swift_bridgeObjectRelease(v5);
  return v7;
}

float32x2_t sub_10011818C(float32x2_t a1, float32x2_t a2, float32x2_t a3)
{
  float32x2_t v3;
  float32x2_t v4;
  float32x2_t v5;
  float32x2_t v6;
  float32x2_t v7;
  float32x2_t v8;
  float32x2_t v9;
  float32x2_t v10;
  float32x2_t v11;
  float32x2_t v12;

  v3 = vsub_f32(a3, a2);
  v4 = vmul_f32(v3, v3);
  v4.i32[0] = vadd_f32(v4, (float32x2_t)vdup_lane_s32((int32x2_t)v4, 1)).u32[0];
  v5 = vrsqrte_f32((float32x2_t)v4.u32[0]);
  v6 = vmul_f32(v5, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v5, v5)));
  v7 = vmul_n_f32(v3, vmul_f32(v6, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v6, v6))).f32[0]);
  v8 = vmul_f32(v7, v7);
  v8.i32[0] = vadd_f32(v8, (float32x2_t)vdup_lane_s32((int32x2_t)v8, 1)).u32[0];
  v9 = vrsqrte_f32((float32x2_t)v8.u32[0]);
  v10 = vmul_f32(v9, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v9, v9)));
  v11 = vmul_n_f32(v7, vmul_f32(v10, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v10, v10))).f32[0]);
  v12 = vmul_f32(vsub_f32(a1, a2), v11);
  return vadd_f32(vmul_n_f32(v11, vadd_f32(v12, (float32x2_t)vdup_lane_s32((int32x2_t)v12, 1)).f32[0]), a2);
}

uint64_t sub_10011821C(float32x2_t a1, float32x2_t a2, float32x2_t a3, float a4)
{
  float32x2_t v8;
  float v9;
  float v10;
  float32x2_t v11;
  float32x2_t v12;
  float32x2_t v14;
  int32x2_t v15;
  int32x2_t v16;
  float32x2_t v17;

  v8 = sub_10011818C(a1, a2, a3);
  v10 = v9;
  v11 = vsub_f32(a1, a2);
  if (vaddv_f32(vmul_f32(v11, v11)) < a4)
    return 1;
  v12 = vsub_f32(a1, a3);
  if (vaddv_f32(vmul_f32(v12, v12)) < a4)
    return 1;
  if (v10 >= a4)
    return 0;
  v14 = vsub_f32(a3, a2);
  v15 = (int32x2_t)vmul_f32(v14, vsub_f32(v8, a2));
  v16 = (int32x2_t)vmul_f32(v14, v14);
  v17 = vadd_f32((float32x2_t)vzip1_s32(v15, v16), (float32x2_t)vzip2_s32(v15, v16));
  return (v17.f32[0] >= 0.0) & vcge_f32((float32x2_t)vdup_lane_s32((int32x2_t)v17, 1), v17).u32[0];
}

_QWORD *sub_1001182CC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  _QWORD *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v23;
  __int128 v24;
  _QWORD *v25;

  v2 = swift_bridgeObjectRetain(a1);
  sub_10011659C(v2, v2);
  v4 = v3;
  swift_bridgeObjectRelease(a1);
  v25 = v4;
  swift_bridgeObjectRetain(v4);
  sub_10010E678(&v25);
  swift_bridgeObjectRelease(v4);
  v5 = v25;
  v6 = v25[2];
  if (v6)
  {
    v25 = _swiftEmptyArrayStorage;
    sub_1000A5718(0, v6, 0);
    v7 = 0;
    v8 = v25;
    v9 = v25[2];
    v10 = 4 * v9;
    do
    {
      v24 = *(_OWORD *)&v5[v7 + 4];
      v11 = v5[v7 + 6];
      v25 = v8;
      v12 = v8[3];
      v13 = v9 + 1;
      swift_retain(v11);
      if (v9 >= v12 >> 1)
      {
        sub_1000A5718((_QWORD *)(v12 > 1), v13, 1);
        v8 = v25;
      }
      v8[2] = v13;
      v14 = &v8[v10 + v7];
      *((_OWORD *)v14 + 2) = v24;
      v14[6] = v11;
      v7 += 4;
      ++v9;
      --v6;
    }
    while (v6);
    v15 = swift_release(v5);
  }
  else
  {
    v15 = swift_release(v25);
    v8 = _swiftEmptyArrayStorage;
  }
  if (v8[2] >= 0xAuLL)
    v16 = 10;
  else
    v16 = v8[2];
  v17 = type metadata accessor for __ContiguousArrayStorageBase(0, v15);
  v18 = swift_unknownObjectRetain_n(v8, 2);
  v19 = (_QWORD *)swift_dynamicCastClass(v18, v17);
  if (!v19)
  {
    swift_bridgeObjectRelease(v8);
    v19 = _swiftEmptyArrayStorage;
  }
  v20 = v19[2];
  swift_release(v19);
  if (v20 == v16)
  {
    v21 = (_QWORD *)swift_dynamicCastClass(v8, v17);
    if (!v21)
    {
      swift_bridgeObjectRelease(v8);
      v21 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v8);
    sub_10006BCB0((uint64_t)v8, (uint64_t)(v8 + 4), 0, (2 * v16) | 1);
    v21 = v23;
  }
  swift_bridgeObjectRelease(v8);
  return v21;
}

__n128 sub_1001184DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  __n128 *v6;
  unint64_t v7;
  __n128 *v8;
  __n128 v9;
  uint64_t v10;
  float *v11;
  uint64_t v12;
  float v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  _QWORD *v17;
  __n128 v18;
  Swift::String v19;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain(a1);
    v3 = v1 + 48;
    do
    {
      v7 = *(_QWORD *)v3;
      if (!*(_BYTE *)(*(_QWORD *)v3 + 48))
      {
        v21 = *(__n128 *)(v3 - 16);
        swift_retain(v7);
        if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
          sub_1000A5718(0, _swiftEmptyArrayStorage[2] + 1, 1);
        v5 = _swiftEmptyArrayStorage[2];
        v4 = _swiftEmptyArrayStorage[3];
        if (v5 >= v4 >> 1)
          sub_1000A5718((_QWORD *)(v4 > 1), v5 + 1, 1);
        _swiftEmptyArrayStorage[2] = v5 + 1;
        v6 = (__n128 *)&_swiftEmptyArrayStorage[4 * v5];
        v6[2] = v21;
        v6[3].n128_u64[0] = v7;
      }
      v3 += 32;
      --v2;
    }
    while (v2);
    a1 = swift_bridgeObjectRelease(v1);
  }
  v8 = (__n128 *)SIMD3<>.zero.unsafeMutableAddressor(a1);
  v9 = *v8;
  v10 = _swiftEmptyArrayStorage[2];
  if (v10)
  {
    v11 = (float *)&_swiftEmptyArrayStorage[5];
    v12 = _swiftEmptyArrayStorage[2];
    do
    {
      v14.n128_u64[0] = (unint64_t)vadd_f32((float32x2_t)v9.n128_u64[0], *(float32x2_t *)(v11 - 2));
      v13 = *v11;
      v11 += 8;
      v14.n128_f32[2] = v9.n128_f32[2] + v13;
      v14.n128_u32[3] = 0;
      v9 = v14;
      --v12;
    }
    while (v12);
  }
  else
  {
    v14 = *v8;
  }
  v22 = v14;
  v15 = swift_release(_swiftEmptyArrayStorage);
  if ((unint64_t)v10 >= 2)
  {
    v15.n128_f32[0] = (float)v10;
    v16.n128_u64[0] = (unint64_t)vdiv_f32((float32x2_t)v22.n128_u64[0], (float32x2_t)vdup_lane_s32((int32x2_t)v15.n128_u64[0], 0));
    v16.n128_f32[2] = v22.n128_f32[2] / (float)v10;
    if (qword_10047AA18 != -1)
    {
      v24 = v16;
      swift_once(&qword_10047AA18, sub_1000E1018);
      v16 = v24;
    }
    v16.n128_u32[3] = 0;
    v23 = v16;
    v19._object = (void *)0x80000001003E0390;
    v19._countAndFlagsBits = 0xD00000000000002DLL;
    Log.default(_:isPrivate:)(v19, 0);
  }
  else
  {
    v17 = sub_10010E5B0(v1);
    v18.n128_f64[0] = static SIMD3<>.average(_:)();
    v23 = v18;
    swift_bridgeObjectRelease(v17);
  }
  return v23;
}

BOOL sub_1001186F4(uint64_t a1, float32x4_t a2, double a3, double a4, double a5, double a6, float a7)
{
  int8x16_t v8;
  int32x4_t v9;
  float32x2_t v10;
  float32x2_t v11;
  int8x16_t v12;
  float v13;
  Swift::String v14;

  *(double *)v8.i64 = simd_float4x4.forward.getter(a1);
  v9 = (int32x4_t)vmulq_f32(a2, a2);
  v9.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v9, 2), vadd_f32(*(float32x2_t *)v9.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v9.i8, 1))).u32[0];
  v10 = vrsqrte_f32((float32x2_t)v9.u32[0]);
  v11 = vmul_f32(v10, vrsqrts_f32((float32x2_t)v9.u32[0], vmul_f32(v10, v10)));
  v12 = (int8x16_t)vmulq_n_f32(a2, vmul_f32(v11, vrsqrts_f32((float32x2_t)v9.u32[0], vmul_f32(v11, v11))).f32[0]);
  v11.f32[0] = vmuls_n_f32(*(float *)v8.i32, *(float *)v12.i32);
  v8.i32[0] = vextq_s8(v8, v8, 8uLL).u32[0];
  v12.i32[0] = vextq_s8(v12, v12, 8uLL).u32[0];
  *(float32x2_t *)v8.i8 = vmul_f32(*(float32x2_t *)v8.i8, *(float32x2_t *)v12.i8);
  v13 = fabsf(*(float *)v8.i32 + (float)(v11.f32[0] + *(float *)&v8.i32[1]));
  if (v13 > a7)
  {
    if (qword_10047AA18 != -1)
      swift_once(&qword_10047AA18, sub_1000E1018);
    v14._object = (void *)0x80000001003E0330;
    v14._countAndFlagsBits = 0xD000000000000057;
    Log.default(_:isPrivate:)(v14, 0);
  }
  return v13 <= a7;
}

uint64_t sub_1001187FC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  int *v6;
  unint64_t v7;
  int64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  float v13;
  float *v14;
  unint64_t v15;
  unint64_t v16;
  float *v17;
  float v18;

  if (*(_QWORD *)(result + 16))
  {
    v1 = result;
    v2 = swift_bridgeObjectRetain(result);
    sub_100116930(v2, v2);
    v4 = v3;
    swift_bridgeObjectRelease(v1);
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      sub_1000A567C(0, v5, 0);
      v6 = (int *)(v4 + 56);
      v7 = _swiftEmptyArrayStorage[2];
      v8 = v5;
      do
      {
        v9 = *v6;
        v10 = _swiftEmptyArrayStorage[3];
        v11 = v7 + 1;
        if (v7 >= v10 >> 1)
          sub_1000A567C((char *)(v10 > 1), v7 + 1, 1);
        _swiftEmptyArrayStorage[2] = v11;
        *((_DWORD *)&_swiftEmptyArrayStorage[4] + v7) = v9;
        v6 += 8;
        ++v7;
        --v8;
      }
      while (v8);
    }
    else
    {
      v11 = _swiftEmptyArrayStorage[2];
      if (!v11)
        goto LABEL_17;
    }
    if (v11 >= 2)
    {
      v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      v14 = (float *)&_swiftEmptyArrayStorage[4] + 1;
      v13 = 0.0;
      v15 = v11 & 0xFFFFFFFFFFFFFFFELL;
      do
      {
        v13 = (float)(v13 + *(v14 - 1)) + *v14;
        v14 += 2;
        v15 -= 2;
      }
      while (v15);
      if (v11 == v12)
        goto LABEL_17;
    }
    else
    {
      v12 = 0;
      v13 = 0.0;
    }
    v16 = v11 - v12;
    v17 = (float *)&_swiftEmptyArrayStorage[4] + v12;
    do
    {
      v18 = *v17++;
      v13 = v13 + v18;
      --v16;
    }
    while (v16);
LABEL_17:
    swift_bridgeObjectRelease(v4);
    return swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  return result;
}

void sub_10011899C(void *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v5;
  uint64_t v6;
  void (*v8)(_OWORD *__return_ptr, __n128);
  __n128 v9;
  _QWORD *v10;
  void (*v11)(void **__return_ptr, __n128);
  __n128 v12;
  _QWORD *v13;
  void *v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  __int128 v19;
  unsigned __int8 (*v20)(void);
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  float32x4_t v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  float32x4_t v30;
  float32x4_t v31;
  int32x4_t v32;
  float32x2_t v33;
  float32x2_t v34;
  uint64_t v35;
  float v36;
  double v37;
  float32x2_t v38;
  __n128 v39;
  float v40;
  __n128 v41;
  uint64_t v42;
  float v43;
  BOOL v44;
  BOOL v45;
  BOOL v46;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  float v57;
  float v58;
  float v59;
  void *v60;
  _QWORD *v61;
  id v62;
  id v63;
  uint64_t v64;
  double *v65;
  char v66;
  double v67;
  double v68;
  double v69;
  double v70;
  float v71;
  float v72;
  double v73;
  __n128 v74;
  __n128 v75;
  __n128 v76;
  __n128 v77;
  __n128 v78;
  __n128 v79;
  __n128 v80;
  float32x4_t v81;
  float32x4_t v82;
  void *v83;
  float v84;
  __n128 v85;
  __int128 v86;
  float v87;
  void *v92;
  _QWORD *v93;
  id v94;
  id v95;
  uint64_t v96;
  char v97;
  float v98;
  _OWORD v99[9];
  uint64_t v100;
  double v101[18];
  __n128 v102;
  __n128 v103;
  __n128 v104;
  __n128 v105;
  _QWORD v106[5];
  char v107;
  double v108[5];
  _OWORD v109[9];
  uint64_t v110;

  v6 = v5;
  static ComputedCameraProperties.shared(for:)(v101);
  v8 = *(void (**)(_OWORD *__return_ptr, __n128))(**(_QWORD **)(v5 + 112) + 144);
  v9 = swift_retain();
  v8(v99, v9);
  swift_release();
  v109[6] = v99[6];
  v109[7] = v99[7];
  v109[8] = v99[8];
  v110 = v100;
  v109[2] = v99[2];
  v109[3] = v99[3];
  v109[4] = v99[4];
  v109[5] = v99[5];
  v109[0] = v99[0];
  v109[1] = v99[1];
  sub_1000127E8((id *)v109);
  sub_100012BC4((uint64_t)v109);
  sub_100012C58((uint64_t)v109, (uint64_t)v99, (uint64_t *)&unk_100486700);
  if (sub_1000127D0((uint64_t *)v99) != 1)
  {
    v10 = *(_QWORD **)&v99[0];
    v11 = *(void (**)(void **__return_ptr, __n128))(**(_QWORD **)(v5 + 120) + 144);
    v12 = swift_retain();
    v11(&v92, v12);
    swift_release();
    v14 = v92;
    v13 = v93;

    if (!v13)
      goto LABEL_30;
    v15.n128_f64[0] = (*(double (**)(void))((swift_isaMask & *v13) + 0x2B0))();
    v80 = v16;
    v85 = v15;
    v76 = v18;
    v78 = v17;

    *(double *)&v19 = simd_float4x4.position.getter(v85, v80, v78, v76);
    v86 = v19;
    v20 = *(unsigned __int8 (**)(void))((swift_isaMask & *v10) + 0x258);
    if (!v20() || v20() == 1)
    {
      v21.n128_f64[0] = (*(double (**)(void))((swift_isaMask & *v10) + 0x2A8))();
      *(double *)v25.i64 = simd_float4x4.position.getter(v21, v22, v23, v24);
      v81 = v25;
      v26.n128_f64[0] = (*(double (**)(void))((swift_isaMask & *v10) + 0x2A0))();
      *(double *)v30.i64 = simd_float4x4.position.getter(v26, v27, v28, v29);
      v31 = vsubq_f32(v81, v30);
      v32 = (int32x4_t)vmulq_f32(v31, v31);
      v32.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v32, 2), vadd_f32(*(float32x2_t *)v32.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v32.i8, 1))).u32[0];
      v33 = vrsqrte_f32((float32x2_t)v32.u32[0]);
      v34 = vmul_f32(v33, vrsqrts_f32((float32x2_t)v32.u32[0], vmul_f32(v33, v33)));
      v82 = vmulq_n_f32(v31, vmul_f32(v34, vrsqrts_f32((float32x2_t)v32.u32[0], vmul_f32(v34, v34))).f32[0]);
      v35 = type metadata accessor for MeasureCamera(0);
      v36 = vmuls_lane_f32(0.01, v82, 2);
      v74 = v102;
      v75 = v103;
      v77 = v104;
      v79 = v105;
      v37 = v101[0];
      v38 = vmul_f32(*(float32x2_t *)v82.f32, (float32x2_t)vdup_n_s32(0x3C23D70Au));
      v39.n128_u64[0] = (unint64_t)vadd_f32(*(float32x2_t *)&v86, v38);
      v39.n128_f32[2] = *((float *)&v86 + 2) + v36;
      v39.n128_u32[3] = 0;
      static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v35, v39, v102, v103, v104, v105, v101[0]);
      v84 = v40;
      v41.n128_u64[0] = (unint64_t)vsub_f32(*(float32x2_t *)&v86, v38);
      v41.n128_f32[2] = *((float *)&v86 + 2) - v36;
      v41.n128_u32[3] = 0;
      static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v42, v41, v74, v75, v77, v79, v37);
      v87 = v43;
      sub_100012810((id *)v109);
      v44 = (LODWORD(v84) & 0x7FFFFF) != 0 && (~LODWORD(v84) & 0x7F800000) == 0;
      v45 = v84 >= 0.0 && v84 <= 1.0;
      if (v45 && !v44)
      {
        v46 = (LODWORD(v87) & 0x7FFFFF) != 0 && (~LODWORD(v87) & 0x7F800000) == 0;
        if (v87 >= 0.0 && v87 <= 1.0 && !v46)
        {
          v48 = CGPoint.init(xy:)(0);
          v50 = v49;
          v52 = CGPoint.init(xy:)(v51);
          v108[0] = v48;
          v108[1] = v50;
          v108[2] = v52;
          v108[3] = v53;
          v108[4] = 0.0;
          v54 = *(_QWORD *)(v6 + 152);
          v55 = *(_QWORD *)(v54 + 16);
          if (v55)
          {
            v83 = a1;
            v56 = v48 - v52;
            v57 = v50 - v53;
            v58 = v56;
            v59 = atan2f(fabsf(v57), fabsf(v58)) * 57.296;
            swift_bridgeObjectRetain(v54);
            v60 = 0;
            v61 = 0;
            v62 = 0;
            v63 = 0;
            v64 = 0;
            v65 = (double *)(v54 + 64);
            v66 = 1;
            do
            {
              v67 = *(v65 - 4);
              v68 = *(v65 - 3);
              v69 = *(v65 - 2);
              v70 = *(v65 - 1);
              v71 = v68 - v70;
              v72 = v67 - v69;
              if ((float)(atan2f(fabsf(v71), fabsf(v72)) * 57.296) != v59)
              {
                v73 = *v65;
                *(double *)v106 = v67;
                *(double *)&v106[1] = v68;
                *(double *)&v106[2] = v69;
                *(double *)&v106[3] = v70;
                *(double *)&v106[4] = v73;
                v107 = 0;
                sub_100112B94((uint64_t)v106, v108, (uint64_t)&v92);
                if (v98 < INFINITY)
                {
                  v60 = v92;
                  v61 = v93;
                  v62 = v94;
                  v63 = v95;
                  v64 = v96;
                  v66 = v97;
                }
              }
              v65 += 5;
              --v55;
            }
            while (v55);
            swift_bridgeObjectRelease(v54);
            if ((v66 & 1) == 0)
            {
              v92 = v60;
              v93 = v61;
              v94 = v62;
              v95 = v63;
              v96 = v64;
              sub_100111ED8((double *)&v92, v83, a2, a3, a4, a5);
            }
          }
        }
      }
    }
    else
    {
LABEL_30:
      sub_100012810((id *)v109);
    }
  }
}

BOOL sub_100118E4C(uint64_t a1, float32x4_t a2)
{
  uint64_t v3;
  float32x2_t v4;
  uint64_t v5;
  float32x2_t *v6;
  float32x4_t v7;
  float32x4_t v8;
  float v9;
  float32x4_t v10;
  float32x4_t v11;
  float32x4_t v12;
  float32x4_t v13;
  float32x4_t v14;
  Swift::String v15;
  Swift::String v16;
  float32x4_t v17;
  Swift::String v18;
  int32x4_t v19;
  float32x2_t v20;
  float32x2_t v21;
  int8x16_t v22;
  float32x2_t v23;
  float v24;
  float v25;
  float v26;
  Swift::String v28;
  BOOL v29;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t v38;
  float v39;
  char v40[24];
  char v41[24];

  v3 = a1 + direct field offset for WorldEdge.p1;
  swift_beginAccess(a1 + direct field offset for WorldEdge.p1, v41, 0, 0);
  if ((*(_BYTE *)(v3 + 16) & 1) != 0)
    return 0;
  v4 = *(float32x2_t *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = (float32x2_t *)(a1 + direct field offset for WorldEdge.p2);
  swift_beginAccess(v6, v40, 0, 0);
  if ((v6[2].i8[0] & 1) != 0)
    return 0;
  *(float32x2_t *)v8.f32 = v4;
  v8.i64[1] = v5;
  *(float32x2_t *)v7.f32 = vsub_f32(*v6, v4);
  v33 = vsubq_f32(*(float32x4_t *)v6->f32, v8);
  v34 = v7;
  v9 = vmuls_lane_f32(v33.f32[2], v33, 2) + vaddv_f32(vmul_f32(*(float32x2_t *)v7.f32, *(float32x2_t *)v7.f32));
  *(double *)v10.i64 = closestPointOnLine(lineP1:lineP2:point:)();
  v11 = vsubq_f32(v10, a2);
  v12 = vmulq_f32(v11, v11);
  v13 = vaddq_f32(v12, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v12.f32, 1));
  v14 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v12, 2);
  if (v9 <= 0.0225)
  {
    v32 = v14;
    v38 = v13;
    if (qword_10047AA18 != -1)
      swift_once(&qword_10047AA18, sub_1000E1018);
    v15._countAndFlagsBits = 0xD000000000000028;
    v15._object = (void *)0x80000001003E0410;
    Log.default(_:isPrivate:)(v15, 0);
    v13 = v38;
    v14 = v32;
  }
  LODWORD(v39) = vaddq_f32(v14, v13).u32[0];
  if (v9 >= 2.25)
  {
    if (qword_10047AA18 != -1)
      swift_once(&qword_10047AA18, sub_1000E1018);
    v16._object = (void *)0x80000001003E0440;
    v16._countAndFlagsBits = 0xD000000000000027;
    Log.default(_:isPrivate:)(v16, 0);
  }
  v17 = v34;
  v17.i32[2] = v33.i32[2];
  if (qword_10047AB58 != -1)
  {
    v36 = v17;
    swift_once(&qword_10047AB58, sub_10010E880);
    v17 = v36;
  }
  v17.i32[3] = 0;
  if (v39 >= *(float *)&dword_1004AF6AC)
  {
    v35 = v17;
    if (qword_10047AA18 != -1)
      swift_once(&qword_10047AA18, sub_1000E1018);
    v18._countAndFlagsBits = 0xD00000000000002BLL;
    v18._object = (void *)0x80000001003E0470;
    Log.default(_:isPrivate:)(v18, 0);
    v17 = v35;
  }
  v19 = (int32x4_t)vmulq_f32(v17, v17);
  v19.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v19, 2), vadd_f32(*(float32x2_t *)v19.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v19.i8, 1))).u32[0];
  v20 = vrsqrte_f32((float32x2_t)v19.u32[0]);
  v21 = vmul_f32(v20, vrsqrts_f32((float32x2_t)v19.u32[0], vmul_f32(v20, v20)));
  v22 = (int8x16_t)vmulq_n_f32(v17, vmul_f32(v21, vrsqrts_f32((float32x2_t)v19.u32[0], vmul_f32(v21, v21))).f32[0]);
  v21.i32[0] = v22.i32[1];
  v23.i32[0] = vextq_s8(v22, v22, 8uLL).u32[0];
  v23.i32[1] = v22.i32[0];
  *(float32x2_t *)v22.i8 = vmul_f32(v23, 0);
  v24 = fabsf(*(float *)v22.i32 + (float)(v21.f32[0] + *(float *)&v22.i32[1]));
  v25 = 1.0;
  if (v24 <= 1.0)
    v25 = v24;
  v26 = acosf(v25) * 57.296;
  if (v26 >= 3.0 && v24 >= 0.052336)
  {
    if (qword_10047AA18 != -1)
      swift_once(&qword_10047AA18, sub_1000E1018);
    v28._countAndFlagsBits = 0xD00000000000002ALL;
    v28._object = (void *)0x80000001003E04A0;
    Log.default(_:isPrivate:)(v28, 0);
  }
  v29 = v9 > 0.0225 && v9 < 2.25;
  if (!v29 || v39 >= *(float *)&dword_1004AF6AC)
    return 0;
  if (v26 >= 10.0)
    return v24 < 0.17365;
  return 1;
}

void sub_100119210(uint64_t a1, int8x16_t a2)
{
  objc_class *ObjectType;
  uint64_t v4;
  float32x2_t v5;
  unint64_t v6;
  uint64_t v7;
  const double *v8;
  float32x2_t v9;
  float64x2_t v10;
  uint64_t *v11;
  float32x4_t v12;
  uint64_t v13;
  int64x2_t v14;
  int32x4_t v15;
  float32x2_t v16;
  float32x2_t v17;
  float32x4_t v18;
  int32x4_t v19;
  float32x2_t v20;
  float32x2_t v21;
  float32x4_t v22;
  float32x2_t v23;
  int8x16_t v24;
  float32x2_t v25;
  float32x2_t v26;
  float v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  void *v31;
  float32x4_t *v32;
  float32x4_t v33;
  float32x4_t v34;
  int32x4_t v35;
  float32x2_t v36;
  float32x2_t v37;
  float32x4_t v38;
  float32x2_t v39;
  float v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  _OWORD *v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  float32x4_t v56;
  uint64_t v57;
  char *v58;
  int32x4_t v59;
  float32x2_t v60;
  float32x2_t v61;
  float32x4_t v62;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  id v68;
  unint64_t v69;
  unint64_t v70;
  int8x16_t *v71;
  uint64_t v72;
  objc_class *v73;
  float32x4_t v74;
  float32x4_t v75;
  uint64_t v76;
  uint64_t v77;
  int8x16_t v78;
  float32x4_t v79;
  unint64_t v80;
  __n128 v81;
  void *v82;
  float v83;
  float32x2_t v84;
  __n128 v85;
  __int128 v86;
  __n128 v87;
  __int128 v88;
  float v89;
  float32x2_t v90;
  float v91;
  __n128 v93;
  float32x4_t v94;
  char v95[24];
  _QWORD *v96;
  char v97[24];
  char v98[24];
  char v99[32];

  ObjectType = (objc_class *)swift_getObjectType(a1);
  v4 = a1 + direct field offset for WorldEdge.p1;
  swift_beginAccess(a1 + direct field offset for WorldEdge.p1, v99, 0, 0);
  if ((*(_BYTE *)(v4 + 16) & 1) == 0)
  {
    v5 = *(float32x2_t *)v4;
    v6 = *(_QWORD *)(v4 + 8);
    v7 = a1 + direct field offset for WorldEdge.p2;
    swift_beginAccess(a1 + direct field offset for WorldEdge.p2, v98, 0, 0);
    if ((*(_BYTE *)(v7 + 16) & 1) == 0)
    {
      v8 = (const double *)(v7 + 8);
      v9 = *(float32x2_t *)v7;
      v10 = vld1q_dup_f64(v8);
      v91 = *(float *)&v10.f64[1];
      v11 = (uint64_t *)(a1 + direct field offset for WorldEdge.backingPlanes);
      swift_beginAccess(v11, v97, 0, 0);
      v13 = *v11;
      v77 = *(_QWORD *)(*v11 + 16);
      if (v77)
      {
        v14 = vdupq_n_s64(v6);
        *(float32x2_t *)v12.f32 = vsub_f32(v9, v5);
        v12.f32[2] = v91 - *(float *)&v14.i32[2];
        v15 = (int32x4_t)vmulq_f32(v12, v12);
        v15.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v15, 2), vadd_f32(*(float32x2_t *)v15.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v15.i8, 1))).u32[0];
        v16 = vrsqrte_f32((float32x2_t)v15.u32[0]);
        v17 = vmul_f32(v16, vrsqrts_f32((float32x2_t)v15.u32[0], vmul_f32(v16, v16)));
        v18 = vmulq_n_f32(v12, vmul_f32(v17, vrsqrts_f32((float32x2_t)v15.u32[0], vmul_f32(v17, v17))).f32[0]);
        v19 = (int32x4_t)vmulq_f32(v18, v18);
        v19.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v19, 2), vadd_f32(*(float32x2_t *)v19.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v19.i8, 1))).u32[0];
        v20 = vrsqrte_f32((float32x2_t)v19.u32[0]);
        v21 = vmul_f32(v20, vrsqrts_f32((float32x2_t)v19.u32[0], vmul_f32(v20, v20)));
        v22 = vmulq_n_f32(v18, vmul_f32(v21, vrsqrts_f32((float32x2_t)v19.u32[0], vmul_f32(v21, v21))).f32[0]);
        v23 = vmul_f32(vadd_f32(v5, v9), (float32x2_t)0x3F0000003F000000);
        v24 = a2;
        v24.i32[0] = vextq_s8(v24, v24, 8uLL).u32[0];
        v21.i32[1] = v23.i32[1];
        v21.f32[0] = (float)(*(float *)&v14.i32[2] + v91) * 0.5;
        v25.i32[1] = v22.i32[1];
        v25.i32[0] = vextq_s8((int8x16_t)v22, (int8x16_t)v22, 8uLL).u32[0];
        v26 = vmul_f32(vsub_f32(*(float32x2_t *)v24.i8, v21), v25);
        v27 = v26.f32[0] + (float)((float)((float)(*(float *)a2.i32 - v23.f32[0]) * v22.f32[0]) + v26.f32[1]);
        v83 = (float)((float)(*(float *)&v14.i32[2] + v91) * 0.5) + vmuls_lane_f32(v27, v22, 2);
        v84 = vadd_f32(v23, vmul_n_f32(*(float32x2_t *)v22.f32, v27));
        v76 = v13 + 32;
        v74 = vnegq_f32(v18);
        v75 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v18, (int32x4_t)v18), (int8x16_t)v18, 0xCuLL);
        v28 = swift_bridgeObjectRetain(v13);
        v29 = 0;
        v30 = _swiftEmptyArrayStorage;
        v72 = v28;
        v73 = ObjectType;
        while (v29 < *(_QWORD *)(v28 + 16))
        {
          v80 = v29;
          v32 = (float32x4_t *)(v76 + 32 * v29);
          v79 = v32[1];
          v33 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v79, (int32x4_t)v79), (int8x16_t)v79, 0xCuLL), v74), v79, v75);
          v34 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v33, (int32x4_t)v33), (int8x16_t)v33, 0xCuLL);
          v35 = (int32x4_t)vmulq_f32(v33, v33);
          v35.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v35.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v35, 2), *(float32x2_t *)v35.i8)).u32[0];
          v36 = vrsqrte_f32((float32x2_t)v35.u32[0]);
          v37 = vmul_f32(v36, vrsqrts_f32((float32x2_t)v35.u32[0], vmul_f32(v36, v36)));
          v38 = vmulq_n_f32(v34, vmul_f32(v37, vrsqrts_f32((float32x2_t)v35.u32[0], vmul_f32(v37, v37))).f32[0]);
          v78 = *(int8x16_t *)v32;
          v39 = vmul_f32(vsub_f32((float32x2_t)__PAIR64__(HIDWORD(v32->i64[0]), vextq_s8(*(int8x16_t *)v32, *(int8x16_t *)v32, 8uLL).u32[0]), (float32x2_t)__PAIR64__(v84.u32[1], LODWORD(v83))), (float32x2_t)__PAIR64__(v38.u32[1], vextq_s8((int8x16_t)v38, (int8x16_t)v38, 8uLL).u32[0]));
          if ((float)(v39.f32[0] + (float)((float)((float)(COERCE_FLOAT(*v32) - v84.f32[0]) * v38.f32[0]) + v39.f32[1])) <= 0.0)
            v40 = -1.0;
          else
            v40 = 1.0;
          v89 = vmuls_lane_f32(v40, v38, 2);
          v90 = vmul_n_f32(*(float32x2_t *)v38.f32, v40);
          v41.n128_u64[0] = (unint64_t)v90;
          v41.n128_u64[1] = LODWORD(v89);
          v42.n128_u64[0] = (unint64_t)vadd_f32(v84, vmul_f32(v90, (float32x2_t)0x3F0000003F000000));
          v42.n128_f32[2] = v83 + (float)(v89 * 0.5);
          v42.n128_u32[3] = 0;
          v43.n128_f64[0] = static simd_float4x4.make(position:normalizedForward:)(v42, v41);
          v93 = v43;
          v85 = v45;
          v87 = v44;
          v81 = v46;
          v47 = objc_allocWithZone(ObjectType);
          v82 = (void *)((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __n128, __n128, __n128, __n128, float))WorldEdge.init(transform:p1:p2:type:adVariance:))(*(_QWORD *)&v84, LODWORD(v83), 0, vadd_f32(v84, v90), COERCE_UNSIGNED_INT(v83 + v89), 0, 3, v93, v87, v85, v81, 0.0);
          v48 = v30[2];
          swift_bridgeObjectRetain(v30);
          if (v48)
          {
            v49 = 0;
            v50 = v30 + 8;
            v51 = _swiftEmptyArrayStorage;
            do
            {
              v52 = &v50[6 * v49];
              v53 = v49;
              while (1)
              {
                if (v53 >= v30[2])
                {
                  __break(1u);
                  goto LABEL_36;
                }
                v54 = (char *)*((_QWORD *)v52 - 4);
                v86 = *v52;
                v88 = *(v52 - 1);
                swift_beginAccess(&v54[direct field offset for WorldEdge.transform], v95, 0, 0);
                *(double *)v56.i64 = simd_float4x4.forward.getter(v55);
                v94 = v56;
                v57 = qword_10047AB30;
                v58 = v54;
                if (v57 != -1)
                  swift_once(&qword_10047AB30, sub_10010E81C);
                v59 = (int32x4_t)vmulq_f32(v94, v94);
                v59.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v59, 2), vadd_f32(*(float32x2_t *)v59.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v59.i8, 1))).u32[0];
                v60 = vrsqrte_f32((float32x2_t)v59.u32[0]);
                v61 = vmul_f32(v60, vrsqrts_f32((float32x2_t)v59.u32[0], vmul_f32(v60, v60)));
                v62 = vmulq_n_f32(v94, vmul_f32(v61, vrsqrts_f32((float32x2_t)v59.u32[0], vmul_f32(v61, v61))).f32[0]);
                if (*(float *)&dword_1004AF698 < (float)(vmuls_lane_f32(v89, v62, 2)
                                                        + (float)((float)(v90.f32[0] * v62.f32[0])
                                                                + vmuls_lane_f32(v90.f32[1], *(float32x2_t *)v62.f32, 1))))
                  break;
                ++v53;

                v52 += 3;
                if (v48 == v53)
                  goto LABEL_27;
              }
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v51);
              v96 = v51;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1000A57E0(0, v51[2] + 1, 1);
                v51 = v96;
              }
              v65 = v51[2];
              v64 = v51[3];
              if (v65 >= v64 >> 1)
              {
                sub_1000A57E0((_QWORD *)(v64 > 1), v65 + 1, 1);
                v51 = v96;
              }
              v51[2] = v65 + 1;
              v66 = &v51[6 * v65];
              v66[4] = v58;
              v49 = v53 + 1;
              *((_OWORD *)v66 + 3) = v88;
              *((_OWORD *)v66 + 4) = v86;
              v50 = v30 + 8;
            }
            while (v48 - 1 != v53);
          }
          else
          {
            v51 = _swiftEmptyArrayStorage;
          }
LABEL_27:
          swift_bridgeObjectRelease(v30);
          v67 = v51[2];
          swift_release();
          if (v67)
          {
            ObjectType = v73;
            v31 = v82;
          }
          else
          {
            v31 = v82;
            v68 = v82;
            if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0)
              v30 = sub_10006030C(0, v30[2] + 1, 1, v30);
            v70 = v30[2];
            v69 = v30[3];
            ObjectType = v73;
            if (v70 >= v69 >> 1)
              v30 = sub_10006030C((_QWORD *)(v69 > 1), v70 + 1, 1, v30);
            v30[2] = v70 + 1;
            v71 = (int8x16_t *)&v30[6 * v70];
            v71[2].i64[0] = (uint64_t)v68;
            v71[3] = v78;
            v71[4] = (int8x16_t)v79;
          }
          v29 = v80 + 1;

          v28 = v72;
          if (v80 + 1 == v77)
          {
            swift_bridgeObjectRelease(v72);
            return;
          }
        }
LABEL_36:
        __break(1u);
      }
    }
  }
}

id sub_1001198A0(unsigned __int8 a1)
{
  char **v1;

  if (a1 > 2u)
    v1 = &selRef_whiteColor;
  else
    v1 = off_100446A50[(char)a1];
  return objc_msgSend((id)objc_opt_self(UIColor), *v1);
}

void sub_1001198F8(uint64_t a1, __n128 a2)
{
  sub_100114C34(a1, a2);
}

void sub_100119900(uint64_t a1, __n128 a2)
{
  sub_100114470(a1, a2);
}

id sub_100119908(uint64_t a1)
{
  unint64_t v1;
  char **v2;

  v1 = *(char *)(a1 + 48);
  if (v1 > 6)
    v2 = &selRef_redColor;
  else
    v2 = off_100446A68[v1];
  return objc_msgSend((id)objc_opt_self(UIColor), *v2);
}

uint64_t sub_10011995C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000EDC8(&qword_1004816B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10011999C(void *a1)
{
  uint64_t v1;

  sub_10010F4B8(a1, v1);
}

uint64_t sub_1001199A4(_QWORD *a1, uint64_t a2, __n128 a3, __n128 a4, __n128 a5, float32x4_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t result;
  unint64_t v17;
  double (*v18)(void);
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  double (*v23)(void);
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t **v35;
  float32x4_t v36;
  int32x4_t v37;
  float32x2_t v38;
  float32x2_t v39;
  float32x4_t v40;
  int32x4_t v41;
  float32x2_t v42;
  float32x2_t v43;
  float32x4_t v44;
  uint64_t v45;
  float32x4_t v46;
  unint64_t v47;
  __n128 v48;
  __n128 v49;
  __n128 v50;
  __n128 v51;
  __n128 v52;
  __n128 v53;
  __n128 v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  unsigned __int8 *v58;
  uint64_t v59;
  double v60;
  _QWORD v61[4];
  __n128 v62;
  __n128 v63;
  __n128 v64;
  __n128 v65;
  __n128 v66;
  __n128 v67;
  __n128 v68;
  uint64_t (*v69[3])(void);
  _BYTE v70[24];
  _BYTE v71[24];
  _BYTE v72[16];

  v7 = v6;
  *(float32x4_t *)v69 = a6;
  v68 = a5;
  v67 = a4;
  v66 = a3;
  v10 = sub_10000EDC8(&qword_100484AA8);
  __chkstk_darwin(v10);
  v12 = (char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MetricsManager.EdgeGuideMetric(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (unint64_t *)(a2 + direct field offset for WorldEdge.edgePlanesMetrics);
  result = swift_beginAccess(a2 + direct field offset for WorldEdge.edgePlanesMetrics, v72, 0, 0);
  v17 = *v15;
  if ((*v15 & 0xFF0000) != 0x30000)
  {
    v61[1] = v14;
    v61[2] = v12;
    v61[3] = v7;
    v61[0] = HIDWORD(v17);
    v18 = *(double (**)(void))((swift_isaMask & *a1) + 0x2A0);
    v19.n128_f64[0] = ((double (*)(uint64_t))v18)(result);
    v65 = v19;
    v64 = v20;
    v63 = v21;
    v62 = v22;
    v23 = *(double (**)(void))((swift_isaMask & *a1) + 0x2A8);
    v24.n128_f64[0] = v23();
    LODWORD(v60) = 1056964608;
    v28.n128_f64[0] = slerp(transform1:transform2:percent:)(v65, v64, v63, v62, v24, v25, v26, v27, v60);
    v32.n128_f64[0] = simd_float4x4.position.getter(v28, v29, v30, v31);
    v65 = v32;
    *(double *)v33.i64 = simd_float4x4.position.getter(v66, v67, v68, *(__n128 *)v69);
    v34 = vsubq_f32(v33, (float32x4_t)v65);
    v68 = (__n128)v34;
    v34.i32[3] = 0;
    *(float32x4_t *)v69 = v34;
    v35 = (float32x4_t **)(a2 + direct field offset for WorldEdge.backingPlanes);
    swift_beginAccess(a2 + direct field offset for WorldEdge.backingPlanes, v71, 0, 0);
    v36 = *(float32x4_t *)v69;
    if ((*v35)[1].i64[0])
      v36 = (*v35)[3];
    v37 = (int32x4_t)vmulq_f32(v36, v36);
    v37.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v37, 2), vadd_f32(*(float32x2_t *)v37.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v37.i8, 1))).u32[0];
    v38 = vrsqrte_f32((float32x2_t)v37.u32[0]);
    v39 = vmul_f32(v38, vrsqrts_f32((float32x2_t)v37.u32[0], vmul_f32(v38, v38)));
    v40 = vmulq_n_f32(v36, vmul_f32(v39, vrsqrts_f32((float32x2_t)v37.u32[0], vmul_f32(v39, v39))).f32[0]);
    v41 = (int32x4_t)vmulq_f32(*(float32x4_t *)v69, *(float32x4_t *)v69);
    v41.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v41, 2), vadd_f32(*(float32x2_t *)v41.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v41.i8, 1))).u32[0];
    v42 = vrsqrte_f32((float32x2_t)v41.u32[0]);
    v43 = vmul_f32(v42, vrsqrts_f32((float32x2_t)v41.u32[0], vmul_f32(v42, v42)));
    *(float32x4_t *)v69 = vmulq_n_f32(*(float32x4_t *)v69, vmul_f32(v43, vrsqrts_f32((float32x2_t)v41.u32[0], vmul_f32(v43, v43))).f32[0]);
    v44 = vmulq_f32(v40, *(float32x4_t *)v69);
    acosf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v44, 2), vaddq_f32(v44, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v44.f32, 1))).f32[0]);
    Float.piDiv2.unsafeMutableAddressor(v45);
    v46 = vmulq_f32(*(float32x4_t *)v69, *(float32x4_t *)SIMD3<>.up.unsafeMutableAddressor());
    acosf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v46, 2), vaddq_f32(v46, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v46.f32, 1))).f32[0]);
    v69[0] = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8);
    v67.n128_u64[0] = v69[0]();
    v66.n128_u64[0] = v47;
    v48.n128_f64[0] = v18();
    v52.n128_f64[0] = simd_float4x4.position.getter(v48, v49, v50, v51);
    v64 = v52;
    v53.n128_f64[0] = v23();
    v57.n128_f64[0] = simd_float4x4.position.getter(v53, v54, v55, v56);
    v63 = v57;
    v58 = (unsigned __int8 *)(a2 + direct field offset for WorldEdge.type);
    swift_beginAccess(v58, v70, 0, 0);
    v59 = *v58;
    v65.n128_u64[0] = (unint64_t)a1;
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_100119FD0(_QWORD *a1, uint64_t a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t result;
  unint64_t v17;
  __n128 v18;
  double (*v19)(void);
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t **v26;
  float32x4_t v27;
  int32x4_t v28;
  float32x2_t v29;
  float32x2_t v30;
  float32x4_t v31;
  int32x4_t v32;
  float32x2_t v33;
  float32x2_t v34;
  float32x4_t v35;
  uint64_t v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  __int128 v41;
  __n128 v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  __int128 v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  __n128 v50;
  __int128 v51;
  uint64_t v52;
  _OWORD v53[3];
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  __n128 v59;
  __n128 v60;
  __n128 v61;
  __n128 v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[16];

  v7 = v6;
  v62 = a6;
  v61 = a5;
  v60 = a4;
  v59 = a3;
  v10 = sub_10000EDC8(&qword_100484AB0);
  __chkstk_darwin(v10);
  v12 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MetricsManager.SurfaceVectorGuideMetric(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (unint64_t *)(a2 + direct field offset for WorldEdge.edgePlanesMetrics);
  result = swift_beginAccess(a2 + direct field offset for WorldEdge.edgePlanesMetrics, v65, 0, 0);
  v17 = *v15;
  if ((*v15 & 0xFF0000) != 0x30000)
  {
    v56 = v14;
    v57 = v12;
    v58 = v7;
    v55 = HIDWORD(v17);
    v18.n128_f64[0] = simd_float4x4.position.getter(v59, v60, v61, v62);
    v62 = v18;
    v19 = *(double (**)(void))((swift_isaMask & *a1) + 0x2A0);
    v20.n128_f64[0] = v19();
    *(double *)v24.i64 = simd_float4x4.position.getter(v20, v21, v22, v23);
    v25 = vsubq_f32((float32x4_t)v62, v24);
    v25.i32[3] = 0;
    v61 = (__n128)v25;
    v26 = (float32x4_t **)(a2 + direct field offset for WorldEdge.backingPlanes);
    swift_beginAccess(a2 + direct field offset for WorldEdge.backingPlanes, v64, 0, 0);
    v27 = (float32x4_t)v61;
    if ((*v26)[1].i64[0])
      v27 = (*v26)[3];
    v28 = (int32x4_t)vmulq_f32(v27, v27);
    v28.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v28, 2), vadd_f32(*(float32x2_t *)v28.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v28.i8, 1))).u32[0];
    v29 = vrsqrte_f32((float32x2_t)v28.u32[0]);
    v30 = vmul_f32(v29, vrsqrts_f32((float32x2_t)v28.u32[0], vmul_f32(v29, v29)));
    v31 = vmulq_n_f32(v27, vmul_f32(v30, vrsqrts_f32((float32x2_t)v28.u32[0], vmul_f32(v30, v30))).f32[0]);
    v32 = (int32x4_t)vmulq_f32((float32x4_t)v61, (float32x4_t)v61);
    v32.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v32, 2), vadd_f32(*(float32x2_t *)v32.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v32.i8, 1))).u32[0];
    v33 = vrsqrte_f32((float32x2_t)v32.u32[0]);
    v34 = vmul_f32(v33, vrsqrts_f32((float32x2_t)v32.u32[0], vmul_f32(v33, v33)));
    v35 = vmulq_f32(v31, vmulq_n_f32((float32x4_t)v61, vmul_f32(v34, vrsqrts_f32((float32x2_t)v32.u32[0], vmul_f32(v34, v34))).f32[0]));
    acosf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v35, 2), vaddq_f32(v35, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v35.f32, 1))).f32[0]);
    v60.n128_u64[0] = *(_QWORD *)((swift_isaMask & *a1) + 0xB8);
    v59.n128_u64[0] = ((uint64_t (*)(void))v60.n128_u64[0])();
    v54 = v36;
    v37.n128_f64[0] = v19();
    *(double *)&v41 = simd_float4x4.position.getter(v37, v38, v39, v40);
    v53[2] = v41;
    v42.n128_f64[0] = (*(double (**)(void))((swift_isaMask & *a1) + 0x2A8))();
    *(double *)&v46 = simd_float4x4.position.getter(v42, v43, v44, v45);
    v53[1] = v46;
    v61.n128_u64[0] = (unint64_t)v19;
    v47.n128_f64[0] = v19();
    *(double *)&v51 = simd_float4x4.position.getter(v47, v48, v49, v50);
    v53[0] = v51;
    v52 = a2 + direct field offset for WorldEdge.type;
    swift_beginAccess(v52, v63, 0, 0);
    __asm { BR              X10 }
  }
  return result;
}

void sub_10011A570(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _BYTE v35[40];
  uint64_t v36;
  __int128 v37;
  __int128 v38[2];
  uint64_t v39;
  __int128 v40;
  _OWORD v41[2];
  uint64_t v42;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10000EDC8(&qword_100484A88);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v34 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v33 = (unint64_t)(63 - v4) >> 6;
  v7 = v3 + 8;
  swift_bridgeObjectRetain(a1);
  swift_retain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v33)
      goto LABEL_37;
    v14 = *(_QWORD *)(v34 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v33)
        goto LABEL_37;
      v14 = *(_QWORD *)(v34 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v33)
          goto LABEL_37;
        v14 = *(_QWORD *)(v34 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v33)
            goto LABEL_37;
          v14 = *(_QWORD *)(v34 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_100068B24(*(_QWORD *)(a1 + 56) + 40 * v12, (uint64_t)v41);
    *(_QWORD *)&v40 = v19;
    *((_QWORD *)&v40 + 1) = v18;
    v37 = v40;
    v38[0] = v41[0];
    v38[1] = v41[1];
    v39 = v42;
    v20 = v18;
    swift_bridgeObjectRetain(v18);
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
    sub_10001C01C(v38, (uint64_t)v35);
    v22 = sub_10000EDC8(&qword_100484A90);
    v23 = sub_100018148(0, (unint64_t *)&qword_10047C128, NSObject_ptr);
    swift_dynamicCast(&v36, v35, v22, v23, 7);
    v24 = v36;
    v25 = NSObject._rawHashValue(seed:)(v3[5]);
    v26 = -1 << *((_BYTE *)v3 + 32);
    v27 = v25 & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~v7[v27 >> 6]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v27) & ~v7[v27 >> 6])) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = v7[v28];
      }
      while (v32 == -1);
      v9 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)((char *)v7 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = 8 * v9;
    *(_QWORD *)(v3[6] + v10) = v21;
    *(_QWORD *)(v3[7] + v10) = v24;
    ++v3[2];
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v33)
  {
LABEL_37:
    swift_release();
    sub_100020858(a1);
    return;
  }
  v14 = *(_QWORD *)(v34 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v33)
      goto LABEL_37;
    v14 = *(_QWORD *)(v34 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_10011A8F8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  id v32;
  _BYTE v33[40];
  _QWORD v34[2];
  _BYTE v35[40];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10000EDC8(&qword_100484A98);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v31 = a1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 64);
  v30 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = (v6 - 1) & v6;
      v12 = __clz(__rbit64(v6)) | (v7 << 6);
      v13 = v7;
    }
    else
    {
      v14 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_36;
      if (v14 >= v30)
      {
LABEL_33:
        sub_100020858(a1);
        return;
      }
      v15 = *(_QWORD *)(v31 + 8 * v14);
      v13 = v7 + 1;
      if (!v15)
      {
        v13 = v7 + 2;
        if (v7 + 2 >= v30)
          goto LABEL_33;
        v15 = *(_QWORD *)(v31 + 8 * v13);
        if (!v15)
        {
          v13 = v7 + 3;
          if (v7 + 3 >= v30)
            goto LABEL_33;
          v15 = *(_QWORD *)(v31 + 8 * v13);
          if (!v15)
          {
            v13 = v7 + 4;
            if (v7 + 4 >= v30)
              goto LABEL_33;
            v15 = *(_QWORD *)(v31 + 8 * v13);
            if (!v15)
            {
              v16 = v7 + 5;
              if (v7 + 5 >= v30)
                goto LABEL_33;
              v15 = *(_QWORD *)(v31 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v13 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_37;
                  if (v13 >= v30)
                    goto LABEL_33;
                  v15 = *(_QWORD *)(v31 + 8 * v13);
                  ++v16;
                  if (v15)
                    goto LABEL_26;
                }
              }
              v13 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v11 = (v15 - 1) & v15;
      v12 = __clz(__rbit64(v15)) + (v13 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_100068B24(*(_QWORD *)(a1 + 56) + 40 * v12, (uint64_t)v35);
    v34[0] = v19;
    v34[1] = v18;
    sub_100068B24((uint64_t)v35, (uint64_t)v33);
    swift_bridgeObjectRetain_n(v18, 2);
    sub_100036600((uint64_t)v34, &qword_100484AA0);
    v20 = sub_10000EDC8(&qword_100484A90);
    v21 = sub_100018148(0, (unint64_t *)&qword_10047C128, NSObject_ptr);
    if (!swift_dynamicCast(&v32, v33, v20, v21, 6))
    {
      v32 = 0;
      swift_bridgeObjectRelease(v18);

      sub_100020858(a1);
      swift_release();
      return;
    }
    v22 = v32;
    v23 = sub_1000C80A8(v19, v18);
    v24 = v23;
    if ((v25 & 1) != 0)
    {
      v8 = (uint64_t *)(v3[6] + 16 * v23);
      swift_bridgeObjectRelease(v8[1]);
      *v8 = v19;
      v8[1] = v18;
      v9 = v3[7];
      v10 = 8 * v24;

      *(_QWORD *)(v9 + v10) = v22;
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v23;
    v26 = (uint64_t *)(v3[6] + 16 * v23);
    *v26 = v19;
    v26[1] = v18;
    *(_QWORD *)(v3[7] + 8 * v23) = v22;
    v27 = v3[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_35;
    v3[2] = v29;
LABEL_8:
    v7 = v13;
    v6 = v11;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

Class sub_10011AC54(uint64_t a1)
{
  uint64_t (*v1)(__n128);
  __n128 v2;
  uint64_t v3;
  NSDictionary v4;

  v1 = *(uint64_t (**)(__n128))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_100018148(0, (unint64_t *)&qword_10047C128, NSObject_ptr);
    v4.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4.super.isa = 0;
  }
  return v4.super.isa;
}

void sub_10011ACD8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  _QWORD aBlock[5];
  uint64_t v11;

  v1 = (int *)type metadata accessor for AppSession(0);
  __chkstk_darwin(v1);
  v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v3 + 58) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((CFTimeInterval *)v3 + 14) = CACurrentMediaTime();
  *((_WORD *)v3 + 60) = 1;
  v3[122] = 0;
  v4 = &v3[v1[23]];
  v5 = type metadata accessor for ARCamera.TrackingState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = v1[24];
  *(CFTimeInterval *)&v3[v6] = CACurrentMediaTime();
  v3[v1[25]] = 0;
  v7 = v0 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState, aBlock, 33, 0);
  sub_100124C00((uint64_t)v3, v7);
  swift_endAccess(aBlock);
  v8 = objc_msgSend(objc_allocWithZone((Class)SBSExternalDisplayService), "init");
  aBlock[4] = sub_100124C44;
  v11 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10011FEDC;
  aBlock[3] = &unk_100446CA8;
  v9 = _Block_copy(aBlock);
  swift_retain();
  objc_msgSend(v8, "getConnectedDisplayInfoWithCompletionHandler:", v9, swift_release().n128_f64[0]);
  _Block_release(v9);

}

void sub_10011AE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  void (**v48)(uint64_t, uint64_t, uint64_t, int *);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  float v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  float32x2_t *v65;
  float v66;
  uint64_t v67;
  float32x4_t v68;
  float32x4_t v69;
  float32x4_t v70;
  float32x2_t v71;
  __int16 v72;
  int v73;
  __int16 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (**v91)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v98;
  void (**v99)(uint64_t, uint64_t, uint64_t, int *);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  float v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t *v112;
  float v113;
  const double *v114;
  unsigned int v115;
  uint64_t v116;
  float64x2_t v117;
  float32x2_t *v118;
  float32x2_t v119;
  __int16 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  unint64_t v125;
  char v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  int *v135;
  void (**v136)(uint64_t, uint64_t, uint64_t, int *);
  unint64_t v137;
  void (*v138)(uint64_t, uint64_t, uint64_t, int *);
  uint64_t v139;
  void (*v140)(uint64_t, uint64_t, uint64_t, int *);
  uint64_t *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  float v148;
  char *v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  float v154;
  uint64_t v155;
  const double *v156;
  unsigned int v157;
  uint64_t v158;
  float64x2_t v159;
  float32x2_t *v160;
  float32x2_t v161;
  int v162;
  BOOL v163;
  const mach_header_64 *v164;
  _OWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  char v170;
  char v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  _OWORD *v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  _OWORD *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  int v188;
  float v189;
  unsigned int (*v190)(uint64_t, uint64_t, uint64_t);
  uint64_t v191;
  uint64_t v192;
  double v193;
  float v194;
  uint64_t *v195;
  void (*v196)(char *, uint64_t, uint64_t);
  char *v197;
  uint64_t v198;
  char *v199;
  void (*v200)(char *, uint64_t);
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  float v205;
  uint64_t v206;
  float v207;
  uint64_t v208;
  float v209;
  float *v210;
  float v211;
  float v212;
  float v213;
  float v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  char v220;
  char v221;
  char v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t *v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  void (*v238)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (**v239)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  _OWORD *v250;
  void (*v251)(uint64_t, uint64_t, uint64_t, int *);
  void (**v252)(uint64_t, uint64_t, uint64_t, int *);
  unint64_t v253;
  unint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  _BYTE v260[24];
  uint64_t v261[3];
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  float v267;
  uint64_t v268;
  float v269;
  float v270;
  float v271;
  uint64_t v272;
  _QWORD v273[3];
  _WORD v274[32];
  _QWORD v275[9];
  float v276;
  float v277;
  __int16 v278;
  _QWORD v279[9];
  float v280;
  float v281;
  __int16 v282;

  v1 = v0;
  v2 = sub_10000EDC8(&qword_100484AB8);
  __chkstk_darwin(v2);
  v244 = (uint64_t)&v225 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000EDC8(&qword_100484A78);
  __chkstk_darwin(v4);
  v243 = (char *)&v225 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000EDC8(&qword_100484AB0);
  __chkstk_darwin(v6);
  v242 = (char *)&v225 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000EDC8(&qword_100484AA8);
  __chkstk_darwin(v8);
  v10 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v225 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  v12 = __chkstk_darwin(v11);
  v233 = (uint64_t)&v225 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v234 = (char *)&v225 - v15;
  v16 = __chkstk_darwin(v14);
  v245 = (char *)&v225 - v17;
  v18 = __chkstk_darwin(v16);
  v241 = (uint64_t)&v225 - v19;
  __chkstk_darwin(v18);
  v240 = (uint64_t *)((char *)&v225 - v20);
  v21 = type metadata accessor for Date(0);
  v257 = *(_QWORD *)(v21 - 8);
  v258 = v21;
  v22 = __chkstk_darwin(v21);
  v227 = (char *)&v225 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v232 = (char *)&v225 - v25;
  v26 = __chkstk_darwin(v24);
  v231 = (char *)&v225 - v27;
  v28 = __chkstk_darwin(v26);
  v230 = (char *)&v225 - v29;
  __chkstk_darwin(v28);
  v229 = (char *)&v225 - v30;
  v31 = type metadata accessor for AppSession(0);
  __chkstk_darwin(v31);
  v33 = (char *)&v225 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v1 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState, &v265, 0, 0);
  sub_100036344(v34, (uint64_t)v33, type metadata accessor for AppSession);
  sub_100024FC0();
  sub_1000258F8((uint64_t)v33, type metadata accessor for AppSession);
  v226 = v1;
  v35 = (uint64_t *)(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_edgeGuideMetrics);
  swift_beginAccess(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_edgeGuideMetrics, &v264, 0, 0);
  v36 = *v35;
  v37 = swift_bridgeObjectRetain(*v35);
  v38 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006BA9C(v37);
  swift_bridgeObjectRelease(v36);
  v39 = *((_QWORD *)v38 + 2);
  if (v39)
  {
    v40 = type metadata accessor for MetricsManager.EdgeGuideMetric(0);
    v41 = *(_QWORD *)(v40 - 8);
    v42 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    v236 = v41;
    v43 = *(_QWORD *)(v41 + 72);
    swift_retain();
    v237 = v40;
    v238 = v38;
    v239 = v10;
    v228 = v35;
    v235 = v43;
    do
    {
      v255 = v42;
      v256 = v39;
      v47 = (_QWORD *)((char *)v38 + v42);
      v249 = *(unsigned int *)((char *)v38 + v42 + 24);
      v247 = *(unsigned int *)((char *)v38 + v42 + 16);
      v248 = *(unsigned int *)((char *)v38 + v42 + 20);
      v246 = *(unsigned int *)((char *)v38 + v42 + 48);
      v253 = *(unsigned int *)((char *)v38 + v42 + 52);
      v251 = (void (*)(uint64_t, uint64_t, uint64_t, int *))*(unsigned int *)((char *)v38 + v42 + 72);
      v48 = *(void (***)(uint64_t, uint64_t, uint64_t, int *))((char *)v38 + v42 + 56);
      v49 = *(_QWORD *)((char *)v38 + v42 + 64);
      v252 = v48;
      v50 = v47[11];
      v254 = v47[10];
      v51 = (uint64_t)v47 + *(int *)(v40 + 68);
      v52 = v47[5];
      v250 = (_OWORD *)v47[4];
      v53 = (uint64_t)v240;
      sub_1000C219C(v51, (uint64_t)v240);
      v54 = v257;
      v55 = (int *)v40;
      v56 = v258;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v257 + 48))(v53, 1, v258) == 1)
      {
        swift_bridgeObjectRetain(v49);
        swift_bridgeObjectRetain(v50);
        swift_bridgeObjectRetain(v52);
        sub_100036600(v53, (uint64_t *)&unk_10047E440);
        v57 = 0.0;
      }
      else
      {
        v58 = v229;
        (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v229, v53, v56);
        v59 = (char *)v47 + v55[16];
        swift_bridgeObjectRetain(v49);
        swift_bridgeObjectRetain(v50);
        swift_bridgeObjectRetain(v52);
        v57 = Date.timeIntervalSince(_:)(v59);
        v60 = v58;
        v35 = v228;
        (*(void (**)(char *, uint64_t))(v54 + 8))(v60, v56);
      }
      v61 = v49;
      v62 = v55[18];
      v38 = v238;
      v63 = v255;
      v64 = (char *)v238 + v255;
      v65 = (float32x2_t *)((char *)v238 + v255 + v62);
      v66 = 0.0;
      if ((v65[2].i8[0] & 1) == 0)
      {
        v67 = v55[19];
        if ((v64[v67 + 16] & 1) == 0)
        {
          v68.i64[0] = *(_QWORD *)&v64[v67];
          *(float32x2_t *)v69.f32 = *v65;
          v69.i64[1] = *(_QWORD *)((char *)v238 + v62 + v255 + 8);
          v68.i64[1] = *(_QWORD *)((char *)v238 + v67 + v255 + 8);
          v70 = vsubq_f32(v69, v68);
          v71 = vsub_f32(*v65, *(float32x2_t *)&v64[v67]);
          v66 = sqrtf(COERCE_FLOAT(vmulq_f32(v70, v70).i32[2]) + vaddv_f32(vmul_f32(v71, v71)));
        }
      }
      v72 = v64[96];
      v73 = v64[97];
      v279[0] = v247 | (v246 << 32);
      v279[1] = v249 | (v248 << 32);
      v279[2] = v253 | ((_QWORD)v251 << 32);
      v279[3] = v252;
      v279[4] = v61;
      if (v73)
        v74 = 256;
      else
        v74 = 0;
      v279[5] = v254;
      v279[6] = v50;
      v279[7] = v250;
      v279[8] = v52;
      v280 = v57;
      v281 = v66;
      v282 = v74 | v72;
      sub_100123FA4((uint64_t)v279);
      swift_bridgeObjectRelease(v52);
      swift_bridgeObjectRelease(v50);
      swift_bridgeObjectRelease(v61);
      v75 = *(_QWORD *)v64;
      v76 = *((_QWORD *)v64 + 1);
      swift_beginAccess(v35, v275, 33, 0);
      v77 = *v35;
      swift_bridgeObjectRetain(v76);
      swift_bridgeObjectRetain(v77);
      v78 = sub_1000C80A8(v75, v76);
      LOBYTE(v75) = v79;
      swift_bridgeObjectRelease(v77);
      if ((v75 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v35);
        v81 = *v35;
        v273[0] = *v35;
        *v35 = 0x8000000000000000;
        v45 = (uint64_t)v239;
        v40 = v237;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000BE4E4();
          v81 = v273[0];
        }
        swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v81 + 48) + 16 * v78 + 8));
        v46 = v235;
        sub_10006CAB4(*(_QWORD *)(v81 + 56) + v78 * v235, v45, type metadata accessor for MetricsManager.EdgeGuideMetric);
        sub_100094240(v78, v81);
        v82 = *v35;
        *v35 = v81;
        swift_bridgeObjectRelease(v82);
        v44 = 0;
      }
      else
      {
        v44 = 1;
        v45 = (uint64_t)v239;
        v40 = v237;
        v46 = v235;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v236 + 56))(v45, v44, 1, v40);
      swift_endAccess(v275);
      swift_bridgeObjectRelease(v76);
      sub_100036600(v45, &qword_100484AA8);
      v42 = v63 + v46;
      v39 = v256 - 1;
    }
    while (v256 != 1);
    swift_release();
  }
  swift_release();
  v83 = (uint64_t *)(v226 + OBJC_IVAR____TtC7Measure14MetricsManager_surfaceVectorGuideMetrics);
  swift_beginAccess(v226 + OBJC_IVAR____TtC7Measure14MetricsManager_surfaceVectorGuideMetrics, &v263, 0, 0);
  v84 = *v83;
  v85 = swift_bridgeObjectRetain(*v83);
  v86 = sub_10006BA88(v85);
  swift_bridgeObjectRelease(v84);
  v87 = (_QWORD *)v86[2];
  v88 = v258;
  v89 = (uint64_t)v245;
  if (v87)
  {
    v90 = type metadata accessor for MetricsManager.SurfaceVectorGuideMetric(0);
    v91 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 - 8);
    v92 = (*((unsigned __int8 *)v91 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v91 + 80);
    v239 = v91;
    v93 = v91[9];
    swift_retain();
    v240 = v83;
    v94 = v90;
    v255 = (uint64_t)v86;
    v256 = v90;
    v238 = v93;
    do
    {
      v98 = (_QWORD *)((char *)v86 + v92);
      v247 = *(unsigned int *)((char *)v86 + v92 + 24);
      v246 = *(unsigned int *)((char *)v86 + v92 + 16);
      v249 = *(unsigned int *)((char *)v86 + v92 + 20);
      v248 = *(unsigned int *)((char *)v86 + v92 + 48);
      v253 = *(unsigned int *)((char *)v86 + v92 + 72);
      v254 = (unint64_t)v87;
      v99 = *(void (***)(uint64_t, uint64_t, uint64_t, int *))((char *)v86 + v92 + 56);
      v100 = *(_QWORD *)((char *)v86 + v92 + 64);
      v101 = v98[11];
      v251 = (void (*)(uint64_t, uint64_t, uint64_t, int *))v98[10];
      v252 = v99;
      v102 = (uint64_t)v98 + *(int *)(v94 + 60);
      v103 = v98[5];
      v250 = (_OWORD *)v98[4];
      v104 = v241;
      sub_1000C219C(v102, v241);
      v105 = v257;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v257 + 48))(v104, 1, v88) == 1)
      {
        swift_bridgeObjectRetain(v100);
        swift_bridgeObjectRetain(v101);
        swift_bridgeObjectRetain(v103);
        sub_100036600(v104, (uint64_t *)&unk_10047E440);
        v106 = 0.0;
      }
      else
      {
        v107 = v230;
        (*(void (**)(char *, uint64_t, uint64_t))(v105 + 32))(v230, v104, v88);
        v108 = (char *)v98 + *(int *)(v256 + 56);
        swift_bridgeObjectRetain(v100);
        swift_bridgeObjectRetain(v101);
        swift_bridgeObjectRetain(v103);
        v106 = Date.timeIntervalSince(_:)(v108);
        v109 = v107;
        v94 = v256;
        (*(void (**)(char *, uint64_t))(v105 + 8))(v109, v88);
      }
      v110 = *(int *)(v94 + 68);
      v111 = v255 + v92;
      v112 = (uint64_t *)(v255 + v92 + v110);
      v113 = 0.0;
      v89 = (uint64_t)v245;
      if ((v112[2] & 1) == 0)
      {
        v114 = (const double *)(v255 + v110 + v92 + 8);
        v116 = *v112;
        v115 = *v112;
        v117 = vld1q_dup_f64(v114);
        v118 = (float32x2_t *)(v111 + *(int *)(v256 + 64));
        v119 = vsub_f32(*v118, (float32x2_t)__PAIR64__(HIDWORD(v116), v115));
        v113 = sqrtf((float)((float)(v118[1].f32[0] - *(float *)&v117.f64[1])* (float)(v118[1].f32[0] - *(float *)&v117.f64[1]))+ vaddv_f32(vmul_f32(v119, v119)));
      }
      v120 = *(unsigned __int8 *)(v111 + 96);
      v275[0] = v246 | (v247 << 32);
      v275[1] = v249 | (v248 << 32);
      v275[2] = v253;
      v275[3] = v252;
      v275[4] = v100;
      v275[5] = v251;
      v275[6] = v101;
      v275[7] = v250;
      v275[8] = v103;
      v276 = v106;
      v277 = v113;
      v278 = v120 | 0x4000;
      sub_100123FA4((uint64_t)v275);
      swift_bridgeObjectRelease(v103);
      swift_bridgeObjectRelease(v101);
      swift_bridgeObjectRelease(v100);
      v121 = *(_QWORD *)v111;
      v122 = *(_QWORD *)(v111 + 8);
      v123 = v240;
      swift_beginAccess(v240, v273, 33, 0);
      v124 = *v123;
      swift_bridgeObjectRetain(v122);
      swift_bridgeObjectRetain(v124);
      v125 = sub_1000C80A8(v121, v122);
      LOBYTE(v121) = v126;
      swift_bridgeObjectRelease(v124);
      if ((v121 & 1) != 0)
      {
        v127 = swift_isUniquelyReferenced_nonNull_native(*v123);
        v128 = *v123;
        v266 = *v123;
        *v123 = 0x8000000000000000;
        v88 = v258;
        v96 = (uint64_t)v242;
        v97 = v238;
        if ((v127 & 1) == 0)
        {
          sub_1000BE4F8();
          v128 = v266;
        }
        swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v128 + 48) + 16 * v125 + 8));
        sub_10006CAB4(*(_QWORD *)(v128 + 56) + v125 * (_QWORD)v97, v96, type metadata accessor for MetricsManager.SurfaceVectorGuideMetric);
        sub_10009424C(v125, v128);
        v129 = *v123;
        *v123 = v128;
        swift_bridgeObjectRelease(v129);
        v95 = 0;
      }
      else
      {
        v95 = 1;
        v88 = v258;
        v96 = (uint64_t)v242;
        v97 = v238;
      }
      v94 = v256;
      v239[7](v96, v95, 1, v256);
      swift_endAccess(v273);
      swift_bridgeObjectRelease(v122);
      sub_100036600(v96, &qword_100484AB0);
      v92 += (unint64_t)v97;
      v86 = (_QWORD *)v255;
      v87 = (_QWORD *)(v254 - 1);
    }
    while (v254 != 1);
    swift_release();
  }
  swift_release();
  v130 = (uint64_t *)(v226 + OBJC_IVAR____TtC7Measure14MetricsManager_verticalGuideMetrics);
  swift_beginAccess(v226 + OBJC_IVAR____TtC7Measure14MetricsManager_verticalGuideMetrics, &v262, 0, 0);
  v131 = *v130;
  v132 = swift_bridgeObjectRetain(*v130);
  v133 = sub_10006BA74(v132);
  swift_bridgeObjectRelease(v131);
  v134 = v133[2];
  if (v134)
  {
    v135 = (int *)type metadata accessor for MetricsManager.VerticalGuideMetric(0);
    v136 = (void (**)(uint64_t, uint64_t, uint64_t, int *))*((_QWORD *)v135 - 1);
    v137 = (*((unsigned __int8 *)v136 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v136 + 80);
    v252 = v136;
    v138 = v136[9];
    v250 = v274;
    swift_retain();
    v253 = (unint64_t)v133;
    v251 = v138;
    do
    {
      v256 = v134;
      v141 = v130;
      v142 = (char *)v133 + v137;
      v254 = *(unsigned int *)((char *)v133 + v137 + 28);
      v143 = *(unsigned int *)((char *)v133 + v137 + 20);
      v255 = *(unsigned int *)((char *)v133 + v137 + 16);
      sub_1000C219C((uint64_t)v133 + v137 + v135[10], v89);
      v144 = v257;
      v145 = v89;
      v146 = v89;
      v147 = v258;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v257 + 48))(v145, 1, v258) == 1)
      {
        sub_100036600(v146, (uint64_t *)&unk_10047E440);
        v148 = 0.0;
      }
      else
      {
        v149 = v231;
        (*(void (**)(char *, uint64_t, uint64_t))(v144 + 32))(v231, v146, v147);
        v148 = Date.timeIntervalSince(_:)(&v142[v135[9]]);
        v150 = v149;
        v133 = (_QWORD *)v253;
        (*(void (**)(char *, uint64_t))(v144 + 8))(v150, v147);
      }
      v89 = v146;
      v151 = v135[12];
      v152 = (char *)v133 + v137;
      v153 = (char *)v133 + v137 + v151;
      v154 = 0.0;
      v155 = (uint64_t)v243;
      v130 = v141;
      if ((v153[16] & 1) == 0)
      {
        v156 = (const double *)((char *)v133 + v151 + v137 + 8);
        v158 = *(_QWORD *)v153;
        v157 = *(_QWORD *)v153;
        v159 = vld1q_dup_f64(v156);
        v160 = (float32x2_t *)&v152[v135[11]];
        v161 = vsub_f32(*v160, (float32x2_t)__PAIR64__(HIDWORD(v158), v157));
        v154 = sqrtf((float)((float)(v160[1].f32[0] - *(float *)&v159.f64[1])* (float)(v160[1].f32[0] - *(float *)&v159.f64[1]))+ vaddv_f32(vmul_f32(v161, v161)));
      }
      v162 = v152[24];
      v273[0] = v254 | (v143 << 32);
      v273[1] = v255 | ((unint64_t)LODWORD(v148) << 32);
      v163 = v162 == 0;
      v164 = &_mh_execute_header;
      if (v163)
        v164 = 0;
      v273[2] = (unint64_t)v164 | LODWORD(v154);
      v165 = v250;
      *v250 = 0u;
      v165[1] = 0u;
      v165[2] = 0u;
      *((_QWORD *)v165 + 6) = 0;
      v274[28] = 0x8000;
      sub_100123FA4((uint64_t)v273);
      v166 = *(_QWORD *)v152;
      v167 = *((_QWORD *)v152 + 1);
      swift_beginAccess(v141, &v266, 33, 0);
      v168 = *v141;
      swift_bridgeObjectRetain(v167);
      swift_bridgeObjectRetain(v168);
      v169 = sub_1000C80A8(v166, v167);
      v171 = v170;
      swift_bridgeObjectRelease(v168);
      if ((v171 & 1) != 0)
      {
        v172 = swift_isUniquelyReferenced_nonNull_native(*v130);
        v173 = *v130;
        v261[0] = *v130;
        *v130 = 0x8000000000000000;
        if ((v172 & 1) == 0)
        {
          sub_1000BF408();
          v173 = v261[0];
        }
        swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v173 + 48) + 16 * v169 + 8));
        v140 = v251;
        sub_10006CAB4(*(_QWORD *)(v173 + 56) + v169 * (_QWORD)v251, v155, type metadata accessor for MetricsManager.VerticalGuideMetric);
        sub_1000946D8(v169, v173);
        v174 = *v130;
        *v130 = v173;
        swift_bridgeObjectRelease(v174);
        v139 = 0;
      }
      else
      {
        v139 = 1;
        v140 = v251;
      }
      v252[7](v155, v139, 1, v135);
      swift_endAccess(&v266);
      swift_bridgeObjectRelease(v167);
      sub_100036600(v155, &qword_100484A78);
      v137 += (unint64_t)v140;
      v134 = v256 - 1;
      v133 = (_QWORD *)v253;
    }
    while (v256 != 1);
    swift_release();
  }
  swift_release();
  v175 = (_QWORD *)(v226 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics);
  swift_beginAccess(v226 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics, v261, 0, 0);
  v176 = *v175;
  v177 = swift_bridgeObjectRetain(*v175);
  v178 = sub_10006BA60(v177);
  swift_bridgeObjectRelease(v176);
  v179 = (_OWORD *)v178[2];
  v180 = v257;
  if (v179)
  {
    v181 = type metadata accessor for MetricsManager.PersonHeightMetric(0);
    v182 = *(_QWORD *)(v181 - 8);
    v252 = (void (**)(uint64_t, uint64_t, uint64_t, int *))((char *)v178
                                                                  + ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80)));
    v253 = v182;
    v256 = *(_QWORD *)(v182 + 72);
    v249 = (unint64_t)v178;
    swift_retain();
    v183 = 0;
    v184 = (uint64_t)v234;
    v254 = (unint64_t)v175;
    v255 = v181;
    v250 = v179;
    do
    {
      v187 = (char *)v252 + v256 * (_QWORD)v183;
      v188 = v187[32];
      v189 = sub_10011F5A4();
      sub_1000C219C((uint64_t)&v187[*(int *)(v181 + 44)], v184);
      v190 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v180 + 48);
      v191 = v181;
      v192 = v258;
      if (v190(v184, 1, v258) == 1)
      {
        sub_100036600(v184, (uint64_t *)&unk_10047E440);
        v194 = 0.0;
        v195 = (uint64_t *)v254;
      }
      else
      {
        LODWORD(v251) = v188;
        v196 = *(void (**)(char *, uint64_t, uint64_t))(v180 + 32);
        v197 = v232;
        v196(v232, v184, v192);
        v198 = v233;
        sub_1000C219C((uint64_t)&v187[*(int *)(v191 + 48)], v233);
        if (v190(v198, 1, v192) == 1)
        {
          (*(void (**)(char *, uint64_t))(v180 + 8))(v197, v192);
          sub_100036600(v198, (uint64_t *)&unk_10047E440);
          v194 = 0.0;
        }
        else
        {
          v199 = v227;
          v196(v227, v198, v192);
          v194 = Date.timeIntervalSince(_:)(v197);
          v200 = *(void (**)(char *, uint64_t))(v180 + 8);
          v200(v199, v192);
          v200(v197, v192);
        }
        v184 = (uint64_t)v234;
        v179 = v250;
        v195 = (uint64_t *)v254;
        LOBYTE(v188) = (_BYTE)v251;
      }
      v201 = *((_QWORD *)v187 + 3);
      v181 = v255;
      v202 = &v187[*(int *)(v255 + 52)];
      LODWORD(v193) = *(_DWORD *)v202;
      if (v202[4])
        *(float *)&v193 = 0.0;
      v203 = *((_QWORD *)v187 + 2);
      v204 = *(_QWORD *)(v203 + 16);
      if (v204)
      {
        v205 = *(float *)(v203 + 32);
        v206 = v204 - 1;
        if (v206)
        {
          v208 = 0;
          v209 = *(float *)(v203 + 32);
          do
          {
            if (*(float *)(v203 + 36 + 4 * v208) < v209)
              v209 = *(float *)(v203 + 36 + 4 * v208);
            ++v208;
          }
          while (v206 != v208);
          v207 = vabds_f32(*(float *)&v193, v209);
          v210 = (float *)(v203 + 36);
          do
          {
            v211 = *v210++;
            v212 = v211;
            if (v205 < v211)
              v205 = v212;
            --v206;
          }
          while (v206);
        }
        else
        {
          v207 = vabds_f32(*(float *)&v193, v205);
        }
      }
      else
      {
        v207 = fabsf(*(float *)&v193);
        v205 = 0.0;
      }
      v213 = vabds_f32(v205, *(float *)&v193);
      v214 = sub_10011F28C(v193);
      v215 = *(_QWORD *)(*((_QWORD *)v187 + 2) + 16);
      LOBYTE(v266) = v188;
      *((float *)&v266 + 1) = v189;
      v267 = v194;
      v268 = v201;
      v269 = v207;
      v270 = v213;
      v271 = v214;
      v272 = v215;
      sub_10012488C((__int128 *)&v266);
      v216 = *(_QWORD *)v187;
      v217 = *((_QWORD *)v187 + 1);
      swift_beginAccess(v195, v260, 33, 0);
      v218 = *v195;
      swift_bridgeObjectRetain(v217);
      swift_bridgeObjectRetain(v218);
      v219 = sub_1000C80A8(v216, v217);
      v221 = v220;
      swift_bridgeObjectRelease(v218);
      if ((v221 & 1) != 0)
      {
        v222 = swift_isUniquelyReferenced_nonNull_native(*v195);
        v223 = *v195;
        v259 = *v195;
        *v195 = 0x8000000000000000;
        if ((v222 & 1) == 0)
        {
          sub_1000BEF74();
          v223 = v259;
        }
        swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v223 + 48) + 16 * v219 + 8));
        v186 = v244;
        sub_10006CAB4(*(_QWORD *)(v223 + 56) + v219 * v256, v244, type metadata accessor for MetricsManager.PersonHeightMetric);
        sub_100094258(v219, v223);
        v224 = *v195;
        *v195 = v223;
        swift_bridgeObjectRelease(v224);
        v185 = 0;
      }
      else
      {
        v185 = 1;
        v186 = v244;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v253 + 56))(v186, v185, 1, v181);
      v183 = (_OWORD *)((char *)v183 + 1);
      swift_endAccess(v260);
      swift_bridgeObjectRelease(v217);
      sub_100036600(v186, &qword_100484AB8);
      v180 = v257;
    }
    while (v183 != v179);
    swift_release();
  }
  swift_release();
}

void sub_10011C050(_QWORD *a1, float a2, float a3, float a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  float *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  _BYTE v42[24];

  v9 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000EDC8(&qword_100484AB8);
  v13 = __chkstk_darwin(v12);
  v41 = (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v39 - v15;
  v17 = type metadata accessor for MetricsManager.PersonHeightMetric(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (float *)((char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8);
  v22 = v40(v19);
  v24 = v23;
  v25 = (uint64_t *)(v4 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics);
  swift_beginAccess(v4 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics, v42, 32, 0);
  v26 = *v25;
  if (*(_QWORD *)(*v25 + 16) && (v27 = sub_1000C80A8(v22, v24), (v28 & 1) != 0))
  {
    sub_100036344(*(_QWORD *)(v26 + 56) + *(_QWORD *)(v18 + 72) * v27, (uint64_t)v16, type metadata accessor for MetricsManager.PersonHeightMetric);
    v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v29(v16, 0, 1, v17);
  }
  else
  {
    v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v29(v16, 1, 1, v17);
  }
  v30 = swift_bridgeObjectRelease(v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48))(v16, 1, v17, v30) == 1)
  {
    sub_100036600((uint64_t)v16, &qword_100484AB8);
    swift_endAccess(v42);
  }
  else
  {
    sub_10006CAB4((uint64_t)v16, (uint64_t)v21, type metadata accessor for MetricsManager.PersonHeightMetric);
    swift_endAccess(v42);
    v21[6] = a3;
    v21[7] = a4;
    v31 = (char *)v21 + *(int *)(v17 + 52);
    *(float *)v31 = a2;
    v31[4] = 0;
    Date.init()(v32);
    v33 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v11, 0, 1, v33);
    v34 = sub_10006494C((uint64_t)v11, (uint64_t)v21 + *(int *)(v17 + 44), (uint64_t *)&unk_10047E440);
    *((_BYTE *)v21 + 32) = 1;
    v35 = v40(v34);
    v37 = v36;
    v38 = v41;
    sub_100036344((uint64_t)v21, v41, type metadata accessor for MetricsManager.PersonHeightMetric);
    v29((char *)v38, 0, 1, v17);
    swift_beginAccess(v25, v42, 33, 0);
    sub_10011C954(v38, v35, v37, &qword_100484AB8, type metadata accessor for MetricsManager.PersonHeightMetric, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1000BCA44, (void (*)(uint64_t, uint64_t))sub_100093CA8);
    swift_endAccess(v42);
    sub_1000258F8((uint64_t)v21, type metadata accessor for MetricsManager.PersonHeightMetric);
  }
}

void sub_10011C37C(_QWORD *a1, float a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v26;
  char *v27;
  char *isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  _BYTE v40[24];

  v5 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000EDC8(&qword_100484AB8);
  v9 = __chkstk_darwin(v8);
  v39 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - v11;
  v13 = type metadata accessor for MetricsManager.PersonHeightMetric(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8);
  v18 = v38(v15);
  v20 = v19;
  v21 = (uint64_t *)(v2 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics);
  swift_beginAccess(v2 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics, v40, 32, 0);
  v22 = *v21;
  if (*(_QWORD *)(*v21 + 16) && (v23 = sub_1000C80A8(v18, v20), (v24 & 1) != 0))
  {
    sub_100036344(*(_QWORD *)(v22 + 56) + *(_QWORD *)(v14 + 72) * v23, (uint64_t)v12, type metadata accessor for MetricsManager.PersonHeightMetric);
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v25(v12, 0, 1, v13);
  }
  else
  {
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v25(v12, 1, 1, v13);
  }
  v26 = swift_bridgeObjectRelease(v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v14 + 48))(v12, 1, v13, v26) == 1)
  {
    sub_100036600((uint64_t)v12, &qword_100484AB8);
    swift_endAccess(v40);
  }
  else
  {
    sub_10006CAB4((uint64_t)v12, (uint64_t)v17, type metadata accessor for MetricsManager.PersonHeightMetric);
    swift_endAccess(v40);
    v27 = (char *)*((_QWORD *)v17 + 2);
    isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(v27);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      isUniquelyReferenced_nonNull_native = sub_10005F240(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
      v27 = isUniquelyReferenced_nonNull_native;
    }
    v30 = *((_QWORD *)v27 + 2);
    v29 = *((_QWORD *)v27 + 3);
    if (v30 >= v29 >> 1)
    {
      isUniquelyReferenced_nonNull_native = sub_10005F240((char *)(v29 > 1), v30 + 1, 1, v27);
      v27 = isUniquelyReferenced_nonNull_native;
    }
    *((_QWORD *)v27 + 2) = v30 + 1;
    *(float *)&v27[4 * v30 + 32] = a2;
    *((_QWORD *)v17 + 2) = v27;
    Date.init()(isUniquelyReferenced_nonNull_native);
    v31 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v7, 0, 1, v31);
    v32 = sub_10006494C((uint64_t)v7, (uint64_t)&v17[*(int *)(v13 + 40)], (uint64_t *)&unk_10047E440);
    v33 = v38(v32);
    v35 = v34;
    v36 = v39;
    sub_100036344((uint64_t)v17, v39, type metadata accessor for MetricsManager.PersonHeightMetric);
    v25((char *)v36, 0, 1, v13);
    swift_beginAccess(v21, v40, 33, 0);
    sub_10011C954(v36, v33, v35, &qword_100484AB8, type metadata accessor for MetricsManager.PersonHeightMetric, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1000BCA44, (void (*)(uint64_t, uint64_t))sub_100093CA8);
    swift_endAccess(v40);
    sub_1000258F8((uint64_t)v17, type metadata accessor for MetricsManager.PersonHeightMetric);
  }
}

void sub_10011C6F0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];

  v2 = sub_10000EDC8(&qword_100484AB8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for MetricsManager.PersonHeightMetric(0);
  v27 = *((_QWORD *)v5 - 1);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8);
  v10 = v9(v6);
  v12 = v11;
  v13 = &v8[v5[9]];
  Date.init()(v10);
  v14 = type metadata accessor for Date(0);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v13, 0, 1, v14);
  v15(&v8[v5[10]], 1, 1, v14);
  v15(&v8[v5[11]], 1, 1, v14);
  v16 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v15)(&v8[v5[12]], 1, 1, v14);
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v12;
  *((_QWORD *)v8 + 2) = _swiftEmptyArrayStorage;
  *((_QWORD *)v8 + 3) = 0;
  v8[32] = 0;
  v17 = &v8[v5[13]];
  *(_DWORD *)v17 = 0;
  v17[4] = 1;
  v18 = v9(v16);
  v20 = v19;
  sub_100036344((uint64_t)v8, (uint64_t)v4, type metadata accessor for MetricsManager.PersonHeightMetric);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v4, 0, 1, v5);
  v21 = v28;
  swift_beginAccess(v28 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics, v29, 33, 0);
  sub_10011C954((uint64_t)v4, v18, v20, &qword_100484AB8, type metadata accessor for MetricsManager.PersonHeightMetric, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1000BCA44, (void (*)(uint64_t, uint64_t))sub_100093CA8);
  swift_endAccess(v29);
  sub_1000258F8((uint64_t)v8, type metadata accessor for MetricsManager.PersonHeightMetric);
  v22 = v21 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess(v22, v29, 1, 0);
  v23 = *(_QWORD *)(v22 + 96);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v22 + 96) = v25;
}

uint64_t sub_10011C954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), void (*a6)(char *, uint64_t, uint64_t, uint64_t), void (*a7)(uint64_t, uint64_t))
{
  _QWORD *v7;
  _QWORD *v12;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v12 = v7;
  v16 = sub_10000EDC8(a4);
  __chkstk_darwin(v16);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a5(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v26 - v20;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v22 + 48))(a1, 1) == 1)
  {
    sub_100036600(a1, a4);
    a7(a2, a3);
    swift_bridgeObjectRelease(a3);
    return sub_100036600((uint64_t)v18, a4);
  }
  else
  {
    sub_10006CAB4(a1, (uint64_t)v21, a5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
    v27 = *v12;
    *v12 = 0x8000000000000000;
    a6(v21, a2, a3, isUniquelyReferenced_nonNull_native);
    v25 = *v12;
    *v12 = v27;
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(v25);
  }
}

void sub_10011CAC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  CFTimeInterval v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = type metadata accessor for ARCamera.TrackingState(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10000EDC8(&qword_10047C2C8);
  __chkstk_darwin(v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = CACurrentMediaTime();
  if (*(_BYTE *)(v1 + 16) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    v11 = v1 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
    swift_beginAccess(v11, v19, 33, 0);
    v12 = type metadata accessor for AppSession(0);
    sub_10006494C((uint64_t)v9, v11 + *(int *)(v12 + 92), &qword_10047C2C8);
    *(CFTimeInterval *)(v11 + *(int *)(v12 + 96)) = v10;
    v13 = v19;
  }
  else
  {
    v14 = v1 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
    v15 = 1;
    swift_beginAccess(v14, v19, 1, 0);
    if ((*(_BYTE *)(v14 + 121) & 1) == 0)
      v15 = *(_BYTE *)(v14 + 120) ^ 1;
    sub_100036344(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for ARCamera.TrackingState);
    v16 = type metadata accessor for ARCamera.TrackingState.Reason(0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v6, 2, v16) == 2
      && (v15 & 1) == 0)
    {
      *(_BYTE *)(v14 + 121) = 1;
    }
    sub_1000258F8((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for ARCamera.TrackingState);
    sub_100036344(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for ARCamera.TrackingState);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
    swift_beginAccess(v14, v18, 33, 0);
    v17 = type metadata accessor for AppSession(0);
    sub_10006494C((uint64_t)v9, v14 + *(int *)(v17 + 92), &qword_10047C2C8);
    *(CFTimeInterval *)(v14 + *(int *)(v17 + 96)) = v10;
    v13 = v18;
  }
  swift_endAccess(v13);
}

uint64_t sub_10011CCFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t j;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v3 = v1 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState, v16, 1, 0);
  if ((*(_BYTE *)(v3 + 73) & 1) == 0)
  {
    if ((unint64_t)a1 >> 62)
      goto LABEL_21;
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v15))
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        for (i = 0; ; ++i)
        {
          v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
          v8 = i + 1;
          if (__OFADD__(i, 1))
            break;
          v9 = v7;
          v10 = objc_opt_self(ARPlaneAnchor);
          if (swift_dynamicCastObjCClass(v9, v10))
          {
            swift_bridgeObjectRelease(a1);
            result = swift_unknownObjectRelease(v9);
            goto LABEL_17;
          }
          swift_unknownObjectRelease(v9);
          if (v8 == v5)
            return swift_bridgeObjectRelease(a1);
        }
        __break(1u);
      }
      else
      {
        for (j = 0; ; ++j)
        {
          v12 = j + 1;
          if (__OFADD__(j, 1))
            break;
          v13 = *(_QWORD *)(a1 + 8 * j + 32);
          v14 = objc_opt_self(ARPlaneAnchor);
          if (swift_dynamicCastObjCClass(v13, v14))
          {
            result = swift_bridgeObjectRelease(a1);
LABEL_17:
            *(_BYTE *)(v3 + 73) = 1;
            return result;
          }
          if (v12 == v5)
            return swift_bridgeObjectRelease(a1);
        }
      }
      __break(1u);
LABEL_21:
      if (a1 < 0)
        v15 = a1;
      else
        v15 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
    }
    return swift_bridgeObjectRelease(a1);
  }
  return result;
}

void sub_10011CE70(_QWORD *a1, __n128 a2, __n128 a3, float32x4_t a4, __n128 a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  double (*v13)(void);
  __n128 v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  float32x4_t v18;
  float32x4_t v19;
  int32x4_t v20;
  float32x2_t v21;
  float32x2_t v22;
  float32x4_t v23;
  float v24;
  uint64_t (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;
  float v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  __n128 v44;
  __int128 v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  __n128 v55;
  __n128 v56;
  float32x4_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  _BYTE v61[24];

  v60 = a5;
  v56 = a3;
  v57 = a4;
  v55 = a2;
  v6 = sub_10000EDC8(&qword_100484A78);
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for MetricsManager.VerticalGuideMetric(0);
  v58 = *((_QWORD *)v9 - 1);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12.n128_f64[0] = simd_float4x4.position.getter(v55, v56, (__n128)v57, v60);
  v60 = v12;
  v13 = *(double (**)(void))((swift_isaMask & *a1) + 0x2A0);
  v14.n128_f64[0] = v13();
  *(double *)v18.i64 = simd_float4x4.position.getter(v14, v15, v16, v17);
  v19 = vsubq_f32((float32x4_t)v60, v18);
  v20 = (int32x4_t)vmulq_f32(v19, v19);
  v20.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v20, 2), vadd_f32(*(float32x2_t *)v20.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v20.i8, 1))).u32[0];
  v21 = vrsqrte_f32((float32x2_t)v20.u32[0]);
  v22 = vmul_f32(v21, vrsqrts_f32((float32x2_t)v20.u32[0], vmul_f32(v21, v21)));
  v57 = vmulq_n_f32(v19, vmul_f32(v22, vrsqrts_f32((float32x2_t)v20.u32[0], vmul_f32(v22, v22))).f32[0]);
  v23 = vmulq_f32(*(float32x4_t *)SIMD3<>.up.unsafeMutableAddressor((__n128)v57), v57);
  v24 = acosf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v23, 2), vaddq_f32(v23, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v23.f32, 1))).f32[0])* 57.296;
  v25 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8);
  v26 = v25();
  v28 = v27;
  v29.n128_f64[0] = v13();
  *(double *)v33.i64 = simd_float4x4.position.getter(v29, v30, v31, v32);
  v34 = vsubq_f32((float32x4_t)v60, v33);
  v35 = vmulq_f32(v34, v34);
  v36 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v35, 2), vaddq_f32(v35, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v35.f32, 1))).f32[0]);
  Date.init()(v37);
  v38 = &v11[v9[10]];
  v39 = type metadata accessor for Date(0);
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 1, 1, v39);
  v41.n128_f64[0] = ((double (*)(uint64_t))v13)(v40);
  *(double *)&v45 = simd_float4x4.position.getter(v41, v42, v43, v44);
  *(_QWORD *)v11 = v26;
  *((_QWORD *)v11 + 1) = v28;
  *((float *)v11 + 4) = v24;
  *((float *)v11 + 5) = v36;
  v11[24] = 0;
  *((_DWORD *)v11 + 7) = 0;
  *(_OWORD *)&v11[v9[11]] = v45;
  v46 = &v11[v9[12]];
  *(_QWORD *)v46 = 0;
  *((_QWORD *)v46 + 1) = 0;
  v46[16] = 1;
  v47 = v25();
  v49 = v48;
  sub_100036344((uint64_t)v11, (uint64_t)v8, type metadata accessor for MetricsManager.VerticalGuideMetric);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v58 + 56))(v8, 0, 1, v9);
  v50 = v59;
  swift_beginAccess(v59 + OBJC_IVAR____TtC7Measure14MetricsManager_verticalGuideMetrics, v61, 33, 0);
  sub_10011C954((uint64_t)v8, v47, v49, &qword_100484A78, type metadata accessor for MetricsManager.VerticalGuideMetric, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1000BCD4C, (void (*)(uint64_t, uint64_t))sub_100093DC4);
  swift_endAccess(v61);
  sub_1000258F8((uint64_t)v11, type metadata accessor for MetricsManager.VerticalGuideMetric);
  v51 = v50 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess(v51, v61, 1, 0);
  v52 = *(_QWORD *)(v51 + 80);
  v53 = __OFADD__(v52, 1);
  v54 = v52 + 1;
  if (v53)
    __break(1u);
  else
    *(_QWORD *)(v51 + 80) = v54;
}

void sub_10011D178(_QWORD *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  __int128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  uint64_t (*v43)(void);
  __n128 v44;
  uint64_t v45;
  _BYTE v46[24];

  v44.n128_u64[0] = a2;
  v4 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  __chkstk_darwin(v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000EDC8(&qword_100484AA8);
  v8 = __chkstk_darwin(v7);
  v45 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v40 - v10;
  v12 = type metadata accessor for MetricsManager.EdgeGuideMetric(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8);
  v17 = ((uint64_t (*)(uint64_t))v43)(v14);
  v19 = v18;
  v20 = (uint64_t *)(v2 + OBJC_IVAR____TtC7Measure14MetricsManager_edgeGuideMetrics);
  swift_beginAccess(v2 + OBJC_IVAR____TtC7Measure14MetricsManager_edgeGuideMetrics, v46, 32, 0);
  v21 = *v20;
  if (*(_QWORD *)(*v20 + 16) && (v22 = sub_1000C80A8(v17, v19), (v23 & 1) != 0))
  {
    sub_100036344(*(_QWORD *)(v21 + 56) + *(_QWORD *)(v13 + 72) * v22, (uint64_t)v11, type metadata accessor for MetricsManager.EdgeGuideMetric);
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v24(v11, 0, 1, v12);
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v24(v11, 1, 1, v12);
  }
  v25 = swift_bridgeObjectRelease(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48))(v11, 1, v12, v25) == 1)
  {
    sub_100036600((uint64_t)v11, &qword_100484AA8);
    swift_endAccess(v46);
  }
  else
  {
    sub_10006CAB4((uint64_t)v11, (uint64_t)v16, type metadata accessor for MetricsManager.EdgeGuideMetric);
    swift_endAccess(v46);
    Date.init()(v26);
    v27 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v6, 0, 1, v27);
    v28 = sub_10006494C((uint64_t)v6, (uint64_t)&v16[*(int *)(v12 + 68)], (uint64_t *)&unk_10047E440);
    v16[96] = 1;
    v29 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v44.n128_u64[0]) + 0x2C0))(v28);
    v30.n128_f64[0] = (*(double (**)(uint64_t))(*(_QWORD *)v29 + 368))(v29);
    v44 = v30;
    v41 = v32;
    v42 = v31;
    v40 = v33;
    swift_release();
    *(double *)&v34 = simd_float4x4.position.getter(v44, v42, v41, v40);
    v35 = &v16[*(int *)(v12 + 72)];
    *(_OWORD *)v35 = v34;
    v35[16] = 0;
    v36 = v43();
    v38 = v37;
    v39 = v45;
    sub_100036344((uint64_t)v16, v45, type metadata accessor for MetricsManager.EdgeGuideMetric);
    v24((char *)v39, 0, 1, v12);
    swift_beginAccess(v20, v46, 33, 0);
    sub_10011C954(v39, v36, v38, &qword_100484AA8, type metadata accessor for MetricsManager.EdgeGuideMetric, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1000BC554, (void (*)(uint64_t, uint64_t))sub_100093B48);
    swift_endAccess(v46);
    sub_1000258F8((uint64_t)v16, type metadata accessor for MetricsManager.EdgeGuideMetric);
  }
}

void sub_10011D4DC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  __int128 v35;
  char *v36;
  uint64_t v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  double v42;
  float *v43;
  float v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  __n128 v49;
  __n128 v50;
  __n128 v51;
  __n128 v52;
  _BYTE v53[24];

  v3 = v2;
  v6 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  __chkstk_darwin(v6);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000EDC8(&qword_100484A78);
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for MetricsManager.VerticalGuideMetric(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = __chkstk_darwin(v12);
  v16 = (float *)((char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8))(v14);
  v19 = v18;
  v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC7Measure14MetricsManager_verticalGuideMetrics);
  swift_beginAccess(v3 + OBJC_IVAR____TtC7Measure14MetricsManager_verticalGuideMetrics, v53, 32, 0);
  v21 = *v20;
  if (*(_QWORD *)(v21 + 16) && (v22 = sub_1000C80A8(v17, v19), (v23 & 1) != 0))
  {
    sub_100036344(*(_QWORD *)(v21 + 56) + *(_QWORD *)(v13 + 72) * v22, (uint64_t)v11, type metadata accessor for MetricsManager.VerticalGuideMetric);
    v24 = 0;
  }
  else
  {
    v24 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, int *))(v13 + 56))(v11, v24, 1, v12);
  v25 = swift_bridgeObjectRelease(v19);
  if ((*(unsigned int (**)(char *, uint64_t, int *, __n128))(v13 + 48))(v11, 1, v12, v25) == 1)
  {
    sub_100036600((uint64_t)v11, &qword_100484A78);
    swift_endAccess(v53);
  }
  else
  {
    sub_10006CAB4((uint64_t)v11, (uint64_t)v16, type metadata accessor for MetricsManager.VerticalGuideMetric);
    swift_endAccess(v53);
    Date.init()(v26);
    v27 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 0, 1, v27);
    v28 = sub_10006494C((uint64_t)v8, (uint64_t)v16 + v12[10], (uint64_t *)&unk_10047E440);
    *((_BYTE *)v16 + 24) = 1;
    v29 = *(uint64_t (**)(void))((swift_isaMask & *a2) + 0x2C0);
    v30 = ((uint64_t (*)(uint64_t))v29)(v28);
    v31.n128_f64[0] = (*(double (**)(uint64_t))(*(_QWORD *)v30 + 368))(v30);
    v51 = v32;
    v52 = v31;
    v49 = v34;
    v50 = v33;
    swift_release();
    *(double *)&v35 = simd_float4x4.position.getter(v52, v51, v50, v49);
    v36 = (char *)v16 + v12[12];
    *(_OWORD *)v36 = v35;
    v36[16] = 0;
    v37 = v29();
    v38.n128_f64[0] = (*(double (**)(uint64_t))(*(_QWORD *)v37 + 368))(v37);
    v51 = v39;
    v52 = v38;
    v49 = v41;
    v50 = v40;
    swift_release();
    v42 = simd_float4x4.position.getter(v52, v51, v50, v49);
    v43 = (float *)((char *)v16 + v12[11]);
    v16[7] = sqrtf((float)((float)(v44 - v43[2]) * (float)(v44 - v43[2]))+ (float)((float)((float)(*(float *)&v42 - *v43) * (float)(*(float *)&v42 - *v43))+ (float)((float)(*((float *)&v42 + 1) - v43[1]) * (float)(*((float *)&v42 + 1) - v43[1]))));
    sub_10011EFF0((uint64_t)v16);
    v45 = v3 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
    swift_beginAccess(v45, v53, 1, 0);
    v46 = *(_QWORD *)(v45 + 88);
    v47 = __OFADD__(v46, 1);
    v48 = v46 + 1;
    if (v47)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v45 + 88) = v48;
      sub_1000258F8((uint64_t)v16, type metadata accessor for MetricsManager.VerticalGuideMetric);
    }
  }
}

void sub_10011D834(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  __int128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  _BYTE v44[24];

  v3 = v2;
  v6 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000EDC8(&qword_100484AA8);
  __chkstk_darwin(v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MetricsManager.EdgeGuideMetric(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8))(v14);
  v19 = v18;
  v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC7Measure14MetricsManager_edgeGuideMetrics);
  swift_beginAccess(v3 + OBJC_IVAR____TtC7Measure14MetricsManager_edgeGuideMetrics, v44, 32, 0);
  v21 = *v20;
  if (*(_QWORD *)(v21 + 16) && (v22 = sub_1000C80A8(v17, v19), (v23 & 1) != 0))
  {
    sub_100036344(*(_QWORD *)(v21 + 56) + *(_QWORD *)(v13 + 72) * v22, (uint64_t)v11, type metadata accessor for MetricsManager.EdgeGuideMetric);
    v24 = 0;
  }
  else
  {
    v24 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v24, 1, v12);
  v25 = swift_bridgeObjectRelease(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48))(v11, 1, v12, v25) == 1)
  {
    sub_100036600((uint64_t)v11, &qword_100484AA8);
    swift_endAccess(v44);
  }
  else
  {
    sub_10006CAB4((uint64_t)v11, (uint64_t)v16, type metadata accessor for MetricsManager.EdgeGuideMetric);
    swift_endAccess(v44);
    Date.init()(v26);
    v27 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 0, 1, v27);
    v28 = sub_10006494C((uint64_t)v8, (uint64_t)&v16[*(int *)(v12 + 68)], (uint64_t *)&unk_10047E440);
    v16[97] = 1;
    v29 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a2) + 0x2C0))(v28);
    v30.n128_f64[0] = (*(double (**)(uint64_t))(*(_QWORD *)v29 + 368))(v29);
    v42 = v31;
    v43 = v30;
    v40 = v33;
    v41 = v32;
    swift_release();
    *(double *)&v34 = simd_float4x4.position.getter(v43, v42, v41, v40);
    v35 = &v16[*(int *)(v12 + 76)];
    *(_OWORD *)v35 = v34;
    v35[16] = 0;
    sub_10011E9E4((uint64_t)v16);
    v36 = v3 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
    swift_beginAccess(v36, v44, 1, 0);
    v37 = *(_QWORD *)(v36 + 88);
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v36 + 88) = v39;
      sub_1000258F8((uint64_t)v16, type metadata accessor for MetricsManager.EdgeGuideMetric);
    }
  }
}

void sub_10011DB18(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  __int128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  _BYTE v44[24];

  v3 = v2;
  v6 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000EDC8(&qword_100484AB0);
  __chkstk_darwin(v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MetricsManager.SurfaceVectorGuideMetric(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8))(v14);
  v19 = v18;
  v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC7Measure14MetricsManager_surfaceVectorGuideMetrics);
  swift_beginAccess(v3 + OBJC_IVAR____TtC7Measure14MetricsManager_surfaceVectorGuideMetrics, v44, 32, 0);
  v21 = *v20;
  if (*(_QWORD *)(v21 + 16) && (v22 = sub_1000C80A8(v17, v19), (v23 & 1) != 0))
  {
    sub_100036344(*(_QWORD *)(v21 + 56) + *(_QWORD *)(v13 + 72) * v22, (uint64_t)v11, type metadata accessor for MetricsManager.SurfaceVectorGuideMetric);
    v24 = 0;
  }
  else
  {
    v24 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v24, 1, v12);
  v25 = swift_bridgeObjectRelease(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48))(v11, 1, v12, v25) == 1)
  {
    sub_100036600((uint64_t)v11, &qword_100484AB0);
    swift_endAccess(v44);
  }
  else
  {
    sub_10006CAB4((uint64_t)v11, (uint64_t)v16, type metadata accessor for MetricsManager.SurfaceVectorGuideMetric);
    swift_endAccess(v44);
    Date.init()(v26);
    v27 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 0, 1, v27);
    v28 = sub_10006494C((uint64_t)v8, (uint64_t)&v16[*(int *)(v12 + 60)], (uint64_t *)&unk_10047E440);
    v16[96] = 1;
    v29 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a2) + 0x2C0))(v28);
    v30.n128_f64[0] = (*(double (**)(uint64_t))(*(_QWORD *)v29 + 368))(v29);
    v42 = v31;
    v43 = v30;
    v40 = v33;
    v41 = v32;
    swift_release();
    *(double *)&v34 = simd_float4x4.position.getter(v43, v42, v41, v40);
    v35 = &v16[*(int *)(v12 + 68)];
    *(_OWORD *)v35 = v34;
    v35[16] = 0;
    sub_10011ED00((uint64_t)v16);
    v36 = v3 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
    swift_beginAccess(v36, v44, 1, 0);
    v37 = *(_QWORD *)(v36 + 88);
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v36 + 88) = v39;
      sub_1000258F8((uint64_t)v16, type metadata accessor for MetricsManager.SurfaceVectorGuideMetric);
    }
  }
}

void sub_10011DDFC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(_QWORD *__return_ptr, __n128);
  __n128 v13;
  __n128 v14;
  uint64_t (*v15)(__n128);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  __n128 v26;
  uint64_t (*v27)(__n128);
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  float v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  double v40;
  void (*v41)(char *, uint64_t);
  float v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  float v51;
  id v52;
  id v53;
  id v54;
  double v55;
  float v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  float v71;
  __n128 v72;
  uint64_t v73;
  float v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t (*v79)(__n128);
  uint64_t v80;
  uint64_t (*v81)(void);
  unint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  float32x4_t v95;
  _QWORD *v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  unint64_t v101;
  int v102;
  int v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  _OWORD v108[10];
  _QWORD v109[8];
  char v110;

  v3 = v2;
  v96 = a2;
  v5 = sub_10000EDC8(&qword_1004843D8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v75 - v10;
  v12 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v2
                                                                          + OBJC_IVAR____TtC7Measure14MetricsManager__device)
                                                            + 144);
  v13 = swift_retain();
  v12(v109, v13);
  v14 = swift_release();
  if ((v110 & 1) == 0)
  {
    v90 = v109[2];
    v91 = v109[0];
    v94 = v109[3];
    v95.i64[0] = v109[1];
    v88 = v109[6];
    v89 = v109[4];
    v92 = v109[7];
    v93 = v109[5];
    v15 = *(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0x250);
    v16 = v15(v14);
    v17 = v16;
    if ((unint64_t)v16 >> 62)
    {
      if (v16 >= 0)
        v16 &= 0xFFFFFFFFFFFFFF8uLL;
      v18 = _CocoaArrayWrapper.endIndex.getter(v16);
    }
    else
    {
      v18 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v19 = swift_bridgeObjectRelease(v17);
    if (v18 >= 2)
    {
      v20 = v15(v19);
      v21 = v20;
      if ((v20 & 0xC000000000000001) != 0)
      {
        v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v20);
      }
      else
      {
        if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_28;
        }
        v22 = *(id *)(v20 + 32);
      }
      v18 = (uint64_t)v22;
      v23 = swift_bridgeObjectRelease(v21);
      v24 = v15(v23);
      v21 = v24;
      if ((v24 & 0xC000000000000001) == 0)
      {
        if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          goto LABEL_30;
        }
        v25 = *(id *)(v24 + 40);
LABEL_11:
        v85 = 0x6E776F6E6B6E75;
        v86 = 0x74694B7261;
        v87 = v25;
        v26 = swift_bridgeObjectRelease(v21);
        v27 = *(uint64_t (**)(__n128))((swift_isaMask & *(_QWORD *)v18) + 0x2C0);
        v83 = (_QWORD *)v18;
        v81 = (uint64_t (*)(void))v27;
        v28 = v27(v26);
        v29 = (*(uint64_t (**)(void))(*(_QWORD *)v28 + 216))();
        v30 = swift_release();
        v84 = v3;
        if (v29)
          __asm { BR              X10 }
        v76 = 0xE700000000000000;
        v77 = 0x6E776F6E6B6E75;
        v80 = 0x6E776F6E6B6E75;
        v82 = 0xE700000000000000;
        v79 = *(uint64_t (**)(__n128))((swift_isaMask & *v87) + 0x2C0);
        v31 = v79(v30);
        v32 = (*(uint64_t (**)(void))(*(_QWORD *)v31 + 216))();
        v33 = swift_release();
        if (v32)
          __asm { BR              X10 }
        v75 = 0xE700000000000000;
        v86 = 0x6E776F6E6B6E75;
        v78 = 0xE700000000000000;
        v34 = (*(float (**)(__n128))((swift_isaMask & *a1) + 0x340))(v33);
        v35 = (void *)objc_opt_self(NSUnitLength);
        v36 = objc_msgSend(v35, "meters");
        v37 = objc_msgSend(v35, "millimeters");
        v38 = sub_100018148(0, &qword_1004843E0, NSUnitLength_ptr);
        v39 = v36;
        Measurement.init(value:unit:)(v39, v38, v34);
        Measurement<>.converted(to:)(v37, v5);
        v40 = Measurement.value.getter(v5);
        v41 = *(void (**)(char *, uint64_t))(v6 + 8);
        v41(v9, v5);
        v42 = v40;
        v41(v11, v5);

        if ((~LODWORD(v42) & 0x7F800000) != 0)
        {
          if (v42 > -9.2234e18)
          {
            if (v42 < 9.2234e18)
            {
              v44.n128_u64[0] = v90;
              v43.n128_u64[0] = v91;
              v46.n128_u64[0] = v88;
              v45.n128_u64[0] = v89;
              v43.n128_u64[1] = v95.i64[0];
              v44.n128_u64[1] = v94;
              v45.n128_u64[1] = v93;
              v46.n128_u64[1] = v92;
              *(double *)v47.i64 = simd_float4x4.position.getter(v43, v44, v45, v46);
              v95 = v47;
              (*(void (**)(void))((swift_isaMask & *v96) + 0x2B0))();
              v49 = vsubq_f32(v95, v48);
              v50 = vmulq_f32(v49, v49);
              v51 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v50, 2), vaddq_f32(v50, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v50.f32, 1))).f32[0]);
              v52 = objc_msgSend(v35, "meters");
              v53 = objc_msgSend(v35, "millimeters");
              v54 = v52;
              Measurement.init(value:unit:)(v54, v38, v51);
              Measurement<>.converted(to:)(v53, v5);
              v55 = Measurement.value.getter(v5);
              v41(v9, v5);
              v56 = v55;
              v41(v11, v5);

              if ((~LODWORD(v56) & 0x7F800000) != 0)
              {
                if (v56 > -9.2234e18)
                {
                  if (v56 < 9.2234e18)
                  {
                    v96 = (_QWORD *)(uint64_t)v42;
                    v95.i64[0] = (uint64_t)v56;
                    v57 = UIDeviceOrientation.description.getter(*(_QWORD *)(v84 + 24));
                    v59 = v58;
                    v60 = v83;
                    v61 = (*(uint64_t (**)(void))((swift_isaMask & *v83) + 0x2F0))();
                    v62 = WorldPointType.description.getter(v61);
                    v64 = v63;
                    v65 = v87;
                    v66 = (*(uint64_t (**)(void))((swift_isaMask & *v87) + 0x2F0))();
                    v67 = WorldPointType.description.getter(v66);
                    v69 = v68;
                    v70 = v81();
                    v71 = (*(float (**)(uint64_t))(*(_QWORD *)v70 + 192))(v70);
                    v72 = swift_release();
                    v73 = v79(v72);
                    v74 = (*(float (**)(uint64_t))(*(_QWORD *)v73 + 192))(v73);
                    swift_release();
                    *(_QWORD *)&v97 = v96;
                    *((_QWORD *)&v97 + 1) = v95.i64[0];
                    *(_QWORD *)&v98 = v57;
                    *((_QWORD *)&v98 + 1) = v59;
                    *(_QWORD *)&v99 = v62;
                    *((_QWORD *)&v99 + 1) = v64;
                    *(_QWORD *)&v100 = v67;
                    *((_QWORD *)&v100 + 1) = v69;
                    v101 = __PAIR64__(LODWORD(v74), LODWORD(v71));
                    v102 = 0;
                    v103 = 0;
                    *(_QWORD *)&v104 = v80;
                    *((_QWORD *)&v104 + 1) = v82;
                    *(_QWORD *)&v105 = v86;
                    *((_QWORD *)&v105 + 1) = v78;
                    *(_QWORD *)&v106 = v77;
                    *((_QWORD *)&v106 + 1) = v76;
                    *(_QWORD *)&v107 = v85;
                    *((_QWORD *)&v107 + 1) = v75;
                    v108[0] = v97;
                    v108[1] = v98;
                    v108[7] = v106;
                    v108[8] = v107;
                    v108[5] = v104;
                    v108[6] = v105;
                    v108[3] = v100;
                    v108[4] = __PAIR64__(LODWORD(v74), LODWORD(v71));
                    v108[2] = v99;
                    sub_100124428((uint64_t)v108);
                    sub_10001BFDC((uint64_t)v108, (uint64_t)v109);
                    sub_100124434((uint64_t)v109);

                    sub_10012474C(&v97);
                    return;
                  }
LABEL_35:
                  __break(1u);
                  JUMPOUT(0x10011E7DCLL);
                }
LABEL_34:
                __break(1u);
                goto LABEL_35;
              }
LABEL_33:
              __break(1u);
              goto LABEL_34;
            }
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
LABEL_28:
      v25 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v21);
      goto LABEL_11;
    }
  }
}

uint64_t sub_10011E814()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for MetricsManager(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_10011FCE8();
  qword_1004AF6B8 = result;
  return result;
}

float sub_10011E850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  const double *v4;
  unsigned int v5;
  uint64_t v6;
  float64x2_t v7;
  float32x2_t *v8;
  float32x2_t v9;

  v1 = type metadata accessor for MetricsManager.VerticalGuideMetric(0);
  v2 = (uint64_t *)(v0 + *(int *)(v1 + 48));
  if ((v2[2] & 1) != 0)
    return 0.0;
  v4 = (const double *)(v2 + 1);
  v6 = *v2;
  v5 = *v2;
  v7 = vld1q_dup_f64(v4);
  v8 = (float32x2_t *)(v0 + *(int *)(v1 + 44));
  v9 = vsub_f32(*v8, (float32x2_t)__PAIR64__(HIDWORD(v6), v5));
  return sqrtf((float)((float)(v8[1].f32[0] - *(float *)&v7.f64[1]) * (float)(v8[1].f32[0] - *(float *)&v7.f64[1]))+ vaddv_f32(vmul_f32(v9, v9)));
}

float sub_10011E8CC()
{
  uint64_t v0;
  uint64_t v1;
  float32x4_t *v2;
  float32x4_t *v3;
  float32x4_t v5;
  float32x2_t v6;

  v1 = type metadata accessor for MetricsManager.EdgeGuideMetric(0);
  v2 = (float32x4_t *)(v0 + *(int *)(v1 + 72));
  if ((v2[1].i8[0] & 1) != 0)
    return 0.0;
  v3 = (float32x4_t *)(v0 + *(int *)(v1 + 76));
  if ((v3[1].i8[0] & 1) != 0)
    return 0.0;
  v5 = vsubq_f32(*v2, *v3);
  v6 = vsub_f32(*(float32x2_t *)v2->f32, *(float32x2_t *)v3->f32);
  return sqrtf(COERCE_FLOAT(vmulq_f32(v5, v5).i32[2]) + vaddv_f32(vmul_f32(v6, v6)));
}

float sub_10011E968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  const double *v4;
  unsigned int v5;
  uint64_t v6;
  float64x2_t v7;
  float32x2_t *v8;
  float32x2_t v9;

  v1 = type metadata accessor for MetricsManager.SurfaceVectorGuideMetric(0);
  v2 = (uint64_t *)(v0 + *(int *)(v1 + 68));
  if ((v2[2] & 1) != 0)
    return 0.0;
  v4 = (const double *)(v2 + 1);
  v6 = *v2;
  v5 = *v2;
  v7 = vld1q_dup_f64(v4);
  v8 = (float32x2_t *)(v0 + *(int *)(v1 + 64));
  v9 = vsub_f32(*v8, (float32x2_t)__PAIR64__(HIDWORD(v6), v5));
  return sqrtf((float)((float)(v8[1].f32[0] - *(float *)&v7.f64[1]) * (float)(v8[1].f32[0] - *(float *)&v7.f64[1]))+ vaddv_f32(vmul_f32(v9, v9)));
}

uint64_t sub_10011E9E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  float v19;
  __int16 v20;
  int v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  _QWORD v38[10];
  __int16 v39;

  v2 = sub_10000EDC8(&qword_100484AA8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(unsigned int *)(a1 + 24);
  v29 = *(unsigned int *)(a1 + 16);
  v28 = *(unsigned int *)(a1 + 20);
  v27 = *(unsigned int *)(a1 + 48);
  v35 = *(unsigned int *)(a1 + 52);
  v33 = *(unsigned int *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 64);
  v34 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 88);
  v32 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 40);
  v31 = *(_QWORD *)(a1 + 32);
  v15 = type metadata accessor for MetricsManager.EdgeGuideMetric(0);
  sub_1000C219C(a1 + *(int *)(v15 + 68), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v14);
    sub_100036600((uint64_t)v7, (uint64_t *)&unk_10047E440);
    v16 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v17 = a1 + *(int *)(v15 + 64);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v14);
    *(float *)&v18 = Date.timeIntervalSince(_:)(v17);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v16 = v18;
  }
  v19 = sub_10011E8CC();
  v20 = *(unsigned __int8 *)(a1 + 96);
  v21 = *(unsigned __int8 *)(a1 + 97);
  v38[0] = v29 | (v27 << 32);
  v38[1] = v30 | (v28 << 32);
  v38[2] = v35 | (v33 << 32);
  v38[3] = v34;
  v38[4] = v12;
  v38[5] = v32;
  if (v21)
    v22 = 256;
  else
    v22 = 0;
  v38[6] = v13;
  v38[7] = v31;
  v38[8] = v14;
  v38[9] = v16 | ((unint64_t)LODWORD(v19) << 32);
  v39 = v22 | v20;
  sub_100123FA4((uint64_t)v38);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v12);
  v23 = *(_QWORD *)a1;
  v24 = *(_QWORD *)(a1 + 8);
  swift_beginAccess(v36 + OBJC_IVAR____TtC7Measure14MetricsManager_edgeGuideMetrics, v37, 33, 0);
  swift_bridgeObjectRetain(v24);
  sub_100093B48(v23, v24, (uint64_t)v4);
  swift_endAccess(v37);
  swift_bridgeObjectRelease(v24);
  return sub_100036600((uint64_t)v4, &qword_100484AA8);
}

uint64_t sub_10011ED00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  float v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  _QWORD v35[10];
  __int16 v36;

  v2 = sub_10000EDC8(&qword_100484AB0);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(unsigned int *)(a1 + 24);
  v27 = *(unsigned int *)(a1 + 16);
  v26 = *(unsigned int *)(a1 + 20);
  v25 = *(unsigned int *)(a1 + 48);
  v32 = *(unsigned int *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 88);
  v30 = *(_QWORD *)(a1 + 80);
  v31 = v12;
  v15 = *(_QWORD *)(a1 + 40);
  v29 = *(_QWORD *)(a1 + 32);
  v16 = type metadata accessor for MetricsManager.SurfaceVectorGuideMetric(0);
  sub_1000C219C(a1 + *(int *)(v16 + 60), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v15);
    sub_100036600((uint64_t)v7, (uint64_t *)&unk_10047E440);
    v17 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v18 = a1 + *(int *)(v16 + 56);
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v15);
    *(float *)&v19 = Date.timeIntervalSince(_:)(v18);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v17 = v19;
  }
  v20 = sub_10011E968();
  v21 = *(unsigned __int8 *)(a1 + 96);
  v35[0] = v27 | (v28 << 32);
  v35[1] = v26 | (v25 << 32);
  v35[2] = v32;
  v35[3] = v31;
  v35[4] = v13;
  v35[5] = v30;
  v35[6] = v14;
  v35[7] = v29;
  v35[8] = v15;
  v35[9] = v17 | ((unint64_t)LODWORD(v20) << 32);
  v36 = v21 | 0x4000;
  sub_100123FA4((uint64_t)v35);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v13);
  v22 = *(_QWORD *)a1;
  v23 = *(_QWORD *)(a1 + 8);
  swift_beginAccess(v33 + OBJC_IVAR____TtC7Measure14MetricsManager_surfaceVectorGuideMetrics, v34, 33, 0);
  swift_bridgeObjectRetain(v23);
  sub_100093B5C(v22, v23, (uint64_t)v4);
  swift_endAccess(v34);
  swift_bridgeObjectRelease(v23);
  return sub_100036600((uint64_t)v4, &qword_100484AB0);
}

uint64_t sub_10011EFF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int v17;
  float v18;
  const mach_header_64 *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  _BYTE v24[24];
  _QWORD v25[3];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int16 v30;

  v2 = sub_10000EDC8(&qword_100484A78);
  __chkstk_darwin(v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  __chkstk_darwin(v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(unsigned int *)(a1 + 28);
  v13 = *(unsigned int *)(a1 + 16);
  v14 = *(unsigned int *)(a1 + 20);
  v15 = type metadata accessor for MetricsManager.VerticalGuideMetric(0);
  sub_1000C219C(a1 + *(int *)(v15 + 40), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100036600((uint64_t)v7, (uint64_t *)&unk_10047E440);
    v16 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    *(float *)&v17 = Date.timeIntervalSince(_:)(a1 + *(int *)(v15 + 36));
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v16 = (unint64_t)v17 << 32;
  }
  v18 = sub_10011E850();
  v19 = &_mh_execute_header;
  if (!*(_BYTE *)(a1 + 24))
    v19 = 0;
  v25[0] = v12 | (v14 << 32);
  v25[1] = v16 | v13;
  v25[2] = (unint64_t)v19 | LODWORD(v18);
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0;
  v30 = 0x8000;
  sub_100123FA4((uint64_t)v25);
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD *)(a1 + 8);
  swift_beginAccess(v23[1] + OBJC_IVAR____TtC7Measure14MetricsManager_verticalGuideMetrics, v24, 33, 0);
  swift_bridgeObjectRetain(v21);
  sub_100093DC4(v20, v21, (uint64_t)v4);
  swift_endAccess(v24);
  swift_bridgeObjectRelease(v21);
  return sub_100036600((uint64_t)v4, &qword_100484A78);
}

unint64_t sub_10011F234(uint64_t a1)
{
  uint64_t v1;
  float v2;
  uint64_t v3;
  float *v4;
  float v5;
  float v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = *(float *)(a1 + 32);
    v3 = v1 - 1;
    if (v1 != 1)
    {
      v4 = (float *)(a1 + 36);
      do
      {
        v5 = *v4++;
        v6 = v5;
        if (v5 < v2)
          v2 = v6;
        --v3;
      }
      while (v3);
    }
    v7 = LODWORD(v2);
  }
  else
  {
    v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

float sub_10011F28C(double a1)
{
  uint64_t v1;
  float32x4_t *v2;
  unint64_t v3;
  uint64_t v4;
  float v5;
  float *v6;
  uint64_t v7;
  unint64_t v8;
  float *v9;
  float v10;
  uint64_t v11;
  float v12;
  float32x4_t v13;
  float32x4_t *v14;
  uint64_t v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t v18;
  float32x4_t v19;
  unint64_t v20;
  float *v21;
  float v22;
  BOOL v23;
  uint64_t v24;

  v2 = *(float32x4_t **)(v1 + 16);
  v3 = v2[1].u64[0];
  if (!v3)
    return 0.0;
  if (v3 == 1)
  {
    v4 = 0;
    v5 = 0.0;
LABEL_7:
    v8 = v3 - v4;
    v9 = &v2[2].f32[v4];
    do
    {
      v10 = *v9++;
      v5 = v5 + v10;
      --v8;
    }
    while (v8);
    goto LABEL_9;
  }
  v4 = v3 & 0x7FFFFFFFFFFFFFFELL;
  v6 = &v2[2].f32[1];
  v5 = 0.0;
  v7 = v3 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    v5 = (float)(v5 + *(v6 - 1)) + *v6;
    v6 += 2;
    v7 -= 2;
  }
  while (v7);
  if (v3 != v4)
    goto LABEL_7;
LABEL_9:
  *(float *)&a1 = v5 / (float)(uint64_t)v3;
  if (v3 < 8)
  {
    v11 = 0;
    v12 = 0.0;
LABEL_14:
    v20 = v3 - v11;
    v21 = &v2[2].f32[v11];
    do
    {
      v22 = *v21++;
      v12 = v12 + (float)((float)(v22 - *(float *)&a1) * (float)(v22 - *(float *)&a1));
      --v20;
    }
    while (v20);
    goto LABEL_16;
  }
  v11 = v3 & 0x7FFFFFFFFFFFFFF8;
  v13 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a1, 0);
  v14 = v2 + 3;
  v12 = 0.0;
  v15 = v3 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    v16 = vsubq_f32(v14[-1], v13);
    v17 = vsubq_f32(*v14, v13);
    v18 = vmulq_f32(v16, v16);
    v19 = vmulq_f32(v17, v17);
    v12 = (float)((float)((float)((float)((float)((float)((float)(v12 + v18.f32[0]) + v18.f32[1]) + v18.f32[2])
                                        + v18.f32[3])
                                + v19.f32[0])
                        + v19.f32[1])
                + v19.f32[2])
        + v19.f32[3];
    v14 += 2;
    v15 -= 8;
  }
  while (v15);
  if (v3 != v11)
    goto LABEL_14;
LABEL_16:
  v23 = v3 > 1;
  v24 = v3 - 1;
  if (v23)
    return sqrtf(v12 / (float)v24);
  return 0.0;
}

float sub_10011F3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  float v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v1 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD **)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for MetricsManager.PersonHeightMetric(0);
  sub_1000C219C(v0 + *(int *)(v14 + 44), (uint64_t)v6);
  v15 = (unsigned int (*)(char *, uint64_t, uint64_t))v8[6];
  if (v15(v6, 1, v7) == 1)
  {
    v16 = (uint64_t)v6;
  }
  else
  {
    v17 = (void (*)(char *, char *, uint64_t))v8[4];
    v17(v13, v6, v7);
    sub_1000C219C(v0 + *(int *)(v14 + 48), (uint64_t)v4);
    if (v15(v4, 1, v7) != 1)
    {
      v17(v11, v4, v7);
      v18 = Date.timeIntervalSince(_:)(v13);
      v19 = (void (*)(char *, uint64_t))v8[1];
      v19(v11, v7);
      v19(v13, v7);
      return v18;
    }
    ((void (*)(char *, uint64_t))v8[1])(v13, v7);
    v16 = (uint64_t)v4;
  }
  sub_100036600(v16, (uint64_t *)&unk_10047E440);
  return 0.0;
}

float sub_10011F5A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  float v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v1 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  v2 = __chkstk_darwin(v1);
  v40 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v37 - v5;
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v37 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v37 - v10;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD **)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v38 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v39 = (char *)&v37 - v17;
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v37 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v37 - v21;
  if ((*(_BYTE *)(v0 + 32) & 1) == 0)
  {
    v23 = type metadata accessor for MetricsManager.PersonHeightMetric(0);
    sub_1000C219C(v0 + *(int *)(v23 + 36), (uint64_t)v11);
    v24 = (unsigned int (*)(char *, uint64_t, uint64_t))v13[6];
    if (v24(v11, 1, v12) == 1)
    {
      v9 = v11;
    }
    else
    {
      v25 = v11;
      v26 = (void (*)(char *, char *, uint64_t))v13[4];
      v26(v22, v25, v12);
      sub_1000C219C(v0 + *(int *)(v23 + 40), (uint64_t)v9);
      if (v24(v9, 1, v12) != 1)
      {
        v26(v20, v9, v12);
        v33 = Date.timeIntervalSince(_:)(v22);
        v35 = (void (*)(char *, uint64_t))v13[1];
        v35(v20, v12);
        goto LABEL_14;
      }
      ((void (*)(char *, uint64_t))v13[1])(v22, v12);
    }
    sub_100036600((uint64_t)v9, (uint64_t *)&unk_10047E440);
  }
  v27 = type metadata accessor for MetricsManager.PersonHeightMetric(0);
  sub_1000C219C(v0 + *(int *)(v27 + 36), (uint64_t)v6);
  v28 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v13[6];
  if (v28((uint64_t)v6, 1, v12) != 1)
  {
    v30 = (void (*)(char *, char *, uint64_t))v13[4];
    v22 = v39;
    v30(v39, v6, v12);
    v31 = v0 + *(int *)(v27 + 44);
    v32 = v40;
    sub_1000C219C(v31, v40);
    if (v28(v32, 1, v12) == 1)
    {
      ((void (*)(char *, uint64_t))v13[1])(v22, v12);
      v29 = v32;
      goto LABEL_11;
    }
    v34 = v38;
    v30(v38, (char *)v32, v12);
    v33 = Date.timeIntervalSince(_:)(v22);
    v35 = (void (*)(char *, uint64_t))v13[1];
    v35(v34, v12);
LABEL_14:
    v35(v22, v12);
    return v33;
  }
  v29 = (uint64_t)v6;
LABEL_11:
  sub_100036600(v29, (uint64_t *)&unk_10047E440);
  return 0.0;
}

void sub_10011F8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t *v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _BYTE v30[24];

  v3 = v2;
  v6 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  __chkstk_darwin(v6);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_10000EDC8(&qword_100484AB8);
  __chkstk_darwin(v9);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = type metadata accessor for MetricsManager.PersonHeightMetric(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics);
  v17 = swift_beginAccess(v16, v30, 32, 0);
  v18 = *v16;
  if (!*(_QWORD *)(v18 + 16))
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56))(v11, 1, 1, v12, v17);
LABEL_7:
    sub_100036600((uint64_t)v11, &qword_100484AB8);
    swift_endAccess(v30);
    return;
  }
  swift_bridgeObjectRetain(a2);
  v19 = sub_1000C80A8(a1, a2);
  if ((v20 & 1) != 0)
  {
    sub_100036344(*(_QWORD *)(v18 + 56) + *(_QWORD *)(v13 + 72) * v19, (uint64_t)v11, type metadata accessor for MetricsManager.PersonHeightMetric);
    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v21, 1, v12);
  v22 = swift_bridgeObjectRelease(a2);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v13 + 48))(v11, 1, v12, v22) == 1)
    goto LABEL_7;
  sub_10006CAB4((uint64_t)v11, (uint64_t)v15, type metadata accessor for MetricsManager.PersonHeightMetric);
  swift_endAccess(v30);
  Date.init()(v23);
  v24 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 0, 1, v24);
  sub_10006494C((uint64_t)v8, (uint64_t)&v15[*(int *)(v12 + 48)], (uint64_t *)&unk_10047E440);
  sub_10011FB6C((uint64_t)v15);
  v25 = v3 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess(v25, v30, 1, 0);
  *(double *)v25 = *(double *)v25 + 1.0;
  v26 = *(_QWORD *)(v25 + 104);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v25 + 104) = v28;
    sub_1000258F8((uint64_t)v15, type metadata accessor for MetricsManager.PersonHeightMetric);
  }
}

uint64_t sub_10011FB6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  float v8;
  float v9;
  uint64_t v10;
  float v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  float v15;
  float v16;
  unint64_t v17;
  double v18;
  float v19;
  float v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[24];
  char v26;
  float v27;
  float v28;
  uint64_t v29;
  float v30;
  float v31;
  float v32;
  uint64_t v33;

  v2 = v1;
  v4 = sub_10000EDC8(&qword_100484AB8);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = sub_10011F5A4();
  v9 = sub_10011F3CC();
  v10 = a1 + *(int *)(type metadata accessor for MetricsManager.PersonHeightMetric(0) + 52);
  if (*(_BYTE *)(v10 + 4))
    v11 = 0.0;
  else
    v11 = *(float *)v10;
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = sub_10011F234(v12);
  v15 = *(float *)&v14;
  if ((v14 & (unint64_t)&_mh_execute_header) != 0)
    v15 = 0.0;
  v16 = vabds_f32(v11, v15);
  v17 = sub_10004BEB8(v12);
  LODWORD(v18) = v17;
  if ((v17 & (unint64_t)&_mh_execute_header) != 0)
    *(float *)&v18 = 0.0;
  v19 = vabds_f32(*(float *)&v18, v11);
  v20 = sub_10011F28C(v18);
  v21 = *(_QWORD *)(v12 + 16);
  v26 = v7;
  v27 = v8;
  v28 = v9;
  v29 = v13;
  v30 = v16;
  v31 = v19;
  v32 = v20;
  v33 = v21;
  sub_10012488C((__int128 *)&v26);
  v22 = *(_QWORD *)a1;
  v23 = *(_QWORD *)(a1 + 8);
  swift_beginAccess(v2 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics, v25, 33, 0);
  swift_bridgeObjectRetain(v23);
  sub_100093CA8(v22, v23, (uint64_t)v6);
  swift_endAccess(v25);
  swift_bridgeObjectRelease(v23);
  return sub_100036600((uint64_t)v6, &qword_100484AB8);
}

uint64_t sub_10011FCE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);

  v1 = v0;
  *(_BYTE *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  sub_10002581C(v0 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState);
  v2 = OBJC_IVAR____TtC7Measure14MetricsManager__device;
  KeyPath = swift_getKeyPath(&unk_1003B7DC8);
  v4 = sub_10000EDC8((uint64_t *)&unk_10047E5D0);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v5 = qword_1004AF890;
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 272);
  swift_retain(qword_1004AF890);
  *(_QWORD *)(v1 + v2) = v6(KeyPath, v5);
  v7 = OBJC_IVAR____TtC7Measure14MetricsManager__unitState;
  v8 = swift_getKeyPath(&unk_1003B7DF0);
  v9 = sub_10000EDC8(&qword_100481258);
  v10 = qword_1004AF890;
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 272);
  swift_retain(qword_1004AF890);
  *(_QWORD *)(v1 + v7) = v11(v8, v10);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_verticalGuideMetrics) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_edgeGuideMetrics) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_surfaceVectorGuideMetrics) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics) = &_swiftEmptyDictionarySingleton;
  return v1;
}

double sub_10011FE34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  if (!((unint64_t)a1 >> 62))
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      return result;
    goto LABEL_3;
  }
  if (a1 < 0)
    v6 = a1;
  else
    v6 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v7 = _CocoaArrayWrapper.endIndex.getter(v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1).n128_u64[0];
  if (v7)
  {
LABEL_3:
    v4 = a2 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
    swift_beginAccess(v4, v8, 1, 0);
    *(_BYTE *)(v4 + *(int *)(type metadata accessor for AppSession(0) + 100)) = 1;
  }
  return result;
}

double sub_10011FEDC(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  double result;

  v3 = *(void (**)(uint64_t, __n128))(a1 + 32);
  v4 = sub_100018148(0, &qword_100484AC0, SBSConnectedDisplayInfo_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v4);
  v6 = swift_retain();
  v3(v5, v6);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

void sub_10011FF48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(__n128);
  void (*v17)(_QWORD *__return_ptr, __n128);
  __n128 v18;
  __n128 v19;
  uint64_t (*v20)(__n128);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *i;
  _QWORD *v29;
  __n128 v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  __n128 v37;
  _QWORD *v38;
  _QWORD *v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  __n128 v45;
  __n128 v46;
  __n128 v47;
  __n128 v48;
  float32x4_t v49;
  int32x4_t v50;
  float32x2_t v51;
  float32x2_t v52;
  float32x4_t v53;
  int32x4_t v54;
  float32x2_t v55;
  float32x2_t v56;
  float32x4_t v57;
  float v58;
  float v59;
  void *v60;
  id v61;
  id v62;
  uint64_t v63;
  double v64;
  void (*v65)(char *, _QWORD *);
  float v66;
  int v67;
  float32x4_t v68;
  float32x4_t v69;
  float32x4_t v70;
  float v71;
  void *v72;
  id v73;
  uint64_t v74;
  double v75;
  void (*v76)(uint64_t (*)(__n128), uint64_t);
  float v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  __n128 v86;
  __n128 v87;
  __n128 v88;
  __n128 v89;
  float32x4_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(__n128);
  uint64_t (*v94)(__n128);
  float32x4_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  float v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105[38];
  uint64_t v106[38];
  _BYTE v107[304];
  uint64_t v108;
  uint64_t v109;
  _BYTE v110[32];
  _BYTE v111[32];
  _QWORD v112[8];
  char v113;
  float32x4_t v114;
  char v115;
  float32x4_t v116;
  char v117;
  int v118;
  char v119;
  float v120;
  char v121;

  v2 = v1;
  v4 = sub_10000EDC8(&qword_1004843D8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v94 = (uint64_t (*)(__n128))((char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v93 = (uint64_t (*)(__n128))((char *)&v80 - v8);
  v9 = (_QWORD *)sub_10000EDC8(&qword_1004843E8);
  v95.i64[0] = *(v9 - 1);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v80 - v13;
  v15 = v1 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess(v15, &v104, 1, 0);
  *(double *)(v15 + 32) = *(double *)(v15 + 32) + 1.0;
  v16 = (uint64_t (*)(__n128))&swift_isaMask;
  (*(void (**)(uint64_t *__return_ptr))((swift_isaMask & *a1) + 0x260))(v105);
  sub_100012C58((uint64_t)v105, (uint64_t)v106, &qword_100484AC8);
  if (sub_100124C4C(v106) != 1)
  {
    v92 = v5;
    memcpy(v107, v106, sizeof(v107));
    v17 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v2
                                                                            + OBJC_IVAR____TtC7Measure14MetricsManager__device)
                                                              + 144);
    v18 = swift_retain();
    v17(v112, v18);
    v19 = swift_release();
    if ((v113 & 1) != 0)
    {
      sub_100124C70(v105);
      return;
    }
    v90.i64[0] = v112[1];
    v85 = v112[2];
    v86.n128_u64[0] = v112[0];
    v89.n128_u64[0] = v112[3];
    v88.n128_u64[0] = v112[5];
    v83 = v112[6];
    v84 = v112[4];
    v87.n128_u64[0] = v112[7];
    v20 = *(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0x230);
    v21 = v20(v19);
    v22 = v21;
    if ((unint64_t)v21 >> 62)
    {
      if (v21 >= 0)
        v21 &= 0xFFFFFFFFFFFFFF8uLL;
      v23 = _CocoaArrayWrapper.endIndex.getter(v21);
    }
    else
    {
      v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v91 = 0x6E776F6E6B6E75;
    v25 = swift_bridgeObjectRelease(v22);
    if (v23 < 1)
      goto LABEL_21;
    v26 = v20(v25);
    v27 = v26;
    if ((v26 & 0xC000000000000001) != 0)
      goto LABEL_42;
    if (!*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_44;
    }
    for (i = *(id *)(v26 + 32); ; i = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v27))
    {
      v29 = i;
      v30 = swift_bridgeObjectRelease(v27);
      v27 = (*(uint64_t (**)(__n128))((*(_QWORD *)v16 & *v29) + 0x250))(v30);

      if ((unint64_t)v27 >> 62)
      {
LABEL_44:
        v79 = v27 < 0 ? v27 : v27 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v27);
        v31 = _CocoaArrayWrapper.endIndex.getter(v79);
        swift_bridgeObjectRelease(v27);
      }
      else
      {
        v31 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v32 = swift_bridgeObjectRelease(v27);
      if (v31 >= 1)
        break;
LABEL_21:
      v81 = 0xE700000000000000;
      v82 = 0x6E776F6E6B6E75;
      v16 = (uint64_t (*)(__n128))0xE700000000000000;
      v45.n128_u64[0] = v86.n128_u64[0];
      v46.n128_u64[0] = v85;
      v47.n128_u64[0] = v84;
      v48.n128_u64[0] = v83;
      v45.n128_u64[1] = v90.i64[0];
      v46.n128_u64[1] = v89.n128_u64[0];
      v47.n128_u64[1] = v88.n128_u64[0];
      v48.n128_u64[1] = v87.n128_u64[0];
      v88 = v46;
      v89 = v45;
      v86 = v48;
      v87 = v47;
      *(double *)v49.i64 = simd_float4x4.forward.getter(v24);
      v90 = v49;
      v20 = (uint64_t (*)(__n128))v107;
      sub_100012C58((uint64_t)&v107[208], (uint64_t)v111, &qword_100484AD0);
      sub_100012C58((uint64_t)v111, (uint64_t)&v114, &qword_100484AD0);
      if ((v115 & 1) != 0)
        goto LABEL_52;
      v50 = (int32x4_t)vmulq_f32(v114, v114);
      v50.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v50, 2), vadd_f32(*(float32x2_t *)v50.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v50.i8, 1))).u32[0];
      v51 = vrsqrte_f32((float32x2_t)v50.u32[0]);
      v52 = vmul_f32(v51, vrsqrts_f32((float32x2_t)v50.u32[0], vmul_f32(v51, v51)));
      v53 = vmulq_n_f32(v114, vmul_f32(v52, vrsqrts_f32((float32x2_t)v50.u32[0], vmul_f32(v52, v52))).f32[0]);
      v54 = (int32x4_t)vmulq_f32(v90, v90);
      v54.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v54, 2), vadd_f32(*(float32x2_t *)v54.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v54.i8, 1))).u32[0];
      v55 = vrsqrte_f32((float32x2_t)v54.u32[0]);
      v56 = vmul_f32(v55, vrsqrts_f32((float32x2_t)v54.u32[0], vmul_f32(v55, v55)));
      v57 = vmulq_f32(v53, vmulq_n_f32(v90, vmul_f32(v56, vrsqrts_f32((float32x2_t)v54.u32[0], vmul_f32(v56, v56))).f32[0]));
      v58 = acosf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v57, 2), vaddq_f32(v57, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v57.f32, 1))).f32[0]);
      sub_100012C58((uint64_t)&v107[132], (uint64_t)&v108, &qword_10047F0A8);
      sub_100012C58((uint64_t)&v108, (uint64_t)&v120, &qword_10047F0A8);
      if ((v121 & 1) != 0)
        goto LABEL_53;
      v59 = v120;
      v60 = (void *)objc_opt_self(NSUnitArea);
      v61 = objc_msgSend(v60, "squareMeters");
      v62 = objc_msgSend(v60, "squareMillimeters");
      v63 = sub_100018148(0, &qword_1004843F0, NSUnitArea_ptr);
      v27 = (uint64_t)v61;
      Measurement.init(value:unit:)(v27, v63, v59);
      Measurement<>.converted(to:)(v62, v9);
      v64 = Measurement.value.getter(v9);
      v65 = *(void (**)(char *, _QWORD *))(v95.i64[0] + 8);
      v65(v12, v9);
      v66 = v64;
      v65(v14, v9);

      if ((~LODWORD(v66) & 0x7F800000) == 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      if (v66 <= -9.2234e18)
        goto LABEL_37;
      if (v66 >= 9.2234e18)
        goto LABEL_38;
      sub_100012C58((uint64_t)&v107[140], (uint64_t)&v109, &qword_10047F0A8);
      sub_100012C58((uint64_t)&v109, (uint64_t)&v118, &qword_10047F0A8);
      if ((v119 & 1) != 0)
        goto LABEL_54;
      v14 = (char *)0xE700000000000000;
      v67 = v118;
      *(double *)v68.i64 = simd_float4x4.position.getter(v89, v88, v87, v86);
      v95 = v68;
      sub_100012C58((uint64_t)&v107[112], (uint64_t)v110, &qword_100484AD0);
      sub_100012C58((uint64_t)v110, (uint64_t)&v116, &qword_100484AD0);
      if ((v117 & 1) != 0)
        goto LABEL_55;
      v69 = vsubq_f32(v95, v116);
      v70 = vmulq_f32(v69, v69);
      v71 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v70, 2), vaddq_f32(v70, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v70.f32, 1))).f32[0]);
      v72 = (void *)objc_opt_self(NSUnitLength);
      v73 = objc_msgSend(v72, "meters");
      v9 = objc_msgSend(v72, "millimeters");
      v74 = sub_100018148(0, &qword_1004843E0, NSUnitLength_ptr);
      v12 = (char *)v73;
      v16 = v93;
      Measurement.init(value:unit:)(v12, v74, v71);
      v20 = v94;
      Measurement<>.converted(to:)(v9, v4);
      v75 = Measurement.value.getter(v4);
      v76 = *(void (**)(uint64_t (*)(__n128), uint64_t))(v92 + 8);
      v76(v20, v4);
      v77 = v75;
      v76(v16, v4);

      if ((~LODWORD(v77) & 0x7F800000) == 0)
        goto LABEL_39;
      if (v77 <= -9.2234e18)
        goto LABEL_40;
      if (v77 < 9.2234e18)
      {
        v96 = (uint64_t)v66;
        v97 = v67;
        v98 = (uint64_t)v77;
        v99 = v58 * 57.296;
        v78 = v81;
        v100 = v82;
        v101 = 0xE700000000000000;
        v102 = v91;
        v103 = v81;
        sub_1000FFC5C((uint64_t)&v96);
        sub_10001BFDC((uint64_t)&v96, (uint64_t)v112);
        sub_100124434((uint64_t)v112);
        sub_100124C70(v105);
        swift_bridgeObjectRelease(v78);
        swift_bridgeObjectRelease(0xE700000000000000);
        return;
      }
LABEL_41:
      __break(1u);
LABEL_42:
      ;
    }
    v33 = v20(v32);
    v34 = v33;
    if ((v33 & 0xC000000000000001) != 0)
    {
      v35 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
    }
    else
    {
      if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_50;
      }
      v35 = *(id *)(v33 + 32);
    }
    v36 = v35;
    v37 = swift_bridgeObjectRelease(v34);
    v27 = (*(uint64_t (**)(__n128))((*(_QWORD *)v16 & *v36) + 0x250))(v37);

    if ((v27 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        JUMPOUT(0x100120954);
      }
      v38 = *(id *)(v27 + 32);
      goto LABEL_19;
    }
LABEL_50:
    v38 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v27);
LABEL_19:
    v39 = v38;
    v40 = swift_bridgeObjectRelease(v27);
    v41 = (*(uint64_t (**)(__n128))((*(_QWORD *)v16 & *v39) + 0x2C0))(v40);

    v42 = (*(uint64_t (**)(void))(*(_QWORD *)v41 + 216))();
    v43 = swift_release();
    if (v42)
    {
      v44 = (char *)&loc_1001202DC
          + dword_100120954[(*(unsigned __int8 (**)(__n128))(*(_QWORD *)v42 + 248))(v43)];
      __asm { BR              X10 }
    }
    goto LABEL_21;
  }
}

uint64_t sub_100120970()
{
  uint64_t v0;

  sub_1000258F8(v0 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState, type metadata accessor for AppSession);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure14MetricsManager_verticalGuideMetrics));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure14MetricsManager_edgeGuideMetrics));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure14MetricsManager_surfaceVectorGuideMetrics));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100120A08()
{
  return type metadata accessor for MetricsManager(0);
}

uint64_t type metadata accessor for MetricsManager(uint64_t a1)
{
  return sub_1000CEB70(a1, qword_1004846C8, (uint64_t)&nominal type descriptor for MetricsManager);
}

uint64_t sub_100120A24(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = &unk_1003B7CF8;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for AppSession(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *sub_100120ACC(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[2];
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = a2[3];
    v9 = a3[9];
    v10 = (void *)(a1 + v9);
    v11 = (char *)a2 + v9;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v12 = type metadata accessor for Date(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48);
    swift_bridgeObjectRetain(v7);
    v15 = swift_bridgeObjectRetain(v8);
    if (v14(v11, 1, v12, v15))
    {
      v16 = sub_10000EDC8((uint64_t *)&unk_10047E440);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v18 = a3[10];
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v14)((char *)a2 + v18, 1, v12))
    {
      v21 = sub_10000EDC8((uint64_t *)&unk_10047E440);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v19, v20, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
    }
    v22 = a3[11];
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v14)((char *)a2 + v22, 1, v12))
    {
      v25 = sub_10000EDC8((uint64_t *)&unk_10047E440);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v23, v24, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v23, 0, 1, v12);
    }
    v26 = a3[12];
    v27 = (char *)v4 + v26;
    v28 = (char *)a2 + v26;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v14)((char *)a2 + v26, 1, v12))
    {
      v29 = sub_10000EDC8((uint64_t *)&unk_10047E440);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v27, v28, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v27, 0, 1, v12);
    }
    v30 = a3[13];
    v31 = (char *)v4 + v30;
    v32 = (uint64_t)a2 + v30;
    *(_DWORD *)v31 = *(_DWORD *)v32;
    v31[4] = *(_BYTE *)(v32 + 4);
  }
  return v4;
}

uint64_t sub_100120D60(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v4 = a1 + a2[9];
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + a2[10];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  v9 = a1 + a2[11];
  if (!v7(v9, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  v10 = a1 + a2[12];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v10, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  return result;
}

uint64_t sub_100120E74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = a3[9];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v12 + 48);
  swift_bridgeObjectRetain(v6);
  v14 = swift_bridgeObjectRetain(v7);
  if (v13(v10, 1, v11, v14))
  {
    v15 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v16 = a3[10];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v13)(a2 + v16, 1, v11))
  {
    v19 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v17, v18, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
  }
  v20 = a3[11];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v13)(a2 + v20, 1, v11))
  {
    v23 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v21, v22, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
  }
  v24 = a3[12];
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v13)(a2 + v24, 1, v11))
  {
    v27 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v25, v26, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
  }
  v28 = a3[13];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_DWORD *)v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  return a1;
}

uint64_t sub_1001210DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  int v40;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v10 = a3[9];
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  v19 = a3[10];
  v20 = (void *)(a1 + v19);
  v21 = (void *)(a2 + v19);
  v22 = v15((void *)(a1 + v19), 1, v13);
  v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v20, v21, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v20, v13);
LABEL_12:
    v24 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v20, v21, v13);
LABEL_13:
  v25 = a3[11];
  v26 = (void *)(a1 + v25);
  v27 = (void *)(a2 + v25);
  v28 = v15((void *)(a1 + v25), 1, v13);
  v29 = v15(v27, 1, v13);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v26, v27, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v29)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v26, v13);
LABEL_18:
    v30 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v26, v27, v13);
LABEL_19:
  v31 = a3[12];
  v32 = (void *)(a1 + v31);
  v33 = (void *)(a2 + v31);
  v34 = v15((void *)(a1 + v31), 1, v13);
  v35 = v15(v33, 1, v13);
  if (!v34)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v32, v33, v13);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v32, v13);
    goto LABEL_24;
  }
  if (v35)
  {
LABEL_24:
    v36 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v32, v33, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v32, 0, 1, v13);
LABEL_25:
  v37 = a3[13];
  v38 = a1 + v37;
  v39 = (int *)(a2 + v37);
  v40 = *v39;
  *(_BYTE *)(v38 + 4) = *((_BYTE *)v39 + 4);
  *(_DWORD *)v38 = v40;
  return a1;
}

uint64_t sub_100121474(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = a3[9];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[10];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    v16 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  v17 = a3[11];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  if (v11((const void *)(a2 + v17), 1, v9))
  {
    v20 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v18, v19, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  v21 = a3[12];
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  if (v11((const void *)(a2 + v21), 1, v9))
  {
    v24 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v22, v23, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
  }
  v25 = a3[13];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  return a1;
}

uint64_t sub_1001216C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v9 = a3[9];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  v18 = a3[10];
  v19 = (void *)(a1 + v18);
  v20 = (void *)(a2 + v18);
  v21 = v14((void *)(a1 + v18), 1, v12);
  v22 = v14(v20, 1, v12);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v19, v20, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v19, v12);
LABEL_12:
    v23 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v19, v20, v12);
LABEL_13:
  v24 = a3[11];
  v25 = (void *)(a1 + v24);
  v26 = (void *)(a2 + v24);
  v27 = v14((void *)(a1 + v24), 1, v12);
  v28 = v14(v26, 1, v12);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v25, v26, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v25, 0, 1, v12);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v25, v12);
LABEL_18:
    v29 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v25, v26, v12);
LABEL_19:
  v30 = a3[12];
  v31 = (void *)(a1 + v30);
  v32 = (void *)(a2 + v30);
  v33 = v14((void *)(a1 + v30), 1, v12);
  v34 = v14(v32, 1, v12);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v31, v32, v12);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v31, v12);
    goto LABEL_24;
  }
  if (v34)
  {
LABEL_24:
    v35 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v31, v32, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v31, 0, 1, v12);
LABEL_25:
  v36 = a3[13];
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_DWORD *)v37 = *(_DWORD *)v38;
  *(_BYTE *)(v37 + 4) = *(_BYTE *)(v38 + 4);
  return a1;
}

uint64_t sub_100121A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100121A48);
}

uint64_t sub_100121A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_100121AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100121AD4);
}

uint64_t sub_100121AD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MetricsManager.PersonHeightMetric(uint64_t a1)
{
  return sub_1000CEB70(a1, qword_1004847E8, (uint64_t)&nominal type descriptor for MetricsManager.PersonHeightMetric);
}

void sub_100121B60(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v4[0] = &unk_1003B7D28;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.Int32 + 64;
  v4[3] = (char *)&value witness table for Builtin.Int32 + 64;
  v4[4] = &unk_1003B7CF8;
  sub_10005CFA4(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    v7 = v5;
    v8 = v5;
    v9 = &unk_1003B7D40;
    swift_initStructMetadata(a1, 256, 10, v4, a1 + 16);
  }
}

_QWORD *sub_100121C0C(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    v9 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v9;
    *(_DWORD *)(a1 + 72) = *((_DWORD *)a2 + 18);
    v10 = a2[10];
    v11 = a2[11];
    *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
    v12 = a3[14];
    v26 = (uint64_t)a2 + v12;
    v27 = a1 + v12;
    *(_QWORD *)(a1 + 80) = v10;
    *(_QWORD *)(a1 + 88) = v11;
    v13 = type metadata accessor for Date(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 16);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    v16 = swift_bridgeObjectRetain(v11);
    v15(v27, v26, v13, v16);
    v17 = a3[15];
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))((uint64_t)a2 + v17, 1, v13))
    {
      v20 = sub_10000EDC8((uint64_t *)&unk_10047E440);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v15)(v18, v19, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
    }
    v22 = a3[17];
    *(_OWORD *)((char *)v4 + a3[16]) = *(_OWORD *)((char *)a2 + a3[16]);
    v23 = (char *)v4 + v22;
    v24 = (uint64_t)a2 + v22;
    *(_OWORD *)v23 = *(_OWORD *)v24;
    v23[16] = *(_BYTE *)(v24 + 16);
  }
  return v4;
}

uint64_t sub_100121DB4(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  void (*v9)(char *, uint64_t);

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[11]);
  v4 = (char *)a1 + *(int *)(a2 + 56);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  v9(v4, v5);
  v7 = (char *)a1 + *(int *)(a2 + 60);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!(_DWORD)result)
    return ((uint64_t (*)(char *, uint64_t))v9)(v7, v5);
  return result;
}

uint64_t sub_100121E7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, const void *, uint64_t);
  __n128 v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v11 = a3[14];
  v24 = a2 + v11;
  v25 = a1 + v11;
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(void *, const void *, uint64_t))(v13 + 16);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  v15 = swift_bridgeObjectRetain(v10);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v14)(v25, v24, v12, v15);
  v16 = a3[15];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a2 + v16, 1, v12))
  {
    v19 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v14(v17, v18, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  v20 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
  return a1;
}

uint64_t sub_100121FF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void *, const void *, uint64_t);
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t (*v23)(const void *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v14 = a3[14];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(void (**)(void *, const void *, uint64_t))(v18 + 24);
  v19(v15, v16, v17);
  v20 = a3[15];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  v24 = v23((const void *)(a1 + v20), 1, v17);
  v25 = v23(v22, 1, v17);
  if (!v24)
  {
    if (!v25)
    {
      v19(v21, v22, v17);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v21, v17);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    v26 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v21, v22, v17);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
LABEL_7:
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  v27 = a3[17];
  v28 = a1 + v27;
  v29 = (__int128 *)(a2 + v27);
  v30 = *v29;
  *(_BYTE *)(v28 + 16) = *((_BYTE *)v29 + 16);
  *(_OWORD *)v28 = v30;
  return a1;
}

uint64_t sub_1001221FC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  v6 = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v7 = a3[14];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 80) = v6;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[15];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    v16 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v17 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  return a1;
}

uint64_t sub_100122348(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void *, const void *, uint64_t);
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t (*v23)(const void *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRelease(v11);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v12;
  swift_bridgeObjectRelease(v13);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v14 = a3[14];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(void (**)(void *, const void *, uint64_t))(v18 + 40);
  v19(v15, v16, v17);
  v20 = a3[15];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  v24 = v23((const void *)(a1 + v20), 1, v17);
  v25 = v23(v22, 1, v17);
  if (!v24)
  {
    if (!v25)
    {
      v19(v21, v22, v17);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v21, v17);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    v26 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v21, v22, v17);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
LABEL_7:
  v27 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_BYTE *)(v28 + 16) = *(_BYTE *)(v29 + 16);
  return a1;
}

uint64_t sub_100122500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10012250C);
}

uint64_t sub_10012250C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 56);
    }
    else
    {
      v10 = sub_10000EDC8((uint64_t *)&unk_10047E440);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1001225B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001225BC);
}

uint64_t sub_1001225BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 56);
    }
    else
    {
      v10 = sub_10000EDC8((uint64_t *)&unk_10047E440);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for MetricsManager.SurfaceVectorGuideMetric(uint64_t a1)
{
  return sub_1000CEB70(a1, qword_100484898, (uint64_t)&nominal type descriptor for MetricsManager.SurfaceVectorGuideMetric);
}

void sub_100122670(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[14];

  v6[0] = &unk_1003B7D28;
  v6[1] = (char *)&value witness table for Builtin.Int32 + 64;
  v6[2] = (char *)&value witness table for Builtin.Int32 + 64;
  v6[3] = (char *)&value witness table for Builtin.Int32 + 64;
  v6[4] = &unk_1003B7D28;
  v6[5] = (char *)&value witness table for Builtin.Int32 + 64;
  v6[6] = &unk_1003B7D28;
  v6[7] = (char *)&value witness table for Builtin.Int32 + 64;
  v6[8] = &unk_1003B7D28;
  v6[9] = &unk_1003B7CF8;
  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v6[10] = *(_QWORD *)(v2 - 8) + 64;
    sub_10005CFA4(319);
    if (v5 <= 0x3F)
    {
      v6[11] = *(_QWORD *)(v4 - 8) + 64;
      v6[12] = (char *)&value witness table for Builtin.Int128 + 64;
      v6[13] = &unk_1003B7D80;
      swift_initStructMetadata(a1, 256, 14, v6, a1 + 16);
    }
  }
}

_QWORD *sub_10012273C(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = a2[6];
    v9 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v9;
    *(_DWORD *)(a1 + 72) = *((_DWORD *)a2 + 18);
    v10 = a2[10];
    v11 = a2[11];
    *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
    v12 = a3[16];
    v29 = (uint64_t)a2 + v12;
    v30 = a1 + v12;
    *(_QWORD *)(a1 + 80) = v10;
    *(_QWORD *)(a1 + 88) = v11;
    v13 = type metadata accessor for Date(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 16);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    v16 = swift_bridgeObjectRetain(v11);
    v15(v30, v29, v13, v16);
    v17 = a3[17];
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))((uint64_t)a2 + v17, 1, v13))
    {
      v20 = sub_10000EDC8((uint64_t *)&unk_10047E440);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v15)(v18, v19, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
    }
    v22 = a3[18];
    v23 = a3[19];
    v24 = (char *)v4 + v22;
    v25 = (uint64_t)a2 + v22;
    *(_OWORD *)v24 = *(_OWORD *)v25;
    v24[16] = *(_BYTE *)(v25 + 16);
    v26 = (char *)v4 + v23;
    v27 = (uint64_t)a2 + v23;
    *(_OWORD *)v26 = *(_OWORD *)v27;
    v26[16] = *(_BYTE *)(v27 + 16);
  }
  return v4;
}

uint64_t sub_1001228F4(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  void (*v9)(char *, uint64_t);

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[11]);
  v4 = (char *)a1 + *(int *)(a2 + 64);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  v9(v4, v5);
  v7 = (char *)a1 + *(int *)(a2 + 68);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!(_DWORD)result)
    return ((uint64_t (*)(char *, uint64_t))v9)(v7, v5);
  return result;
}

uint64_t sub_1001229BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, const void *, uint64_t);
  __n128 v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 88);
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  v11 = a3[16];
  v27 = a2 + v11;
  v28 = a1 + v11;
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(void *, const void *, uint64_t))(v13 + 16);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  v15 = swift_bridgeObjectRetain(v10);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v14)(v28, v27, v12, v15);
  v16 = a3[17];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a2 + v16, 1, v12))
  {
    v19 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v14(v17, v18, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  v20 = a3[18];
  v21 = a3[19];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
  v24 = a1 + v21;
  v25 = a2 + v21;
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_BYTE *)(v24 + 16) = *(_BYTE *)(v25 + 16);
  return a1;
}

uint64_t sub_100122B48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void *, const void *, uint64_t);
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t (*v23)(const void *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 *v33;
  __int128 v34;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  v14 = a3[16];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(void (**)(void *, const void *, uint64_t))(v18 + 24);
  v19(v15, v16, v17);
  v20 = a3[17];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  v24 = v23((const void *)(a1 + v20), 1, v17);
  v25 = v23(v22, 1, v17);
  if (!v24)
  {
    if (!v25)
    {
      v19(v21, v22, v17);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v21, v17);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    v26 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v21, v22, v17);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
LABEL_7:
  v27 = a3[18];
  v28 = a1 + v27;
  v29 = (__int128 *)(a2 + v27);
  v30 = *v29;
  *(_BYTE *)(v28 + 16) = *((_BYTE *)v29 + 16);
  *(_OWORD *)v28 = v30;
  v31 = a3[19];
  v32 = a1 + v31;
  v33 = (__int128 *)(a2 + v31);
  v34 = *v33;
  *(_BYTE *)(v32 + 16) = *((_BYTE *)v33 + 16);
  *(_OWORD *)v32 = v34;
  return a1;
}

uint64_t sub_100122D6C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  v6 = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  v7 = a3[16];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 80) = v6;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[17];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    v16 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v17 = a3[18];
  v18 = a3[19];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
  v21 = a1 + v18;
  v22 = a2 + v18;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
  return a1;
}

uint64_t sub_100122ED0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void *, const void *, uint64_t);
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t (*v23)(const void *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRelease(v11);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v12;
  swift_bridgeObjectRelease(v13);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  v14 = a3[16];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(void (**)(void *, const void *, uint64_t))(v18 + 40);
  v19(v15, v16, v17);
  v20 = a3[17];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  v24 = v23((const void *)(a1 + v20), 1, v17);
  v25 = v23(v22, 1, v17);
  if (!v24)
  {
    if (!v25)
    {
      v19(v21, v22, v17);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v21, v17);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    v26 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v21, v22, v17);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
LABEL_7:
  v27 = a3[18];
  v28 = a3[19];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_BYTE *)(v29 + 16) = *(_BYTE *)(v30 + 16);
  v31 = a1 + v28;
  v32 = a2 + v28;
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_BYTE *)(v31 + 16) = *(_BYTE *)(v32 + 16);
  return a1;
}

uint64_t sub_1001230A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001230AC);
}

uint64_t sub_1001230AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 64);
    }
    else
    {
      v10 = sub_10000EDC8((uint64_t *)&unk_10047E440);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 68);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_100123150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10012315C);
}

uint64_t sub_10012315C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 64);
    }
    else
    {
      v10 = sub_10000EDC8((uint64_t *)&unk_10047E440);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 68);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for MetricsManager.EdgeGuideMetric(uint64_t a1)
{
  return sub_1000CEB70(a1, qword_100484958, (uint64_t)&nominal type descriptor for MetricsManager.EdgeGuideMetric);
}

void sub_100123210(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[16];

  v6[0] = &unk_1003B7D28;
  v6[1] = (char *)&value witness table for Builtin.Int32 + 64;
  v6[2] = (char *)&value witness table for Builtin.Int32 + 64;
  v6[3] = (char *)&value witness table for Builtin.Int32 + 64;
  v6[4] = &unk_1003B7D28;
  v6[5] = (char *)&value witness table for Builtin.Int32 + 64;
  v6[6] = (char *)&value witness table for Builtin.Int32 + 64;
  v6[7] = &unk_1003B7D28;
  v6[8] = (char *)&value witness table for Builtin.Int32 + 64;
  v6[9] = &unk_1003B7D28;
  v6[10] = &unk_1003B7CF8;
  v6[11] = &unk_1003B7CF8;
  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v6[12] = *(_QWORD *)(v2 - 8) + 64;
    sub_10005CFA4(319);
    if (v5 <= 0x3F)
    {
      v6[13] = *(_QWORD *)(v4 - 8) + 64;
      v6[14] = &unk_1003B7D80;
      v6[15] = &unk_1003B7D80;
      swift_initStructMetadata(a1, 256, 16, v6, a1 + 16);
    }
  }
}

_QWORD *sub_1001232D4(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = a3[9];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_DWORD *)(a1 + 28) = *((_DWORD *)a2 + 7);
    v11 = type metadata accessor for Date(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v12 + 16);
    v14 = swift_bridgeObjectRetain(v7);
    v13(v9, v10, v11, v14);
    v15 = a3[10];
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))((uint64_t)a2 + v15, 1, v11))
    {
      v18 = sub_10000EDC8((uint64_t *)&unk_10047E440);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v13)(v16, v17, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    v20 = a3[12];
    *(_OWORD *)((char *)v4 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
    v21 = (char *)v4 + v20;
    v22 = (uint64_t)a2 + v20;
    *(_OWORD *)v21 = *(_OWORD *)v22;
    v21[16] = *(_BYTE *)(v22 + 16);
  }
  return v4;
}

uint64_t sub_100123434(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  v7 = a1 + *(int *)(a2 + 40);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  return result;
}

uint64_t sub_1001234E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  __n128 v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v7 = a3[9];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  v13 = swift_bridgeObjectRetain(v6);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v12)(v8, v9, v10, v13);
  v14 = a3[10];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v14, 1, v10))
  {
    v17 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v12(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  v18 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
  return a1;
}

uint64_t sub_100123618(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t (*v17)(const void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  __int128 v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v8 = a3[9];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 24);
  v13(v9, v10, v11);
  v14 = a3[10];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  v18 = v17((const void *)(a1 + v14), 1, v11);
  v19 = v17(v16, 1, v11);
  if (!v18)
  {
    if (!v19)
    {
      v13(v15, v16, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v15, v11);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v15, v16, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
LABEL_7:
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v21 = a3[12];
  v22 = a1 + v21;
  v23 = (__int128 *)(a2 + v21);
  v24 = *v23;
  *(_BYTE *)(v22 + 16) = *((_BYTE *)v23 + 16);
  *(_OWORD *)v22 = v24;
  return a1;
}

uint64_t sub_1001237AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v6 = a3[9];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = a3[10];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a2 + v12, 1, v9))
  {
    v15 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v16 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  return a1;
}

uint64_t sub_1001238D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t (*v17)(const void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v8 = a3[9];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 40);
  v13(v9, v10, v11);
  v14 = a3[10];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  v18 = v17((const void *)(a1 + v14), 1, v11);
  v19 = v17(v16, 1, v11);
  if (!v18)
  {
    if (!v19)
    {
      v13(v15, v16, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v15, v11);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = sub_10000EDC8((uint64_t *)&unk_10047E440);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v15, v16, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
LABEL_7:
  v21 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
  return a1;
}

uint64_t sub_100123A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100123A54);
}

uint64_t sub_100123A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      v10 = sub_10000EDC8((uint64_t *)&unk_10047E440);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_100123AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100123B04);
}

uint64_t sub_100123B04(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      v10 = sub_10000EDC8((uint64_t *)&unk_10047E440);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for MetricsManager.VerticalGuideMetric(uint64_t a1)
{
  return sub_1000CEB70(a1, qword_100484A20, (uint64_t)&nominal type descriptor for MetricsManager.VerticalGuideMetric);
}

void sub_100123BB8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v6[0] = &unk_1003B7D28;
  v6[1] = (char *)&value witness table for Builtin.Int32 + 64;
  v6[2] = (char *)&value witness table for Builtin.Int32 + 64;
  v6[3] = &unk_1003B7CF8;
  v6[4] = (char *)&value witness table for Builtin.Int32 + 64;
  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v6[5] = *(_QWORD *)(v2 - 8) + 64;
    sub_10005CFA4(319);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      v6[7] = (char *)&value witness table for Builtin.Int128 + 64;
      v6[8] = &unk_1003B7D80;
      swift_initStructMetadata(a1, 256, 9, v6, a1 + 16);
    }
  }
}

uint64_t sub_100123C84(__int128 *a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  NSString v9;
  uint64_t v10;
  void *v11;
  __n128 v12;
  uint64_t result;
  Swift::String v14;
  __int128 *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  Swift::String v22;
  void *object;
  Swift::String v24;
  void **aBlock;
  uint64_t v26;
  Class (*v27)(uint64_t);
  void *v28;
  uint64_t (*v29)();
  uint64_t v30;
  __int128 v31;
  _QWORD v32[5];
  _OWORD v33[5];
  uint64_t v34;

  v32[3] = &type metadata for SessionEvent;
  v32[4] = &off_10043F018;
  v32[0] = swift_allocObject(&unk_100446C40, 128, 7);
  sub_10001C034(a1, (_OWORD *)(v32[0] + 16));
  sub_100124BB0((uint64_t *)a1);
  v2 = sub_10001AE1C();
  sub_10011A8F8(v2);
  v4 = v3;
  swift_bridgeObjectRelease(v2);
  if (v4)
  {
    if (qword_10047A970 != -1)
      swift_once(&qword_10047A970, sub_10009581C);
    aBlock = (void **)qword_1004AF2C8;
    v26 = unk_1004AF2D0;
    swift_bridgeObjectRetain(unk_1004AF2D0);
    v5._countAndFlagsBits = 46;
    v5._object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    sub_10001C034(a1, v33);
    if (v34 < 0)
      v6 = 0xD000000000000011;
    else
      v6 = 0x536E6F6973736573;
    if (v34 < 0)
      v7 = 0x80000001003E0660;
    else
      v7 = 0xEE007972616D6D75;
    v34 &= ~0x8000000000000000;
    v8 = v7;
    String.append(_:)(*(Swift::String *)&v6);
    swift_bridgeObjectRelease(v7);
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
    v10 = swift_allocObject(&unk_100446C68, 24, 7);
    *(_QWORD *)(v10 + 16) = v4;
    v29 = sub_100124D5C;
    v30 = v10;
    aBlock = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_10011AC54;
    v28 = &unk_100446C80;
    v11 = _Block_copy(&aBlock);
    v12 = swift_release();
    AnalyticsSendEventLazy(v9, v11, v12);
    _Block_release(v11);

    return sub_10000F690(v32);
  }
  else
  {
    sub_100068B24((uint64_t)v32, (uint64_t)&aBlock);
    *(_QWORD *)&v33[0] = 0;
    *((_QWORD *)&v33[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(53);
    v31 = v33[0];
    v14._countAndFlagsBits = 0xD000000000000020;
    v14._object = (void *)0x80000001003E05D0;
    String.append(_:)(v14);
    v15 = (__int128 *)sub_10000F66C(&aBlock, (uint64_t)v28);
    sub_10001C034(v15, v33);
    v16 = sub_10001AE1C();
    sub_10011A570(v16);
    v18 = v17;
    swift_bridgeObjectRelease(v16);
    v19 = sub_100018148(0, &qword_100481BC8, NSString_ptr);
    v20 = sub_100018148(0, (unint64_t *)&qword_10047C128, NSObject_ptr);
    v21 = sub_10012438C();
    v22._countAndFlagsBits = Dictionary.description.getter(v18, v19, v20, v21);
    object = v22._object;
    String.append(_:)(v22);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(object);
    v24._countAndFlagsBits = 0xD000000000000013;
    v24._object = (void *)0x80000001003E0600;
    String.append(_:)(v24);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v31, *((_QWORD *)&v31 + 1), "Measure/Analytics.swift", 23, 2, 32, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100123FA4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  NSString v12;
  uint64_t v13;
  void *v14;
  __n128 v15;
  uint64_t result;
  Swift::String v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  Swift::String v25;
  void *object;
  Swift::String v27;
  void **aBlock;
  uint64_t v29;
  Class (*v30)(uint64_t);
  void *v31;
  uint64_t (*v32)();
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD v36[5];
  uint64_t v37;
  unint64_t v38;
  unsigned __int16 v39;

  v36[3] = &type metadata for GuidesEvent;
  v36[4] = &off_10043F060;
  v36[0] = swift_allocObject(&unk_100446AD8, 98, 7);
  sub_10001BFB4(a1, v36[0] + 16);
  sub_10012433C(a1);
  v2 = sub_10001B914();
  sub_10011A8F8(v2);
  v4 = v3;
  swift_bridgeObjectRelease(v2);
  if (v4)
  {
    if (qword_10047A970 != -1)
      swift_once(&qword_10047A970, sub_10009581C);
    aBlock = (void **)qword_1004AF2C8;
    v29 = unk_1004AF2D0;
    swift_bridgeObjectRetain(unk_1004AF2D0);
    v5._countAndFlagsBits = 46;
    v5._object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    sub_10001BFB4(a1, (uint64_t)&v37);
    v6 = v39 >> 14;
    v7 = 0x80000001003E0640;
    if (v6 == 1)
      v8 = 0xD000000000000014;
    else
      v8 = 0x762E736564697567;
    if (v6 != 1)
      v7 = 0xEF6C616369747265;
    if (v6)
      v9 = v8;
    else
      v9 = 0x652E736564697567;
    if (v6)
      v10 = v7;
    else
      v10 = 0xEB00000000656764;
    v39 &= 0x3FFFu;
    v11 = v10;
    String.append(_:)(*(Swift::String *)&v9);
    swift_bridgeObjectRelease(v10);
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29);
    v13 = swift_allocObject(&unk_100446B00, 24, 7);
    *(_QWORD *)(v13 + 16) = v4;
    v32 = sub_100124408;
    v33 = v13;
    aBlock = _NSConcreteStackBlock;
    v29 = 1107296256;
    v30 = sub_10011AC54;
    v31 = &unk_100446B18;
    v14 = _Block_copy(&aBlock);
    v15 = swift_release();
    AnalyticsSendEventLazy(v12, v14, v15);
    _Block_release(v14);

    return sub_10000F690(v36);
  }
  else
  {
    sub_100068B24((uint64_t)v36, (uint64_t)&aBlock);
    v37 = 0;
    v38 = 0xE000000000000000;
    _StringGuts.grow(_:)(53);
    v34 = v37;
    v35 = v38;
    v17._countAndFlagsBits = 0xD000000000000020;
    v17._object = (void *)0x80000001003E05D0;
    String.append(_:)(v17);
    v18 = sub_10000F66C(&aBlock, (uint64_t)v31);
    sub_10001BFB4((uint64_t)v18, (uint64_t)&v37);
    v19 = sub_10001B914();
    sub_10011A570(v19);
    v21 = v20;
    swift_bridgeObjectRelease(v19);
    v22 = sub_100018148(0, &qword_100481BC8, NSString_ptr);
    v23 = sub_100018148(0, (unint64_t *)&qword_10047C128, NSObject_ptr);
    v24 = sub_10012438C();
    v25._countAndFlagsBits = Dictionary.description.getter(v21, v22, v23, v24);
    object = v25._object;
    String.append(_:)(v25);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(object);
    v27._object = (void *)0x80000001003E0600;
    v27._countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v27);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v34, v35, "Measure/Analytics.swift", 23, 2, 32, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1001242F4()
{
  uint64_t v0;

  sub_10001CB34(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_WORD *)(v0 + 96));
  return swift_deallocObject(v0, 98, 7);
}

uint64_t sub_10012433C(uint64_t a1)
{
  sub_10001CAAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_WORD *)(a1 + 80));
  return a1;
}

unint64_t sub_10012438C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100484A80;
  if (!qword_100484A80)
  {
    v1 = sub_100018148(255, &qword_100481BC8, NSString_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100484A80);
  }
  return result;
}

uint64_t sub_1001243E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100124408()
{
  uint64_t v0;

  return j__swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100124410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100124420(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100124428(uint64_t result)
{
  *(_BYTE *)(result + 144) = 1;
  return result;
}

uint64_t sub_100124434(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  NSString v10;
  uint64_t v11;
  void *v12;
  __n128 v13;
  uint64_t result;
  Swift::String v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  Swift::String v23;
  void *object;
  Swift::String v25;
  void **aBlock;
  uint64_t v27;
  Class (*v28)(uint64_t);
  void *v29;
  uint64_t (*v30)();
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD v34[5];
  uint64_t v35;
  unint64_t v36;

  v34[3] = &type metadata for ConfirmedEvent;
  v34[4] = &off_10043F048;
  v34[0] = swift_allocObject(&unk_100446B50, 161, 7);
  sub_10001BFDC(a1, v34[0] + 16);
  sub_10012482C(a1);
  v2 = sub_10001B270();
  sub_10011A8F8(v2);
  v4 = v3;
  swift_bridgeObjectRelease(v2);
  if (v4)
  {
    if (qword_10047A970 != -1)
      swift_once(&qword_10047A970, sub_10009581C);
    aBlock = (void **)qword_1004AF2C8;
    v27 = unk_1004AF2D0;
    swift_bridgeObjectRetain(unk_1004AF2D0);
    v5._countAndFlagsBits = 46;
    v5._object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    sub_10001BFDC(a1, (uint64_t)&v35);
    v6 = sub_10001C014((uint64_t)&v35);
    nullsub_1(&v35);
    if (v6 == 1)
      v7 = 1701734764;
    else
      v7 = 0x6C676E6174636572;
    if (v6 == 1)
      v8 = 0xE400000000000000;
    else
      v8 = 0xE900000000000065;
    v9 = v8;
    String.append(_:)(*(Swift::String *)&v7);
    swift_bridgeObjectRelease(v8);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    v11 = swift_allocObject(&unk_100446B78, 24, 7);
    *(_QWORD *)(v11 + 16) = v4;
    v30 = sub_100124D5C;
    v31 = v11;
    aBlock = _NSConcreteStackBlock;
    v27 = 1107296256;
    v28 = sub_10011AC54;
    v29 = &unk_100446B90;
    v12 = _Block_copy(&aBlock);
    v13 = swift_release();
    AnalyticsSendEventLazy(v10, v12, v13);
    _Block_release(v12);

    return sub_10000F690(v34);
  }
  else
  {
    sub_100068B24((uint64_t)v34, (uint64_t)&aBlock);
    v35 = 0;
    v36 = 0xE000000000000000;
    _StringGuts.grow(_:)(53);
    v32 = v35;
    v33 = v36;
    v15._countAndFlagsBits = 0xD000000000000020;
    v15._object = (void *)0x80000001003E05D0;
    String.append(_:)(v15);
    v16 = sub_10000F66C(&aBlock, (uint64_t)v29);
    sub_10001BFDC((uint64_t)v16, (uint64_t)&v35);
    v17 = sub_10001B270();
    sub_10011A570(v17);
    v19 = v18;
    swift_bridgeObjectRelease(v17);
    v20 = sub_100018148(0, &qword_100481BC8, NSString_ptr);
    v21 = sub_100018148(0, (unint64_t *)&qword_10047C128, NSObject_ptr);
    v22 = sub_10012438C();
    v23._countAndFlagsBits = Dictionary.description.getter(v19, v20, v21, v22);
    object = v23._object;
    String.append(_:)(v23);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(object);
    v25._object = (void *)0x80000001003E0600;
    v25._countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v25);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v32, v33, "Measure/Analytics.swift", 23, 2, 32, 0);
    __break(1u);
  }
  return result;
}

_QWORD *sub_10012474C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[11];
  v6 = a1[13];
  v7 = a1[15];
  swift_bridgeObjectRelease(a1[17]);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_1001247D4()
{
  uint64_t v0;

  sub_10001C614(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_BYTE *)(v0 + 160));
  return swift_deallocObject(v0, 161, 7);
}

uint64_t sub_10012482C(uint64_t a1)
{
  sub_10001C540(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_BYTE *)(a1 + 144));
  return a1;
}

uint64_t sub_10012488C(__int128 *a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  NSString v7;
  uint64_t v8;
  void *v9;
  __n128 v10;
  uint64_t result;
  Swift::String v12;
  __int128 *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  Swift::String v20;
  void *object;
  Swift::String v22;
  void **aBlock;
  unint64_t v24;
  Class (*v25)(uint64_t);
  void *v26;
  uint64_t (*v27)();
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD v31[5];
  _QWORD v32[5];

  v32[3] = &type metadata for PersonHeightEvent;
  v32[4] = &off_10043F030;
  v32[0] = swift_allocObject(&unk_100446BC8, 56, 7);
  sub_10001C01C(a1, v32[0] + 16);
  v2 = sub_10001B710();
  sub_10011A8F8(v2);
  v4 = v3;
  swift_bridgeObjectRelease(v2);
  if (v4)
  {
    if (qword_10047A970 != -1)
      swift_once(&qword_10047A970, sub_10009581C);
    v24 = unk_1004AF2D0;
    swift_bridgeObjectRetain(unk_1004AF2D0);
    v5._countAndFlagsBits = 46;
    v5._object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    v6._countAndFlagsBits = 0x65486E6F73726570;
    v6._object = (void *)0xEC00000074686769;
    String.append(_:)(v6);
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v24);
    v8 = swift_allocObject(&unk_100446BF0, 24, 7);
    *(_QWORD *)(v8 + 16) = v4;
    v27 = sub_100124D5C;
    v28 = v8;
    aBlock = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_10011AC54;
    v26 = &unk_100446C08;
    v9 = _Block_copy(&aBlock);
    v10 = swift_release();
    AnalyticsSendEventLazy(v7, v9, v10);
    _Block_release(v9);

    return sub_10000F690(v32);
  }
  else
  {
    sub_100068B24((uint64_t)v32, (uint64_t)v31);
    aBlock = 0;
    v24 = 0xE000000000000000;
    _StringGuts.grow(_:)(53);
    v29 = 0;
    v30 = 0xE000000000000000;
    v12._countAndFlagsBits = 0xD000000000000020;
    v12._object = (void *)0x80000001003E05D0;
    String.append(_:)(v12);
    v13 = (__int128 *)sub_10000F66C(v31, v31[3]);
    sub_10001C01C(v13, (uint64_t)&aBlock);
    v14 = sub_10001B710();
    sub_10011A570(v14);
    v16 = v15;
    swift_bridgeObjectRelease(v14);
    v17 = sub_100018148(0, &qword_100481BC8, NSString_ptr);
    v18 = sub_100018148(0, (unint64_t *)&qword_10047C128, NSObject_ptr);
    v19 = sub_10012438C();
    v20._countAndFlagsBits = Dictionary.description.getter(v16, v17, v18, v19);
    object = v20._object;
    String.append(_:)(v20);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(object);
    v22._object = (void *)0x80000001003E0600;
    v22._countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v22);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v29, v30, "Measure/Analytics.swift", 23, 2, 32, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100124B58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100124B68()
{
  uint64_t *v0;

  sub_10001C0D4(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11], v0[12], v0[13], v0[14], v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t *sub_100124BB0(uint64_t *a1)
{
  sub_10001C05C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13]);
  return a1;
}

uint64_t sub_100124C00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppSession(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double sub_100124C44(uint64_t a1)
{
  uint64_t v1;

  return sub_10011FE34(a1, v1);
}

uint64_t sub_100124C4C(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t *sub_100124C70(uint64_t *a1)
{
  sub_100124CF0(*a1, a1[1], a1[2], a1[3]);
  return a1;
}

uint64_t sub_100124CF0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease(result);
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t sub_100124D70(void *a1, double a2, double a3, double a4, double a5)
{
  void *v5;
  void *v6;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;

  v6 = v5;
  v12 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
  v13 = swift_allocObject(v12, 64, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1003B1410;
  v14 = objc_msgSend(v6, "leadingAnchor");
  v15 = objc_msgSend(a1, "leadingAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v15, a3);

  *(_QWORD *)(v13 + 32) = v16;
  v17 = objc_msgSend(v6, "trailingAnchor");
  v18 = objc_msgSend(a1, "trailingAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, a5);

  *(_QWORD *)(v13 + 40) = v19;
  v20 = objc_msgSend(v6, "topAnchor");
  v21 = objc_msgSend(a1, "topAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v21, a2);

  *(_QWORD *)(v13 + 48) = v22;
  v23 = objc_msgSend(v6, "bottomAnchor");
  v24 = objc_msgSend(a1, "bottomAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v24, a4);

  *(_QWORD *)(v13 + 56) = v25;
  specialized Array._endMutation()(v26);
  return v13;
}

uint64_t sub_100124F8C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = (uint64_t *)swift_allocObject(v1, 104, 7);
  v4 = a1[3];
  v5 = a1[4];
  v6 = sub_1000A8224((uint64_t)a1, v4);
  __chkstk_darwin(v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v8);
  v10 = sub_100125614((uint64_t)v8, v3, v4, v5);
  sub_10000F690(a1);
  return v10;
}

void sub_100125044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __n128 v6;
  char v7;
  void *v8;
  id v9;
  void *v10;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100049274();
  *v5 = static OS_dispatch_queue.main.getter(v6);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) != 0)
  {
    v8 = *(void **)(v1 + 80);
    v9 = sub_100125190();
    aBlock[4] = sub_100125720;
    aBlock[5] = v1;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100125434;
    aBlock[3] = &unk_100446CD0;
    v10 = _Block_copy(aBlock);
    swift_retain();
    objc_msgSend(v8, "startDeviceMotionUpdatesToQueue:withHandler:", v9, v10, swift_release().n128_f64[0]);
    _Block_release(v10);

  }
  else
  {
    __break(1u);
  }
}

id sub_100125190()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  id v9;

  v1 = *(void **)(v0 + 96);
  if (v1)
  {
    v2 = *(id *)(v0 + 96);
  }
  else
  {
    v3 = v0;
    v4 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
    if (qword_10047AB70 != -1)
      swift_once(&qword_10047AB70, sub_10012638C);
    OS_dispatch_queue.label.getter(objc_msgSend(v4, "setUnderlyingQueue:", qword_1004AF6C0));
    v6 = v5;
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setName:", v7, swift_bridgeObjectRelease(v6).n128_f64[0]);

    v8 = *(void **)(v3 + 96);
    *(_QWORD *)(v3 + 96) = v4;
    v2 = v4;

    v1 = 0;
  }
  v9 = v1;
  return v2;
}

void sub_100125274(void *a1, uint64_t a2, uint64_t a3)
{
  Swift::String v6;
  uint64_t v7;
  void *object;
  void (*v9)(Swift::String *__return_ptr, __n128);
  __n128 v10;
  uint64_t v11;
  void (*v12)(Swift::String *, __n128);
  id v13;
  __n128 v14;
  void (*v15)(Swift::String *__return_ptr, __n128);
  __n128 v16;
  __n128 v17;
  void *countAndFlagsBits;
  uint64_t v19;
  Swift::String v20;

  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_10047AA68 != -1)
      swift_once(&qword_10047AA68, sub_1000E1390);
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(31);
    v6._object = (void *)0x80000001003E0730;
    v6._countAndFlagsBits = 0xD00000000000001DLL;
    String.append(_:)(v6);
    v19 = a2;
    v7 = sub_10000EDC8(&qword_10047ECA8);
    _print_unlocked<A, B>(_:_:)(&v19, &v20, v7, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    object = v20._object;
    Log.error(_:isPrivate:)(v20, 0);
    swift_bridgeObjectRelease(object);
    swift_errorRelease(a2);
  }
  v9 = *(void (**)(Swift::String *__return_ptr, __n128))(**(_QWORD **)(a3 + 72) + 144);
  v10 = swift_retain();
  v9(&v20, v10);
  swift_release();

  v11 = *(_QWORD *)(a3 + 72);
  v20._countAndFlagsBits = (uint64_t)a1;
  v12 = *(void (**)(Swift::String *, __n128))(*(_QWORD *)v11 + 392);
  v13 = a1;
  v14 = swift_retain();
  v12(&v20, v14);
  swift_release();
  v15 = *(void (**)(Swift::String *__return_ptr, __n128))(**(_QWORD **)(a3 + 72) + 144);
  v16 = swift_retain();
  v15(&v20, v16);
  v17 = swift_release();
  countAndFlagsBits = (void *)v20._countAndFlagsBits;
  CurrentValueSubject.send(_:)(&v20, v17);

}

void sub_100125434(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_1001254A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));

}

uint64_t sub_1001254D4(uint64_t a1)
{
  uint64_t v1;

  v1 = StateObserver.deinit(a1);
  swift_release(*(_QWORD *)(v1 + 64));
  swift_release(*(_QWORD *)(v1 + 72));

  return swift_deallocClassInstance(v1, 104, 7);
}

uint64_t type metadata accessor for MotionObserver(uint64_t a1)
{
  uint64_t result;

  result = qword_100484B00;
  if (!qword_100484B00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MotionObserver);
  return result;
}

uint64_t sub_10012555C(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = &unk_1003B7E50;
  v2[4] = &unk_1003B7E68;
  return swift_initClassMetadata2(a1, 256, 5, v2, a1 + 208);
}

id sub_1001255C4@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_10047AB70 != -1)
    swift_once(&qword_10047AB70, sub_10012638C);
  v2 = (void *)qword_1004AF6C0;
  *a1 = qword_1004AF6C0;
  return v2;
}

uint64_t sub_100125614(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t KeyPath;
  id v12;
  uint64_t v13;
  _QWORD v15[5];
  _QWORD v16[5];

  v7 = *a2;
  v16[3] = a3;
  v16[4] = a4;
  v8 = sub_100068AE8(v16);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v8, a1, a3);
  v15[0] = 0;
  v9 = sub_10000EDC8((uint64_t *)&unk_10048A5F0);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  v10 = swift_retain();
  a2[8] = CurrentValueSubject.init(_:)(v15, v10);
  sub_10000EDC8(&qword_100484C20);
  KeyPath = swift_getKeyPath(&unk_1003B7E80);
  a2[9] = MutableStateValue.__allocating_init(_:_:)(KeyPath, v7);
  v12 = objc_allocWithZone((Class)CMMotionManager);
  a2[10] = (uint64_t)objc_msgSend(v12, "init", v15[0]);
  *((_BYTE *)a2 + 88) = 0;
  a2[12] = 0;
  swift_release();
  sub_100068B24((uint64_t)v16, (uint64_t)v15);
  v13 = StateObserver.init(configuration:)(v15);
  sub_10000F690(v16);
  return v13;
}

void sub_100125720(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100125274(a1, a2, v2);
}

uint64_t sub_100125728(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100125738(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100125740(uint64_t a1, uint64_t a2, uint64_t a3, NSString a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  void *v15;
  NSString v16;
  void *v17;
  NSString v18;
  NSString v19;
  void *v20;
  NSString v21;
  NSString v22;
  id v24;

  v15 = *(void **)(v12 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setText:", v16);

  if (a4)
    a4 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setAccessibilityLabel:", a4, a7);

  v17 = *(void **)(v12 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setText:", v18);

  if (a8)
    v19 = String._bridgeToObjectiveC()();
  else
    v19 = 0;
  objc_msgSend(v17, "setAccessibilityLabel:", v19);

  v20 = *(void **)(v12 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setText:", v21);

  if (a12)
    v22 = String._bridgeToObjectiveC()();
  else
    v22 = 0;
  v24 = v22;
  objc_msgSend(v20, "setAccessibilityLabel:");

}

void sub_1001258C4(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  NSString v4;
  NSString v5;
  void *v6;
  NSString v7;
  NSString v8;
  void *v9;
  NSString v10;
  NSString v11;
  _BYTE v12[16];
  _BYTE v13[16];
  _QWORD v14[2];
  _QWORD v15[2];

  v3 = *(void **)(v1 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setText:", v4);

  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setAccessibilityLabel:", v5);

  v6 = *(void **)(v1 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setText:", v7);

  sub_10001F9D8(a1 + 32, (uint64_t)v13);
  sub_10001F9D8((uint64_t)v13, (uint64_t)v14);
  if (v14[1])
    v8 = String._bridgeToObjectiveC()();
  else
    v8 = 0;
  objc_msgSend(v6, "setAccessibilityLabel:", v8);

  v9 = *(void **)(v1 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setText:", v10);

  sub_10001F9D8(a1 + 96, (uint64_t)v12);
  sub_10001F9D8((uint64_t)v12, (uint64_t)v15);
  if (v15[1])
    v11 = String._bridgeToObjectiveC()();
  else
    v11 = 0;
  objc_msgSend(v9, "setAccessibilityLabel:", v11);

}

void sub_100125A48()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v40 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
  v5 = swift_allocObject(v4, 120, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1003B13C0;
  v6 = objc_msgSend(v3, "leadingAnchor");
  v7 = objc_msgSend(v0, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v3, "trailingAnchor");
  v10 = objc_msgSend(v0, "trailingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(v3, "bottomAnchor");
  v13 = objc_msgSend(v0, "bottomAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v5 + 48) = v14;
  v15 = objc_msgSend(v3, "topAnchor");
  v16 = objc_msgSend(v2, "bottomAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v5 + 56) = v17;
  v18 = objc_msgSend(v2, "leadingAnchor");
  v19 = objc_msgSend(v0, "leadingAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v5 + 64) = v20;
  v21 = objc_msgSend(v2, "trailingAnchor");
  v22 = objc_msgSend(v0, "trailingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v5 + 72) = v23;
  v24 = objc_msgSend(v2, "bottomAnchor");
  v25 = objc_msgSend(v3, "topAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v5 + 80) = v26;
  v27 = objc_msgSend(v2, "topAnchor");
  v28 = objc_msgSend(v1, "bottomAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v5 + 88) = v29;
  v30 = objc_msgSend(v1, "leadingAnchor");
  v31 = objc_msgSend(v0, "leadingAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v5 + 96) = v32;
  v33 = objc_msgSend(v1, "trailingAnchor");
  v34 = objc_msgSend(v0, "trailingAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v5 + 104) = v35;
  v36 = objc_msgSend(v1, "topAnchor");
  v37 = objc_msgSend(v0, "topAnchor");
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

  *(_QWORD *)(v5 + 112) = v38;
  specialized Array._endMutation()(v39);
  sub_10002277C();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v40, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

}

char *sub_100125F58(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  objc_class *ObjCClassFromMetadata;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  char *v20;
  void *v21;
  void *v22;
  objc_super v24;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v11 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel;
  v12 = type metadata accessor for InteractiveLabel();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v12);
  v14 = objc_allocWithZone(ObjCClassFromMetadata);
  v15 = v4;
  *(_QWORD *)&v5[v11] = objc_msgSend(v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel;
  *(_QWORD *)&v15[v17] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v24.receiver = v15;
  v24.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v24, "initWithFrame:", a1, a2, a3, a4);
  v19 = *(void **)&v18[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel];
  v20 = v18;
  objc_msgSend(v19, "setUserInteractionEnabled:", 1);
  v21 = *(void **)&v20[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel];
  objc_msgSend(v21, "setUserInteractionEnabled:", 1);
  v22 = *(void **)&v20[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel];
  objc_msgSend(v22, "setUserInteractionEnabled:", 1);
  objc_msgSend(v20, "addSubview:", v19);
  objc_msgSend(v20, "addSubview:", v21);
  objc_msgSend(v20, "addSubview:", v22);
  sub_100125A48();

  return v20;
}

char *sub_10012613C(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  objc_class *ObjCClassFromMetadata;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void *v14;
  char *v15;
  void *v16;
  void *v17;
  objc_super v19;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  v5 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel;
  v6 = type metadata accessor for InteractiveLabel();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v6);
  v8 = objc_allocWithZone(ObjCClassFromMetadata);
  v9 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v8, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel;
  *(_QWORD *)&v9[v10] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v11 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel;
  *(_QWORD *)&v9[v11] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v19.receiver = v9;
  v19.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v19, "initWithCoder:", a1);
  v13 = v12;
  if (v12)
  {
    v14 = *(void **)&v12[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel];
    v15 = v12;
    objc_msgSend(v14, "setUserInteractionEnabled:", 1);
    v16 = *(void **)&v15[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel];
    objc_msgSend(v16, "setUserInteractionEnabled:", 1);
    v17 = *(void **)&v15[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel];
    objc_msgSend(v17, "setUserInteractionEnabled:", 1);
    objc_msgSend(v15, "addSubview:", v14);
    objc_msgSend(v15, "addSubview:", v16);
    objc_msgSend(v15, "addSubview:", v17);
    sub_100125A48();

  }
  return v13;
}

uint64_t type metadata accessor for AccessibilityTripleStack()
{
  return objc_opt_self(_TtC7Measure24AccessibilityTripleStack);
}

ValueMetadata *type metadata accessor for MotionState()
{
  return &type metadata for MotionState;
}

uint64_t sub_10012638C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::String v13;
  double *v14;
  unint64_t v15;
  __n128 v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD v22[2];
  double *v23;
  unint64_t v24;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  v23 = 0;
  v24 = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  v10 = v24;
  if (qword_10047A970 != -1)
    swift_once(&qword_10047A970, sub_10009581C);
  v12 = qword_1004AF2C8;
  v11 = unk_1004AF2D0;
  swift_bridgeObjectRetain(unk_1004AF2D0);
  swift_bridgeObjectRelease(v10);
  v23 = (double *)v12;
  v24 = v11;
  v13._countAndFlagsBits = 0x2D6E6F69746F6D2DLL;
  v13._object = (void *)0xEE0073746E657665;
  String.append(_:)(v13);
  v14 = v23;
  v15 = v24;
  static DispatchQoS.unspecified.getter(v16);
  v23 = _swiftEmptyArrayStorage;
  v17 = sub_100047734();
  v18 = sub_10000EDC8(&qword_100486EF0);
  v19 = sub_10004777C();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v18, v19, v4, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  v20 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v14, v15, v9, v6, v3, 0);
  result = Contexts.PrivateQueue.init(_:)(v20);
  qword_1004AF6C0 = result;
  return result;
}

uint64_t sub_1001265B0(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      sub_100018148(0, &qword_100484CA0, CMDeviceMotion_ptr);
      v4 = v3;
      v5 = v2;
      v6 = static NSObject.== infix(_:_:)(v5, v4);

      if ((v6 & 1) != 0)
        return 1;
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_100126638()
{
  unint64_t result;

  result = qword_100484C68;
  if (!qword_100484C68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Contexts.PrivateQueue, &type metadata for Contexts.PrivateQueue);
    atomic_store(result, (unint64_t *)&qword_100484C68);
  }
  return result;
}

unint64_t sub_10012667C(uint64_t a1)
{
  unint64_t result;

  result = sub_1001266A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001266A0()
{
  unint64_t result;

  result = qword_100484C98;
  if (!qword_100484C98)
  {
    result = swift_getWitnessTable(&unk_1003B7EE8, &type metadata for MotionState);
    atomic_store(result, (unint64_t *)&qword_100484C98);
  }
  return result;
}

id sub_1001266E4(double a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure11ColorPicker_value);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC7Measure11ColorPicker_redSlider);
  if (v3)
  {
    *(float *)&a1 = (float)BYTE3(v2) / 255.0;
    objc_msgSend(v3, "setValue:", a1);
  }
  v4 = *(void **)(v1 + OBJC_IVAR____TtC7Measure11ColorPicker_greenSlider);
  if (v4)
  {
    *(float *)&a1 = (float)BYTE2(v2) / 255.0;
    objc_msgSend(v4, "setValue:", a1);
  }
  v5 = *(void **)(v1 + OBJC_IVAR____TtC7Measure11ColorPicker_blueSlider);
  if (v5)
  {
    *(float *)&a1 = (float)BYTE1(v2) / 255.0;
    objc_msgSend(v5, "setValue:", a1);
  }
  result = *(id *)(v1 + OBJC_IVAR____TtC7Measure11ColorPicker_alphaSlider);
  if (result)
  {
    *(float *)&a1 = (float)v2 / 255.0;
    return objc_msgSend(result, "setValue:", a1);
  }
  return result;
}

double sub_1001267CC(unint64_t a1)
{
  int8x16_t v1;
  int8x16_t v2;
  double result;

  v1.i64[0] = a1 >> 8;
  v1.i64[1] = a1;
  v2.i64[0] = 255;
  v2.i64[1] = 255;
  *(_QWORD *)&result = vdivq_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_n_s64(a1), (uint64x2_t)xmmword_1003B7F30), v2))), vcvtq_f64_s64((int64x2_t)vandq_s8(v1, v2))), (float32x4_t)vdupq_n_s32(0x437F0000u)).u64[0];
  return result;
}

void sub_100126814()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  Class isa;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  id v58;
  void *v59;
  Class v60;
  id v61;
  id v62;
  uint64_t v63;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)UISlider), "init");
  v3 = objc_msgSend(objc_allocWithZone((Class)UISlider), "init");
  v4 = objc_msgSend(objc_allocWithZone((Class)UISlider), "init");
  v5 = objc_msgSend(objc_allocWithZone((Class)UISlider), "init");
  v6 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_redSlider];
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_redSlider] = v2;
  v7 = v2;

  v8 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_greenSlider];
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_greenSlider] = v3;
  v9 = v3;

  v10 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_blueSlider];
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_blueSlider] = v4;
  v11 = v4;

  v12 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_alphaSlider];
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_alphaSlider] = v5;
  v13 = v5;

  objc_msgSend(v7, "addTarget:action:forControlEvents:", v1, "updateValue:", 4096);
  objc_msgSend(v9, "addTarget:action:forControlEvents:", v1, "updateValue:", 4096);
  objc_msgSend(v11, "addTarget:action:forControlEvents:", v1, "updateValue:", 4096);
  objc_msgSend(v13, "addTarget:action:forControlEvents:", v1, "updateValue:", 4096);
  v14 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
  v15 = swift_allocObject(v14, 64, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1003B1410;
  *(_QWORD *)(v15 + 32) = v7;
  *(_QWORD *)(v15 + 40) = v9;
  *(_QWORD *)(v15 + 48) = v11;
  *(_QWORD *)(v15 + 56) = v13;
  v63 = v15;
  specialized Array._endMutation()(v15);
  v16 = objc_allocWithZone((Class)UIStackView);
  sub_100018148(0, (unint64_t *)&qword_100481BC0, UIView_ptr);
  v17 = v7;
  v62 = v9;
  v61 = v11;
  v58 = v13;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v19 = objc_msgSend(v16, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v63).n128_f64[0]);

  objc_msgSend(v19, "setAxis:", 1);
  objc_msgSend(v19, "setAlignment:", 3);
  objc_msgSend(v19, "setDistribution:", 0);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addSubview:", v19);
  v59 = (void *)objc_opt_self(NSLayoutConstraint);
  v20 = swift_allocObject(v14, 128, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1003B7F40;
  v21 = objc_msgSend(v17, "leftAnchor");
  v22 = objc_msgSend(v19, "leftAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v20 + 32) = v23;
  v24 = objc_msgSend(v17, "rightAnchor");
  v25 = objc_msgSend(v19, "rightAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v20 + 40) = v26;
  v27 = objc_msgSend(v62, "leftAnchor");
  v28 = objc_msgSend(v19, "leftAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v20 + 48) = v29;
  v30 = objc_msgSend(v62, "rightAnchor");
  v31 = objc_msgSend(v19, "rightAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v20 + 56) = v32;
  v33 = objc_msgSend(v61, "leftAnchor");
  v34 = objc_msgSend(v19, "leftAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v20 + 64) = v35;
  v36 = objc_msgSend(v61, "rightAnchor");
  v37 = objc_msgSend(v19, "rightAnchor");
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

  *(_QWORD *)(v20 + 72) = v38;
  v39 = objc_msgSend(v58, "leftAnchor");
  v40 = objc_msgSend(v19, "leftAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

  *(_QWORD *)(v20 + 80) = v41;
  v42 = objc_msgSend(v58, "rightAnchor");
  v43 = objc_msgSend(v19, "rightAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v20 + 88) = v44;
  v45 = objc_msgSend(v19, "leftAnchor");
  v46 = objc_msgSend(v1, "leftAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v46, 16.0);

  *(_QWORD *)(v20 + 96) = v47;
  v48 = objc_msgSend(v19, "rightAnchor");
  v49 = objc_msgSend(v1, "rightAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v49, -16.0);

  *(_QWORD *)(v20 + 104) = v50;
  v51 = objc_msgSend(v19, "topAnchor");
  v52 = objc_msgSend(v1, "topAnchor");
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:", v52);

  *(_QWORD *)(v20 + 112) = v53;
  v54 = objc_msgSend(v19, "bottomAnchor");
  v55 = objc_msgSend(v1, "bottomAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:", v55);

  *(_QWORD *)(v20 + 120) = v56;
  specialized Array._endMutation()(v57);
  sub_100018148(0, (unint64_t *)&qword_100486300, NSLayoutConstraint_ptr);
  v60 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v59, "activateConstraints:", v60, swift_bridgeObjectRelease(v20).n128_f64[0]);

}

uint64_t type metadata accessor for ColorPicker()
{
  return objc_opt_self(_TtC7Measure11ColorPicker);
}

id sub_1001271EC()
{
  char *v0;
  id result;
  float v2;
  float v3;
  float v4;
  float v5;
  float v6;
  float v7;
  double v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = *(id *)&v0[OBJC_IVAR____TtC7Measure11ColorPicker_redSlider];
  if (!result)
    goto LABEL_36;
  result = objc_msgSend(result, "value");
  v3 = v2 * 255.0;
  if ((~COERCE_INT(v2 * 255.0) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v3 <= -9.2234e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v3 >= 9.2234e18)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  result = *(id *)&v0[OBJC_IVAR____TtC7Measure11ColorPicker_greenSlider];
  if (!result)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  result = objc_msgSend(result, "value");
  v5 = v4 * 255.0;
  if ((~COERCE_INT(v4 * 255.0) & 0x7F800000) == 0)
    goto LABEL_24;
  if (v5 <= -9.2234e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v5 >= 9.2234e18)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  result = *(id *)&v0[OBJC_IVAR____TtC7Measure11ColorPicker_blueSlider];
  if (!result)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  result = objc_msgSend(result, "value");
  v7 = v6 * 255.0;
  if ((~COERCE_INT(v6 * 255.0) & 0x7F800000) == 0)
    goto LABEL_27;
  if (v7 <= -9.2234e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= 9.2234e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  result = *(id *)&v0[OBJC_IVAR____TtC7Measure11ColorPicker_alphaSlider];
  if (result)
  {
    result = objc_msgSend(result, "value");
    *(float *)&v8 = *(float *)&v8 * 255.0;
    if ((~LODWORD(v8) & 0x7F800000) != 0)
    {
      if (*(float *)&v8 > -9.2234e18)
      {
        if (*(float *)&v8 < 9.2234e18)
        {
          v9 = (uint64_t)v3 << 24;
          v10 = __OFADD__(v9, (uint64_t)v5 << 16);
          v11 = v9 + ((uint64_t)v5 << 16);
          if (!v10)
          {
            v10 = __OFADD__(v11, (uint64_t)v7 << 8);
            v12 = v11 + ((uint64_t)v7 << 8);
            if (!v10)
            {
              v10 = __OFADD__(v12, (uint64_t)*(float *)&v8);
              v13 = v12 + (uint64_t)*(float *)&v8;
              if (!v10)
              {
                *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure11ColorPicker_value] = v13;
                sub_1001266E4(v8);
                return objc_msgSend(v0, "sendActionsForControlEvents:", 4096);
              }
              goto LABEL_35;
            }
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
            goto LABEL_37;
          }
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_100127400(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v2 = v1;
  if (a1)
  {
    v3 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0);
    v4 = a1;
    if (v3() && (v4 = v4, v5 = v3(), v4, v5 != 5))
    {
      v9 = v4;
      v7 = v3();

      if (v7 != 6)
        goto LABEL_8;
      v6 = *(id *)(v2 + qword_100484D68);
      v8 = String._bridgeToObjectiveC()();
      objc_msgSend(v6, "setText:", v8);

      v9 = v8;
    }
    else
    {
      v6 = *(id *)(v2 + qword_100484D68);
      v9 = String._bridgeToObjectiveC()();
      objc_msgSend(v6, "setText:");

    }
  }
  else
  {
    v6 = *(id *)(v1 + qword_100484D68);
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "setText:");
  }

LABEL_8:
}

void sub_1001275C8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  Swift::String v6;
  NSString v7;
  id *v8;
  id v9;
  NSString v10;
  id v11;
  NSString v12;
  id v13;
  NSString v14;
  id v15;
  NSString v16;
  uint64_t v17;
  void (*v18)(_QWORD *__return_ptr, __n128);
  __n128 v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  void (*v27)(_QWORD *__return_ptr, __n128);
  __n128 v28;
  uint64_t v29;
  void *v30;
  float v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void (*v35)(_QWORD *__return_ptr, __n128);
  __n128 v36;
  void *v37;
  float v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  Swift::String v43;
  uint64_t v44;
  NSString v45;
  id v46;
  Swift::String v47;
  uint64_t v48;
  NSString v49;
  id v50;
  Swift::String v51;
  uint64_t v52;
  NSString v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[68];
  _QWORD v57[68];
  _QWORD __src[68];
  _QWORD __dst[68];

  v2 = v1;
  v4 = *(id *)(v1 + qword_100484D80);
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(0xE000000000000000);
  __dst[0] = 0xD000000000000014;
  __dst[1] = 0x80000001003E0D30;
  if ((a1 & 1) != 0)
    v5 = 2728370160;
  else
    v5 = 3029639152;
  v6._countAndFlagsBits = v5;
  v6._object = (void *)0xA400000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(0xA400000000000000);
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setText:", v7, swift_bridgeObjectRelease(__dst[1]).n128_f64[0]);

  v8 = (id *)(v1 + qword_100484D88);
  v9 = *(id *)(v1 + qword_100484D88);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setText:", v10);

  v11 = v8[1];
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setText:", v12);

  v13 = v8[2];
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setText:", v14);

  v15 = v8[3];
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setText:", v16, swift_bridgeObjectRelease(0xA400000000000000).n128_f64[0]);

  v17 = qword_100484DC0;
  v18 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v2 + qword_100484DC0) + 144);
  v19 = swift_retain();
  v18(__src, v19);
  swift_release();
  memcpy(__dst, __src, 0x213uLL);
  sub_1000642CC((uint64_t)__dst);
  if ((__dst[3] & 1) != 0)
  {
    v20 = (void *)0x80000001003E0D50;
    v54 = 0xD000000000000028;
  }
  else
  {
    v21 = __dst[2];
    v22 = __dst[1];
    v23 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v24 = swift_allocObject(v23, 112, 7);
    *(_OWORD *)(v24 + 16) = xmmword_1003B0F60;
    *(_QWORD *)(v24 + 56) = &type metadata for CGFloat;
    v25 = sub_10012AE60();
    *(_QWORD *)(v24 + 64) = v25;
    *(_QWORD *)(v24 + 32) = v22;
    *(_QWORD *)(v24 + 96) = &type metadata for CGFloat;
    *(_QWORD *)(v24 + 104) = v25;
    *(_QWORD *)(v24 + 72) = v21;
    v54 = String.init(format:_:)(0xD00000000000002FLL, 0x80000001003E0E40, v24);
    v20 = v26;
  }
  v27 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v2 + v17) + 144);
  v28 = swift_retain();
  v27(v57, v28);
  swift_release();
  memcpy(__src, v57, 0x213uLL);
  sub_1000642CC((uint64_t)__src);
  if ((__src[56] & 1) != 0)
  {
    v29 = 0xD000000000000027;
    v30 = (void *)0x80000001003E0D80;
  }
  else
  {
    v31 = *((float *)&__src[55] + 1);
    v32 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v33 = swift_allocObject(v32, 72, 7);
    *(_OWORD *)(v33 + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(v33 + 56) = &type metadata for Float;
    *(_QWORD *)(v33 + 64) = &protocol witness table for Float;
    *(float *)(v33 + 32) = v31 * 39.37;
    v29 = String.init(format:_:)(0xD000000000000028, 0x80000001003E0E10, v33);
    v30 = v34;
  }
  v35 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v2 + v17) + 144);
  v36 = swift_retain();
  v35(v56, v36);
  swift_release();
  memcpy(v57, v56, 0x213uLL);
  sub_1000642CC((uint64_t)v57);
  if ((v57[55] & 1) != 0)
  {
    v37 = (void *)0x80000001003E0DB0;
    v55 = 0xD000000000000028;
  }
  else
  {
    v38 = *((float *)&v57[54] + 1);
    v39 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v40 = swift_allocObject(v39, 72, 7);
    *(_OWORD *)(v40 + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(v40 + 56) = &type metadata for Float;
    *(_QWORD *)(v40 + 64) = &protocol witness table for Float;
    *(float *)(v40 + 32) = v38 * 39.37;
    v55 = String.init(format:_:)(0xD000000000000029, 0x80000001003E0DE0, v40);
    v37 = v41;
  }
  v42 = sub_100128A60(&qword_100484D10);
  v56[0] = 8224;
  v56[1] = 0xE200000000000000;
  v43._countAndFlagsBits = v54;
  v43._object = v20;
  String.append(_:)(v43);
  swift_bridgeObjectRelease(v20);
  v44 = v56[1];
  v45 = String._bridgeToObjectiveC()();
  objc_msgSend(v42, "setText:", v45, swift_bridgeObjectRelease(v44).n128_f64[0]);

  v46 = sub_100128A60(&qword_100484D18);
  v56[0] = 8224;
  v56[1] = 0xE200000000000000;
  v47._countAndFlagsBits = v29;
  v47._object = v30;
  String.append(_:)(v47);
  swift_bridgeObjectRelease(v30);
  v48 = v56[1];
  v49 = String._bridgeToObjectiveC()();
  objc_msgSend(v46, "setText:", v49, swift_bridgeObjectRelease(v48).n128_f64[0]);

  v50 = sub_100128A60(&qword_100484D20);
  v56[0] = 8224;
  v56[1] = 0xE200000000000000;
  v51._countAndFlagsBits = v55;
  v51._object = v37;
  String.append(_:)(v51);
  swift_bridgeObjectRelease(v37);
  v52 = v56[1];
  v53 = String._bridgeToObjectiveC()();
  objc_msgSend(v50, "setText:", v53, swift_bridgeObjectRelease(v52).n128_f64[0]);

}

void sub_100127B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(__n128 *__return_ptr, __n128);
  __n128 v4;
  unint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void (*v14)(__n128 *__return_ptr, __n128);
  __n128 v15;
  unint64_t v16;
  unint64_t v17;
  double *v18;
  float v19;
  uint64_t v20;
  void *v21;
  void *v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  double v27;
  void (*v28)(__n128 *__return_ptr, __n128);
  __n128 v29;
  float v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void (*v34)(_QWORD *__return_ptr, __n128);
  __n128 v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  Swift::String v41;
  uint64_t v42;
  NSString v43;
  id v44;
  Swift::String v45;
  uint64_t v46;
  NSString v47;
  id v48;
  uint64_t v49;
  NSString v50;
  id v51;
  Swift::String v52;
  uint64_t v53;
  NSString v54;
  id v55;
  Swift::String v56;
  uint64_t v57;
  NSString v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  void *v63;
  unint64_t v64;
  uint64_t v65;
  float v66;
  Swift::String v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  float32x2_t v71;
  _QWORD __src[68];
  __n128 __dst[34];

  v1 = 0xD00000000000001ELL;
  v2 = qword_100484DB8;
  v3 = *(void (**)(__n128 *__return_ptr, __n128))(**(_QWORD **)(v0 + qword_100484DB8) + 144);
  v4 = swift_retain();
  v3(__dst, v4);
  swift_release();
  v5 = __dst[0].n128_u64[0];
  v6 = __dst[4].n128_u8[0];
  v62 = __dst[1].n128_u64[1];
  v64 = __dst[3].n128_u64[1];
  v60 = __dst[0].n128_u64[1];
  v61 = __dst[2].n128_u64[0];
  v59 = __dst[1].n128_u64[0];
  if ((__dst[4].n128_u8[0] & 1) != 0)
  {
    v7 = __dst[3].n128_u64[0];
    v8 = __dst[2].n128_u64[1];
    v70 = 0xD000000000000032;
    v9 = (void *)0x80000001003E0B80;
    v68 = 0xD000000000000018;
    v69 = (void *)0x80000001003E0BA0;
  }
  else
  {
    v8 = __dst[2].n128_u64[1];
    v7 = __dst[3].n128_u64[0];
    v71 = COERCE_FLOAT32X2_T(simd_float4x4.position.getter(__dst[0], __dst[1], __dst[2], __dst[3]));
    v10 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v11 = swift_allocObject(v10, 72, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(v11 + 56) = &type metadata for Float;
    *(_QWORD *)(v11 + 64) = &protocol witness table for Float;
    *(float *)(v11 + 32) = vmuls_lane_f32(39.37, v71, 1);
    v12 = String.init(format:_:)(0xD00000000000002DLL, 0x80000001003E0D00, v11);
    v69 = v13;
    v70 = v12;
    v68 = 0xD00000000000001DLL;
    v9 = (void *)0x80000001003E0CE0;
  }
  v14 = *(void (**)(__n128 *__return_ptr, __n128))(**(_QWORD **)(v0 + v2) + 144);
  v15 = swift_retain();
  v14(__dst, v15);
  swift_release();
  if ((__dst[9].n128_u8[8] & 1) != 0)
  {
    v16 = 0xD000000000000029;
    v17 = 0x80000001003E0BE0;
    v18 = _swiftEmptyArrayStorage;
  }
  else
  {
    v19 = __dst[9].n128_f32[1];
    v20 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v18 = (double *)swift_allocObject(v20, 72, 7);
    *((_OWORD *)v18 + 1) = xmmword_1003B0BD0;
    *((_QWORD *)v18 + 7) = &type metadata for Float;
    *((_QWORD *)v18 + 8) = &protocol witness table for Float;
    *((float *)v18 + 8) = v19 * 39.37;
    v16 = 0xD00000000000002ALL;
    v17 = 0x80000001003E0CB0;
  }
  v67._countAndFlagsBits = String.init(format:_:)(v16, v17, v18);
  v67._object = v21;
  v22 = (void *)0x80000001003E0C10;
  if ((v6 & 1) == 0)
  {
    v23.n128_u64[0] = v5;
    v23.n128_u64[1] = v60;
    v24.n128_u64[0] = v59;
    v24.n128_u64[1] = v62;
    v25.n128_u64[0] = v61;
    v25.n128_u64[1] = v8;
    v26.n128_u64[0] = v7;
    v26.n128_u64[1] = v64;
    v27 = simd_float4x4.position.getter(v23, v24, v25, v26);
    v66 = *((float *)&v27 + 1);
    v28 = *(void (**)(__n128 *__return_ptr, __n128))(**(_QWORD **)(v0 + v2) + 144);
    v29 = swift_retain();
    v28(__dst, v29);
    swift_release();
    if ((__dst[9].n128_u8[8] & 1) == 0)
    {
      v30 = __dst[9].n128_f32[1];
      v31 = sub_10000EDC8((uint64_t *)&unk_10048A100);
      v32 = swift_allocObject(v31, 72, 7);
      *(_OWORD *)(v32 + 16) = xmmword_1003B0BD0;
      *(_QWORD *)(v32 + 56) = &type metadata for Float;
      *(_QWORD *)(v32 + 64) = &protocol witness table for Float;
      *(float *)(v32 + 32) = (float)(v66 - v30) * 39.37;
      v1 = String.init(format:_:)(0xD00000000000001FLL, 0x80000001003E0C90, v32);
      v22 = v33;
    }
  }
  v34 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v0 + qword_100484DC0) + 144);
  v35 = swift_retain();
  v34(__src, v35);
  swift_release();
  memcpy(__dst, __src, 0x213uLL);
  sub_1000642CC((uint64_t)__dst);
  v36 = 0x100000000000001BLL;
  if ((__dst[33].n128_u8[1] & 1) != 0)
    v36 = 0x100000000000001ALL;
  v37 = 0x80000001003E0C50;
  if ((__dst[33].n128_u8[1] & 1) != 0)
    v37 = 0x80000001003E0C70;
  if (__dst[33].n128_u8[1] == 2)
    v38 = 0x100000000000001ELL;
  else
    v38 = v36;
  v65 = v38;
  v39 = 0x80000001003E0C30;
  if (__dst[33].n128_u8[1] != 2)
    v39 = v37;
  v63 = (void *)v39;
  v40 = sub_100128A60(&qword_100484D28);
  __src[0] = 8224;
  __src[1] = 0xE200000000000000;
  v41._countAndFlagsBits = v68;
  v41._object = v9;
  String.append(_:)(v41);
  swift_bridgeObjectRelease(v9);
  v42 = __src[1];
  v43 = String._bridgeToObjectiveC()();
  objc_msgSend(v40, "setText:", v43, swift_bridgeObjectRelease(v42).n128_f64[0]);

  v44 = sub_100128A60(&qword_100484D30);
  __src[0] = 8224;
  __src[1] = 0xE200000000000000;
  v45._countAndFlagsBits = v70;
  v45._object = v69;
  String.append(_:)(v45);
  swift_bridgeObjectRelease(v69);
  v46 = __src[1];
  v47 = String._bridgeToObjectiveC()();
  objc_msgSend(v44, "setText:", v47, swift_bridgeObjectRelease(v46).n128_f64[0]);

  v48 = sub_100128A60(&qword_100484D40);
  __src[0] = 8224;
  __src[1] = 0xE200000000000000;
  String.append(_:)(v67);
  swift_bridgeObjectRelease(v67._object);
  v49 = __src[1];
  v50 = String._bridgeToObjectiveC()();
  objc_msgSend(v48, "setText:", v50, swift_bridgeObjectRelease(v49).n128_f64[0]);

  v51 = sub_100128A60(&qword_100484D38);
  __src[0] = 8224;
  __src[1] = 0xE200000000000000;
  v52._countAndFlagsBits = v1;
  v52._object = v22;
  String.append(_:)(v52);
  swift_bridgeObjectRelease(v22);
  v53 = __src[1];
  v54 = String._bridgeToObjectiveC()();
  objc_msgSend(v51, "setText:", v54, swift_bridgeObjectRelease(v53).n128_f64[0]);

  v55 = sub_100128A60(&qword_100484D48);
  __src[0] = 8224;
  __src[1] = 0xE200000000000000;
  v56._countAndFlagsBits = v65;
  v56._object = v63;
  String.append(_:)(v56);
  swift_bridgeObjectRelease(v63);
  v57 = __src[1];
  v58 = String._bridgeToObjectiveC()();
  objc_msgSend(v55, "setText:", v58, swift_bridgeObjectRelease(v57).n128_f64[0]);

}

void sub_100128180()
{
  uint64_t v0;
  void (*v1)(_QWORD *__return_ptr, __n128);
  __n128 v2;
  id v3;
  NSString v4;
  _QWORD v5[68];
  _BYTE __dst[544];

  v1 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v0 + qword_100484DC0) + 144);
  v2 = swift_retain();
  v1(v5, v2);
  swift_release();
  memcpy(__dst, v5, 0x213uLL);
  sub_1000642CC((uint64_t)__dst);
  v3 = sub_100128A60(&qword_100484D50);
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setText:", v4);

}

void sub_100128274(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *i;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  NSString v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;

  v1 = 0;
  v2 = *(_QWORD *)(a1 + 16);
  v3 = v2 - 1;
  for (i = (_QWORD *)(a1 + 16 * v2 + 24); ; i -= 2)
  {
    v12 = sub_100128BD8();
    v13 = v12;
    v14 = v12 & 0xC000000000000001;
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v2)
        break;
    }
    if (v14)
    {
      v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v1, v12);
    }
    else
    {
      if (v1 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_17;
      v15 = *(id *)(v12 + 8 * v1 + 32);
    }
    v6 = v15;
    swift_bridgeObjectRelease(v13);
    v10 = String._bridgeToObjectiveC()();
LABEL_4:
    objc_msgSend(v6, "setText:", v10, v11, v16);
    ++v1;

    --v3;
    if (v1 == 5)
      return;
  }
  if (v14)
  {
    v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v1, v12);
LABEL_3:
    v6 = v5;
    swift_bridgeObjectRelease(v13);
    v7 = *(i - 1);
    v8 = (void *)*i;
    v16 = 8224;
    swift_bridgeObjectRetain(*i);
    v9._countAndFlagsBits = v7;
    v9._object = v8;
    String.append(_:)(v9);
    swift_bridgeObjectRelease(v8);
    v10 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(0xE200000000000000).n128_u64[0];
    goto LABEL_4;
  }
  if (v1 < *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v12 + 8 * v1 + 32);
    goto LABEL_3;
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

void sub_100128400()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  char **v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t j;
  id v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  void *v35;
  double MaxY;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  id v42;
  void *v43;
  double v44;
  double v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  id v52;
  void *v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  CGRect v58;

  v1 = v0;
  v2 = objc_msgSend(v0, "superview");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "frame");

    v4 = objc_msgSend(v1, "subviews");
    v57 = sub_100018148(0, (unint64_t *)&qword_100481BC0, UIView_ptr);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v57);

    if ((unint64_t)v5 >> 62)
    {
      if (v5 < 0)
        v10 = v5;
      else
        v10 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v6 = _CocoaArrayWrapper.endIndex.getter(v10);
      if (!v6)
        goto LABEL_15;
    }
    else
    {
      v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v5);
      if (!v6)
        goto LABEL_15;
    }
    if (v6 < 1)
    {
      __break(1u);
      goto LABEL_74;
    }
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
      else
        v8 = *(id *)(v5 + 8 * i + 32);
      v9 = v8;
      objc_msgSend(v8, "sizeToFit", v57);

    }
LABEL_15:
    *(_QWORD *)&v11 = swift_bridgeObjectRelease_n(v5, 2).n128_u64[0];
    v12 = qword_100484D60;
    v13 = *(double *)&v1[qword_100484D60];
    v14 = &selRef_renderer_didAddNode_forAnchor_;
    v15 = objc_msgSend(v1, "subviews", v11);
    v16 = v57;
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v57);

    if ((unint64_t)v17 >> 62)
    {
      if (v17 < 0)
        v26 = v17;
      else
        v26 = v17 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v17);
      v18 = _CocoaArrayWrapper.endIndex.getter(v26);
      swift_bridgeObjectRelease(v17);
      if (v18)
      {
LABEL_17:
        sub_1000A5660(0, v18 & ~(v18 >> 63), 0);
        if ((v18 & 0x8000000000000000) == 0)
        {
          for (j = 0; j != v18; ++j)
          {
            if ((v17 & 0xC000000000000001) != 0)
              v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v17);
            else
              v20 = *(id *)(v17 + 8 * j + 32);
            v21 = v20;
            objc_msgSend(v20, "frame", v57);
            v23 = v22;

            v25 = _swiftEmptyArrayStorage[2];
            v24 = _swiftEmptyArrayStorage[3];
            if (*(_QWORD *)&v25 >= *(_QWORD *)&v24 >> 1)
              sub_1000A5660((char *)(*(_QWORD *)&v24 > 1uLL), *(_QWORD *)&v25 + 1, 1);
            *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v25 + 1;
            _swiftEmptyArrayStorage[*(_QWORD *)&v25 + 4] = v23;
          }
          swift_bridgeObjectRelease(v17);
          v14 = &selRef_renderer_didAddNode_forAnchor_;
          v16 = v57;
LABEL_31:
          *(double *)&v27 = COERCE_DOUBLE(sub_10004BE74((uint64_t)_swiftEmptyArrayStorage));
          v29 = v28;
          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          v30 = *(double *)&v27;
          if ((v29 & 1) != 0)
            v30 = 0.0;
          if ((*(_QWORD *)&v30 & 0xFFFFFFFFFFFFFLL) != 0)
            v31 = v13;
          else
            v31 = v30;
          if ((~*(_QWORD *)&v30 & 0x7FF0000000000000) != 0)
            v31 = v30;
          if (v30 >= v13)
            v32 = v31;
          else
            v32 = v13;
          *(double *)&v1[v12] = v32;
          objc_msgSend(v1, "frame", v57);
          v34 = v33;
          if (qword_10047A930 != -1)
            swift_once(&qword_10047A930, sub_100083368);
          if (!qword_1004AF238)
            goto LABEL_77;
          v35 = *(void **)(qword_1004AF238 + 88);
          if (v35)
          {
            objc_msgSend(v35, "frame");
            MaxY = CGRectGetMaxY(v58);
          }
          else
          {
            MaxY = 75.0;
          }
          v37 = objc_msgSend(v1, v14[203]);
          v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v16);

          if ((unint64_t)v38 >> 62)
          {
            if (v38 < 0)
              v46 = v38;
            else
              v46 = v38 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v38);
            v39 = _CocoaArrayWrapper.endIndex.getter(v46);
            if (v39)
            {
LABEL_49:
              if (v39 >= 1)
              {
                v40 = 0;
                v41 = 0.0;
                do
                {
                  if ((v38 & 0xC000000000000001) != 0)
                    v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v40, v38);
                  else
                    v42 = *(id *)(v38 + 8 * v40 + 32);
                  v43 = v42;
                  ++v40;
                  objc_msgSend(v42, "frame");
                  v45 = v44;

                  v41 = v41 + v45;
                }
                while (v39 != v40);
LABEL_60:
                swift_bridgeObjectRelease_n(v38, 2);
                objc_msgSend(v1, "setFrame:", v34, MaxY, *(double *)&v1[v12], v41);
                v47 = objc_msgSend(v1, v14[203]);
                v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v47, v16);

                if ((unint64_t)v48 >> 62)
                {
                  if (v48 < 0)
                    v56 = v48;
                  else
                    v56 = v48 & 0xFFFFFFFFFFFFFF8;
                  swift_bridgeObjectRetain(v48);
                  v49 = _CocoaArrayWrapper.endIndex.getter(v56);
                  swift_bridgeObjectRelease(v48);
                  if (v49)
                  {
LABEL_62:
                    if (v49 >= 1)
                    {
                      v50 = 0;
                      v51 = 0.0;
                      do
                      {
                        if ((v48 & 0xC000000000000001) != 0)
                          v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v50, v48);
                        else
                          v52 = *(id *)(v48 + 8 * v50 + 32);
                        v53 = v52;
                        ++v50;
                        objc_msgSend(v52, "frame");
                        objc_msgSend(v53, "setFrame:");
                        objc_msgSend(v53, "frame");
                        v55 = v54;

                        v51 = v51 + v55;
                      }
                      while (v49 != v50);
                      goto LABEL_72;
                    }
                    goto LABEL_76;
                  }
                }
                else
                {
                  v49 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
                  if (v49)
                    goto LABEL_62;
                }
LABEL_72:
                swift_bridgeObjectRelease(v48);
                return;
              }
LABEL_75:
              __break(1u);
LABEL_76:
              __break(1u);
LABEL_77:
              __break(1u);
              return;
            }
          }
          else
          {
            v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain(v38);
            if (v39)
              goto LABEL_49;
          }
          v41 = 0.0;
          goto LABEL_60;
        }
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v18)
        goto LABEL_17;
    }
    swift_bridgeObjectRelease(v17);
    goto LABEL_31;
  }
}

id sub_100128990()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0, 0.0, 0.0, 0.5);
  qword_100484CF8 = (uint64_t)result;
  return result;
}

id sub_1001289D0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 1.0, 1.0, 1.0, 1.0);
  qword_100484D00 = (uint64_t)result;
  return result;
}

uint64_t sub_100128A10()
{
  uint64_t result;
  double v1;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  result = static UIDevice.isIPad()();
  v1 = 9.0;
  if ((result & 1) != 0)
    v1 = 12.0;
  qword_100484D08 = *(_QWORD *)&v1;
  return result;
}

id sub_100128A60(uint64_t *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;

  v2 = *a1;
  v3 = *(void **)&v1[*a1];
  if (v3)
  {
    v4 = *(id *)&v1[*a1];
  }
  else
  {
    objc_msgSend(v1, "frame");
    v9 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", v5, v6, v7, v8);
    if (qword_10047AB80 != -1)
      swift_once(&qword_10047AB80, sub_1001289D0);
    objc_msgSend(v9, "setTextColor:", qword_100484D00);
    objc_msgSend(v9, "setTextAlignment:", 0);
    v10 = (void *)objc_opt_self(UIFont);
    if (qword_10047AB88 != -1)
      swift_once(&qword_10047AB88, sub_100128A10);
    v11 = objc_msgSend(v10, "systemFontOfSize:", *(double *)&qword_100484D08);
    objc_msgSend(v9, "setFont:", v11);

    v12 = *(void **)&v1[v2];
    *(_QWORD *)&v1[v2] = v9;
    v4 = v9;

    v3 = 0;
  }
  v13 = v3;
  return v4;
}

uint64_t sub_100128BD8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  id v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  id v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)&v0[qword_100484D58];
  if (v1)
  {
    v2 = *(_QWORD *)&v0[qword_100484D58];
  }
  else
  {
    v3 = v0;
    v39 = qword_100484D58;
    v4 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
    v2 = swift_allocObject(v4, 72, 7);
    *(_OWORD *)(v2 + 16) = xmmword_1003B2960;
    objc_msgSend(v3, "frame");
    v9 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", v5, v6, v7, v8);
    if (qword_10047AB80 != -1)
      swift_once(&qword_10047AB80, sub_1001289D0);
    objc_msgSend(v9, "setTextColor:", qword_100484D00, v39);
    objc_msgSend(v9, "setTextAlignment:", 0);
    v10 = (void *)objc_opt_self(UIFont);
    if (qword_10047AB88 != -1)
      swift_once(&qword_10047AB88, sub_100128A10);
    v11 = objc_msgSend(v10, "systemFontOfSize:", *(double *)&qword_100484D08);
    objc_msgSend(v9, "setFont:", v11);

    *(_QWORD *)(v2 + 32) = v9;
    objc_msgSend(v3, "frame");
    v16 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", v12, v13, v14, v15);
    objc_msgSend(v16, "setTextColor:", qword_100484D00);
    objc_msgSend(v16, "setTextAlignment:", 0);
    v17 = objc_msgSend(v10, "systemFontOfSize:", *(double *)&qword_100484D08);
    objc_msgSend(v16, "setFont:", v17);

    *(_QWORD *)(v2 + 40) = v16;
    objc_msgSend(v3, "frame");
    v22 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", v18, v19, v20, v21);
    objc_msgSend(v22, "setTextColor:", qword_100484D00);
    objc_msgSend(v22, "setTextAlignment:", 0);
    v23 = objc_msgSend(v10, "systemFontOfSize:", *(double *)&qword_100484D08);
    objc_msgSend(v22, "setFont:", v23);

    *(_QWORD *)(v2 + 48) = v22;
    objc_msgSend(v3, "frame");
    v28 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", v24, v25, v26, v27);
    objc_msgSend(v28, "setTextColor:", qword_100484D00);
    objc_msgSend(v28, "setTextAlignment:", 0);
    v29 = objc_msgSend(v10, "systemFontOfSize:", *(double *)&qword_100484D08);
    objc_msgSend(v28, "setFont:", v29);

    *(_QWORD *)(v2 + 56) = v28;
    objc_msgSend(v3, "frame");
    v34 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", v30, v31, v32, v33);
    objc_msgSend(v34, "setTextColor:", qword_100484D00);
    objc_msgSend(v34, "setTextAlignment:", 0);
    v35 = objc_msgSend(v10, "systemFontOfSize:", *(double *)&qword_100484D08);
    objc_msgSend(v34, "setFont:", v35);

    *(_QWORD *)(v2 + 64) = v34;
    specialized Array._endMutation()(v36);
    v37 = *(_QWORD *)&v3[v40];
    *(_QWORD *)&v3[v40] = v2;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRelease(v37);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

uint64_t sub_100129048(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD, _QWORD, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD, _QWORD, __n128);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD, _QWORD, __n128);
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(_QWORD, _QWORD, __n128);
  __n128 v46;
  id v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  id v51;
  NSString v52;
  void *v53;
  uint64_t v54;
  id v55;
  id v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  NSString v63;
  double v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  id v70;
  NSString v71;
  double v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  id v78;
  NSString v79;
  double v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  NSString v87;
  char *v88;
  id v89;
  char *v90;
  id v91;
  char *v92;
  id v93;
  id v94;
  id v95;
  NSString v96;
  char *v97;
  id v98;
  char *v99;
  id v100;
  char *v101;
  id v102;
  char *v103;
  id v104;
  char *v105;
  id v106;
  id v107;
  id v108;
  NSString v109;
  id v110;
  id v111;
  id v112;
  id v113;
  NSString v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  void *v119;
  uint64_t v120;
  id v121;
  void *v122;
  uint64_t v123;
  id v124;
  void *v125;
  uint64_t v126;
  id v127;
  void *v128;
  uint64_t result;
  id v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  __int16 v134;
  unsigned int v135;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v147;
  unint64_t v148;
  char *v149;
  int v150;
  id *v151;
  void *v152;
  void *v153;
  id v154;
  id v155;
  uint64_t v156;
  id v157;
  void *v158;
  id v159;
  uint64_t v160;
  id v161;
  NSString v162;
  id v163;
  void *v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  id v170;
  id v171;
  id v172;
  void *v173;
  void *v174;
  void *v175;
  id v176;
  id v177;
  id v178;
  uint64_t v179;
  objc_super v180;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  *(_QWORD *)&v4[qword_100484D10] = 0;
  *(_QWORD *)&v4[qword_100484D18] = 0;
  *(_QWORD *)&v4[qword_100484D20] = 0;
  *(_QWORD *)&v4[qword_100484D28] = 0;
  *(_QWORD *)&v4[qword_100484D30] = 0;
  *(_QWORD *)&v4[qword_100484D38] = 0;
  *(_QWORD *)&v4[qword_100484D40] = 0;
  *(_QWORD *)&v4[qword_100484D48] = 0;
  *(_QWORD *)&v4[qword_100484D50] = 0;
  *(_QWORD *)&v4[qword_100484D58] = 0;
  *(_QWORD *)&v4[qword_100484D60] = 0;
  v10 = qword_100484D68;
  v11 = objc_allocWithZone((Class)UILabel);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "init");
  v13 = qword_100484D70;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v14 = qword_100484D78;
  *(_QWORD *)&v12[v14] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v15 = qword_100484D80;
  *(_QWORD *)&v12[v15] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v16 = &v12[qword_100484D88];
  v17 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v18 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v19 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v20 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)v16 = v17;
  *((_QWORD *)v16 + 1) = v18;
  *((_QWORD *)v16 + 2) = v19;
  *((_QWORD *)v16 + 3) = v20;
  v21 = qword_100484D90;
  *(_QWORD *)&v12[v21] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v22 = qword_100484D98;
  *(_QWORD *)&v12[v22] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v12[qword_100484DA0] = _swiftEmptyArrayStorage;
  v23 = qword_100484DA8;
  KeyPath = swift_getKeyPath(&unk_1003B7FB0);
  v25 = sub_10000EDC8((uint64_t *)&unk_100486710);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v26 = qword_1004AF890;
  v27 = *(uint64_t (**)(_QWORD, _QWORD, __n128))(v25 + 272);
  v28 = swift_retain();
  *(_QWORD *)&v12[v23] = v27(KeyPath, v26, v28);
  v29 = qword_100484DB0;
  v30 = swift_getKeyPath(&unk_1003B7FD8);
  v31 = sub_10000EDC8(&qword_100481BA0);
  v32 = qword_1004AF890;
  v33 = *(uint64_t (**)(_QWORD, _QWORD, __n128))(v31 + 272);
  v34 = swift_retain();
  *(_QWORD *)&v12[v29] = v33(v30, v32, v34);
  v35 = qword_100484DB8;
  v36 = swift_getKeyPath(&unk_1003B8000);
  v37 = sub_10000EDC8(&qword_100482F10);
  v38 = qword_1004AF890;
  v39 = *(uint64_t (**)(_QWORD, _QWORD, __n128))(v37 + 272);
  v40 = swift_retain();
  *(_QWORD *)&v12[v35] = v39(v36, v38, v40);
  v41 = qword_100484DC0;
  v42 = swift_getKeyPath(&unk_1003B8028);
  v43 = sub_10000EDC8(qword_100485760);
  v44 = qword_1004AF890;
  v45 = *(uint64_t (**)(_QWORD, _QWORD, __n128))(v43 + 272);
  v46 = swift_retain();
  *(_QWORD *)&v12[v41] = v45(v42, v44, v46);

  v180.receiver = v12;
  v180.super_class = ObjectType;
  v47 = objc_msgSendSuper2(&v180, "initWithFrame:", a1, a2, a3, a4);
  v48 = qword_10047AB78;
  v49 = (char *)v47;
  if (v48 != -1)
    swift_once(&qword_10047AB78, sub_100128990);
  objc_msgSend(v49, "setBackgroundColor:", qword_100484CF8);
  objc_msgSend(v49, "setContentMode:", 9);
  v50 = qword_100484D78;
  v51 = *(id *)&v49[qword_100484D78];
  v52 = String._bridgeToObjectiveC()();
  objc_msgSend(v51, "setText:", v52);

  v53 = *(void **)&v49[v50];
  v176 = (id)objc_opt_self(UIFont);
  v54 = qword_10047AB88;
  v55 = v53;
  if (v54 != -1)
    swift_once(&qword_10047AB88, sub_100128A10);
  v56 = objc_msgSend(v176, "systemFontOfSize:", *(double *)&qword_100484D08);
  objc_msgSend(v55, "setFont:", v56);

  v57 = *(void **)&v49[v50];
  v58 = (void *)objc_opt_self(UIColor);
  v59 = v57;
  v60 = objc_msgSend(v58, "whiteColor");
  objc_msgSend(v59, "setTextColor:", v60);

  objc_msgSend(v49, "addSubview:", *(_QWORD *)&v49[v50]);
  v61 = qword_100484D80;
  v62 = *(id *)&v49[qword_100484D80];
  v63 = String._bridgeToObjectiveC()();
  objc_msgSend(v62, "setText:", v63);

  v64 = *(double *)&qword_100484D08;
  v65 = *(id *)&v49[v61];
  v66 = objc_msgSend(v176, "systemFontOfSize:", v64);
  objc_msgSend(v65, "setFont:", v66);

  v67 = *(id *)&v49[v61];
  v68 = objc_msgSend(v58, "whiteColor");
  objc_msgSend(v67, "setTextColor:", v68);

  objc_msgSend(v49, "addSubview:", *(_QWORD *)&v49[v61]);
  v69 = qword_100484D68;
  v70 = *(id *)&v49[qword_100484D68];
  v71 = String._bridgeToObjectiveC()();
  objc_msgSend(v70, "setText:", v71);

  v72 = *(double *)&qword_100484D08;
  v73 = *(id *)&v49[v69];
  v74 = objc_msgSend(v176, "systemFontOfSize:", v72);
  objc_msgSend(v73, "setFont:", v74);

  v75 = *(id *)&v49[v69];
  v76 = objc_msgSend(v58, "whiteColor");
  objc_msgSend(v75, "setTextColor:", v76);

  objc_msgSend(v49, "addSubview:", *(_QWORD *)&v49[v69]);
  v77 = qword_100484D70;
  v78 = *(id *)&v49[qword_100484D70];
  v79 = String._bridgeToObjectiveC()();
  objc_msgSend(v78, "setText:", v79);

  v80 = *(double *)&qword_100484D08;
  v81 = *(id *)&v49[v77];
  v82 = objc_msgSend(v176, "systemFontOfSize:", v80);
  objc_msgSend(v81, "setFont:", v82);

  v83 = *(id *)&v49[v77];
  v84 = objc_msgSend(v58, "whiteColor");
  objc_msgSend(v83, "setTextColor:", v84);

  objc_msgSend(v49, "addSubview:", *(_QWORD *)&v49[v77]);
  v85 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", a1, a2, a3, a4);
  if (qword_10047AB80 != -1)
    swift_once(&qword_10047AB80, sub_1001289D0);
  objc_msgSend(v85, "setTextColor:", qword_100484D00);
  objc_msgSend(v85, "setTextAlignment:", 0);
  v86 = objc_msgSend(v176, "systemFontOfSize:", *(double *)&qword_100484D08);
  objc_msgSend(v85, "setFont:", v86);

  v87 = String._bridgeToObjectiveC()();
  objc_msgSend(v85, "setText:", v87);

  v175 = v85;
  objc_msgSend(v49, "addSubview:", v85);
  v88 = v49;
  v89 = sub_100128A60(&qword_100484D10);
  objc_msgSend(v88, "addSubview:", v89);

  v90 = v88;
  v91 = sub_100128A60(&qword_100484D18);
  objc_msgSend(v90, "addSubview:", v91);

  v92 = v90;
  v93 = sub_100128A60(&qword_100484D20);
  objc_msgSend(v92, "addSubview:", v93);

  v94 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v94, "setTextColor:", qword_100484D00);
  objc_msgSend(v94, "setTextAlignment:", 0);
  v95 = objc_msgSend(v176, "systemFontOfSize:", *(double *)&qword_100484D08);
  objc_msgSend(v94, "setFont:", v95);

  v96 = String._bridgeToObjectiveC()();
  objc_msgSend(v94, "setText:", v96);

  objc_msgSend(v92, "addSubview:", v94);
  v97 = v92;
  v98 = sub_100128A60(&qword_100484D28);
  objc_msgSend(v97, "addSubview:", v98);

  v99 = v97;
  v100 = sub_100128A60(&qword_100484D30);
  objc_msgSend(v99, "addSubview:", v100);

  v101 = v99;
  v102 = sub_100128A60(&qword_100484D40);
  objc_msgSend(v101, "addSubview:", v102);

  v103 = v101;
  v104 = sub_100128A60(&qword_100484D38);
  objc_msgSend(v103, "addSubview:", v104);

  v105 = v103;
  v106 = sub_100128A60(&qword_100484D48);
  objc_msgSend(v105, "addSubview:", v106);

  v107 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v107, "setTextColor:", qword_100484D00);
  objc_msgSend(v107, "setTextAlignment:", 0);
  v108 = objc_msgSend(v176, "systemFontOfSize:", *(double *)&qword_100484D08);
  objc_msgSend(v107, "setFont:", v108);

  v109 = String._bridgeToObjectiveC()();
  objc_msgSend(v107, "setText:", v109);

  v174 = v107;
  objc_msgSend(v105, "addSubview:", v107);
  v110 = v105;
  v111 = sub_100128A60(&qword_100484D50);
  objc_msgSend(v110, "addSubview:", v111);

  v112 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v112, "setTextColor:", qword_100484D00);
  objc_msgSend(v112, "setTextAlignment:", 0);
  v113 = objc_msgSend(v176, "systemFontOfSize:", *(double *)&qword_100484D08);
  objc_msgSend(v112, "setFont:", v113);

  v114 = String._bridgeToObjectiveC()();
  objc_msgSend(v112, "setText:", v114);

  objc_msgSend(v110, "addSubview:", v112);
  v115 = (char *)v110;
  v116 = sub_100128BD8();
  v117 = v116;
  if ((v116 & 0xC000000000000001) != 0)
  {
    v118 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v116);
  }
  else
  {
    if (!*(_QWORD *)((v116 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_48;
    }
    v118 = *(id *)(v116 + 32);
  }
  v119 = v118;
  objc_msgSend(v115, "addSubview:", v118, swift_bridgeObjectRelease(v117).n128_f64[0]);

  v115 = v115;
  v120 = sub_100128BD8();
  v117 = v120;
  if ((v120 & 0xC000000000000001) != 0)
  {
LABEL_48:
    v121 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v117);
    goto LABEL_15;
  }
  if (*(_QWORD *)((v120 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
    goto LABEL_50;
  }
  v121 = *(id *)(v120 + 40);
LABEL_15:
  v122 = v121;
  objc_msgSend(v115, "addSubview:", v121, swift_bridgeObjectRelease(v117).n128_f64[0]);

  v115 = v115;
  v123 = sub_100128BD8();
  v117 = v123;
  if ((v123 & 0xC000000000000001) != 0)
  {
LABEL_50:
    v124 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2, v117);
    goto LABEL_18;
  }
  if (*(_QWORD *)((v123 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
    __break(1u);
    goto LABEL_52;
  }
  v124 = *(id *)(v123 + 48);
LABEL_18:
  v125 = v124;
  objc_msgSend(v115, "addSubview:", v124, swift_bridgeObjectRelease(v117).n128_f64[0]);

  v115 = v115;
  v126 = sub_100128BD8();
  v117 = v126;
  if ((v126 & 0xC000000000000001) != 0)
  {
LABEL_52:
    v127 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(3, v117);
    goto LABEL_21;
  }
  if (*(_QWORD *)((v126 & 0xFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
    __break(1u);
    goto LABEL_54;
  }
  v127 = *(id *)(v126 + 56);
LABEL_21:
  v128 = v127;
  objc_msgSend(v115, "addSubview:", v127, swift_bridgeObjectRelease(v117).n128_f64[0]);

  v115 = v115;
  result = sub_100128BD8();
  v117 = result;
  v173 = v112;
  if ((result & 0xC000000000000001) != 0)
  {
LABEL_54:
    v130 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(4, v117);
    goto LABEL_24;
  }
  if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) < 5uLL)
  {
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v130 = *(id *)(result + 64);
LABEL_24:
  v131 = v130;
  objc_msgSend(v115, "addSubview:", v130, swift_bridgeObjectRelease(v117).n128_f64[0]);

  sub_100128400();
  v177 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v171 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v169 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v167 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v132 = 0;
  v133 = qword_100484DA0;
  v134 = 0;
  do
  {
    v135 = v132 + 128512;
    if ((v132 + 128512) >> 16 > 0x10 || (((_DWORD)v132 + 128512) & 0xFFFFF800) == 55296)
    {
      v137 = 46;
    }
    else
    {
      v138 = v134 & 0x3F00;
      if (v135 >= 0x800)
      {
        v150 = (v138 | (v135 >> 6) & 0x3F) << 8;
        if ((v132 + 128512) >> 16)
        {
          v139 = ((v150 | (v135 >> 12) & 0x3F) << 8) | (v135 >> 18);
          v140 = -2122219023;
        }
        else
        {
          v139 = v150 | (v135 >> 12);
          v140 = 8487393;
        }
      }
      else
      {
        v139 = v138 | (v135 >> 6);
        v140 = 33217;
      }
      v137 = v139 + v140;
    }
    v141 = __clz(v137);
    v179 = (v137 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (v141 >> 3))));
    v142 = static String._uncheckedFromUTF8(_:)(&v179, 4 - (v141 >> 3));
    v144 = v143;
    v145 = *(char **)&v115[v133];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v145);
    *(_QWORD *)&v115[v133] = v145;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v145 = sub_10005F9C4(0, *((_QWORD *)v145 + 2) + 1, 1, v145);
      *(_QWORD *)&v115[v133] = v145;
    }
    v148 = *((_QWORD *)v145 + 2);
    v147 = *((_QWORD *)v145 + 3);
    if (v148 >= v147 >> 1)
    {
      v145 = sub_10005F9C4((char *)(v147 > 1), v148 + 1, 1, v145);
      *(_QWORD *)&v115[v133] = v145;
    }
    *((_QWORD *)v145 + 2) = v148 + 1;
    v149 = &v145[16 * v148];
    *((_QWORD *)v149 + 4) = v142;
    *((_QWORD *)v149 + 5) = v144;
    ++v132;
    v134 += 256;
  }
  while (v132 != 80);
  v151 = (id *)&v115[qword_100484D88];
  v152 = *(void **)&v115[qword_100484D88];
  v153 = *(void **)&v115[qword_100484D88 + 8];
  *v151 = v177;
  v151[1] = v171;
  v154 = v151[2];
  v155 = v151[3];
  v151[2] = v169;
  v151[3] = v167;
  v178 = v177;
  v172 = v171;
  v170 = v169;
  v168 = v167;

  objc_msgSend(*v151, "setFrame:", 0.0, 0.0, 100.0, 100.0);
  objc_msgSend(v151[1], "setFrame:", 0.0, 0.0, 100.0, 100.0);
  objc_msgSend(v151[2], "setFrame:", 0.0, 0.0, 100.0, 100.0);
  objc_msgSend(v151[3], "setFrame:", 0.0, 0.0, 100.0, 100.0);
  objc_msgSend(*v151, "setTextAlignment:", 1);
  objc_msgSend(v151[1], "setTextAlignment:", 1);
  objc_msgSend(v151[2], "setTextAlignment:", 1);
  objc_msgSend(v151[3], "setTextAlignment:", 1);
  v156 = qword_100484D90;
  v157 = *(id *)&v115[qword_100484D90];
  result = (uint64_t)objc_msgSend(v157, "font");
  if (!result)
    goto LABEL_56;
  v158 = (void *)result;
  v159 = objc_msgSend((id)result, "fontWithSize:", 80.0);

  objc_msgSend(v157, "setFont:", v159);
  objc_msgSend(*(id *)&v115[v156], "setFrame:", 0.0, 0.0, 100.0, 100.0);
  objc_msgSend(*(id *)&v115[v156], "setTextAlignment:", 1);
  v160 = qword_100484D98;
  v161 = *(id *)&v115[qword_100484D98];
  v162 = String._bridgeToObjectiveC()();
  objc_msgSend(v161, "setText:", v162);

  v163 = *(id *)&v115[v160];
  result = (uint64_t)objc_msgSend(v163, "font");
  if (result)
  {
    v164 = (void *)result;
    v165 = objc_msgSend((id)result, "fontWithSize:", 80.0);

    objc_msgSend(v163, "setFont:", v165);
    objc_msgSend(*(id *)&v115[v160], "setFrame:", 0.0, 0.0, 100.0, 100.0);
    v166 = *(id *)&v115[v160];
    objc_msgSend(v166, "setTextAlignment:", 1);

    return (uint64_t)v115;
  }
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_10012A40C(double a1, double a2, double a3, double a4)
{
  return sub_100129048(a1, a2, a3, a4);
}

void sub_10012A42C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_10012AAE0();
}

void sub_10012A450(void *a1)
{
  id v1;

  v1 = a1;
  sub_100128400();

}

uint64_t sub_10012A484()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100484D58));
  v1 = *(void **)(v0 + qword_100484D88);
  v2 = *(void **)(v0 + qword_100484D88 + 8);
  v3 = *(void **)(v0 + qword_100484D88 + 16);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100484DA0));
  swift_release(*(_QWORD *)(v0 + qword_100484DA8));
  swift_release(*(_QWORD *)(v0 + qword_100484DB0));
  swift_release(*(_QWORD *)(v0 + qword_100484DB8));
  return swift_release(*(_QWORD *)(v0 + qword_100484DC0));
}

uint64_t sub_10012A614(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100484D58));
  v2 = *(void **)(a1 + qword_100484D88);
  v3 = *(void **)(a1 + qword_100484D88 + 8);
  v4 = *(void **)(a1 + qword_100484D88 + 16);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100484DA0));
  swift_release(*(_QWORD *)(a1 + qword_100484DA8));
  swift_release(*(_QWORD *)(a1 + qword_100484DB0));
  swift_release(*(_QWORD *)(a1 + qword_100484DB8));
  return swift_release(*(_QWORD *)(a1 + qword_100484DC0));
}

uint64_t type metadata accessor for PersonHeightDebugStatsView(uint64_t a1)
{
  uint64_t result;

  result = qword_100484DF0;
  if (!qword_100484DF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PersonHeightDebugStatsView);
  return result;
}

uint64_t sub_10012A7E4(uint64_t a1)
{
  _QWORD v2[23];

  v2[0] = "\b";
  v2[1] = "\b";
  v2[2] = "\b";
  v2[3] = "\b";
  v2[4] = "\b";
  v2[5] = "\b";
  v2[6] = "\b";
  v2[7] = "\b";
  v2[8] = "\b";
  v2[9] = "\b";
  v2[10] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[15] = &unk_1003B7F98;
  v2[16] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[17] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[18] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[19] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[20] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[21] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[22] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 256, 23, v2, a1 + 184);
}

uint64_t sub_10012A888()
{
  return type metadata accessor for PersonHeightDebugStatsView(0);
}

void sub_10012A890(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  char *v18;
  id *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v38;

  v26 = (id *)&v18[qword_100484D88];
  v27 = objc_msgSend(*(id *)&v18[qword_100484D88], "superview");

  if (v27)
  {
    objc_msgSend(*v26, "setCenter:", a1, a2);
    objc_msgSend(v26[1], "setCenter:", a3, a4);
    objc_msgSend(v26[2], "setCenter:", a5, a6);
    objc_msgSend(v26[3], "setCenter:", a7, a8);
    objc_msgSend(*(id *)&v18[qword_100484D98], "setCenter:", a9, a10);
  }
  else
  {
    v28 = objc_msgSend(v18, "superview");
    if (v28)
    {
      v29 = v28;
      objc_msgSend(v28, "addSubview:", *v26);

    }
    v30 = objc_msgSend(v18, "superview");
    if (v30)
    {
      v31 = v30;
      objc_msgSend(v30, "addSubview:", v26[1]);

    }
    v32 = objc_msgSend(v18, "superview");
    if (v32)
    {
      v33 = v32;
      objc_msgSend(v32, "addSubview:", v26[2]);

    }
    v34 = objc_msgSend(v18, "superview");
    if (v34)
    {
      v35 = v34;
      objc_msgSend(v34, "addSubview:", v26[3]);

    }
    v36 = objc_msgSend(v18, "superview");
    if (v36)
    {
      v38 = v36;
      objc_msgSend(v36, "addSubview:", *(_QWORD *)&v18[qword_100484D98]);

    }
  }
}

void sub_10012AAE0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, __n128);
  __n128 v36;

  v1 = v0;
  *(_QWORD *)&v0[qword_100484D10] = 0;
  *(_QWORD *)&v0[qword_100484D18] = 0;
  *(_QWORD *)&v0[qword_100484D20] = 0;
  *(_QWORD *)&v0[qword_100484D28] = 0;
  *(_QWORD *)&v0[qword_100484D30] = 0;
  *(_QWORD *)&v0[qword_100484D38] = 0;
  *(_QWORD *)&v0[qword_100484D40] = 0;
  *(_QWORD *)&v0[qword_100484D48] = 0;
  *(_QWORD *)&v0[qword_100484D50] = 0;
  *(_QWORD *)&v0[qword_100484D58] = 0;
  *(_QWORD *)&v0[qword_100484D60] = 0;
  v2 = qword_100484D68;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v3 = qword_100484D70;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v4 = qword_100484D78;
  *(_QWORD *)&v1[v4] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = qword_100484D80;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v6 = &v1[qword_100484D88];
  v7 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v9 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v10 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)v6 = v7;
  *((_QWORD *)v6 + 1) = v8;
  *((_QWORD *)v6 + 2) = v9;
  *((_QWORD *)v6 + 3) = v10;
  v11 = qword_100484D90;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v12 = qword_100484D98;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v1[qword_100484DA0] = _swiftEmptyArrayStorage;
  v13 = qword_100484DA8;
  KeyPath = swift_getKeyPath(&unk_1003B7FB0);
  v15 = sub_10000EDC8((uint64_t *)&unk_100486710);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v16 = qword_1004AF890;
  v17 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v15 + 272);
  v18 = swift_retain();
  *(_QWORD *)&v1[v13] = v17(KeyPath, v16, v18);
  v19 = qword_100484DB0;
  v20 = swift_getKeyPath(&unk_1003B7FD8);
  v21 = sub_10000EDC8(&qword_100481BA0);
  v22 = qword_1004AF890;
  v23 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v21 + 272);
  v24 = swift_retain();
  *(_QWORD *)&v1[v19] = v23(v20, v22, v24);
  v25 = qword_100484DB8;
  v26 = swift_getKeyPath(&unk_1003B8000);
  v27 = sub_10000EDC8(&qword_100482F10);
  v28 = qword_1004AF890;
  v29 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v27 + 272);
  v30 = swift_retain();
  *(_QWORD *)&v1[v25] = v29(v26, v28, v30);
  v31 = qword_100484DC0;
  v32 = swift_getKeyPath(&unk_1003B8028);
  v33 = sub_10000EDC8(qword_100485760);
  v34 = qword_1004AF890;
  v35 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v33 + 272);
  v36 = swift_retain();
  *(_QWORD *)&v1[v31] = v35(v32, v34, v36);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003D8190, "Measure/PersonHeightDebugStatsView.swift", 40, 2, 156, 0);
  __break(1u);
}

unint64_t sub_10012AE60()
{
  unint64_t result;

  result = qword_100484FA0;
  if (!qword_100484FA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_100484FA0);
  }
  return result;
}

id sub_10012AEA4()
{
  char *v0;
  objc_class *ObjectType;
  Swift::Int32 v2;
  Swift::String v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v2 = CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)&v0[OBJC_IVAR____TtC7Measure25OpenCVWrapperCVBufferLock_buffer], *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure25OpenCVWrapperCVBufferLock_lockFlags]);
  v3._object = (void *)0x80000001003E0FB0;
  v3._countAndFlagsBits = 0xD00000000000001ELL;
  logCVError(_:label:)(v2, v3);
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, "dealloc");
}

id OpenCVWrapperContourIterator.endIndex.getter(void *a1, uint64_t a2)
{
  return objc_msgSend(a1, "getPointCountAtContourIndex:", a2);
}

id OpenCVWrapperContourIterator.subscript.getter(uint64_t a1, id a2, uint64_t a3)
{
  return objc_msgSend(a2, "getPointAtContourIndex:pointIndex:", a3, a1);
}

Swift::Int __swiftcall OpenCVWrapperCorners.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

id sub_10012B028(int64_t a1, uint64_t a2, int64_t a3, id a4, uint64_t a5)
{
  id result;
  uint64_t v11;
  int64_t v12;
  BOOL v13;

  result = objc_msgSend(a4, "getPointCountAtContourIndex:", a5);
  if (a1 < 0 || (uint64_t)result < a1)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = objc_msgSend(a4, "getPointCountAtContourIndex:", a5);
  if (a3 < 0 || (uint64_t)result < a3)
    goto LABEL_17;
  v11 = a3 - a1;
  if (a2 >= 1)
  {
    if (v11 < 0 || v11 >= a2)
      goto LABEL_12;
    return 0;
  }
  if (v11 <= 0 && v11 > a2)
    return 0;
LABEL_12:
  v13 = __OFADD__(a1, a2);
  v12 = a1 + a2;
  if (v13)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  result = objc_msgSend(a4, "getPointCountAtContourIndex:", a5);
  if ((v12 & 0x8000000000000000) == 0 && (uint64_t)result >= v12)
    return (id)v12;
LABEL_19:
  __break(1u);
  return result;
}

id sub_10012B114(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v4;
  id result;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;

  result = objc_msgSend(v4, *a4);
  if (a1 < 0 || (uint64_t)result < a1)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = objc_msgSend(v4, *a4);
  if (a3 < 0 || (uint64_t)result < a3)
    goto LABEL_17;
  v10 = a3 - a1;
  if (a2 >= 1)
  {
    if (v10 < 0 || v10 >= a2)
      goto LABEL_12;
    return 0;
  }
  if (v10 <= 0 && v10 > a2)
    return 0;
LABEL_12:
  v12 = __OFADD__(a1, a2);
  v11 = a1 + a2;
  if (v12)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  result = objc_msgSend(v4, *a4);
  if ((v11 & 0x8000000000000000) == 0 && (uint64_t)result >= v11)
    return (id)v11;
LABEL_19:
  __break(1u);
  return result;
}

_QWORD *sub_10012B1F0@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    result = objc_msgSend(*(id *)v2, "getPointCountAtContourIndex:", *(_QWORD *)(v2 + 8));
    if ((v4 & 0x8000000000000000) == 0 && v4 < (uint64_t)result)
    {
      *a2 = v4;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_10012B248(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  v2 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    result = (uint64_t *)objc_msgSend(*(id *)v1, "getPointCountAtContourIndex:", *(_QWORD *)(v1 + 8));
    if ((v2 & 0x8000000000000000) == 0 && v2 < (uint64_t)result)
    {
      *v3 = v2;
      return result;
    }
  }
  __break(1u);
  return result;
}

id sub_10012B2A0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)v1, "getPointCountAtContourIndex:", *(_QWORD *)(v1 + 8));
  *a1 = result;
  return result;
}

uint64_t (*sub_10012B2D0(_QWORD *a1, _QWORD *a2))()
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  objc_msgSend(*(id *)v2, "getPointAtContourIndex:pointIndex:", *(_QWORD *)(v2 + 8), *a2);
  *a1 = v4;
  a1[1] = v5;
  return nullsub_1;
}

uint64_t sub_10012B310@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t result;
  id v9;

  v5 = *a1;
  v4 = a1[1];
  v6 = *(void **)v2;
  v7 = *(_QWORD *)(v2 + 8);
  v9 = v6;
  result = (uint64_t)objc_msgSend(v6, "getPointCountAtContourIndex:", v7);
  if (result < 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v5 < 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (result >= v4)
  {
    *a2 = v5;
    a2[1] = v4;
    a2[2] = v9;
    a2[3] = v7;
    return (uint64_t)v9;
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_10012B380@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = (unint64_t)objc_msgSend(*(id *)v1, "getPointCountAtContourIndex:", *(_QWORD *)(v1 + 8));
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = 0;
    a1[1] = result;
  }
  return result;
}

BOOL sub_10012B3B8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)v0, "getPointCountAtContourIndex:", *(_QWORD *)(v0 + 8)) == 0;
}

void sub_10012B3E4(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

_QWORD *sub_10012B3F4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v5 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
  }
  else
  {
    result = objc_msgSend(*(id *)v3, "getPointCountAtContourIndex:", *(_QWORD *)(v3 + 8));
    if ((v5 & 0x8000000000000000) == 0 && (uint64_t)result >= v5)
    {
      *a3 = v5;
      return result;
    }
  }
  __break(1u);
  return result;
}

id sub_10012B44C@<X0>(int64_t *a1@<X0>, uint64_t a2@<X1>, int64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  id result;
  char v7;

  result = sub_10012B028(*a1, a2, *a3, *(id *)v4, *(_QWORD *)(v4 + 8));
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v7 & 1;
  return result;
}

id sub_10012B484(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id result;

  v3 = *a1;
  v4 = *a2;
  v6 = *(id *)v2;
  v5 = *(_QWORD *)(v2 + 8);
  result = objc_msgSend(*(id *)v2, "getPointCountAtContourIndex:", v5);
  if (v3 < 0 || (uint64_t)result < v3)
  {
    __break(1u);
  }
  else
  {
    result = objc_msgSend(v6, "getPointCountAtContourIndex:", v5);
    if ((v4 & 0x8000000000000000) == 0 && (uint64_t)result >= v4)
      return (id)(v4 - v3);
  }
  __break(1u);
  return result;
}

uint64_t *sub_10012B500(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = *result;
  v3 = a2[1];
  if (*result >= *a2)
  {
    v5 = __OFSUB__(v2, v3);
    v4 = v2 - v3 < 0;
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  if (v4 == v5)
    __break(1u);
  return result;
}

_QWORD *sub_10012B51C(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < *result)
    __break(1u);
  return result;
}

_QWORD *sub_10012B538(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < result[1])
    __break(1u);
  return result;
}

_QWORD *sub_10012B554@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    *a2 = *result + 1;
  return result;
}

_QWORD *sub_10012B56C(_QWORD *result)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    ++*result;
  return result;
}

void sub_10012B584(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = 0;
}

int64_t sub_10012B594()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  int64_t v3;
  int64_t result;

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = (int64_t)objc_msgSend(v2, "getPointCountAtContourIndex:", v1);
  result = (int64_t)objc_msgSend(v2, "getPointCountAtContourIndex:", v1);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    result = (int64_t)objc_msgSend(v2, "getPointCountAtContourIndex:", v1);
    if ((v3 & 0x8000000000000000) == 0 && result >= v3)
      return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012B60C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)v0;
  v2 = sub_10006B770(*(void **)v0, *(_QWORD *)(v0 + 8));

  return v2;
}

_QWORD *sub_10012B63C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10006ACD0(a1, a2, a3, *(id *)v3, *(_QWORD *)(v3 + 8));
}

uint64_t sub_10012B644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)(a1, a2, a4, a3);
}

id OpenCVWrapperContours.endIndex.getter()
{
  void *v0;

  return objc_msgSend(v0, "getContourCount");
}

void *OpenCVWrapperContours.subscript.getter()
{
  void *v0;
  id v1;

  v1 = v0;
  return v0;
}

_QWORD *sub_10012B69C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_10012C234(a1, a2, (SEL *)&selRef_getContourCount, a3);
}

id sub_10012B6A8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_10012B6D8(a1, a2, a3, (SEL *)&selRef_getContourCount, a4);
}

id sub_10012B6B4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10012C288(a1, a2, a3, a4, (SEL *)&selRef_getContourCount);
}

_QWORD *sub_10012B6C0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10012BFE4(a1, (SEL *)&selRef_getContourCount, a2);
}

uint64_t *sub_10012B6CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10012C044(a1, a2, a3, (SEL *)&selRef_getContourCount);
}

id sub_10012B6D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, SEL *a4@<X5>, uint64_t a5@<X8>)
{
  id result;
  char v7;

  result = sub_10012B114(*a1, a2, *a3, a4);
  *(_QWORD *)a5 = result;
  *(_BYTE *)(a5 + 8) = v7 & 1;
  return result;
}

id sub_10012B714@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, "getContourCount");
  *a1 = result;
  return result;
}

uint64_t (*sub_10012B744(_QWORD *a1, uint64_t *a2))()
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *a2;
  *a1 = *v2;
  a1[1] = v3;
  return nullsub_1;
}

uint64_t sub_10012B764@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10012C18C(a1, (SEL *)&selRef_getContourCount, a2);
}

unint64_t sub_10012B770@<X0>(_QWORD *a1@<X8>)
{
  return sub_10012C200((SEL *)&selRef_getContourCount, a1);
}

uint64_t sub_10012B790(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for OpenCVWrapperContours, a1);
  return Collection.underestimatedCount.getter(a1, WitnessTable);
}

uint64_t sub_10012B7C4()
{
  void **v0;
  void *v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_10006B974(*v0);

  return v2;
}

_QWORD *sub_10012B7F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_10006AF90(a1, a2, a3);
}

uint64_t sub_10012B814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100018148(0, (unint64_t *)&qword_10047F198, off_10043AA18);
  return Sequence.withContiguousStorageIfAvailable<A>(_:)(a1, a2, v6, a3);
}

id OpenCVWrapperCorners.endIndex.getter()
{
  void *v0;

  return objc_msgSend(v0, "getCornerCount");
}

double OpenCVWrapperCorners.subscript.getter(uint64_t a1)
{
  void *v1;
  double v3;

  objc_msgSend(v1, "getCornerAtIndex:", a1);
  return v3;
}

unint64_t sub_10012B8D8()
{
  unint64_t result;

  result = qword_100484FA8;
  if (!qword_100484FA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenCVWrapperContourIterator, &type metadata for OpenCVWrapperContourIterator);
    atomic_store(result, (unint64_t *)&qword_100484FA8);
  }
  return result;
}

uint64_t sub_10012B91C()
{
  return sub_10012BB6C(&qword_100484FB0, (uint64_t)&protocol conformance descriptor for <> Range<A>);
}

unint64_t sub_10012B940()
{
  unint64_t result;

  result = qword_100484FC0;
  if (!qword_100484FC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_100484FC0);
  }
  return result;
}

uint64_t sub_10012B984()
{
  return sub_10012BA8C(&qword_100484FC8, (void (*)(void))sub_10012B9B0, (uint64_t)&protocol conformance descriptor for <> Slice<A>);
}

unint64_t sub_10012B9B0()
{
  unint64_t result;

  result = qword_100484FD8;
  if (!qword_100484FD8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenCVWrapperContourIterator, &type metadata for OpenCVWrapperContourIterator);
    atomic_store(result, (unint64_t *)&qword_100484FD8);
  }
  return result;
}

unint64_t sub_10012B9F8()
{
  unint64_t result;

  result = qword_100484FE0;
  if (!qword_100484FE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenCVWrapperContourIterator, &type metadata for OpenCVWrapperContourIterator);
    atomic_store(result, (unint64_t *)&qword_100484FE0);
  }
  return result;
}

uint64_t sub_10012BA3C()
{
  return sub_10012BB6C(&qword_100484FE8, (uint64_t)&protocol conformance descriptor for <> Range<A>);
}

uint64_t sub_10012BA60()
{
  return sub_10012BA8C(&qword_100484FF0, (void (*)(void))sub_10012B8D8, (uint64_t)&protocol conformance descriptor for <> Slice<A>);
}

uint64_t sub_10012BA8C(unint64_t *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100012B80(&qword_100484FD0);
    a2();
    result = swift_getWitnessTable(a3, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10012BAF8()
{
  unint64_t result;

  result = qword_100484FF8;
  if (!qword_100484FF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenCVWrapperContourIterator, &type metadata for OpenCVWrapperContourIterator);
    atomic_store(result, (unint64_t *)&qword_100484FF8);
  }
  return result;
}

void *sub_10012BB3C()
{
  return &protocol witness table for Int;
}

uint64_t sub_10012BB48()
{
  return sub_10012BB6C(&qword_100485000, (uint64_t)&protocol conformance descriptor for <> Range<A>);
}

uint64_t sub_10012BB6C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100012B80(&qword_100484FB8);
    sub_10012B940();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012BBD8()
{
  return sub_100043310(&qword_100485008, &qword_100484FD0, (uint64_t)&protocol conformance descriptor for Slice<A>);
}

uint64_t sub_10012BC04()
{
  return sub_100043310(&qword_100485010, &qword_100485018, (uint64_t)&protocol conformance descriptor for IndexingIterator<A>);
}

uint64_t sub_10012BC30()
{
  return sub_10012BC98(&qword_100485020, (unint64_t *)&qword_10047F198, off_10043AA18, (uint64_t)&protocol conformance descriptor for OpenCVWrapperContours);
}

uint64_t sub_10012BC64()
{
  return sub_10012BD40(&qword_100485028, &qword_100485038, (uint64_t)&protocol conformance descriptor for OpenCVWrapperContours, (uint64_t)&protocol conformance descriptor for <> Slice<A>);
}

uint64_t sub_10012BC98(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100018148(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012BCD8()
{
  return sub_10012BC98((unint64_t *)&qword_10047F1A0, (unint64_t *)&qword_10047F198, off_10043AA18, (uint64_t)&protocol conformance descriptor for OpenCVWrapperContours);
}

uint64_t sub_10012BD0C()
{
  return sub_10012BD40(&qword_100485040, &qword_100485020, (uint64_t)&protocol conformance descriptor for OpenCVWrapperContours, (uint64_t)&protocol conformance descriptor for <> Slice<A>);
}

uint64_t sub_10012BD40(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_100012B80(&qword_100485030);
    sub_10012BC98(a2, (unint64_t *)&qword_10047F198, off_10043AA18, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012BDCC()
{
  return sub_10012BC98(&qword_100485048, (unint64_t *)&qword_10047F198, off_10043AA18, (uint64_t)&protocol conformance descriptor for OpenCVWrapperContours);
}

uint64_t sub_10012BE00()
{
  return sub_100043310(&qword_100485050, &qword_100485030, (uint64_t)&protocol conformance descriptor for Slice<A>);
}

uint64_t sub_10012BE2C()
{
  return sub_100043310(&qword_100485058, &qword_100485060, (uint64_t)&protocol conformance descriptor for IndexingIterator<A>);
}

uint64_t sub_10012BE58()
{
  return sub_10012BC98(&qword_100485068, &qword_100485070, &off_10043AA20, (uint64_t)&protocol conformance descriptor for OpenCVWrapperCorners);
}

uint64_t sub_10012BE8C()
{
  return sub_10012BEC0(&qword_100485078, &qword_100485088, (uint64_t)&protocol conformance descriptor for OpenCVWrapperCorners, (uint64_t)&protocol conformance descriptor for <> Slice<A>);
}

uint64_t sub_10012BEC0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_100012B80(&qword_100485080);
    sub_10012BC98(a2, &qword_100485070, &off_10043AA20, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_10012BF4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_10012C234(a1, a2, (SEL *)&selRef_getCornerCount, a3);
}

id sub_10012BF58@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_10012B6D8(a1, a2, a3, (SEL *)&selRef_getCornerCount, a4);
}

id sub_10012BF64(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10012C288(a1, a2, a3, a4, (SEL *)&selRef_getCornerCount);
}

uint64_t sub_10012BF70()
{
  return sub_10012BC98(&qword_100485090, &qword_100485070, &off_10043AA20, (uint64_t)&protocol conformance descriptor for OpenCVWrapperCorners);
}

uint64_t sub_10012BFA4()
{
  return sub_10012BEC0(&qword_100485098, &qword_100485068, (uint64_t)&protocol conformance descriptor for OpenCVWrapperCorners, (uint64_t)&protocol conformance descriptor for <> Slice<A>);
}

_QWORD *sub_10012BFD8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10012BFE4(a1, (SEL *)&selRef_getCornerCount, a2);
}

_QWORD *sub_10012BFE4@<X0>(_QWORD *result@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id *v3;
  uint64_t v5;

  v5 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    result = objc_msgSend(*v3, *a2);
    if ((v5 & 0x8000000000000000) == 0 && v5 < (uint64_t)result)
    {
      *a3 = v5;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_10012C038(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10012C044(a1, a2, a3, (SEL *)&selRef_getCornerCount);
}

uint64_t *sub_10012C044(uint64_t *result, uint64_t a2, uint64_t a3, SEL *a4)
{
  id *v4;
  uint64_t v5;
  uint64_t *v6;

  v5 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    v6 = result;
    result = (uint64_t *)objc_msgSend(*v4, *a4);
    if ((v5 & 0x8000000000000000) == 0 && v5 < (uint64_t)result)
    {
      *v6 = v5;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10012C098()
{
  return sub_10012BC98(&qword_1004850A0, &qword_100485070, &off_10043AA20, (uint64_t)&protocol conformance descriptor for OpenCVWrapperCorners);
}

uint64_t sub_10012C0CC()
{
  return sub_100043310(&qword_1004850A8, &qword_100485080, (uint64_t)&protocol conformance descriptor for Slice<A>);
}

id sub_10012C0F8@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, "getCornerCount");
  *a1 = result;
  return result;
}

uint64_t (*sub_10012C128(uint64_t a1, _QWORD *a2))()
{
  id *v2;
  int v4;
  __int128 v6;
  int v7;

  objc_msgSend(*v2, "getCornerAtIndex:", *a2);
  v4 = v7;
  *(_OWORD *)a1 = v6;
  *(_DWORD *)(a1 + 16) = v4;
  return nullsub_1;
}

uint64_t sub_10012C180@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10012C18C(a1, (SEL *)&selRef_getCornerCount, a2);
}

uint64_t sub_10012C18C@<X0>(uint64_t *a1@<X0>, SEL *a2@<X3>, _QWORD *a3@<X8>)
{
  id *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  id v8;

  v6 = *a1;
  v5 = a1[1];
  v8 = *v3;
  result = (uint64_t)objc_msgSend(*v3, *a2);
  if (result < 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v6 < 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (result >= v5)
  {
    *a3 = v6;
    a3[1] = v5;
    a3[2] = v8;
    return (uint64_t)v8;
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_10012C1F4@<X0>(_QWORD *a1@<X8>)
{
  return sub_10012C200((SEL *)&selRef_getCornerCount, a1);
}

unint64_t sub_10012C200@<X0>(SEL *a1@<X2>, _QWORD *a2@<X8>)
{
  id *v2;
  unint64_t result;

  result = (unint64_t)objc_msgSend(*v2, *a1);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *a2 = 0;
    a2[1] = result;
  }
  return result;
}

_QWORD *sub_10012C234@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, SEL *a3@<X4>, uint64_t *a4@<X8>)
{
  id *v4;
  uint64_t v6;

  v6 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
  }
  else
  {
    result = objc_msgSend(*v4, *a3);
    if ((v6 & 0x8000000000000000) == 0 && (uint64_t)result >= v6)
    {
      *a4 = v6;
      return result;
    }
  }
  __break(1u);
  return result;
}

id sub_10012C288(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void **v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id result;

  v7 = *a1;
  v8 = *a2;
  v9 = *v5;
  result = objc_msgSend(v9, *a5);
  if (v7 < 0 || (uint64_t)result < v7)
  {
    __break(1u);
  }
  else
  {
    result = objc_msgSend(v9, *a5);
    if ((v8 & 0x8000000000000000) == 0 && (uint64_t)result >= v8)
      return (id)(v8 - v7);
  }
  __break(1u);
  return result;
}

uint64_t sub_10012C2F4()
{
  return sub_100043310(&qword_1004850B0, &qword_1004850B8, (uint64_t)&protocol conformance descriptor for IndexingIterator<A>);
}

void sub_10012C320(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_10012C32C(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for OpenCVWrapperCorners, a1);
  return Collection.underestimatedCount.getter(a1, WitnessTable);
}

uint64_t sub_10012C360()
{
  void **v0;
  void *v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_10006B878(*v0);

  return v2;
}

_QWORD *sub_10012C390(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10006AE2C(a1, a2, a3);
}

uint64_t sub_10012C3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100018148(0, &qword_100485070, &off_10043AA20);
  return Sequence.withContiguousStorageIfAvailable<A>(_:)(a1, a2, v6, a3);
}

uint64_t type metadata accessor for OpenCVWrapperCVBufferLock()
{
  return objc_opt_self(_TtC7Measure25OpenCVWrapperCVBufferLock);
}

_QWORD *initializeBufferWithCopyOfBuffer for OpenCVWrapperContourIterator(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for OpenCVWrapperContourIterator(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for OpenCVWrapperContourIterator(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for OpenCVWrapperContourIterator()
{
  return &type metadata for OpenCVWrapperContourIterator;
}

uint64_t sub_10012C520(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t v11;
  Class isa;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  uint64_t v21;
  CGRect v22;

  v3 = v2;
  v5 = type metadata accessor for IndexPath(0, a2);
  v6 = *(_QWORD *)(v5 - 8);
  result = __chkstk_darwin();
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
    __break(1u);
  }
  else if (a1)
  {
    result = 0;
    v10 = 0.0;
    do
    {
      v11 = result + 1;
      IndexPath.init(row:section:)();
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      objc_msgSend(v3, "rectForRowAtIndexPath:", isa);
      v14 = v13;
      v16 = v15;
      v18 = v17;
      v20 = v19;

      v22.origin.x = v14;
      v22.origin.y = v16;
      v22.size.width = v18;
      v22.size.height = v20;
      v10 = v10 + CGRectGetHeight(v22);
      result = v11;
    }
    while (a1 != v11);
  }
  return result;
}

uint64_t sub_10012C64C(unint64_t a1)
{
  char v2;
  unsigned int v3;

  sub_10000F0D8();
  v2 = static UIDevice.isIPad()();
  v3 = (0x1Au >> a1) & 1;
  if (a1 > 4)
    v3 = 0;
  if ((v2 & 1) != 0)
    return a1 - 1 < 4;
  else
    return v3;
}

uint64_t sub_10012C6A0()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  NSString *v5;
  NSString *v6;
  unint64_t v7;
  Class isa;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v16;
  _BYTE v17[72];

  v1 = objc_msgSend(v0, "length");
  v2 = sub_10000EDC8((uint64_t *)&unk_100486340);
  inited = swift_initStackObject(v2, v17);
  *(_OWORD *)(inited + 16) = xmmword_1003B0BD0;
  *(_QWORD *)(inited + 32) = NSDocumentTypeDocumentAttribute;
  type metadata accessor for DocumentType(0);
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 40) = NSRTFTextDocumentType;
  v5 = NSDocumentTypeDocumentAttribute;
  v6 = NSRTFTextDocumentType;
  v7 = sub_1000C797C(inited);
  type metadata accessor for DocumentAttributeKey(0);
  sub_10012C834();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v16 = 0;
  v9 = objc_msgSend(v0, "dataFromRange:documentAttributes:error:", 0, v1, isa, &v16, swift_bridgeObjectRelease(v7).n128_f64[0]);

  v10 = v16;
  if (v9)
  {
    v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v9);

  }
  else
  {
    v12 = v10;
    v13 = _convertNSErrorToError(_:)(v10);

    swift_willThrow(v14);
    swift_errorRelease(v13);
    return 0;
  }
  return v11;
}

unint64_t sub_10012C834()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10047B5E0;
  if (!qword_10047B5E0)
  {
    type metadata accessor for DocumentAttributeKey(255);
    result = swift_getWitnessTable(&unk_1003B0628, v1);
    atomic_store(result, (unint64_t *)&qword_10047B5E0);
  }
  return result;
}

uint64_t type metadata accessor for PerformanceTestRunner()
{
  return objc_opt_self(_TtC7Measure21PerformanceTestRunner);
}

void sub_10012C89C(char a1, void *a2)
{
  uint64_t v2;
  unint64_t v5;
  unint64_t v6;
  NSString v7;
  void *v8;
  id v9;
  char v10;
  uint64_t v11;
  id v12;

  v5 = 0xEB000000006C6576;
  if ((a1 & 1) != 0)
    v6 = 0xEB000000006C6576;
  else
    v6 = 0xED00006572757361;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  objc_msgSend(a2, "startedTest:", v7);

  if ((a1 & 1) == 0)
  {
    v5 = 0xED00006572757361;
LABEL_11:
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    objc_msgSend(a2, "finishedTest:", v12);

    return;
  }
  v8 = *(void **)(*(_QWORD *)(v2 + 16) + 104);
  if (v8)
  {
    v9 = v8;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6572757361656DLL, 0xE700000000000000, 0x6C6576656CLL, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(0xE700000000000000);
    if ((v10 & 1) != 0)
    {
      v11 = 0;
    }
    else
    {
      v11 = 1;
      swift_bridgeObjectRelease(0xE500000000000000);
    }
    objc_msgSend(v9, "setSelectedIndex:", v11);

    goto LABEL_11;
  }
  __break(1u);
  __break(1u);
}

uint64_t sub_10012CA94(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  double v16;
  Class isa;
  NSString v18;
  uint64_t v19;
  _BYTE v25[24];

  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC7Measure11PointRender_point), "setSimdWorldTransform:");
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC7Measure11PointRender_pointPrime), "setSimdWorldTransform:", a1.n128_f64[0], a2.n128_f64[0], a3.n128_f64[0], a4.n128_f64[0]);
  v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC7Measure11PointRender_pointNodes);
  swift_beginAccess(v4 + OBJC_IVAR____TtC7Measure11PointRender_pointNodes, v25, 0, 0);
  v6 = *v5;
  if ((unint64_t)v6 >> 62)
    goto LABEL_15;
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v6, 2);
  for (; v7; v7 = _CocoaArrayWrapper.endIndex.getter(v19))
  {
    v8 = 4;
    v9 = 0;
    if ((v6 & 0xC000000000000001) != 0)
    {
LABEL_4:
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v6);
      goto LABEL_6;
    }
    while (1)
    {
      v10 = *(id *)(v6 + 8 * v8);
LABEL_6:
      v11 = v10;
      v12 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v13 = objc_msgSend(v10, "geometry");
      if (v13
        && (v14 = v13,
            v15 = objc_msgSend(v13, "firstMaterial"),
            v14,
            v15))
      {
        v16 = simd_float4x4.position.getter(a1, a2, a3, a4);
        SCNVector3.init(_:)(v16);
        isa = SCNVector3._bridgeToObjectiveC()().super.isa;
        v18 = String._bridgeToObjectiveC()();
        objc_msgSend(v15, "setValue:forKeyPath:", isa, v18);

        if (v12 == v7)
          return swift_bridgeObjectRelease_n(v6, 2);
      }
      else
      {

        if (v12 == v7)
          return swift_bridgeObjectRelease_n(v6, 2);
      }
      v9 = ++v8 - 4;
      if ((v6 & 0xC000000000000001) != 0)
        goto LABEL_4;
    }
    __break(1u);
LABEL_15:
    if (v6 < 0)
      v19 = v6;
    else
      v19 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v6, 2);
  }
  return swift_bridgeObjectRelease_n(v6, 2);
}

uint64_t sub_10012CC80(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v4;
  __n128 *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  double v17;
  Class isa;
  NSString v19;
  uint64_t v20;
  _BYTE v26[24];

  v5 = (__n128 *)(v4 + OBJC_IVAR____TtC7Measure11PointRender_connectedEndpointTransform);
  *v5 = a1;
  v5[1] = a2;
  v5[2] = a3;
  v5[3] = a4;
  v5[4].n128_u8[0] = 0;
  v6 = (uint64_t *)(v4 + OBJC_IVAR____TtC7Measure11PointRender_pointNodes);
  swift_beginAccess(v4 + OBJC_IVAR____TtC7Measure11PointRender_pointNodes, v26, 0, 0);
  v7 = *v6;
  if ((unint64_t)v7 >> 62)
    goto LABEL_15;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v7, 2);
  for (; v8; v8 = _CocoaArrayWrapper.endIndex.getter(v20))
  {
    v9 = 4;
    v10 = 0;
    if ((v7 & 0xC000000000000001) != 0)
    {
LABEL_4:
      v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v7);
      goto LABEL_6;
    }
    while (1)
    {
      v11 = *(id *)(v7 + 8 * v9);
LABEL_6:
      v12 = v11;
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      v14 = objc_msgSend(v11, "geometry");
      if (v14
        && (v15 = v14,
            v16 = objc_msgSend(v14, "firstMaterial"),
            v15,
            v16))
      {
        v17 = simd_float4x4.position.getter(a1, a2, a3, a4);
        SCNVector3.init(_:)(v17);
        isa = SCNVector3._bridgeToObjectiveC()().super.isa;
        v19 = String._bridgeToObjectiveC()();
        objc_msgSend(v16, "setValue:forKeyPath:", isa, v19);

        if (v13 == v8)
          return swift_bridgeObjectRelease_n(v7, 2);
      }
      else
      {

        if (v13 == v8)
          return swift_bridgeObjectRelease_n(v7, 2);
      }
      v10 = ++v9 - 4;
      if ((v7 & 0xC000000000000001) != 0)
        goto LABEL_4;
    }
    __break(1u);
LABEL_15:
    if (v7 < 0)
      v20 = v7;
    else
      v20 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v7, 2);
  }
  return swift_bridgeObjectRelease_n(v7, 2);
}

uint64_t sub_10012CE50()
{
  uint64_t v0;
  int v1;
  uint64_t result;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___isOcclusionInitialized);
  if (v1 != 2)
    return v1 & 1;
  result = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___isOcclusionInitialized) = 0;
  return result;
}

id sub_10012CE78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v12;
  _QWORD v13[4];

  v1 = OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointMaterial;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointMaterial);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointMaterial);
  }
  else
  {
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC7Measure11PointRender_isPartOfRectangle))
      v4 = 4;
    else
      v4 = 0;
    v5 = sub_100181ABC(v4);
    v6 = objc_msgSend(v5, "copy");

    _bridgeAnyObjectToAny(_:)(v13, v6);
    swift_unknownObjectRelease(v6);
    v7 = sub_10002CA3C();
    if (swift_dynamicCast(&v12, v13, (char *)&type metadata for Any + 8, v7, 6))
      v8 = v12;
    else
      v8 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
    v9 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_10012CF6C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v11;
  _QWORD v12[4];

  v1 = OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointPrimeMaterial;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointPrimeMaterial);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointPrimeMaterial);
  }
  else
  {
    v4 = sub_100181ABC(0);
    v5 = objc_msgSend(v4, "copy");

    _bridgeAnyObjectToAny(_:)(v12, v5);
    swift_unknownObjectRelease(v5);
    v6 = sub_10002CA3C();
    if (swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, v6, 6))
      v7 = v11;
    else
      v7 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_10012D04C(id a1)
{
  char *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  char v9;
  double v10;
  id v11;
  char v12;
  double v13;
  double v14;
  id v15;
  char v16;
  double v17;
  _BOOL4 v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  uint64_t *v25;
  id v26;
  char v27;
  double v28;
  double v29;
  id v30;
  char v31;
  double v32;
  id v33;
  char v34;
  double v35;
  _BOOL4 IsBoldTextEnabled;
  id v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  double v42;
  id v43;
  char v44;
  double v45;
  id v46;
  char v47;
  double v48;
  _BOOL4 v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  _BOOL4 v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  _BOOL4 v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  _BOOL4 v65;
  id v66;
  void *v67;
  id v68;
  void *v69;
  _BOOL4 v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  void *v75;
  _BOOL4 v76;
  id v77;
  void *v78;
  id v79;
  void *v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  void *v88;
  id v89;
  id v90;

  v3 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC7Measure11PointRender_point], "geometry");
  if (v3)
  {
    v89 = v3;
    v4 = objc_opt_self(SCNSphere);
    v5 = swift_dynamicCastObjCClass(v89, v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = (void *)objc_opt_self(SCNTransaction);
      objc_msgSend(v7, "begin");
      objc_msgSend(v7, "setAnimationDuration:", 0.0);
      switch((unint64_t)a1)
      {
        case 0uLL:
        case 5uLL:
          *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = 0x3FF0000000000000;
          if (qword_10047A738 != -1)
            swift_once(&qword_10047A738, sub_10000E4DC);
          v8 = (id)qword_1004AF068;
          v9 = UIContentSizeCategory.isAccessibilityCategory.getter(v8);

          if ((v9 & 1) != 0)
          {
            v10 = 0.00800000038;
          }
          else
          {
            IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
            v10 = 0.00400000019;
            if (IsBoldTextEnabled)
              v10 = 0.00800000038;
          }
          objc_msgSend(v6, "setRadius:", v10, v89);
          v37 = objc_msgSend(v6, "firstMaterial");
          if (v37)
          {
            v38 = v37;
            v39 = objc_msgSend(v37, "diffuse");

            if (qword_10047AF28 != -1)
              swift_once(&qword_10047AF28, sub_10019642C);
            objc_msgSend(v39, "setContents:", qword_1004AFA20);

          }
          v40 = objc_msgSend(v6, "firstMaterial");
          if (!v40)
            goto LABEL_118;
          v41 = v40;
          v24 = objc_msgSend(v40, "emission");

          if (qword_10047AF50 != -1)
            swift_once(&qword_10047AF50, sub_1001964D0);
          v25 = &qword_1004AFA48;
          goto LABEL_117;
        case 1uLL:
          *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = 0;
          if (qword_10047A738 != -1)
            swift_once(&qword_10047A738, sub_10000E4DC);
          v26 = (id)qword_1004AF068;
          v27 = UIContentSizeCategory.isAccessibilityCategory.getter(v26);

          if ((v27 & 1) != 0)
          {
            v28 = 0.00800000038;
          }
          else
          {
            v54 = UIAccessibilityIsBoldTextEnabled();
            v28 = 0.00400000019;
            if (v54)
              v28 = 0.00800000038;
          }
          objc_msgSend(v6, "setRadius:", v28, v89);
          v55 = objc_msgSend(v6, "firstMaterial");
          if (v55)
          {
            v56 = v55;
            v57 = objc_msgSend(v55, "diffuse");

            if (qword_10047AF20 != -1)
              swift_once(&qword_10047AF20, sub_100196418);
            objc_msgSend(v57, "setContents:", qword_1004AFA18);

          }
          v58 = objc_msgSend(v6, "firstMaterial");
          if (!v58)
            goto LABEL_118;
          v59 = v58;
          v24 = objc_msgSend(v58, "emission");

          if (qword_10047AF58 != -1)
            swift_once(&qword_10047AF58, sub_1001964E4);
          v25 = &qword_1004AFA50;
          goto LABEL_117;
        case 2uLL:
          *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = 0x3FF0000000000000;
          if (qword_10047A738 != -1)
            swift_once(&qword_10047A738, sub_10000E4DC);
          v33 = (id)qword_1004AF068;
          v34 = UIContentSizeCategory.isAccessibilityCategory.getter(v33);

          if ((v34 & 1) != 0)
          {
            v35 = 0.00800000038;
          }
          else
          {
            v65 = UIAccessibilityIsBoldTextEnabled();
            v35 = 0.00400000019;
            if (v65)
              v35 = 0.00800000038;
          }
          objc_msgSend(v6, "setRadius:", v35, v89);
          v66 = objc_msgSend(v6, "firstMaterial");
          if (v66)
          {
            v67 = v66;
            v68 = objc_msgSend(v66, "diffuse");

            if (qword_10047AF40 != -1)
              swift_once(&qword_10047AF40, sub_100196488);
            objc_msgSend(v68, "setContents:", qword_1004AFA38);

          }
          v64 = objc_msgSend(v6, "firstMaterial");
          if (v64)
            goto LABEL_97;
          goto LABEL_118;
        case 3uLL:
        case 4uLL:
          *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = 0;
          if (qword_10047A738 != -1)
            swift_once(&qword_10047A738, sub_10000E4DC);
          v11 = (id)qword_1004AF068;
          v12 = UIContentSizeCategory.isAccessibilityCategory.getter(v11);

          if ((v12 & 1) != 0)
          {
            v13 = 0.00800000038;
          }
          else
          {
            v18 = UIAccessibilityIsBoldTextEnabled();
            v13 = 0.00400000019;
            if (v18)
              v13 = 0.00800000038;
          }
          objc_msgSend(v6, "setRadius:", v13, v89);
          v19 = objc_msgSend(v6, "firstMaterial");
          if (v19)
          {
            v20 = v19;
            v21 = objc_msgSend(v19, "diffuse");

            if (qword_10047AF30 != -1)
              swift_once(&qword_10047AF30, sub_100196440);
            objc_msgSend(v21, "setContents:", qword_1004AFA28);

          }
          v22 = objc_msgSend(v6, "firstMaterial");
          if (!v22)
            goto LABEL_118;
          v23 = v22;
          v24 = objc_msgSend(v22, "emission");

          if (qword_10047AF60 != -1)
            swift_once(&qword_10047AF60, sub_1001964F8);
          v25 = &qword_1004AFA58;
          goto LABEL_117;
        case 6uLL:
          v42 = 0.49;
          if (*(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11PointRender_type] == 2)
            v42 = 0.0;
          *(double *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = v42;
          if (qword_10047A738 != -1)
            swift_once(&qword_10047A738, sub_10000E4DC);
          v43 = (id)qword_1004AF068;
          v44 = UIContentSizeCategory.isAccessibilityCategory.getter(v43);

          if ((v44 & 1) != 0)
          {
            v45 = 0.00800000038;
          }
          else
          {
            v70 = UIAccessibilityIsBoldTextEnabled();
            v45 = 0.00400000019;
            if (v70)
              v45 = 0.00800000038;
          }
          objc_msgSend(v6, "setRadius:", v45, v89);
          v71 = objc_msgSend(v6, "firstMaterial");
          if (v71)
          {
            v72 = v71;
            v73 = objc_msgSend(v71, "diffuse");

            if (qword_10047AF38 != -1)
              swift_once(&qword_10047AF38, sub_100196464);
            objc_msgSend(v73, "setContents:", qword_1004AFA30);

          }
          v74 = objc_msgSend(v6, "firstMaterial");
          if (!v74)
            goto LABEL_118;
          v75 = v74;
          v24 = objc_msgSend(v74, "emission");

          if (qword_10047AF68 != -1)
            swift_once(&qword_10047AF68, sub_10019650C);
          v25 = &qword_1004AFA60;
          goto LABEL_117;
        case 7uLL:
          v29 = 1.0;
          if (*(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11PointRender_type] == 2)
            v29 = 0.0;
          *(double *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = v29;
          if (qword_10047A738 != -1)
            swift_once(&qword_10047A738, sub_10000E4DC);
          v30 = (id)qword_1004AF068;
          v31 = UIContentSizeCategory.isAccessibilityCategory.getter(v30);

          if ((v31 & 1) != 0)
          {
            v32 = 0.00800000038;
          }
          else
          {
            v60 = UIAccessibilityIsBoldTextEnabled();
            v32 = 0.00400000019;
            if (v60)
              v32 = 0.00800000038;
          }
          objc_msgSend(v6, "setRadius:", v32, v89);
          v61 = objc_msgSend(v6, "firstMaterial");
          if (v61)
          {
            v62 = v61;
            v63 = objc_msgSend(v61, "diffuse");

            if (qword_10047AF40 != -1)
              swift_once(&qword_10047AF40, sub_100196488);
            objc_msgSend(v63, "setContents:", qword_1004AFA38);

          }
          v64 = objc_msgSend(v6, "firstMaterial");
          if (!v64)
            goto LABEL_118;
LABEL_97:
          v69 = v64;
          v24 = objc_msgSend(v64, "emission");

          if (qword_10047AF70 != -1)
            swift_once(&qword_10047AF70, sub_100196520);
          v25 = &qword_1004AFA68;
          goto LABEL_117;
        case 8uLL:
          *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = 0x3FF0000000000000;
          if (qword_10047A738 != -1)
            swift_once(&qword_10047A738, sub_10000E4DC);
          v46 = (id)qword_1004AF068;
          v47 = UIContentSizeCategory.isAccessibilityCategory.getter(v46);

          a1 = &unk_1003B8000;
          if ((v47 & 1) != 0)
          {
            v48 = 0.00800000038;
          }
          else
          {
            v76 = UIAccessibilityIsBoldTextEnabled();
            v48 = 0.00400000019;
            if (v76)
              v48 = 0.00800000038;
          }
          objc_msgSend(v6, "setRadius:", v48, v89);
          v77 = objc_msgSend(v6, "firstMaterial");
          if (!v77)
            goto LABEL_129;
          v78 = v77;
          a1 = objc_msgSend(v77, "diffuse");

          if (qword_10047AF38 != -1)
            swift_once(&qword_10047AF38, sub_100196464);
          objc_msgSend(a1, "setContents:", qword_1004AFA30);

          v79 = objc_msgSend(v6, "firstMaterial");
          if (!v79)
            goto LABEL_130;
          v80 = v79;
          v24 = objc_msgSend(v79, "emission");

          v25 = &qword_1004AFA30;
          goto LABEL_117;
        case 9uLL:
          v14 = 0.49;
          if (*(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11PointRender_type] == 2)
            v14 = 0.0;
          *(double *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = v14;
          if (qword_10047A738 != -1)
            swift_once(&qword_10047A738, sub_10000E4DC);
          v15 = (id)qword_1004AF068;
          v16 = UIContentSizeCategory.isAccessibilityCategory.getter(v15);

          a1 = &unk_1003B8000;
          if ((v16 & 1) != 0)
          {
            v17 = 0.00800000038;
          }
          else
          {
            v49 = UIAccessibilityIsBoldTextEnabled();
            v17 = 0.00400000019;
            if (v49)
              v17 = 0.00800000038;
          }
          objc_msgSend(v6, "setRadius:", v17, v89);
          v50 = objc_msgSend(v6, "firstMaterial");
          if (v50)
          {
            v51 = v50;
            a1 = objc_msgSend(v50, "diffuse");

            if (qword_10047AF48 != -1)
              swift_once(&qword_10047AF48, sub_1001964AC);
            objc_msgSend(a1, "setContents:", qword_1004AFA40);

            v52 = objc_msgSend(v6, "firstMaterial");
            if (v52)
            {
              v53 = v52;
              v24 = objc_msgSend(v52, "emission");

              if (qword_10047AF78 != -1)
                swift_once(&qword_10047AF78, sub_100196534);
              v25 = &qword_1004AFA70;
LABEL_117:
              objc_msgSend(v24, "setContents:", *v25);

LABEL_118:
              v81 = *(void **)&v1[OBJC_IVAR____TtC7Measure11PointRender_pointPrime];
              if (v81)
              {
                v82 = v81;
                v83 = objc_msgSend(v82, "geometry");
                if (v83)
                {
                  v84 = v83;
                  v85 = objc_opt_self(SCNSphere);
                  v86 = swift_dynamicCastObjCClass(v84, v85);
                  if (v86)
                  {
                    v87 = (void *)v86;
                    objc_msgSend(v6, "radius");
                    objc_msgSend(v87, "setRadius:");
                    v88 = v82;
                    v82 = v84;
                  }
                  else
                  {
                    v88 = v84;
                  }

                }
              }
              objc_msgSend(v1, "setOpacity:", *(double *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity]);
              objc_msgSend(v7, "commit");
              break;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          v90 = a1;
          _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for MeasureObjectState, &v90, &type metadata for MeasureObjectState, &type metadata for Int);
          __break(1u);
          JUMPOUT(0x10012DDC8);
        default:
          goto LABEL_131;
      }
    }

  }
}

char *sub_10012DE9C(void *a1, char a2)
{
  _BYTE *v2;
  _BYTE *v3;
  objc_class *ObjectType;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _BYTE *v11;
  id v12;
  char v13;
  BOOL v14;
  id v15;
  id v16;
  void *v17;
  char *v18;
  id v19;
  char v20;
  float v21;
  _BOOL4 IsBoldTextEnabled;
  double v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  char *result;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char **v37;
  id v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  char v43;
  double v44;
  _BOOL4 v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  __n128 v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  __n128 v58;
  __n128 v59;
  __n128 v60;
  __n128 v61;
  float32x2_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id i;
  void *v67;
  id v68;
  void *v69;
  id v70;
  Class isa;
  NSString v72;
  id v73;
  void *v74;
  id v75;
  Class v76;
  NSString v77;
  uint64_t v78;
  char *v79;
  void *v80;
  float32x2_t v81;
  double v82;
  double v83;
  _BYTE v84[24];
  objc_super v85;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  v7 = &v3[OBJC_IVAR____TtC7Measure11PointRender_connectedEndpointTransform];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_OWORD *)v7 + 2) = 0u;
  *((_OWORD *)v7 + 3) = 0u;
  v7[64] = 1;
  v3[OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___isOcclusionInitialized] = 2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointMaterial] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointPrimeMaterial] = 0;
  v8 = OBJC_IVAR____TtC7Measure11PointRender_shouldOcclude;
  v3[OBJC_IVAR____TtC7Measure11PointRender_shouldOcclude] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = 0;
  v9 = OBJC_IVAR____TtC7Measure11PointRender_point;
  v10 = objc_allocWithZone((Class)SCNNode);
  v11 = v3;
  *(_QWORD *)&v3[v9] = objc_msgSend(v10, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC7Measure11PointRender_pointPrime] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC7Measure11PointRender_pointNodes] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v11[OBJC_IVAR____TtC7Measure11PointRender_state] = static MeasureObjectState.default;
  if (qword_10047A738 != -1)
    swift_once(&qword_10047A738, sub_10000E4DC);
  v12 = (id)qword_1004AF068;
  v13 = UIContentSizeCategory.isAccessibilityCategory.getter(v12);

  v14 = (v13 & 1) != 0 || UIAccessibilityIsBoldTextEnabled();
  v11[OBJC_IVAR____TtC7Measure11PointRender_accessibleSizeOn] = v14;
  *(_QWORD *)&v11[OBJC_IVAR____TtC7Measure11PointRender_type] = static WorldPointType.default;
  *(_QWORD *)&v11[OBJC_IVAR____TtC7Measure11PointRender_lines] = _swiftEmptyArrayStorage;
  v15 = a1;
  v3[v8] = a1 & 1;
  v11[OBJC_IVAR____TtC7Measure11PointRender_isPartOfRectangle] = a2 & 1;

  v85.receiver = v11;
  v85.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v85, "init");
  v17 = (void *)qword_1004AF068;
  v18 = (char *)v16;
  v19 = v17;
  v20 = UIContentSizeCategory.isAccessibilityCategory.getter(v19);

  v21 = 2.0;
  if ((v20 & 1) == 0)
  {
    IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
    v21 = 1.0;
    if (IsBoldTextEnabled)
      v21 = 2.0;
  }
  v23 = (float)(v21 * 0.004);
  v24 = (id)objc_opt_self(SCNSphere);
  v25 = objc_msgSend(v24, "sphereWithRadius:", v23);
  v26 = OBJC_IVAR____TtC7Measure11PointRender_point;
  v27 = *(void **)&v18[OBJC_IVAR____TtC7Measure11PointRender_point];
  objc_msgSend(v27, "setGeometry:", v25);
  objc_msgSend(v18, "addChildNode:", v27);
  result = (char *)objc_msgSend(v27, "geometry");
  if (!result)
  {
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v29 = result;
  v30 = sub_10012CE78();
  objc_msgSend(v29, "setFirstMaterial:", v30);

  v31 = *(void **)&v18[v26];
  objc_msgSend(v31, "setRenderingOrder:", 2);
  v32 = (uint64_t)&v18[OBJC_IVAR____TtC7Measure11PointRender_pointNodes];
  swift_beginAccess(&v18[OBJC_IVAR____TtC7Measure11PointRender_pointNodes], v84, 33, 0);
  v33 = v31;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
  v35 = *(_QWORD *)((*(_QWORD *)v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v34 = *(_QWORD *)((*(_QWORD *)v32 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v35 >= v34 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
  v80 = v25;
  v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
  specialized Array._endMutation()(v36);
  swift_endAccess(v84);
  v37 = &selRef_renderer_didAddNode_forAnchor_;
  if (!objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
    goto LABEL_31;
  v38 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v33 = (char *)objc_msgSend(v38, "isPointOcclusionEnabled");

  if (!(_DWORD)v33 || (v15 & 1) == 0)
    goto LABEL_31;
  v39 = objc_msgSend(objc_allocWithZone((Class)SCNNode), "init");
  v40 = OBJC_IVAR____TtC7Measure11PointRender_pointPrime;
  v41 = *(void **)&v18[OBJC_IVAR____TtC7Measure11PointRender_pointPrime];
  *(_QWORD *)&v18[OBJC_IVAR____TtC7Measure11PointRender_pointPrime] = v39;

  v42 = (id)qword_1004AF068;
  v43 = UIContentSizeCategory.isAccessibilityCategory.getter(v42);

  if ((v43 & 1) != 0)
  {
    v44 = 0.00800000038;
  }
  else
  {
    v45 = UIAccessibilityIsBoldTextEnabled();
    v44 = 0.00400000019;
    if (v45)
      v44 = 0.00800000038;
  }
  v15 = objc_msgSend(v24, "sphereWithRadius:", v44);
  result = *(char **)&v18[v40];
  if (!result)
    goto LABEL_55;
  result = (char *)objc_msgSend(result, "setGeometry:", v15);
  if (!*(_QWORD *)&v18[v40])
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  objc_msgSend(v18, "addChildNode:");
  result = *(char **)&v18[v40];
  if (!result)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  result = (char *)objc_msgSend(result, "geometry");
  if (!result)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v46 = result;
  v47 = sub_10012CF6C();
  objc_msgSend(v46, "setFirstMaterial:", v47);

  result = *(char **)&v18[v40];
  if (!result)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  result = (char *)objc_msgSend(result, "geometry");
  if (!result)
  {
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v48 = result;
  v49 = objc_msgSend(result, "firstMaterial");

  if (v49)
  {
    objc_msgSend(v49, "setColorBufferWriteMask:", 0);

  }
  result = *(char **)&v18[v40];
  if (!result)
    goto LABEL_61;
  result = (char *)objc_msgSend(result, "setRenderingOrder:", 0);
  v50 = *(void **)&v18[v40];
  if (v50)
  {
    swift_beginAccess(v32, v84, 33, 0);
    v24 = v50;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
    v33 = *(char **)((*(_QWORD *)v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v51 = *(_QWORD *)((*(_QWORD *)v32 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if ((unint64_t)v33 >= v51 >> 1)
      goto LABEL_53;
    while (1)
    {
      v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v24);
      specialized Array._endMutation()(v52);
      swift_endAccess(v84);

LABEL_31:
      v53 = *(void **)&v18[v26];
      objc_msgSend(v53, "simdWorldTransform", v79);
      v83 = simd_float4x4.position.getter(v54, v55, v56, v57);
      objc_msgSend(v53, "simdWorldTransform");
      v81 = COERCE_FLOAT32X2_T(simd_float4x4.position.getter(v58, v59, v60, v61));
      v62 = *(float32x2_t *)SIMD3<>.up.unsafeMutableAddressor();
      v63 = *(_QWORD *)v32;
      v79 = v18;
      if (*(_QWORD *)v32 >> 62)
      {
        if (v63 < 0)
          v78 = *(_QWORD *)v32;
        else
          v78 = v63 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v63, 2);
        v32 = _CocoaArrayWrapper.endIndex.getter(v78);
        if (!v32)
        {
LABEL_51:
          swift_bridgeObjectRelease_n(v63, 2);
          sub_10012D04C(*(id *)&v79[OBJC_IVAR____TtC7Measure11PointRender_state]);
          sub_10012E6CC();
          sub_1000DCD94();

          return v79;
        }
      }
      else
      {
        v32 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(v63, 2);
        if (!v32)
          goto LABEL_51;
      }
      v64 = v32 - 1;
      if (v32 >= 1)
      {
        v65 = 0;
        v82 = COERCE_DOUBLE(vadd_f32(v81, v62));
        if ((v63 & 0xC000000000000001) == 0)
          goto LABEL_36;
        while (1)
        {
          for (i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v65, v63);
                ;
                i = *(id *)(v63 + 8 * v65 + 32))
          {
            v67 = i;
            v68 = objc_msgSend(i, v37[79], v79, v80);
            if (v68)
            {
              v69 = v68;
              v70 = objc_msgSend(v68, "firstMaterial");

              if (v70)
              {
                SCNVector3.init(_:)(v83);
                isa = SCNVector3._bridgeToObjectiveC()().super.isa;
                v72 = String._bridgeToObjectiveC()();
                objc_msgSend(v70, "setValue:forKeyPath:", isa, v72);

                v37 = &selRef_renderer_didAddNode_forAnchor_;
              }
            }
            v73 = objc_msgSend(v67, v37[79]);
            if (v73
              && (v74 = v73,
                  v75 = objc_msgSend(v73, "firstMaterial"),
                  v74,
                  v75))
            {
              SCNVector3.init(_:)(v82);
              v76 = SCNVector3._bridgeToObjectiveC()().super.isa;
              v77 = String._bridgeToObjectiveC()();
              objc_msgSend(v75, "setValue:forKeyPath:", v76, v77);

              v37 = &selRef_renderer_didAddNode_forAnchor_;
              if (v64 == v65)
                goto LABEL_51;
            }
            else
            {

              if (v64 == v65)
                goto LABEL_51;
            }
            ++v65;
            if ((v63 & 0xC000000000000001) != 0)
              break;
LABEL_36:
            ;
          }
        }
      }
      __break(1u);
LABEL_53:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v33 + 1, 1);
    }
  }
LABEL_62:
  __break(1u);
  return result;
}

void sub_10012E6CC()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  _QWORD v7[6];

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_10047B198 != -1)
    swift_once(&qword_10047B198, sub_1001CA024);
  v2 = qword_1004AFD10;
  v3 = swift_allocObject(&unk_100447028, 24, 7);
  *(_QWORD *)(v3 + 16) = v0;
  v7[4] = sub_10012F1D0;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1000DCC48;
  v7[3] = &unk_100447040;
  v4 = _Block_copy(v7);
  v5 = v0;
  v6 = objc_msgSend(v1, "addObserverForName:object:queue:usingBlock:", v2, 0, 0, v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  swift_unknownObjectRelease(v6);

}

void sub_10012E820()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  double *v6;
  id v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char **v12;
  char **KeyPath;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  id v26;
  NSString v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  __n128 v38;
  __n128 v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  id v43;
  Class isa;
  NSString v45;
  Class v46;
  NSString v47;
  Class v48;
  NSString v49;
  Class v50;
  NSString v51;
  Class v52;
  NSString v53;
  Class v54;
  NSString v55;
  Class v56;
  NSString v57;
  Class v58;
  NSString v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  _BYTE v68[24];
  _QWORD v69[4];
  _BYTE v70[24];
  float32x4_t v71;
  float32x4_t v72;
  float32x4_t v73;
  _BYTE v74[24];
  _BYTE v75[24];
  _BYTE v76[24];
  uint64_t v77;
  _QWORD v78[7];

  v1 = v0;
  v2 = (void *)objc_opt_self(Gestalt);
  if (objc_msgSend(v2, "jasperAvailable"))
  {
    v3 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
    v4 = swift_allocObject(v3, 48, 7);
    *(_OWORD *)(v4 + 16) = xmmword_1003B1460;
    *(_QWORD *)(v4 + 32) = sub_10012CE78();
    v5 = sub_10012CF6C();
    *(_QWORD *)(v4 + 40) = v5;
    v78[0] = v4;
    specialized Array._endMutation()(v5);
    v6 = (double *)v4;
  }
  else
  {
    v6 = _swiftEmptyArrayStorage;
  }
  v77 = (uint64_t)v6;
  if (!objc_msgSend(v2, "jasperAvailable")
    || *(_BYTE *)(v1 + OBJC_IVAR____TtC7Measure11PointRender_shouldOcclude) != 1
    || (v64 = (id)objc_opt_self(NSUserDefaults),
        v7 = objc_msgSend(v64, "standardUserDefaults"),
        v8 = objc_msgSend(v7, "isPointOcclusionEnabled"),
        v7,
        !v8))
  {
    swift_bridgeObjectRelease(v6);
    return;
  }
  v10 = *(_QWORD *)MeasureCore.shared.unsafeMutableAddressor(v9);
  swift_beginAccess(v10 + 112, v76, 0, 0);
  v11 = *(_QWORD *)(v10 + 112);
  if (!v11)
  {
    swift_bridgeObjectRelease(v6);
    return;
  }
  v12 = (char **)objc_msgSend(v64, "standardUserDefaults", swift_retain().n128_f64[0]);
  KeyPath = (char **)swift_getKeyPath(&unk_1003B8788);
  if (qword_10047A930 != -1)
LABEL_31:
    swift_once(&qword_10047A930, sub_100083368);
  v14 = (void *)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (!*((_QWORD *)&xmmword_1004AF258 + 1))
    goto LABEL_39;
  v15 = (void *)Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
  v16 = swift_allocObject(&unk_100447078, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, v1);
  v17 = swift_allocObject(&unk_1004470A0, 32, 7);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v6;
  v18 = v14;
  swift_bridgeObjectRetain(v6);
  NSUserDefaults.performOnChange<A>(to:on:action:)(KeyPath, v15, sub_1000D9298, v17);

  swift_release();
  swift_release();
  swift_beginAccess(&v77, v75, 0, 0);
  v19 = v77;
  v62 = v1;
  if ((unint64_t)v77 >> 62)
  {
    if (v77 < 0)
      v61 = v77;
    else
      v61 = v77 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v77);
    v1 = _CocoaArrayWrapper.endIndex.getter(v61);
    if (v1)
      goto LABEL_12;
LABEL_36:
    swift_bridgeObjectRelease(v19);
    swift_release();
    swift_bridgeObjectRelease(v77);
    *(_BYTE *)(v62 + OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___isOcclusionInitialized) = 1;
    return;
  }
  v1 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v77);
  if (!v1)
    goto LABEL_36;
LABEL_12:
  v20 = (uint64_t *)(v11 + 208);
  swift_beginAccess(v11 + 208, v74, 0, 0);
  v21 = 4;
  KeyPath = &selRef_renderer_didAddNode_forAnchor_;
  v63 = v1;
  while (1)
  {
    v6 = (double *)(v21 - 4);
    if ((v19 & 0xC000000000000001) != 0)
      v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21 - 4, v19);
    else
      v28 = *(id *)(v19 + 8 * v21);
    v29 = v28;
    v11 = v21 - 3;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (qword_10047AF18 != -1)
      swift_once(&qword_10047AF18, sub_1001963D0);
    v33 = UIColor.rgba.getter();
    v72 = 0u;
    v73 = 0u;
    v71 = 0u;
    if (!*v20)
      break;
    v34 = v30;
    v35 = v31;
    v36 = v32;
    swift_retain();
    ADProcessor.transformer.getter(v37);
    v38 = swift_release();
    Transformer.clipToCameraNormalized.getter(v78, v38);
    v39 = swift_release();
    simd_float3x3.copy(from:)(v78, v39);
    v40 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1003B19E0, v71.f32[0]), (float32x4_t)xmmword_1003B19F0, *(float32x2_t *)v71.f32, 1), (float32x4_t)xmmword_1003B1A00, v71, 2);
    v41 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1003B19E0, v72.f32[0]), (float32x4_t)xmmword_1003B19F0, *(float32x2_t *)v72.f32, 1), (float32x4_t)xmmword_1003B1A00, v72, 2);
    v40.i32[3] = v67.i32[3];
    v42 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1003B19E0, v73.f32[0]), (float32x4_t)xmmword_1003B19F0, *(float32x2_t *)v73.f32, 1), (float32x4_t)xmmword_1003B1A00, v73, 2);
    v41.i32[3] = v66.i32[3];
    v66 = v41;
    v67 = v40;
    v42.i32[3] = v65.i32[3];
    v65 = v42;
    v43 = objc_msgSend(v64, "standardUserDefaults");
    objc_msgSend(v43, "isLineOcclusionAlphaBlendingEnabled");

    isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    v45 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setValue:forKeyPath:", isa, v45);

    SCNVector4.init(_:_:_:_:)(v33, v34, v35, v36);
    v46 = SCNVector4._bridgeToObjectiveC()().super.isa;
    v47 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setValue:forKeyPath:", v46, v47);

    v48 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    v49 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setValue:forKeyPath:", v48, v49);

    v50 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    v51 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setValue:forKeyPath:", v50, v51);

    v52 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    v53 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setValue:forKeyPath:", v52, v53);

    SCNVector3.init(_:)(*(double *)v67.i64);
    v54 = SCNVector3._bridgeToObjectiveC()().super.isa;
    v55 = String._bridgeToObjectiveC()();
    v12 = &selRef_renderer_didAddNode_forAnchor_;
    objc_msgSend(v29, "setValue:forKey:", v54, v55);

    SCNVector3.init(_:)(*(double *)v66.i64);
    v56 = SCNVector3._bridgeToObjectiveC()().super.isa;
    v57 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setValue:forKey:", v56, v57);

    SCNVector3.init(_:)(*(double *)v65.i64);
    v58 = SCNVector3._bridgeToObjectiveC()().super.isa;
    v59 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setValue:forKey:", v58, v59);

    v60 = *v20;
    if (!*v20)
      goto LABEL_38;
    swift_beginAccess(v60 + 242, v70, 0, 0);
    if (*(_BYTE *)(v60 + 242) == 1)
    {
      swift_beginAccess(v60 + 256, v68, 0, 0);
      v23 = *(_QWORD *)(v60 + 256);
      if (!v23)
      {

        goto LABEL_16;
      }
      swift_unknownObjectRetain_n(*(_QWORD *)(v60 + 256), 2);
    }
    else
    {
      v22 = swift_retain();
      v23 = ADProcessor.outputDepthTexture.getter(v22);
      swift_release();
      swift_unknownObjectRetain(v23);
    }
    ObjectType = swift_getObjectType(v23);
    v69[3] = ObjectType;
    v69[0] = v23;
    swift_unknownObjectRetain(v23);
    v25 = _bridgeAnythingToObjectiveC<A>(_:)(v69, ObjectType);
    v26 = objc_msgSend((id)objc_opt_self(SCNMaterialProperty), "materialPropertyWithContents:", v25);
    swift_unknownObjectRelease(v25);
    sub_10000F690(v69);
    v27 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setValue:forKey:", v26, v27);

    swift_unknownObjectRelease_n(v23, 2);
    v1 = v63;
LABEL_16:
    ++v21;
    if (v11 == v1)
      goto LABEL_36;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t type metadata accessor for PointRender()
{
  return objc_opt_self(_TtC7Measure11PointRender);
}

uint64_t sub_10012F1AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10012F1D0()
{
  uint64_t v0;

  sub_10012D04C(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC7Measure11PointRender_state));
}

uint64_t sub_10012F1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10012F20C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10012F214()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  id v3;
  char v4;
  BOOL v5;
  uint64_t result;

  v1 = &v0[OBJC_IVAR____TtC7Measure11PointRender_connectedEndpointTransform];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((_OWORD *)v1 + 3) = 0u;
  v1[64] = 1;
  v0[OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___isOcclusionInitialized] = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointMaterial] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointPrimeMaterial] = 0;
  v0[OBJC_IVAR____TtC7Measure11PointRender_shouldOcclude] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = 0;
  v2 = OBJC_IVAR____TtC7Measure11PointRender_point;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)SCNNode), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure11PointRender_pointPrime] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure11PointRender_pointNodes] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure11PointRender_state] = static MeasureObjectState.default;
  if (qword_10047A738 != -1)
    swift_once(&qword_10047A738, sub_10000E4DC);
  v3 = (id)qword_1004AF068;
  v4 = UIContentSizeCategory.isAccessibilityCategory.getter(v3);

  v5 = (v4 & 1) != 0 || UIAccessibilityIsBoldTextEnabled();
  v0[OBJC_IVAR____TtC7Measure11PointRender_accessibleSizeOn] = v5;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure11PointRender_type] = static WorldPointType.default;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure11PointRender_lines] = _swiftEmptyArrayStorage;

  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003D8190, "Measure/PointRender.swift", 25, 2, 106, 0);
  __break(1u);
  return result;
}

uint64_t sub_10012F3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_10012F3E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10012F40C()
{
  void *v0;
  id v1;
  id v2;
  double v3;
  double v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSString v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  objc_super v23;

  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for SketchLine();
  objc_msgSendSuper2(&v23, "layoutSubviews");
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v1 = objc_msgSend(v0, "heightAnchor");
  if (qword_10047A818 != -1)
    swift_once(&qword_10047A818, sub_100012E04);
  v2 = objc_msgSend(v1, "constraintEqualToConstant:", *(double *)&qword_1004AF168);

  objc_msgSend(v2, "setActive:", 1);
  if (qword_10047A7E8 != -1)
    swift_once(&qword_10047A7E8, sub_100012D28);
  v3 = *(double *)&qword_1004AF138;
  if (qword_10047A7F0 != -1)
    swift_once(&qword_10047A7F0, sub_100012D38);
  v4 = *(double *)&qword_1004AF140;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v6 = objc_msgSend(v5, "layer");
  v7 = sub_1000133C0(0, v4, v4, v3 + 180.0 - v4, v4);
  objc_msgSend(v6, "addSublayer:", v7);

  v8 = objc_msgSend(v5, "layer");
  v9 = sub_1000135EC(0, v4, v4);
  objc_msgSend(v8, "addSublayer:", v9);

  v10 = objc_msgSend(v5, "layer");
  v11 = sub_1000135EC(0, v3 + 180.0 - v4, v4);
  objc_msgSend(v10, "addSublayer:", v11);

  objc_msgSend(v0, "addSubview:", v5);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v12 = objc_msgSend(v5, "widthAnchor");
  v13 = objc_msgSend(v12, "constraintEqualToConstant:", v3 + 180.0);

  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setIdentifier:", v14);

  objc_msgSend(v13, "setActive:", 1);
  v15 = objc_msgSend(v5, "heightAnchor");
  v16 = objc_msgSend(v15, "constraintEqualToConstant:", v3);

  objc_msgSend(v16, "setActive:", 1);
  v17 = objc_msgSend(v0, "centerXAnchor");
  v18 = objc_msgSend(v5, "centerXAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  objc_msgSend(v19, "setActive:", 1);
  v20 = objc_msgSend(v0, "centerYAnchor");
  v21 = objc_msgSend(v5, "centerYAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  objc_msgSend(v22, "setActive:", 1);
}

id sub_10012F8A8()
{
  return sub_100045D08(type metadata accessor for SketchLine);
}

uint64_t type metadata accessor for SketchLine()
{
  return objc_opt_self(_TtC7Measure10SketchLine);
}

void sub_10012F8D4()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  objc_super v21;

  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for SketchLineHistory();
  objc_msgSendSuper2(&v21, "layoutSubviews");
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  if (qword_10047A7E8 != -1)
    swift_once(&qword_10047A7E8, sub_100012D28);
  v1 = *(double *)&qword_1004AF138;
  if (qword_10047A7F0 != -1)
    swift_once(&qword_10047A7F0, sub_100012D38);
  v2 = *(double *)&qword_1004AF140;
  if (qword_10047A828 != -1)
    swift_once(&qword_10047A828, sub_100012E24);
  v3 = *(double *)&qword_1004AF178;
  v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v5 = objc_msgSend(v4, "layer");
  v6 = sub_1000133C0(0, v2, v2, v2, v3 - v2);
  objc_msgSend(v5, "addSublayer:", v6);

  v7 = objc_msgSend(v4, "layer");
  v8 = sub_1000135EC(0, v2, v2);
  objc_msgSend(v7, "addSublayer:", v8);

  v9 = objc_msgSend(v4, "layer");
  v10 = sub_1000135EC(0, v2, v3 - v2);
  objc_msgSend(v9, "addSublayer:", v10);

  objc_msgSend(v0, "addSubview:", v4);
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v11 = objc_msgSend(v4, "widthAnchor");
  v12 = objc_msgSend(v11, "constraintEqualToConstant:", v1);

  objc_msgSend(v12, "setActive:", 1);
  v13 = objc_msgSend(v4, "heightAnchor");
  v14 = objc_msgSend(v13, "constraintEqualToConstant:", v3);

  objc_msgSend(v14, "setActive:", 1);
  v15 = objc_msgSend(v0, "centerXAnchor");
  v16 = objc_msgSend(v4, "centerXAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  objc_msgSend(v17, "setActive:", 1);
  v18 = objc_msgSend(v0, "centerYAnchor");
  v19 = objc_msgSend(v4, "centerYAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  objc_msgSend(v20, "setActive:", 1);
}

id sub_10012FCC4(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(void))
{
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)a7();
  return objc_msgSendSuper2(&v12, "initWithFrame:", a2, a3, a4, a5);
}

id sub_10012FD3C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return objc_msgSendSuper2(&v6, "initWithCoder:", a3);
}

id sub_10012FD80()
{
  return sub_100045D08(type metadata accessor for SketchLineHistory);
}

uint64_t type metadata accessor for SketchLineHistory()
{
  return objc_opt_self(_TtC7Measure17SketchLineHistory);
}

char *sub_10012FDAC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  NSString v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  double v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  objc_super v36;

  v4 = &v2[OBJC_IVAR____TtC7Measure11SketchLabel_text];
  *(_QWORD *)v4 = a1;
  *((_QWORD *)v4 + 1) = a2;
  v5 = objc_allocWithZone((Class)UILabel);
  v6 = v2;
  swift_bridgeObjectRetain(a2);
  v7 = objc_msgSend(v5, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Measure11SketchLabel_label] = v7;

  v36.receiver = v6;
  v36.super_class = (Class)type metadata accessor for SketchLabel();
  v8 = objc_msgSendSuper2(&v36, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v9 = objc_msgSend(v8, "layer");
  objc_msgSend(v9, "setMasksToBounds:", 1);

  v10 = objc_msgSend(v8, "layer");
  if (qword_10047A7F8 != -1)
    swift_once(&qword_10047A7F8, sub_100012D88);
  objc_msgSend(v10, "setCornerRadius:", *(double *)&qword_1004AF148 * 0.5);

  v11 = (void *)objc_opt_self(UIColor);
  v12 = (char *)v8;
  v13 = objc_msgSend(v11, "systemBackgroundColor");
  objc_msgSend(v12, "setBackgroundColor:", v13);

  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = OBJC_IVAR____TtC7Measure11SketchLabel_label;
  v15 = *(id *)&v12[OBJC_IVAR____TtC7Measure11SketchLabel_label];
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setText:", v16, swift_bridgeObjectRelease(a2).n128_f64[0]);

  v17 = qword_10047A810;
  v18 = *(id *)&v12[v14];
  if (v17 != -1)
    swift_once(&qword_10047A810, sub_100012DBC);
  objc_msgSend(v18, "setFont:", qword_1004AF160);

  v19 = *(void **)&v12[v14];
  objc_msgSend(v19, "setTextAlignment:", 1);
  v20 = v19;
  v21 = objc_msgSend(v11, "labelColor");
  objc_msgSend(v20, "setTextColor:", v21);

  v22 = *(void **)&v12[v14];
  LODWORD(v23) = 1148846080;
  objc_msgSend(v22, "setContentCompressionResistancePriority:forAxis:", 0, v23);
  objc_msgSend(v12, "addSubview:", v22);
  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v24 = objc_msgSend(v22, "centerXAnchor");
  v25 = objc_msgSend(v12, "centerXAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  objc_msgSend(v26, "setActive:", 1);
  v27 = objc_msgSend(*(id *)&v12[v14], "centerYAnchor");
  v28 = objc_msgSend(v12, "centerYAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  objc_msgSend(v29, "setActive:", 1);
  v30 = objc_msgSend(v12, "heightAnchor");
  v31 = objc_msgSend(v30, "constraintEqualToConstant:", *(double *)&qword_1004AF148);

  objc_msgSend(v31, "setActive:", 1);
  v32 = objc_msgSend(v12, "widthAnchor");
  v33 = objc_msgSend(*(id *)&v12[v14], "widthAnchor");
  if (qword_10047A800 != -1)
    swift_once(&qword_10047A800, sub_100012D98);
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:constant:", v33, *(double *)&qword_1004AF150);

  objc_msgSend(v34, "setActive:", 1);
  return v12;
}

id sub_1001302F8()
{
  return sub_100045D08(type metadata accessor for SketchLabel);
}

uint64_t type metadata accessor for SketchLabel()
{
  return objc_opt_self(_TtC7Measure11SketchLabel);
}

void sub_100130360()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, __n128);
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, __n128);
  __n128 v11;
  _BYTE v12[128];

  inited = swift_initStackObject(v0, v12);
  *(_BYTE *)(inited + 72) = 0;
  *(_QWORD *)(inited + 80) = 0;
  *(_DWORD *)(inited + 88) = 0;
  *(_QWORD *)(inited + 96) = 0;
  *(_QWORD *)(inited + 104) = 0;
  v2 = sub_10000EDC8(&qword_10047ECF0);
  KeyPath = swift_getKeyPath(&unk_1003B8878);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v4 = qword_1004AF890;
  v5 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v2 + 272);
  v6 = swift_retain();
  *(_QWORD *)(inited + 112) = v5(KeyPath, v4, v6);
  v7 = sub_10000EDC8(&qword_10047D010);
  v8 = swift_getKeyPath(&unk_1003B88A0);
  v9 = qword_1004AF890;
  v10 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v7 + 272);
  v11 = swift_retain();
  *(_QWORD *)(inited + 120) = v10(v8, v9, v11);
  swift_release();
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002DLL, 0x80000001003D7D70, "Measure/PrivacyController.swift", 31, 2, 36, 0);
  __break(1u);
}

uint64_t sub_100130494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 112);
  swift_retain(v2);
  StateValue.ifUpdated(_:)(sub_100130D60, v1);
  swift_release(v2);
  v3 = *(_QWORD *)(v1 + 120);
  swift_retain(v3);
  StateValue.ifUpdated(_:)(sub_100130D64, v1);
  return swift_release(v3);
}

uint64_t sub_1001304F4()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 88, v2, 33, 0);
  os_unfair_lock_lock((os_unfair_lock_t)(v0 + 88));
  if ((*(_BYTE *)(v0 + 72) & 1) == 0
    && *(_BYTE *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC7Measure11PrivacyView_blurred) == 1
    && !*(_QWORD *)(v0 + 80))
  {
    *(_QWORD *)(v0 + 80) = 1;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v0 + 88));
  return swift_endAccess(v2);
}

double sub_100130578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  __n128 v11;
  void *v12;
  __n128 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (os_unfair_lock_s *)(v0 + 88);
  swift_beginAccess(v0 + 88, aBlock, 33, 0);
  os_unfair_lock_lock((os_unfair_lock_t)(v0 + 88));
  swift_endAccess(aBlock);
  if ((*(_BYTE *)(v0 + 72) & 1) == 0
    && *(_BYTE *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC7Measure11PrivacyView_blurred) == 1)
  {
    v10 = *(_QWORD *)(v0 + 80);
    if (v10)
    {
      if (v10 == 1)
      {
        *(_QWORD *)(v0 + 80) = 2;
      }
      else
      {
        sub_100049274();
        v20 = static OS_dispatch_queue.main.getter(v11);
        aBlock[4] = sub_100130D68;
        aBlock[5] = v0;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10003ECA0;
        aBlock[3] = &unk_1004470C0;
        v12 = _Block_copy(aBlock);
        swift_retain();
        v13 = swift_release();
        static DispatchQoS.unspecified.getter(v13);
        aBlock[0] = _swiftEmptyArrayStorage;
        v14 = sub_100030E1C();
        v15 = sub_10000EDC8((uint64_t *)&unk_10047E430);
        v16 = sub_100030E64();
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v15, v16, v1, v14);
        v17 = (void *)v20;
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
        _Block_release(v12);

        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
  }
  swift_beginAccess(v9, aBlock, 33, 0);
  os_unfair_lock_unlock(v9);
  *(_QWORD *)&result = swift_endAccess(aBlock).n128_u64[0];
  return result;
}

double sub_1001307B8(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  void *v20;
  void *v21;
  __n128 v22;
  void *v23;
  __n128 v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  void **aBlock;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  void *v34;
  uint64_t (*v35)();
  uint64_t v36;

  v5 = v4;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (os_unfair_lock_s *)(v5 + 88);
  swift_beginAccess(v5 + 88, &aBlock, 33, 0);
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 88));
  swift_endAccess(&aBlock);
  v17 = *(_QWORD *)(v5 + 96);
  v18 = *(_QWORD *)(v5 + 104);
  *(_QWORD *)(v5 + 96) = a3;
  *(_QWORD *)(v5 + 104) = a4;
  sub_1000217BC(v17, v18);
  if ((a1 & 1) == 0)
  {
    if ((*(_BYTE *)(*(_QWORD *)(v5 + 64) + OBJC_IVAR____TtC7Measure11PrivacyView_blurred) & 1) != 0)
    {
      if ((a2 & 1) != 0)
      {
        sub_100049274();
        v22 = swift_retain();
        v20 = (void *)static OS_dispatch_queue.main.getter(v22);
        v35 = sub_100130D68;
        v36 = v5;
        aBlock = _NSConcreteStackBlock;
        v32 = 1107296256;
        v21 = &unk_1004470E8;
        goto LABEL_7;
      }
      *(_BYTE *)(v5 + 72) = 0;
      *(_QWORD *)(v5 + 80) = 0;
    }
LABEL_9:
    swift_retain();
    goto LABEL_10;
  }
  if ((*(_BYTE *)(*(_QWORD *)(v5 + 64) + OBJC_IVAR____TtC7Measure11PrivacyView_blurred) & 1) != 0)
    goto LABEL_9;
  *(_BYTE *)(v5 + 72) = 1;
  sub_100049274();
  v19 = swift_retain();
  v20 = (void *)static OS_dispatch_queue.main.getter(v19);
  v35 = sub_100130D9C;
  v36 = v5;
  aBlock = _NSConcreteStackBlock;
  v32 = 1107296256;
  v21 = &unk_100447110;
LABEL_7:
  v33 = sub_10003ECA0;
  v34 = v21;
  v23 = _Block_copy(&aBlock);
  swift_retain();
  v24 = swift_release();
  static DispatchQoS.unspecified.getter(v24);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v25 = sub_100030E1C();
  v26 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v27 = sub_100030E64();
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v26, v27, v10, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v30);
LABEL_10:
  swift_beginAccess(v16, &aBlock, 33, 0);
  os_unfair_lock_unlock(v16);
  *(_QWORD *)&result = swift_endAccess(&aBlock).n128_u64[0];
  return result;
}

double sub_100130A80()
{
  uint64_t v0;
  double result;

  sub_1000217BC(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100130AAC(uint64_t a1)
{
  uint64_t v1;

  v1 = StateObserver.deinit(a1);

  sub_1000217BC(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
  swift_release();
  swift_release();
  return swift_deallocClassInstance(v1, 128, 7);
}

uint64_t type metadata accessor for PrivacyController(uint64_t a1)
{
  uint64_t result;

  result = qword_1004852E0;
  if (!qword_1004852E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PrivacyController);
  return result;
}

uint64_t sub_100130B34(uint64_t a1)
{
  _QWORD v2[7];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = &unk_1003B8848;
  v2[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[3] = (char *)&value witness table for Builtin.Int32 + 64;
  v2[4] = &unk_1003B8860;
  v2[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 256, 7, v2, a1 + 208);
}

uint64_t sub_100130BB8(uint64_t a1, char a2)
{
  void (*v3)(__n128);
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  sub_100130DC8(a2);
  v3 = *(void (**)(__n128))(a1 + 96);
  if (v3)
  {
    v4 = *(_QWORD *)(a1 + 104);
    v5 = swift_retain();
    v3(v5);
    sub_1000217BC((uint64_t)v3, v4);
    v6 = *(_QWORD *)(a1 + 96);
  }
  else
  {
    v6 = 0;
  }
  v7 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  return sub_1000217BC(v6, v7);
}

uint64_t sub_100130C24(void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, __n128);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, __n128);
  __n128 v14;
  id v15;
  _BYTE v17[24];
  void *v18;
  void *v19;

  v2 = (_QWORD *)v1;
  *(_BYTE *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 80) = 0;
  *(_DWORD *)(v1 + 88) = 0;
  *(_QWORD *)(v1 + 96) = 0;
  *(_QWORD *)(v1 + 104) = 0;
  v4 = sub_10000EDC8(&qword_10047ECF0);
  KeyPath = swift_getKeyPath(&unk_1003B8878);
  v6 = qword_10047AD88;
  swift_retain();
  if (v6 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v7 = qword_1004AF890;
  v8 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v4 + 272);
  v9 = swift_retain();
  v2[14] = v8(KeyPath, v7, v9);
  v10 = sub_10000EDC8(&qword_10047D010);
  v11 = swift_getKeyPath(&unk_1003B88A0);
  v12 = qword_1004AF890;
  v13 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v10 + 272);
  v14 = swift_retain();
  v2[15] = v13(v11, v12, v14);
  v2[8] = a1;
  v15 = a1;
  swift_release();
  v18 = &type metadata for Configurations.Default;
  v19 = &protocol witness table for Configurations.Default;
  return StateObserver.init(configuration:)(v17);
}

uint64_t sub_100130D68()
{
  uint64_t v0;

  return sub_100130BB8(v0, 0);
}

uint64_t sub_100130D84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100130D94(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100130D9C()
{
  uint64_t v0;

  return sub_100130BB8(v0, 1);
}

void sub_100130DC8(char a1)
{
  uint64_t v1;
  Swift::String v3;
  void *v4;
  void *v5;
  Swift::String v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  _QWORD v16[6];

  if ((a1 & 1) != 0)
  {
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_blurred) & 1) != 0)
    {
LABEL_15:
      *(_BYTE *)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_blurred) = a1 & 1;
      return;
    }
    if (qword_10047AA70 != -1)
      swift_once(&qword_10047AA70, sub_1000E13E4);
    v3._object = (void *)0x80000001003E13A0;
    v3._countAndFlagsBits = 0xD000000000000014;
    Log.default(_:isPrivate:)(v3, 0);
    v4 = *(void **)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_blurEffectAnimation);
    if (v4)
      objc_msgSend(v4, "stopAnimation:", 1);
    v5 = *(void **)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_visualEffectView);
    if (v5)
    {
      objc_msgSend(v5, "setAlpha:", 1.0);
      goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
    if (!*(_BYTE *)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_blurred))
      goto LABEL_15;
    if (qword_10047AA70 != -1)
      swift_once(&qword_10047AA70, sub_1000E13E4);
    v6._countAndFlagsBits = 0xD000000000000015;
    v6._object = (void *)0x80000001003E1380;
    Log.default(_:isPrivate:)(v6, 0);
    v7 = *(void **)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_visualEffectView);
    if (!v7)
      goto LABEL_15;
    v8 = swift_allocObject(&unk_100447168, 24, 7);
    *(_QWORD *)(v8 + 16) = v7;
    v9 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    v16[4] = sub_1001312E0;
    v16[5] = v8;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_10003ECA0;
    v16[3] = &unk_100447180;
    v10 = _Block_copy(v16);
    v11 = v7;
    swift_release();
    v12 = objc_msgSend(v9, "initWithDuration:dampingRatio:animations:", v10, 0.3, 1.0);
    _Block_release(v10);
    v13 = OBJC_IVAR____TtC7Measure11PrivacyView_blurEffectAnimation;
    v14 = *(void **)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_blurEffectAnimation);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_blurEffectAnimation) = v12;

    v15 = *(void **)(v1 + v13);
    if (v15)
    {
      objc_msgSend(v15, "startAnimation");

      goto LABEL_15;
    }
  }
  __break(1u);
}

char *sub_10013101C(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  char *result;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  v4[OBJC_IVAR____TtC7Measure11PrivacyView_blurred] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC7Measure11PrivacyView_visualEffectView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC7Measure11PrivacyView_blurEffectAnimation] = 0;
  v10 = static CGSize.* infix(_:_:)(a3, a4, 3.0);
  v12 = v11;
  v21.receiver = v4;
  v21.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, v10, v11);
  v14 = (void *)objc_opt_self(UIBlurEffect);
  v15 = (char *)v13;
  v16 = objc_msgSend(v14, "effectWithStyle:", 4);
  v17 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v16);
  v18 = OBJC_IVAR____TtC7Measure11PrivacyView_visualEffectView;
  v19 = *(void **)&v15[OBJC_IVAR____TtC7Measure11PrivacyView_visualEffectView];
  *(_QWORD *)&v15[OBJC_IVAR____TtC7Measure11PrivacyView_visualEffectView] = v17;

  result = *(char **)&v15[v18];
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  objc_msgSend(result, "setFrame:", a1, a2, v10, v12);
  result = *(char **)&v15[v18];
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = (char *)objc_msgSend(result, "setAlpha:", 0.0);
  if (*(_QWORD *)&v15[v18])
  {
    objc_msgSend(v15, "addSubview:");
    objc_msgSend(v15, "setUserInteractionEnabled:", 0);

    return v15;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PrivacyView()
{
  return objc_opt_self(_TtC7Measure11PrivacyView);
}

uint64_t sub_1001312BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1001312E0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 0.0);
}

uint64_t sub_1001312F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100131304(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10013130C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_100131314(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 24);
    return 0;
  }
  return result;
}

void **sub_100131390(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  char *v9;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  char *v15;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = (char *)*a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (void **)&v9[(v6 & 0xF8 ^ 0x1F8) & (v6 + 16)];
    swift_retain(v9);
  }
  else
  {
    v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v15 = v9;
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_10013144C(id *a1, uint64_t a2)
{

  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((unint64_t)a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

void **sub_100131490(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v11 = v4;
  v10(v8, v9, v5);
  return a1;
}

void **sub_100131500(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

_QWORD *sub_10013156C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void **sub_1001315BC(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_100131624(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1001316F8 + 4 * byte_1003B88D0[(v9 - 1)]))();
}

void sub_100131768(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = &dword_100000004;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for QueueLocal(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100026F70(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for QueueLocal);
}

uint64_t storeEnumTagSinglePayload for CardContainerLockingState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001319B4 + 4 * byte_1003B8905[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001319E8 + 4 * byte_1003B8900[v4]))();
}

uint64_t sub_1001319E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001319F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001319F8);
  return result;
}

uint64_t sub_100131A04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100131A0CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100131A10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100131A18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardContainerLockingState()
{
  return &type metadata for CardContainerLockingState;
}

Swift::Int sub_100131A34(char a1)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  if (a1)
  {
    if (a1 == 1)
      v2 = 0xD000000000000010;
    else
      v2 = 0xD000000000000011;
    if (a1 == 1)
      v3 = 0x80000001003D68A0;
    else
      v3 = 0x80000001003D68C0;
  }
  else
  {
    v3 = 0xEC00000074686769;
    v2 = 0x65486E6F73726550;
  }
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

Swift::Int sub_100131AE0(char a1)
{
  Swift::UInt64 v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4);
  if (a1)
    v2 = qword_1003B89D0[a1];
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_100131B38(uint64_t a1, char a2)
{
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6);
  if (a2)
  {
    if (a2 == 1)
      v3 = 0xD000000000000010;
    else
      v3 = 0xD000000000000011;
    if (a2 == 1)
      v4 = 0x80000001003D68A0;
    else
      v4 = 0x80000001003D68C0;
  }
  else
  {
    v4 = 0xEC00000074686769;
    v3 = 0x65486E6F73726550;
  }
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

Swift::Int sub_100131BE0(uint64_t a1, char a2)
{
  Swift::UInt64 v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  if (a2)
    v3 = qword_1003B89D0[a2];
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

BOOL sub_100131C34(char *a1, char *a2)
{
  return dbl_1003B89E8[*a1] == dbl_1003B89E8[*a2];
}

Swift::Int sub_100131C58()
{
  char *v0;

  return sub_100131AE0(*v0);
}

void sub_100131C60()
{
  _BYTE *v0;
  Swift::UInt64 v1;

  if (*v0)
    v1 = qword_1003B89D0[(char)*v0];
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

Swift::Int sub_100131C9C(uint64_t a1)
{
  char *v1;

  return sub_100131BE0(a1, *v1);
}

double *sub_100131CA4@<X0>(double *result@<X0>, char *a2@<X8>)
{
  double v2;
  char v3;

  v2 = *result;
  if (*result == 0.0)
  {
    *a2 = 0;
  }
  else if (v2 == 1.0)
  {
    *a2 = 1;
  }
  else
  {
    if (v2 == -1.0)
      v3 = 2;
    else
      v3 = 3;
    *a2 = v3;
  }
  return result;
}

double sub_100131CEC@<D0>(double *a1@<X8>)
{
  char *v1;
  double result;

  result = dbl_1003B89E8[*v1];
  *a1 = result;
  return result;
}

unint64_t sub_100131D08()
{
  unint64_t result;

  result = qword_1004854D8;
  if (!qword_1004854D8)
  {
    result = swift_getWitnessTable(&unk_1003B89A4, &type metadata for CardContainerLockingState);
    atomic_store(result, (unint64_t *)&qword_1004854D8);
  }
  return result;
}

id SCNSegmentationDebugger.segmentedTexture.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___segmentedTexture;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___segmentedTexture);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___segmentedTexture);
  }
  else
  {
    v4 = v0;
    v5 = objc_allocWithZone((Class)type metadata accessor for SegmentationProcessor.SegmentedTexture(0));
    v6 = (void *)SurfaceTexture.init(width:height:backgroundColor:)(192, 256, 0xFFFFFFFFLL);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_100131DC8()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSString v5;
  void *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointContainerNode;
  v2 = *(void **)&v0[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointContainerNode];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointContainerNode];
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)SCNNode), "init");
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setName:", v5);

    v6 = (void *)objc_opt_self(SCNTransaction);
    objc_msgSend(v6, "begin");
    objc_msgSend(v0, "addChildNode:", v4);
    objc_msgSend(v6, "commit");
    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_100131EB4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  char *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  NSString v9;
  void *v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointTrail;
  v2 = *(void **)&v0[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointTrail];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointTrail];
  }
  else
  {
    v4 = v0;
    v5 = objc_allocWithZone((Class)type metadata accessor for SCNSegmentationDebugger.DebugPointTrail());
    swift_retain();
    sub_100132980(v6);
    v8 = v7;
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v8, "setName:", v9);

    v10 = (void *)objc_opt_self(SCNTransaction);
    objc_msgSend(v10, "begin");
    objc_msgSend(v4, "addChildNode:", v8);
    objc_msgSend(v10, "commit");
    v11 = *(void **)&v4[v1];
    *(_QWORD *)&v4[v1] = v8;
    v3 = v8;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

uint64_t sub_100131FB8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;

  v1 = OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointPool;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointPool])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointPool];
  }
  else
  {
    v3 = v0;
    v4 = swift_allocObject(&unk_100447338, 24, 7);
    *(_QWORD *)(v4 + 16) = v3;
    v5 = swift_allocObject(&unk_100447360, 32, 7);
    *(_QWORD *)(v5 + 16) = sub_1001338EC;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_10000EDC8(&qword_10047BDD0);
    swift_allocObject(v6, 64, 7);
    v7 = v3;
    v2 = ObjectPool.init(allocator:deallocator:synchronized:)(sub_100018140, v5, 0, 0, 0);
    *(_QWORD *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id SCNSegmentationDebugger.__allocating_init(sceneView:processor:)(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v6;
  uint64_t v7;

  v6 = objc_allocWithZone(v3);
  return SCNSegmentationDebugger.init(sceneView:processor:)(a1, v7, a3);
}

id SCNSegmentationDebugger.init(sceneView:processor:)(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  double v13;
  id v14;
  NSString v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  objc_super v30;

  v6 = OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___segmentedTexture;
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___segmentedTexture] = 0;
  v7 = OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointContainerNode;
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointContainerNode] = 0;
  v8 = OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointTrail;
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointTrail] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointPool] = 0;
  v9 = objc_opt_self(ARSCNView);
  v10 = swift_dynamicCastObjCClass(a1, v9);
  if (v10)
  {
    v11 = (void *)v10;
    *(_QWORD *)&v3[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger_sceneView] = v10;
    *(_QWORD *)&v3[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger_processor] = a3;
    v30.receiver = v3;
    v30.super_class = (Class)type metadata accessor for SCNSegmentationDebugger();
    v12 = a1;
    *(_QWORD *)&v13 = swift_retain().n128_u64[0];
    v14 = objc_msgSendSuper2(&v30, "init", v13);
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "setName:", v15, v30.receiver, v30.super_class);

    v16 = (void *)objc_opt_self(SCNTransaction);
    objc_msgSend(v16, "begin");
    v17 = objc_msgSend(v11, "scene");
    v18 = objc_msgSend(v17, "rootNode");

    objc_msgSend(v18, "addChildNode:", v14);
    v19 = objc_msgSend(v16, "commit");
    v20 = *(uint64_t (**)(void))(*(_QWORD *)a3 + 592);
    v21 = ((uint64_t (*)(id))v20)(v19);
    if ((*(_QWORD *)SegmentationProcessor.DebugOptions.showSegmentedBackground.unsafeMutableAddressor() & ~v21) == 0
      || (v22 = v20(),
          (*(_QWORD *)SegmentationProcessor.DebugOptions.showNormalsBackground.unsafeMutableAddressor() & ~v22) == 0))
    {
      v23 = objc_msgSend(v11, "scene");
      v24 = objc_msgSend(v23, "background");

      v25 = SCNSegmentationDebugger.segmentedTexture.getter();
      v26 = (*(uint64_t (**)(void))((swift_isaMask & *v25) + 0x110))();

      objc_msgSend(v24, "setContents:", v26);
      swift_unknownObjectRelease(v26);
    }

    swift_release();
  }
  else
  {
    v27 = v3;

    swift_release();
    swift_release();
    v28 = type metadata accessor for SCNSegmentationDebugger();
    swift_deallocPartialClassInstance(v27, v28, 56, 7);
    return 0;
  }
  return v14;
}

uint64_t type metadata accessor for SCNSegmentationDebugger()
{
  return objc_opt_self(_TtC7Measure23SCNSegmentationDebugger);
}

Swift::Void __swiftcall SCNSegmentationDebugger.clearPoints()()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v0 = (void *)objc_opt_self(SCNTransaction);
  objc_msgSend(v0, "begin");
  v1 = sub_100131FB8();
  v2 = sub_100131DC8();
  v3 = objc_msgSend(v2, "childNodes");

  v4 = sub_100018148(0, &qword_10047BCE8, SCNNode_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 216))(v5);
  swift_release();
  swift_bridgeObjectRelease(v5);
  v6 = sub_100131DC8();
  SCNNode.removeAllChildren()();

  objc_msgSend(v0, "commit");
}

void SCNSegmentationDebugger.addPoint(transform:normal:color:opacity:)(Swift::UInt32 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, double a7)
{
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  Class isa;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v29;

  v9 = (void *)objc_opt_self(SCNTransaction);
  objc_msgSend(v9, "begin");
  v10 = sub_100131FB8();
  (*(void (**)(id *__return_ptr))(*(_QWORD *)v10 + 200))(&v29);
  swift_release();
  v11 = v29;
  objc_msgSend(v29, "setOpacity:", a7);
  v12 = objc_msgSend(v11, "geometry");
  if (!v12)
    goto LABEL_13;
  v13 = v12;
  v14 = objc_msgSend(v12, "materials");

  v15 = sub_100018148(0, (unint64_t *)&qword_10048A110, SCNMaterial_ptr);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  if (!((unint64_t)v16 >> 62))
  {
    if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_12:
    swift_bridgeObjectRelease(v16);
    goto LABEL_13;
  }
  if (v16 < 0)
    v21 = v16;
  else
    v21 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v16);
  v22 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v16);
  if (!v22)
    goto LABEL_12;
LABEL_4:
  if ((v16 & 0xC000000000000001) != 0)
  {
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v17 = *(id *)(v16 + 32);
LABEL_7:
    v18 = v17;
    v19 = objc_msgSend(v17, "diffuse", swift_bridgeObjectRelease(v16).n128_f64[0]);

    sub_100018148(0, &qword_10047D0A0, UIColor_ptr);
    isa = UIColor.init(argb:)(a1).super.isa;
    objc_msgSend(v19, "setContents:", isa);

LABEL_13:
    SCNNode.setForwardDirection(direction:)(objc_msgSend(v11, "setSimdWorldTransform:", a2.n128_f64[0], a3.n128_f64[0], a4.n128_f64[0], a5.n128_f64[0], *(_OWORD *)&a2, *(_OWORD *)&a3, *(_OWORD *)&a4, *(_OWORD *)&a5), a6);
    v23 = sub_100131DC8();
    objc_msgSend(v23, "addChildNode:", v11);

    objc_msgSend(v9, "commit");
    return;
  }
  __break(1u);
}

void SCNSegmentationDebugger.updateTrail(headTransform:)(uint64_t a1)
{
  id v1;
  id v2;
  __n128 v3;
  __n128 v4;
  __n128 v5;
  __n128 v6;
  _OWORD v7[4];
  char v8;

  sub_1000F3C80(a1, (uint64_t)v7);
  if ((v8 & 1) == 0)
  {
    v5 = (__n128)v7[1];
    v6 = (__n128)v7[0];
    v3 = (__n128)v7[3];
    v4 = (__n128)v7[2];
    v1 = sub_100131EB4();
    PointTrail.setHeadPosition(_:)(v6, v5, v4, v3);

  }
  v2 = sub_100131EB4();
  SCNSegmentationDebugger.DebugPointTrail.updateLabels()();

}

void sub_100132980(uint64_t a1)
{
  _BYTE *v1;
  double v2;
  char *v3;
  char *v4;
  void *v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  void *v24;
  uint64_t v25;
  char *v26;
  id v27;
  id v28;
  char v29[24];
  _BYTE v30[24];
  objc_super v31;

  *(_QWORD *)&v1[OBJC_IVAR____TtCC7Measure23SCNSegmentationDebugger15DebugPointTrail_processor] = a1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure10PointTrail_pointNodes] = _swiftEmptyArrayStorage;
  *(_DWORD *)&v1[OBJC_IVAR____TtC7Measure10PointTrail_minDistance] = 0;
  *(_DWORD *)&v1[OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate] = 0;
  v1[OBJC_IVAR____TtC7Measure10PointTrail_isStarted] = 0;
  *(_DWORD *)&v1[OBJC_IVAR____TtC7Measure10PointTrail_minDistanceSquared] = 0;
  v31.receiver = v1;
  v31.super_class = (Class)type metadata accessor for PointTrail();
  *(_QWORD *)&v2 = swift_retain().n128_u64[0];
  v3 = (char *)objc_msgSendSuper2(&v31, "init", v2);
  v4 = &v3[OBJC_IVAR____TtC7Measure10PointTrail_pointNodes];
  v28 = (id)objc_opt_self(SCNBox);
  v5 = (void *)objc_opt_self(SCNNode);
  v27 = (id)objc_opt_self(SCNPlane);
  v6 = v3;
  v7 = 30;
  do
  {
    v8 = objc_msgSend(v28, "boxWithWidth:height:length:chamferRadius:", 0.0003, 0.0003, 0.03, 0.0);
    v9 = objc_msgSend(v5, "nodeWithGeometry:", v8);

    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setName:", v10);

    v11 = objc_msgSend(v27, "planeWithWidth:height:", 0.01, 0.01);
    v12 = objc_msgSend(v5, "nodeWithGeometry:", v11);

    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setName:", v13);

    objc_msgSend(v12, "addChildNode:", v9);
    objc_msgSend(v12, "setOpacity:", 0.5);

    objc_msgSend(v12, "setHidden:", 1);
    swift_beginAccess(v4, v30, 33, 0);
    v14 = v12;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
    v16 = *(_QWORD *)((*(_QWORD *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v15 = *(_QWORD *)((*(_QWORD *)v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v16 >= v15 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
    v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
    specialized Array._endMutation()(v17);
    objc_msgSend(v6, "addChildNode:", v14, swift_endAccess(v30).n128_f64[0]);

    --v7;
  }
  while (v7);

  v18 = &v6[OBJC_IVAR____TtC7Measure10PointTrail_minDistance];
  swift_beginAccess(&v6[OBJC_IVAR____TtC7Measure10PointTrail_minDistance], v30, 1, 0);
  *(_DWORD *)v18 = 1008981770;
  *(_DWORD *)&v6[OBJC_IVAR____TtC7Measure10PointTrail_minDistanceSquared] = 953267991;
  v19 = &v6[OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate];
  swift_beginAccess(&v6[OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate], v29, 1, 0);
  *(_DWORD *)v19 = 981668463;
  v20 = *(_QWORD *)&v6[OBJC_IVAR____TtC7Measure10PointTrail_pointNodes];
  if (!((unint64_t)v20 >> 62))
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    v22 = v6;
    swift_bridgeObjectRetain(v20);
    if (v21)
      goto LABEL_7;
LABEL_15:
    swift_bridgeObjectRelease(v20);
    __break(1u);
    goto LABEL_16;
  }
  if (v20 < 0)
    v25 = *(_QWORD *)&v6[OBJC_IVAR____TtC7Measure10PointTrail_pointNodes];
  else
    v25 = v20 & 0xFFFFFFFFFFFFFF8;
  v26 = v6;
  swift_bridgeObjectRetain(v20);
  if (!_CocoaArrayWrapper.endIndex.getter(v25))
    goto LABEL_15;
LABEL_7:
  if ((v20 & 0xC000000000000001) != 0)
  {
LABEL_16:
    v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v20);
    goto LABEL_10;
  }
  if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v23 = *(id *)(v20 + 32);
LABEL_10:
    v24 = v23;
    swift_bridgeObjectRelease(v20);
    objc_msgSend(v24, "setOpacity:", 1.0);

    swift_release();
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall SCNSegmentationDebugger.DebugPointTrail.updateLabels()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  double v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  double v18;
  double v19;
  char v20;
  double v21;
  double v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  Swift::UInt32 v28;
  Class isa;
  uint64_t v30;
  unint64_t v31;
  char v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(id);
  unsigned __int32 v38;
  _BYTE v39[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC7Measure10PointTrail_pointNodes);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Measure10PointTrail_pointNodes, v39, 0, 0);
  v2 = *v1;
  if ((unint64_t)v2 >> 62)
  {
LABEL_34:
    if (v2 < 0)
      v35 = v2;
    else
      v35 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v35);
    if (v3)
      goto LABEL_3;
LABEL_38:
    swift_bridgeObjectRelease(v2);
    return;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  v4 = swift_bridgeObjectRetain(v2);
  if (!v3)
    goto LABEL_38;
LABEL_3:
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC7Measure23SCNSegmentationDebugger15DebugPointTrail_processor);
  v6 = v2 & 0xC000000000000001;
  v7 = 4;
  v36 = v2;
  v37 = *(uint64_t (**)(id))(*(_QWORD *)v5 + 952);
  while (1)
  {
    v38 = v4.n128_u32[3];
    v0 = v7 - 4;
    if (v6)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v2);
    else
      v8 = *(id *)(v2 + 8 * v7);
    v9 = v8;
    v10 = v7 - 3;
    if (__OFADD__(v0, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v11 = objc_msgSend(v8, "geometry");
    if (!v11)
    {
      v16 = 0;
      goto LABEL_18;
    }
    v13 = v11;
    v14 = objc_msgSend(v11, "materials");

    v15 = sub_100018148(0, (unint64_t *)&qword_10048A110, SCNMaterial_ptr);
    v0 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

    if ((unint64_t)v0 >> 62)
    {
      if (v0 < 0)
        v34 = v0;
      else
        v34 = v0 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v0);
      v16 = (void *)_CocoaArrayWrapper.endIndex.getter(v34);
      swift_bridgeObjectRelease(v0);
      if (v16)
      {
LABEL_12:
        if ((v0 & 0xC000000000000001) != 0)
        {
          v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v0);
        }
        else
        {
          if (!*(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_33;
          v17 = *(id *)(v0 + 32);
        }
        v16 = v17;
      }
    }
    else
    {
      v16 = *(void **)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v16)
        goto LABEL_12;
    }
    *(_QWORD *)&v12 = swift_bridgeObjectRelease(v0).n128_u64[0];
LABEL_18:
    v18 = COERCE_DOUBLE(v37(objc_msgSend(v9, "simdWorldPosition", v12, v36)));
    if ((v20 & 1) != 0)
      break;
    v21 = v18;
    v22 = v19;
    v23 = (*(uint64_t (**)(_QWORD, double, double))(*(_QWORD *)v5 + 976))(0, v18, v19);
    if (!(_BYTE)v23 || v23 == 33)
      break;
    if (!v16)
      goto LABEL_40;
    v26 = v23;
    v27 = objc_msgSend(v16, "diffuse");
    sub_100018148(0, &qword_10047D0A0, UIColor_ptr);
    v28 = SegmentationResult.Label.debugColor.getter(v26);
    isa = UIColor.init(argb:)(v28).super.isa;
    objc_msgSend(v27, "setContents:", isa);

    v30 = (*(uint64_t (**)(double, double))(*(_QWORD *)v5 + 1008))(v21, v22);
    v2 = v36;
    if ((v32 & 1) == 0)
    {
      v33.n128_u64[0] = v30;
      v33.n128_u64[1] = v31;
      SCNNode.setForwardDirection(direction:)(v30, v33);
    }
LABEL_4:

    ++v7;
    v4.n128_u32[3] = v38;
    if (v10 == v3)
      goto LABEL_38;
  }
  if (v16)
  {
    v24 = objc_msgSend(v16, "diffuse");
    v25 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    objc_msgSend(v24, "setContents:", v25);

    goto LABEL_4;
  }
  __break(1u);
LABEL_40:
  __break(1u);
}

void SCNSegmentationDebugger.DebugPointTrail.init(numberOfPoints:nodeCreator:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Measure.DebugPointTrail", 23, "init(numberOfPoints:nodeCreator:)", 33, 0);
  __break(1u);
}

uint64_t sub_10013317C()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCC7Measure23SCNSegmentationDebugger15DebugPointTrail_processor));
}

id SCNSegmentationDebugger.DebugPointTrail.__deallocating_deinit()
{
  return sub_100045D08(type metadata accessor for SCNSegmentationDebugger.DebugPointTrail);
}

void SCNSegmentationDebugger.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Measure.SCNSegmentationDebugger", 31, "init()", 6, 0);
  __break(1u);
}

id SCNSegmentationDebugger.__deallocating_deinit()
{
  return sub_100045D08(type metadata accessor for SCNSegmentationDebugger);
}

id sub_100133284()
{
  return SCNSegmentationDebugger.segmentedTexture.getter();
}

id sub_1001332A4@<X0>(void *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  id v6;
  id result;

  v6 = objc_allocWithZone((Class)type metadata accessor for SCNSegmentationDebugger());
  result = SCNSegmentationDebugger.init(sceneView:processor:)(a1, (uint64_t)v6, a2);
  *a3 = result;
  return result;
}

void sub_1001332F0()
{
  SCNSegmentationDebugger.clearPoints()();
}

void sub_100133310(Swift::UInt32 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, double a7)
{
  SCNSegmentationDebugger.addPoint(transform:normal:color:opacity:)(a1, a2, a3, a4, a5, a6, a7);
}

void sub_100133330(uint64_t a1)
{
  id v1;
  id v2;
  __n128 v3;
  __n128 v4;
  __n128 v5;
  __n128 v6;
  _OWORD v7[4];
  char v8;

  sub_1000F3C80(a1, (uint64_t)v7);
  if ((v8 & 1) == 0)
  {
    v5 = (__n128)v7[1];
    v6 = (__n128)v7[0];
    v3 = (__n128)v7[3];
    v4 = (__n128)v7[2];
    v1 = sub_100131EB4();
    PointTrail.setHeadPosition(_:)(v6, v5, v4, v3);

  }
  v2 = sub_100131EB4();
  SCNSegmentationDebugger.DebugPointTrail.updateLabels()();

}

void (*sub_1001333AC(void (**a1)(id *), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100133454(v6, a2, a3);
  return sub_100026CF0;
}

void (*sub_100133400(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1001334C0(v6, a2, a3);
  return sub_100026CF0;
}

void (*sub_100133454(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s7Measure11MotionStateVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_1001334C0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for MotionState;
  }
  __break(1u);
  return result;
}

id sub_10013352C()
{
  id v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  id v5;
  NSString v6;

  v0 = objc_msgSend((id)objc_opt_self(SCNBox), "boxWithWidth:height:length:chamferRadius:", 0.0003, 0.0003, 0.015, 0.0);
  v1 = (void *)objc_opt_self(SCNNode);
  v2 = objc_msgSend(v1, "nodeWithGeometry:", v0);

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setName:", v3);

  objc_msgSend(v2, "position");
  objc_msgSend(v2, "setPosition:");
  v4 = objc_msgSend((id)objc_opt_self(SCNPlane), "planeWithWidth:height:", 0.005, 0.005);
  v5 = objc_msgSend(v1, "nodeWithGeometry:", v4);

  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setName:", v6);

  objc_msgSend(v5, "addChildNode:", v2);
  return v5;
}

void _s7Measure23SCNSegmentationDebuggerC12observeValue10forKeyPath2of6change7contextySSSg_ypSgSDySo05NSKeye6ChangeG0aypGSgSvSgtF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_BYTE *, _QWORD);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  id v18;
  void *v19;
  _BYTE v20[32];
  uint64_t v21;

  if (a2)
  {
    v3 = v2;
    v6 = (_QWORD *)SegmentationProcessor.DebugOptions.keyForFeature.unsafeMutableAddressor();
    v7 = *v6;
    if (*(_QWORD *)(*v6 + 16))
    {
      swift_bridgeObjectRetain(*v6);
      swift_bridgeObjectRetain(a2);
      v8 = sub_1000C80A8(a1, a2);
      if ((v9 & 1) == 0)
      {
        swift_bridgeObjectRelease(a2);
        swift_bridgeObjectRelease(v7);
        return;
      }
      v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(v7);
      sub_100018148(0, (unint64_t *)&unk_100481BB0, NSUserDefaults_ptr);
      v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger_processor);
      v21 = v10;
      v12 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v11 + 608))(v20);
      v14 = v13;
      v15 = sub_100133914();
      v16 = static NSUserDefaults.update<A>(_:key:feature:)(v14, a1, a2, &v21, &type metadata for SegmentationProcessor.DebugOptions, v15);
      v17 = v12(v20, 0);
      if (*(_QWORD *)SegmentationProcessor.DebugOptions.showSampledPoints.unsafeMutableAddressor(v17) == v10)
      {
        v18 = sub_100131DC8();
      }
      else
      {
        if (*(_QWORD *)SegmentationProcessor.DebugOptions.showUnprojectedTrail.unsafeMutableAddressor() != v10)
          return;
        v18 = sub_100131EB4();
      }
      v19 = v18;
      objc_msgSend(v18, "setHidden:", (v16 & 1) == 0);

    }
  }
}

uint64_t type metadata accessor for SCNSegmentationDebugger.DebugPointTrail()
{
  return objc_opt_self(_TtCC7Measure23SCNSegmentationDebugger15DebugPointTrail);
}

id sub_100133864@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = SCNSegmentationDebugger.segmentedTexture.getter();
  *a1 = result;
  return result;
}

void sub_10013388C(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___segmentedTexture);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___segmentedTexture) = *a1;
  v3 = v2;

}

uint64_t sub_1001338C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001338F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100133914()
{
  unint64_t result;

  result = qword_100485568;
  if (!qword_100485568)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SegmentationProcessor.DebugOptions, &type metadata for SegmentationProcessor.DebugOptions);
    atomic_store(result, (unint64_t *)&qword_100485568);
  }
  return result;
}

void sub_10013395C(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, __n128);
  __n128 v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, _QWORD, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  char v27[24];

  v4 = v3;
  KeyPath = swift_getKeyPath(&unk_1003B8AB8);
  v9 = sub_10000EDC8(qword_100485760);
  v10 = qword_10047AD88;
  swift_retain(v4);
  if (v10 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v11 = qword_1004AF890;
  v12 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v9 + 272);
  v13 = swift_retain(qword_1004AF890);
  *(_QWORD *)(v4 + 40) = v12(KeyPath, v11, v13);
  *(_QWORD *)(v4 + 88) = 0;
  *(_BYTE *)(v4 + 96) = 0;
  *(_QWORD *)(v4 + 104) = 0;
  *(_BYTE *)(v4 + 112) = 0;
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 72) = 0;
  *(_WORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 56) = a2;
  *(_QWORD *)(v4 + 120) = a1;
  *(_QWORD *)(v4 + 128) = a3;
  v14 = a1;
  swift_unknownObjectRetain(a3);
  v15 = a2;
  v16 = objc_msgSend(a3, "newDefaultLibrary");
  if (!v16)
  {
    __break(1u);
    goto LABEL_8;
  }
  v17 = v16;
  v18 = sub_100134164(v14, v16);
  swift_unknownObjectRelease(v17);
  if (!v18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  *(_QWORD *)(v4 + 48) = v18;
  v19 = swift_release(v4);
  v20 = MetalNode.init()(v19);
  v21 = &v14[direct field offset for OverlayMetalView.scene];
  swift_beginAccess(&v14[direct field offset for OverlayMetalView.scene], v27, 0, 0);
  v22 = *(_QWORD *)v21;
  if (v22)
  {
    swift_beginAccess(v22 + 16, &v26, 0, 0);
    v23 = *(_QWORD *)(v22 + 16);
    v24 = *(void (**)(uint64_t, _QWORD, uint64_t, __n128))(*(_QWORD *)v23 + 248);
    swift_retain(v20);
    v25 = swift_retain(v23);
    v24(v20, 0, 1, v25);
    swift_release(v23);
    swift_release(v20);

    swift_unknownObjectRelease(a3);
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100133B44(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  void *v5;
  double v6;
  id v7;
  void *v8;
  void (*v9)(_QWORD *__return_ptr, __n128);
  __n128 v10;
  void (*v11)(_QWORD *__return_ptr, __n128);
  __n128 v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat MinY;
  float64x2_t v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat MaxY;
  float64x2_t v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  float64x2_t v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  float64x2_t v34;
  void (*v35)(_QWORD *__return_ptr, __n128);
  __n128 v36;
  char v37;
  void (*v38)(_QWORD *__return_ptr, __n128);
  __n128 v39;
  char v40;
  CGFloat MaxX;
  CGFloat v42;
  CGFloat MinX;
  int32x2_t v44;
  float32x4_t v45;
  CGFloat v46;
  int32x2_t v47;
  float64x2_t v48;
  float64x2_t v49;
  _BYTE v50[24];
  _QWORD v51[68];
  _BYTE v52[24];
  _BYTE v53[24];
  _QWORD v54[68];
  _QWORD __src[68];
  _BYTE __dst[531];
  _BYTE v57[24];
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;

  v2 = v1;
  v4 = (_QWORD *)(*(_QWORD *)(v1 + 120) + direct field offset for OverlayMetalView.scene);
  swift_beginAccess(v4, v57, 0, 0);
  if (!*v4)
    return;
  swift_retain();
  v5 = (void *)MetalScene.makeDefaultRenderPassDescriptor()();
  *(_QWORD *)&v6 = swift_release().n128_u64[0];
  if (!v5)
    return;
  v7 = objc_msgSend(a1, "renderCommandEncoderWithDescriptor:", v5, v6);
  if (!v7)
  {

    return;
  }
  v8 = v7;
  v9 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v1 + 40) + 144);
  v10 = swift_retain();
  v9(__src, v10);
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  sub_1000642CC((uint64_t)__dst);
  if ((__dst[432] & 1) == 0)
  {
    v13 = *(double *)&__dst[424];
    v14 = *(double *)&__dst[416];
    v15 = *(double *)&__dst[408];
    v16 = *(double *)&__dst[400];
    MinX = CGRectGetMinX(*(CGRect *)&__dst[400]);
    v58.origin.x = v16;
    v58.origin.y = v15;
    v58.size.width = v14;
    v58.size.height = v13;
    MinY = CGRectGetMinY(v58);
    v18.f64[0] = MinX;
    v18.f64[1] = MinY;
    v44 = (int32x2_t)vcvt_f32_f64(v18);
    v19 = v16;
    v18.f64[0] = v15;
    v20 = v14;
    v21 = v13;
    MaxX = CGRectGetMaxX(*(CGRect *)((char *)&v18 - 8));
    v59.origin.x = v16;
    v59.origin.y = v15;
    v59.size.width = v14;
    v59.size.height = v13;
    MaxY = CGRectGetMaxY(v59);
    v23.f64[0] = MaxX;
    v23.f64[1] = MaxY;
    v45 = vcvt_hight_f32_f64(v44, v23);
    swift_beginAccess(v1 + 64, v53, 1, 0);
    *(_WORD *)(v1 + 80) = 257;
LABEL_10:
    *(float32x4_t *)(v1 + 64) = v45;
    goto LABEL_11;
  }
  v11 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v1 + 40) + 144);
  v12 = swift_retain();
  v11(v54, v12);
  swift_release();
  memcpy(__src, v54, 0x213uLL);
  sub_1000642CC((uint64_t)__src);
  if ((__src[49] & 1) == 0)
  {
    v24 = *(double *)&__src[48];
    v25 = *(double *)&__src[47];
    v26 = *(double *)&__src[46];
    v27 = *(double *)&__src[45];
    v46 = CGRectGetMinX(*(CGRect *)&__src[45]);
    v60.origin.x = v27;
    v60.origin.y = v26;
    v60.size.width = v25;
    v60.size.height = v24;
    v28 = CGRectGetMinY(v60);
    v29.f64[0] = v46;
    v29.f64[1] = v28;
    v47 = (int32x2_t)vcvt_f32_f64(v29);
    v30 = v27;
    v29.f64[0] = v26;
    v31 = v25;
    v32 = v24;
    v42 = CGRectGetMaxX(*(CGRect *)((char *)&v29 - 8));
    v61.origin.x = v27;
    v61.origin.y = v26;
    v61.size.width = v25;
    v61.size.height = v24;
    v33 = CGRectGetMaxY(v61);
    v34.f64[0] = v42;
    v34.f64[1] = v33;
    v45 = vcvt_hight_f32_f64(v47, v34);
    swift_beginAccess(v1 + 64, v53, 1, 0);
    *(_WORD *)(v1 + 80) = 1;
    goto LABEL_10;
  }
  swift_beginAccess(v1 + 64, v53, 1, 0);
  *(_BYTE *)(v1 + 80) = 0;
LABEL_11:
  v35 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v1 + 40) + 144);
  v36 = swift_retain();
  v35(v54, v36);
  swift_release();
  memcpy(__src, v54, 0x213uLL);
  sub_1000642CC((uint64_t)__src);
  if ((__src[9] & 1) != 0)
  {
    swift_beginAccess(v1 + 64, v52, 1, 0);
    v37 = 0;
  }
  else
  {
    v48 = *(float64x2_t *)&__src[7];
    v37 = 1;
    swift_beginAccess(v2 + 64, v52, 1, 0);
    *(float32x2_t *)(v2 + 88) = vcvt_f32_f64(v48);
  }
  *(_BYTE *)(v2 + 96) = v37;
  v38 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v2 + 40) + 144);
  v39 = swift_retain();
  v38(v51, v39);
  swift_release();
  memcpy(v54, v51, 0x213uLL);
  sub_1000642CC((uint64_t)v54);
  if ((v54[15] & 1) != 0)
  {
    swift_beginAccess(v2 + 64, v51, 1, 0);
    v40 = 0;
  }
  else
  {
    v49 = *(float64x2_t *)&v54[13];
    v40 = 1;
    swift_beginAccess(v2 + 64, v51, 1, 0);
    *(float32x2_t *)(v2 + 104) = vcvt_f32_f64(v49);
  }
  *(_BYTE *)(v2 + 112) = v40;
  objc_msgSend(v8, "setFragmentBytes:length:atIndex:", v2 + 64, 64, 0, swift_beginAccess(v2 + 64, v50, 32, 0).n128_f64[0]);
  objc_msgSend(v8, "setRenderPipelineState:", *(_QWORD *)(v2 + 48), swift_endAccess(v50).n128_f64[0]);
  objc_msgSend(v8, "drawPrimitives:vertexStart:vertexCount:instanceCount:", 4, 0, 4, 1);
  objc_msgSend(v8, "endEncoding");

  swift_unknownObjectRelease(v8);
}

void sub_100133FB8()
{
  _swift_stdlib_reportUnimplementedInitializer("Measure.PersonHeightDebugNode", 29, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_100133FE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));

  return swift_unknownObjectRelease(*(_QWORD *)(v0 + 128));
}

uint64_t sub_100134018()
{
  uint64_t v0;

  v0 = MetalNode.deinit();
  swift_release(*(_QWORD *)(v0 + 40));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 128));
  return swift_deallocClassInstance(v0, 136, 15);
}

uint64_t type metadata accessor for PersonHeightDebugNode()
{
  return objc_opt_self(_TtC7Measure21PersonHeightDebugNode);
}

__n128 initializeWithCopy for PersonHeightDebugNode.PassedUniforms(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PersonHeightDebugNode.PassedUniforms(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonHeightDebugNode.PassedUniforms(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonHeightDebugNode.PassedUniforms()
{
  return &type metadata for PersonHeightDebugNode.PassedUniforms;
}

uint64_t sub_100134164(void *a1, void *a2)
{
  id v4;
  NSString v5;
  id v6;
  NSString v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t result;
  void *v18;
  uint64_t v19;
  id v20;

  v4 = objc_msgSend(objc_allocWithZone((Class)MTLRenderPipelineDescriptor), "init");
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(a2, "newFunctionWithName:", v5);

  objc_msgSend(v4, "setVertexFunction:", v6);
  swift_unknownObjectRelease(v6);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(a2, "newFunctionWithName:", v7);

  if (!v8)
  {
    __break(1u);
    goto LABEL_10;
  }
  objc_msgSend(v4, "setFragmentFunction:", v8);
  swift_unknownObjectRelease(v8);
  v9 = objc_msgSend(v4, "colorAttachments");
  v10 = objc_msgSend(v9, "objectAtIndexedSubscript:", 0);

  if (!v10)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
  }
  objc_msgSend(v10, "setPixelFormat:", objc_msgSend(a1, "colorPixelFormat"));

  v11 = objc_msgSend(v4, "colorAttachments");
  v12 = objc_msgSend(v11, "objectAtIndexedSubscript:", 0);

  if (!v12)
    goto LABEL_11;
  objc_msgSend(v12, "setBlendingEnabled:", 0);

  v13 = objc_msgSend(a1, "device");
  if (!v13)
  {

    return 0;
  }
  v14 = v13;
  v20 = 0;
  v15 = objc_msgSend(v13, "newRenderPipelineStateWithDescriptor:error:", v4, &v20);
  swift_unknownObjectRelease(v14);
  v16 = v20;
  if (v15)
  {

    return (uint64_t)v15;
  }
  v18 = v16;
  v19 = _convertNSErrorToError(_:)();

  swift_willThrow();
  result = swift_unexpectedError(v19, "Measure/PersonHeightDebugNode.swift", 35, 1, 119);
  __break(1u);
  return result;
}

uint64_t sub_100134400(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    result = swift_initClassMetadata2(a1, 0, 2, v4, a1 + 104);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100134478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v9[24];

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v2 = type metadata accessor for Optional(0, v1);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v9[-v4 - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(&v9[-v4 - 8], 1, 1, v1);
  v6 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  swift_beginAccess(v6, v9, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v3 + 40))(v6, v5, v2);
  return swift_endAccess(v9);
}

uint64_t sub_100134540()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[24];

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (uint64_t)v0 + *(_QWORD *)(v1 + 104);
  swift_beginAccess(v6, v9, 0, 0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v6, 1, v2);
  if (!(_DWORD)result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
    v8 = *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 112));
    dispatch thunk of Subscriber.receive(_:)(&v8, v2, *(_QWORD *)(v1 + 96));
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

double sub_100134620()
{
  double result;

  swift_retain();
  sub_100134540();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100134648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  v2 = type metadata accessor for Optional(0, *(_QWORD *)(*(_QWORD *)v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_1001346A0()
{
  uint64_t v0;

  sub_100134648();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for UIControlSubscription(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100026F70(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UIControlSubscription);
}

uint64_t sub_1001346D0()
{
  return sub_100134478();
}

uint64_t sub_1001346F0()
{
  return CustomCombineIdentifierConvertible<>.combineIdentifier.getter();
}

uint64_t sub_100134710(uint64_t a1)
{
  return swift_getWitnessTable(&unk_1003B8B90, a1);
}

uint64_t sub_100134720(uint64_t a1)
{
  return swift_getWitnessTable(&unk_1003B8B68, a1);
}

uint64_t type metadata accessor for UIControlPublisher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100026F70(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UIControlPublisher);
}

void *sub_10013473C()
{
  return &protocol witness table for Never;
}

uint64_t sub_100134748(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t *v12;
  _QWORD v14[5];

  v11 = type metadata accessor for UIControlSubscription(0, a5, a4, a6);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v12 = sub_100134824(a1, a2, a3);
  v14[3] = v11;
  v14[4] = swift_getWitnessTable(&unk_1003B8BB8, v11);
  v14[0] = v12;
  dispatch thunk of Subscriber.receive(subscription:)(v14, a5, a6);
  return sub_10000F690(v14);
}

uint64_t sub_100134810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100134748(a1, *(void **)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(a4 + 16), a2, a3);
}

uint64_t *sub_100134824(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _BYTE v17[24];

  v16 = a3;
  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 80);
  v8 = type metadata accessor for Optional(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = &v17[-v10 - 8];
  v12 = (char *)v3 + *(_QWORD *)(v6 + 104);
  v13 = *(_QWORD *)(v7 - 8);
  v14 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v14(v12, 1, 1, v7);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v7);
  v14(v11, 0, 1, v7);
  swift_beginAccess(v12, v17, 33, 0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 40))(v12, v11, v8);
  swift_endAccess(v17);
  *(uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 112)) = (uint64_t)a2;
  objc_msgSend(a2, "addTarget:action:forControlEvents:", v3, "eventHandler", v16);
  return v3;
}

void sub_10013495C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v12;
  void *Strong;
  void *v14;
  unsigned __int8 v15;
  uint64_t v16;
  char **v17;
  void *v18;
  NSString v19;
  unsigned int v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  NSString v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  NSString v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  NSString v37;
  id v38;

  v12 = v9 + OBJC_IVAR____TtC7Measure19SecondaryLabelStack_topLabel;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v9 + OBJC_IVAR____TtC7Measure19SecondaryLabelStack_topLabel, a2);
  v14 = Strong;
  if ((a9 & 1) == 0)
  {
    if (!Strong)
    {
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v20 = objc_msgSend(Strong, "isHidden");

    if (v20)
    {
      v22 = (void *)swift_unknownObjectWeakLoadStrong(v12, v21);
      if (!v22)
      {
LABEL_30:
        __break(1u);
        return;
      }
      v23 = v22;
      objc_msgSend(v22, "setHidden:", 0);

    }
    v24 = swift_unknownObjectWeakLoadStrong(v12, v21);
    if (!v24)
      goto LABEL_27;
    v25 = (void *)v24;
    v26 = String._bridgeToObjectiveC()();
    objc_msgSend(v25, "setText:", v26);

    v28 = swift_unknownObjectWeakLoadStrong(v12, v27);
    if (!v28)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v29 = (void *)v28;
    if (a4)
      v19 = String._bridgeToObjectiveC()();
    else
      v19 = 0;
    v17 = &selRef_renderer_didAddNode_forAnchor_;
    objc_msgSend(v29, "setAccessibilityLabel:", v19);

    goto LABEL_16;
  }
  if (!Strong)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v15 = objc_msgSend(Strong, "isHidden");

  v17 = &selRef_renderer_didAddNode_forAnchor_;
  if ((v15 & 1) == 0)
  {
    v18 = (void *)swift_unknownObjectWeakLoadStrong(v12, v16);
    if (!v18)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v19 = v18;
    objc_msgSend(v18, "setHidden:", 1);
LABEL_16:

  }
  v30 = v9 + OBJC_IVAR____TtC7Measure19SecondaryLabelStack_bottomLabel;
  v31 = swift_unknownObjectWeakLoadStrong(v30, v16);
  if (!v31)
  {
    __break(1u);
    goto LABEL_24;
  }
  v32 = (void *)v31;
  v33 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "setText:", v33);

  v35 = swift_unknownObjectWeakLoadStrong(v30, v34);
  if (!v35)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v36 = (void *)v35;
  if (a8)
    v37 = String._bridgeToObjectiveC()();
  else
    v37 = 0;
  v38 = v37;
  objc_msgSend(v36, v17[111]);

}

void sub_100134B8C(uint64_t a1, uint64_t a2, uint64_t a3, NSString a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  char *v12;
  id v13;
  NSString v14;
  char *v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;

  v12 = *(char **)(v9 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel);
  objc_msgSend(v12, "setHidden:", a9 & 1);
  if ((a9 & 1) == 0)
  {
    v13 = *(id *)&v12[OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label];
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setText:", v14);

    if (a4)
      a4 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setAccessibilityLabel:", a4);

  }
  v15 = *(char **)(v9 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel);
  v16 = *(id *)&v15[OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label];
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setText:", v17);

  if (a8)
    v18 = String._bridgeToObjectiveC()();
  else
    v18 = 0;
  v19 = v18;
  objc_msgSend(v15, "setAccessibilityLabel:");

}

void sub_100134D00()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = *(char **)&v0[OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label], "topAnchor");
  v4 = objc_msgSend(v2, "topAnchor");
  v5 = objc_msgSend(v3, "constraintEqualToAnchor:", v4);

  objc_msgSend(v5, "setActive:", 1);
  v30 = (void *)objc_opt_self(NSLayoutConstraint);
  v6 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
  v7 = swift_allocObject(v6, 88, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1003B2900;
  v8 = objc_msgSend(v2, "leadingAnchor");
  v9 = objc_msgSend(v0, "leadingAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v7 + 32) = v10;
  v11 = objc_msgSend(v2, "trailingAnchor");
  v12 = objc_msgSend(v0, "trailingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v7 + 40) = v13;
  v14 = objc_msgSend(v2, "bottomAnchor");
  v15 = objc_msgSend(v0, "bottomAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v7 + 48) = v16;
  v17 = objc_msgSend(v2, "topAnchor");
  v18 = objc_msgSend(v1, "bottomAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v7 + 56) = v19;
  v20 = objc_msgSend(v1, "leadingAnchor");
  v21 = objc_msgSend(v0, "leadingAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v7 + 64) = v22;
  v23 = objc_msgSend(v1, "trailingAnchor");
  v24 = objc_msgSend(v0, "trailingAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v7 + 72) = v25;
  v26 = objc_msgSend(v1, "topAnchor");
  v27 = objc_msgSend(v0, "topAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v7 + 80) = v28;
  specialized Array._endMutation()(v29);
  sub_10002277C();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v30, "activateConstraints:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

}

char *sub_1001350FC(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  objc_class *v11;
  id v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  char *v17;
  void *v18;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  v10 = OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel;
  v11 = (objc_class *)type metadata accessor for SecondaryLabelStackLabel();
  v12 = objc_allocWithZone(v11);
  v13 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel;
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(v11), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v20.receiver = v13;
  v20.super_class = ObjectType;
  v15 = (char *)objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  v16 = *(void **)&v15[OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel];
  v17 = v15;
  objc_msgSend(v16, "setUserInteractionEnabled:", 1);
  v18 = *(void **)&v17[OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel];
  objc_msgSend(v18, "setUserInteractionEnabled:", 1);
  objc_msgSend(v17, "addSubview:", v16);
  objc_msgSend(v17, "addSubview:", v18);
  sub_100134D00();

  return v17;
}

char *sub_100135284(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  objc_class *v5;
  id v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  char *v12;
  void *v13;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel;
  v5 = (objc_class *)type metadata accessor for SecondaryLabelStackLabel();
  v6 = objc_allocWithZone(v5);
  v7 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v6, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel;
  *(_QWORD *)&v7[v8] = objc_msgSend(objc_allocWithZone(v5), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v15.receiver = v7;
  v15.super_class = ObjectType;
  v9 = (char *)objc_msgSendSuper2(&v15, "initWithCoder:", a1);
  v10 = v9;
  if (v9)
  {
    v11 = *(void **)&v9[OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel];
    v12 = v9;
    objc_msgSend(v11, "setUserInteractionEnabled:", 1);
    v13 = *(void **)&v12[OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel];
    objc_msgSend(v13, "setUserInteractionEnabled:", 1);
    objc_msgSend(v12, "addSubview:", v11);
    objc_msgSend(v12, "addSubview:", v13);
    sub_100134D00();

  }
  return v10;
}

uint64_t type metadata accessor for NewSecondaryLabelStack()
{
  return objc_opt_self(_TtC7Measure22NewSecondaryLabelStack);
}

id sub_1001355A4(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  id v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_topLabel], 0);
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_bottomLabel], 0);
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_topView], 0);
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_bottomView], 0);
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_stackView], 0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_contentView] = 0;
  v12.receiver = v4;
  v12.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v12, "initWithFrame:", a1, a2, a3, a4);
  sub_100135698();

  return v10;
}

void sub_100135698()
{
  char *v0;
  id v1;
  NSString v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  char *v10;
  void *Strong;
  void *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;

  v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v2 = String._bridgeToObjectiveC()();

  v3 = OBJC_IVAR____TtC7Measure19SecondaryLabelStack_contentView;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_contentView])
  {
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(v0, "addSubview:");
  v4 = *(void **)&v0[v3];
  if (!v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v5 = v4;
  objc_msgSend(v0, "bounds");
  objc_msgSend(v5, "setFrame:");

  sub_1000ED270();
  v7 = v6;
  v9 = v8;
  v10 = &v0[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_topLabel];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_topLabel], v8);
  if (!Strong)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v12 = Strong;
  objc_msgSend(Strong, "setFont:", v7);

  v13 = &v0[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_bottomLabel];
  v15 = (void *)swift_unknownObjectWeakLoadStrong(v13, v14);
  if (!v15)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v16 = v15;
  objc_msgSend(v15, "setFont:", v7);

  v18 = (void *)swift_unknownObjectWeakLoadStrong(v10, v17);
  if (!v18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v19 = v18;
  objc_msgSend(v18, "setTextColor:", v9);

  v21 = (void *)swift_unknownObjectWeakLoadStrong(v13, v20);
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, "setTextColor:", v9);

    return;
  }
LABEL_13:
  __break(1u);
}

id sub_10013587C(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  double v4;
  id v5;
  id v6;
  id v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_topLabel], 0);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_bottomLabel], 0);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_topView], 0);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_bottomView], 0);
  *(_QWORD *)&v4 = swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_stackView], 0).n128_u64[0];
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_contentView] = 0;
  v9.receiver = v1;
  v9.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v9, "initWithCoder:", a1, v4);
  v6 = v5;
  if (v5)
  {
    v7 = v5;
    sub_100135698();

  }
  return v6;
}

uint64_t type metadata accessor for SecondaryLabelStack()
{
  return objc_opt_self(_TtC7Measure19SecondaryLabelStack);
}

id sub_100135B70()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TouchPassThroughView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TouchPassThroughView()
{
  return objc_opt_self(_TtC7Measure20TouchPassThroughView);
}

char *PointTrail.init(numberOfPoints:nodeCreator:)(uint64_t a1, uint64_t (*a2)(void))
{
  _BYTE *v2;
  char *result;
  char *v6;
  char *v7;
  void *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  _BYTE v14[24];
  objc_super v15;

  *(_QWORD *)&v2[OBJC_IVAR____TtC7Measure10PointTrail_pointNodes] = _swiftEmptyArrayStorage;
  *(_DWORD *)&v2[OBJC_IVAR____TtC7Measure10PointTrail_minDistance] = 0;
  *(_DWORD *)&v2[OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate] = 0;
  v2[OBJC_IVAR____TtC7Measure10PointTrail_isStarted] = 0;
  *(_DWORD *)&v2[OBJC_IVAR____TtC7Measure10PointTrail_minDistanceSquared] = 0;
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for PointTrail();
  result = (char *)objc_msgSendSuper2(&v15, "init");
  if (a1 < 0)
  {
    __break(1u);
  }
  else if (a1)
  {
    v6 = &result[OBJC_IVAR____TtC7Measure10PointTrail_pointNodes];
    v13 = result;
    v7 = result;
    do
    {
      v8 = (void *)a2();
      objc_msgSend(v8, "setHidden:", 1);
      swift_beginAccess(v6, v14, 33, 0);
      v9 = v8;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v11 = *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v10 = *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v11 >= v10 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
      v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
      specialized Array._endMutation()(v12);
      objc_msgSend(v7, "addChildNode:", v9, swift_endAccess(v14).n128_f64[0]);

      --a1;
    }
    while (a1);

    return v13;
  }
  return result;
}

uint64_t type metadata accessor for PointTrail()
{
  return objc_opt_self(_TtC7Measure10PointTrail);
}

uint64_t PointTrail.pointNodes.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC7Measure10PointTrail_pointNodes);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Measure10PointTrail_pointNodes, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

float PointTrail.minDistance.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC7Measure10PointTrail_minDistance;
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Measure10PointTrail_minDistance, v3, 0, 0);
  return *(float *)v1;
}

float PointTrail.minDistance.setter(float a1)
{
  uint64_t v1;
  float *v3;
  float result;
  _BYTE v5[24];

  v3 = (float *)(v1 + OBJC_IVAR____TtC7Measure10PointTrail_minDistance);
  swift_beginAccess(v1 + OBJC_IVAR____TtC7Measure10PointTrail_minDistance, v5, 1, 0);
  *v3 = a1;
  result = a1 * a1;
  *(float *)(v1 + OBJC_IVAR____TtC7Measure10PointTrail_minDistanceSquared) = a1 * a1;
  return result;
}

void (*PointTrail.minDistance.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC7Measure10PointTrail_minDistance;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_100135EA4;
}

void sub_100135EA4(_QWORD *a1, char a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
    *(float *)(v3[3] + OBJC_IVAR____TtC7Measure10PointTrail_minDistanceSquared) = *(float *)(v3[3] + v3[4])
                                                                                * *(float *)(v3[3] + v3[4]);
  free(v3);
}

float PointTrail.stretchingRate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate, v3, 0, 0);
  return *(float *)v1;
}

uint64_t PointTrail.stretchingRate.setter(float a1)
{
  uint64_t v1;
  float *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (float *)(v1 + OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate);
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*PointTrail.stretchingRate.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t PointTrail.setStartPosition(_:)(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  _BYTE v17[24];

  v15 = a3;
  v16 = a4;
  v13 = a1;
  v14 = a2;
  v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC7Measure10PointTrail_pointNodes);
  swift_beginAccess(v4 + OBJC_IVAR____TtC7Measure10PointTrail_pointNodes, v17, 0, 0);
  v6 = *v5;
  if (!((unint64_t)v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v6);
    if (v7)
      goto LABEL_3;
LABEL_13:
    result = swift_bridgeObjectRelease(v6);
    *(_BYTE *)(v4 + OBJC_IVAR____TtC7Measure10PointTrail_isStarted) = 1;
    return result;
  }
  if (v6 < 0)
    v12 = v6;
  else
    v12 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  result = _CocoaArrayWrapper.endIndex.getter(v12);
  v7 = result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v6);
      else
        v10 = *(id *)(v6 + 8 * v9 + 32);
      v11 = v10;
      ++v9;
      objc_msgSend(v10, "setSimdTransform:", v13.n128_f64[0], v14.n128_f64[0], v15.n128_f64[0], v16.n128_f64[0], *(_OWORD *)&v13, *(_OWORD *)&v14, *(_OWORD *)&v15, *(_OWORD *)&v16);
      objc_msgSend(v11, "setHidden:", 0);

    }
    while (v7 != v9);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void PointTrail.setHeadPosition(_:)(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  float *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  float32x4_t v17;
  float32x4_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  int32x4_t v24;
  float32x2_t v25;
  float32x2_t v26;
  float32x2_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  float *v41;
  float *v42;
  float32x4_t v43;
  float32x4_t v44;
  _BYTE v45[24];
  _BYTE v46[24];
  _BYTE v47[32];

  v39 = a3;
  v40 = a4;
  v37 = a1;
  v38 = a2;
  v5 = (_BYTE *)OBJC_IVAR____TtC7Measure10PointTrail_isStarted;
  v6 = v4 + OBJC_IVAR____TtC7Measure10PointTrail_pointNodes;
  v7 = v4 + OBJC_IVAR____TtC7Measure10PointTrail_pointNodes;
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC7Measure10PointTrail_isStarted) != 1)
  {
    swift_beginAccess(v7, v47, 0, 0);
    v6 = *(_QWORD *)v6;
    if ((unint64_t)v6 >> 62)
      goto LABEL_39;
    v28 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v6);
    if (v28)
      goto LABEL_21;
LABEL_43:
    swift_bridgeObjectRelease(v6);
    v5[v4] = 1;
    return;
  }
  swift_beginAccess(v7, v47, 0, 0);
  v8 = *(_QWORD *)v6;
  if (*(_QWORD *)v6 >> 62)
    goto LABEL_33;
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  v10 = v9 - 1;
  if (__OFSUB__(v9, 1))
    goto LABEL_38;
  while (2)
  {
    v11 = OBJC_IVAR____TtC7Measure10PointTrail_minDistanceSquared;
    v12 = (float *)(v4 + OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate);
    v42 = (float *)(v4 + OBJC_IVAR____TtC7Measure10PointTrail_minDistance);
    swift_beginAccess(v4 + OBJC_IVAR____TtC7Measure10PointTrail_minDistance, v46, 0, 0);
    v41 = v12;
    swift_beginAccess(v12, v45, 0, 0);
    v8 = 0;
    while (1)
    {
      v13 = v10 - 1;
      if (v10 <= 1)
      {
        if ((v10 != 1) | v8 & 1)
        {
          v32 = *(_QWORD *)v6;
          if ((v32 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain(v32);
            v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v32);
            swift_bridgeObjectRelease(v32);
          }
          else
          {
            if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_46;
            }
            v33 = *(id *)(v32 + 32);
          }
          objc_msgSend(v33, "setSimdTransform:", v37.n128_f64[0], v38.n128_f64[0], v39.n128_f64[0], v40.n128_f64[0], *(_OWORD *)&v37, *(_OWORD *)&v38, *(_OWORD *)&v39, *(_OWORD *)&v40);

          return;
        }
        v8 = 1;
        v14 = 1;
      }
      else
      {
        v14 = v10 - 1;
      }
      v15 = *(_QWORD *)v6;
      if ((*(_QWORD *)v6 & 0xC000000000000001) == 0)
        break;
      swift_bridgeObjectRetain(*(_QWORD *)v6);
      v5 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v15);
      swift_bridgeObjectRelease(v15);
      v15 = *(_QWORD *)v6;
      if ((*(_QWORD *)v6 & 0xC000000000000001) != 0)
      {
LABEL_18:
        swift_bridgeObjectRetain(v15);
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 1, v15);
        swift_bridgeObjectRelease(v15);
        goto LABEL_15;
      }
LABEL_13:
      if (v13 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_32;
      v16 = *(id *)(v15 + 8 * v13 + 32);
LABEL_15:
      objc_msgSend(v5, "simdPosition", *(_OWORD *)&v37, *(_OWORD *)&v38, *(_OWORD *)&v39, *(_OWORD *)&v40);
      v43 = v17;
      objc_msgSend(v16, "simdPosition");
      v19 = vsubq_f32(v43, v18);
      v20 = vmulq_f32(v19, v19);
      if (*(float *)(v4 + v11) < (float)(v20.f32[2] + vaddv_f32(*(float32x2_t *)v20.f32)))
      {
        objc_msgSend(v5, "simdPosition");
        v44 = v21;
        objc_msgSend(v16, "simdTransform");
        objc_msgSend(v5, "setSimdTransform:");
        objc_msgSend(v16, "simdPosition");
        v23 = vsubq_f32(v22, v44);
        v24 = (int32x4_t)vmulq_f32(v23, v23);
        v24.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v24, 2), vadd_f32(*(float32x2_t *)v24.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v24.i8, 1))).u32[0];
        v25 = vrsqrte_f32((float32x2_t)v24.u32[0]);
        v26 = vmul_f32(v25, vrsqrts_f32((float32x2_t)v24.u32[0], vmul_f32(v25, v25)));
        v44.i64[0] = vmulq_n_f32(v23, vmul_f32(v26, vrsqrts_f32((float32x2_t)v24.u32[0], vmul_f32(v26, v26))).f32[0]).u64[0];
        objc_msgSend(v16, "simdPosition");
        objc_msgSend(v5, "setSimdPosition:", COERCE_DOUBLE(vsub_f32(v27, vmul_n_f32(*(float32x2_t *)v44.f32, *v42 + (float)(*v41 * (float)v10)))));
      }

      v10 = v14;
    }
    if ((unint64_t)v10 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v5 = *(id *)(v15 + 8 * v10 + 32);
      if ((v15 & 0xC000000000000001) != 0)
        goto LABEL_18;
      goto LABEL_13;
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    if (v8 < 0)
      v34 = v8;
    else
      v34 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v35 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v8);
    v10 = v35 - 1;
    if (!__OFSUB__(v35, 1))
      continue;
    break;
  }
LABEL_38:
  __break(1u);
LABEL_39:
  if (v6 < 0)
    v36 = v6;
  else
    v36 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v28 = _CocoaArrayWrapper.endIndex.getter(v36);
  if (!v28)
    goto LABEL_43;
LABEL_21:
  if (v28 >= 1)
  {
    v29 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v6);
      else
        v30 = *(id *)(v6 + 8 * v29 + 32);
      v31 = v30;
      ++v29;
      objc_msgSend(v30, "setSimdTransform:", v37.n128_f64[0], v38.n128_f64[0], v39.n128_f64[0], v40.n128_f64[0], *(_OWORD *)&v37, *(_OWORD *)&v38, *(_OWORD *)&v39, *(_OWORD *)&v40);
      objc_msgSend(v31, "setHidden:", 0);

    }
    while (v28 != v29);
    goto LABEL_43;
  }
LABEL_46:
  __break(1u);
}

uint64_t sub_100136554(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (uint64_t *)(*a2 + OBJC_IVAR____TtC7Measure10PointTrail_pointNodes);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v4);
}

char *PointTrail.__allocating_init(numberOfPoints:nodeCreator:)(uint64_t a1, uint64_t (*a2)(void))
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return PointTrail.init(numberOfPoints:nodeCreator:)(a1, a2);
}

void PointTrail.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Measure.PointTrail", 18, "init()", 6, 0);
  __break(1u);
}

id PointTrail.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PointTrail();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100136748@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC7Measure10PointTrail_pointNodes);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return swift_bridgeObjectRetain(v4);
}

uint64_t initializeBufferWithCopyOfBuffer for PlatterState(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PlatterState(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for PlatterState(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlatterState()
{
  return &type metadata for PlatterState;
}

uint64_t sub_1001368D0()
{
  uint64_t result;

  result = Contexts.UIKit.init()();
  qword_1004AF6C8 = result;
  return result;
}

id sub_1001368EC@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_10047AB90 != -1)
    swift_once(&qword_10047AB90, sub_1001368D0);
  v2 = (void *)qword_1004AF6C8;
  *a1 = qword_1004AF6C8;
  return v2;
}

BOOL sub_10013693C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a1[1] ^ a2[1] | a2[2] ^ a1[2]) & 1) == 0;
}

unint64_t sub_100136974(uint64_t a1)
{
  unint64_t result;

  result = sub_100136998();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100136998()
{
  unint64_t result;

  result = qword_1004859A0;
  if (!qword_1004859A0)
  {
    result = swift_getWitnessTable(&unk_1003B8D08, &type metadata for PlatterState);
    atomic_store(result, (unint64_t *)&qword_1004859A0);
  }
  return result;
}

unint64_t sub_1001369DC@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  if (*(_QWORD *)(a3 + 16) && (result = sub_1000C80A8(result, a2), (v6 & 1) != 0))
  {
    v7 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 48 * result);
    v9 = *v7;
    v8 = v7[1];
    v10 = v7[2];
    v11 = v7[3];
    v12 = v7[4];
    v13 = (void *)v7[5];
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v12);
    result = v13;
  }
  else
  {
    v9 = 0;
    v8 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
  }
  *a4 = v9;
  a4[1] = v8;
  a4[2] = v10;
  a4[3] = v11;
  a4[4] = v12;
  a4[5] = v13;
  return result;
}

void sub_100136A88(uint64_t a1, char **a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t __dst[38];
  uint64_t v21;
  _BYTE v22[304];

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v19 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v8 | (v7 << 6); ; i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * i);
    memcpy(__dst, (const void *)(*(_QWORD *)(a1 + 56) + 304 * i), sizeof(__dst));
    v21 = v13;
    memcpy(v22, __dst, sizeof(v22));
    v14 = *a2;
    sub_1000C2C50(__dst);
    sub_100142584(&v21);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
    *a2 = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_100060538(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
      *a2 = v14;
    }
    v17 = *((_QWORD *)v14 + 2);
    v16 = *((_QWORD *)v14 + 3);
    if (v17 >= v16 >> 1)
    {
      v14 = sub_100060538((char *)(v16 > 1), v17 + 1, 1, v14);
      *a2 = v14;
    }
    *((_QWORD *)v14 + 2) = v17 + 1;
    memcpy(&v14[304 * v17 + 32], __dst, 0x130uLL);
    sub_10013FE7C(__dst);
    if (v6)
      goto LABEL_4;
LABEL_5:
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v10 >= v19)
      goto LABEL_27;
    v11 = *(_QWORD *)(v18 + 8 * v10);
    ++v7;
    if (!v11)
    {
      v7 = v10 + 1;
      if (v10 + 1 >= v19)
        goto LABEL_27;
      v11 = *(_QWORD *)(v18 + 8 * v7);
      if (!v11)
      {
        v7 = v10 + 2;
        if (v10 + 2 >= v19)
          goto LABEL_27;
        v11 = *(_QWORD *)(v18 + 8 * v7);
        if (!v11)
        {
          v7 = v10 + 3;
          if (v10 + 3 >= v19)
            goto LABEL_27;
          v11 = *(_QWORD *)(v18 + 8 * v7);
          if (!v11)
            break;
        }
      }
    }
LABEL_20:
    v6 = (v11 - 1) & v11;
  }
  v12 = v10 + 4;
  if (v12 >= v19)
  {
LABEL_27:
    swift_release();
    return;
  }
  v11 = *(_QWORD *)(v18 + 8 * v12);
  if (v11)
  {
    v7 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v19)
      goto LABEL_27;
    v11 = *(_QWORD *)(v18 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_100136CF8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for UUID(0);
  sub_1000477C8(v0, qword_1004AF6D0);
  v1 = sub_1000362E8(v0, (uint64_t)qword_1004AF6D0);
  return UUID.init()(v1);
}

uint64_t sub_100136D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + 64))
  {
    v5 = *(_QWORD *)(v1 + 64);
  }
  else
  {
    v6 = *(id *)(v1 + 96);
    static DispatchQoS.userInitiated.getter();
    v7 = type metadata accessor for RectangleDetector(0);
    swift_allocObject(v7, 192, 7);
    v5 = sub_100158504(v6, (uint64_t)v4);

    *(_QWORD *)(v1 + 64) = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

void sub_100136E14(void *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, __n128);
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, __n128);
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t, __n128);
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  _QWORD v82[5];

  v2 = v1;
  v4 = *v1;
  v5 = sub_10000EDC8(&qword_1004816B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000EDC8(&qword_100485BC0);
  v79 = *(_QWORD *)(v8 - 8);
  v80 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[8] = 0;
  *((_BYTE *)v1 + 104) = 0;
  v1[10] = 0;
  v1[11] = 0;
  v1[14] = (uint64_t)_swiftEmptyDictionarySingleton;
  v1[15] = 0;
  v11 = sub_10000EDC8(&qword_10047ECF0);
  KeyPath = swift_getKeyPath(&unk_1003B8EC0);
  v13 = qword_10047AD88;
  swift_retain();
  if (v13 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v14 = qword_1004AF890;
  v15 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v11 + 272);
  v16 = swift_retain();
  v2[16] = v15(KeyPath, v14, v16);
  v17 = sub_10000EDC8(&qword_10047D010);
  v18 = swift_getKeyPath(&unk_1003B8EE8);
  v19 = qword_1004AF890;
  v20 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v17 + 272);
  v21 = swift_retain();
  v2[17] = v20(v18, v19, v21);
  v22 = sub_10000EDC8(&qword_100485BA0);
  v23 = swift_getKeyPath(&unk_1003B8F10);
  v24 = qword_1004AF890;
  v25 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v22 + 272);
  v26 = swift_retain();
  v2[18] = v25(v23, v24, v26);
  v27 = swift_getKeyPath(&unk_1003B8F38);
  v28 = sub_10000EDC8((uint64_t *)&unk_100481B90);
  v29 = qword_1004AF890;
  v30 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v28 + 272);
  v31 = swift_retain();
  v2[19] = v30(v27, v29, v31);
  v32 = swift_getKeyPath(&unk_1003B8F60);
  v33 = sub_10000EDC8(&qword_10047BBA0);
  v34 = qword_1004AF890;
  v35 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v33 + 272);
  v36 = swift_retain();
  v2[20] = v35(v32, v34, v36);
  sub_10000EDC8(&qword_100485BA8);
  v37 = swift_getKeyPath(&unk_1003B8F88);
  v2[21] = MutableStateValue.__allocating_init(_:_:)(v37, v4);
  sub_10000EDC8(&qword_100485BB0);
  v38 = swift_getKeyPath(&unk_1003B8FB0);
  v2[22] = MutableStateValue.__allocating_init(_:_:)(v38, v4);
  sub_10000EDC8(&qword_100485BB8);
  v39 = swift_getKeyPath(&unk_1003B8FD8);
  v2[23] = MutableStateValue.__allocating_init(_:_:)(v39, v4);
  v40 = sub_10000EDC8(&qword_10047D438);
  v41 = swift_getKeyPath(&unk_1003B9000);
  v42 = qword_1004AF890;
  v43 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v40 + 272);
  v44 = swift_retain();
  v2[24] = v43(v41, v42, v44);
  v45 = swift_getKeyPath(&unk_1003B9028);
  v46 = sub_10000EDC8(&qword_100481BA0);
  v47 = qword_1004AF890;
  v48 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v46 + 272);
  v49 = swift_retain();
  v2[25] = v48(v45, v47, v49);
  v50 = type metadata accessor for WorldRectangle(0);
  v2[26] = OrderedDictionary.init()(&type metadata for String, v50, &protocol witness table for String);
  v2[27] = v51;
  v2[28] = v52;
  *(_OWORD *)(v2 + 29) = 0u;
  *(_OWORD *)(v2 + 31) = 0u;
  v2[33] = (uint64_t)_swiftEmptyArrayStorage;
  *((_WORD *)v2 + 136) = 768;
  v53 = sub_10000EDC8(&qword_10047E470);
  swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
  v2[35] = PassthroughSubject.init()(v54);
  v2[12] = (uint64_t)a1;
  v55 = a1;
  v56 = objc_msgSend(v55, "scene");
  v57 = type metadata accessor for RectangleRenderer();
  swift_allocObject(v57, 88, 7);
  v58 = sub_100163E54(v56);

  v2[9] = v58;
  swift_release();
  v82[3] = &type metadata for Configurations.Default;
  v82[4] = &protocol witness table for Configurations.Default;
  v59 = StateObserver.init(configuration:)(v82);
  swift_retain();
  v82[0] = *(_QWORD *)(sub_100136D40() + 64);
  v60 = sub_10000EDC8(&qword_100485BC8);
  v61 = sub_100043310(&qword_100485BD0, &qword_100485BC8, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v62 = Publisher.eraseToAnyPublisher()(v60, v61);
  swift_release();
  v82[0] = v62;
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v63 = (void *)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (*((_QWORD *)&xmmword_1004AF258 + 1))
  {
    v81 = (id)Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
    v64 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v7, 1, 1, v64);
    v65 = v63;
    v66 = sub_10000EDC8(&qword_100485BD8);
    v67 = sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
    v68 = sub_100043310(&qword_100485BE0, &qword_100485BD8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v69 = sub_1000F2D40();
    Publisher.receive<A>(on:options:)(&v81, v7, v66, v67, v68, v69);
    sub_10011995C((uint64_t)v7);

    swift_release();
    v70 = sub_100043310(&qword_100485BE8, &qword_100485BC0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v71 = swift_retain();
    v72 = v80;
    Publisher<>.sink(receiveValue:)(sub_10013FF4C, v59, v80, v70, v71);
    v73 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v79 + 8))(v10, v72, v73);
    swift_beginAccess(v59 + 264, v82, 33, 0);
    v74 = sub_10000EDC8(&qword_10047D9A0);
    v75 = sub_100043310(&qword_10047D9A8, &qword_10047D9A0, (uint64_t)&protocol conformance descriptor for [A]);
    AnyCancellable.store<A>(in:)(v59 + 264, v74, v75);
    swift_endAccess(v82);
    swift_release();
    v76 = swift_allocObject(&unk_100447768, 25, 7);
    *(_QWORD *)(v76 + 16) = v59;
    *(_BYTE *)(v76 + 24) = 3;
    v77 = sub_10000EDC8((uint64_t *)&unk_10047E420);
    swift_allocObject(v77, *(unsigned int *)(v77 + 48), *(unsigned __int16 *)(v77 + 52));
    v78 = swift_retain();
    Future.init(_:)(sub_1000F2ECC, v76, v78);
    swift_release();
    swift_release();

  }
  else
  {
    __break(1u);
  }
}

void sub_1001374E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  int v12;
  char v13;
  __int128 v14;
  char v15;
  char v16;
  int v17;
  char v18;
  char *v19;
  char v20;
  int v21;
  char v22;
  double v23;
  char v24;
  uint64_t v25;
  char v26;
  int v27;
  char v28;
  int v29;
  char v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char v37;
  __int128 v38;
  __int128 v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  char *v44;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v46;
  unint64_t v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t *v59;
  char v60;
  void (*v61)(_QWORD *);
  _QWORD *v62;
  char *v63;
  char *v64;
  unint64_t *v65;
  unint64_t v66;
  char v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  unint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  int v79;
  char v80;
  char v81;
  int v82;
  unint64_t *v83;
  uint64_t v84;
  unint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  int64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  int64_t v93;
  unint64_t v94;
  int64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  int v107;
  int v108;
  int v109;
  char v110;
  float v111;
  float v112;
  uint64_t v113;
  float v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  float v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  unint64_t *v151;
  int64_t v152;
  unint64_t *v153;
  int64_t v154;
  unint64_t v155;
  unint64_t v156;
  char *v157;
  char v158;
  uint64_t v159;
  char v160;
  int v161;
  char v162;
  int v163;
  char v164;
  int v165;
  char v166;
  char v167;
  char v168;
  int v169;
  char v170;
  int v171;
  uint64_t v172;
  int v173;
  char v174;
  char v175;
  char v176;
  int v177;
  char v178;
  char *v179;
  char v180;
  __int128 v181;
  char v182;
  char v183;
  __int128 v184;
  __int128 v185;
  char v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  uint64_t v190;
  __int128 v191;
  __int128 v192;
  uint64_t v193;
  __int128 v194;
  __int128 v195;
  uint64_t v196;
  __int128 v197;
  __int128 v198;
  char v199;
  char v200;
  char v201;
  char v202;
  uint64_t v203;
  __int128 v204;
  __int128 v205;
  char v206;
  char v207;
  __int128 v208;
  __int128 v209;
  char v210;
  __int128 v211;
  char v212;
  char v213;
  char v214;
  int v215;
  int v216;
  uint64_t v217;
  __int128 v218;
  int v219;
  int v220;
  uint64_t v221;
  char v222;
  char v223;
  char v224;
  uint64_t v225;
  uint64_t v226;
  char v227;
  char v228;
  char v229;
  int v230;
  char v231;
  char v232;
  char v233;
  __int128 v234;
  int v235;
  int v236;
  uint64_t v237;
  int v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  uint64_t v247;
  uint64_t v248;
  __int128 v249;
  __int128 v250;
  uint64_t v251;
  __int128 v252;
  __int128 v253;
  uint64_t v254;
  uint64_t v255;
  __int128 v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  uint64_t v265;
  uint64_t v266;
  char v267;
  float v268;
  char v269;
  int v270;
  char v271;
  uint64_t v272;
  char v273;
  uint64_t v274;
  char v275;
  int v276;
  char v277;
  int v278;
  char v279;
  int v280;
  char v281;
  char v282;
  uint64_t v283;
  uint64_t v284;
  char v285;
  int v286;
  char v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  _BYTE v296[7];
  char v297;
  __int16 v298;
  char v299;
  char v300;
  char v301;
  __int16 v302;
  char v303;
  char v304;
  __int16 v305;
  char v306;
  char v307;
  __int16 v308;
  char v309;
  char v310;
  __int16 v311;
  char v312;
  char v313;
  __int16 v314;
  char v315;
  char v316;
  __int16 v317;
  char v318;
  char v319;
  __int16 v320;
  char v321;
  char v322;
  char v323;
  _OWORD v324[19];
  _OWORD v325[19];
  unint64_t *v326;
  char *v327;
  _OWORD __dst[19];
  _OWORD v329[19];
  uint64_t __src[40];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return;
  swift_retain();
  v3 = swift_bridgeObjectRetain(a1);
  sub_10013FF54(v3);
  v5 = v4;
  swift_bridgeObjectRelease(a1);
  swift_release();
  v327 = (char *)v5;
  if (!*(_QWORD *)(v5 + 16))
  {
    v7 = (char *)v5;
    goto LABEL_82;
  }
  memcpy(__dst, (const void *)(v5 + 32), sizeof(__dst));
  sub_1000C2C50((uint64_t *)__dst);
  v6 = (char *)&v327;
  sub_1000649BC(0, 1);
  if (v1 == 1)
  {
    sub_10013BA30((uint64_t)__dst);
    sub_10013FE7C(__dst);
    v7 = v327;
LABEL_82:
    swift_bridgeObjectRelease(v7);
    return;
  }
  v8 = __dst[15];
  v9 = __dst[16];
  v10 = __dst[17];
  v11 = __dst[18];
  v12 = DWORD1(__dst[14]);
  v13 = BYTE8(__dst[14]);
  v14 = __dst[13];
  v15 = __dst[14];
  v16 = BYTE1(__dst[12]);
  v17 = HIDWORD(__dst[11]);
  v18 = __dst[12];
  v19 = (char *)DWORD1(__dst[11]);
  v20 = BYTE8(__dst[11]);
  v21 = HIDWORD(__dst[10]);
  v22 = __dst[11];
  v23 = *(double *)&__dst[10];
  v24 = BYTE8(__dst[10]);
  v25 = *(_QWORD *)((char *)&__dst[9] + 4);
  v26 = BYTE12(__dst[9]);
  v27 = HIDWORD(__dst[8]);
  v28 = __dst[9];
  v29 = DWORD1(__dst[8]);
  v30 = BYTE8(__dst[8]);
  v31 = __dst[8];
  v32 = __dst[4];
  v33 = __dst[5];
  v34 = __dst[7];
  v35 = __dst[6];
  v36 = __dst[2];
  v37 = __dst[3];
  v38 = __dst[1];
  v39 = __dst[0];
  v40 = (char *)_swiftEmptyDictionarySingleton;
  v326 = _swiftEmptyDictionarySingleton;
  v41 = *((_QWORD *)v327 + 2);
  if (v41)
  {
    v170 = BYTE8(__dst[10]);
    v184 = __dst[0];
    v188 = __dst[2];
    v191 = __dst[1];
    v194 = __dst[7];
    v197 = __dst[6];
    v201 = __dst[3];
    v204 = __dst[4];
    v208 = __dst[5];
    v212 = __dst[8];
    v215 = DWORD1(__dst[8]);
    v219 = HIDWORD(__dst[8]);
    v222 = BYTE8(__dst[8]);
    v225 = *(_QWORD *)((char *)&__dst[9] + 4);
    v228 = __dst[9];
    v232 = BYTE12(__dst[9]);
    v235 = HIDWORD(__dst[10]);
    v171 = DWORD1(__dst[11]);
    v173 = HIDWORD(__dst[11]);
    v175 = __dst[14];
    v239 = __dst[13];
    v242 = __dst[15];
    v177 = DWORD1(__dst[14]);
    v182 = BYTE8(__dst[14]);
    v245 = __dst[16];
    v249 = __dst[17];
    v252 = __dst[18];
    v6 = v327 + 32;
    v179 = v327;
    swift_bridgeObjectRetain(v327);
    memcpy(__src, v6, 0x130uLL);
    if ((__src[21] & 1) == 0)
    {
      v19 = (char *)_swiftEmptyDictionarySingleton;
      v42 = 336;
      do
      {
        v43 = *(double *)&__src[20];
        sub_1000C2C50(__src);
        v44 = v19;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v19);
        *(_QWORD *)&v325[0] = v19;
        v47 = sub_1000C827C(v43);
        v48 = *((_QWORD *)v19 + 2);
        v49 = (v46 & 1) == 0;
        v50 = v48 + v49;
        if (__OFADD__(v48, v49))
          goto LABEL_88;
        v51 = v46;
        if (*((_QWORD *)v44 + 3) >= v50)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v13 = v182;
            if ((v46 & 1) == 0)
              goto LABEL_18;
          }
          else
          {
            sub_1000BFE8C();
            v13 = v182;
            if ((v51 & 1) == 0)
              goto LABEL_18;
          }
        }
        else
        {
          sub_1000BA52C(v50, isUniquelyReferenced_nonNull_native);
          v52 = sub_1000C827C(v43);
          if ((v51 & 1) != (v53 & 1))
            goto LABEL_95;
          v47 = v52;
          v13 = v182;
          if ((v51 & 1) == 0)
          {
LABEL_18:
            v6 = *(char **)&v325[0];
            *(_QWORD *)(*(_QWORD *)&v325[0] + 8 * (v47 >> 6) + 64) |= 1 << v47;
            *(double *)(*((_QWORD *)v6 + 6) + 8 * v47) = v43;
            memcpy((void *)(*((_QWORD *)v6 + 7) + 304 * v47), __src, 0x130uLL);
            v54 = *((_QWORD *)v6 + 2);
            v55 = __OFADD__(v54, 1);
            v56 = v54 + 1;
            if (v55)
              goto LABEL_90;
            v19 = v6;
            *((_QWORD *)v6 + 2) = v56;
            goto LABEL_20;
          }
        }
        v19 = *(char **)&v325[0];
        v6 = (char *)(*(_QWORD *)(*(_QWORD *)&v325[0] + 56) + 304 * v47);
        memcpy(v329, v6, sizeof(v329));
        sub_10013FE7C(v329);
        memcpy(v6, __src, 0x130uLL);
LABEL_20:
        swift_bridgeObjectRelease(0x8000000000000000);
        if (!--v41)
          goto LABEL_23;
        v6 = (char *)(v42 + 304);
        memcpy(__src, &v179[v42], 0x130uLL);
        v42 += 304;
      }
      while ((__src[21] & 1) == 0);
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRelease(v179);
    v40 = v19;
    v10 = v249;
    v11 = v252;
    v8 = v242;
    v9 = v245;
    v15 = v175;
    v12 = v177;
    v14 = v239;
    v17 = v173;
    LODWORD(v19) = v171;
    v21 = v235;
    v26 = v232;
    v28 = v228;
    v25 = v225;
    v30 = v222;
    v27 = v219;
    v29 = v215;
    v31 = v212;
    v32 = v204;
    v33 = v208;
    v37 = v201;
    v34 = v194;
    v35 = v197;
    v36 = v188;
    v38 = v191;
    v39 = v184;
    v24 = v170;
  }
  if ((v24 & 1) == 0)
  {
    while (1)
    {
      v325[0] = v39;
      v325[1] = v38;
      v325[2] = v36;
      LOBYTE(v325[3]) = v37 & 1;
      v325[4] = v32;
      v325[5] = v33;
      v325[6] = v35;
      v325[7] = v34;
      LOBYTE(v325[8]) = v31 & 1;
      DWORD1(v325[8]) = v29;
      BYTE8(v325[8]) = v30 & 1;
      HIDWORD(v325[8]) = v27;
      LOBYTE(v325[9]) = v28 & 1;
      *(_QWORD *)((char *)&v325[9] + 4) = v25;
      BYTE12(v325[9]) = v26 & 1;
      *(double *)&v325[10] = v23;
      BYTE8(v325[10]) = 0;
      HIDWORD(v325[10]) = v21;
      LOBYTE(v325[11]) = v22 & 1;
      DWORD1(v325[11]) = (_DWORD)v19;
      BYTE8(v325[11]) = v20 & 1;
      HIDWORD(v325[11]) = v17;
      LOBYTE(v325[12]) = v18 & 1;
      BYTE1(v325[12]) = v16 & 1;
      v325[13] = v14;
      LOBYTE(v325[14]) = v15 & 1;
      DWORD1(v325[14]) = v12;
      BYTE8(v325[14]) = v13 & 1;
      v325[15] = v8;
      v325[16] = v9;
      v325[17] = v10;
      v325[18] = v11;
      memcpy(__src, v325, 0x130uLL);
      v57 = sub_10000EDC8((uint64_t *)&unk_10047E4B0);
      v58 = swift_allocObject(v57, 336, 15);
      *(_OWORD *)(v58 + 16) = xmmword_1003B0BD0;
      memcpy((void *)(v58 + 32), v325, 0x130uLL);
      sub_1000C2C50((uint64_t *)v325);
      v59 = v326;
      v60 = swift_isUniquelyReferenced_nonNull_native(v326);
      *(_QWORD *)&v329[0] = v59;
      sub_1000BD48C(v58, v60, v23);
      v326 = *(unint64_t **)&v329[0];
      swift_bridgeObjectRelease(0x8000000000000000);
      v61 = sub_1001614F4((double ****)v329, v23);
      if (*v62)
      {
        v63 = v327;
        sub_1000C2C50((uint64_t *)v325);
        swift_bridgeObjectRetain(v63);
        v64 = sub_10014135C((uint64_t)__src, (uint64_t)v63);
        swift_bridgeObjectRelease(v63);
        sub_10013FE7C(v325);
        sub_1001001D4(v64);
      }
      ((void (*)(_OWORD *, _QWORD))v61)(v329, 0);
      v65 = v326;
      if (!v326[2])
        break;
      v66 = sub_1000C827C(v23);
      if ((v67 & 1) == 0)
        goto LABEL_86;
      v68 = v65[7];
      v69 = *(_QWORD *)(v68 + 8 * v66);
      v70 = *(_QWORD *)(v69 + 16);
      if (v70)
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v68 + 8 * v66));
        memcpy(v329, (const void *)(v69 + 32), sizeof(v329));
        if ((BYTE8(v329[10]) & 1) != 0)
          goto LABEL_94;
        v71 = *(double *)&v329[10];
        v72 = 336;
        while (1)
        {
          v73 = sub_1000C827C(v71);
          if ((v74 & 1) != 0)
          {
            v75 = v73;
            sub_1000C2C50((uint64_t *)v329);
            *(_QWORD *)&v256 = v40;
            if ((swift_isUniquelyReferenced_nonNull_native(v40) & 1) == 0)
            {
              sub_1000BFE8C();
              v40 = (char *)v256;
            }
            memcpy(v324, (const void *)(*((_QWORD *)v40 + 7) + 304 * v75), sizeof(v324));
            sub_100094CA8(v75, (uint64_t)v40);
            swift_bridgeObjectRelease(0x8000000000000000);
            sub_10013FE7C(v329);
            sub_10013FE7C(v324);
          }
          if (!--v70)
            break;
          memcpy(v329, (const void *)(v69 + v72), sizeof(v329));
          v71 = *(double *)&v329[10];
          v72 += 304;
          if ((BYTE8(v329[10]) & 1) != 0)
            goto LABEL_94;
        }
        swift_bridgeObjectRelease(v69);
      }
      swift_bridgeObjectRelease(v327);
      v327 = (char *)_swiftEmptyArrayStorage;
      v76 = swift_bridgeObjectRetain(v40);
      sub_100136A88(v76, &v327);
      swift_bridgeObjectRelease(v40);
      v6 = v327;
      if (*((_QWORD *)v327 + 2) < 2uLL)
        goto LABEL_44;
      sub_10013FE7C(v325);
      if (!*((_QWORD *)v6 + 2))
        goto LABEL_87;
      memcpy(v329, v6 + 32, sizeof(v329));
      v202 = v329[3];
      v185 = v329[0];
      v189 = v329[2];
      v205 = v329[4];
      v209 = v329[5];
      v213 = v329[8];
      v198 = v329[6];
      v192 = v329[1];
      v195 = v329[7];
      v223 = BYTE8(v329[8]);
      v216 = DWORD1(v329[8]);
      v229 = v329[9];
      v220 = HIDWORD(v329[8]);
      v233 = BYTE12(v329[9]);
      v226 = *(_QWORD *)((char *)&v329[9] + 4);
      v183 = BYTE8(v329[10]);
      v23 = *(double *)&v329[10];
      v180 = v329[11];
      v236 = HIDWORD(v329[10]);
      v77 = BYTE8(v329[11]);
      LODWORD(v19) = DWORD1(v329[11]);
      v78 = v329[12];
      v79 = HIDWORD(v329[11]);
      v80 = BYTE1(v329[12]);
      v81 = v329[14];
      v13 = BYTE8(v329[14]);
      v82 = DWORD1(v329[14]);
      v250 = v329[17];
      v253 = v329[18];
      v246 = v329[16];
      v240 = v329[13];
      v243 = v329[15];
      sub_1000C2C50((uint64_t *)v329);
      v6 = (char *)&v327;
      sub_1000649BC(0, 1);
      v39 = v185;
      v36 = v189;
      v38 = v192;
      v34 = v195;
      v35 = v198;
      v37 = v202;
      v32 = v205;
      v33 = v209;
      v31 = v213;
      v29 = v216;
      v27 = v220;
      v30 = v223;
      v25 = v226;
      v28 = v229;
      v26 = v233;
      v21 = v236;
      v17 = v79;
      v22 = v180;
      v14 = v240;
      v8 = v243;
      v15 = v81;
      v16 = v80;
      v18 = v78;
      v20 = v77;
      v12 = v82;
      v9 = v246;
      v10 = v250;
      v11 = v253;
      if ((v183 & 1) != 0)
        goto LABEL_43;
    }
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  v150 = v6;
  v83 = v326;
  v84 = swift_bridgeObjectRetain(v326);
  v85 = sub_10013F83C(v84);
  swift_bridgeObjectRelease(v83);
  v326 = v85;
  swift_bridgeObjectRelease(v83);
  v151 = v85 + 8;
  v86 = 1 << *((_BYTE *)v85 + 32);
  v87 = -1;
  if (v86 < 64)
    v87 = ~(-1 << v86);
  v155 = v87 & v85[8];
  v152 = (unint64_t)(v86 + 63) >> 6;
  v153 = v85;
  swift_bridgeObjectRetain(v85);
  v88 = 0;
  v157 = (char *)_swiftEmptyArrayStorage;
  v89 = v155;
  if (v155)
  {
LABEL_47:
    v90 = __clz(__rbit64(v89));
    v91 = (v89 - 1) & v89;
    v92 = v90 | (v88 << 6);
    goto LABEL_62;
  }
LABEL_48:
  v93 = v88 + 1;
  if (__OFADD__(v88, 1))
  {
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  if (v93 >= v152)
    goto LABEL_78;
  v94 = v151[v93];
  ++v88;
  if (!v94)
  {
    v88 = v93 + 1;
    if (v93 + 1 >= v152)
      goto LABEL_78;
    v94 = v151[v88];
    if (!v94)
    {
      v88 = v93 + 2;
      if (v93 + 2 >= v152)
        goto LABEL_78;
      v94 = v151[v88];
      if (!v94)
      {
        v95 = v93 + 3;
        if (v95 < v152)
        {
          v94 = v151[v95];
          if (!v94)
          {
            while (1)
            {
              v88 = v95 + 1;
              if (__OFADD__(v95, 1))
                break;
              if (v88 >= v152)
                goto LABEL_78;
              v94 = v151[v88];
              ++v95;
              if (v94)
                goto LABEL_61;
            }
LABEL_91:
            __break(1u);
            goto LABEL_92;
          }
          v88 = v95;
          goto LABEL_61;
        }
LABEL_78:
        swift_release();
        sub_10013FE7C(v325);
        v147 = *((_QWORD *)v157 + 2);
        if (v147)
        {
          v148 = v157 + 32;
          do
          {
            memcpy(v329, v148, sizeof(v329));
            sub_1000C2C50((uint64_t *)v329);
            sub_10013BA30((uint64_t)v329);
            sub_10013FE7C(v329);
            v148 += 304;
            --v147;
          }
          while (v147);
        }
        swift_bridgeObjectRelease(v157);
        v149 = (char *)v326;
        swift_bridgeObjectRelease(v150);
        swift_bridgeObjectRelease(v40);
        v7 = v149;
        goto LABEL_82;
      }
    }
  }
LABEL_61:
  v91 = (v94 - 1) & v94;
  v92 = __clz(__rbit64(v94)) + (v88 << 6);
LABEL_62:
  v96 = *(_QWORD *)(v153[7] + 8 * v92);
  if (!*(_QWORD *)(v96 + 16))
  {
    __break(1u);
    goto LABEL_85;
  }
  v255 = *(_QWORD *)(v96 + 16);
  v154 = v88;
  v156 = v91;
  memcpy(v329, (const void *)(v96 + 32), sizeof(v329));
  v251 = *((_QWORD *)&v329[18] + 1);
  v97 = *(_QWORD *)&v329[18];
  v98 = *((_QWORD *)&v329[17] + 1);
  v99 = *(_QWORD *)&v329[17];
  v100 = *((_QWORD *)&v329[16] + 1);
  v101 = *(_QWORD *)&v329[16];
  v102 = *((_QWORD *)&v329[15] + 1);
  v254 = *(_QWORD *)&v329[15];
  v227 = BYTE8(v329[14]);
  v103 = DWORD1(v329[14]);
  v224 = v329[14];
  v104 = *((_QWORD *)&v329[13] + 1);
  v105 = *(_QWORD *)&v329[13];
  v106 = BYTE1(v329[12]);
  v214 = v329[12];
  v107 = HIDWORD(v329[11]);
  v210 = BYTE8(v329[11]);
  v108 = DWORD1(v329[11]);
  v206 = v329[11];
  v109 = HIDWORD(v329[10]);
  v199 = BYTE8(v329[10]);
  v247 = *(_QWORD *)&v329[10];
  v186 = BYTE12(v329[9]);
  v237 = *(_QWORD *)((char *)&v329[9] + 4);
  v230 = HIDWORD(v329[8]);
  v110 = BYTE8(v329[8]);
  v111 = *((float *)&v329[8] + 1);
  v176 = v329[8];
  v178 = v329[9];
  v221 = *((_QWORD *)&v329[7] + 1);
  v217 = *(_QWORD *)&v329[7];
  v241 = v329[5];
  v244 = v329[6];
  v234 = v329[4];
  v174 = v329[3];
  v203 = *((_QWORD *)&v329[2] + 1);
  v196 = *(_QWORD *)&v329[2];
  v193 = *((_QWORD *)&v329[1] + 1);
  v190 = *(_QWORD *)&v329[1];
  v181 = v329[0];
  v172 = v96;
  swift_bridgeObjectRetain(v96);
  sub_1000C2C50((uint64_t *)v329);
  memcpy(v324, (const void *)(v96 + 32), sizeof(v324));
  if ((BYTE8(v324[8]) & 1) == 0)
  {
    v112 = *((float *)&v324[8] + 1);
    v113 = 336;
    while ((v110 & 1) == 0)
    {
      v114 = v111;
      if (v111 < v112)
      {
        v115 = v102;
        v116 = *(_QWORD *)&v324[15];
        v117 = v101;
        v118 = *((_QWORD *)&v324[15] + 1);
        v119 = v100;
        v120 = *(_QWORD *)&v324[16];
        v121 = v99;
        v122 = *((_QWORD *)&v324[16] + 1);
        v123 = v98;
        v124 = *(_QWORD *)&v324[17];
        v125 = v97;
        v126 = *((_QWORD *)&v324[17] + 1);
        v127 = v324[18];
        v256 = v181;
        v168 = BYTE8(v324[14]);
        v169 = DWORD1(v324[14]);
        v257 = v190;
        v258 = v193;
        v128 = v324[13];
        v259 = v196;
        v167 = v324[14];
        v260 = v203;
        v261 = v174 & 1;
        v165 = HIDWORD(v324[11]);
        v166 = BYTE1(v324[12]);
        v265 = v217;
        v266 = v221;
        v163 = DWORD1(v324[11]);
        v164 = v324[12];
        v267 = v176 & 1;
        v270 = v230;
        v161 = HIDWORD(v324[10]);
        v162 = BYTE8(v324[11]);
        v271 = v178 & 1;
        v160 = v324[11];
        v272 = v237;
        v159 = *(_QWORD *)&v324[10];
        v273 = v186 & 1;
        v158 = BYTE8(v324[10]);
        v274 = v247;
        v248 = *(_QWORD *)((char *)&v324[9] + 4);
        v275 = v199 & 1;
        v200 = BYTE12(v324[9]);
        v276 = v109;
        v238 = HIDWORD(v324[8]);
        v277 = v206 & 1;
        v207 = v324[9];
        v278 = v108;
        v279 = v210 & 1;
        v221 = *((_QWORD *)&v324[7] + 1);
        v129 = *(_QWORD *)&v324[7];
        v280 = v107;
        v231 = v324[8];
        v187 = v324[4];
        v211 = v324[5];
        v218 = v324[6];
        v281 = v214 & 1;
        v282 = v106 & 1;
        v130 = v40;
        v131 = *((_QWORD *)&v324[2] + 1);
        v132 = *(_QWORD *)&v324[2];
        v283 = v105;
        v133 = v324[3];
        v284 = v104;
        v285 = v224 & 1;
        v134 = *((_QWORD *)&v324[1] + 1);
        v135 = *(_QWORD *)&v324[1];
        v286 = v103;
        v287 = v227 & 1;
        v136 = *((_QWORD *)&v324[0] + 1);
        v137 = *(_QWORD *)&v324[0];
        v262 = v234;
        v263 = v241;
        v264 = v244;
        v268 = v111;
        v269 = 0;
        v288 = v254;
        v289 = v115;
        v290 = v117;
        v291 = v119;
        v292 = v121;
        v293 = v123;
        v294 = v125;
        v295 = v251;
        v138 = v113;
        sub_1000C2C50((uint64_t *)v324);
        sub_10013FE7C(&v256);
        v113 = v138;
        *(_QWORD *)&v181 = v137;
        *((_QWORD *)&v181 + 1) = v136;
        v190 = v135;
        v193 = v134;
        v196 = v132;
        v40 = v130;
        v203 = v131;
        v234 = v187;
        v241 = v211;
        v244 = v218;
        v217 = v129;
        v174 = v133;
        v176 = v231;
        v114 = v112;
        v230 = v238;
        v178 = v207;
        v237 = v248;
        v186 = v200;
        v247 = v159;
        v199 = v158;
        v109 = v161;
        v206 = v160;
        v108 = v163;
        v210 = v162;
        v107 = v165;
        v214 = v164;
        v106 = v166;
        v104 = *((_QWORD *)&v128 + 1);
        v105 = v128;
        v224 = v167;
        v103 = v169;
        v227 = v168;
        v254 = v116;
        v102 = v118;
        v101 = v120;
        v100 = v122;
        v99 = v124;
        v98 = v126;
        v251 = *((_QWORD *)&v127 + 1);
        v97 = v127;
      }
      v111 = v114;
      if (v255 == 1)
      {
        swift_bridgeObjectRelease(v172);
        if ((swift_isUniquelyReferenced_nonNull_native(v157) & 1) == 0)
          v157 = sub_100060538(0, *((_QWORD *)v157 + 2) + 1, 1, v157);
        v141 = *((_QWORD *)v157 + 2);
        v140 = *((_QWORD *)v157 + 3);
        if (v141 >= v140 >> 1)
        {
          v146 = sub_100060538((char *)(v140 > 1), v141 + 1, 1, v157);
          v142 = v111;
          v157 = v146;
        }
        else
        {
          v142 = v111;
        }
        v323 = v174 & 1;
        v322 = v176 & 1;
        v316 = v178 & 1;
        v313 = v186 & 1;
        v310 = v199 & 1;
        v307 = v206 & 1;
        v304 = v210 & 1;
        v301 = v214 & 1;
        v300 = v224 & 1;
        v297 = v227 & 1;
        *((_QWORD *)v157 + 2) = v141 + 1;
        v319 = 0;
        v143 = &v157[304 * v141];
        *((_OWORD *)v143 + 2) = v181;
        v143 += 32;
        *((_QWORD *)v143 + 2) = v190;
        *((_QWORD *)v143 + 3) = v193;
        *((_QWORD *)v143 + 4) = v196;
        *((_QWORD *)v143 + 5) = v203;
        v143[48] = v323;
        v144 = *(_QWORD *)&v324[0];
        *((_QWORD *)v143 + 7) = *(_QWORD *)((char *)v324 + 7);
        *(_QWORD *)(v143 + 49) = v144;
        *((_OWORD *)v143 + 4) = v234;
        *((_OWORD *)v143 + 5) = v241;
        *((_OWORD *)v143 + 6) = v244;
        *((_QWORD *)v143 + 14) = v217;
        *((_QWORD *)v143 + 15) = v221;
        v143[128] = v322;
        LOWORD(v144) = v320;
        v143[131] = v321;
        *(_WORD *)(v143 + 129) = v144;
        *((float *)v143 + 33) = v142;
        v143[136] = v319;
        LOWORD(v144) = v317;
        v143[139] = v318;
        *(_WORD *)(v143 + 137) = v144;
        *((_DWORD *)v143 + 35) = v230;
        v143[144] = v316;
        LOWORD(v144) = v314;
        v143[147] = v315;
        *(_WORD *)(v143 + 145) = v144;
        *(_QWORD *)(v143 + 148) = v237;
        v143[156] = v313;
        LOWORD(v144) = v311;
        v143[159] = v312;
        *(_WORD *)(v143 + 157) = v144;
        *((_QWORD *)v143 + 20) = v247;
        v143[168] = v310;
        LOWORD(v144) = v308;
        v143[171] = v309;
        *(_WORD *)(v143 + 169) = v144;
        *((_DWORD *)v143 + 43) = v109;
        v143[176] = v307;
        LOWORD(v144) = v305;
        v143[179] = v306;
        *(_WORD *)(v143 + 177) = v144;
        *((_DWORD *)v143 + 45) = v108;
        v143[184] = v304;
        LOWORD(v144) = v302;
        v143[187] = v303;
        *(_WORD *)(v143 + 185) = v144;
        *((_DWORD *)v143 + 47) = v107;
        v143[192] = v301;
        v143[193] = v106 & 1;
        v145 = v256;
        *((_QWORD *)v143 + 25) = *(_QWORD *)((char *)&v256 + 6);
        *((_QWORD *)v143 + 26) = v105;
        *(_QWORD *)(v143 + 194) = v145;
        *((_QWORD *)v143 + 27) = v104;
        v143[224] = v300;
        LOWORD(v145) = v298;
        v143[227] = v299;
        *(_WORD *)(v143 + 225) = v145;
        *((_DWORD *)v143 + 57) = v103;
        v143[232] = v297;
        LODWORD(v145) = *(_DWORD *)v296;
        *((_DWORD *)v143 + 59) = *(_DWORD *)&v296[3];
        *(_DWORD *)(v143 + 233) = v145;
        *((_QWORD *)v143 + 30) = v254;
        *((_QWORD *)v143 + 31) = v102;
        *((_QWORD *)v143 + 32) = v101;
        *((_QWORD *)v143 + 33) = v100;
        *((_QWORD *)v143 + 34) = v99;
        *((_QWORD *)v143 + 35) = v98;
        *((_QWORD *)v143 + 36) = v97;
        *((_QWORD *)v143 + 37) = v251;
        v88 = v154;
        v89 = v156;
        if (v156)
          goto LABEL_47;
        goto LABEL_48;
      }
      --v255;
      v139 = v113 + 304;
      memcpy(v324, (const void *)(v172 + v113), sizeof(v324));
      v110 = 0;
      v112 = *((float *)&v324[8] + 1);
      v113 = v139;
      if ((BYTE8(v324[8]) & 1) != 0)
        goto LABEL_92;
    }
    goto LABEL_93;
  }
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Double);
  __break(1u);
}

void sub_1001386E0()
{
  uint64_t v0;

  swift_allocObject(v0, 288, 7);
  sub_100138704();
}

void sub_100138704()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, __n128);
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, __n128);
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, __n128);
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;

  v1 = v0;
  v2 = *v0;
  v0[8] = 0;
  *((_BYTE *)v0 + 104) = 0;
  v0[10] = 0;
  v0[11] = 0;
  v0[14] = (uint64_t)_swiftEmptyDictionarySingleton;
  v0[15] = 0;
  v3 = sub_10000EDC8(&qword_10047ECF0);
  KeyPath = swift_getKeyPath(&unk_1003B8EC0);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v5 = qword_1004AF890;
  v6 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v3 + 272);
  v7 = swift_retain();
  v1[16] = v6(KeyPath, v5, v7);
  v8 = sub_10000EDC8(&qword_10047D010);
  v9 = swift_getKeyPath(&unk_1003B8EE8);
  v10 = qword_1004AF890;
  v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v8 + 272);
  v12 = swift_retain();
  v1[17] = v11(v9, v10, v12);
  v13 = sub_10000EDC8(&qword_100485BA0);
  v14 = swift_getKeyPath(&unk_1003B8F10);
  v15 = qword_1004AF890;
  v16 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v13 + 272);
  v17 = swift_retain();
  v1[18] = v16(v14, v15, v17);
  v18 = swift_getKeyPath(&unk_1003B8F38);
  v19 = sub_10000EDC8((uint64_t *)&unk_100481B90);
  v20 = qword_1004AF890;
  v21 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v19 + 272);
  v22 = swift_retain();
  v1[19] = v21(v18, v20, v22);
  v23 = swift_getKeyPath(&unk_1003B8F60);
  v24 = sub_10000EDC8(&qword_10047BBA0);
  v25 = qword_1004AF890;
  v26 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v24 + 272);
  v27 = swift_retain();
  v1[20] = v26(v23, v25, v27);
  sub_10000EDC8(&qword_100485BA8);
  v28 = swift_getKeyPath(&unk_1003B8F88);
  v1[21] = MutableStateValue.__allocating_init(_:_:)(v28, v2);
  sub_10000EDC8(&qword_100485BB0);
  v29 = swift_getKeyPath(&unk_1003B8FB0);
  v1[22] = MutableStateValue.__allocating_init(_:_:)(v29, v2);
  sub_10000EDC8(&qword_100485BB8);
  v30 = swift_getKeyPath(&unk_1003B8FD8);
  v1[23] = MutableStateValue.__allocating_init(_:_:)(v30, v2);
  v31 = sub_10000EDC8(&qword_10047D438);
  v32 = swift_getKeyPath(&unk_1003B9000);
  v33 = qword_1004AF890;
  v34 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v31 + 272);
  v35 = swift_retain();
  v1[24] = v34(v32, v33, v35);
  v36 = swift_getKeyPath(&unk_1003B9028);
  v37 = sub_10000EDC8(&qword_100481BA0);
  v38 = qword_1004AF890;
  v39 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v37 + 272);
  v40 = swift_retain();
  v1[25] = v39(v36, v38, v40);
  v41 = type metadata accessor for WorldRectangle(0);
  v1[26] = OrderedDictionary.init()(&type metadata for String, v41, &protocol witness table for String);
  v1[27] = v42;
  v1[28] = v43;
  *(_OWORD *)(v1 + 29) = 0u;
  *(_OWORD *)(v1 + 31) = 0u;
  v1[33] = (uint64_t)_swiftEmptyArrayStorage;
  *((_WORD *)v1 + 136) = 768;
  v44 = sub_10000EDC8(&qword_10047E470);
  swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
  v1[35] = PassthroughSubject.init()(v45);
  swift_release();
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002DLL, 0x80000001003D7D70, "Measure/RectangleInstrument.swift", 33, 2, 97, 0);
  __break(1u);
}

double sub_100138A6C(void (*a1)(char *, __n128), uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  double v7;
  __n128 v8;
  double result;
  char v10;

  if (a4 >= 2u)
  {
    if (a4 == 2)
    {
      swift_retain();
      sub_100136D40();
      v7 = 0.5;
    }
    else
    {
      swift_retain();
      sub_100136D40();
      v7 = 1.0;
    }
    sub_100152B6C(v7);
  }
  else
  {
    swift_retain();
    sub_100136D40();
    sub_100152DA4();
  }
  v8 = swift_release();
  *(_BYTE *)(a3 + 273) = a4;
  v10 = 0;
  a1(&v10, v8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_100138B28()
{
  uint64_t v0;
  uint64_t (*v1)(__n128);
  __n128 v2;
  uint64_t v3;
  __n128 v4;
  double result;

  swift_retain();
  StateValue.ifUpdated(_:)(sub_10013FD98, v0);
  swift_release();
  v1 = *(uint64_t (**)(__n128))(**(_QWORD **)(v0 + 152) + 200);
  v2 = swift_retain();
  v3 = v1(v2);
  v4 = swift_release();
  (*(void (**)(unsigned __int8 *(*)(unsigned __int8 *), uint64_t, __n128))(*(_QWORD *)v3 + 296))(sub_10013FDAC, v0, v4);
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)(sub_10013FDB4, v0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

unsigned __int8 *sub_100138BD8(unsigned __int8 *result, uint64_t a2)
{
  int v2;
  uint64_t v4;
  void *v5;
  double v6;

  v2 = result[3];
  if (v2 != *(unsigned __int8 *)(a2 + 272))
  {
    v4 = *(_QWORD *)(a2 + 72);
    v5 = (void *)objc_opt_self(SCNTransaction);
    objc_msgSend(v5, "begin");
    v6 = 1.0;
    if (v2)
      v6 = 0.0;
    objc_msgSend(*(id *)(v4 + 72), "setOpacity:", v6);
    result = (unsigned __int8 *)objc_msgSend(v5, "commit");
    *(_BYTE *)(a2 + 272) = v2;
  }
  return result;
}

void sub_100138C60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  void (*v10)(uint64_t *__return_ptr, __n128);
  __n128 v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = type metadata accessor for ARCamera.TrackingState(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SessionState(0);
  sub_10003E4F0(a1 + *(int *)(v7 + 20), (uint64_t)v6);
  v8 = type metadata accessor for ARCamera.TrackingState.Reason(0);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 2, v8);
  if (v9)
  {
    if (v9 != 1)
    {
      v10 = *(void (**)(uint64_t *__return_ptr, __n128))(**(_QWORD **)(v2 + 152) + 144);
      v11 = swift_retain();
      v10(&v17, v11);
      swift_release();
      if ((v17 & 0x1000000) == 0 && *(_BYTE *)(v2 + 272) == 1)
      {
        v12 = *(_QWORD *)(v2 + 72);
        v13 = (void *)objc_opt_self(SCNTransaction);
        objc_msgSend(v13, "begin");
        objc_msgSend(*(id *)(v12 + 72), "setOpacity:", 1.0);
        objc_msgSend(v13, "commit");
        *(_BYTE *)(v2 + 272) = 0;
      }
      return;
    }
  }
  else
  {
    sub_10003E57C((uint64_t)v6);
  }
  if ((*(_BYTE *)(v2 + 272) & 1) == 0)
  {
    v14 = *(_QWORD *)(v2 + 72);
    v15 = (void *)objc_opt_self(SCNTransaction);
    objc_msgSend(v15, "begin");
    objc_msgSend(*(id *)(v14 + 72), "setOpacity:", 0.0);
    objc_msgSend(v15, "commit");
    *(_BYTE *)(v2 + 272) = 1;
  }
}

void sub_100138DE8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  double *v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  double v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  int64_t v50;
  __n128 v51;
  __n128 v52;
  __n128 v53;
  __n128 v54;
  __n128 v55;
  __int128 v56;
  uint64_t v57;
  _BYTE v58[24];
  _QWORD __src[64];
  _OWORD v60[32];
  uint64_t v61[64];
  uint64_t __dst[39];
  char v63[24];
  char v64[32];
  CGPoint v65;
  CGRect v66;

  v1 = v0;
  swift_beginAccess(v0 + 26, v64, 0, 0);
  v2 = v0[26];
  v3 = v1[27];
  v4 = v1[28];
  v5 = type metadata accessor for WorldRectangle(0);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v6 = OrderedDictionary.values.getter(v2, v3, v4, &type metadata for String, v5, &protocol witness table for String);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  if ((unint64_t)v6 >> 62)
    goto LABEL_66;
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v6);
  if (v7)
    goto LABEL_3;
  while (1)
  {
LABEL_15:
    swift_bridgeObjectRelease_n(v6, 2);
LABEL_16:
    v6 = (uint64_t)(v1 + 14);
    swift_beginAccess(v1 + 14, v63, 0, 0);
    v14 = v1[14];
    v47 = v14 + 64;
    v15 = 1 << *(_BYTE *)(v14 + 32);
    v16 = -1;
    if (v15 < 64)
      v16 = ~(-1 << v15);
    v17 = v16 & *(_QWORD *)(v14 + 64);
    v48 = (unint64_t)(v15 + 63) >> 6;
    v49 = v1[14];
    swift_bridgeObjectRetain(v14);
    v18 = 0;
    if (v17)
    {
LABEL_22:
      while (1)
      {
        v19 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v20 = v19 | (v18 << 6);
LABEL_39:
        memcpy(__dst, (const void *)(*(_QWORD *)(v49 + 56) + 304 * v20), 0x130uLL);
        v24 = __dst[0];
        if (!__dst[0])
          break;
        v25 = *(_QWORD *)(__dst[0] + 16);
        if (v25)
        {
          v50 = v18;
          type metadata accessor for MeasureCamera(0);
          sub_1000C2C50(__dst);
          swift_bridgeObjectRetain(v24);
          v26 = 0;
          v27 = 0;
          v6 = v25 - 1;
          while (1)
          {
            v55 = *(__n128 *)(v24 + 16 * v26 + 32);
            swift_retain();
            StateValue.wrappedValue.getter(__src, v28);
            swift_release();
            memcpy(v60, __src, sizeof(v60));
            sub_100012C00((uint64_t)v60);
            v53 = (__n128)v60[12];
            v54 = (__n128)v60[11];
            v51 = (__n128)v60[14];
            v52 = (__n128)v60[13];
            swift_retain();
            StateValue.wrappedValue.getter(__src, v29);
            swift_release();
            memcpy(v61, __src, sizeof(v61));
            v30 = sub_100012C00((uint64_t)v61);
            *(double *)&v31 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v30, v55, v54, v53, v52, v51, *(double *)&v61[4]);
            if (qword_10047B190 != -1)
            {
              v56 = v31;
              swift_once(&qword_10047B190, sub_1001C81CC);
              v31 = v56;
            }
            v32 = (double *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits);
            if ((*(_BYTE *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80) & 1) != 0)
              goto LABEL_65;
            if (*((float *)&v31 + 2) > 0.0)
            {
              v34 = v32[8];
              v33 = v32[9];
              v36 = v32[6];
              v35 = v32[7];
              v65.x = CGPoint.init(_:)(*(double *)&v31);
              v65.y = v37;
              v66.origin.x = v36;
              v66.origin.y = v35;
              v66.size.width = v34;
              v66.size.height = v33;
              if (CGRectContainsPoint(v66, v65) && __OFADD__(v27++, 1))
              {
                __break(1u);
                goto LABEL_62;
              }
            }
            if (v6 == v26)
            {
              swift_bridgeObjectRelease(v24);
              if (v27 <= 1)
              {
                v6 = (uint64_t)(v1 + 14);
                v18 = v50;
                goto LABEL_53;
              }
              sub_10013FE7C(__dst);
              v6 = (uint64_t)(v1 + 14);
              v18 = v50;
              if (v17)
                goto LABEL_22;
              goto LABEL_23;
            }
            ++v26;
          }
        }
        sub_1000C2C50(__dst);
LABEL_53:
        if ((__dst[21] & 1) != 0)
          goto LABEL_73;
        v39 = *(double *)&__dst[20];
        swift_beginAccess(v6, v58, 33, 0);
        v40 = sub_1000C827C(v39);
        if ((v41 & 1) != 0)
        {
          v42 = v40;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v6);
          v44 = *(_QWORD *)v6;
          v57 = *(_QWORD *)v6;
          *(_QWORD *)v6 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1000BFE8C();
            v44 = v57;
          }
          memcpy(__src, (const void *)(*(_QWORD *)(v44 + 56) + 304 * v42), 0x130uLL);
          sub_100094CA8(v42, v44);
          v45 = *(_QWORD *)v6;
          *(_QWORD *)v6 = v44;
          swift_bridgeObjectRelease(v45);
          memcpy(v60, __src, 0x130uLL);
          nullsub_1(v60);
        }
        else
        {
          sub_10013FECC((uint64_t)v60);
        }
        sub_100012C58((uint64_t)v60, (uint64_t)v61, &qword_100484AC8);
        swift_endAccess(v58);
        sub_10013FE7C(__dst);
        sub_100124C70(v61);
        if (!v17)
          goto LABEL_23;
      }
      __break(1u);
LABEL_73:
      __break(1u);
      return;
    }
LABEL_23:
    v21 = v18 + 1;
    if (!__OFADD__(v18, 1))
      break;
LABEL_62:
    __break(1u);
    while (1)
    {
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      v46 = v6 < 0 ? v6 : v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v7 = _CocoaArrayWrapper.endIndex.getter(v46);
      if (!v7)
        break;
LABEL_3:
      if ((v6 & 0xC000000000000001) != 0)
        v8 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
      else
        v8 = *(id *)(v6 + 32);
      v9 = v8;
      if ((*(uint64_t (**)(void))((swift_isaMask & *v8) + 0xD0))() == 6)
      {
LABEL_6:
        v10 = swift_bridgeObjectRelease_n(v6, 2);
        (*(void (**)(__n128))((swift_isaMask & *v9) + 0x2E0))(v10);

        goto LABEL_16;
      }

      if (v7 == 1)
        goto LABEL_15;
      v11 = 5;
      while (1)
      {
        v12 = (v6 & 0xC000000000000001) != 0
            ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, v6)
            : *(id *)(v6 + 8 * v11);
        v9 = v12;
        v13 = v11 - 3;
        if (__OFADD__(v11 - 4, 1))
          break;
        if ((*(uint64_t (**)(void))((swift_isaMask & *v12) + 0xD0))() == 6)
          goto LABEL_6;

        ++v11;
        if (v13 == v7)
          goto LABEL_15;
      }
    }
  }
  if (v21 >= v48)
    goto LABEL_60;
  v22 = *(_QWORD *)(v47 + 8 * v21);
  ++v18;
  if (v22)
    goto LABEL_38;
  v18 = v21 + 1;
  if (v21 + 1 >= v48)
    goto LABEL_60;
  v22 = *(_QWORD *)(v47 + 8 * v18);
  if (v22)
    goto LABEL_38;
  v18 = v21 + 2;
  if (v21 + 2 >= v48)
    goto LABEL_60;
  v22 = *(_QWORD *)(v47 + 8 * v18);
  if (v22)
    goto LABEL_38;
  v18 = v21 + 3;
  if (v21 + 3 >= v48)
    goto LABEL_60;
  v22 = *(_QWORD *)(v47 + 8 * v18);
  if (v22)
  {
LABEL_38:
    v17 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_39;
  }
  v23 = v21 + 4;
  if (v23 < v48)
  {
    v22 = *(_QWORD *)(v47 + 8 * v23);
    if (v22)
    {
      v18 = v23;
      goto LABEL_38;
    }
    while (1)
    {
      v18 = v23 + 1;
      if (__OFADD__(v23, 1))
        goto LABEL_64;
      if (v18 >= v48)
        break;
      v22 = *(_QWORD *)(v47 + 8 * v18);
      ++v23;
      if (v22)
        goto LABEL_38;
    }
  }
LABEL_60:
  swift_release();
}

void sub_10013941C(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  _QWORD *v20;
  __n128 v21;
  uint64_t (*v22)(__n128);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_QWORD *, __n128);
  __n128 v32;
  _QWORD v33[38];
  _QWORD v34[38];

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (_QWORD *)((char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v8 = (void *)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (*((_QWORD *)&xmmword_1004AF258 + 1))
  {
    *v7 = Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
    v9 = v8;
    v10 = _dispatchPreconditionTest(_:)(v7);
    v11 = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
    if ((v10 & 1) != 0)
    {
      v12 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x278))(v11);
      v15 = v14;
      if (*(_QWORD *)(v14 + 16))
      {
        RingBuffer.subscript.getter(v33, 0, v12, v13, v14, &type metadata for WorldRectangleData);
        swift_bridgeObjectRelease(v15);
        v16 = memcpy(v34, v33, sizeof(v34));
        v17 = (*(uint64_t (**)(void *))((swift_isaMask & *a1) + 0xB8))(v16);
        v19 = v18;
        sub_1001396A8(v17, v18, (uint64_t)v34);
        swift_bridgeObjectRelease(v19);
        v20 = sub_10013FE7C(v34);
      }
      else
      {
        v21 = swift_bridgeObjectRelease(v14);
      }
      v22 = *(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0xB8);
      v23 = ((uint64_t (*)(_QWORD *, __n128))v22)(v20, v21);
      v24 = v2[32];
      v2[31] = v23;
      v2[32] = v25;
      v26 = swift_bridgeObjectRelease(v24);
      v27 = v22(v26);
      v29 = v28;
      sub_1001398A0(v27, v28, 5);
      swift_bridgeObjectRelease(v29);
      swift_retain();
      sub_10013B0C4(a1, (uint64_t)sub_10013FE74, (uint64_t)v2);
      swift_release();
      v30 = v2[23];
      LOBYTE(v33[0]) = 2;
      v31 = *(void (**)(_QWORD *, __n128))(*(_QWORD *)v30 + 392);
      v32 = swift_retain();
      v31(v33, v32);
      swift_release();
      sub_10013A540(5);
      if (qword_10047AB68 == -1)
        goto LABEL_9;
    }
    else
    {
      __break(1u);
    }
    swift_once(&qword_10047AB68, sub_10011E814);
LABEL_9:
    sub_10011FF48(a1);
    return;
  }
  __break(1u);
}

void sub_1001396A8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  void *v12;
  _QWORD *v13;
  Swift::String v14;
  void *object;
  _QWORD *v16;
  void (*v17)(uint64_t, void (*)(uint64_t), _QWORD *, __n128);
  _QWORD *v18;
  __n128 v19;
  Swift::String v20;

  v4 = (uint64_t)v3;
  v8 = *v3;
  swift_beginAccess(v3 + 26, &v20, 32, 0);
  v9 = v3[27];
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain(a2);
  v10 = sub_1000C80A8(a1, (uint64_t)a2);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease(a2);
LABEL_7:
    swift_endAccess(&v20);
    return;
  }
  v12 = *(void **)(*(_QWORD *)(v9 + 56) + 8 * v10);
  swift_endAccess(&v20);
  v13 = v12;
  swift_bridgeObjectRelease(a2);
  if (qword_10047AA28 != -1)
    swift_once(&qword_10047AA28, sub_1000E1108);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v20._object);
  v20._countAndFlagsBits = 0xD000000000000014;
  v20._object = (void *)0x80000001003E1B20;
  v14._countAndFlagsBits = a1;
  v14._object = a2;
  String.append(_:)(v14);
  object = v20._object;
  Log.default(_:isPrivate:)(v20, 0);
  swift_bridgeObjectRelease(object);
  v16 = (_QWORD *)swift_allocObject(&unk_1004477E0, 40, 7);
  v16[2] = v4;
  v16[3] = v13;
  v16[4] = v8;
  v17 = *(void (**)(uint64_t, void (*)(uint64_t), _QWORD *, __n128))((swift_isaMask & *v13) + 0x2C8);
  v18 = v13;
  v19 = swift_retain();
  v17(a3, sub_100142270, v16, v19);
  swift_release();
  swift_retain();
  sub_10013B0C4(v18, (uint64_t)sub_10013FE74, v4);

  swift_release();
}

void sub_1001398A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  void *v17;
  _QWORD *v18;
  __n128 v19;
  uint64_t (*v20)(uint64_t *, __n128);
  __n128 v21;
  void (*v22)(uint64_t *, _QWORD, __n128);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t *__return_ptr, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  void *v45;
  _QWORD *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  __n128 v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t (*v62)(void);
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  void *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v82;
  uint64_t v83;
  void (*v84)(uint64_t *, __n128);
  id v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t (*v95)(void);
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v101;
  __n128 v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  void *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t (*v122)(void);
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(uint64_t *, __n128);
  __n128 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  void *v133;
  _QWORD *v134;
  void *v135;
  _QWORD *v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;

  v4 = v3;
  v8 = v3 + 208;
  swift_beginAccess(v3 + 208, &v143, 32, 0);
  v9 = *(_QWORD *)(v3 + 216);
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain(a2);
  v10 = sub_1000C80A8(a1, a2);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease(a2);
LABEL_7:
    swift_endAccess(&v143);
    return;
  }
  v12 = *(void **)(*(_QWORD *)(v9 + 56) + 8 * v10);
  swift_endAccess(&v143);
  v13 = v12;
  swift_bridgeObjectRelease(a2);
  swift_beginAccess(v8, &v143, 32, 0);
  v14 = *(_QWORD *)(v4 + 216);
  if (!*(_QWORD *)(v14 + 16))
  {
LABEL_10:
    swift_endAccess(&v143);
    goto LABEL_11;
  }
  swift_bridgeObjectRetain(a2);
  v15 = sub_1000C80A8(a1, a2);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_10;
  }
  v17 = *(void **)(*(_QWORD *)(v14 + 56) + 8 * v15);
  swift_endAccess(&v143);
  v18 = v17;
  v19 = swift_bridgeObjectRelease(a2);
  (*(void (**)(uint64_t, __n128))((swift_isaMask & *v18) + 0xD8))(a3, v19);
  swift_retain();
  sub_10013B0C4(v18, (uint64_t)sub_10013FE74, v4);

  swift_release();
LABEL_11:
  switch(a3)
  {
    case 1:
      v20 = *(uint64_t (**)(uint64_t *, __n128))(**(_QWORD **)(v4 + 176) + 400);
      v21 = swift_retain();
      v22 = (void (*)(uint64_t *, _QWORD, __n128))v20(&v143, v21);
      v23 = (*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v13) + 0xB8))();
      v25 = v24;
      sub_100028000(v23, v24);
      v26 = swift_bridgeObjectRelease(v25);
      v22(&v143, 0, v26);
      swift_release();
      v27 = *(void (**)(uint64_t *__return_ptr, __n128))(**(_QWORD **)(v4 + 200) + 144);
      v28 = swift_retain();
      v27(&v143, v28);
      swift_release();
      v29 = v143;
      v30 = v144;
      v31 = v145;
      sub_1001C6B68(v143, v144, v145);
      v33 = v32;
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v29);
      if ((v33 & 1) != 0)
        goto LABEL_113;
      if (qword_10047A930 == -1)
        goto LABEL_15;
LABEL_115:
      swift_once(&qword_10047A930, sub_100083368);
LABEL_15:
      if (!qword_1004AF248)
        goto LABEL_140;
      swift_retain();
      sub_100101E84();
      swift_release();
      v34 = *(_QWORD *)(v4 + 208);
      v35 = *(_QWORD *)(v4 + 216);
      v36 = *(_QWORD *)(v4 + 224);
      v37 = type metadata accessor for WorldRectangle(0);
      swift_bridgeObjectRetain(v34);
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRetain(v36);
      v38 = OrderedDictionary.values.getter(v34, v35, v36, &type metadata for String, v37, &protocol witness table for String);
      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease(v35);
      swift_bridgeObjectRelease(v34);
      if ((unint64_t)v38 >> 62)
      {
        if (v38 < 0)
          v129 = v38;
        else
          v129 = v38 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v38);
        v39 = _CocoaArrayWrapper.endIndex.getter(v129);
        if (!v39)
          goto LABEL_22;
      }
      else
      {
        v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v38);
        if (!v39)
        {
LABEL_22:
          swift_bridgeObjectRelease(v38);
          goto LABEL_112;
        }
      }
      if ((v38 & 0xC000000000000001) != 0)
        v40 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v38);
      else
        v40 = *(id *)(v38 + 32);
      v41 = v40;
      if ((*(uint64_t (**)(void))((swift_isaMask & *v40) + 0xD0))() != 9)
      {

        if (v39 == 1)
          goto LABEL_22;
        v119 = v13;
        v13 = 5;
        while (1)
        {
          if ((v38 & 0xC000000000000001) != 0)
            v120 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, v38);
          else
            v120 = *(id *)(v38 + 8 * v13);
          v41 = v120;
          v121 = v13 - 3;
          if (__OFADD__(v13 - 4, 1))
          {
            __break(1u);
            goto LABEL_115;
          }
          if ((*(uint64_t (**)(void))((swift_isaMask & *v120) + 0xD0))() == 9)
            break;

          ++v13;
          if (v121 == v39)
          {
            swift_bridgeObjectRelease(v38);
            v13 = v119;
            goto LABEL_112;
          }
        }
        v13 = v119;
      }
      swift_bridgeObjectRelease_n(v38, 2);
      v122 = *(uint64_t (**)(void))((swift_isaMask & *v41) + 0xB8);
      v123 = v41;
      v124 = v122();
      v38 = v125;

      sub_1001398A0(v124, v38, 5);
LABEL_112:
      swift_bridgeObjectRelease(v38);
LABEL_113:
      v126 = *(_QWORD *)(v4 + 168);
      v143 = 0xC000000000000008;
      v127 = *(void (**)(uint64_t *, __n128))(*(_QWORD *)v126 + 392);
      v128 = swift_retain();
      v127(&v143, v128);

      swift_release();
      return;
    case 5:
      swift_beginAccess(v8, &v143, 32, 0);
      v42 = *(_QWORD *)(v4 + 216);
      if (!*(_QWORD *)(v42 + 16))
        goto LABEL_101;
      swift_bridgeObjectRetain(a2);
      v43 = sub_1000C80A8(a1, a2);
      if ((v44 & 1) == 0)
        goto LABEL_100;
      v45 = *(void **)(*(_QWORD *)(v42 + 56) + 8 * v43);
      swift_endAccess(&v143);
      v46 = v45;
      v47 = swift_bridgeObjectRelease(a2);
      v133 = v46;
      v48 = (*(uint64_t (**)(__n128))((swift_isaMask & *v46) + 0x230))(v47);
      v49 = v48;
      if ((v48 & 0xC000000000000001) != 0)
      {
        v50 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v48);
      }
      else
      {
        if (!*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_130;
        }
        v50 = *(id *)(v48 + 32);
      }
      v51 = v50;
      v52 = swift_bridgeObjectRelease(v49);
      v49 = (*(uint64_t (**)(__n128))((swift_isaMask & *v51) + 0x250))(v52);

      if ((v49 & 0xC000000000000001) != 0)
      {
LABEL_130:
        v53 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v49);
        goto LABEL_31;
      }
      if (!*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_132;
      }
      v53 = *(id *)(v49 + 32);
LABEL_31:
      v136 = v53;
      swift_bridgeObjectRelease(v49);
      if (qword_10047A930 == -1)
        goto LABEL_32;
LABEL_132:
      swift_once(&qword_10047A930, sub_100083368);
LABEL_32:
      v132 = (void *)v13;
      if (!qword_1004AF248)
      {
LABEL_141:
        __break(1u);
        JUMPOUT(0x10013A51CLL);
      }
      swift_retain();
      sub_100101BD8(v136);
      swift_release();
      v54 = *(_QWORD *)(v4 + 208);
      v55 = *(_QWORD *)(v4 + 216);
      v56 = *(_QWORD *)(v4 + 224);
      v57 = type metadata accessor for WorldRectangle(0);
      swift_bridgeObjectRetain(v54);
      swift_bridgeObjectRetain(v55);
      swift_bridgeObjectRetain(v56);
      v58 = OrderedDictionary.values.getter(v54, v55, v56, &type metadata for String, v57, &protocol witness table for String);
      swift_bridgeObjectRelease(v56);
      swift_bridgeObjectRelease(v55);
      swift_bridgeObjectRelease(v54);
      if ((unint64_t)v58 >> 62)
      {
        if (v58 < 0)
          v131 = v58;
        else
          v131 = v58 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v58);
        v59 = _CocoaArrayWrapper.endIndex.getter(v131);
        swift_bridgeObjectRelease(v58);
        if (v59)
        {
LABEL_35:
          if (v59 >= 1)
          {
            v60 = 0;
            v137 = v58 & 0xC000000000000001;
            v139 = v59;
            v141 = v58;
            while (1)
            {
              v61 = v137
                  ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v60, v58)
                  : *(id *)(v58 + 8 * v60 + 32);
              v62 = *(uint64_t (**)(void))((swift_isaMask & *v61) + 0xB8);
              v63 = v61;
              v64 = v62();
              v66 = v65;

              if (v64 == a1 && v66 == a2)
                break;
              v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v66, a1, a2, 0);
              swift_bridgeObjectRelease(v66);
              if ((v68 & 1) == 0)
              {
                v69 = v63;
                v70 = v62();
                v72 = v71;

                swift_beginAccess(v8, &v143, 32, 0);
                v73 = *(_QWORD *)(v4 + 216);
                if (*(_QWORD *)(v73 + 16))
                {
                  swift_bridgeObjectRetain(v72);
                  v74 = sub_1000C80A8(v70, v72);
                  if ((v75 & 1) != 0)
                  {
                    v76 = *(void **)(*(_QWORD *)(v73 + 56) + 8 * v74);
                    swift_endAccess(&v143);
                    v77 = v76;
                    swift_bridgeObjectRelease(v72);
                    sub_10013EA58(v77);

                    v78 = *(_QWORD *)(v4 + 256);
                    if (!v78)
                      goto LABEL_62;
                    goto LABEL_55;
                  }
                  swift_bridgeObjectRelease(v72);
                }
                swift_endAccess(&v143);
                v78 = *(_QWORD *)(v4 + 256);
                if (!v78)
                  goto LABEL_62;
LABEL_55:
                v80 = *(_QWORD *)(v4 + 248);
                if (v80 == v70 && v78 == v72)
                  goto LABEL_61;
                if ((_stringCompareWithSmolCheck(_:_:expecting:)(v80, v78, v70, v72, 0) & 1) != 0)
                {
                  v78 = *(_QWORD *)(v4 + 256);
LABEL_61:
                  v58 = v141;
                  *(_QWORD *)(v4 + 248) = 0;
                  *(_QWORD *)(v4 + 256) = 0;

                  swift_bridgeObjectRelease(v72);
                  swift_bridgeObjectRelease(v78);
                  goto LABEL_39;
                }
LABEL_62:

                v79 = v72;
LABEL_63:
                swift_bridgeObjectRelease(v79);
                goto LABEL_38;
              }

LABEL_38:
              v58 = v141;
LABEL_39:
              if (v139 == ++v60)
                goto LABEL_137;
            }

            v79 = a2;
            goto LABEL_63;
          }
          goto LABEL_139;
        }
      }
      else
      {
        v59 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v59)
          goto LABEL_35;
      }
LABEL_137:

      swift_bridgeObjectRelease(v58);
      return;
    case 6:
      swift_beginAccess(v8, &v143, 32, 0);
      if (!*(_QWORD *)(*(_QWORD *)(v4 + 216) + 16))
        goto LABEL_101;
      swift_bridgeObjectRetain(a2);
      sub_1000C80A8(a1, a2);
      if ((v82 & 1) == 0)
      {
LABEL_100:
        swift_bridgeObjectRelease(a2);
LABEL_101:
        swift_endAccess(&v143);

        return;
      }
      swift_endAccess(&v143);
      swift_bridgeObjectRelease(a2);
      v83 = *(_QWORD *)(v4 + 168);
      v143 = v13;
      v84 = *(void (**)(uint64_t *, __n128))(*(_QWORD *)v83 + 392);
      v85 = (id)v13;
      v86 = swift_retain();
      v84(&v143, v86);
      swift_release();
      v87 = *(_QWORD *)(v4 + 208);
      v88 = *(_QWORD *)(v4 + 216);
      v89 = *(_QWORD *)(v4 + 224);
      v90 = type metadata accessor for WorldRectangle(0);
      swift_bridgeObjectRetain(v87);
      swift_bridgeObjectRetain(v88);
      swift_bridgeObjectRetain(v89);
      v91 = OrderedDictionary.values.getter(v87, v88, v89, &type metadata for String, v90, &protocol witness table for String);
      swift_bridgeObjectRelease(v89);
      swift_bridgeObjectRelease(v88);
      swift_bridgeObjectRelease(v87);
      if ((unint64_t)v91 >> 62)
      {
        if (v91 < 0)
          v130 = v91;
        else
          v130 = v91 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v91);
        v92 = _CocoaArrayWrapper.endIndex.getter(v130);
        swift_bridgeObjectRelease(v91);
        if (v92)
          goto LABEL_68;
      }
      else
      {
        v92 = *(_QWORD *)((v91 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v92)
        {
LABEL_68:
          v135 = v85;
          if (v92 < 1)
          {
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
            goto LABEL_141;
          }
          v93 = 0;
          v140 = v91 & 0xC000000000000001;
          v142 = v91;
          while (1)
          {
            if (v140)
              v94 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v93, v91);
            else
              v94 = *(id *)(v91 + 8 * v93 + 32);
            v95 = *(uint64_t (**)(void))((swift_isaMask & *v94) + 0xB8);
            v96 = v94;
            v97 = v95();
            v99 = v98;

            if (v97 == a1 && v99 == a2)
            {

              swift_bridgeObjectRelease(a2);
              goto LABEL_83;
            }
            v101 = _stringCompareWithSmolCheck(_:_:expecting:)(v97, v99, a1, a2, 0);
            v102 = swift_bridgeObjectRelease(v99);
            if ((v101 & 1) != 0
              || (v103 = (*(uint64_t (**)(__n128))((swift_isaMask & *v96) + 0xD0))(v102), v103 == 9))
            {

              goto LABEL_83;
            }
            if (v103 == 5)
            {
              v104 = v96;
              v105 = v95();
              v107 = v106;

              sub_1001398A0(v105, v107, 9);
              swift_bridgeObjectRelease(v107);

LABEL_83:
              v91 = v142;
              goto LABEL_84;
            }
            v108 = v96;
            v138 = v95();
            v110 = v109;

            swift_beginAccess(v8, &v143, 32, 0);
            v111 = *(_QWORD *)(v4 + 216);
            v91 = v142;
            if (!*(_QWORD *)(v111 + 16))
              goto LABEL_90;
            swift_bridgeObjectRetain(v110);
            v112 = sub_1000C80A8(v138, v110);
            if ((v113 & 1) == 0)
              break;
            v114 = *(void **)(*(_QWORD *)(v111 + 56) + 8 * v112);
            swift_endAccess(&v143);
            v134 = v108;
            v115 = v114;
            swift_bridgeObjectRelease(v110);
            sub_10013EA58(v115);

            v108 = v134;
LABEL_91:
            v116 = *(_QWORD *)(v4 + 256);
            if (!v116)
              goto LABEL_99;
            v117 = *(_QWORD *)(v4 + 248);
            if (v117 != v138 || v116 != v110)
            {
              if ((_stringCompareWithSmolCheck(_:_:expecting:)(v117, *(_QWORD *)(v4 + 256), v138, v110, 0) & 1) == 0)
              {
LABEL_99:
                swift_bridgeObjectRelease(v110);

                goto LABEL_84;
              }
              v116 = *(_QWORD *)(v4 + 256);
            }
            *(_QWORD *)(v4 + 248) = 0;
            *(_QWORD *)(v4 + 256) = 0;
            swift_bridgeObjectRelease(v110);

            swift_bridgeObjectRelease(v116);
LABEL_84:
            if (v92 == ++v93)
            {

              goto LABEL_128;
            }
          }
          swift_bridgeObjectRelease(v110);
LABEL_90:
          swift_endAccess(&v143);
          goto LABEL_91;
        }
      }

LABEL_128:
      swift_bridgeObjectRelease(v91);
      return;
    default:

      return;
  }
}

uint64_t sub_10013A540(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v19 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter();
  v11 = swift_allocObject(&unk_100447718, 25, 7);
  *(_QWORD *)(v11 + 16) = v1;
  *(_BYTE *)(v11 + 24) = a1;
  aBlock[4] = sub_10013FE50;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003ECA0;
  aBlock[3] = &unk_100447730;
  v12 = _Block_copy(aBlock);
  swift_retain();
  v13 = swift_release();
  static DispatchQoS.unspecified.getter(v13);
  aBlock[0] = _swiftEmptyArrayStorage;
  v14 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v16 = sub_100043310((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10013A760()
{
  uint64_t v0;
  void (*v1)(_QWORD *__return_ptr, __n128);
  __n128 v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD *v7;
  double (*v8)(void);
  __n128 v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  float32x2_t v17;
  uint64_t v18;
  uint64_t v19;
  float32x2_t v21;
  _QWORD v22[4];

  v1 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v0 + 160) + 144);
  v2 = swift_retain();
  v1(v22, v2);
  swift_release();
  v3 = (void *)v22[0];
  v4 = (void *)v22[1];
  v5 = (void *)v22[3];
  v6 = (id)v22[2];

  v7 = sub_10013A854(v5);
  if (!v7)
    return 0;
  v8 = *(double (**)(void))((swift_isaMask & *v7) + 0x2B0);
  v9.n128_f64[0] = v8();
  v21 = COERCE_FLOAT32X2_T(simd_float4x4.position.getter(v9, v10, v11, v12));
  v13.n128_f64[0] = v8();
  *(double *)&v17 = simd_float4x4.up.getter(v13, v14, v15, v16);
  sub_10015F3DC(v21, v17);
  v19 = v18;

  return v19;
}

void *sub_10013A854(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  const char *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v9[64];
  __n128 __src[32];
  __n128 __dst[32];

  if (!a1)
  {
    if (qword_10047AA28 != -1)
      swift_once(&qword_10047AA28, sub_1000E1108);
    __dst[0].n128_u64[0] = 0;
    __dst[0].n128_u64[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(42);
    swift_bridgeObjectRelease(0xE000000000000000);
    v5 = 0xD00000000000003CLL;
    v6 = 0x80000001003E1A10;
    goto LABEL_14;
  }
  v1 = a1;
  type metadata accessor for MeasureCamera(0);
  v2 = v1;
  swift_retain();
  StateValue.wrappedValue.getter(__src, v3);
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  sub_100012C00((uint64_t)__dst);
  if ((static MeasureCamera.planeTooFar(for:transform:)(v2, __dst[21], __dst[22], __dst[23], __dst[24]) & 1) != 0)
  {

    if (qword_10047AA28 != -1)
      swift_once(&qword_10047AA28, sub_1000E1108);
    __src[0].n128_u64[0] = 0;
    __src[0].n128_u64[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(42);
    swift_bridgeObjectRelease(__src[0].n128_u64[1]);
    v4 = "Not suggesting rectangle due to reason: Reticle too far from plane.";
LABEL_13:
    v6 = (unint64_t)(v4 - 32) | 0x8000000000000000;
    v5 = 0xD000000000000043;
LABEL_14:
    Log.debug(_:isPrivate:)(*(Swift::String *)&v5, 0);
    return 0;
  }
  swift_retain();
  StateValue.wrappedValue.getter(v9, v7);
  swift_release();
  memcpy(__src, v9, sizeof(__src));
  sub_100012C00((uint64_t)__src);
  if ((static MeasureCamera.planeTooClose(for:transform:)(v2, __src[21], __src[22], __src[23], __src[24]) & 1) != 0)
  {

    if (qword_10047AA28 != -1)
      swift_once(&qword_10047AA28, sub_1000E1108);
    v9[0] = 0;
    v9[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(42);
    swift_bridgeObjectRelease(v9[1]);
    v4 = "Not suggesting rectangle due to reason: Reticle too close to plane.";
    goto LABEL_13;
  }
  return v1;
}

void sub_10013AAB0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void **__return_ptr, __n128);
  __n128 v3;
  unint64_t v4;
  void (*v5)(void **__return_ptr, __n128);
  __n128 v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  double (*v14)(void);
  __n128 v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  float32x2_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  void *v35;
  _QWORD *v36;
  __n128 v37;
  uint64_t (*v38)(__n128);
  uint64_t v39;
  void *v40;
  void (*v41)(unint64_t *__return_ptr, __n128);
  __n128 v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  void *v54;
  _QWORD *v55;
  __n128 v56;
  uint64_t (*v57)(__n128);
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  float32x2_t v64;
  _BYTE v65[24];
  _QWORD v66[6];
  _QWORD v67[6];
  _QWORD v68[6];
  _QWORD v69[6];
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  id v75;
  void *v76;

  v1 = v0;
  v2 = *(void (**)(void **__return_ptr, __n128))(**(_QWORD **)(v0 + 168) + 144);
  v3 = swift_retain();
  v2(&v73, v3);
  swift_release();
  v4 = (unint64_t)v73;
  v5 = *(void (**)(void **__return_ptr, __n128))(**(_QWORD **)(v0 + 160) + 144);
  v6 = swift_retain();
  v5(&v73, v6);
  swift_release();
  v7 = v73;
  v8 = v74;
  v9 = v76;
  v10 = v75;

  v11 = sub_10013A854(v9);
  if (!v11)
  {
    sub_10001A810(v4);
    goto LABEL_5;
  }
  if ((v4 | 8) == 0xC000000000000018)
  {

LABEL_5:
    v12 = *(_QWORD *)(v1 + 88);
    *(_QWORD *)(v1 + 80) = 0;
    *(_QWORD *)(v1 + 88) = 0;
LABEL_6:
    swift_bridgeObjectRelease(v12);
    return;
  }
  v13 = *(_QWORD *)(v1 + 72);
  v14 = *(double (**)(void))((swift_isaMask & *v11) + 0x2B0);
  v15.n128_f64[0] = v14();
  v64 = COERCE_FLOAT32X2_T(simd_float4x4.position.getter(v15, v16, v17, v18));
  v19.n128_f64[0] = v14();
  *(double *)&v23 = simd_float4x4.up.getter(v19, v20, v21, v22);
  sub_10015F3DC(v64, v23);
  v26 = v24;
  v28 = *(_QWORD *)(v1 + 80);
  v27 = *(_QWORD *)(v1 + 88);
  if (!v25)
  {
    if (!v27)
      goto LABEL_17;
    v29 = 0;
    goto LABEL_34;
  }
  v29 = v25;
  if (v27)
  {
    v30 = v24 == v28 && v25 == v27;
    if (v30
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), 0) & 1) != 0)
    {
      swift_bridgeObjectRelease(v29);
LABEL_17:
      sub_10001A810(v4);

      return;
    }
  }
  swift_beginAccess(v1 + 208, &v73, 32, 0);
  v31 = *(_QWORD *)(v1 + 216);
  v32 = *(_QWORD *)(v31 + 16);
  swift_bridgeObjectRetain(v29);
  if (!v32)
    goto LABEL_23;
  swift_bridgeObjectRetain(v29);
  v33 = sub_1000C80A8(v26, v29);
  if ((v34 & 1) == 0)
  {
    swift_bridgeObjectRelease(v29);
LABEL_23:
    swift_endAccess(&v73);
    goto LABEL_24;
  }
  v35 = *(void **)(*(_QWORD *)(v31 + 56) + 8 * v33);
  swift_endAccess(&v73);
  v36 = v35;
  v37 = swift_bridgeObjectRelease(v29);
  v38 = *(uint64_t (**)(__n128))((swift_isaMask & *v36) + 0xD0);
  if (v38(v37) == 5)
  {
    swift_bridgeObjectRelease_n(v29, 2);

LABEL_31:
    v26 = 0;
    v29 = 0;
    goto LABEL_32;
  }
  v49 = ((uint64_t (*)(void))v38)();

  if (v49 == 9)
    goto LABEL_30;
LABEL_24:
  swift_beginAccess(v13 + 24, &v70, 32, 0);
  v39 = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain(v29);
  sub_1001369DC(v26, v29, v39, v66);
  swift_bridgeObjectRelease(v29);
  sub_100012C58((uint64_t)v66, (uint64_t)&v73, &qword_100485B90);
  if (!v74)
  {
    swift_endAccess(&v70);
    goto LABEL_30;
  }
  v40 = v73;
  swift_endAccess(&v70);
  sub_10013FDB8((uint64_t)v66);
  if (v40 != (void *)1)
  {
LABEL_30:
    swift_bridgeObjectRelease_n(v29, 2);
    goto LABEL_31;
  }
  v41 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(v1 + 200) + 144);
  v42 = swift_retain();
  v41(&v70, v42);
  swift_release();
  v43 = v70;
  v44 = v71;
  v45 = v72;
  v69[0] = v71;
  swift_bridgeObjectRetain(v71);
  v46 = sub_10000EDC8(&qword_10047C018);
  v47 = sub_10000EDC8(&qword_10047D030);
  swift_dynamicCast(&v70, v69, v46, v47, 7);
  v48 = v70;
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v44);
  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRetain(v29);
  LOBYTE(v43) = sub_10013FADC(v48, v26, v29);
  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(v29);
  if ((v43 & 1) != 0)
  {
    sub_1001398A0(v26, v29, 6);
    swift_bridgeObjectRelease(v29);
    sub_10013A540(3);
LABEL_32:
    v27 = *(_QWORD *)(v1 + 88);
    if (!v27)
      goto LABEL_50;
    v28 = *(_QWORD *)(v1 + 80);
LABEL_34:
    swift_beginAccess(v1 + 208, &v70, 32, 0);
    v50 = *(_QWORD *)(v1 + 216);
    v51 = *(_QWORD *)(v50 + 16);
    swift_bridgeObjectRetain(v27);
    if (v51)
    {
      swift_bridgeObjectRetain(v27);
      v52 = sub_1000C80A8(v28, v27);
      if ((v53 & 1) != 0)
      {
        v54 = *(void **)(*(_QWORD *)(v50 + 56) + 8 * v52);
        swift_endAccess(&v70);
        v55 = v54;
        v56 = swift_bridgeObjectRelease(v27);
        v57 = *(uint64_t (**)(__n128))((swift_isaMask & *v55) + 0xD0);
        if (v57(v56) == 5)
        {

LABEL_52:
          swift_bridgeObjectRelease(v29);
          sub_10001A810(v4);
          swift_bridgeObjectRelease(v27);
          v26 = 0;
          v29 = 0;
          goto LABEL_53;
        }
        v63 = ((uint64_t (*)(void))v57)();

        if (v63 == 9)
          goto LABEL_52;
        goto LABEL_40;
      }
      swift_bridgeObjectRelease(v27);
    }
    swift_endAccess(&v70);
LABEL_40:
    v58 = (uint64_t *)(v13 + 24);
    swift_beginAccess(v13 + 24, v69, 32, 0);
    v59 = *(_QWORD *)(v13 + 24);
    swift_bridgeObjectRetain(v27);
    sub_1001369DC(v28, v27, v59, v67);
    swift_bridgeObjectRelease(v27);
    sub_100012C58((uint64_t)v67, (uint64_t)&v70, &qword_100485B90);
    if (v71)
    {
      v60 = v70;
      swift_endAccess(v69);
      sub_10013FDB8((uint64_t)v67);
      if (v60 == 5)
        goto LABEL_52;
    }
    else
    {
      swift_endAccess(v69);
    }
    swift_beginAccess(v58, v65, 32, 0);
    v61 = *v58;
    swift_bridgeObjectRetain(v27);
    sub_1001369DC(v28, v27, v61, v68);
    swift_bridgeObjectRelease(v27);
    sub_100012C58((uint64_t)v68, (uint64_t)v69, &qword_100485B90);
    if (v69[1])
    {
      v62 = v69[0];
      swift_endAccess(v65);
      sub_10013FDB8((uint64_t)v68);
      if (v62 == 9)
        goto LABEL_52;
    }
    else
    {
      swift_endAccess(v65);
    }
    sub_1001398A0(v28, v27, 1);
    swift_bridgeObjectRelease(v27);
    if (!v29)
      sub_10013A540(4);
LABEL_50:
    sub_10001A810(v4);
LABEL_53:

    v12 = *(_QWORD *)(v1 + 88);
    *(_QWORD *)(v1 + 80) = v26;
    *(_QWORD *)(v1 + 88) = v29;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease(v29);
  sub_10001A810(v4);
  swift_bridgeObjectRelease(v29);

}

void sub_10013B0C4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(__n128);
  __n128 v7;
  uint64_t v8;
  Swift::String v9;
  void *object;
  Swift::String v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;

  v6 = *(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0xD0);
  if (((uint64_t (*)(void))v6)() != 5)
  {
    if (qword_10047AA28 != -1)
      swift_once(&qword_10047AA28, sub_1000E1108);
    _StringGuts.grow(_:)(18);
    v7 = swift_bridgeObjectRelease(0xE000000000000000);
    v8 = v6(v7);
    v9._countAndFlagsBits = MeasureObjectState.description.getter(v8);
    object = v9._object;
    String.append(_:)(v9);
    swift_bridgeObjectRelease(object);
    v11._countAndFlagsBits = 0xD000000000000010;
    v11._object = (void *)0x80000001003E19D0;
    Log.debug(_:isPrivate:)(v11, 0);
    v12 = swift_bridgeObjectRelease(0x80000001003E19D0);
    v13 = v6(v12);
    v14 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8))();
    v16 = v15;
    sub_10015FB7C(v13, v14, v15);
    swift_bridgeObjectRelease(v16);
  }
  if (qword_10047AA28 != -1)
    swift_once(&qword_10047AA28, sub_1000E1108);
  v17._countAndFlagsBits = 0xD00000000000001CLL;
  v17._object = (void *)0x80000001003E19F0;
  Log.debug(_:isPrivate:)(v17, 0);
  sub_10015FF1C(a1, a2, a3);
}

uint64_t sub_10013B2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  swift_release(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 136));
  swift_release(*(_QWORD *)(v0 + 144));
  swift_release(*(_QWORD *)(v0 + 152));
  swift_release(*(_QWORD *)(v0 + 160));
  swift_release(*(_QWORD *)(v0 + 168));
  swift_release(*(_QWORD *)(v0 + 176));
  swift_release(*(_QWORD *)(v0 + 184));
  swift_release(*(_QWORD *)(v0 + 192));
  swift_release(*(_QWORD *)(v0 + 200));
  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 224));
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 240));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 256));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 264));
  return swift_release(*(_QWORD *)(v0 + 280));
}

uint64_t sub_10013B388(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = StateObserver.deinit(a1);
  swift_release(*(_QWORD *)(v1 + 64));
  swift_release(*(_QWORD *)(v1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 88));

  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 112));
  swift_release(*(_QWORD *)(v1 + 128));
  swift_release(*(_QWORD *)(v1 + 136));
  swift_release(*(_QWORD *)(v1 + 144));
  swift_release(*(_QWORD *)(v1 + 152));
  swift_release(*(_QWORD *)(v1 + 160));
  swift_release(*(_QWORD *)(v1 + 168));
  swift_release(*(_QWORD *)(v1 + 176));
  swift_release(*(_QWORD *)(v1 + 184));
  swift_release(*(_QWORD *)(v1 + 192));
  swift_release(*(_QWORD *)(v1 + 200));
  v2 = *(_QWORD *)(v1 + 208);
  v3 = *(_QWORD *)(v1 + 216);
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 224));
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 240));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 256));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 264));
  swift_release(*(_QWORD *)(v1 + 280));
  return v1;
}

uint64_t sub_10013B470(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_10013B388(a1);
  return swift_deallocClassInstance(v1, 288, 7);
}

uint64_t type metadata accessor for RectangleInstrument(uint64_t a1)
{
  uint64_t result;

  result = qword_1004859D0;
  if (!qword_1004859D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RectangleInstrument);
  return result;
}

uint64_t sub_10013B4C8(uint64_t a1)
{
  _QWORD v2[24];

  v2[0] = "\b";
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = &unk_1003B8E50;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = &unk_1003B8E68;
  v2[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[6] = "\b";
  v2[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[9] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[10] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[11] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[12] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[13] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[14] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[15] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[16] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[17] = &unk_1003B8E80;
  v2[18] = &unk_1003B8E50;
  v2[19] = &unk_1003B8E50;
  v2[20] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[21] = &unk_1003B8E68;
  v2[22] = &unk_1003B8E98;
  v2[23] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 256, 24, v2, a1 + 208);
}

uint64_t sub_10013B578@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10047AB98 != -1)
    swift_once(&qword_10047AB98, sub_100136CF8);
  v2 = type metadata accessor for UUID(0);
  v3 = sub_1000362E8(v2, (uint64_t)qword_1004AF6D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_10013B5E8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 273);
}

uint64_t sub_10013B5F0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10000EDC8(&qword_10047E470);
  v1 = sub_100043310(&qword_10047E478, &qword_10047E470, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t sub_10013B65C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  v3 = swift_allocObject(&unk_1004476F0, 25, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_BYTE *)(v3 + 24) = a1;
  v4 = sub_10000EDC8((uint64_t *)&unk_10047E420);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = swift_retain();
  return Future.init(_:)(sub_1000F2928, v3, v5);
}

uint64_t sub_10013B6D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_10013B6FC(_QWORD *a1)
{
  uint64_t (*v2)(__n128);
  __n128 v3;

  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  if (qword_1004AF268)
  {
    v2 = *(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0xD0);
    v3 = swift_retain();
    if (v2(v3) != 5)
      sub_1000C451C((uint64_t)a1);
    swift_release();
    if (qword_1004AF268)
    {
      swift_retain();
      sub_100093728(a1);
      swift_release();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10013B7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void (*v8)(_BYTE *__return_ptr, __n128);
  __n128 v9;
  uint64_t v10;
  char v11;
  void (*v12)(_BYTE *__return_ptr, __n128);
  __n128 v13;
  _BYTE v14[14];
  char v15;
  char v16;

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(void (**)(_BYTE *__return_ptr, __n128))(**(_QWORD **)(a1 + 152) + 144);
  v9 = swift_retain();
  v8(&v14[11], v9);
  swift_release();
  if ((v15 & 1) == 0 && (v16 & 1) == 0)
  {
    if (qword_10047A938 != -1)
      swift_once(&qword_10047A938, sub_100083764);
    v10 = qword_1004AF290;
    sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
    *v7 = static OS_dispatch_queue.main.getter();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
    v11 = _dispatchPreconditionTest(_:)(v7);
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
    if ((v11 & 1) != 0)
    {
      v12 = *(void (**)(_BYTE *__return_ptr, __n128))(**(_QWORD **)(v10 + 56) + 144);
      v13 = swift_retain();
      v12(&v14[6], v13);
      swift_release();
      if ((v14[9] & 1) == 0 && (v14[10] & 1) == 0)
        sub_1000838C4(a2);
    }
    else
    {
      __break(1u);
    }
  }
}

double sub_10013B93C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  _QWORD *v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  v3 = v2;
  swift_beginAccess(v2 + 208, v15, 32, 0);
  v6 = *(_QWORD *)(v2 + 216);
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain(a2);
    v7 = sub_1000C80A8(a1, a2);
    if ((v8 & 1) != 0)
    {
      v9 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v7);
      swift_endAccess(v15);
      v10 = v9;
      swift_bridgeObjectRelease(a2);
      sub_10013EA58(v10);

      goto LABEL_6;
    }
    swift_bridgeObjectRelease(a2);
  }
  swift_endAccess(v15);
LABEL_6:
  v12 = *(_QWORD *)(v3 + 248);
  v13 = *(_QWORD *)(v3 + 256);
  if (!v13)
    return result;
  if (v12 != a1 || v13 != a2)
  {
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, a1, a2, 0) & 1) == 0)
      return result;
    v13 = *(_QWORD *)(v3 + 256);
  }
  *(_QWORD *)(v3 + 248) = 0;
  *(_QWORD *)(v3 + 256) = 0;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  return result;
}

void sub_10013BA30(uint64_t a1)
{
  uint64_t *v1;
  id v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  uint64_t v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  double v36;
  uint64_t *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  id v45;
  void *v46;
  _QWORD *v47;
  id v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  void *v55;
  id v56;
  id v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  unint64_t v62;
  unint64_t v63;
  int64_t v64;
  unint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t (*v74)(void);
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  void *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v87;
  id v88;
  id v89;
  void (*v90)(uint64_t *__return_ptr);
  float v91;
  float32x4_t v92;
  float32x4_t v93;
  uint64_t (*v94)(void);
  uint64_t *v95;
  uint64_t v96;
  uint64_t (*v97)(void);
  uint64_t v98;
  void *v99;
  void *v100;
  uint64_t v101;
  void *v102;
  id v103;
  id v104;
  uint64_t v105;
  id v106;
  uint64_t (*v107)(void);
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  char v114;
  int v115;
  char v116;
  char v117;
  uint64_t *v118;
  char *v119;
  char v120;
  int v121;
  int v122;
  char v123;
  char v124;
  uint64_t *v125;
  int v126;
  uint64_t v127;
  void *v128;
  id v129;
  id v130;
  id v131;
  id v132;
  __int128 v133;
  int v134;
  int v135;
  int v136;
  __int128 v137;
  int v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t *v143;
  char *v144;
  id v145;
  _QWORD *v146;
  __int128 v147;
  int64_t v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  char *v153;
  void (**v154)(_QWORD, _QWORD);
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  __int128 v158;
  __n128 v159;
  __n128 v160;
  __n128 v161;
  id v162[3];
  uint64_t v163;
  _OWORD v164[24];
  _BYTE v165[304];
  __int128 v166;
  _BYTE v167[304];
  _BYTE v168[304];
  char v169;
  char v170;
  int v171;
  char v172;
  char v173;
  char v174;
  char v175;
  unint64_t v176;
  uint64_t v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  int64_t v182;
  int v183;
  char *v184;
  char v185;
  _OWORD v186[90];
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[38];
  _BYTE v191[1440];
  _QWORD v192[38];
  _BYTE v193[1440];
  uint64_t v194[38];
  uint64_t v195[38];
  uint64_t v196[38];
  _BYTE v197[1440];
  uint64_t v198[38];
  _BYTE v199[304];
  uint64_t v200[38];
  _BYTE v201[304];
  _BYTE v202[1440];
  _QWORD v203[180];
  uint64_t v204[38];
  _BYTE v205[304];
  uint64_t v206[38];
  _BYTE v207[312];
  uint64_t v208;
  _BYTE v209[16];
  _BYTE v210[24];
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  _BYTE v214[32];
  uint64_t v215;
  uint64_t v216;
  _BYTE v217[24];
  uint64_t v218;
  uint64_t v219[39];
  uint64_t v220;
  __n128 v221;
  char v222;
  float v223;
  char v224;
  uint64_t v225;
  __n128 v226;
  char v227;
  float v228;
  char v229;
  uint64_t v230;
  float v231;
  char v232;
  __n128 v233;
  char v234;
  _BYTE v235[16];
  void *v236;

  v7 = (_QWORD *)type metadata accessor for DispatchWorkItemFlags(0);
  v154 = (void (**)(_QWORD, _QWORD))*(v7 - 1);
  v155 = v7;
  __chkstk_darwin(v7);
  v153 = (char *)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v152 = type metadata accessor for DispatchQoS(0);
  *(_QWORD *)&v151 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  *(_QWORD *)&v150 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10047A930 != -1)
    goto LABEL_131;
LABEL_2:
  *(_QWORD *)&v158 = a1;
  a1 = qword_1004AF248;
  if (!qword_1004AF248)
    goto LABEL_152;
  v143 = &v177;
  v144 = (char *)&v186[82];
  swift_beginAccess(qword_1004AF248 + 80, &v189, 0, 0);
  v2 = *(id *)(a1 + 80);
  v4 = (unint64_t)v2 + 64;
  v10 = 1 << *((_BYTE *)v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *((_QWORD *)v2 + 8);
  v13 = (unint64_t)(v10 + 63) >> 6;
  v156 = v158 + 228;
  v157 = v158 + 112;
  swift_bridgeObjectRetain(v2);
  v5 = 0;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v5 << 6);
      goto LABEL_25;
    }
    v16 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_128;
    }
    if (v16 >= v13)
      goto LABEL_31;
    v17 = *(_QWORD *)(v4 + 8 * v16);
    ++v5;
    if (!v17)
    {
      v5 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_31;
      v17 = *(_QWORD *)(v4 + 8 * v5);
      if (!v17)
      {
        v5 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_31;
        v17 = *(_QWORD *)(v4 + 8 * v5);
        if (!v17)
        {
          v5 = v16 + 3;
          if (v16 + 3 >= v13)
            goto LABEL_31;
          v17 = *(_QWORD *)(v4 + 8 * v5);
          if (!v17)
            break;
        }
      }
    }
LABEL_24:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v5 << 6);
LABEL_25:
    v19 = *(_QWORD **)(*((_QWORD *)v2 + 7) + 8 * v15);
    v3 = *(_QWORD *)((swift_isaMask & *v19) + 0x280);
    v1 = v19;
    ((void (*)(void))v3)();
    a1 = v20;
    v21 = swift_bridgeObjectRelease(v20);
    if (a1)
      goto LABEL_6;
    v3 = *(_QWORD *)((swift_isaMask & *v1) + 0x2C0);
    v22 = ((uint64_t (*)(__n128))v3)(v21);
    v23.n128_f64[0] = (*(double (**)(uint64_t))(*(_QWORD *)v22 + 368))(v22);
    v161 = v24;
    *(__n128 *)v162 = v23;
    v159 = v26;
    v160 = v25;
    swift_release();
    v27.n128_f64[0] = simd_float4x4.position.getter(*(__n128 *)v162, v161, v160, v159);
    *(__n128 *)v162 = v27;
    sub_100012C58(v157, (uint64_t)v214, &qword_100484AD0);
    sub_100012C58((uint64_t)v214, (uint64_t)&v226, &qword_100484AD0);
    a1 = (uint64_t)&v221;
    if ((v227 & 1) != 0)
      goto LABEL_148;
    v161 = v226;
    sub_100012C58(v156, (uint64_t)&v213, &qword_10047F0A8);
    v28 = sub_100012C58((uint64_t)&v213, (uint64_t)&v228, &qword_10047F0A8);
    if ((v229 & 1) != 0)
      goto LABEL_149;
    v29 = vsubq_f32(*(float32x4_t *)v162, (float32x4_t)v161);
    v30 = vmulq_f32(v29, v29);
    if (v228 < sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v30, 2), vaddq_f32(v30, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v30.f32, 1))).f32[0]))
    {
LABEL_6:

    }
    else
    {
      v31 = ((uint64_t (*)(uint64_t, float))v3)(v28, v228);
      v32.n128_f64[0] = (*(double (**)(uint64_t))(*(_QWORD *)v31 + 368))(v31);
      v161 = v33;
      *(__n128 *)v162 = v32;
      v159 = v35;
      v160 = v34;
      swift_release();
      v36 = simd_float4x4.position.getter(*(__n128 *)v162, v161, v160, v159);
      a1 = static WorldRectangleData.pointLiesWithinRectangle(point:rectangle:pointsCoplanar:)(v158, 0, v36);

      if ((a1 & 1) != 0)
      {
        swift_release();
        return;
      }
    }
  }
  v18 = v16 + 4;
  if (v18 >= v13)
    goto LABEL_31;
  v17 = *(_QWORD *)(v4 + 8 * v18);
  if (v17)
  {
    v5 = v18;
    goto LABEL_24;
  }
  while (1)
  {
    v5 = v18 + 1;
    if (__OFADD__(v18, 1))
      goto LABEL_130;
    if (v5 >= v13)
      break;
    v17 = *(_QWORD *)(v4 + 8 * v5);
    ++v18;
    if (v17)
      goto LABEL_24;
  }
LABEL_31:
  swift_release();
  if (!qword_1004AF238)
    goto LABEL_153;
  v37 = (uint64_t *)v158;
  v38 = v146;
  v145 = *(id *)(qword_1004AF238 + 80);
  if (!v145)
    goto LABEL_45;
  v39 = v146;
  swift_beginAccess(v146 + 26, &v163, 0, 0);
  v40 = v39[26];
  v41 = v39[27];
  v2 = (id)v39[28];
  v42 = type metadata accessor for WorldRectangle(0);
  v159.n128_u64[0] = (unint64_t)v145;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v2);
  v3 = OrderedDictionary.values.getter(v40, v41, v2, &type metadata for String, v42, &protocol witness table for String);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v40);
  if ((unint64_t)v3 >> 62)
    goto LABEL_133;
  v1 = *(uint64_t **)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v1)
    goto LABEL_35;
LABEL_43:
  while (2)
  {
    swift_bridgeObjectRelease(v3);
    sub_100012C58((uint64_t)v37, (uint64_t)&v218, &qword_100485BF8);
    sub_100012C58((uint64_t)&v218, (uint64_t)&v220, &qword_100485BF8);
    a1 = v220;
    if (!v220)
      goto LABEL_154;
    v55 = (void *)objc_opt_self(UIColor);
    v56 = (id)v159.n128_u64[0];
    v57 = objc_msgSend(v55, "whiteColor");
    sub_100047C24(a1, v57, 0x74616469646E6143, 0xE900000000000065, 1.0);

    v38 = v146;
LABEL_45:
    v58 = v38;
    swift_beginAccess(v38 + 14, &v188, 0, 0);
    a1 = v58[14];
    v2 = (id)(a1 + 64);
    v59 = 1 << *(_BYTE *)(a1 + 32);
    v60 = -1;
    if (v59 < 64)
      v60 = ~(-1 << v59);
    v4 = v60 & *(_QWORD *)(a1 + 64);
    v3 = (unint64_t)(v59 + 63) >> 6;
    swift_bridgeObjectRetain(a1);
    v61 = 0;
    v1 = &qword_100485BF0;
    while (2)
    {
      if (v4)
      {
        v62 = __clz(__rbit64(v4));
        v4 &= v4 - 1;
        v63 = v62 | (v61 << 6);
LABEL_66:
        memcpy(v219, (const void *)(*(_QWORD *)(a1 + 56) + 304 * v63), 0x130uLL);
        sub_1000C2C50(v219);
        sub_1000C2C50(v37);
        sub_10015BADC((uint64_t)v219, (uint64_t)v37, 0, (uint64_t)v191);
        sub_100012C58((uint64_t)v191, (uint64_t)v197, &qword_100485BF0);
        if (sub_10014157C((uint64_t)v197) == 1)
          continue;
        v5 = v197[1432];
        sub_100141594((uint64_t)v191);
        if ((v5 & 1) == 0)
          continue;
        swift_release();
LABEL_117:

        return;
      }
      break;
    }
    v64 = v61 + 1;
    if (__OFADD__(v61, 1))
      goto LABEL_129;
    if (v64 < v3)
    {
      v65 = *((_QWORD *)v2 + v64);
      ++v61;
      if (v65)
        goto LABEL_65;
      v61 = v64 + 1;
      if (v64 + 1 >= v3)
        break;
      v65 = *((_QWORD *)v2 + v61);
      if (v65)
        goto LABEL_65;
      v61 = v64 + 2;
      if (v64 + 2 >= v3)
        break;
      v65 = *((_QWORD *)v2 + v61);
      if (v65)
        goto LABEL_65;
      v61 = v64 + 3;
      if (v64 + 3 >= v3)
        break;
      v65 = *((_QWORD *)v2 + v61);
      if (v65)
        goto LABEL_65;
      v66 = v64 + 4;
      if (v66 >= v3)
        break;
      v65 = *((_QWORD *)v2 + v66);
      if (v65)
      {
        v61 = v66;
LABEL_65:
        v4 = (v65 - 1) & v65;
        v63 = __clz(__rbit64(v65)) + (v61 << 6);
        goto LABEL_66;
      }
      while (1)
      {
        v61 = v66 + 1;
        if (__OFADD__(v66, 1))
          break;
        if (v61 >= v3)
          goto LABEL_69;
        v65 = *((_QWORD *)v2 + v61);
        ++v66;
        if (v65)
          goto LABEL_65;
      }
      __break(1u);
LABEL_133:
      if (v3 < 0)
        v127 = v3;
      else
        v127 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v3);
      v1 = (uint64_t *)_CocoaArrayWrapper.endIndex.getter(v127);
      swift_bridgeObjectRelease(v3);
      if (!v1)
        continue;
LABEL_35:
      *(_QWORD *)&v149 = v3 & 0xC000000000000001;
      v5 = 4;
      v148 = v3;
      *(_QWORD *)&v147 = v1;
      while (1)
      {
        a1 = v5 - 4;
        v43 = (_QWORD)v149
            ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v3)
            : *(id *)(v3 + 8 * v5);
        v4 = (unint64_t)v43;
        if (__OFADD__(a1, 1))
          break;
        v2 = *(id *)((swift_isaMask & *v43) + 0x260);
        v44 = (id)v159.n128_u64[0];
        a1 = v4;
        ((void (*)(uint64_t *__return_ptr))v2)(v190);
        sub_100012C58((uint64_t)v190, (uint64_t)v206, &qword_100484AC8);
        if (sub_100124C4C(v206) == 1)
          goto LABEL_150;
        v161.n128_u64[0] = v4;
        v162[0] = (id)(v5 - 3);
        memcpy(v207, v206, 0x130uLL);
        a1 = (uint64_t)&qword_100485BF8;
        sub_100012C58((uint64_t)v207, (uint64_t)&v208, &qword_100485BF8);
        sub_100141EB8(&v208);
        sub_100124C70(v190);
        sub_100012C58((uint64_t)&v208, (uint64_t)&v236, &qword_100485BF8);
        v2 = v236;
        if (!v236)
          goto LABEL_151;
        v45 = objc_msgSend((id)objc_opt_self(UIColor), "greenColor");
        sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
        v46 = (void *)static OS_dispatch_queue.main.getter();
        v47 = (_QWORD *)swift_allocObject(&unk_100447790, 64, 7);
        v47[2] = v44;
        v47[3] = v2;
        v47[4] = 0x3FF0000000000000;
        v47[5] = v45;
        v47[6] = 0;
        v47[7] = 0xE000000000000000;
        v203[4] = sub_100049968;
        v203[5] = v47;
        v203[0] = _NSConcreteStackBlock;
        v203[1] = 1107296256;
        v203[2] = sub_10003ECA0;
        v203[3] = &unk_1004477A8;
        v2 = _Block_copy(v203);
        v160.n128_u64[0] = (unint64_t)v44;
        sub_100141EB8(&v208);
        v48 = v45;
        v49 = swift_release();
        v50 = v150;
        static DispatchQoS.unspecified.getter(v49);
        v203[0] = _swiftEmptyArrayStorage;
        v4 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v51 = sub_10000EDC8((uint64_t *)&unk_10047E430);
        v52 = sub_100043310((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430, (uint64_t)&protocol conformance descriptor for [A]);
        v53 = v153;
        v54 = v155;
        dispatch thunk of SetAlgebra.init<A>(_:)(v203, v51, v52, v155, v4);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v50, v53, v2);
        _Block_release(v2);

        ((void (**)(char *, _QWORD *))v154)[1](v53, v54);
        (*(void (**)(uint64_t, _QWORD))(v151 + 8))(v50, v152);

        sub_10007BB44(&v208);
        ++v5;
        v1 = (uint64_t *)v147;
        v37 = (uint64_t *)v158;
        v3 = v148;
        if (v162[0] == (id)v147)
          goto LABEL_43;
      }
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      swift_once(&qword_10047A930, sub_100083368);
      goto LABEL_2;
    }
    break;
  }
LABEL_69:
  swift_release();
  v2 = v146;
  v159.n128_u64[0] = (unint64_t)(v146 + 26);
  swift_beginAccess(v146 + 26, &v187, 0, 0);
  a1 = *((_QWORD *)v2 + 26);
  v1 = (uint64_t *)*((_QWORD *)v2 + 27);
  v67 = *((_QWORD *)v2 + 28);
  v68 = type metadata accessor for WorldRectangle(0);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v67);
  v3 = OrderedDictionary.values.getter(a1, v1, v67, &type metadata for String, v68, &protocol witness table for String);
  swift_bridgeObjectRelease(v67);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(a1);
  if (!((unint64_t)v3 >> 62))
  {
    v69 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v70 = v146;
    if (v69)
      goto LABEL_71;
LABEL_142:
    swift_bridgeObjectRelease(v3);
    v5 = 0;
    v4 = 0;
LABEL_143:
    sub_10013D438(v37);
    if (!v145)
      goto LABEL_146;
    sub_100012C58((uint64_t)v37, (uint64_t)v164, &qword_100485BF8);
    sub_100012C58((uint64_t)v164, (uint64_t)v186, &qword_100485BF8);
    a1 = *(_QWORD *)&v186[0];
    if (*(_QWORD *)&v186[0])
    {
      v128 = (void *)objc_opt_self(UIColor);
      v129 = v145;
      v130 = objc_msgSend(v128, "greenColor");
      sub_100047C24(a1, v130, 5719374, 0xE300000000000000, 1.0);

      goto LABEL_146;
    }
LABEL_156:
    v131 = v145;

    __break(1u);
LABEL_157:

    __break(1u);
    goto LABEL_158;
  }
  if (v3 < 0)
    a1 = v3;
  else
    a1 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v69 = _CocoaArrayWrapper.endIndex.getter(a1);
  swift_bridgeObjectRelease(v3);
  v70 = v146;
  if (!v69)
    goto LABEL_142;
LABEL_71:
  if (v69 < 1)
  {
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
    goto LABEL_155;
  }
  v1 = 0;
  v5 = 0;
  v4 = 0;
  v71 = 0;
  v155 = v70 + 31;
  while (2)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v72 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v71, v3);
    else
      v72 = *(id *)(v3 + 8 * v71 + 32);
    v73 = v72;
    switch((*(uint64_t (**)(void))((swift_isaMask & *v72) + 0xD0))())
    {
      case 1:
        v162[0] = v1;
        v160.n128_u64[0] = v4;
        v161.n128_u64[0] = v5;
        v74 = *(uint64_t (**)(void))((swift_isaMask & *v73) + 0xB8);
        v75 = v73;
        v76 = v74();
        v78 = v77;

        swift_beginAccess(v159.n128_u64[0], v203, 32, 0);
        v79 = v146[27];
        if (*(_QWORD *)(v79 + 16))
        {
          swift_bridgeObjectRetain(v78);
          v80 = sub_1000C80A8(v76, v78);
          if ((v81 & 1) != 0)
          {
            v82 = *(void **)(*(_QWORD *)(v79 + 56) + 8 * v80);
            swift_endAccess(v203);
            v83 = v82;
            swift_bridgeObjectRelease(v78);
            sub_10013EA58(v83);

            v37 = (uint64_t *)v158;
            goto LABEL_87;
          }
          swift_bridgeObjectRelease(v78);
        }
        swift_endAccess(v203);
LABEL_87:
        v84 = v146[32];
        if (!v84)
          goto LABEL_95;
        v85 = v146[31];
        if (v85 == v76 && v84 == v78)
        {
LABEL_94:
          v5 = v161.n128_u64[0];
          v87 = v155;
          *v155 = 0;
          v87[1] = 0;
          swift_bridgeObjectRelease(v78);

          swift_bridgeObjectRelease(v84);
        }
        else
        {
          if ((_stringCompareWithSmolCheck(_:_:expecting:)(v85, v146[32], v76, v78, 0) & 1) != 0)
          {
            v84 = v146[32];
            goto LABEL_94;
          }
LABEL_95:
          swift_bridgeObjectRelease(v78);

          v5 = v161.n128_u64[0];
        }
        v4 = v160.n128_u64[0];
        v1 = (uint64_t *)v162[0];
        break;
      case 5:

        v4 = (unint64_t)v73;
        break;
      case 6:

        v1 = v73;
        break;
      case 9:

        v5 = (int64_t)v73;
        break;
      default:

        break;
    }
    if (v69 != ++v71)
      continue;
    break;
  }
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_102;
  v162[0] = v1;
  v1 = *(uint64_t **)((swift_isaMask & *(_QWORD *)v4) + 0x260);
  v2 = (id)v4;
  a1 = (uint64_t)v2;
  ((void (*)(_QWORD *__return_ptr))v1)(v192);
  sub_100012C58((uint64_t)v192, (uint64_t)v204, &qword_100484AC8);
  if (sub_100124C4C(v204) == 1)
  {
LABEL_155:

    __break(1u);
    goto LABEL_156;
  }
  memcpy(v205, v204, sizeof(v205));
  v88 = v145;
  v89 = v145;
  sub_1000C2C50(v37);
  sub_10015BADC((uint64_t)v205, (uint64_t)v37, v88, (uint64_t)v193);
  sub_100012C58((uint64_t)v193, (uint64_t)v202, &qword_100485BF0);
  if (sub_10014157C((uint64_t)v202) == 1)
  {

    goto LABEL_101;
  }
  memcpy(v203, v202, 0x599uLL);
  sub_100012C58((uint64_t)&v203[166], (uint64_t)v209, &qword_100485C00);
  memcpy(v186, v203, 0x599uLL);
  sub_100012C58((uint64_t)v209, (uint64_t)v235, &qword_100485C00);
  if (v235[8] == 1)
    sub_10015AC88();
  if ((v144[24] & 1) != 0)
    goto LABEL_163;
  v154 = (void (**)(_QWORD, _QWORD))v89;
  v155 = v2;
  v161.n128_u64[0] = v5;
  v112 = *(_QWORD *)&v186[83];

  v159.n128_u64[0] = v112;
  if (v112 >= 1)
  {
    v160 = (__n128)v186[0];
    v158 = v186[1];
    v157 = *(_QWORD *)&v186[2];
    LODWORD(v156) = BYTE8(v186[2]);
    v153 = *(char **)&v186[4];
    memcpy(v198, &v186[5], sizeof(v198));
    memcpy(v199, &v186[24], sizeof(v199));
    v139 = v186[3];
    v142 = v186[43];
    sub_100012C58((uint64_t)&v186[44], (uint64_t)v200, &qword_100484AC8);
    sub_100012C58((uint64_t)&v186[63], (uint64_t)v201, &qword_100484AC8);
    v113 = *v144;
    v114 = v144[1];
    v115 = DWORD1(v186[82]);
    v116 = v144[8];
    v117 = v144[9];
    LODWORD(v141) = v144[10];
    LODWORD(v140) = v144[11];
    v151 = v186[85];
    v152 = v186[84];
    v149 = v186[87];
    v150 = v186[86];
    v148 = *(_QWORD *)&v186[88];
    LODWORD(v147) = DWORD2(v186[88]);
    LODWORD(v146) = v144[108];
    v145 = *(id *)&v186[89];
    LODWORD(v144) = v144[120];
    v164[0] = v160;
    v164[1] = v158;
    *(_QWORD *)&v164[2] = v157;
    BYTE8(v164[2]) = v156;
    v164[3] = v139;
    *(_QWORD *)&v164[4] = v153;
    memcpy(&v164[5], v198, 0x130uLL);
    memcpy(v165, v199, sizeof(v165));
    v166 = v142;
    sub_100012C58((uint64_t)v200, (uint64_t)v167, &qword_100484AC8);
    sub_100012C58((uint64_t)v201, (uint64_t)v168, &qword_100484AC8);
    v169 = v113;
    v170 = v114;
    v171 = v115;
    v172 = v116;
    v173 = v117;
    v174 = v141;
    v175 = v140;
    v176 = v159.n128_u64[0];
    v118 = v143;
    *(_BYTE *)v143 = 0;
    v178 = v152;
    v179 = v151;
    v180 = v150;
    v181 = v149;
    v182 = v148;
    v183 = v147;
    *((_BYTE *)v118 + 84) = (_BYTE)v146;
    v184 = (char *)v145;
    v185 = (char)v144;
    sub_100141EE0((uint64_t)v164);
    goto LABEL_124;
  }
  v160.n128_u64[0] = v4;
  v119 = v144;
  LODWORD(v153) = v144[120];
  v151 = v186[1];
  v152 = v186[0];
  *(_QWORD *)&v150 = *(_QWORD *)&v186[2];
  LODWORD(v149) = BYTE8(v186[2]);
  v148 = *(_QWORD *)&v186[4];
  memcpy(v198, &v186[5], sizeof(v198));
  memcpy(v199, &v186[24], sizeof(v199));
  v133 = v186[3];
  v3 = (int64_t)&v164[5];
  v137 = v186[43];
  sub_100012C58((uint64_t)&v186[44], (uint64_t)v200, &qword_100484AC8);
  sub_100012C58((uint64_t)&v186[63], (uint64_t)v201, &qword_100484AC8);
  v120 = *v119;
  v121 = v119[1];
  v122 = DWORD1(v186[82]);
  v135 = v119[8];
  v136 = v121;
  v123 = v119[9];
  v124 = v119[10];
  v134 = v119[11];
  v147 = v186[84];
  v141 = v186[86];
  v142 = v186[85];
  v140 = v186[87];
  *(_QWORD *)&v139 = *(_QWORD *)&v186[88];
  v138 = DWORD2(v186[88]);
  LOBYTE(v119) = v119[108];
  v144 = *(char **)&v186[89];
  v164[0] = v152;
  v164[1] = v151;
  *(_QWORD *)&v164[2] = v150;
  BYTE8(v164[2]) = v149;
  v164[3] = v133;
  *(_QWORD *)&v164[4] = v148;
  memcpy(&v164[5], v198, 0x130uLL);
  memcpy(v165, v199, sizeof(v165));
  v166 = v137;
  sub_100012C58((uint64_t)v200, (uint64_t)v167, &qword_100484AC8);
  sub_100012C58((uint64_t)v201, (uint64_t)v168, &qword_100484AC8);
  v169 = v120;
  v170 = v136;
  v171 = v122;
  v172 = v135;
  v173 = v123;
  v174 = v124;
  v175 = v134;
  v176 = v159.n128_u64[0];
  v125 = v143;
  *(_BYTE *)v143 = 0;
  v178 = v147;
  v179 = v142;
  v180 = v141;
  v181 = v140;
  v182 = v139;
  v183 = v138;
  *((_BYTE *)v125 + 84) = (_BYTE)v119;
  v184 = v144;
  v126 = (int)v153;
  v185 = (char)v153;
  sub_100141EE0((uint64_t)v164);
  if (v126 == 1)
  {
LABEL_124:

    return;
  }
  v37 = (uint64_t *)v158;
  v5 = v161.n128_u64[0];
  v4 = v160.n128_u64[0];
LABEL_101:
  v1 = (uint64_t *)v162[0];
LABEL_102:
  if (!v1)
    goto LABEL_143;
  a1 = (uint64_t)&qword_100484AD0;
  sub_100012C58(v157, (uint64_t)v217, &qword_100484AD0);
  sub_100012C58((uint64_t)v217, (uint64_t)&v221, &qword_100484AD0);
  if (v222 == 1)
    goto LABEL_157;
  *(__n128 *)v162 = v221;
  v90 = *(void (**)(uint64_t *__return_ptr))((swift_isaMask & *v1) + 0x260);
  a1 = v1;
  v90(v194);

  sub_100012C58((uint64_t)v194, (uint64_t)v164, &qword_100484AC8);
  if (sub_100124C4C((uint64_t *)v164) == 1)
  {
LABEL_158:

    __break(1u);
    goto LABEL_159;
  }
  memcpy(v186, v164, 0x130uLL);
  sub_100124C70(v194);
  v1 = &qword_100484AD0;
  sub_100012C58((uint64_t)&v186[7], (uint64_t)v210, &qword_100484AD0);
  sub_100012C58((uint64_t)v210, (uint64_t)&v233, &qword_100484AD0);
  if (v234 == 1)
  {
LABEL_159:

    __break(1u);
    goto LABEL_160;
  }
  v161 = v233;
  v1 = &qword_10047F0A8;
  sub_100012C58(v156, (uint64_t)&v216, &qword_10047F0A8);
  sub_100012C58((uint64_t)&v216, (uint64_t)&v223, &qword_10047F0A8);
  v3 = (int64_t)&v221;
  if (v224 == 1)
  {
LABEL_160:

    __break(1u);
    goto LABEL_161;
  }
  v91 = v223;
  v1 = (uint64_t *)(id)a1;
  v90(v195);

  sub_100012C58((uint64_t)v195, (uint64_t)v200, &qword_100484AC8);
  if (sub_100124C4C(v200) == 1)
  {
LABEL_161:

    __break(1u);
    goto LABEL_162;
  }
  memcpy(v201, v200, sizeof(v201));
  sub_100124C70(v195);
  sub_100012C58((uint64_t)&v201[228], (uint64_t)&v211, &qword_10047F0A8);
  sub_100012C58((uint64_t)&v211, (uint64_t)&v231, &qword_10047F0A8);
  if (v232 == 1)
  {
LABEL_162:

    __break(1u);
LABEL_163:
    __break(1u);
    goto LABEL_164;
  }
  v92 = vsubq_f32(*(float32x4_t *)v162, (float32x4_t)v161);
  v93 = vmulq_f32(v92, v92);
  if (sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v93, 2), vaddq_f32(v93, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v93.f32, 1))).f32[0]) >= (float)(v91 + v231)|| (v94 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xD0), v95 = v1, v96 = v94(), v95, v96 != 6))
  {
    v107 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xB8);
    v108 = v1;
    v109 = v107();
    v111 = v110;

    sub_10013B93C(v109, v111);
    swift_bridgeObjectRelease(v111);
    sub_10013D438(v37);

    goto LABEL_117;
  }
  v97 = *(uint64_t (**)(void))((swift_isaMask & *v95) + 0xB8);
  v3 = v95;
  v98 = v97();
  v100 = v99;

  sub_1001396A8(v98, v100, (uint64_t)v37);
  swift_bridgeObjectRelease(v100);
  if (v145)
  {
    sub_100012C58((uint64_t)v37, (uint64_t)&v215, &qword_100485BF8);
    sub_100012C58((uint64_t)&v215, (uint64_t)&v225, &qword_100485BF8);
    v101 = v225;
    if (v225)
    {
      v102 = (void *)objc_opt_self(UIColor);
      v103 = v145;
      v104 = objc_msgSend(v102, "greenColor");
      sub_100047C24(v101, v104, 5719374, 0xE300000000000000, 1.0);

      v3 = (int64_t)(id)v3;
      v90(v196);

      sub_100012C58((uint64_t)v196, (uint64_t)v198, &qword_100484AC8);
      if (sub_100124C4C(v198) != 1)
      {
        memcpy(v199, v198, sizeof(v199));
        sub_100012C58((uint64_t)v199, (uint64_t)&v212, &qword_100485BF8);
        sub_100141EB8(&v212);
        sub_100124C70(v196);
        sub_100012C58((uint64_t)&v212, (uint64_t)&v230, &qword_100485BF8);
        v105 = v230;
        if (v230)
        {
          v106 = objc_msgSend(v102, "redColor");
          sub_100047C24(v105, v106, 4475983, 0xE300000000000000, 1.0);

          sub_10007BB44(&v212);
          return;
        }
LABEL_166:

        __break(1u);
        JUMPOUT(0x10013D414);
      }
LABEL_165:

      __break(1u);
      goto LABEL_166;
    }
LABEL_164:
    v132 = v145;

    __break(1u);
    goto LABEL_165;
  }

LABEL_146:
}

double sub_10013D438(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  double result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t (*)(), uint64_t, __n128);
  _QWORD *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t (*)(), uint64_t, __n128);
  _QWORD *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(BOOL (*)(double, double), uint64_t, __n128);
  _QWORD *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(double (*)(), uint64_t, __n128);
  _QWORD *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(double (*)(), uint64_t, __n128);
  _QWORD *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(double (*)(), uint64_t, __n128);
  _QWORD *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(double (*)(), uint64_t, __n128);
  _QWORD *v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(void (*)(), uint64_t, __n128);
  _QWORD *v48;
  __n128 v49;
  uint64_t v50;
  void (*v51)(void (*)(), uint64_t, __n128);
  _QWORD *v52;
  __n128 v53;
  void (*v54)(double (*)(), _QWORD);
  _QWORD *v55;
  void (*v56)(double (*)(), _QWORD);
  _QWORD *v57;
  uint64_t (*v58)(_BYTE *, __n128);
  __n128 v59;
  void (*v60)(_BYTE *, _QWORD);
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _BYTE v67[32];
  _QWORD v68[2];
  void *v69;

  v2 = v1;
  sub_10013D9E8(a1);
  if (v3)
  {
    v5 = v3;
    v6 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xB8))();
    v68[1] = v7;
    v69 = v5;
    v68[0] = v6;
    swift_beginAccess(v2 + 208, v67, 33, 0);
    v8 = v5;
    v9 = sub_10000EDC8(&qword_100485B98);
    OrderedDictionary.subscript.setter(&v69, v68, v9);
    swift_endAccess(v67);
    v10 = swift_allocObject(&unk_100447858, 24, 7);
    swift_weakInit(v10 + 16, v2);
    v11 = swift_allocObject(&unk_100447880, 32, 7);
    *(_QWORD *)(v11 + 16) = v8;
    *(_QWORD *)(v11 + 24) = v10;
    v12 = *(void (**)(uint64_t (*)(), uint64_t, __n128))((swift_isaMask & *v8) + 0xF0);
    v13 = v8;
    v14 = swift_retain();
    v12(sub_1001422D0, v11, v14);
    swift_release();
    v15 = swift_allocObject(&unk_100447858, 24, 7);
    swift_weakInit(v15 + 16, v2);
    v16 = swift_allocObject(&unk_1004478A8, 32, 7);
    *(_QWORD *)(v16 + 16) = v13;
    *(_QWORD *)(v16 + 24) = v15;
    v17 = *(void (**)(uint64_t (*)(), uint64_t, __n128))((swift_isaMask & *v13) + 0x108);
    v18 = v13;
    v19 = swift_retain();
    v17(sub_1001422DC, v16, v19);
    swift_release();
    v20 = swift_allocObject(&unk_100447858, 24, 7);
    swift_weakInit(v20 + 16, v2);
    v21 = swift_allocObject(&unk_1004478D0, 32, 7);
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = v18;
    v22 = *(void (**)(BOOL (*)(double, double), uint64_t, __n128))((swift_isaMask & *v18) + 0x120);
    v23 = v18;
    v24 = swift_retain();
    v22(sub_1001422EC, v21, v24);
    swift_release();
    v25 = swift_allocObject(&unk_100447858, 24, 7);
    swift_weakInit(v25 + 16, v2);
    v26 = swift_allocObject(&unk_1004478F8, 32, 7);
    *(_QWORD *)(v26 + 16) = v23;
    *(_QWORD *)(v26 + 24) = v25;
    v27 = *(void (**)(double (*)(), uint64_t, __n128))((swift_isaMask & *v23) + 0x138);
    v28 = v23;
    v29 = swift_retain();
    v27(sub_1001422F8, v26, v29);
    swift_release();
    v30 = swift_allocObject(&unk_100447858, 24, 7);
    swift_weakInit(v30 + 16, v2);
    v31 = swift_allocObject(&unk_100447920, 32, 7);
    *(_QWORD *)(v31 + 16) = v28;
    *(_QWORD *)(v31 + 24) = v30;
    v32 = *(void (**)(double (*)(), uint64_t, __n128))((swift_isaMask & *v28) + 0x150);
    v33 = v28;
    v34 = swift_retain();
    v32(sub_100142304, v31, v34);
    swift_release();
    v35 = swift_allocObject(&unk_100447858, 24, 7);
    swift_weakInit(v35 + 16, v2);
    v36 = swift_allocObject(&unk_100447948, 32, 7);
    *(_QWORD *)(v36 + 16) = v33;
    *(_QWORD *)(v36 + 24) = v35;
    v37 = *(void (**)(double (*)(), uint64_t, __n128))((swift_isaMask & *v33) + 0x168);
    v38 = v33;
    v39 = swift_retain();
    v37(sub_100142310, v36, v39);
    swift_release();
    v40 = swift_allocObject(&unk_100447858, 24, 7);
    swift_weakInit(v40 + 16, v2);
    v41 = swift_allocObject(&unk_100447970, 32, 7);
    *(_QWORD *)(v41 + 16) = v38;
    *(_QWORD *)(v41 + 24) = v40;
    v42 = *(void (**)(double (*)(), uint64_t, __n128))((swift_isaMask & *v38) + 0x180);
    v43 = v38;
    v44 = swift_retain();
    v42(sub_10014231C, v41, v44);
    swift_release();
    v45 = swift_allocObject(&unk_100447858, 24, 7);
    swift_weakInit(v45 + 16, v2);
    v46 = swift_allocObject(&unk_100447998, 32, 7);
    *(_QWORD *)(v46 + 16) = v45;
    *(_QWORD *)(v46 + 24) = v43;
    v47 = *(void (**)(void (*)(), uint64_t, __n128))((swift_isaMask & *v43) + 0x1B0);
    v48 = v43;
    v49 = swift_retain();
    v47(sub_10014232C, v46, v49);
    swift_release();
    v50 = swift_allocObject(&unk_1004479C0, 32, 7);
    *(_QWORD *)(v50 + 16) = v2;
    *(_QWORD *)(v50 + 24) = v48;
    v51 = *(void (**)(void (*)(), uint64_t, __n128))((swift_isaMask & *v48) + 0x1C8);
    v52 = v48;
    v53 = swift_retain();
    v51(sub_100142374, v50, v53);
    v54 = *(void (**)(double (*)(), _QWORD))((swift_isaMask & *v52) + 0x198);
    v55 = v52;
    v54(sub_10005DFBC, 0);

    v56 = *(void (**)(double (*)(), _QWORD))((swift_isaMask & *v55) + 0x1E0);
    v57 = v55;
    v56(sub_10013F5F4, 0);

    v58 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v2 + 176) + 400);
    v59 = swift_retain();
    v60 = (void (*)(_BYTE *, _QWORD))v58(v67, v59);
    v62 = v61;
    v63 = v57;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v63);
    v65 = *(_QWORD *)((*v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v64 = *(_QWORD *)((*v62 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v65 >= v64 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v65 + 1, 1);
    v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v65, v63);
    specialized Array._endMutation()(v66);
    v60(v67, 0);

    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_10013D9E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  void (*v7)(_QWORD *__return_ptr, __n128);
  __n128 v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  _QWORD *v30;
  void (*v31)(uint64_t);
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  __n128 v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  _QWORD *v54;
  __n128 v55;
  char v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  id v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  __n128 v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  __n128 v80;
  _QWORD *v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  _QWORD *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  objc_class *v98;
  objc_class *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[5];

  v5 = (_QWORD *)v1;
  v7 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v1 + 160) + 144);
  v8 = swift_retain();
  v7(v103, v8);
  swift_release();
  v9 = (void *)v103[0];
  v10 = (void *)v103[1];
  v11 = (void *)v103[3];
  v12 = (id)v103[2];

  v13 = sub_10013A854(v11);
  if (!v13)
    return;
  v14 = v5 + 14;
  swift_beginAccess(v5 + 14, v103, 1, 0);
  v15 = v5[14];
  swift_retain();
  v16 = v13;
  v17 = swift_bridgeObjectRetain(v15);
  v19 = sub_100140584(v17, (uint64_t)v5, v16, v18);
  swift_bridgeObjectRelease(v15);
  swift_release();

  v20 = *(id *)(v19 + 16);
  swift_release();
  if (!v20)
  {
    v21 = *v14;
    *v14 = (uint64_t)_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(v21);
  }
  v22 = a1[2];
  if (!v22)
    goto LABEL_130;
  v100 = v22 & 0xC000000000000001;
  if ((v22 & 0xC000000000000001) != 0)
    goto LABEL_90;
  if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_92;
  }
  v23 = *(_QWORD *)(v22 + 32);
  swift_retain();
  while (1)
  {
    v99 = (objc_class *)type metadata accessor for WorldPoint(0);
    v24 = objc_allocWithZone(v99);
    v20 = (id)WorldPoint.init(anchor:type:state:)(v23, 0, 1);
    if (v100)
    {
LABEL_92:
      v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v22);
LABEL_11:
      v26 = static WorldPointType.default;
      v27 = objc_allocWithZone(v99);
      v28 = (void *)WorldPoint.init(anchor:type:state:)(v25, v26, 1);
      v98 = (objc_class *)type metadata accessor for WorldLine(0);
      v29 = objc_allocWithZone(v98);
      v20 = v20;
      v2 = v28;
      v30 = (_QWORD *)WorldLine.init(end1:end2:initialState:)(v20, v2, 1, 0);
      v3 = &swift_isaMask;
      v31 = *(void (**)(uint64_t))((swift_isaMask & *v30) + 0xD8);
      v4 = v30;
      v31(1);

      (*(void (**)(_QWORD))((swift_isaMask & *(_QWORD *)v4) + 0x2D0))(0);
      if (qword_10047A930 == -1)
        goto LABEL_12;
      goto LABEL_94;
    }
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      v25 = *(_QWORD *)(v22 + 40);
      swift_retain();
      goto LABEL_11;
    }
    __break(1u);
LABEL_94:
    swift_once(&qword_10047A930, sub_100083368);
LABEL_12:
    if (!qword_1004AF248)
      goto LABEL_131;
    swift_retain();
    v32 = sub_1001011A0((_QWORD *)v4, 0);
    swift_release();
    if ((v32 & 1) == 0)
      goto LABEL_51;
    v33 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
    v34 = swift_allocObject(v33, 40, 7);
    *(_OWORD *)(v34 + 16) = xmmword_1003B0F00;
    *(_QWORD *)(v34 + 32) = v4;
    v101 = v34;
    specialized Array._endMutation()(v34);
    v35 = v101;
    v102 = v101;
    v96 = v22 & 0xFFFFFFFFFFFFFF8;
    v97 = v22;
    if ((unint64_t)v22 >> 62)
    {
      if (v22 >= 0)
        v82 = v22 & 0xFFFFFFFFFFFFFF8;
      else
        v82 = v22;
      v83 = (id)v4;
      swift_bridgeObjectRetain(v22);
      v84 = _CocoaArrayWrapper.endIndex.getter(v82);
      v85 = v22;
      v22 = v84;
      swift_bridgeObjectRelease(v85);
      if (v22 < 2)
      {
LABEL_99:
        __break(1u);
        goto LABEL_100;
      }
    }
    else
    {
      v22 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v36 = (id)v4;
      if (v22 < 2)
        goto LABEL_99;
    }
    if (!((unint64_t)v101 >> 62))
    {
      v37 = *(_QWORD *)((v101 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v101);
      goto LABEL_18;
    }
LABEL_100:
    v86 = v101 < 0 ? v101 : v101 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v101, 2);
    v37 = _CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease(v101);
LABEL_18:
    v94 = v16;
    v95 = (void *)v4;
    v92 = (void *)v2;
    v93 = v20;
    v90 = a1;
    v91 = v5;
    if (!v37)
    {
LABEL_50:
      swift_bridgeObjectRelease(v35);
      __break(1u);
LABEL_51:

      return;
    }
    type metadata accessor for WorldAnchor(0);
    v38 = v37 - 1;
    if (!__OFSUB__(v37, 1))
      break;
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v22);
  }
  v2 = v22 == 2;
  v4 = 2;
  while (1)
  {
    if ((v35 & 0xC000000000000001) != 0)
    {
      v39 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v35);
    }
    else
    {
      if ((v38 & 0x8000000000000000) != 0)
        goto LABEL_83;
      if (v38 >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_84;
      v39 = *(id *)(v35 + 8 * v38 + 32);
    }
    v40 = v39;
    v41 = swift_bridgeObjectRelease(v35);
    v42 = (*(uint64_t (**)(__n128))((*v3 & *v40) + 0x250))(v41);

    if ((v42 & 0xC000000000000001) != 0)
    {
      v43 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v42);
    }
    else
    {
      if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        goto LABEL_85;
      v43 = *(id *)(v42 + 40);
    }
    v5 = v43;
    swift_bridgeObjectRelease(v42);
    v44 = v4 % v22;
    if (v100)
    {
      v45 = specialized _ArrayBuffer._getElementSlowPath(_:)(v44, v97);
    }
    else
    {
      if ((v44 & 0x8000000000000000) != 0)
        goto LABEL_88;
      if (v44 >= *(_QWORD *)(v96 + 16))
        goto LABEL_89;
      v46 = swift_retain();
    }
    v47 = WorldAnchor.__allocating_init(anchor:shouldAutoUpdate:)(v45, 1, v46);
    v48 = (*(uint64_t (**)(void))((*v3 & *v5) + 0x2F0))();
    v49 = (*(uint64_t (**)(void))((*v3 & *v5) + 0xD0))();
    v50 = objc_allocWithZone(v99);
    v51 = (void *)WorldPoint.init(anchor:type:state:)(v47, v48, v49);
    v52 = objc_allocWithZone(v98);
    a1 = v5;
    v53 = v51;
    v54 = (_QWORD *)WorldLine.init(end1:end2:initialState:)(a1, v53, 1, 0);
    (*(void (**)(_QWORD))((*v3 & *v54) + 0x2D0))(0);
    if (!qword_1004AF248)
      goto LABEL_129;
    v20 = *(id *)((*v3 & *v54) + 0x318);
    v55 = swift_retain();
    ((void (*)(uint64_t *, __n128))v20)(a1, v55);
    v56 = sub_1001011A0(v54, 0);
    swift_release();
    if ((v56 & 1) == 0)
    {
      v63 = v102;

      swift_bridgeObjectRelease(v63);
      return;
    }
    v16 = v54;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
    v58 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v57 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v58 >= v57 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
    v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v16);
    v60 = (uint64_t)&v102;
    specialized Array._endMutation()(v59);

    if ((v2 & 1) != 0)
      break;
    v5 = (_QWORD *)(v4 + 1);
    if (__OFADD__(v4, 1))
      goto LABEL_86;
    v35 = v102;
    if ((unint64_t)v102 >> 62)
    {
      if (v102 < 0)
        v62 = v102;
      else
        v62 = v102 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v102, 2);
      v61 = _CocoaArrayWrapper.endIndex.getter(v62);
      swift_bridgeObjectRelease(v35);
      if (!v61)
        goto LABEL_50;
    }
    else
    {
      v61 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v102);
      if (!v61)
        goto LABEL_50;
    }
    v2 = v5 == (_QWORD *)v22;
    ++v4;
    v38 = v61 - 1;
    if (__OFSUB__(v61, 1))
      goto LABEL_82;
  }
  if (!qword_1004AF248)
    goto LABEL_132;
  v22 = v102;
  v64 = (unint64_t)v102 >> 62;
  v4 = (uint64_t)v95;
  if (!((unint64_t)v102 >> 62))
  {
    v65 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain(v22);
    if (v65)
      goto LABEL_56;
LABEL_108:
    swift_bridgeObjectRelease(v22);
    __break(1u);
    goto LABEL_109;
  }
  if (v102 < 0)
    v87 = v102;
  else
    v87 = v102 & 0xFFFFFFFFFFFFFF8;
  swift_retain();
  swift_bridgeObjectRetain(v22);
  v65 = _CocoaArrayWrapper.endIndex.getter(v87);
  if (!v65)
    goto LABEL_108;
LABEL_56:
  v66 = v65 - 1;
  if (__OFSUB__(v65, 1))
  {
LABEL_109:
    __break(1u);
LABEL_110:
    v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v66, v22);
LABEL_61:
    v2 = (uint64_t)v67;
    swift_bridgeObjectRelease(v22);
    if (v64)
      goto LABEL_113;
    v68 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v22);
    if (v68)
      goto LABEL_63;
LABEL_117:
    swift_bridgeObjectRelease(v22);
    __break(1u);
LABEL_118:
    v69 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v22);
LABEL_66:
    v70 = v69;
    v71 = swift_bridgeObjectRelease(v22);
    v60 = (*(uint64_t (**)(__n128))((*v3 & *v70) + 0x250))(v71);

    if ((v60 & 0xC000000000000001) != 0)
      goto LABEL_120;
    if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v72 = *(id *)(v60 + 32);
      goto LABEL_69;
    }
    __break(1u);
    goto LABEL_122;
  }
  v16 = (_QWORD *)(v22 & 0xC000000000000001);
  if ((v22 & 0xC000000000000001) != 0)
    goto LABEL_110;
  if ((v66 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v66 < *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v67 = *(id *)(v22 + 8 * v66 + 32);
    goto LABEL_61;
  }
  __break(1u);
LABEL_113:
  if (v22 < 0)
    v88 = v22;
  else
    v88 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v22);
  if (!_CocoaArrayWrapper.endIndex.getter(v88))
    goto LABEL_117;
LABEL_63:
  if (v16)
    goto LABEL_118;
  if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v69 = *(id *)(v22 + 32);
    goto LABEL_66;
  }
  __break(1u);
LABEL_120:
  v72 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v60);
LABEL_69:
  v73 = v72;
  swift_bridgeObjectRelease(v60);
  sub_10010154C(v2, 0, v73, 0);

  swift_release();
  if (!v64)
  {
    v74 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v22);
    v2 = (uint64_t)v91;
    if (v74)
      goto LABEL_71;
LABEL_126:
    swift_bridgeObjectRelease(v22);
    sub_10014077C(v22, v90);
    swift_bridgeObjectRelease(v22);

    return;
  }
LABEL_122:
  if (v22 < 0)
    v89 = v22;
  else
    v89 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v22);
  v74 = _CocoaArrayWrapper.endIndex.getter(v89);
  v2 = (uint64_t)v91;
  if (!v74)
    goto LABEL_126;
LABEL_71:
  if (v74 >= 1)
  {
    a1 = 0;
    do
    {
      if (v16)
        v75 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v22);
      else
        v75 = *(id *)(v22 + 8 * (_QWORD)a1 + 32);
      v5 = v75;
      v76 = (*(uint64_t (**)(void))((*v3 & *v75) + 0x250))();
      v77 = v76;
      if ((v76 & 0xC000000000000001) != 0)
      {
        v78 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v76);
      }
      else
      {
        if (!*(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_87;
        v78 = *(id *)(v76 + 32);
      }
      v79 = v78;
      a1 = (uint64_t *)((char *)a1 + 1);
      v80 = swift_bridgeObjectRelease(v77);
      (*(void (**)(uint64_t, __n128))((*v3 & *v79) + 0x2F8))(1, v80);

      v81 = (_QWORD *)(*(uint64_t (**)(void))((*v3 & *v5) + 0x268))();
      (*(void (**)(uint64_t))((*v3 & *v81) + 0x2F8))(2);

    }
    while ((uint64_t *)v74 != a1);
    goto LABEL_126;
  }
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
}

uint64_t sub_10013E460(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  result = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0))();
  if (result != 6)
  {
    v5 = a2 + 16;
    swift_beginAccess(v5, v7, 0, 0);
    result = swift_weakLoadStrong(v5);
    if (result)
    {
      v6 = result;
      swift_retain();
      sub_10013B0C4(a1, (uint64_t)sub_10013FE74, v6);
      return swift_release_n(v6, 2);
    }
  }
  return result;
}

uint64_t sub_10013E4FC(_QWORD *a1, uint64_t a2)
{
  char v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  if ((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0))() == 5)
    goto LABEL_2;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_weakLoadStrong(a2 + 16);
  v4 = Strong;
  if (!Strong)
    return v4 & 1;
  v6 = sub_10013A760();
  v8 = v7;
  v9 = swift_release();
  if (!v8)
  {
LABEL_2:
    v4 = 0;
  }
  else
  {
    v10 = (*(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0xB8))(v9);
    v12 = v11;
    if (v6 == v10 && v8 == v11)
      v4 = 1;
    else
      v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v10, v11, 0);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v12);
  }
  return v4 & 1;
}

BOOL sub_10013E604(uint64_t a1, double a2, double a3)
{
  uint64_t v5;
  BOOL v6;
  _BYTE v8[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  if (swift_weakLoadStrong(v5))
  {
    v6 = sub_10014237C(a2, a3);
    swift_release();
  }
  else
  {
    return 0;
  }
  return v6;
}

double sub_10013E680(_QWORD *a1, uint64_t a2)
{
  double result;
  uint64_t v5;
  uint64_t Strong;
  uint64_t (*v7)(_BYTE *, __n128);
  __n128 v8;
  void (*v9)(_BYTE *, _QWORD, __n128);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  _BYTE v14[32];
  _BYTE v15[24];

  if ((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0))() != 5)
  {
    v5 = a2 + 16;
    swift_beginAccess(v5, v15, 0, 0);
    Strong = swift_weakLoadStrong(v5);
    if (Strong)
    {
      v7 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(Strong + 176) + 400);
      v8 = swift_retain();
      v9 = (void (*)(_BYTE *, _QWORD, __n128))v7(v14, v8);
      v10 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8))();
      v12 = v11;
      sub_100028000(v10, v11);
      v13 = swift_bridgeObjectRelease(v12);
      v9(v14, 0, v13);
      swift_release();
      swift_release();
    }
    swift_beginAccess(v5, v14, 0, 0);
    if (swift_weakLoadStrong(v5))
    {
      sub_10013941C(a1);
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

double sub_10013E7B4(_QWORD *a1, uint64_t a2)
{
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  if ((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0))() == 5)
  {
    v5 = a2 + 16;
    swift_beginAccess(v5, v9, 0, 0);
    if (swift_weakLoadStrong(v5))
    {
      v6 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8))();
      v8 = v7;
      sub_1001398A0(v6, v7, 9);
      swift_release();
      *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
    }
  }
  return result;
}

double sub_10013E864(_QWORD *a1, uint64_t a2)
{
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  if ((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0))() == 9)
  {
    v5 = a2 + 16;
    swift_beginAccess(v5, v9, 0, 0);
    if (swift_weakLoadStrong(v5))
    {
      v6 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8))();
      v8 = v7;
      sub_1001398A0(v6, v7, 5);
      swift_release();
      *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
    }
  }
  return result;
}

double sub_10013E914(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v4)(void);
  double result;
  uint64_t v6;
  uint64_t Strong;
  uint64_t (*v8)(_BYTE *, __n128);
  __n128 v9;
  void (*v10)(_BYTE *, _QWORD, __n128);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  _BYTE v15[32];
  _BYTE v16[24];

  v4 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0);
  if (v4() != 9 || v4() != 1)
  {
    v6 = a2 + 16;
    swift_beginAccess(v6, v16, 0, 0);
    Strong = swift_weakLoadStrong(v6);
    if (Strong)
    {
      v8 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(Strong + 176) + 400);
      v9 = swift_retain();
      v10 = (void (*)(_BYTE *, _QWORD, __n128))v8(v15, v9);
      v11 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8))();
      v13 = v12;
      sub_100028000(v11, v12);
      v14 = swift_bridgeObjectRelease(v13);
      v10(v15, 0, v14);
      swift_release();
      swift_release();
    }
    swift_beginAccess(v6, v15, 0, 0);
    if (swift_weakLoadStrong(v6))
    {
      sub_10013EA58(a1);
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_10013EA58(_QWORD *a1)
{
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  void *v10;
  _QWORD *v11;
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_BYTE *, __n128);
  __n128 v19;
  void (*v20)(_BYTE *, _QWORD, __n128);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  void *v43;
  _QWORD *v44;
  uint64_t (*v45)(_BYTE *, __n128);
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  __n128 v52;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(void);
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  void *v74;
  _QWORD *v75;
  uint64_t (*v76)(_BYTE *, __n128);
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  __n128 v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  void (*v90)(_BYTE *, _QWORD, __n128);
  void (*v91)(_BYTE *, _QWORD, __n128);
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  _BYTE v98[32];
  _QWORD v99[2];
  id v100;

  v2 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8);
  v3 = v2();
  v5 = v4;
  v6 = v1 + 208;
  swift_beginAccess(v1 + 208, v98, 32, 0);
  v92 = v1;
  v7 = *(_QWORD *)(v1 + 216);
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_1000C80A8(v3, v5), (v9 & 1) != 0))
  {
    v10 = *(void **)(*(_QWORD *)(v7 + 56) + 8 * v8);
    swift_endAccess(v98);
    v11 = v10;
    v12 = swift_bridgeObjectRelease(v5);
    (*(void (**)(__n128))((swift_isaMask & *v11) + 0x2D8))(v12);

  }
  else
  {
    swift_endAccess(v98);
    v13 = swift_bridgeObjectRelease(v5);
  }
  v14 = ((uint64_t (*)(__n128))v2)(v13);
  v16 = v15;
  v99[0] = v14;
  v99[1] = v15;
  swift_beginAccess(v6, v98, 33, 0);
  v17 = sub_10000EDC8(&qword_100485B98);
  OrderedDictionary.removeValue(forKey:)(&v100, v99, v17);
  swift_endAccess(v98);
  swift_bridgeObjectRelease(v16);

  v18 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v92 + 176) + 400);
  v19 = swift_retain();
  v20 = (void (*)(_BYTE *, _QWORD, __n128))v18(v98, v19);
  v21 = v2();
  v23 = v22;
  sub_100028000(v21, v22);
  v24 = swift_bridgeObjectRelease(v23);
  v20(v98, 0, v24);
  v25 = swift_release();
  v26 = (*(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0x248))(v25);
  if ((unint64_t)v26 >> 62)
  {
LABEL_32:
    if (v26 < 0)
      v56 = v26;
    else
      v56 = v26 & 0xFFFFFFFFFFFFFF8;
    v27 = _CocoaArrayWrapper.endIndex.getter(v56);
    if (v27)
      goto LABEL_7;
  }
  else
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v27)
    {
LABEL_7:
      v94 = v26;
      v96 = v26 & 0xC000000000000001;
      v28 = 4;
      do
      {
        if (v96)
          v30 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v28 - 4, v26);
        else
          v30 = *(id *)(v26 + 8 * v28);
        v31 = v30;
        v32 = v28 - 3;
        if (__OFADD__(v28 - 4, 1))
        {
          __break(1u);
          goto LABEL_32;
        }
        if (qword_10047A930 != -1)
          swift_once(&qword_10047A930, sub_100083368);
        v33 = qword_1004AF248;
        if (!qword_1004AF248)
        {
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
          return;
        }
        v34 = v27;
        v35 = *(uint64_t (**)(void))((swift_isaMask & *v31) + 0xB8);
        swift_retain();
        v36 = v31;
        v37 = v35();
        v39 = v38;

        swift_beginAccess(v33 + 88, v98, 32, 0);
        v40 = *(_QWORD *)(v33 + 96);
        if (*(_QWORD *)(v40 + 16))
        {
          swift_bridgeObjectRetain(v39);
          v41 = sub_1000C80A8(v37, v39);
          if ((v42 & 1) != 0)
          {
            v43 = *(void **)(*(_QWORD *)(v40 + 56) + 8 * v41);
            swift_endAccess(v98);
            v44 = v43;
            swift_bridgeObjectRelease(v39);
            sub_100102B04(v44, 0, 1);
            if ((objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable") & 1) == 0)
              goto LABEL_30;
            if (qword_10047AC58 != -1)
              swift_once(&qword_10047AC58, sub_1001833E8);
            if ((byte_1004AF790 & 1) != 0 && ((*(uint64_t (**)(void))((swift_isaMask & *v44) + 0x2C8))() & 1) != 0)
            {
              v45 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v33 + 136) + 400);
              v46 = swift_retain();
              v90 = (void (*)(_BYTE *, _QWORD, __n128))v45(v98, v46);
              v48 = v47;
              v49 = *(_QWORD *)(v47 + 32);
              swift_bridgeObjectRetain(v49);
              v88 = sub_1000C80A8(v37, v39);
              v51 = v50;
              v52 = swift_bridgeObjectRelease(v49);
              if ((v51 & 1) != 0)
              {
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v48 + 32));
                v54 = *(_QWORD *)(v48 + 32);
                v99[0] = v54;
                *(_QWORD *)(v48 + 32) = 0x8000000000000000;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  sub_1000BF41C();
                  v54 = v99[0];
                }
                swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v54 + 48) + 16 * v88 + 8));
                sub_1000948EC(v88, v54);
                v55 = *(_QWORD *)(v48 + 32);
                *(_QWORD *)(v48 + 32) = v54;
                v52 = swift_bridgeObjectRelease(v55);
              }
              v90(v98, 0, v52);

              swift_release();
              swift_bridgeObjectRelease(v39);

              swift_release();
            }
            else
            {
LABEL_30:

              swift_release();
              swift_bridgeObjectRelease(v39);

            }
            goto LABEL_10;
          }
          swift_bridgeObjectRelease(v39);
        }
        swift_endAccess(v98);

        swift_release();
        swift_bridgeObjectRelease(v39);
LABEL_10:
        ++v28;
        v27 = v34;
        v29 = v32 == v34;
        v26 = v94;
      }
      while (!v29);
    }
  }
  v57 = swift_bridgeObjectRelease(v26);
  v58 = (*(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0x230))(v57);
  if ((unint64_t)v58 >> 62)
    goto LABEL_63;
  v59 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v59)
  {
LABEL_38:
    v95 = v58;
    v97 = v58 & 0xC000000000000001;
    v60 = 4;
    do
    {
      if (v97)
        v61 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v60 - 4, v58);
      else
        v61 = *(id *)(v58 + 8 * v60);
      v62 = v61;
      v63 = v60 - 3;
      if (__OFADD__(v60 - 4, 1))
      {
        __break(1u);
LABEL_63:
        if (v58 < 0)
          v87 = v58;
        else
          v87 = v58 & 0xFFFFFFFFFFFFFF8;
        v59 = _CocoaArrayWrapper.endIndex.getter(v87);
        if (!v59)
          break;
        goto LABEL_38;
      }
      if (qword_10047A930 != -1)
        swift_once(&qword_10047A930, sub_100083368);
      v64 = qword_1004AF248;
      if (!qword_1004AF248)
        goto LABEL_72;
      v65 = v59;
      v66 = *(uint64_t (**)(void))((swift_isaMask & *v62) + 0xB8);
      swift_retain();
      v67 = v62;
      v68 = v66();
      v70 = v69;

      swift_beginAccess(v64 + 88, v98, 32, 0);
      v71 = *(_QWORD *)(v64 + 96);
      if (*(_QWORD *)(v71 + 16))
      {
        swift_bridgeObjectRetain(v70);
        v72 = sub_1000C80A8(v68, v70);
        if ((v73 & 1) != 0)
        {
          v74 = *(void **)(*(_QWORD *)(v71 + 56) + 8 * v72);
          swift_endAccess(v98);
          v75 = v74;
          swift_bridgeObjectRelease(v70);
          sub_100102B04(v75, 0, 1);
          if ((objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable") & 1) == 0)
            goto LABEL_61;
          if (qword_10047AC58 != -1)
            swift_once(&qword_10047AC58, sub_1001833E8);
          if ((byte_1004AF790 & 1) != 0 && ((*(uint64_t (**)(void))((swift_isaMask & *v75) + 0x2C8))() & 1) != 0)
          {
            v76 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v64 + 136) + 400);
            v77 = swift_retain();
            v91 = (void (*)(_BYTE *, _QWORD, __n128))v76(v98, v77);
            v79 = v78;
            v80 = *(_QWORD *)(v78 + 32);
            swift_bridgeObjectRetain(v80);
            v89 = sub_1000C80A8(v68, v70);
            v82 = v81;
            v83 = swift_bridgeObjectRelease(v80);
            if ((v82 & 1) != 0)
            {
              v84 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v79 + 32));
              v85 = *(_QWORD *)(v79 + 32);
              v99[0] = v85;
              *(_QWORD *)(v79 + 32) = 0x8000000000000000;
              if ((v84 & 1) == 0)
              {
                sub_1000BF41C();
                v85 = v99[0];
              }
              swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v85 + 48) + 16 * v89 + 8));
              sub_1000948EC(v89, v85);
              v86 = *(_QWORD *)(v79 + 32);
              *(_QWORD *)(v79 + 32) = v85;
              v83 = swift_bridgeObjectRelease(v86);
            }
            v91(v98, 0, v83);

            swift_release();
            swift_bridgeObjectRelease(v70);

            swift_release();
          }
          else
          {
LABEL_61:

            swift_release();
            swift_bridgeObjectRelease(v70);

          }
          goto LABEL_41;
        }
        swift_bridgeObjectRelease(v70);
      }
      swift_endAccess(v98);

      swift_release();
      swift_bridgeObjectRelease(v70);
LABEL_41:
      ++v60;
      v59 = v65;
      v29 = v63 == v65;
      v58 = v95;
    }
    while (!v29);
  }
  swift_bridgeObjectRelease(v58);
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  if (!qword_1004AF268)
    goto LABEL_73;
  swift_retain();
  sub_1000C4AC4(a1);
  swift_release();
  sub_100161578(a1);
}

void sub_10013F2B0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  void (*v6)(uint64_t *__return_ptr);
  id v7;
  uint64_t v8;
  id v9;
  double *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  _BYTE v16[24];
  uint64_t v17[38];
  uint64_t __src[38];
  _BYTE __dst[304];
  _BYTE v20[32];
  __int128 v21;
  char v22;

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(void (**)(uint64_t *__return_ptr))((swift_isaMask & *a2) + 0x260);
    v7 = *(id *)(Strong + 96);
    v6(v17);
    sub_100012C58((uint64_t)v17, (uint64_t)__src, &qword_100484AC8);
    if (sub_100124C4C(__src) == 1)
    {
      __break(1u);
    }
    else
    {
      memcpy(__dst, __src, sizeof(__dst));
      sub_100124C70(v17);
      sub_100012C58((uint64_t)&__dst[112], (uint64_t)v20, &qword_100484AD0);
      sub_100012C58((uint64_t)v20, (uint64_t)&v21, &qword_100484AD0);
      if ((v22 & 1) == 0)
      {
        SCNVector3.init(_:)(*(double *)&v21);
        objc_msgSend(v7, "projectPoint:");

        v8 = qword_10047B190;
        v9 = *(id *)(v5 + 96);
        if (v8 != -1)
          swift_once(&qword_10047B190, sub_1001C81CC);
        v10 = (double *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits);
        if ((*(_BYTE *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80) & 1) == 0)
        {
          v12 = v10[8];
          v11 = v10[9];
          v14 = v10[6];
          v13 = v10[7];

          v15 = CGRect.center.getter(v14, v13, v12, v11);
          static CGPoint.- infix(_:_:)(v15);
          CGPoint.length()();
          swift_release();
          return;
        }
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
}

void sub_10013F49C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD __src[64];
  _QWORD v7[8];
  uint64_t v8[38];
  uint64_t v9[38];
  _BYTE v10[32];
  __int128 v11;
  char v12;
  __n128 __dst[32];

  swift_retain();
  StateValue.wrappedValue.getter(__src, v3);
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  sub_100012C00((uint64_t)__dst);
  v4 = SCNMatrix4.init(_:)(v7, __dst[21], __dst[22], __dst[23], __dst[24]);
  SCNMatrix4.forward.getter(v4);
  (*(void (**)(uint64_t *__return_ptr))((swift_isaMask & *a2) + 0x260))(v8);
  sub_100012C58((uint64_t)v8, (uint64_t)v9, &qword_100484AC8);
  if (sub_100124C4C(v9) == 1)
  {
    __break(1u);
  }
  else
  {
    memcpy(__src, v9, 0x130uLL);
    sub_100124C70(v8);
    sub_100012C58((uint64_t)&__src[14], (uint64_t)v10, &qword_100484AD0);
    v5 = sub_100012C58((uint64_t)v10, (uint64_t)&v11, &qword_100484AD0);
    if ((v12 & 1) == 0)
    {
      SCNMatrix4.position.getter(v5);
      return;
    }
  }
  __break(1u);
}

double sub_10013F5F4()
{
  return 0.33;
}

void sub_10013F600(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[6];

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v12 = (void *)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (*((_QWORD *)&xmmword_1004AF258 + 1))
  {
    v13 = (void *)Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
    v14 = swift_allocObject(&unk_100447808, 32, 7);
    *(_QWORD *)(v14 + 16) = a2;
    *(_QWORD *)(v14 + 24) = a3;
    aBlock[4] = sub_100142284;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003ECA0;
    aBlock[3] = &unk_100447820;
    v15 = _Block_copy(aBlock);
    v16 = v12;
    swift_retain();
    v17 = a3;
    static DispatchQoS.unspecified.getter(v18);
    v23 = _swiftEmptyArrayStorage;
    v19 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v20 = sub_10000EDC8((uint64_t *)&unk_10047E430);
    v21 = sub_100043310((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v20, v21, v5, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

unint64_t *sub_10013F83C(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  unint64_t *v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  unint64_t *v8;
  void *v9;
  uint64_t v11;

  v2 = (unint64_t *)isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_10013F98C((unint64_t *)((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, (uint64_t)v2);
    if (v1)
      swift_willThrow(v8);
    else
      return v8;
  }
  else
  {
    v9 = (void *)swift_slowAlloc(v7, -1);
    bzero(v9, v7);
    v2 = sub_10013F98C((unint64_t *)v9, v6, (uint64_t)v2);
    swift_slowDealloc(v9, -1, -1);
  }
  return v2;
}

unint64_t *sub_10013F98C(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10)
      return (unint64_t *)sub_1001815B8(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        return (unint64_t *)sub_1001815B8(result, a2, v4, a3);
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          return (unint64_t *)sub_1001815B8(result, a2, v4, a3);
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v12) + 16) >= 2uLL)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1001815B8(result, a2, v4, a3);
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    return (unint64_t *)sub_1001815B8(result, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      return (unint64_t *)sub_1001815B8(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10013FADC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v5 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v16))
  {
    v7 = 4;
    while (1)
    {
      v8 = (v5 & 0xC000000000000001) != 0
         ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v5)
         : *(id *)(v5 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = (*(uint64_t (**)(void))((swift_isaMask & *v8) + 0xB8))();
      if (v11 == a2 && v12 == a3)
      {
        swift_bridgeObjectRelease(v5);

        v15 = 1;
        v5 = a3;
        goto LABEL_23;
      }
      v14 = v12;
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, a2, a3, 0);

      swift_bridgeObjectRelease(v14);
      if ((v15 & 1) == 0)
      {
        ++v7;
        if (v10 != v6)
          continue;
      }
      goto LABEL_23;
    }
    __break(1u);
LABEL_18:
    if (v5 < 0)
      v16 = v5;
    else
      v16 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
  }
  v15 = 0;
LABEL_23:
  swift_bridgeObjectRelease(v5);
  return v15 & 1;
}

void *sub_10013FC40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  Swift::Bool v12;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v13))
  {
    v5 = *(_QWORD *)(a2 + 72);
    v6 = 4;
    while (1)
    {
      a2 = v6 - 4;
      v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1)
         : *(id *)(a1 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(a2, 1))
        break;
      v10 = objc_msgSend(v7, "node");
      v11 = *(id *)(v5 + 56);
      v12 = SCNNode.isDecendent(of:)((SCNNode)v11);

      if (v12)
      {
        swift_bridgeObjectRelease(a1);
        return v8;
      }

      ++v6;
      if (v9 == v4)
        goto LABEL_17;
    }
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return 0;
}

void sub_10013FD98()
{
  sub_100138DE8();
  sub_10013AAB0();
}

unsigned __int8 *sub_10013FDAC(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_100138BD8(a1, v1);
}

uint64_t sub_10013FDB8(uint64_t a1)
{
  sub_10013FDEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(void **)(a1 + 40));
  return a1;
}

void sub_10013FDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a5);

  }
}

void sub_10013FE50()
{
  uint64_t v0;

  sub_10013B7C4(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_10013FE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10013FE6C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10013FE74(_QWORD *a1)
{
  sub_10013B6FC(a1);
}

_QWORD *sub_10013FE7C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t sub_10013FECC(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)a1 = 1;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_QWORD *)(a1 + 296) = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  result = a1 + 8;
  *(_OWORD *)(result + 256) = 0u;
  *(_OWORD *)(result + 272) = 0u;
  return result;
}

void sub_10013FF4C(uint64_t *a1)
{
  sub_1001374E0(*a1);
}

void sub_10013FF54(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  double *v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __int128 v33;
  _QWORD __src[64];
  _OWORD v35[32];
  double v36[64];
  uint64_t __dst[40];
  _QWORD *v38;
  CGPoint v39;
  CGRect v40;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v25 = a1 + 32;
    v23 = _swiftEmptyArrayStorage;
    v24 = *(_QWORD *)(a1 + 16);
LABEL_3:
    if (v2 <= v1)
      v3 = v1;
    else
      v3 = v2;
    v26 = v3;
    while (1)
    {
      if (v2 == v26)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      memcpy(__dst, (const void *)(v25 + 304 * v2), 0x130uLL);
      v4 = __dst[0];
      if (!__dst[0])
        goto LABEL_32;
      ++v2;
      v5 = *(_QWORD *)(__dst[0] + 16);
      if (v5)
        break;
LABEL_9:
      if (v2 == v1)
        return;
    }
    v27 = v2;
    type metadata accessor for MeasureCamera(0);
    sub_1000C2C50(__dst);
    swift_bridgeObjectRetain(v4);
    v6 = 0;
    v7 = 0;
    while (1)
    {
      v32 = *(__n128 *)(v4 + 16 * v6 + 32);
      swift_retain();
      StateValue.wrappedValue.getter(__src, v8);
      swift_release();
      memcpy(v35, __src, sizeof(v35));
      sub_100012C00((uint64_t)v35);
      v30 = (__n128)v35[12];
      v31 = (__n128)v35[11];
      v28 = (__n128)v35[14];
      v29 = (__n128)v35[13];
      swift_retain();
      StateValue.wrappedValue.getter(__src, v9);
      swift_release();
      memcpy(v36, __src, sizeof(v36));
      v10 = sub_100012C00((uint64_t)v36);
      *(double *)&v11 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v10, v32, v31, v30, v29, v28, v36[4]);
      if (qword_10047B190 != -1)
      {
        v33 = v11;
        swift_once(&qword_10047B190, sub_1001C81CC);
        v11 = v33;
      }
      v12 = (double *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits);
      if ((*(_BYTE *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80) & 1) != 0)
        break;
      if (*((float *)&v11 + 2) > 0.0)
      {
        v14 = v12[8];
        v13 = v12[9];
        v16 = v12[6];
        v15 = v12[7];
        v39.x = CGPoint.init(_:)(*(double *)&v11);
        v39.y = v17;
        v40.origin.x = v16;
        v40.origin.y = v15;
        v40.size.width = v14;
        v40.size.height = v13;
        if (CGRectContainsPoint(v40, v39) && __OFADD__(v7++, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
      }
      if (v5 - 1 == v6)
      {
        swift_bridgeObjectRelease(v4);
        if (v7 != 4)
        {
          sub_10013FE7C(__dst);
          v1 = v24;
          v2 = v27;
          goto LABEL_9;
        }
        v19 = v23;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v23);
        v38 = v23;
        v2 = v27;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000A5818(0, v23[2] + 1, 1);
          v19 = v38;
        }
        v22 = v19[2];
        v21 = v19[3];
        if (v22 >= v21 >> 1)
        {
          sub_1000A5818((char *)(v21 > 1), v22 + 1, 1);
          v19 = v38;
        }
        v19[2] = v22 + 1;
        v23 = v19;
        memcpy(&v19[38 * v22 + 4], __dst, 0x130uLL);
        v1 = v24;
        if (v27 != v24)
          goto LABEL_3;
        return;
      }
      ++v6;
    }
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
}

uint64_t sub_100140264(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  int64_t v16;
  uint64_t (*v17)(uint64_t *);
  uint64_t *v18;
  uint64_t v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  uint64_t v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  double v32;
  char v33;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  __n128 v44;
  float32x4_t v45;
  __n128 v46;
  __n128 v47;
  float32x4_t v48;
  __n128 v49;
  uint64_t __dst[38];
  _BYTE v51[24];
  char v52[8];
  float32x4_t v53;
  char v54;
  float v55;
  char v56;

  v35 = (unint64_t *)result;
  v36 = 0;
  v5 = 0;
  v8 = *(_QWORD *)(a3 + 64);
  v6 = a3 + 64;
  v7 = v8;
  v9 = 1 << *(_BYTE *)(v6 - 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v7;
  v37 = v6;
  v38 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    v12 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v13 = v12 | (v5 << 6);
LABEL_18:
    memcpy(__dst, (const void *)(*(_QWORD *)(a3 + 56) + 304 * v13), sizeof(__dst));
    v17 = *(uint64_t (**)(uint64_t *))((swift_isaMask & *a4) + 0x2C0);
    v18 = sub_1000C2C50(__dst);
    v19 = v17(v18);
    v20.n128_f64[0] = (*(double (**)(uint64_t))(*(_QWORD *)v19 + 368))(v19);
    v44 = v21;
    v47 = v20;
    v40 = v23;
    v42 = v22;
    swift_release();
    *(double *)v24.i64 = simd_float4x4.position.getter(v47, v44, v42, v40);
    v48 = v24;
    sub_100012C58((uint64_t)&__dst[14], (uint64_t)v51, &qword_100484AD0);
    result = sub_100012C58((uint64_t)v51, (uint64_t)&v53, &qword_100484AD0);
    if ((v54 & 1) != 0)
      goto LABEL_34;
    v45 = v53;
    sub_100012C58((uint64_t)&__dst[28] + 4, (uint64_t)v52, &qword_10047F0A8);
    result = sub_100012C58((uint64_t)v52, (uint64_t)&v55, &qword_10047F0A8);
    if ((v56 & 1) != 0)
      goto LABEL_33;
    v25 = vsubq_f32(v48, v45);
    v26 = vmulq_f32(v25, v25);
    if (v55 < sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v26, 2), vaddq_f32(v26, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v26.f32, 1))).f32[0]))
    {
      result = (uint64_t)sub_10013FE7C(__dst);
    }
    else
    {
      v27 = ((uint64_t (*)(uint64_t, float))v17)(result, v55);
      v28.n128_f64[0] = (*(double (**)(uint64_t))(*(_QWORD *)v27 + 368))(v27);
      v46 = v29;
      v49 = v28;
      v41 = v31;
      v43 = v30;
      swift_release();
      v32 = simd_float4x4.position.getter(v49, v46, v43, v41);
      v33 = static WorldRectangleData.pointLiesWithinRectangle(point:rectangle:pointsCoplanar:)(__dst, 0, v32);
      result = (uint64_t)sub_10013FE7C(__dst);
      if ((v33 & 1) != 0)
      {
        *(unint64_t *)((char *)v35 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        v14 = __OFADD__(v36++, 1);
        if (v14)
          goto LABEL_32;
      }
    }
  }
  v14 = __OFADD__(v5++, 1);
  if (v14)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v5 >= v38)
    return sub_100181328(v35, a2, v36, a3);
  v15 = *(_QWORD *)(v37 + 8 * v5);
  if (v15)
  {
LABEL_17:
    v11 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
    goto LABEL_18;
  }
  v16 = v5 + 1;
  if (v5 + 1 >= v38)
    return sub_100181328(v35, a2, v36, a3);
  v15 = *(_QWORD *)(v37 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v5 + 2;
  if (v5 + 2 >= v38)
    return sub_100181328(v35, a2, v36, a3);
  v15 = *(_QWORD *)(v37 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v5 + 3;
  if (v5 + 3 >= v38)
    return sub_100181328(v35, a2, v36, a3);
  v15 = *(_QWORD *)(v37 + 8 * v16);
  if (v15)
  {
LABEL_16:
    v5 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v38)
      return sub_100181328(v35, a2, v36, a3);
    v15 = *(_QWORD *)(v37 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_17;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100140584(uint64_t a1, uint64_t a2, void *a3, __n128 a4)
{
  uint64_t v4;
  uint64_t v5;
  char v8;
  unsigned int v9;
  unint64_t v10;
  size_t v11;
  uint64_t isStackAllocationSafe;
  void *v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  uint64_t v20;

  v5 = v4;
  v8 = *(_BYTE *)(a1 + 32);
  v9 = v8 & 0x3F;
  v10 = (unint64_t)((1 << v8) + 63) >> 6;
  v11 = 8 * v10;
  swift_retain_n(a2, 2, a4);
  isStackAllocationSafe = a3;
  v13 = (void *)isStackAllocationSafe;
  if (v9 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v11, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    v14 = (char *)&v20 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v14, v11);
    swift_retain();
    v15 = v13;
    v16 = sub_100140264((uint64_t)v14, v10, a1, v15);
    swift_release();

    if (v5)
      swift_willThrow();

    swift_release();
  }
  else
  {
    v17 = (void *)swift_slowAlloc(v11, -1);
    bzero(v17, v11);
    swift_retain();
    v18 = v13;
    v16 = sub_100140264((uint64_t)v17, v10, a1, v18);
    swift_release();

    swift_slowDealloc(v17, -1, -1);
    swift_release();
  }

  swift_release();
  return v16;
}

void sub_10014077C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  void (*v18)(uint64_t);
  _QWORD *v19;
  char v20;
  __n128 v21;
  uint64_t (*v22)(__n128);
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  _QWORD *v30;
  uint64_t (*v31)(void);
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  Swift::String v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  float v47;
  id v48;
  uint64_t v49;
  NSString v50;
  float v51;
  float v52;
  Swift::String v53;
  uint64_t (*v54)(void);
  _QWORD *v55;
  uint64_t v56;
  void *v57;
  void *v58;
  Swift::String v59;
  Swift::String v60;
  void *object;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  float v67;
  id v68;
  uint64_t v69;
  NSString v70;
  float v71;
  float v72;
  Swift::String v73;
  uint64_t (*v74)(void);
  _QWORD *v75;
  uint64_t v76;
  void *v77;
  void *v78;
  Swift::String v79;
  Swift::String v80;
  void *v81;
  uint64_t v82;
  __n128 v83;
  void (*v84)(uint64_t *__return_ptr, __n128);
  uint64_t v85;
  uint64_t v86;
  Swift::String v87;
  void *v88;
  void *v89;
  __n128 v90;
  uint64_t v91;
  Swift::String v92;
  void *v93;
  uint64_t v94;
  uint64_t v96;
  id v98;
  Swift::String v99;
  Swift::String v100;
  uint64_t v101;
  uint64_t v102[38];
  uint64_t v103[38];
  uint64_t v104[38];
  Swift::String v105[19];
  uint64_t __src[38];
  Swift::String __dst[19];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v2 = a1;
  v3 = 0;
  v4 = 0;
  v5 = a1 & 0xC000000000000001;
  v101 = (uint64_t)_swiftEmptyArrayStorage;
  v6 = a1 & 0xFFFFFFFFFFFFFF8;
  v7 = a1 + 32;
  while (1)
  {
    v8 = v3;
    if (v5)
    {
      v9 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
    }
    else
    {
      if (v4 >= *(_QWORD *)(v6 + 16))
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        if (v2 < 0)
          v62 = v2;
        else
          v62 = v6;
        swift_bridgeObjectRetain(v2);
        v41 = _CocoaArrayWrapper.endIndex.getter(v62);
        if (!v41)
          goto LABEL_34;
LABEL_22:
        v42 = objc_opt_self(NSUserDefaults);
        if (v41 >= 1)
        {
          v43 = (void *)v42;
          v44 = 0;
          do
          {
            if (v5)
              v45 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v44, v2);
            else
              v45 = *(id *)(v2 + 8 * v44 + 32);
            v46 = v45;
            ++v44;
            v47 = (*(float (**)(void))((swift_isaMask & *v45) + 0x340))();
            v48 = objc_msgSend(v43, "standardUserDefaults");
            v49 = *(_QWORD *)(Defaults.measurementBias.unsafeMutableAddressor() + 8);
            swift_bridgeObjectRetain(v49);
            v50 = String._bridgeToObjectiveC()();
            objc_msgSend(v48, "floatForKey:", v50, swift_bridgeObjectRelease(v49).n128_f64[0]);
            v52 = v51;

            __dst[0]._countAndFlagsBits = 0;
            __dst[0]._object = (void *)0xE000000000000000;
            _StringGuts.grow(_:)(34);
            v53._countAndFlagsBits = 0xD000000000000010;
            v53._object = (void *)0x80000001003E1B60;
            String.append(_:)(v53);
            v54 = *(uint64_t (**)(void))((swift_isaMask & *v46) + 0xB8);
            v55 = v46;
            v56 = v54();
            v58 = v57;

            v59._countAndFlagsBits = v56;
            v59._object = v58;
            String.append(_:)(v59);
            swift_bridgeObjectRelease(v58);
            v60._countAndFlagsBits = 0x656C206874697720;
            v60._object = (void *)0xEE00203A6874676ELL;
            String.append(_:)(v60);
            Float.write<A>(to:)(__dst, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v47 * (float)(v52 + 1.0));
            object = __dst[0]._object;
            String.append(_:)(__dst[0]);

            swift_bridgeObjectRelease(object);
            v2 = a1;
          }
          while (v41 != v44);
          goto LABEL_34;
        }
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      v9 = *(id *)(v7 + 8 * v4);
    }
    v10 = v9;
    v11 = (*(uint64_t (**)(void))((swift_isaMask & *v9) + 0x268))();

    v12 = v4 | 2;
    if (v5)
    {
      v13 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v2);
    }
    else
    {
      if (v12 >= *(_QWORD *)(v6 + 16))
        goto LABEL_29;
      v13 = *(id *)(v7 + 8 * v12);
    }
    v14 = v13;
    v15 = (*(uint64_t (**)(void))((swift_isaMask & *v13) + 0x268))();

    v16 = objc_allocWithZone((Class)type metadata accessor for WorldLine(0));
    v17 = (_QWORD *)WorldLine.init(end1:end2:initialState:)(v11, v15, 0, 1);
    v18 = *(void (**)(uint64_t))((swift_isaMask & *v17) + 0xD8);
    v19 = v17;
    v18(1);

    (*(void (**)(_QWORD))((swift_isaMask & *v19) + 0x2D0))(0);
    if (qword_10047A930 == -1)
    {
      if (!qword_1004AF248)
        goto LABEL_58;
    }
    else
    {
      swift_once(&qword_10047A930, sub_100083368);
      if (!qword_1004AF248)
        goto LABEL_58;
    }
    swift_retain();
    v20 = sub_1001011A0(v19, 0);
    v21 = swift_release();
    if ((v20 & 1) == 0)
      break;
    v22 = *(uint64_t (**)(__n128))((swift_isaMask & *v19) + 0x268);
    v23 = (_QWORD *)v22(v21);
    (*(void (**)(uint64_t))((swift_isaMask & *v23) + 0xD8))(1);

    v24 = (_QWORD *)((uint64_t (*)(void))v22)();
    (*(void (**)(uint64_t))((swift_isaMask & *v24) + 0x2F8))(2);

    v25 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
    v27 = *(_QWORD *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v26 = *(_QWORD *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v27 >= v26 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
    v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
    specialized Array._endMutation()(v28);

    v3 = 1;
    v4 = 1;
    v2 = a1;
    if ((v8 & 1) != 0)
      goto LABEL_20;
  }

  v2 = a1;
LABEL_20:
  v29 = objc_allocWithZone((Class)type metadata accessor for WorldRectangle(0));
  sub_1000C2C50(a2);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v101);
  v30 = (_QWORD *)WorldRectangle.init(data:edges:splitters:)(a2, v2, v101);
  v31 = *(uint64_t (**)(void))((swift_isaMask & *v30) + 0xB8);
  v105[0]._countAndFlagsBits = (uint64_t)v30;
  __src[0] = v31();
  __src[1] = v32;
  swift_beginAccess(v96 + 208, __dst, 33, 0);
  v33 = v30;
  v34 = sub_10000EDC8(&qword_100485B98);
  OrderedDictionary.subscript.setter(v105, __src, v34);
  swift_endAccess(__dst);
  __dst[0]._countAndFlagsBits = 0;
  __dst[0]._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(__dst[0]._object);
  __dst[0]._countAndFlagsBits = 0xD000000000000011;
  __dst[0]._object = (void *)0x80000001003E1B40;
  v35 = v33;
  v36 = v31();
  v38 = v37;

  v39._countAndFlagsBits = v36;
  v39._object = v38;
  String.append(_:)(v39);
  swift_bridgeObjectRelease(v38);
  v40._countAndFlagsBits = 0x6C2068746977202CLL;
  v40._object = (void *)0xEE00203A73656E69;
  String.append(_:)(v40);
  v100 = __dst[0];
  a2 = v35;
  if ((unint64_t)v2 >> 62)
    goto LABEL_30;
  v41 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRetain(v2);
  if (v41)
    goto LABEL_22;
LABEL_34:
  swift_bridgeObjectRelease(v2);
  if ((unint64_t)v101 >> 62)
  {
    if (v101 < 0)
      v82 = v101;
    else
      v82 = v101 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v101);
    v63 = _CocoaArrayWrapper.endIndex.getter(v82);
    if (!v63)
      goto LABEL_46;
LABEL_36:
    v98 = (id)objc_opt_self(NSUserDefaults);
    if (v63 >= 1)
    {
      v64 = 0;
      do
      {
        if ((v101 & 0xC000000000000001) != 0)
          v65 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v64, v101);
        else
          v65 = *(id *)(v101 + 8 * v64 + 32);
        v66 = v65;
        ++v64;
        v67 = (*(float (**)(void))((swift_isaMask & *v65) + 0x340))();
        v68 = objc_msgSend(v98, "standardUserDefaults");
        v69 = *(_QWORD *)(Defaults.measurementBias.unsafeMutableAddressor() + 8);
        swift_bridgeObjectRetain(v69);
        v70 = String._bridgeToObjectiveC()();
        objc_msgSend(v68, "floatForKey:", v70, swift_bridgeObjectRelease(v69).n128_f64[0]);
        v72 = v71;

        __dst[0]._countAndFlagsBits = 0;
        __dst[0]._object = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(34);
        v73._countAndFlagsBits = 0xD000000000000010;
        v73._object = (void *)0x80000001003E1B80;
        String.append(_:)(v73);
        v74 = *(uint64_t (**)(void))((swift_isaMask & *v66) + 0xB8);
        v75 = v66;
        v76 = v74();
        v78 = v77;

        v79._countAndFlagsBits = v76;
        v79._object = v78;
        String.append(_:)(v79);
        swift_bridgeObjectRelease(v78);
        v80._countAndFlagsBits = 0x656C206874697720;
        v80._object = (void *)0xEE00203A6874676ELL;
        String.append(_:)(v80);
        Float.write<A>(to:)(__dst, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v67 * (float)(v72 + 1.0));
        v81 = __dst[0]._object;
        String.append(_:)(__dst[0]);

        swift_bridgeObjectRelease(v81);
      }
      while (v63 != v64);
      goto LABEL_46;
    }
    goto LABEL_57;
  }
  v63 = *(_QWORD *)((v101 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v101);
  if (v63)
    goto LABEL_36;
LABEL_46:
  swift_bridgeObjectRelease(v101);
  __dst[0]._countAndFlagsBits = 0;
  __dst[0]._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(33);
  v83 = swift_bridgeObjectRelease(__dst[0]._object);
  v105[0]._countAndFlagsBits = 0xD00000000000001FLL;
  v105[0]._object = (void *)0x80000001003E1BA0;
  v84 = *(void (**)(uint64_t *__return_ptr, __n128))((swift_isaMask & *a2) + 0x260);
  v84(v102, v83);
  sub_100012C58((uint64_t)v102, (uint64_t)__src, &qword_100484AC8);
  if (sub_100124C4C(__src) == 1)
    goto LABEL_59;
  memcpy(__dst, __src, sizeof(__dst));
  sub_100012C58((uint64_t)&__dst[0]._object, (uint64_t)&v108, &qword_100485BF8);
  sub_100141EB8(&v108);
  sub_100124C70(v102);
  sub_100012C58((uint64_t)&v108, (uint64_t)&v111, &qword_100485BF8);
  v85 = v111;
  if (!v111)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v86 = sub_10000EDC8((uint64_t *)&unk_100486AB0);
  v87._countAndFlagsBits = Array.description.getter(v85, v86);
  v88 = v87._object;
  String.append(_:)(v87);
  swift_bridgeObjectRelease(v88);
  sub_10007BB44(&v108);
  v89 = v105[0]._object;
  String.append(_:)(v105[0]);
  swift_bridgeObjectRelease(v89);
  v105[0]._countAndFlagsBits = 0;
  v105[0]._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(34);
  v90 = swift_bridgeObjectRelease(v105[0]._object);
  v99._countAndFlagsBits = 0xD000000000000020;
  v99._object = (void *)0x80000001003E1BC0;
  v84(v103, v90);
  sub_100012C58((uint64_t)v103, (uint64_t)v104, &qword_100484AC8);
  if (sub_100124C4C(v104) == 1)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  memcpy(v105, v104, sizeof(v105));
  sub_100012C58((uint64_t)v105, (uint64_t)&v109, &qword_100485BF8);
  sub_100141EB8(&v109);
  sub_100124C70(v103);
  sub_100012C58((uint64_t)&v109, (uint64_t)&v110, &qword_100485BF8);
  v91 = v110;
  if (!v110)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  swift_bridgeObjectRelease(v101);
  v92._countAndFlagsBits = Array.description.getter(v91, v86);
  v93 = v92._object;
  String.append(_:)(v92);
  swift_bridgeObjectRelease(v93);
  sub_10007BB44(&v109);
  String.append(_:)(v99);
  swift_bridgeObjectRelease(v99._object);
  if (qword_10047AA28 != -1)
    swift_once(&qword_10047AA28, sub_1000E1108);
  Log.default(_:isPrivate:)(v100, 0);
  swift_bridgeObjectRelease(v100._object);
  if (qword_10047AB68 != -1)
    swift_once(&qword_10047AB68, sub_10011E814);
  v94 = qword_1004AF6B8 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess(qword_1004AF6B8 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState, &v99, 1, 0);
  *(double *)(v94 + 24) = *(double *)(v94 + 24) + 1.0;
  (*(void (**)(uint64_t))((swift_isaMask & *a2) + 0xD8))(1);
  *(_BYTE *)(v96 + 104) = 1;
  sub_100160CE8(a2);
  if (qword_1004AF268)
  {
    swift_retain();
    sub_100093560((char *)a2);
    swift_release();
    return;
  }
LABEL_63:
  __break(1u);
}

char *sub_10014135C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  float32x4_t v11;
  float32x4_t v12;
  float32x4_t v13;
  unint64_t v14;
  unint64_t v15;
  float32x4_t v16;
  uint64_t __dst[39];
  _BYTE v18[8];
  _BYTE v19[32];
  float32x4_t v20;
  char v21;
  float v22;
  char v23;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    sub_100012C58(a1 + 112, (uint64_t)v19, &qword_100484AD0);
    swift_bridgeObjectRetain(a2);
    memcpy(__dst, (const void *)(a2 + 32), 0x130uLL);
    result = (char *)sub_100012C58((uint64_t)v19, (uint64_t)&v20, &qword_100484AD0);
    if ((v21 & 1) == 0)
    {
      v6 = a1 + 228;
      v7 = (char *)_swiftEmptyArrayStorage;
      v8 = 336;
      while ((__dst[16] & 1) == 0)
      {
        v16 = v20;
        v10 = __dst[14];
        v9 = __dst[15];
        sub_100012C58(v6, (uint64_t)v18, &qword_10047F0A8);
        result = (char *)sub_100012C58((uint64_t)v18, (uint64_t)&v22, &qword_10047F0A8);
        if ((v23 & 1) != 0)
          goto LABEL_20;
        if ((__dst[29] & 1) != 0)
          goto LABEL_21;
        v11.i64[0] = v10;
        v11.i64[1] = v9;
        v12 = vsubq_f32(v16, v11);
        v13 = vmulq_f32(v12, v12);
        if (sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v13, 2), vaddq_f32(v13, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v13.f32, 1))).f32[0]) < (float)(*((float *)&__dst[28] + 1) + v22))
        {
          sub_1000C2C50(__dst);
          if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
            v7 = sub_100060538(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
          v15 = *((_QWORD *)v7 + 2);
          v14 = *((_QWORD *)v7 + 3);
          if (v15 >= v14 >> 1)
            v7 = sub_100060538((char *)(v14 > 1), v15 + 1, 1, v7);
          *((_QWORD *)v7 + 2) = v15 + 1;
          memcpy(&v7[304 * v15 + 32], __dst, 0x130uLL);
        }
        if (!--v2)
        {
          swift_bridgeObjectRelease(a2);
          return v7;
        }
        memcpy(__dst, (const void *)(a2 + v8), 0x130uLL);
        result = (char *)sub_100012C58((uint64_t)v19, (uint64_t)&v20, &qword_100484AD0);
        v8 += 304;
        if ((v21 & 1) != 0)
          goto LABEL_22;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
LABEL_22:
    __break(1u);
  }
  else
  {
    return (char *)_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10014157C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 48);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_100141594(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v13 = *(_OWORD *)(a1 + 400);
  v11 = *(_OWORD *)(a1 + 368);
  v12 = *(_OWORD *)(a1 + 384);
  v9 = *(_OWORD *)(a1 + 336);
  v10 = *(_OWORD *)(a1 + 352);
  v7 = *(_OWORD *)(a1 + 304);
  v8 = *(_OWORD *)(a1 + 320);
  v5 = *(_OWORD *)(a1 + 272);
  v6 = *(_OWORD *)(a1 + 288);
  v3 = *(_OWORD *)(a1 + 240);
  v4 = *(_OWORD *)(a1 + 256);
  sub_1001419C4(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1));
  return a1;
}

double sub_1001419C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  unint64_t v52;
  unint64_t v53;
  double result;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;

  if (a7)
  {
    v65 = STACK[0x930];
    v64 = STACK[0x7A8];
    v63 = STACK[0x7A0];
    v62 = STACK[0x798];
    v61 = STACK[0x790];
    v60 = STACK[0x678];
    v59 = STACK[0x670];
    v58 = STACK[0x668];
    v57 = STACK[0x660];
    v52 = STACK[0x658];
    v53 = STACK[0x650];
    swift_bridgeObjectRelease(a7);
    swift_bridgeObjectRelease(a8);
    swift_bridgeObjectRelease(a9);
    swift_bridgeObjectRelease(v53);
    swift_bridgeObjectRelease(v52);

    swift_bridgeObjectRelease(a11);
    swift_bridgeObjectRelease(a12);
    swift_bridgeObjectRelease(a13);
    swift_bridgeObjectRelease(a14);
    swift_bridgeObjectRelease(a49);
    swift_bridgeObjectRelease(a50);
    swift_bridgeObjectRelease(a51);
    swift_bridgeObjectRelease(a52);
    sub_100124CF0(v57, v58, v59, v60);
    sub_100124CF0(v61, v62, v63, v64);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v65).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100141EB8(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  return a1;
}

uint64_t sub_100141EE0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v10 = *(_QWORD *)(a1 + 96);
  v11 = *(_QWORD *)(a1 + 104);
  v12 = *(_QWORD *)(a1 + 384);
  v13 = *(_QWORD *)(a1 + 392);
  v14 = *(_QWORD *)(a1 + 400);
  v15 = *(_QWORD *)(a1 + 408);
  v8 = *(_QWORD *)(a1 + 688);
  v19 = *(_QWORD *)(a1 + 712);
  v20 = *(_QWORD *)(a1 + 704);
  v17 = *(_QWORD *)(a1 + 728);
  v18 = *(_QWORD *)(a1 + 720);
  v23 = *(_QWORD *)(a1 + 1016);
  v24 = *(_QWORD *)(a1 + 1008);
  v21 = *(_QWORD *)(a1 + 1032);
  v22 = *(_QWORD *)(a1 + 1024);
  v16 = *(_QWORD *)(a1 + 1424);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 696));
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);

  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v15);
  sub_100124CF0(v20, v19, v18, v17);
  sub_100124CF0(v24, v23, v22, v21);
  swift_bridgeObjectRelease(v16);
  return a1;
}

uint64_t sub_10014222C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100142268()
{
  return sub_10014233C(40);
}

void sub_100142270(uint64_t a1)
{
  uint64_t v1;

  sub_10013F600(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10014227C()
{
  return sub_10014233C(32);
}

void sub_100142284()
{
  uint64_t v0;

  sub_10013EA58(*(_QWORD **)(v0 + 24));
}

uint64_t sub_1001422A8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001422D0()
{
  uint64_t v0;

  return sub_10013E460(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001422DC()
{
  uint64_t v0;

  return sub_10013E4FC(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001422E4()
{
  return sub_10014233C(32);
}

BOOL sub_1001422EC(double a1, double a2)
{
  uint64_t v2;

  return sub_10013E604(*(_QWORD *)(v2 + 16), a1, a2);
}

double sub_1001422F8()
{
  uint64_t v0;

  return sub_10013E680(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_100142304()
{
  uint64_t v0;

  return sub_10013E7B4(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_100142310()
{
  uint64_t v0;

  return sub_10013E864(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_10014231C()
{
  uint64_t v0;

  return sub_10013E914(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100142324()
{
  return sub_10014233C(32);
}

void sub_10014232C()
{
  uint64_t v0;

  sub_10013F2B0(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_100142334()
{
  return sub_10014233C(32);
}

uint64_t sub_10014233C(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));

  return swift_deallocObject(v1, a1, 7);
}

void sub_100142374()
{
  uint64_t v0;

  sub_10013F49C(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

BOOL sub_10014237C(double a1, double a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  void *v8;
  id v9;
  NSString *v10;
  NSString *v11;
  NSString *v12;
  NSString *v13;
  id v14;
  unint64_t v15;
  Class isa;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _BYTE v22[200];

  v5 = *(void **)(v2 + 96);
  v6 = sub_10000EDC8(&qword_100485C08);
  inited = swift_initStackObject(v6, v22);
  *(_OWORD *)(inited + 16) = xmmword_1003B0AF0;
  *(_QWORD *)(inited + 32) = SCNHitTestIgnoreHiddenNodesKey;
  *(_BYTE *)(inited + 40) = 0;
  *(_QWORD *)(inited + 64) = &type metadata for Bool;
  *(_QWORD *)(inited + 72) = SCNHitTestIgnoreChildNodesKey;
  *(_BYTE *)(inited + 80) = 0;
  *(_QWORD *)(inited + 120) = 1;
  *(_QWORD *)(inited + 104) = &type metadata for Bool;
  *(_QWORD *)(inited + 112) = SCNHitTestOptionSearchMode;
  *(_QWORD *)(inited + 144) = &type metadata for Int;
  *(_QWORD *)(inited + 152) = SCNHitTestRootNodeKey;
  v8 = *(void **)(*(_QWORD *)(v2 + 72) + 56);
  *(_QWORD *)(inited + 184) = sub_100018148(0, &qword_10047BCE8, SCNNode_ptr);
  *(_QWORD *)(inited + 160) = v8;
  v9 = v5;
  v10 = SCNHitTestIgnoreHiddenNodesKey;
  v11 = SCNHitTestIgnoreChildNodesKey;
  v12 = SCNHitTestOptionSearchMode;
  v13 = SCNHitTestRootNodeKey;
  v14 = v8;
  v15 = sub_1000C7ACC(inited);
  type metadata accessor for SCNHitTestOption(0);
  sub_10000C4B0(&qword_10047B5B0, (uint64_t (*)(uint64_t))type metadata accessor for SCNHitTestOption, (uint64_t)&unk_1003B0430);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v15);
  v17 = objc_msgSend(v9, "hitTest:options:", isa, a1, a2);

  v18 = sub_100018148(0, &qword_100485C10, SCNHitTestResult_ptr);
  v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

  swift_retain();
  v20 = sub_10013FC40(v19, v2);
  swift_bridgeObjectRelease(v19);
  swift_release();
  if (v20)

  return v20 != 0;
}

_QWORD *sub_100142584(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  swift_bridgeObjectRetain(a1[5]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for HistoryUIState(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for HistoryUIState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HistoryUIState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HistoryUIState()
{
  return &type metadata for HistoryUIState;
}

uint64_t sub_1001426A4()
{
  uint64_t result;

  result = Contexts.UIKit.init()();
  qword_1004AF6E8 = result;
  return result;
}

id sub_1001426C0@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_10047ABA0 != -1)
    swift_once(&qword_10047ABA0, sub_1001426A4);
  v2 = (void *)qword_1004AF6E8;
  *a1 = qword_1004AF6E8;
  return v2;
}

BOOL sub_100142710(uint64_t a1, uint64_t a2)
{
  return ((*(_QWORD *)a1 != *(_QWORD *)a2) | ((*(_BYTE *)(a1 + 8) ^ *(_BYTE *)(a2 + 8)) | (*(_BYTE *)(a2 + 9) ^ *(_BYTE *)(a1 + 9))) & 1) == 0;
}

unint64_t sub_10014274C(uint64_t a1)
{
  unint64_t result;

  result = sub_100142770();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100142770()
{
  unint64_t result;

  result = qword_100485C40;
  if (!qword_100485C40)
  {
    result = swift_getWitnessTable(&unk_1003B905C, &type metadata for HistoryUIState);
    atomic_store(result, (unint64_t *)&qword_100485C40);
  }
  return result;
}

void sub_1001427B4()
{
  qword_100485C50 = 0;
  *(_QWORD *)algn_100485C58 = 0;
}

void sub_1001427C4()
{
  qword_100485C60 = 0x3FF0000000000000;
}

double sub_1001427D4()
{
  double result;

  if (qword_10047A748 != -1)
    swift_once(&qword_10047A748, sub_10000EE64);
  result = *(double *)&qword_1004AF080 + *(double *)&qword_1004AF080;
  *(double *)&qword_100485C68 = *(double *)&qword_1004AF080 + *(double *)&qword_1004AF080;
  return result;
}

void sub_100142820()
{
  double v0;
  double v1;
  id v2;
  id v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  _BYTE v10[24];

  if (qword_10047A790 != -1)
    swift_once(&qword_10047A790, sub_10000F000);
  v0 = *(double *)&qword_1004AF0C8;
  if (qword_10047ABB8 != -1)
    swift_once(&qword_10047ABB8, sub_1001427D4);
  v1 = *(double *)&qword_100485C68;
  v2 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  LOBYTE(v2) = UIContentSizeCategory.isAccessibilityCategory.getter(v3);
  v4 = 176.0;
  if ((v2 & 1) != 0)
    v4 = 444.0;
  v5 = v0 + v1 + v4 + 0.5;
  v6 = *(double *)&qword_1004AF0C8 + *(double *)&qword_100485C68 + -0.5;
  v7 = type metadata accessor for CardContainerView.Configuration(0);
  v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  swift_beginAccess(v8 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration__maxHeight, v10, 33, 0);
  v9 = v5;
  Published.init(initialValue:)(&v9, &type metadata for CGFloat);
  swift_endAccess(v10);
  swift_beginAccess(v8 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration__minHeight, v10, 33, 0);
  v9 = v6;
  Published.init(initialValue:)(&v9, &type metadata for CGFloat);
  swift_endAccess(v10);
  *(_QWORD *)(v8 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityThreshold) = 0x408F400000000000;
  *(_QWORD *)(v8 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityUpperThreshold) = 0x40A7700000000000;
  qword_100485C70 = v8;
}

uint64_t sub_100142A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  BOOL v10;
  unint64_t v11;
  id v12;
  id v13;
  _BYTE v15[848];
  _BYTE v16[840];
  _BYTE v17[24];

  v1 = type metadata accessor for SpatialPlattersHistoryItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = v0 + qword_100485CC8;
  swift_beginAccess(v5, v17, 0, 0);
  v6 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  if (!v6)
    goto LABEL_6;
  sub_100036344(*(_QWORD *)v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)), (uint64_t)v4, type metadata accessor for SpatialPlattersHistoryItem);
  if (v6 != 1)
  {
    sub_1000258F8((uint64_t)v4, type metadata accessor for SpatialPlattersHistoryItem);
LABEL_6:
    v10 = 0;
    goto LABEL_7;
  }
  v7 = *(_QWORD *)&v4[*(int *)(v1 + 20)];
  v8 = type metadata accessor for MeasurementHistoryItem(0);
  sub_10001F970(&v4[*(int *)(v8 + 28)], v15);
  sub_10014FD9C(v15, sub_100085E0C);
  sub_1000258F8((uint64_t)v4, type metadata accessor for SpatialPlattersHistoryItem);
  sub_10001F970(v15, v16);
  if (sub_10001F9AC((uint64_t)v16))
  {
    sub_10014FD9C(v15, sub_100020E24);
    v9 = 1;
    return v9 & 1;
  }
  v10 = v7 != 0;
  sub_10001F9B8((uint64_t)v16);
  sub_10014FD9C(v15, sub_100020E24);
LABEL_7:
  v11 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  v9 = 1;
  if (v11 <= 1 && !v10)
  {
    v12 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v13 = objc_msgSend(v12, "preferredContentSizeCategory");

    v9 = UIContentSizeCategory.isAccessibilityCategory.getter(v13);
  }
  return v9 & 1;
}

double sub_100142BEC()
{
  uint64_t v0;
  double v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  CGRect v7;

  if (qword_10047A790 != -1)
    swift_once(&qword_10047A790, sub_10000F000);
  v1 = *(double *)&qword_1004AF0C8;
  v2 = sub_100142CB0();
  v3 = *(_QWORD *)(v0 + qword_100485C88);
  v4 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.isIPhone()(v4) & 1) != 0)
    v5 = &OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
  else
    v5 = &OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
  objc_msgSend(*(id *)(v3 + *v5), "bounds");
  return v1 + v2 + -0.5 + CGRectGetHeight(v7);
}

double sub_100142CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  double v9;
  double v10;
  id v11;
  id v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v22[24];

  v1 = sub_10000EDC8((uint64_t *)&unk_1004862E0);
  __chkstk_darwin(v1);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = (void *)objc_opt_self(UITraitCollection);
  v5 = objc_msgSend(v4, "currentTraitCollection");
  v6 = objc_msgSend(v5, "preferredContentSizeCategory");

  LOBYTE(v5) = UIContentSizeCategory.isAccessibilityCategory.getter(v6);
  if ((v5 & 1) != 0)
  {
    v7 = objc_msgSend(v4, "currentTraitCollection");
    v8 = objc_msgSend(v7, "preferredContentSizeCategory");

    LOBYTE(v7) = UIContentSizeCategory.isAccessibilityCategory.getter(v8);
    if ((v7 & 1) != 0)
      v9 = 222.0;
    else
      v9 = 88.0;
    if (qword_10047A758 != -1)
      swift_once(&qword_10047A758, sub_10000EF18);
    return v9 + *(double *)&qword_1004AF090;
  }
  else
  {
    if ((*(_BYTE *)(v0 + qword_100485DB8 + 8) & 1) != 0)
    {
      v11 = objc_msgSend(v4, "currentTraitCollection");
      v12 = objc_msgSend(v11, "preferredContentSizeCategory");

      LOBYTE(v11) = UIContentSizeCategory.isAccessibilityCategory.getter(v12);
      if ((v11 & 1) != 0)
        v10 = 222.0;
      else
        v10 = 88.0;
    }
    else
    {
      v10 = *(double *)(v0 + qword_100485DB8);
    }
    v13 = (uint64_t *)(v0 + qword_100485CC8);
    swift_beginAccess(v13, v22, 0, 0);
    v14 = *v13;
    v15 = *(_QWORD *)(v14 + 16);
    if (v15 >= 2)
      return v10 * 0.25 * 7.0;
    if (v15 == 1)
    {
      v16 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SpatialPlattersHistoryItem(0) - 8) + 80);
      v17 = (v16 + 32) & ~v16;
      v18 = type metadata accessor for MeasurementHistoryItem(0);
      sub_1000644F8(v14 + *(int *)(v18 + 24) + v17, (uint64_t)v3, (uint64_t *)&unk_1004862E0);
      v19 = type metadata accessor for MeasurementCapture(0);
      LODWORD(v17) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v3, 1, v19);
      sub_100036600((uint64_t)v3, (uint64_t *)&unk_1004862E0);
      if ((_DWORD)v17 != 1)
        return v10 * 0.25 * 7.0;
    }
  }
  return v10;
}

double *sub_100142F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  int64_t v11;
  double *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  _BYTE v21[24];

  v1 = type metadata accessor for SpatialPlattersHistoryItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MeasurementHistoryItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v0 + qword_100485CC8);
  swift_beginAccess(v9, v21, 0, 0);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = _swiftEmptyArrayStorage;
  if (v11)
  {
    v20 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v10);
    sub_1000A5834(0, v11, 0);
    v13 = *(unsigned __int8 *)(v2 + 80);
    v18 = v10;
    v14 = v10 + ((v13 + 32) & ~v13);
    v19 = *(_QWORD *)(v2 + 72);
    v12 = v20;
    do
    {
      sub_100036344(v14, (uint64_t)v4, type metadata accessor for SpatialPlattersHistoryItem);
      sub_100036344((uint64_t)v4, (uint64_t)v8, type metadata accessor for MeasurementHistoryItem);
      sub_1000258F8((uint64_t)v4, type metadata accessor for SpatialPlattersHistoryItem);
      if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
      {
        sub_1000A5834(0, *((_QWORD *)v12 + 2) + 1, 1);
        v12 = v20;
      }
      v16 = *((_QWORD *)v12 + 2);
      v15 = *((_QWORD *)v12 + 3);
      if (v16 >= v15 >> 1)
      {
        sub_1000A5834(v15 > 1, v16 + 1, 1);
        v12 = v20;
      }
      *((_QWORD *)v12 + 2) = v16 + 1;
      sub_10006CAB4((uint64_t)v8, (uint64_t)v12+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v16, type metadata accessor for MeasurementHistoryItem);
      v14 += v19;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease(v18);
  }
  return v12;
}

void sub_100143148(void *a1, void **a2, int a3, double a4, double a5, double a6, double a7)
{
  char *v7;
  objc_class *ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, __n128);
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void **v55;
  id v56;
  double *v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void *v64;
  id v65;
  __n128 v66;
  id v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  char v72;
  double v73;
  id v74;
  void *v75;
  id v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char v81;
  void *v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)();
  void *v89;
  char *v90;
  uint64_t (*v91)();
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  char *v96;
  uint64_t (*v97)(__n128);
  __n128 v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  __n128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  int v126;
  id v127;
  void **v128;
  void **aBlock;
  uint64_t v130;
  uint64_t (*v131)(uint64_t);
  void *v132;
  uint64_t (*v133)();
  uint64_t v134;
  objc_super v135;

  v126 = a3;
  v127 = a1;
  v128 = a2;
  ObjectType = (objc_class *)swift_getObjectType(v7);
  v13 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v123 = *(_QWORD *)(v13 - 8);
  v124 = v13;
  __chkstk_darwin(v13);
  v125 = (char *)&v122 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v122);
  v16 = (char *)&v122 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v122 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = qword_100485C78;
  v21 = objc_allocWithZone((Class)UIView);
  v22 = v7;
  *(_QWORD *)&v7[v20] = objc_msgSend(v21, "init");
  v23 = qword_100485C90;
  v24 = sub_10000EDC8(&qword_100486270);
  KeyPath = swift_getKeyPath(&unk_1003B91B0);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v26 = qword_1004AF890;
  v27 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v24 + 272);
  v28 = swift_retain();
  *(_QWORD *)&v22[v23] = v27(KeyPath, v26, v28);
  v29 = qword_100485C98;
  sub_10000EDC8(&qword_100486278);
  v30 = swift_getKeyPath(&unk_1003B91D8);
  *(_QWORD *)&v22[v29] = MutableStateBinding.__allocating_init(_:_:)(v30, ObjectType);
  v31 = qword_100485CA0;
  sub_10000EDC8(&qword_100486280);
  v32 = swift_getKeyPath(&unk_1003B9200);
  *(_QWORD *)&v22[v31] = MutableStateBinding.__allocating_init(_:_:)(v32, ObjectType);
  v33 = qword_100485CA8;
  sub_10000EDC8((uint64_t *)&unk_100486288);
  v34 = swift_getKeyPath(&unk_1003B9228);
  *(_QWORD *)&v22[v33] = MutableStateBinding.__allocating_init(_:_:)(v34, ObjectType);
  v35 = qword_100485CB0;
  v36 = sub_10000EDC8((uint64_t *)&unk_1004810D0);
  v37 = swift_getKeyPath(&unk_1003B9250);
  v38 = qword_1004AF890;
  v39 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v36 + 272);
  v40 = swift_retain();
  *(_QWORD *)&v22[v35] = v39(v37, v38, v40);
  v41 = qword_100485CB8;
  sub_10000EDC8(&qword_100486298);
  v42 = swift_getKeyPath(&unk_1003B9278);
  *(_QWORD *)&v22[v41] = MutableStateValue.__allocating_init(_:_:)(v42, ObjectType);
  v43 = qword_100485CC0;
  sub_10000EDC8(&qword_1004862A0);
  v44 = swift_getKeyPath(&unk_1003B92A0);
  v45 = type metadata accessor for SpatialGenericPlatter(0);
  *(_QWORD *)&v22[v43] = MutableStateValue.__allocating_init(_:_:)(v44, v45);
  *(_QWORD *)&v22[qword_100485CC8] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v22[qword_100485CD0] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v22[qword_100485CD8] = 0;
  v22[qword_100485D00] = 0;
  *(_QWORD *)&v22[qword_100485D08] = 0;
  v46 = qword_100485D18;
  if (qword_10047A750 != -1)
    swift_once(&qword_10047A750, sub_10000EF04);
  v47 = *(double *)&qword_1004AF088;
  if (qword_10047A770 != -1)
    swift_once(&qword_10047A770, sub_10000EF48);
  *(double *)&v22[v46] = v47 + *(double *)&qword_1004AF0A8;
  *(_QWORD *)&v22[qword_100485D20] = 0;
  *(_QWORD *)&v22[qword_100485D28] = 0;
  *(_QWORD *)&v22[qword_100485D30] = 0;
  swift_unknownObjectWeakInit(&v22[qword_100485D38], 0);
  v22[qword_100485D40] = 0;
  *(_QWORD *)&v22[qword_100485D48] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v22[qword_100485D50] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v22[qword_100485D58] = 0;
  *(_QWORD *)&v22[qword_100485D60] = 0;
  *(_QWORD *)&v22[qword_100485D68] = 0;
  v48 = qword_100485D78;
  v22[qword_100485D78] = 0;
  v22[qword_100485D80] = 1;
  v22[qword_100485D88] = 1;
  v22[qword_100485D90] = 1;
  v22[qword_100485D98] = 1;
  v22[qword_100485DA0] = 0;
  v22[qword_100485DA8] = 1;
  v22[qword_100485DB0] = 0;
  v49 = &v22[qword_100485DB8];
  *(_QWORD *)v49 = 0;
  v49[8] = 1;
  swift_unknownObjectWeakInit(&v22[qword_100485DC0], 0);
  v50 = qword_100485DC8;
  sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  static DispatchQoS.userInteractive.getter();
  aBlock = (void **)_swiftEmptyArrayStorage;
  v51 = sub_10000C4B0((unint64_t *)&qword_10047E690, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v52 = sub_10000EDC8(&qword_100486EF0);
  v53 = sub_100043310((unint64_t *)&qword_10047E6A0, &qword_100486EF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v52, v53, v122, v51);
  v54 = v125;
  (*(void (**)(char *, _QWORD, uint64_t))(v123 + 104))(v125, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v124);
  *(_QWORD *)&v22[v50] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000018, 0x80000001003D9500, v19, v16, v54, 0);
  *(_QWORD *)&v22[qword_100485DD0] = 0;
  *(_QWORD *)&v22[qword_100485DD8] = 0;
  v56 = v127;
  v55 = v128;
  *(_QWORD *)&v22[qword_100485D10] = v127;
  v57 = (double *)&v22[qword_100485CE0];
  *v57 = a4;
  v57[1] = a5;
  v57[2] = a6;
  v57[3] = a7;
  *(_QWORD *)&v22[qword_100485D70] = v55;
  v22[v48] = v126 & 1;
  v58 = objc_allocWithZone((Class)type metadata accessor for HistoryView());
  v59 = v56;
  swift_retain();
  v60 = objc_msgSend(v58, "initWithFrame:", a4, a5, a6, a7);
  v61 = qword_100485C80;
  *(_QWORD *)&v22[qword_100485C80] = v60;
  objc_msgSend(v60, "setHidden:", 1);
  if (qword_10047ABC0 != -1)
    swift_once(&qword_10047ABC0, sub_100142820);
  v62 = qword_100485C70;
  *(_QWORD *)&v22[qword_100485CF8] = qword_100485C70;
  v63 = *(char **)&v22[v61];
  v64 = *(void **)&v63[OBJC_IVAR____TtC7Measure11HistoryView_tableView];
  v65 = objc_allocWithZone((Class)type metadata accessor for CardContainerView());
  swift_retain_n(v62, 2, v66);
  v67 = sub_100168A04(v64, v64, v62);
  v68 = qword_100485C88;
  *(_QWORD *)&v22[qword_100485C88] = v67;
  swift_unknownObjectWeakAssign(&v63[OBJC_IVAR____TtC7Measure11HistoryView_cardContainer], v67);
  v69 = objc_msgSend(v67, "leftAnchor");
  v70 = objc_msgSend(v63, "leftAnchor");
  v71 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v72 = static UIDevice.isIPhone()(v71);
  v73 = -*(double *)&qword_1004AF088;
  if ((v72 & 1) != 0)
    v73 = 0.0;
  v74 = objc_msgSend(v69, "constraintEqualToAnchor:constant:", v70, v73);

  *(_QWORD *)&v22[qword_100485CF0] = v74;
  v75 = *(void **)&v22[v68];
  v76 = objc_allocWithZone((Class)type metadata accessor for CardContainerController(0));
  v77 = sub_100185108(v75);
  *(_QWORD *)&v22[qword_100485CE8] = v77;
  v78 = v77;

  v78[OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded] = 0;
  v135.receiver = v22;
  v135.super_class = ObjectType;
  v79 = (char *)objc_msgSendSuper2(&v135, "init");
  sub_100143EA0();
  sub_10014416C();
  v81 = static UIDevice.isIPhone()(v80);
  v127 = v59;
  if ((v81 & 1) != 0)
  {
    v82 = *(void **)&v79[qword_100485C80];
    v83 = objc_retain(*(id *)(*(_QWORD *)&v79[qword_100485CE8]
                            + OBJC_IVAR____TtC7Measure23CardContainerController_containerView));
    v84 = v82;
    sub_100168650(v84);

    v85 = objc_opt_self(UIView);
    v86 = swift_allocObject(&unk_100447EA8, 24, 7);
    *(_QWORD *)(v86 + 16) = v79;
    v87 = swift_allocObject(&unk_100447ED0, 32, 7);
    v88 = sub_10014F42C;
    *(_QWORD *)(v87 + 16) = sub_10014F42C;
    *(_QWORD *)(v87 + 24) = v86;
    v133 = sub_100082450;
    v134 = v87;
    aBlock = _NSConcreteStackBlock;
    v130 = 1107296256;
    v131 = sub_1000DDB80;
    v132 = &unk_100447EE8;
    v89 = _Block_copy(&aBlock);
    v90 = v79;
    swift_retain();
    objc_msgSend((id)v85, "performWithoutAnimation:", v89, swift_release().n128_f64[0]);
    _Block_release(v89);
    LOBYTE(v85) = swift_isEscapingClosureAtFileLocation(v87, "", 102, 236, 44, 1);
    swift_release();
    if ((v85 & 1) == 0)
    {
      v91 = 0;
      v92 = 0;
LABEL_16:
      v109 = swift_retain();
      v110 = StateValue.publisher.getter(v109);
      swift_release();
      aBlock = (void **)v110;
      v111 = swift_allocObject(&unk_100447E80, 24, 7);
      swift_unknownObjectWeakInit(v111 + 16, v79);
      v112 = sub_10000EDC8(&qword_1004862B8);
      v113 = sub_100043310((unint64_t *)&unk_1004862C0, &qword_1004862B8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v115 = Publisher<>.sink(receiveValue:)(sub_10014F41C, v111, v112, v113, v114);
      swift_release();
      swift_release();
      *(_QWORD *)&v79[qword_100485D20] = v115;
      swift_release();
      aBlock = v128;
      v116 = swift_allocObject(&unk_100447E80, 24, 7);
      swift_unknownObjectWeakInit(v116 + 16, v79);
      v117 = sub_10000EDC8((uint64_t *)&unk_100481B80);
      v118 = sub_100043310((unint64_t *)&unk_1004862D0, (uint64_t *)&unk_100481B80, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v120 = Publisher<>.sink(receiveValue:)(sub_10014F424, v116, v117, v118, v119);
      swift_release();
      *(_QWORD *)&v79[qword_100485D28] = v120;
      swift_release();
      v121 = *(id *)&v79[qword_100485CE8];
      sub_100184538();

      swift_release();
      v79[qword_100485D78] = 0;
      sub_1000217BC((uint64_t)v88, v86);
      sub_1000217BC((uint64_t)v91, v92);
      return;
    }
    __break(1u);
  }
  else
  {
    v93 = objc_opt_self(UIView);
    v92 = swift_allocObject(&unk_100447DB8, 24, 7);
    *(_QWORD *)(v92 + 16) = v79;
    v94 = swift_allocObject(&unk_100447DE0, 32, 7);
    *(_QWORD *)(v94 + 16) = sub_10014F368;
    *(_QWORD *)(v94 + 24) = v92;
    v133 = sub_100082450;
    v134 = v94;
    aBlock = _NSConcreteStackBlock;
    v130 = 1107296256;
    v131 = sub_1000DDB80;
    v132 = &unk_100447DF8;
    v95 = _Block_copy(&aBlock);
    v96 = v79;
    swift_retain();
    objc_msgSend((id)v93, "performWithoutAnimation:", v95, swift_release().n128_f64[0]);
    _Block_release(v95);
    LOBYTE(v93) = swift_isEscapingClosureAtFileLocation(v94, "", 102, 241, 44, 1);
    swift_release();
    if ((v93 & 1) == 0)
    {
      v97 = *(uint64_t (**)(__n128))(**(_QWORD **)&v96[qword_100485CA0] + 200);
      v98 = swift_retain();
      v99 = v97(v98);
      v100 = swift_release();
      v101 = (*(uint64_t (**)(__n128))(*(_QWORD *)v99 + 208))(v100);
      swift_release();
      aBlock = (void **)v101;
      v102 = swift_allocObject(&unk_100447E30, 24, 7);
      *(_QWORD *)(v102 + 16) = v96;
      v103 = swift_allocObject(&unk_100447E58, 32, 7);
      *(_QWORD *)(v103 + 16) = sub_10014F380;
      *(_QWORD *)(v103 + 24) = v102;
      v104 = v96;
      v105 = sub_10000EDC8(&qword_1004862A8);
      v106 = sub_100043310(&qword_1004862B0, &qword_1004862A8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v108 = Publisher<>.sink(receiveValue:)(sub_10014F3AC, v103, v105, v106, v107);
      swift_release();
      swift_release();
      *(_QWORD *)&v104[qword_100485D30] = v108;
      swift_release();
      v88 = 0;
      v86 = 0;
      v91 = sub_10014F368;
      goto LABEL_16;
    }
  }
  __break(1u);
}

void sub_100143EA0()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  NSString v12;
  void *v13;
  uint64_t v14;
  char *v15;
  id v16;
  Swift::String v17;

  v1 = v0;
  v2 = *(char **)&v0[qword_100485C80];
  v3 = *(_QWORD *)&v0[qword_100485C88];
  objc_msgSend(v2, "addSubview:", v3);
  v4 = OBJC_IVAR____TtC7Measure17CardContainerView_titleView;
  v5 = *(void **)(*(_QWORD *)(v3 + OBJC_IVAR____TtC7Measure17CardContainerView_titleView)
                + OBJC_IVAR____TtC7Measure13CardTitleView_title);
  v6 = (void *)objc_opt_self(NSBundle);
  v7 = v5;
  v8 = objc_msgSend(v6, "mainBundle");
  v17._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0x5F59524F54534948;
  v9._object = (void *)0xED0000454C544954;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v17._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v17)._object;

  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setText:", v12, swift_bridgeObjectRelease(object).n128_f64[0]);

  v13 = *(void **)&v2[OBJC_IVAR____TtC7Measure11HistoryView_tableView];
  objc_msgSend(v13, "setDataSource:", v1);
  objc_msgSend(v13, "setDelegate:", v1);
  v14 = *(_QWORD *)(v3 + v4);
  objc_msgSend(*(id *)(v14 + OBJC_IVAR____TtC7Measure13CardTitleView_rightItem), "addTarget:action:forControlEvents:", v1, "closeHistory", 64);
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton), "addTarget:action:forControlEvents:", v1, "copyToPasteboard", 64);
  objc_msgSend(*(id *)(v14 + OBJC_IVAR____TtC7Measure13CardTitleView_leftItem), "addTarget:action:forControlEvents:", v1, "presentShareSheet", 64);
  v15 = v1;
  sub_10016AF30(v3, (uint64_t)v15);

  *(_BYTE *)(v3 + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) = 1;
  *(_BYTE *)(*(_QWORD *)&v15[qword_100485CE8]
           + OBJC_IVAR____TtC7Measure23CardContainerController_isDraggableFromBottomStack) = 0;
  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.isIPad()() & 1) == 0)
  {
    v16 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v15, "closeHistory");
    objc_msgSend(v16, "setDelegate:", v15);
    objc_msgSend(v2, "addGestureRecognizer:", v16);

  }
}

void sub_10014416C()
{
  uint64_t v0;
  double v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  char v9;
  double v10;
  id v11;
  void *v12;
  char v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  Class isa;

  if (qword_10047A770 != -1)
    swift_once(&qword_10047A770, sub_10000EF48);
  v1 = *(double *)&qword_1004AF0A8;
  v2 = *(void **)(v0 + qword_100485C80);
  sub_100184080(v2);
  v3 = *(void **)(v0 + qword_100485C88);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
  v5 = swift_allocObject(v4, 56, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1003B5630;
  v6 = objc_msgSend(v3, "bottomAnchor");
  v7 = objc_msgSend(v2, "bottomAnchor");
  v8 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v9 = static UIDevice.isIPhone()(v8);
  v10 = -v1;
  if ((v9 & 1) != 0)
    v10 = 0.0;
  v11 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, v10);

  v12 = *(void **)(v0 + qword_100485CF0);
  *(_QWORD *)(v5 + 32) = v11;
  *(_QWORD *)(v5 + 40) = v12;
  v13 = static UIDevice.isIPhone()(v12);
  v14 = objc_msgSend(v3, "widthAnchor");
  if ((v13 & 1) != 0)
  {
    v15 = objc_msgSend(v2, "widthAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

    v14 = v15;
  }
  else
  {
    if (qword_10047A750 != -1)
      swift_once(&qword_10047A750, sub_10000EF04);
    v16 = objc_msgSend(v14, "constraintEqualToConstant:", *(double *)&qword_1004AF088);
  }

  v17 = (void *)objc_opt_self(NSLayoutConstraint);
  *(_QWORD *)(v5 + 48) = v16;
  specialized Array._endMutation()(v17);
  sub_100018148(0, (unint64_t *)&qword_100486300, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v17, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

}

uint64_t sub_100144410(uint64_t a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void *Strong;
  void *v9;
  char v11;

  v1 = *(void **)(a1 + qword_100485CE8);
  sub_100184538();
  sub_100185D58(2, 0, 0, 0.4);
  KeyPath = swift_getKeyPath(&unk_1003B9168);
  v3 = swift_getKeyPath(&unk_1003B9190);
  v11 = 2;
  v4 = v1;
  static Published.subscript.setter(&v11, v4, KeyPath, v3);
  sub_100184D4C();
  v5 = &v4[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  v6 = &v4[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture], v7);
  if (Strong)
  {
    v9 = Strong;
    objc_msgSend(Strong, "setEnabled:", 1);

  }
  return swift_unknownObjectWeakAssign(v6, 0);
}

uint64_t sub_1001444FC(uint64_t a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void *Strong;
  void *v9;
  char v11;

  v1 = *(void **)(a1 + qword_100485CE8);
  sub_100185D58(2, 0, 0, 0.4);
  KeyPath = swift_getKeyPath(&unk_1003B9168);
  v3 = swift_getKeyPath(&unk_1003B9190);
  v11 = 2;
  v4 = v1;
  static Published.subscript.setter(&v11, v4, KeyPath, v3);
  sub_100184D4C();
  v5 = &v4[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  v6 = &v4[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture], v7);
  if (Strong)
  {
    v9 = Strong;
    objc_msgSend(Strong, "setEnabled:", 1);

  }
  return swift_unknownObjectWeakAssign(v6, 0);
}

void sub_1001445E4(__int16 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD *, __n128);
  __n128 v8;
  void (*v9)(_QWORD *, _QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  double v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void *v55;
  _QWORD v56[4];

  v2 = v1;
  v4 = sub_10000EDC8((uint64_t *)&unk_100486260);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x100) == 0)
    return;
  v7 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)(v2 + qword_100485CA0) + 400);
  v8 = swift_retain();
  v9 = (void (*)(_QWORD *, _QWORD))v7(v56, v8);
  *(_BYTE *)(v10 + 1) = 0;
  v9(v56, 0);
  swift_release();
  v11 = *(_QWORD *)(v2 + qword_100485CE8);
  KeyPath = swift_getKeyPath(&unk_1003B9168);
  v13 = swift_getKeyPath(&unk_1003B9190);
  static Published.subscript.getter(v56, v11, KeyPath, v13);
  swift_release();
  *(_QWORD *)&v14 = swift_release().n128_u64[0];
  if (LOBYTE(v56[0]) > 1u)
    return;
  v15 = objc_msgSend(*(id *)(v2 + qword_100485C80), "superview", v14);
  if (!v15)
    return;
  v16 = v15;
  v17 = qword_100485CD8;
  v18 = *(void **)(v2 + qword_100485CD8);
  if (!v18)
  {
    sub_100149870();
    v21 = v40;
    if ((unint64_t)v40 >> 62)
    {
      if (v40 < 0)
        v51 = v40;
      else
        v51 = v40 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v40);
      v41 = _CocoaArrayWrapper.endIndex.getter(v51);
      if (v41)
      {
LABEL_23:
        v52 = v17;
        v53 = v6;
        v54 = v2;
        v55 = v16;
        v42 = 4;
        while (1)
        {
          if ((v21 & 0xC000000000000001) != 0)
            v43 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v42 - 4, v21);
          else
            v43 = (char *)*(id *)(v21 + 8 * v42);
          v44 = v43;
          v19 = (id)(v42 - 3);
          if (__OFADD__(v42 - 4, 1))
          {
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
          v45 = *(void **)&v43[qword_100488870];
          if (!v45)
            goto LABEL_49;
          v46 = swift_getKeyPath(&unk_1003B9168);
          v47 = swift_getKeyPath(&unk_1003B9190);
          v48 = v45;
          static Published.subscript.getter(v56, v48, v46, v47);

          swift_release();
          swift_release();
          if (LOBYTE(v56[0]) < 2u)
            break;
          ++v42;
          if (v19 == (id)v41)
          {
            swift_bridgeObjectRelease(v21);
            goto LABEL_39;
          }
        }
LABEL_18:
        v34 = (uint64_t)v53;
        v33 = v54;
        v35 = v52;
        swift_bridgeObjectRelease_n(v21, 2);
        v36 = *(void **)(v33 + v35);
        if (v36)
        {
          v37 = v36;
          sub_10018CE84(0);
          v39 = type metadata accessor for IndexPath(0, v38);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v34, 1, 1, v39);
          sub_100146AA0(0, v34);

          sub_100036600(v34, (uint64_t *)&unk_100486260);
        }
        sub_100145C04(0, 0, 1);
        v16 = v55;
        goto LABEL_41;
      }
    }
    else
    {
      v41 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v40);
      if (v41)
        goto LABEL_23;
    }
    swift_bridgeObjectRelease(v21);
LABEL_40:
    swift_bridgeObjectRelease(v21);
LABEL_41:

    return;
  }
  v19 = v18;
  sub_100149870();
  v21 = v20;
  v53 = v6;
  v54 = v2;
  v55 = v16;
  v52 = v17;
  if (v20 >> 62)
  {
LABEL_34:
    if (v21 < 0)
      v49 = v21;
    else
      v49 = v21 & 0xFFFFFFFFFFFFFF8;
    v50 = v19;
    swift_bridgeObjectRetain(v21);
    v22 = _CocoaArrayWrapper.endIndex.getter(v49);
    if (v22)
      goto LABEL_7;
    goto LABEL_38;
  }
  v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  v23 = v19;
  swift_bridgeObjectRetain(v21);
  if (!v22)
  {
LABEL_38:

    swift_bridgeObjectRelease(v21);
LABEL_39:
    v16 = v55;
    goto LABEL_40;
  }
LABEL_7:
  v24 = 4;
  while (1)
  {
    if ((v21 & 0xC000000000000001) != 0)
      v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v24 - 4, v21);
    else
      v25 = (char *)*(id *)(v21 + 8 * v24);
    v26 = v25;
    v27 = v24 - 3;
    if (__OFADD__(v24 - 4, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    v28 = *(void **)&v25[qword_100488870];
    if (!v28)
      break;
    v29 = swift_getKeyPath(&unk_1003B9168);
    v30 = swift_getKeyPath(&unk_1003B9190);
    v31 = v28;
    static Published.subscript.getter(v56, v31, v29, v30);

    swift_release();
    swift_release();
    if (LOBYTE(v56[0]) >= 2u)
    {

    }
    else
    {
      type metadata accessor for SpatialGenericPlatter(0);
      v32 = static NSObject.== infix(_:_:)(v19, v26);

      if ((v32 & 1) == 0)
      {

        goto LABEL_18;
      }
    }
    ++v24;
    if (v27 == v22)
      goto LABEL_38;
  }
  __break(1u);
LABEL_49:
  __break(1u);
}

double sub_100144A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t Strong;
  double result;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double *v36;
  _QWORD aBlock[6];
  _BYTE v38[24];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MeasurementsHistory(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v38, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2, v15);
  if (Strong)
  {
    v18 = (void *)Strong;
    v19 = Contexts.UIKit.init()(Strong);
    v33 = v5;
    v34 = v8;
    v20 = (void *)v19;
    sub_100036344(a1, (uint64_t)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MeasurementsHistory);
    v21 = *(unsigned __int8 *)(v12 + 80);
    v22 = (v21 + 16) & ~v21;
    v23 = (v13 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = swift_allocObject(&unk_100448240, v23 + 8, v21 | 7);
    sub_10006CAB4((uint64_t)v14, v24 + v22, type metadata accessor for MeasurementsHistory);
    *(_QWORD *)(v24 + v23) = v18;
    aBlock[4] = sub_10014FA6C;
    aBlock[5] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003ECA0;
    aBlock[3] = &unk_100448258;
    v25 = _Block_copy(aBlock);
    v26 = v20;
    v27 = v18;
    static DispatchQoS.unspecified.getter(v28);
    v36 = _swiftEmptyArrayStorage;
    v29 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v30 = sub_10000EDC8((uint64_t *)&unk_10047E430);
    v31 = sub_100043310((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v36, v30, v31, v4, v29);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v34);

    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

size_t sub_100144D18(uint64_t a1, uint64_t (*a2)(uint64_t a1))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (**v16)(uint64_t);
  uint64_t v17;
  size_t result;
  void (*v19)(_QWORD *__return_ptr, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  size_t *v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  size_t *v28;
  size_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  size_t *v36;
  BOOL v37;
  uint64_t v38;
  _QWORD *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t (*v48)(uint64_t);
  size_t *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[24];
  char v54[24];
  _QWORD v55[3];

  v4 = sub_10000EDC8((uint64_t *)&unk_1004862E0);
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000EDC8((uint64_t *)&unk_100488B90);
  __chkstk_darwin(v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MeasurementHistoryItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (uint64_t (**)(uint64_t))((char *)&v46 - v15);
  v17 = type metadata accessor for MeasurementsHistory(0);
  sub_1000644F8(a1 + *(int *)(v17 + 24), (uint64_t)v9, (uint64_t *)&unk_100488B90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_100036600((uint64_t)v9, (uint64_t *)&unk_100488B90);
  sub_10006CAB4((uint64_t)v9, (uint64_t)v16, type metadata accessor for MeasurementHistoryItem);
  v19 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)((char *)a2 + qword_100485CB8) + 144);
  v20 = swift_retain();
  v19(v55, v20);
  swift_release();
  v21 = v55[0];
  v22 = *v16;
  v23 = (size_t *)v16[1];
  swift_bridgeObjectRetain(v23);
  v24 = sub_10018D130((uint64_t)v22, (uint64_t)v23, v21);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v21);
  if ((v24 & 1) != 0)
    return sub_1000258F8((uint64_t)v16, type metadata accessor for MeasurementHistoryItem);
  v25 = (uint64_t *)((char *)a2 + qword_100485CD0);
  swift_beginAccess((char *)a2 + qword_100485CD0, v55, 0, 0);
  v26 = *v25;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v26);
  v27 = sub_10018D130((uint64_t)v22, (uint64_t)v23, v26);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v26);
  if ((v27 & 1) == 0)
    return sub_1000258F8((uint64_t)v16, type metadata accessor for MeasurementHistoryItem);
  v50 = v14;
  v47 = v6;
  v48 = a2;
  v28 = (size_t *)((char *)a2 + qword_100485CC8);
  swift_beginAccess((char *)a2 + qword_100485CC8, v54, 0, 0);
  v49 = v28;
  v29 = *v28;
  v30 = *(_QWORD **)(v29 + 16);
  if (!v30)
    return sub_1000258F8((uint64_t)v16, type metadata accessor for MeasurementHistoryItem);
  v31 = 0;
  v32 = *(_QWORD *)(type metadata accessor for SpatialPlattersHistoryItem(0) - 8);
  v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v34 = *(_QWORD *)(v32 + 72);
  while (1)
  {
    v35 = *(uint64_t (**)(uint64_t))(v29 + v33);
    v36 = *(size_t **)(v29 + v33 + 8);
    v37 = v35 == v22 && v36 == v23;
    if (v37 || (_stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, v22, v23, 0) & 1) != 0)
      break;
    ++v31;
    v33 += v34;
    if (v30 == (_QWORD *)v31)
      return sub_1000258F8((uint64_t)v16, type metadata accessor for MeasurementHistoryItem);
  }
  if (v31 >= *(_QWORD *)(v29 + 16))
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v22 = type metadata accessor for MeasurementHistoryItem;
  v38 = v29 + v33;
  v39 = v50;
  sub_100036344(v38, (uint64_t)v50, type metadata accessor for MeasurementHistoryItem);
  v40 = sub_1001ADF08(v39, v16);
  sub_1000258F8((uint64_t)v39, type metadata accessor for MeasurementHistoryItem);
  if ((v40 & 1) != 0)
    return sub_1000258F8((uint64_t)v16, type metadata accessor for MeasurementHistoryItem);
  v23 = v49;
  if (v31 >= *(_QWORD *)(*v49 + 16))
    goto LABEL_26;
  v41 = (uint64_t)v47;
  sub_1000644F8(*v49 + *(int *)(v10 + 24) + v33, (uint64_t)v47, (uint64_t *)&unk_1004862E0);
  v42 = type metadata accessor for MeasurementCapture(0);
  LODWORD(v10) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42);
  sub_100036600(v41, (uint64_t *)&unk_1004862E0);
  swift_beginAccess(v23, v53, 33, 0);
  v30 = (_QWORD *)*v23;
  result = swift_isUniquelyReferenced_nonNull_native(*v23);
  *v23 = (size_t)v30;
  v22 = v48;
  if ((result & 1) == 0)
  {
LABEL_27:
    result = sub_10002881C(v30);
    v30 = (_QWORD *)result;
    *v23 = result;
  }
  if (v31 >= v30[2])
  {
    __break(1u);
    return result;
  }
  sub_1000A7ECC((uint64_t)v16, (uint64_t)v30 + v33);
  swift_endAccess(v53);
  v43 = *(_QWORD *)((char *)v22 + qword_100485CE8);
  *(_BYTE *)(v43 + OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded) = sub_100142A10() & 1;
  if ((*((_BYTE *)v22 + qword_100485D40) & 1) != 0)
  {
    v44 = (uint64_t)*v16;
    v45 = (uint64_t)v16[1];
    swift_beginAccess((char *)v22 + qword_100485D48, v53, 33, 0);
    swift_bridgeObjectRetain(v45);
    sub_100192928(&v51, v44, v45);
    swift_endAccess(v53);
    swift_bridgeObjectRelease(v52);
    if ((_DWORD)v10 == 1)
    {
      swift_beginAccess((char *)v22 + qword_100485D50, v53, 33, 0);
      swift_bridgeObjectRetain(v45);
      sub_100192928(&v51, v44, v45);
      swift_endAccess(v53);
      swift_bridgeObjectRelease(v52);
    }
  }
  else
  {
    sub_1001451F8(v31, v16, v10 != 1);
  }
  return sub_1000258F8((uint64_t)v16, type metadata accessor for MeasurementHistoryItem);
}

uint64_t sub_1001451F8(unint64_t a1, _QWORD *a2, int a3)
{
  double v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void (**v12)(uint64_t, size_t *, char *);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  Class isa;
  uint64_t ObjectType;
  uint64_t v31;
  _QWORD *v32;
  size_t *v33;
  uint64_t v34;
  uint64_t v35;
  size_t isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  NSString v41;
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  Class v57;
  size_t v58;
  unint64_t v59;
  char *v60;
  id v61;
  char *v62;
  Class v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  Class v77;
  double v78;
  CGFloat v79;
  double v80;
  CGFloat v81;
  double v82;
  CGFloat v83;
  double v84;
  CGFloat v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double v90;
  uint64_t KeyPath;
  uint64_t v92;
  double v93;
  double v94;
  uint64_t v95;
  uint64_t *v96;
  double v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[4];
  CGRect v113;
  CGRect v114;

  LODWORD(v109) = a3;
  v104 = type metadata accessor for SpatialPlattersHistoryItem(0);
  v6 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v108 = (unint64_t)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_10000EDC8(&qword_1004862F0);
  v8 = __chkstk_darwin(v103);
  v10 = (uint64_t *)((char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v102 = (char *)&v100 - v11;
  v12 = (void (**)(uint64_t, size_t *, char *))&unk_1004862E0;
  v13 = sub_10000EDC8((uint64_t *)&unk_1004862E0);
  __chkstk_darwin(v13);
  v15 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MeasurementCapture(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for IndexPath(0, v20);
  v110 = *(_QWORD *)(v21 - 8);
  v111 = v21;
  v22 = __chkstk_darwin(v21);
  v107 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v105 = (char *)&v100 - v24;
  IndexPath.init(row:section:)(a1, 0);
  v25 = type metadata accessor for MeasurementHistoryItem(0);
  sub_1000644F8((uint64_t)a2 + *(int *)(v25 + 24), (uint64_t)v15, (uint64_t *)&unk_1004862E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_100036600((uint64_t)v15, (uint64_t *)&unk_1004862E0);
LABEL_5:
    v26 = v106;
    v27 = *(id *)(*(_QWORD *)(v106 + qword_100485C80) + OBJC_IVAR____TtC7Measure11HistoryView_tableView);
    v28 = v105;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    a2 = objc_msgSend(v27, "cellForRowAtIndexPath:", isa);

    if (!a2)
      return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v28, v111);
    ObjectType = swift_getObjectType(a2);
    v31 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HistoryCellProtocol);
    if (v31)
      v12 = (void (**)(uint64_t, size_t *, char *))v31;
    else
      v12 = 0;
    if (v31)
      v32 = a2;
    else
      v32 = 0;
    if (!v32)
    {

      return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v28, v111);
    }
    v33 = (size_t *)swift_getObjectType(v32);
    v34 = v26 + qword_100485CC8;
    swift_beginAccess(v34, v112, 0, 0);
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(*(_QWORD *)v34 + 16) > a1)
    {
      v35 = v108;
      sub_100036344(*(_QWORD *)v34+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * a1, v108, type metadata accessor for SpatialPlattersHistoryItem);
      v12[2](v35, v33, (char *)v12);

      sub_1000258F8(v35, type metadata accessor for SpatialPlattersHistoryItem);
      return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v28, v111);
    }
    __break(1u);
LABEL_38:
    isUniquelyReferenced_nonNull_native = sub_10002881C(v32);
    v32 = (_QWORD *)isUniquelyReferenced_nonNull_native;
    *v33 = isUniquelyReferenced_nonNull_native;
    if ((a1 & 0x8000000000000000) != 0)
      goto LABEL_39;
    goto LABEL_18;
  }
  sub_10006CAB4((uint64_t)v15, (uint64_t)v19, type metadata accessor for MeasurementCapture);
  if ((v109 & 1) != 0)
  {
    sub_1000258F8((uint64_t)v19, type metadata accessor for MeasurementCapture);
    goto LABEL_5;
  }
  v34 = v106;
  v33 = (size_t *)(v106 + qword_100485CC8);
  swift_beginAccess(v106 + qword_100485CC8, v112, 33, 0);
  v32 = (_QWORD *)*v33;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v33);
  *v33 = (size_t)v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_38;
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
LABEL_18:
  if (v32[2] > a1)
  {
    v108 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v109 = *(_QWORD *)(v6 + 72);
    v37 = (uint64_t)v32 + v108 + v109 * a1;
    v101 = v19;
    URL.path.getter(isUniquelyReferenced_nonNull_native);
    v39 = v38;
    v40 = objc_allocWithZone((Class)UIImage);
    v41 = String._bridgeToObjectiveC()();
    v42 = objc_msgSend(v40, "initWithContentsOfFile:", v41, swift_bridgeObjectRelease(v39).n128_f64[0]);
    v43 = *(int *)(v104 + 20);
    v44 = *(void **)(v37 + v43);
    *(_QWORD *)(v37 + v43) = v42;
    swift_endAccess(v112);

    v45 = *(_QWORD *)(v34 + qword_100485CE8);
    v46 = sub_100142A10();
    v104 = v45;
    *(_BYTE *)(v45 + OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded) = v46 & 1;
    v47 = *(_QWORD *)(v34 + qword_100485C80);
    v48 = OBJC_IVAR____TtC7Measure11HistoryView_tableView;
    v49 = *(void **)(v47 + OBJC_IVAR____TtC7Measure11HistoryView_tableView);
    v50 = sub_10000EDC8(&qword_1004862F8);
    v51 = v110;
    v52 = *(unsigned __int8 *)(v110 + 80);
    v53 = (v52 + 32) & ~v52;
    v54 = swift_allocObject(v50, v53 + *(_QWORD *)(v110 + 72), v52 | 7);
    *(_OWORD *)(v54 + 16) = xmmword_1003B0BD0;
    v55 = v111;
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v54 + v53, v105, v111);
    v56 = v49;
    v57 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v56, "reloadRowsAtIndexPaths:withRowAnimation:", v57, 0, swift_bridgeObjectRelease(v54).n128_f64[0]);

    v58 = *v33;
    v59 = *(_QWORD *)(*v33 + 16);
    v60 = (char *)v48;
    if (v59 < 2)
    {
      v62 = v107;
    }
    else
    {
      v61 = *(id *)(v47 + v48);
      v62 = v107;
      IndexPath.init(row:section:)(0, 0);
      v63 = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v62, v55);
      objc_msgSend(v61, "scrollToRowAtIndexPath:atScrollPosition:animated:", v63, 1, 0);

      v58 = *v33;
      v59 = *(_QWORD *)(*v33 + 16);
    }
    swift_bridgeObjectRetain(v58);
    v100 = v65;
    if (v59)
    {
      v66 = 0;
      v67 = v65 + v108;
      v68 = 0.0;
      v69 = v102;
      v70 = v103;
      v107 = v60;
      v108 = v47;
      do
      {
        v71 = v66 + 1;
        v72 = v59;
        v73 = (uint64_t)v10 + *(int *)(v70 + 48);
        sub_100036344(v67, v73, type metadata accessor for SpatialPlattersHistoryItem);
        v74 = (uint64_t)v69 + *(int *)(v70 + 48);
        *v69 = v66;
        sub_10006CAB4(v73, v74, type metadata accessor for SpatialPlattersHistoryItem);
        sub_100012C58((uint64_t)v69, (uint64_t)v10, &qword_1004862F0);
        v75 = *v10;
        v76 = *(id *)&v107[v108];
        IndexPath.init(row:section:)(v75, 0);
        v77 = IndexPath._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v110 + 8))(v62, v111);
        objc_msgSend(v76, "rectForRowAtIndexPath:", v77, v100);
        v79 = v78;
        v81 = v80;
        v83 = v82;
        v85 = v84;

        v59 = v72;
        v113.origin.x = v79;
        v113.origin.y = v81;
        v113.size.width = v83;
        v113.size.height = v85;
        v68 = v68 + CGRectGetHeight(v113);
        sub_100036600((uint64_t)v10, &qword_1004862F0);
        v67 += v109;
        v66 = v71;
      }
      while (v72 != v71);
    }
    else
    {
      v68 = 0.0;
    }
    swift_bridgeObjectRelease(v100);
    v86 = qword_100485D08;
    v87 = v106;
    *(double *)(v106 + qword_100485D08) = v68;
    v88 = qword_100485CF8;
    v89 = *(_QWORD *)(v87 + qword_100485CF8);
    swift_retain();
    v90 = sub_100142BEC();
    KeyPath = swift_getKeyPath(&unk_1003B92C8);
    v92 = swift_getKeyPath(&unk_1003B92F0);
    *(double *)v112 = v90;
    static Published.subscript.setter(v112, v89, KeyPath, v92);
    a2 = *(_QWORD **)(v87 + v88);
    v12 = *(void (***)(uint64_t, size_t *, char *))(v87 + qword_100485C88);
    swift_retain();
    sub_100018BA0((uint64_t)v12);
    if (*(double *)(v87 + v86) < v93)
      v93 = *(double *)(v87 + v86);
    v3 = v93 + -0.5;
    if (qword_10047A790 == -1)
      goto LABEL_32;
    goto LABEL_41;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  swift_once(&qword_10047A790, sub_10000F000);
LABEL_32:
  v94 = *(double *)&qword_1004AF0C8;
  v95 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.isIPhone()(v95) & 1) != 0)
    v96 = &OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
  else
    v96 = &OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
  objc_msgSend(*(void (**)(uint64_t, size_t *, char *))((char *)v12 + *v96), "bounds", v100);
  v97 = v3 + v94 + CGRectGetHeight(v114);
  v98 = swift_getKeyPath(&unk_1003B9310);
  v99 = swift_getKeyPath(&unk_1003B9338);
  *(double *)v112 = v97;
  static Published.subscript.setter(v112, a2, v98, v99);
  sub_100184538();
  sub_1000258F8((uint64_t)v101, type metadata accessor for MeasurementCapture);
  return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v105, v111);
}

void sub_100145A90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BYTE v15[31];

  v3 = sub_10000EDC8((uint64_t *)&unk_100486260);
  __chkstk_darwin(v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, &v15[8], 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2, v6);
  if (Strong)
  {
    v8 = (char *)Strong;
    if ((*(_BYTE *)(Strong + qword_100485DA0) & 1) == 0)
    {
      v9 = *(_QWORD *)(Strong + qword_100485CE8);
      KeyPath = swift_getKeyPath(&unk_1003B9168);
      v11 = swift_getKeyPath(&unk_1003B9190);
      static Published.subscript.getter(&v15[7], v9, KeyPath, v11);
      swift_release();
      swift_release();
      if (v15[7] >= 2u)
      {
        v14 = 1;
      }
      else
      {
        if (*(_QWORD *)&v8[qword_100485CD8])
        {
          v13 = type metadata accessor for IndexPath(0, v12);
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
          sub_100146AA0(0, (uint64_t)v5);

          sub_100036600((uint64_t)v5, (uint64_t *)&unk_100486260);
          return;
        }
        v14 = 0;
      }
      sub_100145C04(v14, 1u, 0);
    }

  }
}

void sub_100145C04(int a1, unsigned __int8 a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t (*v20)(void ***, __n128);
  __n128 v21;
  void (*v22)(void ***, _QWORD);
  uint64_t v23;
  uint64_t v24;
  char **v25;
  uint64_t (*v26)(void ***, __n128);
  __n128 v27;
  void (*v28)(void ***, _QWORD);
  uint64_t v29;
  double v30;
  char *v31;
  double MaxY;
  double MinY;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  id v37;
  void *v38;
  double v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  id v48;
  void *v49;
  double v50;
  double v51;
  id v52;
  void *v53;
  id v54;
  double v55;
  double v56;
  void **v57;
  _QWORD *v58;
  unsigned __int8 v59;
  uint64_t v60;
  uint64_t (*v61)(void ***, __n128);
  __n128 v62;
  void (*v63)(void ***, _QWORD);
  uint64_t v64;
  void *v65;
  _QWORD *v66;
  void *v67;
  void *v68;
  char *v69;
  uint64_t v70;
  id v71;
  uint64_t (*v72)();
  __n128 v73;
  char *v74;
  void *v75;
  char *v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  void *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  void *v92;
  void *v93;
  double v94;
  double v95;
  void *v96;
  uint64_t KeyPath;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void *Strong;
  void *v108;
  uint64_t v109;
  char v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  id v115;
  uint64_t v116;
  void *v117;
  id v118;
  void *v119;
  uint64_t v120;
  void *v121;
  id v122;
  uint64_t (*v123)(void ***, __n128);
  __n128 v124;
  void (*v125)(void ***, _QWORD);
  uint64_t v126;
  void *v127;
  void *v128;
  char v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  void *v138;
  void *v139;
  double v140;
  void *v141;
  uint64_t v142;
  void *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(char *, uint64_t);
  void **aBlock;
  uint64_t v155;
  void *v156;
  void *v157;
  void *v158;
  _QWORD *v159;
  CGRect v160;
  CGRect v161;
  CGRect v162;

  v4 = v3;
  LODWORD(v153) = a1;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v145 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v151 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v150 = (char *)&v145 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = type metadata accessor for DispatchTime(0);
  v13 = *(_QWORD *)(v152 - 8);
  v14 = __chkstk_darwin(v152);
  v16 = (char *)&v145 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v149 = (char *)&v145 - v17;
  if (*(_BYTE *)(v3 + qword_100485DA0) == 1)
  {
    if ((a3 & 1) == 0)
      return;
  }
  else if ((a3 & 1) == 0)
  {
    *(_BYTE *)(v3 + qword_100485DA0) = 1;
    v18 = **(_QWORD **)(v3 + qword_100485C98);
    v147 = v11;
    v19 = a3;
    v20 = *(uint64_t (**)(void ***, __n128))(v18 + 400);
    v21 = swift_retain();
    v22 = (void (*)(void ***, _QWORD))v20(&aBlock, v21);
    a3 = v19;
    v4 = v3;
    v11 = v147;
    *(_BYTE *)(v23 + 9) = 1;
    v22(&aBlock, 0);
    swift_release();
  }
  v24 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.isIPhone()(v24) & 1) == 0)
  {
    v57 = _NSConcreteStackBlock;
    v58 = &unk_1003B0000;
    v148 = a3;
    if ((v153 & 1) != 0)
    {
      v59 = *(_BYTE *)(v4 + qword_100485DA8);
      objc_msgSend(*(id *)(v4 + qword_100485C80), "setHidden:", 0);
      v60 = *(_QWORD *)(v4 + qword_100485C88);
      v61 = *(uint64_t (**)(void ***, __n128))(**(_QWORD **)(v4 + qword_100485CC0) + 400);
      v62 = swift_retain();
      v63 = (void (*)(void ***, _QWORD))v61(&aBlock, v62);
      swift_unknownObjectWeakAssign(v64, v60);
      v63(&aBlock, 0);
      swift_release();
      v58 = (_QWORD *)objc_opt_self(UIView);
      v65 = (void *)v4;
      v4 = swift_allocObject(&unk_100447FC0, 25, 7);
      *(_QWORD *)(v4 + 16) = v65;
      *(_BYTE *)(v4 + 24) = v59;
      v66 = (_QWORD *)swift_allocObject(&unk_100447FE8, 32, 7);
      v66[2] = sub_10014F4B8;
      v66[3] = v4;
      v158 = sub_100082450;
      v159 = v66;
      aBlock = _NSConcreteStackBlock;
      v57 = (void **)&unk_1003B0000;
      v155 = 1107296256;
      v156 = sub_1000DDB80;
      v157 = &unk_100448000;
      v67 = _Block_copy(&aBlock);
      v68 = v65;
      v69 = v65;
      swift_retain();
      objc_msgSend(v58, "performWithoutAnimation:", v67, swift_release().n128_f64[0]);
      _Block_release(v67);
      LOBYTE(v67) = swift_isEscapingClosureAtFileLocation(v66, "", 102, 568, 48, 1);
      swift_release();
      if ((v67 & 1) == 0)
      {
        v70 = qword_10047A770;
        v71 = *(id *)&v69[qword_100485CF0];
        if (v70 != -1)
          swift_once(&qword_10047A770, sub_10000EF48);
        objc_msgSend(v71, "setConstant:", *(double *)&qword_1004AF0A8);

        sub_100147490(v59, 1);
        v72 = sub_10014F4B8;
        v58 = &unk_1003B0000;
        v57 = _NSConcreteStackBlock;
        goto LABEL_32;
      }
      __break(1u);
    }
    else
    {
      v96 = *(void **)(v4 + qword_100485CE8);
      KeyPath = swift_getKeyPath(&unk_1003B9168);
      v98 = swift_getKeyPath(&unk_1003B9190);
      static Published.subscript.getter(&aBlock, v96, KeyPath, v98);
      swift_release();
      swift_release();
      if (aBlock <= 1u)
      {
        v99 = swift_getKeyPath(&unk_1003B9168);
        v100 = swift_getKeyPath(&unk_1003B9190);
        static Published.subscript.getter(&aBlock, v96, v99, v100);
        swift_release();
        swift_release();
        *(_BYTE *)(v4 + qword_100485DA8) = (_BYTE)aBlock;
      }
      v59 = a2;
      v101 = swift_getKeyPath(&unk_1003B9168);
      v102 = swift_getKeyPath(&unk_1003B9190);
      LOBYTE(aBlock) = 2;
      v103 = v96;
      static Published.subscript.setter(&aBlock, v103, v101, v102);
      sub_100184D4C();
      v104 = &v103[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
      *(_QWORD *)v104 = 0;
      v104[8] = 1;
      v105 = &v103[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture];
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v105, v106);
      if (Strong)
      {
        v108 = Strong;
        objc_msgSend(Strong, "setEnabled:", 1);

      }
      swift_unknownObjectWeakAssign(v105, 0);
      v109 = qword_10047A750;
      v66 = *(id *)(v4 + qword_100485CF0);
      if (v109 == -1)
        goto LABEL_31;
    }
    swift_once(&qword_10047A750, sub_10000EF04);
LABEL_31:
    objc_msgSend(v66, "setConstant:", -*(double *)&qword_1004AF088);

    v110 = v59 & 1;
    v59 = 2;
    sub_100147490(2u, v110);
    v72 = 0;
    v68 = (void *)v4;
    v4 = 0;
LABEL_32:
    v111 = (void *)objc_opt_self(UIView);
    v112 = swift_allocObject(&unk_100447F20, 24, 7);
    *(_QWORD *)(v112 + 16) = v68;
    v158 = sub_10014F444;
    v159 = (_QWORD *)v112;
    aBlock = v57;
    v155 = v58[352];
    v113 = v155;
    v156 = sub_10003ECA0;
    v157 = &unk_100447F38;
    v114 = _Block_copy(&aBlock);
    v115 = v68;
    swift_release();
    v116 = swift_allocObject(&unk_100447F70, 33, 7);
    *(_BYTE *)(v116 + 16) = v148 & 1;
    *(_QWORD *)(v116 + 24) = v115;
    *(_BYTE *)(v116 + 32) = v59;
    v158 = sub_10014F484;
    v159 = (_QWORD *)v116;
    aBlock = v57;
    v155 = v113;
    v156 = sub_10002E168;
    v157 = &unk_100447F88;
    v117 = _Block_copy(&aBlock);
    v118 = v115;
    swift_release();
    objc_msgSend(v111, "animateWithDuration:delay:options:animations:completion:", 0, v114, v117, 0.3, 0.0);
    _Block_release(v117);
    _Block_release(v114);
    sub_1000217BC((uint64_t)v72, v4);
    return;
  }
  v25 = &selRef_renderer_didAddNode_forAnchor_;
  if ((v153 & 1) != 0)
  {
    v26 = *(uint64_t (**)(void ***, __n128))(**(_QWORD **)(v4 + qword_100485CA8) + 400);
    v27 = swift_retain();
    v28 = (void (*)(void ***, _QWORD))v26(&aBlock, v27);
    *(_BYTE *)(v29 + 4) = 1;
    v28(&aBlock, 0);
    *(_QWORD *)&v30 = swift_release().n128_u64[0];
    v31 = *(char **)(v4 + qword_100485C88);
    objc_msgSend(*(id *)&v31[OBJC_IVAR____TtC7Measure17CardContainerView_contentScrollView], "frame", v30);
    MaxY = CGRectGetMaxY(v160);
    objc_msgSend(*(id *)&v31[OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView], "frame");
    MinY = CGRectGetMinY(v161);
    v34 = v4;
    v35 = *(char **)(v4 + qword_100485C80);
    v36 = OBJC_IVAR____TtC7Measure11HistoryView_tableView;
    v37 = objc_msgSend(*(id *)&v35[OBJC_IVAR____TtC7Measure11HistoryView_tableView], "tableFooterView");
    if (!v37)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v38 = v37;
    v39 = MaxY - MinY;
    objc_msgSend(v37, "frame");
    v41 = v40;
    v43 = v42;
    v45 = v44;
    v47 = v46;

    v162.origin.x = v41;
    v162.origin.y = v43;
    v162.size.width = v45;
    v162.size.height = v47;
    if (v39 != CGRectGetHeight(v162))
    {
      v48 = objc_msgSend(*(id *)&v35[v36], "tableFooterView");
      if (!v48)
      {
LABEL_45:
        __break(1u);
        return;
      }
      v49 = v48;
      v50 = CGSize.init(_:_:)(0.0, v39);
      objc_msgSend(v49, "setFrame:", 0.0, 0.0, v50, v51);

      objc_msgSend(*(id *)&v35[v36], "reloadData");
    }
    if (qword_10047A930 != -1)
      swift_once(&qword_10047A930, sub_100083368);
    if (!*((_QWORD *)&xmmword_1004AF228 + 1))
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    v52 = objc_msgSend(*((id *)&xmmword_1004AF228 + 1), "tabBarController");
    if (v52)
    {
      v53 = v52;
      v54 = objc_msgSend(v52, "tabBar");
      objc_msgSend(v54, "alpha");
      v56 = v55;

      if (v56 == 0.0)
      {

      }
      else
      {
        v119 = (void *)objc_opt_self(UIView);
        v120 = swift_allocObject(&unk_100448100, 32, 7);
        *(_QWORD *)(v120 + 16) = v53;
        *(_QWORD *)(v120 + 24) = 0;
        v158 = sub_1000A2E68;
        v159 = (_QWORD *)v120;
        aBlock = _NSConcreteStackBlock;
        v155 = 1107296256;
        v156 = sub_10003ECA0;
        v157 = &unk_100448118;
        v121 = _Block_copy(&aBlock);
        v122 = v53;
        swift_release();
        objc_msgSend(v119, "animateWithDuration:delay:options:animations:completion:", 0, v121, 0, 0.15, 0.0);

        _Block_release(v121);
      }
      v4 = v34;
    }
    objc_msgSend(v35, "setHidden:", 0);
    v123 = *(uint64_t (**)(void ***, __n128))(**(_QWORD **)(v4 + qword_100485CC0) + 400);
    v124 = swift_retain();
    v125 = (void (*)(void ***, _QWORD))v123(&aBlock, v124);
    swift_unknownObjectWeakAssign(v126, v31);
    v125(&aBlock, 0);
    swift_release();
    v127 = *(void **)(v4 + qword_100485CE8);
    v128 = (void *)v4;
    v129 = *(_BYTE *)(v4 + qword_100485DA8);
    v130 = swift_allocObject(&unk_1004480D8, 32, 7);
    *(_BYTE *)(v130 + 16) = a3 & 1;
    *(_QWORD *)(v130 + 24) = v128;
    v131 = v128;
    sub_100185D58(v129, (uint64_t)sub_10014F534, v130, 0.4);
    v132 = swift_getKeyPath(&unk_1003B9168);
    v133 = swift_getKeyPath(&unk_1003B9190);
    LOBYTE(aBlock) = v129;
    v134 = v127;
    static Published.subscript.setter(&aBlock, v134, v132, v133);
    sub_100184D4C();
    v135 = &v134[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
    *(_QWORD *)v135 = 0;
    v135[8] = 1;
    v136 = &v134[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture];
    v138 = (void *)swift_unknownObjectWeakLoadStrong(v136, v137);
    objc_msgSend(v138, "setEnabled:", 1);

    swift_unknownObjectWeakAssign(v136, 0);
    *(_QWORD *)&v94 = swift_release().n128_u64[0];
    v95 = 1.0;
  }
  else
  {
    sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
    v146 = static OS_dispatch_queue.main.getter(v73);
    static DispatchTime.now()();
    v74 = v149;
    + infix(_:_:)(v16, 0.1);
    v153 = *(void (**)(char *, uint64_t))(v13 + 8);
    v153(v16, v152);
    v158 = sub_100149EAC;
    v159 = 0;
    aBlock = _NSConcreteStackBlock;
    v155 = 1107296256;
    v156 = sub_10003ECA0;
    v157 = &unk_100448028;
    v75 = _Block_copy(&aBlock);
    v148 = a3;
    v76 = v150;
    static DispatchQoS.unspecified.getter(v77);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v78 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v147 = v11;
    v79 = v78;
    v80 = sub_10000EDC8((uint64_t *)&unk_10047E430);
    v81 = sub_100043310((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v80, v81, v7, v79);
    v82 = (void *)v146;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v74, v76, v10, v75);
    _Block_release(v75);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v151 + 8))(v76, v147);
    v153(v74, v152);
    v83 = *(void **)(v4 + qword_100485CE8);
    v84 = swift_allocObject(&unk_100448060, 25, 7);
    *(_QWORD *)(v84 + 16) = v4;
    *(_BYTE *)(v84 + 24) = v148 & 1;
    v85 = (char *)(id)v4;
    sub_100185D58(2, (uint64_t)sub_10014F4D4, v84, 0.4);
    v86 = swift_getKeyPath(&unk_1003B9168);
    v87 = swift_getKeyPath(&unk_1003B9190);
    LOBYTE(aBlock) = 2;
    v88 = v83;
    static Published.subscript.setter(&aBlock, v88, v86, v87);
    sub_100184D4C();
    v89 = &v88[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
    *(_QWORD *)v89 = 0;
    v89[8] = 1;
    v90 = &v88[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture];
    v92 = (void *)swift_unknownObjectWeakLoadStrong(v90, v91);
    if (v92)
    {
      v93 = v92;
      objc_msgSend(v92, "setEnabled:", 1);

    }
    swift_unknownObjectWeakAssign(v90, 0);
    *(_QWORD *)&v94 = swift_release().n128_u64[0];
    v31 = *(char **)&v85[qword_100485C88];
    v95 = 0.0;
    v25 = &selRef_renderer_didAddNode_forAnchor_;
  }
  v139 = *(void **)&v31[OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView];
  if (!v139)
  {
    __break(1u);
    goto LABEL_43;
  }
  objc_msgSend(v139, v25[294], v94);
  if (v95 != v140)
  {
    v141 = (void *)objc_opt_self(UIView);
    v142 = swift_allocObject(&unk_100448088, 32, 7);
    *(_QWORD *)(v142 + 16) = v31;
    *(double *)(v142 + 24) = v95;
    v158 = sub_10014F504;
    v159 = (_QWORD *)v142;
    aBlock = _NSConcreteStackBlock;
    v155 = 1107296256;
    v156 = sub_10003ECA0;
    v157 = &unk_1004480A0;
    v143 = _Block_copy(&aBlock);
    v144 = v31;
    swift_release();
    objc_msgSend(v141, "animateWithDuration:animations:", v143, 0.2);
    _Block_release(v143);
  }
}

void sub_100146AA0(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(CGAffineTransform *, __n128);
  __n128 v11;
  void (*v12)(CGAffineTransform *, _QWORD);
  uint64_t v13;
  void *v14;
  char *v15;
  char v16;
  char v17;
  uint64_t v18;
  CGFloat v19;
  void *v20;
  char *v21;
  char isEscapingClosureAtFileLocation;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  uint64_t KeyPath;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void *Strong;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void *v49;
  void (*v50)();
  char *v51;
  void *v52;
  uint64_t v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void *v70;
  char *v71;
  char *v72;
  CGFloat v73;
  void *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  CGFloat v80;
  void *v81;
  char *v82;
  const void *v83;
  void *v84;
  CGFloat v85;
  void *v86;
  char *v87;
  char *v88;
  CGFloat v89;
  void *v90;
  char *v91;
  id v92;
  char *v93;
  CGAffineTransform v94;
  CGAffineTransform aBlock;

  v3 = v2;
  v6 = sub_10000EDC8((uint64_t *)&unk_100486260);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v2[qword_100485DA0] & 1) == 0)
  {
    v2[qword_100485DA0] = 1;
    v10 = *(uint64_t (**)(CGAffineTransform *, __n128))(**(_QWORD **)&v2[qword_100485C98] + 400);
    v11 = swift_retain();
    v12 = (void (*)(CGAffineTransform *, _QWORD))v10(&aBlock, v11);
    *(_BYTE *)(v13 + 9) = 1;
    v12(&aBlock, 0);
    swift_release();
    v14 = *(void **)&v2[qword_100485CD8];
    if (v14)
    {
      sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
      v15 = v14;
      v16 = static UIDevice.isIPhone()(v15);
      v17 = v16;
      if ((a1 & 1) != 0)
      {
        if ((v16 & 1) != 0)
        {
          v92 = (id)objc_opt_self(UIView);
          v18 = swift_allocObject(&unk_100447CF0, 24, 7);
          *(_QWORD *)(v18 + 16) = v15;
          v19 = COERCE_DOUBLE(swift_allocObject(&unk_100447D18, 32, 7));
          *(_QWORD *)(*(_QWORD *)&v19 + 16) = sub_10014F23C;
          *(_QWORD *)(*(_QWORD *)&v19 + 24) = v18;
          *(_QWORD *)&aBlock.tx = sub_100030C24;
          aBlock.ty = v19;
          *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
          *(_QWORD *)&aBlock.b = 1107296256;
          *(_QWORD *)&aBlock.c = sub_1000DDB80;
          *(_QWORD *)&aBlock.d = &unk_100447D30;
          v20 = _Block_copy(&aBlock);
          v93 = v15;
          v21 = v15;
          swift_retain();
          objc_msgSend(v92, "performWithoutAnimation:", v20, swift_release().n128_f64[0]);
          _Block_release(v20);
          isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(*(_QWORD *)&v19, "", 102, 632, 48, 1);
          swift_release();
          if ((isEscapingClosureAtFileLocation & 1) != 0)
          {
            __break(1u);
          }
          else
          {
            v23 = &v21[qword_100488880];
            *((_QWORD *)v23 + 1) = &off_100447AA0;
            swift_unknownObjectWeakAssign(v23, v3);
            v24 = *(void **)&v21[qword_100488870];
            if (v24)
            {
              sub_1000644F8(a2, (uint64_t)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_100486260);
              v25 = *(unsigned __int8 *)(v7 + 80);
              v26 = (v25 + 16) & ~v25;
              v27 = (v8 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
              v28 = swift_allocObject(&unk_100447D68, v27 + 8, v25 | 7);
              sub_100012C58((uint64_t)v9, v28 + v26, (uint64_t *)&unk_100486260);
              *(_QWORD *)(v28 + v27) = v3;
              v29 = v3;
              v30 = v24;
              sub_100185D58(1, (uint64_t)sub_10014F1F8, v28, 0.4);
              KeyPath = swift_getKeyPath(&unk_1003B9168);
              v32 = swift_getKeyPath(&unk_1003B9190);
              LOBYTE(aBlock.a) = 1;
              v33 = (char *)v30;
              static Published.subscript.setter(&aBlock, v33, KeyPath, v32);
              sub_100184D4C();
              v34 = &v33[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
              *(_QWORD *)v34 = 0;
              v34[8] = 1;
              v35 = &v33[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture];
              Strong = (void *)swift_unknownObjectWeakLoadStrong(&v33[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture], v36);
              objc_msgSend(Strong, "setEnabled:", 1);

              swift_unknownObjectWeakAssign(v35, 0);
              swift_release();

              v38 = *(void **)&v29[qword_100485CE8];
              v39 = swift_getKeyPath(&unk_1003B9168);
              v40 = swift_getKeyPath(&unk_1003B9190);
              static Published.subscript.getter(&aBlock, v38, v39, v40);
              swift_release();
              swift_release();
              v29[qword_100485DA8] = LOBYTE(aBlock.a);
              v41 = swift_allocObject(&unk_100447D90, 24, 7);
              *(_QWORD *)(v41 + 16) = v29;
              v42 = v29;
              sub_100185D58(2, (uint64_t)sub_10014F30C, v41, 0.4);
              v43 = swift_getKeyPath(&unk_1003B9168);
              v44 = swift_getKeyPath(&unk_1003B9190);
              LOBYTE(aBlock.a) = 2;
              v45 = v38;
              static Published.subscript.setter(&aBlock, v45, v43, v44);
              sub_100184D4C();
              v46 = &v45[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
              *(_QWORD *)v46 = 0;
              v46[8] = 1;
              v47 = &v45[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture];
              v49 = (void *)swift_unknownObjectWeakLoadStrong(&v45[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture], v48);
              objc_msgSend(v49, "setEnabled:", 1);

              swift_unknownObjectWeakAssign(v47, 0);
              swift_release();
              v50 = sub_10014F23C;
LABEL_11:
              v15 = v93;
LABEL_15:
              UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, v15);

              sub_1000217BC((uint64_t)v50, v18);
              return;
            }
          }
          __break(1u);
          goto LABEL_19;
        }
        v71 = v15;
        objc_msgSend(v71, "transform");
        CGAffineTransformTranslate(&v94, &aBlock, -*(double *)&v3[qword_100485D18], 0.0);
        aBlock = v94;
        objc_msgSend(v71, "setTransform:", &aBlock);

        v72 = &v71[qword_100488880];
        *((_QWORD *)v72 + 1) = &off_100447AA0;
        swift_unknownObjectWeakAssign(v72, v3);
        v93 = (char *)objc_opt_self(UIView);
        v73 = COERCE_DOUBLE(swift_allocObject(&unk_100447C50, 32, 7));
        *(_QWORD *)(*(_QWORD *)&v73 + 16) = v71;
        *(_QWORD *)(*(_QWORD *)&v73 + 24) = v3;
        *(_QWORD *)&aBlock.tx = sub_10014F1EC;
        aBlock.ty = v73;
        *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
        *(_QWORD *)&aBlock.b = 1107296256;
        *(_QWORD *)&aBlock.c = sub_10003ECA0;
        *(_QWORD *)&aBlock.d = &unk_100447C68;
        v74 = _Block_copy(&aBlock);
        v75 = v71;
        v76 = v3;
        swift_release();
        sub_1000644F8(a2, (uint64_t)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_100486260);
        v77 = *(unsigned __int8 *)(v7 + 80);
        v78 = (v77 + 16) & ~v77;
        v79 = (v8 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
        v80 = COERCE_DOUBLE(swift_allocObject(&unk_100447CA0, v79 + 8, v77 | 7));
        sub_100012C58((uint64_t)v9, *(_QWORD *)&v80 + v78, (uint64_t *)&unk_100486260);
        *(_QWORD *)(*(_QWORD *)&v80 + v79) = v76;
        *(_QWORD *)&aBlock.tx = sub_10014F1F8;
        aBlock.ty = v80;
        *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
        *(_QWORD *)&aBlock.b = 1107296256;
        *(_QWORD *)&aBlock.c = sub_10002E168;
        *(_QWORD *)&aBlock.d = &unk_100447CB8;
        v81 = _Block_copy(&aBlock);
        v82 = v76;
        swift_release();
        objc_msgSend(v93, "animateWithDuration:delay:options:animations:completion:", 0, v74, v81, 0.2, 0.0);
        _Block_release(v81);
        v83 = v74;
      }
      else
      {
        v51 = &v15[qword_100488880];
        *((_QWORD *)v51 + 1) = 0;
        swift_unknownObjectWeakAssign(v51, 0);
        if ((v17 & 1) != 0)
        {
          v93 = v15;
          v52 = *(void **)&v15[qword_100488870];
          if (v52)
          {
            v53 = swift_allocObject(&unk_100447C28, 24, 7);
            *(_QWORD *)(v53 + 16) = v3;
            v54 = v3;
            v55 = v52;
            sub_100185D58(2, (uint64_t)sub_10014F0BC, v53, 0.4);
            v56 = swift_getKeyPath(&unk_1003B9168);
            v57 = swift_getKeyPath(&unk_1003B9190);
            LOBYTE(aBlock.a) = 2;
            v58 = (char *)v55;
            static Published.subscript.setter(&aBlock, v58, v56, v57);
            sub_100184D4C();
            v59 = &v58[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
            *(_QWORD *)v59 = 0;
            v59[8] = 1;
            v60 = &v58[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture];
            v62 = (void *)swift_unknownObjectWeakLoadStrong(&v58[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture], v61);
            objc_msgSend(v62, "setEnabled:", 1);

            swift_unknownObjectWeakAssign(v60, 0);
            swift_release();
            v63 = *(void **)&v54[qword_100485CE8];
            LOBYTE(v60) = v54[qword_100485DA8];
            sub_100185D58((char)v60, 0, 0, 0.4);
            v64 = swift_getKeyPath(&unk_1003B9168);
            v65 = swift_getKeyPath(&unk_1003B9190);
            LOBYTE(aBlock.a) = (_BYTE)v60;
            v66 = v63;
            static Published.subscript.setter(&aBlock, v66, v64, v65);
            sub_100184D4C();
            v67 = &v66[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
            *(_QWORD *)v67 = 0;
            v67[8] = 1;
            v68 = &v66[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture];
            v70 = (void *)swift_unknownObjectWeakLoadStrong(&v66[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture], v69);
            objc_msgSend(v70, "setEnabled:", 1);

            swift_unknownObjectWeakAssign(v68, 0);
            v50 = 0;
            v18 = 0;
            goto LABEL_11;
          }
LABEL_19:
          __break(1u);
          return;
        }
        v84 = (void *)objc_opt_self(UIView);
        v85 = COERCE_DOUBLE(swift_allocObject(&unk_100447B88, 32, 7));
        *(_QWORD *)(*(_QWORD *)&v85 + 16) = v15;
        *(_QWORD *)(*(_QWORD *)&v85 + 24) = v3;
        *(_QWORD *)&aBlock.tx = sub_10014F0AC;
        aBlock.ty = v85;
        *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
        *(_QWORD *)&aBlock.b = 1107296256;
        *(_QWORD *)&aBlock.c = sub_10003ECA0;
        *(_QWORD *)&aBlock.d = &unk_100447BA0;
        v86 = _Block_copy(&aBlock);
        v87 = v15;
        v88 = v3;
        swift_release();
        v89 = COERCE_DOUBLE(swift_allocObject(&unk_100447BD8, 24, 7));
        *(_QWORD *)(*(_QWORD *)&v89 + 16) = v88;
        *(_QWORD *)&aBlock.tx = sub_10014F0B4;
        aBlock.ty = v89;
        *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
        *(_QWORD *)&aBlock.b = 1107296256;
        *(_QWORD *)&aBlock.c = sub_10002E168;
        *(_QWORD *)&aBlock.d = &unk_100447BF0;
        v90 = _Block_copy(&aBlock);
        v91 = v88;
        swift_release();
        objc_msgSend(v84, "animateWithDuration:delay:options:animations:completion:", 0, v86, v90, 0.2, 0.0);
        _Block_release(v90);
        v83 = v86;
      }
      _Block_release(v83);
      v50 = 0;
      v18 = 0;
      goto LABEL_15;
    }
  }
}

void sub_100147490(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t (*v8)(void ***, __n128);
  __n128 v9;
  void (*v10)(void ***, _QWORD);
  uint64_t v11;
  void *Strong;
  void *v13;
  uint64_t v14;
  uint64_t (*v15)(void ***, __n128);
  __n128 v16;
  void (*v17)(void ***, _QWORD);
  uint64_t v18;
  double v19;
  char *v20;
  void *v21;
  double v22;
  void *v23;
  uint64_t v24;
  void *v25;
  char *v26;
  id v27;
  void *v28;
  id v29;
  double v30;
  double v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  void **v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  void (*v40)();
  uint64_t v41;

  v3 = v2;
  if (a1 <= 1u)
  {
    *(_BYTE *)(v2 + qword_100485DA8) = a1;
    return;
  }
  if ((*(_BYTE *)(v2 + qword_100485DA0) & 1) == 0)
  {
    v5 = qword_100485CD8;
    v6 = *(void **)(v2 + qword_100485CD8);
    if (v6)
    {
      v7 = v6;
      sub_10018D024(v7);
      objc_msgSend(v7, "removeFromSuperview");

      v6 = *(void **)(v3 + v5);
    }
    *(_QWORD *)(v3 + v5) = 0;

  }
  if ((a2 & 1) != 0)
  {
    v8 = *(uint64_t (**)(void ***, __n128))(**(_QWORD **)(v3 + qword_100485CC0) + 400);
    v9 = swift_retain();
    v10 = (void (*)(void ***, _QWORD))v8(&v36, v9);
    swift_unknownObjectWeakAssign(v11, 0);
    v10(&v36, 0);
    swift_release();
  }
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v3 + qword_100485CE8)+ OBJC_IVAR____TtC7Measure23CardContainerController_panGestureRecognizer);
  if (!Strong)
  {
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  v13 = Strong;
  objc_msgSend(Strong, "setEnabled:", 1);

  v14 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.isIPhone()(v14) & 1) == 0)
    return;
  v15 = *(uint64_t (**)(void ***, __n128))(**(_QWORD **)(v3 + qword_100485CA8) + 400);
  v16 = swift_retain();
  v17 = (void (*)(void ***, _QWORD))v15(&v36, v16);
  *(_BYTE *)(v18 + 4) = 0;
  v17(&v36, 0);
  *(_QWORD *)&v19 = swift_release().n128_u64[0];
  v20 = *(char **)(v3 + qword_100485C88);
  v21 = *(void **)&v20[OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView];
  if (!v21)
    goto LABEL_23;
  objc_msgSend(v21, "alpha", v19);
  if (v22 != 0.0)
  {
    v23 = (void *)objc_opt_self(UIView);
    v24 = swift_allocObject(&unk_1004481A0, 32, 7);
    *(_QWORD *)(v24 + 16) = v20;
    *(_QWORD *)(v24 + 24) = 0;
    v40 = (void (*)())sub_1001508AC;
    v41 = v24;
    v36 = _NSConcreteStackBlock;
    v37 = 1107296256;
    v38 = sub_10003ECA0;
    v39 = &unk_1004481B8;
    v25 = _Block_copy(&v36);
    v26 = v20;
    swift_release();
    objc_msgSend(v23, "animateWithDuration:animations:", v25, 0.2);
    _Block_release(v25);
  }
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  if (!*((_QWORD *)&xmmword_1004AF228 + 1))
    goto LABEL_24;
  v27 = objc_msgSend(*((id *)&xmmword_1004AF228 + 1), "tabBarController");
  if (v27)
  {
    v28 = v27;
    v29 = objc_msgSend(v27, "tabBar");
    objc_msgSend(v29, "alpha");
    v31 = v30;

    if (v31 == 1.0)
    {

    }
    else
    {
      v32 = (void *)objc_opt_self(UIView);
      v33 = swift_allocObject(&unk_1004481F0, 32, 7);
      *(_QWORD *)(v33 + 16) = v28;
      *(_QWORD *)(v33 + 24) = 0x3FF0000000000000;
      v40 = sub_1000A3430;
      v41 = v33;
      v36 = _NSConcreteStackBlock;
      v37 = 1107296256;
      v38 = sub_10003ECA0;
      v39 = &unk_100448208;
      v34 = _Block_copy(&v36);
      v35 = v28;
      swift_release();
      objc_msgSend(v32, "animateWithDuration:delay:options:animations:completion:", 0, v34, 0, 0.15, 0.0);

      _Block_release(v34);
    }
  }
}

void sub_10014784C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  uint64_t v12;
  id v13;
  Class isa;
  _BYTE v16[24];

  v3 = a1;
  v4 = type metadata accessor for IndexPath(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (v3 >= 2)
  {
    v8 = *(char **)(v2 + qword_100485C80);
    v9 = OBJC_IVAR____TtC7Measure11HistoryView_tableView;
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC7Measure11HistoryView_tableView], "reloadData");
    *(_BYTE *)(v2 + qword_100485D00) = 0;
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v2 + qword_100485CE8)+ OBJC_IVAR____TtC7Measure23CardContainerController_panGestureRecognizer);
    if (Strong)
    {
      v11 = Strong;
      objc_msgSend(Strong, "setEnabled:", 1);

      objc_msgSend(v8, "setHidden:", 1);
      v12 = v2 + qword_100485CC8;
      swift_beginAccess(v12, v16, 0, 0);
      if (*(_QWORD *)(*(_QWORD *)v12 + 16) >= 2uLL)
      {
        v13 = *(id *)&v8[v9];
        IndexPath.init(row:section:)(0, 0);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        objc_msgSend(v13, "scrollToRowAtIndexPath:atScrollPosition:animated:", isa, 1, 1);

      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1001479DC()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  sub_1001479F8();
}

void sub_1001479F8()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  double *v48;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  __chkstk_darwin(v3);
  v47 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v44 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = qword_100485C78;
  *(_QWORD *)&v1[v10] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v11 = qword_100485C90;
  v12 = sub_10000EDC8(&qword_100486270);
  KeyPath = swift_getKeyPath(&unk_1003B91B0);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v14 = qword_1004AF890;
  v15 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 272);
  v16 = swift_retain();
  *(_QWORD *)&v1[v11] = v15(KeyPath, v14, v16);
  v17 = qword_100485C98;
  sub_10000EDC8(&qword_100486278);
  v18 = swift_getKeyPath(&unk_1003B91D8);
  *(_QWORD *)&v1[v17] = MutableStateBinding.__allocating_init(_:_:)(v18, ObjectType);
  v19 = qword_100485CA0;
  sub_10000EDC8(&qword_100486280);
  v20 = swift_getKeyPath(&unk_1003B9200);
  *(_QWORD *)&v1[v19] = MutableStateBinding.__allocating_init(_:_:)(v20, ObjectType);
  v21 = qword_100485CA8;
  sub_10000EDC8((uint64_t *)&unk_100486288);
  v22 = swift_getKeyPath(&unk_1003B9228);
  *(_QWORD *)&v1[v21] = MutableStateBinding.__allocating_init(_:_:)(v22, ObjectType);
  v23 = qword_100485CB0;
  v24 = sub_10000EDC8((uint64_t *)&unk_1004810D0);
  v25 = swift_getKeyPath(&unk_1003B9250);
  v26 = qword_1004AF890;
  v27 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v24 + 272);
  v28 = swift_retain();
  *(_QWORD *)&v1[v23] = v27(v25, v26, v28);
  v29 = qword_100485CB8;
  sub_10000EDC8(&qword_100486298);
  v30 = swift_getKeyPath(&unk_1003B9278);
  *(_QWORD *)&v1[v29] = MutableStateValue.__allocating_init(_:_:)(v30, ObjectType);
  v31 = qword_100485CC0;
  sub_10000EDC8(&qword_1004862A0);
  v32 = swift_getKeyPath(&unk_1003B92A0);
  v33 = type metadata accessor for SpatialGenericPlatter(0);
  *(_QWORD *)&v1[v31] = MutableStateValue.__allocating_init(_:_:)(v32, v33);
  *(_QWORD *)&v1[qword_100485CC8] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[qword_100485CD0] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v1[qword_100485CD8] = 0;
  v1[qword_100485D00] = 0;
  *(_QWORD *)&v1[qword_100485D08] = 0;
  v34 = qword_100485D18;
  if (qword_10047A750 != -1)
    swift_once(&qword_10047A750, sub_10000EF04);
  v35 = *(double *)&qword_1004AF088;
  if (qword_10047A770 != -1)
    swift_once(&qword_10047A770, sub_10000EF48);
  *(double *)&v1[v34] = v35 + *(double *)&qword_1004AF0A8;
  *(_QWORD *)&v1[qword_100485D20] = 0;
  *(_QWORD *)&v1[qword_100485D28] = 0;
  *(_QWORD *)&v1[qword_100485D30] = 0;
  swift_unknownObjectWeakInit(&v1[qword_100485D38], 0);
  v1[qword_100485D40] = 0;
  *(_QWORD *)&v1[qword_100485D48] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v1[qword_100485D50] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v1[qword_100485D58] = 0;
  *(_QWORD *)&v1[qword_100485D60] = 0;
  *(_QWORD *)&v1[qword_100485D68] = 0;
  v1[qword_100485D78] = 0;
  v1[qword_100485D80] = 1;
  v1[qword_100485D88] = 1;
  v1[qword_100485D90] = 1;
  v1[qword_100485D98] = 1;
  v1[qword_100485DA0] = 0;
  v1[qword_100485DA8] = 1;
  v1[qword_100485DB0] = 0;
  v36 = &v1[qword_100485DB8];
  *(_QWORD *)v36 = 0;
  v36[8] = 1;
  swift_unknownObjectWeakInit(&v1[qword_100485DC0], 0);
  v37 = qword_100485DC8;
  sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  static DispatchQoS.userInteractive.getter();
  v48 = _swiftEmptyArrayStorage;
  v38 = sub_10000C4B0((unint64_t *)&qword_10047E690, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v39 = sub_10000EDC8(&qword_100486EF0);
  v40 = sub_100043310((unint64_t *)&qword_10047E6A0, &qword_100486EF0, (uint64_t)&protocol conformance descriptor for [A]);
  v41 = v44;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v48, v39, v40, v5, v38);
  v42 = v47;
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v47, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v46);
  *(_QWORD *)&v1[v37] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000018, 0x80000001003D9500, v9, v41, v42, 0);
  *(_QWORD *)&v1[qword_100485DD0] = 0;
  *(_QWORD *)&v1[qword_100485DD8] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002DLL, 0x80000001003D7D70, "Measure/HistoryViewCoordinator.swift", 36, 2, 358, 0);
  __break(1u);
}

double sub_100147FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(__n128);
  __n128 v7;
  uint64_t v8;
  __n128 v9;
  double result;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;

  v1 = sub_10000EDC8((uint64_t *)&unk_100488B90);
  __chkstk_darwin(v1);
  v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for MeasurementHistoryItem(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_100148100((uint64_t)v3, v5);
  sub_100036600((uint64_t)v3, (uint64_t *)&unk_100488B90);
  v6 = *(uint64_t (**)(__n128))(**(_QWORD **)(v0 + qword_100485CA8) + 200);
  v7 = swift_retain();
  v8 = v6(v7);
  v9 = swift_release();
  v14 = v0;
  (*(void (**)(void (*)(), _BYTE *, __n128))(*(_QWORD *)v8 + 296))(sub_10015077C, v13, v9);
  swift_release();
  v12 = v0;
  swift_retain();
  StateValue.ifUpdated(_:)(sub_1001507A0, v11);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_100148100(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  void (*v38)(double *__return_ptr, __n128);
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *Strong;
  void *v58;
  char *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  _BYTE *v73;
  uint64_t v74;
  void *v75;
  const void *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  Class isa;
  double v82;
  CGFloat v83;
  double v84;
  CGFloat v85;
  double v86;
  CGFloat v87;
  double v88;
  CGFloat v89;
  double Height;
  double *v91;
  id v92;
  char *v93;
  Class v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  uint64_t KeyPath;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  double v107;
  double v108;
  uint64_t v109;
  double v110;
  double v111;
  double v112;
  double v113;
  uint64_t v114;
  double v115;
  double v116;
  double v117;
  uint64_t v118;
  uint64_t *v119;
  double v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  void *v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t (*v130)(double *, __n128);
  __n128 v131;
  void (*v132)(double *, _QWORD);
  _QWORD *v133;
  __n128 v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  _QWORD v147[106];
  double v148;
  uint64_t v149;
  void *v150;
  void *v151;
  void *v152;
  uint64_t v153;
  char v154[24];
  char v155[32];
  CGRect v156;
  CGRect v157;

  v4 = type metadata accessor for IndexPath(0, a2);
  v142 = *(_QWORD *)(v4 - 8);
  v143 = v4;
  v5 = __chkstk_darwin(v4);
  v139 = v6;
  v140 = (char *)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v141 = (char *)&v135 - v7;
  v8 = sub_10000EDC8(&qword_10047E4F8);
  __chkstk_darwin(v8);
  v138 = (uint64_t)&v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SpatialPlattersHistoryItem(0);
  __chkstk_darwin(v10);
  v137 = (uint64_t)&v135 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MeasurementHistoryItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v136 = (uint64_t)&v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v145 = (uint64_t *)((char *)&v135 - v16);
  v17 = sub_10000EDC8((uint64_t *)&unk_100488B90);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v135 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v135 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v135 - v24;
  v146 = type metadata accessor for MeasurementsHistory(0);
  v26 = __chkstk_darwin(v146);
  v28 = (uint64_t *)((char *)&v135 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v26);
  v30 = (uint64_t *)((char *)&v135 - v29);
  v144 = v13;
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v31(a1, 1, v12) != 1)
    goto LABEL_4;
  v135 = a1;
  swift_retain();
  StateValue.wrappedValue.getter(v30, v32);
  swift_release();
  sub_1000644F8((uint64_t)v30 + *(int *)(v146 + 20), (uint64_t)v25, (uint64_t *)&unk_100488B90);
  sub_1000258F8((uint64_t)v30, type metadata accessor for MeasurementsHistory);
  v33 = v31((uint64_t)v25, 1, v12);
  a1 = v135;
  sub_100036600((uint64_t)v25, (uint64_t *)&unk_100488B90);
  if (v33 != 1 && (v2[qword_100485D78] & 1) == 0)
  {
LABEL_4:
    sub_1000644F8(a1, (uint64_t)v20, (uint64_t *)&unk_100488B90);
    v34 = v12;
    if (v31((uint64_t)v20, 1, v12) == 1)
    {
      v35 = v2;
      swift_retain();
      StateValue.wrappedValue.getter(v28, v36);
      swift_release();
      sub_1000644F8((uint64_t)v28 + *(int *)(v146 + 20), (uint64_t)v23, (uint64_t *)&unk_100488B90);
      sub_1000258F8((uint64_t)v28, type metadata accessor for MeasurementsHistory);
      sub_100036600((uint64_t)v20, (uint64_t *)&unk_100488B90);
    }
    else
    {
      v35 = v2;
      sub_10006CAB4((uint64_t)v20, (uint64_t)v23, type metadata accessor for MeasurementHistoryItem);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v23, 0, 1, v34);
    }
    v37 = v145;
    if (v31((uint64_t)v23, 1, v34) == 1)
    {
      sub_100036600((uint64_t)v23, (uint64_t *)&unk_100488B90);
      return;
    }
    sub_10006CAB4((uint64_t)v23, (uint64_t)v37, type metadata accessor for MeasurementHistoryItem);
    v38 = *(void (**)(double *__return_ptr, __n128))(**(_QWORD **)&v35[qword_100485CB8] + 144);
    v39 = swift_retain();
    v38(&v148, v39);
    swift_release();
    v40 = *(_QWORD *)&v148;
    v41 = *v37;
    v42 = v37[1];
    swift_bridgeObjectRetain(v42);
    LOBYTE(v38) = sub_10018D130(v41, v42, v40);
    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease(v40);
    if ((v38 & 1) != 0)
      goto LABEL_11;
    v43 = (uint64_t *)&v35[qword_100485CD0];
    swift_beginAccess(&v35[qword_100485CD0], v155, 0, 0);
    v44 = *v43;
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v44);
    v45 = sub_10018D130(v41, v42, v44);
    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease(v44);
    if ((v45 & 1) != 0)
    {
LABEL_11:
      sub_1000258F8((uint64_t)v37, type metadata accessor for MeasurementHistoryItem);
      return;
    }
    v135 = v34;
    v46 = v136;
    sub_100036344((uint64_t)v37, v136, type metadata accessor for MeasurementHistoryItem);
    v47 = v137;
    sub_10008F024(v46, v137);
    v48 = &v35[qword_100485CC8];
    swift_beginAccess(&v35[qword_100485CC8], v154, 1, 0);
    v49 = v47;
    v50 = v138;
    sub_10006CAB4(v49, v138, type metadata accessor for SpatialPlattersHistoryItem);
    sub_100060E30(0, 0, v50);
    v51 = *(_QWORD *)&v35[qword_100485CE8];
    *(_BYTE *)(v51 + OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded) = sub_100142A10() & 1;
    swift_beginAccess(v43, &v148, 33, 0);
    swift_bridgeObjectRetain(v42);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v43);
    v147[0] = *v43;
    *v43 = 0x8000000000000000;
    sub_10014FAAC(v41, v42, isUniquelyReferenced_nonNull_native);
    v54 = v53;
    v55 = *v43;
    *v43 = v147[0];
    swift_bridgeObjectRelease(v55);
    swift_endAccess(&v148);
    swift_bridgeObjectRelease(v54);
    v56 = v35;
    if (v35[qword_100485D00] == 1)
    {
      v35[qword_100485D00] = 0;
      Strong = (void *)swift_unknownObjectUnownedLoadStrong(v51 + OBJC_IVAR____TtC7Measure23CardContainerController_panGestureRecognizer);
      if (!Strong)
      {
        __break(1u);
        return;
      }
      v58 = Strong;
      objc_msgSend(Strong, "setEnabled:", 1);

    }
    v146 = v51;
    v59 = v141;
    IndexPath.init(row:section:)(0, 0);
    v138 = *(_QWORD *)&v35[qword_100485C80];
    v60 = OBJC_IVAR____TtC7Measure11HistoryView_tableView;
    v61 = *(void **)(v138 + OBJC_IVAR____TtC7Measure11HistoryView_tableView);
    v63 = v142;
    v62 = v143;
    v64 = v140;
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v140, v59, v143);
    v65 = *(unsigned __int8 *)(v63 + 80);
    v66 = (v65 + 24) & ~v65;
    v67 = swift_allocObject(&unk_100448290, v66 + v139, v65 | 7);
    *(_QWORD *)(v67 + 16) = v56;
    v68 = v67 + v66;
    v69 = v67;
    (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v68, v64, v62);
    v70 = swift_allocObject(&unk_1004482B8, 32, 7);
    *(_QWORD *)(v70 + 16) = sub_10015058C;
    *(_QWORD *)(v70 + 24) = v69;
    v144 = v69;
    v152 = sub_100082450;
    v153 = v70;
    v148 = COERCE_DOUBLE(_NSConcreteStackBlock);
    v149 = 1107296256;
    v150 = sub_1000DDB80;
    v151 = &unk_1004482D0;
    v71 = _Block_copy(&v148);
    v72 = v61;
    v73 = v56;
    swift_release();
    v74 = swift_allocObject(&unk_100447E80, 24, 7);
    swift_unknownObjectWeakInit(v74 + 16, v73);
    v152 = sub_1001505CC;
    v153 = v74;
    v148 = COERCE_DOUBLE(_NSConcreteStackBlock);
    v149 = 1107296256;
    v150 = sub_10002E168;
    v151 = &unk_1004482F8;
    v75 = _Block_copy(&v148);
    objc_msgSend(v72, "performBatchUpdates:completion:", v71, v75, swift_release().n128_f64[0]);
    v76 = v75;
    v77 = v60;
    v78 = v138;
    _Block_release(v76);
    _Block_release(v71);

    v73[qword_100485D40] = 1;
    v79 = *(id *)(v78 + v77);
    v80 = (uint64_t)v145;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v79, "rectForRowAtIndexPath:", isa);
    v83 = v82;
    v85 = v84;
    v87 = v86;
    v89 = v88;

    v156.origin.x = v83;
    v156.origin.y = v85;
    v156.size.width = v87;
    v156.size.height = v89;
    Height = CGRectGetHeight(v156);
    v91 = (double *)&v73[qword_100485DB8];
    if (v73[qword_100485DB8 + 8] == 1)
    {
      sub_10001F970((const void *)(v80 + *(int *)(v135 + 28)), v147);
      sub_10001F970(v147, &v148);
      if (!sub_10001F9AC((uint64_t)&v148))
      {
        sub_10001F9B8((uint64_t)&v148);
        *v91 = Height;
        *((_BYTE *)v91 + 8) = 0;
      }
    }
    if (*(_QWORD *)(*(_QWORD *)v48 + 16) >= 2uLL)
    {
      v92 = *(id *)(v78 + v77);
      v93 = v140;
      IndexPath.init(row:section:)(0, 0);
      v94 = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v142 + 8))(v93, v143);
      objc_msgSend(v92, "scrollToRowAtIndexPath:atScrollPosition:animated:", v94, 1, 1);

    }
    v95 = qword_100485CF8;
    v96 = *(_QWORD *)&v73[qword_100485CF8];
    swift_retain();
    v97 = sub_100142BEC();
    KeyPath = swift_getKeyPath(&unk_1003B92C8);
    v99 = swift_getKeyPath(&unk_1003B92F0);
    v148 = v97;
    static Published.subscript.setter(&v148, v96, KeyPath, v99);
    v100 = qword_100485DB0;
    v101 = v146;
    if ((v73[qword_100485DB0] & 1) == 0)
    {
      sub_100184538();
      v73[v100] = 1;
      v102 = *(_QWORD *)&v73[v95];
      swift_retain();
      v103 = sub_100142BEC();
      v104 = swift_getKeyPath(&unk_1003B92C8);
      v105 = swift_getKeyPath(&unk_1003B92F0);
      v148 = v103;
      static Published.subscript.setter(&v148, v102, v104, v105);
    }
    v106 = qword_100485D08;
    v107 = *(double *)&v73[qword_100485D08];
    v108 = Height + v107;
    *(double *)&v73[qword_100485D08] = v108;
    v109 = *(_QWORD *)&v73[qword_100485C88];
    sub_100018BA0(v109);
    if (v108 <= v110
      || (sub_100018BA0(v109), v107 <= v111) && (v112 = *(double *)&v73[v106], sub_100018BA0(v109), v113 < v112))
    {
      v114 = *(_QWORD *)&v73[v95];
      swift_retain();
      sub_100018BA0(v109);
      if (*(double *)&v73[v106] < v115)
        v115 = *(double *)&v73[v106];
      v116 = v115 + -0.5;
      if (qword_10047A790 != -1)
        swift_once(&qword_10047A790, sub_10000F000);
      v117 = *(double *)&qword_1004AF0C8;
      v118 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
      if ((static UIDevice.isIPhone()(v118) & 1) != 0)
        v119 = &OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
      else
        v119 = &OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
      objc_msgSend(*(id *)(v109 + *v119), "bounds");
      v120 = v116 + v117 + CGRectGetHeight(v157);
      v121 = swift_getKeyPath(&unk_1003B9310);
      v122 = swift_getKeyPath(&unk_1003B9338);
      v148 = v120;
      static Published.subscript.setter(&v148, v114, v121, v122);
      v123 = swift_getKeyPath(&unk_1003B9168);
      v124 = swift_getKeyPath(&unk_1003B9190);
      static Published.subscript.getter(&v148, v101, v123, v124);
      swift_release();
      swift_release();
      if (LOBYTE(v148))
      {
        sub_100184538();
      }
      else
      {
        v125 = (void *)objc_opt_self(UIView);
        v126 = swift_allocObject(&unk_100448330, 24, 7);
        *(_QWORD *)(v126 + 16) = v73;
        v152 = sub_1001505D4;
        v153 = v126;
        v148 = COERCE_DOUBLE(_NSConcreteStackBlock);
        v149 = 1107296256;
        v150 = sub_10003ECA0;
        v151 = &unk_100448348;
        v127 = _Block_copy(&v148);
        v128 = v73;
        swift_release();
        objc_msgSend(v125, "animateWithDuration:delay:options:animations:completion:", 0, v127, 0, 0.3, 0.0);
        _Block_release(v127);
      }
    }
    v129 = *(_QWORD *)(*(_QWORD *)v48 + 16);
    v130 = *(uint64_t (**)(double *, __n128))(**(_QWORD **)&v73[qword_100485C98] + 400);
    v131 = swift_retain();
    v132 = (void (*)(double *, _QWORD))v130(&v148, v131);
    *v133 = v129;
    v132(&v148, 0);
    v134 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v142 + 8))(v141, v143, v134);
    sub_1000258F8(v80, type metadata accessor for MeasurementHistoryItem);
    swift_release();
  }
}

void sub_100148DC0()
{
  uint64_t v0;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v2;
  unint64_t *v3;
  void (*v4)(void ***__return_ptr, __n128);
  __n128 v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void (*v10)(void ***__return_ptr, __n128);
  __n128 v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *Strong;
  void *v24;
  void **v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  void *v28;
  void *v29;
  uint64_t v30;

  isEscapingClosureAtFileLocation = v0;
  if ((*(_BYTE *)(v0 + qword_100485D88) & 1) != 0)
  {
    *(_BYTE *)(v0 + qword_100485D88) = 0;
    return;
  }
  v2 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v3 = &qword_100485000;
  if ((static UIDevice.isIPhone()(v2) & 1) != 0)
  {
    v4 = *(void (**)(void ***__return_ptr, __n128))(**(_QWORD **)(v0 + qword_100485CA8) + 144);
    v5 = swift_retain();
    v4(&v25, v5);
    swift_release();
    if (BYTE3(v25) == 1)
    {
      v6 = (void *)objc_opt_self(UIView);
      v7 = swift_allocObject(&unk_100448498, 24, 7);
      *(_QWORD *)(v7 + 16) = isEscapingClosureAtFileLocation;
      v3 = (unint64_t *)swift_allocObject(&unk_1004484C0, 32, 7);
      v3[2] = (unint64_t)sub_1001507E0;
      v3[3] = v7;
      v29 = sub_100082450;
      v30 = (uint64_t)v3;
      v25 = _NSConcreteStackBlock;
      v26 = 1107296256;
      v27 = sub_1000DDB80;
      v28 = &unk_1004484D8;
      v8 = _Block_copy(&v25);
      v9 = (id)isEscapingClosureAtFileLocation;
      swift_retain();
      objc_msgSend(v6, "performWithoutAnimation:", v8, swift_release().n128_f64[0]);
      _Block_release(v8);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 102, 415, 44, 1);
      swift_release();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        return;
      __break(1u);
    }
  }
  v10 = *(void (**)(void ***__return_ptr, __n128))(**(_QWORD **)(isEscapingClosureAtFileLocation + v3[405])
                                                            + 144);
  v11 = swift_retain();
  v10(&v25, v11);
  swift_release();
  if (BYTE3(v25))
    v12 = 0.0;
  else
    v12 = 1.0;
  objc_msgSend(*(id *)(isEscapingClosureAtFileLocation + qword_100485C80), "alpha");
  if (v13 != v12)
  {
    v14 = *(_QWORD *)(isEscapingClosureAtFileLocation + qword_100485CE8);
    KeyPath = swift_getKeyPath(&unk_1003B9168);
    v16 = swift_getKeyPath(&unk_1003B9190);
    static Published.subscript.getter(&v25, v14, KeyPath, v16);
    swift_release();
    swift_release();
    if (v25 <= 1u)
    {
      v17 = swift_allocObject(&unk_100448448, 32, 7);
      *(_QWORD *)(v17 + 16) = isEscapingClosureAtFileLocation;
      *(double *)(v17 + 24) = v12;
      v18 = objc_allocWithZone((Class)UIViewPropertyAnimator);
      v29 = sub_1001507C0;
      v30 = v17;
      v25 = _NSConcreteStackBlock;
      v26 = 1107296256;
      v27 = sub_10003ECA0;
      v28 = &unk_100448460;
      v19 = _Block_copy(&v25);
      v20 = (char *)(id)isEscapingClosureAtFileLocation;
      swift_release();
      v21 = objc_msgSend(v18, "initWithDuration:dampingRatio:animations:", v19, 0.5, 0.6);
      _Block_release(v19);
      objc_msgSend(v21, "setInterruptible:", 0);
      objc_msgSend(v21, "startAnimation");
      Strong = (void *)swift_unknownObjectWeakLoadStrong(&v20[qword_100485DC0], v22);
      if (Strong)
      {
        v24 = Strong;
        objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

      }
      else
      {

      }
    }
  }
}

void sub_100149144()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void (*v3)(_QWORD *__return_ptr, __n128);
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  void (*v10)();
  void (*v11)(_QWORD *__return_ptr, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  void (*v16)(_QWORD *__return_ptr, __n128);
  __n128 v17;
  double v18;
  void (*v19)(_QWORD *__return_ptr, __n128);
  __n128 v20;
  _QWORD v21[6];

  v1 = v0;
  if ((v0[qword_100485D90] & 1) != 0)
  {
    v0[qword_100485D90] = 0;
    return;
  }
  v2 = qword_100485CA8;
  v3 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)&v0[qword_100485CA8] + 144);
  v4 = swift_retain();
  v3(v21, v4);
  swift_release();
  if (LOBYTE(v21[0]))
  {
    v5 = objc_opt_self(UIView);
    v6 = swift_allocObject(&unk_1004483D0, 24, 7);
    *(_QWORD *)(v6 + 16) = v0;
    v7 = swift_allocObject(&unk_1004483F8, 32, 7);
    *(_QWORD *)(v7 + 16) = sub_1001507A8;
    *(_QWORD *)(v7 + 24) = v6;
    v21[4] = sub_100082450;
    v21[5] = v7;
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 1107296256;
    v21[2] = sub_1000DDB80;
    v21[3] = &unk_100448410;
    v8 = _Block_copy(v21);
    v9 = v1;
    swift_retain();
    objc_msgSend((id)v5, "performWithoutAnimation:", v8, swift_release().n128_f64[0]);
    _Block_release(v8);
    LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v7, "", 102, 451, 44, 1);
    swift_release();
    if ((v5 & 1) != 0)
    {
      __break(1u);
      return;
    }
    sub_100149654((uint64_t)v9);
    v10 = sub_1001507A8;
  }
  else
  {
    v10 = 0;
    v6 = 0;
  }
  v11 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)&v1[v2] + 144);
  v12 = swift_retain();
  v11(v21, v12);
  swift_release();
  if (BYTE3(v21[0]) == 1)
    sub_100149654((uint64_t)v1);
  Strong = swift_unknownObjectWeakLoadStrong(&v1[qword_100485DC0], v13);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)&v1[v2] + 144);
    v17 = swift_retain();
    v16(v21, v17);
    *(_QWORD *)&v18 = swift_release().n128_u64[0];
    if (LOBYTE(v21[0]) == 2
      || (v19 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)&v1[v2] + 144),
          v20 = swift_retain(),
          v19(v21, v20),
          *(_QWORD *)&v18 = swift_release().n128_u64[0],
          LOBYTE(v21[0]) == 1))
    {
      objc_msgSend(v15, "dismissViewControllerAnimated:completion:", 0, 0, v18);
    }

  }
  sub_1000217BC((uint64_t)v10, v6);
}

void sub_1001493C0(unint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  void *v11;
  char v12;
  char v13;
  void (*v14)(uint64_t *__return_ptr, __n128);
  __n128 v15;
  uint64_t v16;

  v3 = *a1;
  v4 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v5 = static UIDevice.isIPhone()(v4);
  v6 = qword_100485D80;
  if ((v5 & 1) == 0 || *(_BYTE *)(a2 + qword_100485D80))
  {
    v7 = *(double *)(a2 + qword_100485CE0);
    v8 = *(double *)(a2 + qword_100485CE0 + 8);
    v9 = *(double *)(a2 + qword_100485CE0 + 16);
    v10 = *(double *)(a2 + qword_100485CE0 + 24);
    v11 = *(void **)(a2 + qword_100485C80);
    if (((v5 | *(unsigned __int8 *)(a2 + qword_100485D80)) & 1) != 0)
    {
      v12 = 0;
      v13 = 1;
    }
    else
    {
      v14 = *(void (**)(uint64_t *__return_ptr, __n128))(**(_QWORD **)(a2 + qword_100485CA8) + 144);
      v15 = swift_retain();
      v14(&v16, v15);
      swift_release();
      v12 = BYTE3(v16) ^ 1;
      v13 = *(_BYTE *)(a2 + v6);
    }
    sub_1000183D4(v3, v11, v12 & 1, *(_QWORD *)(a2 + qword_100485CE8), v13, v7, v8, v9, v10);
    if (*(_BYTE *)(a2 + v6) == 1)
      *(_BYTE *)(a2 + v6) = 0;
  }
}

void sub_1001494E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, __n128);
  __n128 v9;
  void (*v10)(_BYTE *, _QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *Strong;
  void *v16;
  _BYTE v17[32];

  v2 = sub_10000EDC8((uint64_t *)&unk_100486260);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(void **)(a1 + qword_100485CD8);
  if (v5)
  {
    v6 = v5;
    sub_10018CE84(0);
    v7 = *(_QWORD *)(a1 + qword_100485C88);
    v8 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(a1 + qword_100485CC0) + 400);
    v9 = swift_retain();
    v10 = (void (*)(_BYTE *, _QWORD))v8(v17, v9);
    swift_unknownObjectWeakAssign(v11, v7);
    v10(v17, 0);
    swift_release();
    v13 = type metadata accessor for IndexPath(0, v12);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
    sub_100146AA0(0, (uint64_t)v4);

    sub_100036600((uint64_t)v4, (uint64_t *)&unk_100486260);
  }
  sub_100145C04(0, 1u, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + qword_100485DC0, v14);
  if (Strong)
  {
    v16 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

void sub_100149654(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = *(void **)(a1 + qword_100485D10);
  v2 = objc_msgSend(v1, "presentedViewController");
  if (v2)
  {
    v5 = v2;
    v3 = sub_100018148(0, &qword_100486310, UIActivityViewController_ptr);
    if ((objc_msgSend(v5, "isKindOfClass:", swift_getObjCClassFromMetadata(v3)) & 1) != 0
      || (v4 = sub_100018148(0, &qword_100486318, LTUITranslationViewController_ptr),
          objc_msgSend(v5, "isKindOfClass:", swift_getObjCClassFromMetadata(v4))))
    {
      objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 0, 0);
    }

  }
}

void sub_100149730(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, __n128);
  __n128 v9;
  void (*v10)(_BYTE *, _QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[32];

  v2 = sub_10000EDC8((uint64_t *)&unk_100486260);
  __chkstk_darwin(v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(void **)(a1 + qword_100485CD8);
  if (v5)
  {
    v6 = v5;
    sub_10018CE84(0);
    v7 = *(_QWORD *)(a1 + qword_100485C88);
    v8 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(a1 + qword_100485CC0) + 400);
    v9 = swift_retain();
    v10 = (void (*)(_BYTE *, _QWORD))v8(v14, v9);
    swift_unknownObjectWeakAssign(v11, v7);
    v10(v14, 0);
    swift_release();
    v13 = type metadata accessor for IndexPath(0, v12);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
    sub_100146AA0(0, (uint64_t)v4);

    sub_100036600((uint64_t)v4, (uint64_t *)&unk_100486260);
  }
  sub_100145C04(0, 1u, 0);
}

void sub_100149870()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = objc_msgSend(v0, "subviews");
  v3 = sub_100018148(0, (unint64_t *)&qword_100481BC0, UIView_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v15 = v4;
    else
      v15 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v15);
    if (!v5)
      goto LABEL_19;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (!v5)
      goto LABEL_19;
  }
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_34;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
    else
      v7 = *(id *)(v4 + 8 * i + 32);
    v8 = v7;
    v9 = type metadata accessor for SpatialGenericPlatter(0);
    v10 = swift_dynamicCastClass(v8, v9);
    if (v10)
    {
      v11 = v10;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v13 >= v12 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
      v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
      specialized Array._endMutation()(v14);
    }
    else
    {

    }
  }
LABEL_19:
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v4);
  v16 = objc_msgSend(v1, "subviews");
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v3);

  if (!((unint64_t)v17 >> 62))
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
      goto LABEL_21;
LABEL_32:
    swift_bridgeObjectRelease(v17);
    return;
  }
  if (v17 < 0)
    v23 = v17;
  else
    v23 = v17 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v17);
  v18 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v17);
  if (!v18)
    goto LABEL_32;
LABEL_21:
  if (v18 >= 1)
  {
    v19 = 0;
    do
    {
      if ((v17 & 0xC000000000000001) != 0)
        v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v17);
      else
        v20 = *(id *)(v17 + 8 * v19 + 32);
      v21 = v20;
      ++v19;
      v22 = sub_100149870();
      sub_1001002C0(v22);

    }
    while (v18 != v19);
    goto LABEL_32;
  }
LABEL_34:
  __break(1u);
}

void sub_100149B14()
{
  sub_100149B34();
}

void sub_100149B34()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void ***, __n128);
  __n128 v12;
  void (*v13)(void ***, _QWORD, __n128);
  uint64_t *v14;
  uint64_t *v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void ***, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void **aBlock;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  void *v35;
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;
  char v39[24];

  v1 = v0;
  v2 = &v0[qword_100485CC8];
  swift_beginAccess(&v0[qword_100485CC8], v39, 1, 0);
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v4)
  {
    v30 = v2;
    v5 = *(_QWORD *)(type metadata accessor for SpatialPlattersHistoryItem(0) - 8);
    v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v31 = qword_100485CB8;
    v7 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain(v3);
    v29 = v3;
    v8 = (uint64_t *)(v6 + v3 + 8);
    do
    {
      v9 = *(v8 - 1);
      v10 = *v8;
      v11 = *(uint64_t (**)(void ***, __n128))(**(_QWORD **)&v1[v31] + 400);
      swift_bridgeObjectRetain(*v8);
      v12 = swift_retain();
      v13 = (void (*)(void ***, _QWORD, __n128))v11(&aBlock, v12);
      v15 = v14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v14);
      v38 = *v15;
      *v15 = 0x8000000000000000;
      sub_10014FAAC(v9, v10, isUniquelyReferenced_nonNull_native);
      v18 = v17;
      v19 = *v15;
      *v15 = v38;
      swift_bridgeObjectRelease(v19);
      v20 = swift_bridgeObjectRelease(v18);
      v13(&aBlock, 0, v20);
      swift_release();
      v8 = (uint64_t *)((char *)v8 + v7);
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v29);
    v2 = v30;
    v3 = *(_QWORD *)v30;
  }
  *(_QWORD *)v2 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v3);
  v21 = *(_QWORD *)&v1[qword_100485CE8];
  *(_BYTE *)(v21 + OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded) = sub_100142A10() & 1;
  v22 = *(_QWORD *)&v1[qword_100485C98];
  aBlock = 0;
  LOWORD(v33) = 1;
  v23 = *(void (**)(void ***, __n128))(*(_QWORD *)v22 + 392);
  v24 = swift_retain();
  v23(&aBlock, v24);
  swift_release();
  *(_QWORD *)&v1[qword_100485D08] = 0;
  v25 = objc_opt_self(UIView);
  v26 = swift_allocObject(&unk_100448510, 24, 7);
  *(_QWORD *)(v26 + 16) = v1;
  v27 = swift_allocObject(&unk_100448538, 32, 7);
  *(_QWORD *)(v27 + 16) = sub_1001507F8;
  *(_QWORD *)(v27 + 24) = v26;
  v36 = sub_100082450;
  v37 = v27;
  aBlock = _NSConcreteStackBlock;
  v33 = 1107296256;
  v34 = sub_1000DDB80;
  v35 = &unk_100448550;
  v28 = _Block_copy(&aBlock);
  v1;
  swift_retain();
  objc_msgSend((id)v25, "performWithoutAnimation:", v28, swift_release().n128_f64[0]);
  _Block_release(v28);
  LOBYTE(v25) = swift_isEscapingClosureAtFileLocation(v27, "", 102, 937, 40, 1);
  swift_release();
  if ((v25 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_100145C04(0, 1u, 0);
    swift_release();
  }
}

uint64_t sub_100149E3C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(_BYTE *);
  void (*v4)(_BYTE *, _QWORD);
  uint64_t v5;
  _BYTE v6[32];

  if ((result & 1) == 0)
  {
    *(_BYTE *)(a2 + qword_100485DA0) = 0;
    v2 = *(_QWORD *)(a2 + qword_100485C98);
    v3 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)v2 + 400);
    swift_retain(v2);
    v4 = (void (*)(_BYTE *, _QWORD))v3(v6);
    *(_BYTE *)(v5 + 9) = 0;
    v4(v6, 0);
    return swift_release(v2);
  }
  return result;
}

void sub_100149EAC()
{
  id v0;
  id v1;
  double v2;
  double v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  _QWORD aBlock[6];

  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  if (*((_QWORD *)&xmmword_1004AF228 + 1))
  {
    v0 = objc_msgSend(*((id *)&xmmword_1004AF228 + 1), "tabBarController");
    if (v0)
    {
      v8 = v0;
      v1 = objc_msgSend(v0, "tabBar");
      objc_msgSend(v1, "alpha");
      v3 = v2;

      if (v3 == 1.0)
      {

      }
      else
      {
        v4 = (void *)objc_opt_self(UIView);
        v5 = swift_allocObject(&unk_100448150, 32, 7);
        *(_QWORD *)(v5 + 16) = v8;
        *(_QWORD *)(v5 + 24) = 0x3FF0000000000000;
        aBlock[4] = sub_1000A3430;
        aBlock[5] = v5;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10003ECA0;
        aBlock[3] = &unk_100448168;
        v6 = _Block_copy(aBlock);
        v7 = v8;
        swift_release();
        objc_msgSend(v4, "animateWithDuration:delay:options:animations:completion:", 0, v6, 0, 0.15, 0.0);

        _Block_release(v6);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10014A048(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  uint64_t v12;
  id v13;
  Class isa;
  uint64_t (*v15)(_BYTE *, __n128);
  __n128 v16;
  void (*v17)(_BYTE *, _QWORD);
  uint64_t v18;
  _BYTE v20[32];
  _BYTE v21[24];

  v2 = a2;
  v4 = type metadata accessor for IndexPath(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(char **)(a1 + qword_100485C80);
  v9 = OBJC_IVAR____TtC7Measure11HistoryView_tableView;
  objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC7Measure11HistoryView_tableView], "reloadData");
  *(_BYTE *)(a1 + qword_100485D00) = 0;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(a1 + qword_100485CE8)+ OBJC_IVAR____TtC7Measure23CardContainerController_panGestureRecognizer);
  if (Strong)
  {
    v11 = Strong;
    objc_msgSend(Strong, "setEnabled:", 1);

    objc_msgSend(v8, "setHidden:", 1);
    v12 = a1 + qword_100485CC8;
    swift_beginAccess(a1 + qword_100485CC8, v21, 0, 0);
    if (*(_QWORD *)(*(_QWORD *)v12 + 16) > 1uLL)
    {
      v13 = *(id *)&v8[v9];
      IndexPath.init(row:section:)(0, 0);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
      objc_msgSend(v13, "scrollToRowAtIndexPath:atScrollPosition:animated:", isa, 1, 1);

    }
    if ((v2 & 1) == 0)
    {
      *(_BYTE *)(a1 + qword_100485DA0) = 0;
      v15 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(a1 + qword_100485C98) + 400);
      v16 = swift_retain();
      v17 = (void (*)(_BYTE *, _QWORD))v15(v20, v16);
      *(_BYTE *)(v18 + 9) = 0;
      v17(v20, 0);
      swift_release();
    }
    sub_100147490(2u, 1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10014A230(uint64_t a1, char a2)
{
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  char v13;

  v3 = *(void **)(a1 + qword_100485CE8);
  sub_100185D58(a2, 0, 0, 0.4);
  KeyPath = swift_getKeyPath(&unk_1003B9168);
  v5 = swift_getKeyPath(&unk_1003B9190);
  v13 = a2;
  v6 = v3;
  static Published.subscript.setter(&v13, v6, KeyPath, v5);
  sub_100184D4C();
  v7 = &v6[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = &v6[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture], v9);
  if (Strong)
  {
    v11 = Strong;
    objc_msgSend(Strong, "setEnabled:", 1);

  }
  return swift_unknownObjectWeakAssign(v8, 0);
}

void sub_10014A318(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t (*v5)(_BYTE *, __n128);
  __n128 v6;
  void (*v7)(_BYTE *, _QWORD);
  uint64_t v8;
  _BYTE v9[32];

  if ((a2 & 1) == 0)
  {
    *(_BYTE *)(a3 + qword_100485DA0) = 0;
    v5 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(a3 + qword_100485C98) + 400);
    v6 = swift_retain();
    v7 = (void (*)(_BYTE *, _QWORD))v5(v9, v6);
    *(_BYTE *)(v8 + 9) = 0;
    v7(v9, 0);
    swift_release();
  }
  sub_10014784C(a4, a2);
}

void sub_10014A3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  id v12;
  Class isa;
  uint64_t (*v14)(_BYTE *, __n128);
  __n128 v15;
  void (*v16)(_BYTE *, _QWORD);
  uint64_t v17;
  void *v18;
  id v19;
  _BYTE v20[32];

  v4 = sub_10000EDC8((uint64_t *)&unk_100486260);
  __chkstk_darwin(v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for IndexPath(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000644F8(a1, (uint64_t)v6, (uint64_t *)&unk_100486260);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_100036600((uint64_t)v6, (uint64_t *)&unk_100486260);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v11, v6, v8);
    v12 = *(id *)(*(_QWORD *)(a2 + qword_100485C80) + OBJC_IVAR____TtC7Measure11HistoryView_tableView);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v12, "deselectRowAtIndexPath:animated:", isa, 0);

    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  }
  *(_BYTE *)(a2 + qword_100485DA0) = 0;
  v14 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(a2 + qword_100485C98) + 400);
  v15 = swift_retain();
  v16 = (void (*)(_BYTE *, _QWORD))v14(v20, v15);
  *(_BYTE *)(v17 + 9) = 0;
  v16(v20, 0);
  swift_release();
  v18 = *(void **)(a2 + qword_100485CD8);
  if (v18)
  {
    v19 = v18;
    sub_10018D024(v19);

  }
}

id sub_10014A574(void *a1, uint64_t a2)
{
  void *v4;
  CGAffineTransform v6;
  CGAffineTransform v7;

  objc_msgSend(a1, "transform");
  CGAffineTransformTranslate(&v6, &v7, *(CGFloat *)(a2 + qword_100485D18), 0.0);
  v7 = v6;
  objc_msgSend(a1, "setTransform:", &v7);
  v4 = *(void **)(*(_QWORD *)(a2 + qword_100485C88) + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
  CGAffineTransformMakeScale(&v7, 0.9, 0.9);
  objc_msgSend(v4, "setTransform:", &v7);
  return objc_msgSend(v4, "setAlpha:", 0.0);
}

void sub_10014A668(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t KeyPath;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void *Strong;
  void *v10;
  char v11;

  v1 = *(void **)(a1 + qword_100488870);
  if (v1)
  {
    v2 = v1;
    sub_100185D58(2, 0, 0, 0.4);
    KeyPath = swift_getKeyPath(&unk_1003B9168);
    v4 = swift_getKeyPath(&unk_1003B9190);
    v11 = 2;
    v5 = (char *)v2;
    static Published.subscript.setter(&v11, v5, KeyPath, v4);
    sub_100184D4C();
    v6 = &v5[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
    *(_QWORD *)v6 = 0;
    v6[8] = 1;
    v7 = &v5[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture];
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture], v8);
    if (Strong)
    {
      v10 = Strong;
      objc_msgSend(Strong, "setEnabled:", 1);

    }
    swift_unknownObjectWeakAssign(v7, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10014A768(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_BYTE *);
  void (*v3)(_BYTE *, _QWORD);
  uint64_t v4;
  _BYTE v6[32];

  *(_BYTE *)(a1 + qword_100485DA0) = 0;
  v1 = *(_QWORD *)(a1 + qword_100485C98);
  v2 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)v1 + 400);
  swift_retain(v1);
  v3 = (void (*)(_BYTE *, _QWORD))v2(v6);
  *(_BYTE *)(v4 + 9) = 0;
  v3(v6, 0);
  return swift_release(v1);
}

id sub_10014A7D4(void *a1, uint64_t a2)
{
  void *v4;
  CGAffineTransform v6;
  CGAffineTransform v7;

  objc_msgSend(a1, "transform");
  CGAffineTransformTranslate(&v6, &v7, -*(double *)(a2 + qword_100485D18), 0.0);
  v7 = v6;
  objc_msgSend(a1, "setTransform:", &v7);
  v4 = *(void **)(*(_QWORD *)(a2 + qword_100485C88) + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
  v7.a = 1.0;
  v7.b = 0.0;
  v7.c = 0.0;
  v7.d = 1.0;
  v7.tx = 0.0;
  v7.ty = 0.0;
  objc_msgSend(v4, "setTransform:", &v7);
  return objc_msgSend(v4, "setAlpha:", 1.0);
}

void sub_10014A8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_BYTE *);
  void (*v6)(_BYTE *, _QWORD);
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  _BYTE v11[32];

  v3 = qword_100485DA0;
  *(_BYTE *)(a2 + qword_100485DA0) = 0;
  v4 = *(_QWORD *)(a2 + qword_100485C98);
  v5 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)v4 + 400);
  swift_retain(v4);
  v6 = (void (*)(_BYTE *, _QWORD))v5(v11);
  *(_BYTE *)(v7 + 9) = 0;
  v6(v11, 0);
  swift_release(v4);
  if ((*(_BYTE *)(a2 + v3) & 1) == 0)
  {
    v8 = qword_100485CD8;
    v9 = *(void **)(a2 + qword_100485CD8);
    if (v9)
    {
      v10 = v9;
      sub_10018D024();
      objc_msgSend(v10, "removeFromSuperview");

      v9 = *(void **)(a2 + v8);
    }
    *(_QWORD *)(a2 + v8) = 0;

  }
}

void sub_10014A974(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_BYTE *);
  void (*v5)(_BYTE *, _QWORD);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _BYTE v10[32];

  v2 = qword_100485DA0;
  *(_BYTE *)(a1 + qword_100485DA0) = 0;
  v3 = *(_QWORD *)(a1 + qword_100485C98);
  v4 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)v3 + 400);
  swift_retain(v3);
  v5 = (void (*)(_BYTE *, _QWORD))v4(v10);
  *(_BYTE *)(v6 + 9) = 0;
  v5(v10, 0);
  swift_release(v3);
  if ((*(_BYTE *)(a1 + v2) & 1) == 0)
  {
    v7 = qword_100485CD8;
    v8 = *(void **)(a1 + qword_100485CD8);
    if (v8)
    {
      v9 = v8;
      sub_10018D024();
      objc_msgSend(v9, "removeFromSuperview");

      v8 = *(void **)(a1 + v7);
    }
    *(_QWORD *)(a1 + v7) = 0;

  }
}

void sub_10014AA30(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Class isa;

  v3 = *(void **)(*(_QWORD *)(a1 + qword_100485C80) + OBJC_IVAR____TtC7Measure11HistoryView_tableView);
  v4 = sub_10000EDC8(&qword_1004862F8);
  v6 = type metadata accessor for IndexPath(0, v5);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = swift_allocObject(v4, v9 + *(_QWORD *)(v7 + 72), v8 | 7);
  *(_OWORD *)(v10 + 16) = xmmword_1003B0BD0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10 + v9, a2, v6);
  v11 = v3;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v11, "insertRowsAtIndexPaths:withRowAnimation:", isa, 0, swift_bridgeObjectRelease(v10).n128_f64[0]);

}

void sub_10014AB24(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t Strong;
  _BYTE *v10;
  char v11;
  _BYTE v13[24];

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2, v8);
  if (Strong)
  {
    v10 = (_BYTE *)Strong;
    if ((a1 & 1) != 0)
    {
      *v7 = Contexts.UIKit.init()(Strong);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
      v11 = _dispatchPreconditionTest(_:)(v7);
      (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
      if ((v11 & 1) == 0)
      {
        __break(1u);
        return;
      }
      v10[qword_100485D40] = 0;
      sub_10014AC1C();
    }

  }
}

void sub_10014AC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  unint64_t v55;
  int64_t v56;
  char v57[24];
  char v58[24];
  char v59[24];
  char v60[32];

  v1 = type metadata accessor for MeasurementHistoryItem(0);
  __chkstk_darwin(v1);
  v49 = (uint64_t *)((char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for SpatialPlattersHistoryItem(0);
  v52 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (uint64_t *)((char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v10 = Contexts.UIKit.init()(v8);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v6);
  v11 = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v11 & 1) == 0)
  {
LABEL_40:
    __break(1u);
    return;
  }
  v12 = (uint64_t *)(v0 + qword_100485D48);
  swift_beginAccess(v0 + qword_100485D48, v60, 1, 0);
  v47 = v12;
  v13 = *v12;
  if (*(_QWORD *)(*v12 + 16))
  {
    v14 = *(_QWORD *)(v13 + 56);
    v53 = v13 + 56;
    v15 = 1 << *(_BYTE *)(v13 + 32);
    v16 = -1;
    if (v15 < 64)
      v16 = ~(-1 << v15);
    v17 = v16 & v14;
    v18 = (uint64_t *)(v0 + qword_100485CC8);
    v48 = v0;
    v19 = (uint64_t *)(v0 + qword_100485D50);
    swift_bridgeObjectRetain(v13);
    swift_beginAccess(v18, v59, 0, 0);
    v50 = v19;
    swift_beginAccess(v19, v58, 0, 0);
    v20 = 0;
    v54 = (unint64_t)(v15 + 63) >> 6;
    v51 = v13;
    do
    {
LABEL_7:
      if (v17)
      {
        v21 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v22 = v21 | (v20 << 6);
      }
      else
      {
        v23 = v20 + 1;
        if (__OFADD__(v20, 1))
          goto LABEL_38;
        if (v23 >= v54)
        {
LABEL_35:
          swift_release();
          v43 = *v47;
          *v47 = (uint64_t)&_swiftEmptySetSingleton;
          swift_bridgeObjectRelease(v43);
          v44 = v50;
          swift_beginAccess(v50, v57, 1, 0);
          v45 = *v44;
          *v44 = (uint64_t)&_swiftEmptySetSingleton;
          swift_bridgeObjectRelease(v45);
          return;
        }
        v24 = *(_QWORD *)(v53 + 8 * v23);
        ++v20;
        if (!v24)
        {
          v20 = v23 + 1;
          if (v23 + 1 >= v54)
            goto LABEL_35;
          v24 = *(_QWORD *)(v53 + 8 * v20);
          if (!v24)
          {
            v20 = v23 + 2;
            if (v23 + 2 >= v54)
              goto LABEL_35;
            v24 = *(_QWORD *)(v53 + 8 * v20);
            if (!v24)
            {
              v25 = v23 + 3;
              if (v25 >= v54)
                goto LABEL_35;
              v24 = *(_QWORD *)(v53 + 8 * v25);
              if (!v24)
              {
                while (1)
                {
                  v20 = v25 + 1;
                  if (__OFADD__(v25, 1))
                    goto LABEL_39;
                  if (v20 >= v54)
                    goto LABEL_35;
                  v24 = *(_QWORD *)(v53 + 8 * v20);
                  ++v25;
                  if (v24)
                    goto LABEL_22;
                }
              }
              v20 = v25;
            }
          }
        }
LABEL_22:
        v17 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v20 << 6);
      }
      v26 = *v18;
      v27 = *(_QWORD *)(*v18 + 16);
    }
    while (!v27);
    v55 = v17;
    v56 = v20;
    v28 = v18;
    v29 = (uint64_t *)(*(_QWORD *)(v13 + 48) + 16 * v22);
    v30 = *v29;
    v31 = v29[1];
    v32 = v52;
    v33 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v26);
    v34 = 0;
    v35 = *(_QWORD *)(v32 + 72);
    while (1)
    {
      sub_100036344(v26 + v33, (uint64_t)v5, type metadata accessor for SpatialPlattersHistoryItem);
      v36 = v5[1];
      if (*v5 == v30 && v36 == v31)
        break;
      v38 = _stringCompareWithSmolCheck(_:_:expecting:)(*v5, v36, v30, v31, 0);
      sub_1000258F8((uint64_t)v5, type metadata accessor for SpatialPlattersHistoryItem);
      if ((v38 & 1) != 0)
        goto LABEL_33;
      ++v34;
      v33 += v35;
      if (v27 == v34)
      {
        swift_bridgeObjectRelease(v31);
        swift_bridgeObjectRelease(v26);
        v13 = v51;
        v18 = v28;
LABEL_6:
        v17 = v55;
        v20 = v56;
        goto LABEL_7;
      }
    }
    sub_1000258F8((uint64_t)v5, type metadata accessor for SpatialPlattersHistoryItem);
LABEL_33:
    swift_bridgeObjectRelease(v26);
    if (v34 < *(_QWORD *)(*v28 + 16))
    {
      v18 = v28;
      v39 = *v28 + v33;
      v40 = v49;
      sub_100036344(v39, (uint64_t)v49, type metadata accessor for MeasurementHistoryItem);
      v41 = *v50;
      swift_bridgeObjectRetain(*v50);
      v42 = sub_10018D130(v30, v31, v41);
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v41);
      sub_1001451F8(v34, v40, (v42 & 1) == 0);
      sub_1000258F8((uint64_t)v40, type metadata accessor for MeasurementHistoryItem);
      v13 = v51;
      goto LABEL_6;
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
}

void sub_10014B0A4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  double Width;
  double Height;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t Strong;
  id v11;
  CGRect v12;
  CGRect v13;

  sub_10014B1CC();
  if (v1)
  {
    v2 = v1;
    v3 = objc_retain(*(id *)(*(_QWORD *)(*(_QWORD *)(v0 + qword_100485C88)
                                       + OBJC_IVAR____TtC7Measure17CardContainerView_titleView)
                           + OBJC_IVAR____TtC7Measure13CardTitleView_leftItem));
    objc_msgSend(v3, "frame");
    Width = CGRectGetWidth(v12);
    objc_msgSend(v3, "frame");
    Height = CGRectGetHeight(v13);
    v6 = sub_10000F388(v2, (uint64_t)v3, 0.0, 0.0, Width, Height);

    v7 = swift_unknownObjectWeakAssign(v0 + qword_100485DC0, v6);
    v8 = *(void **)(v0 + qword_100485D10);
    Strong = swift_unknownObjectWeakLoadStrong(v7, v9);
    if (Strong)
    {
      v11 = (id)Strong;
      objc_msgSend(v8, "presentViewController:animated:completion:");

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10014B1CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  int v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSAttributedStringKey v25;
  void *v26;
  NSString *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  NSString v32;
  Class isa;
  id v34;
  id v35;
  uint64_t v36;
  int v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char v48;
  char v49;
  Swift::String v50;
  void *object;
  unint64_t v52;
  id v53;
  NSString v54;
  double v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  NSString v65;
  id v66;
  _QWORD v67[2];
  __int128 v68;
  NSAttributedStringKey v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _BYTE v80[848];
  _BYTE v81[848];
  _BYTE v82[848];
  char v83[24];
  __int128 v84[2];
  int v85;
  char v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  int v91;
  char v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  int v97;
  char v98;
  char v99;

  v1 = type metadata accessor for MeasurementHistoryItem(0);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for SpatialPlattersHistoryItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v77 = (uint64_t)v67 - v9;
  v10 = (_QWORD *)(v0 + qword_100485CC8);
  swift_beginAccess(v10, v83, 0, 0);
  v72 = v10;
  v11 = *v10;
  v12 = *(_QWORD *)(*v10 + 16);
  if (v12)
  {
    v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v14 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain(*v10);
    sub_100036344(v11 + v13, v77, type metadata accessor for SpatialPlattersHistoryItem);
    v76 = 0;
    v67[0] = v11;
    v75 = v14;
    v71 = v13;
    v15 = v11 + v14 + v13;
    v69 = NSFontAttributeName;
    v16 = v12 - 1;
    v68 = xmmword_1003B0BD0;
    v67[1] = (char *)&type metadata for Any + 8;
    v70 = v1;
    v74 = v8;
    v17 = v72;
    while (1)
    {
      v18 = v77;
      sub_100036344(v77, (uint64_t)v3, type metadata accessor for MeasurementHistoryItem);
      sub_1000258F8(v18, type metadata accessor for SpatialPlattersHistoryItem);
      sub_10001F970((char *)v3 + *(int *)(v1 + 28), v81);
      sub_10001F970(v81, v82);
      v19 = sub_10001F9AC((uint64_t)v82);
      if (v19)
      {
        if (v19 == 1)
        {
          sub_10001F9B8((uint64_t)v82);
          v20 = sub_100020194((uint64_t)v3);
        }
        else
        {
          sub_10001F9B8((uint64_t)v82);
          v20 = sub_10019AEE0((uint64_t)v3);
        }
        v35 = v20;
        if (!v20)
          goto LABEL_21;
      }
      else
      {
        sub_10001F9B8((uint64_t)v82);
        sub_10001F970(v81, v80);
        v21 = sub_10001F9B8((uint64_t)v80);
        v22 = v3[3];
        v73 = v3[2];
        v23 = sub_10000EDC8(&qword_100486370);
        v24 = swift_allocObject(v23, 48, 7);
        *(_OWORD *)(v24 + 16) = v68;
        v25 = v69;
        *(_QWORD *)(v24 + 32) = v69;
        v26 = (void *)objc_opt_self(UIFont);
        v27 = v25;
        objc_msgSend(v26, "systemFontSize");
        *(_QWORD *)(v24 + 40) = objc_msgSend(v26, "systemFontOfSize:weight:");
        v28 = sub_1000C74F4(v24);
        swift_bridgeObjectRetain(v22);
        sub_10001FDC4(v28);
        v30 = v29;
        swift_bridgeObjectRelease(v28);
        v31 = objc_allocWithZone((Class)NSAttributedString);
        v32 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v22);
        type metadata accessor for Key(0);
        sub_10000C4B0((unint64_t *)&qword_10047B698, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1003B0824);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        v34 = objc_msgSend(v31, "initWithString:attributes:", v32, isa, swift_bridgeObjectRelease(v30).n128_f64[0]);

        v35 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v34);
        v36 = *(_QWORD *)(v21 + 8);
        v37 = *(_DWORD *)(v21 + 32);
        v38 = *(_BYTE *)(v21 + 36);
        v39 = *(_BYTE *)(v21 + 37);
        v40 = *(_QWORD *)(v21 + 40);
        v41 = *(_QWORD *)(v21 + 48);
        v42 = *(_DWORD *)(v21 + 72);
        v43 = *(_BYTE *)(v21 + 76);
        v44 = *(_BYTE *)(v21 + 77);
        v45 = *(_QWORD *)(v21 + 80);
        v46 = *(_QWORD *)(v21 + 88);
        v47 = *(_DWORD *)(v21 + 112);
        v48 = *(_BYTE *)(v21 + 116);
        v49 = *(_BYTE *)(v21 + 117);
        *(_QWORD *)&v84[0] = *(_QWORD *)v21;
        *((_QWORD *)&v84[0] + 1) = v36;
        v84[1] = *(_OWORD *)(v21 + 16);
        v85 = v37;
        v86 = v38;
        v87 = v39;
        v88 = v40;
        v89 = v41;
        v90 = *(_OWORD *)(v21 + 56);
        v91 = v42;
        v92 = v43;
        v93 = v44;
        v94 = v45;
        v95 = v46;
        v96 = *(_OWORD *)(v21 + 96);
        v97 = v47;
        v98 = v48;
        v99 = v49;
        v50._countAndFlagsBits = sub_1000189B0(v84);
        object = v50._object;
        v78 = 10;
        v79 = 0xE100000000000000;
        String.append(_:)(v50);
        swift_bridgeObjectRelease(object);
        v52 = v79;
        v53 = objc_allocWithZone((Class)NSAttributedString);
        v54 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v55 = swift_bridgeObjectRelease(v52).n128_u64[0];
        v1 = v70;
        v56 = objc_msgSend(v53, "initWithString:", v54, v55);

        objc_msgSend(v35, "appendAttributedString:", v56);
        v17 = v72;
      }
      v57 = v35;
      v58 = v76;
      if (v76)
        objc_msgSend(v76, "appendAttributedString:", v57);
      else
        v58 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v57);
      v76 = v58;
      v59 = *(_QWORD *)(*v17 + 16);
      if (!v59)
      {

        goto LABEL_21;
      }
      v60 = v74;
      sub_100036344(*v17 + v71 + (v59 - 1) * v75, (uint64_t)v74, type metadata accessor for SpatialPlattersHistoryItem);
      if ((sub_1001ADF08(v3, v60) & 1) != 0)
      {

        v61 = (uint64_t)v60;
LABEL_20:
        sub_1000258F8(v61, type metadata accessor for SpatialPlattersHistoryItem);
        goto LABEL_21;
      }
      if (*(_QWORD *)(*v17 + 16) < 2uLL)
      {

        v61 = (uint64_t)v74;
        goto LABEL_20;
      }
      v62 = v76;
      if (!v76)
      {

        __break(1u);
        return;
      }
      v63 = objc_allocWithZone((Class)NSAttributedString);
      v64 = v62;
      v65 = String._bridgeToObjectiveC()();
      v66 = objc_msgSend(v63, "initWithString:", v65);

      objc_msgSend(v64, "appendAttributedString:", v66);
      sub_1000258F8((uint64_t)v74, type metadata accessor for SpatialPlattersHistoryItem);
      v1 = v70;
      v17 = v72;
LABEL_21:
      sub_1000258F8((uint64_t)v3, type metadata accessor for MeasurementHistoryItem);
      if (!v16)
      {
        swift_bridgeObjectRelease(v67[0]);
        return;
      }
      sub_100036344(v15, v77, type metadata accessor for SpatialPlattersHistoryItem);
      v15 += v75;
      --v16;
    }
  }
}

void sub_10014B834(void *a1)
{
  id v1;

  v1 = a1;
  sub_10014B0A4();

}

double sub_10014B868(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  double *v23;
  _QWORD aBlock[6];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject(&unk_1004485B0, 32, 7);
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  v14 = (_QWORD *)swift_allocObject(&unk_1004485D8, 40, 7);
  v14[2] = a3;
  v14[3] = sub_10015083C;
  v14[4] = v13;
  aBlock[4] = sub_1001508A0;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003ECA0;
  aBlock[3] = &unk_1004485F0;
  v15 = _Block_copy(aBlock);
  swift_retain();
  v16 = a3;
  static DispatchQoS.unspecified.getter(v17);
  v23 = _swiftEmptyArrayStorage;
  v18 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v20 = sub_100043310((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v19, v20, v6, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10014BA94(uint64_t a1, void (*a2)(__n128), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN **v23;
  char **v24;
  char **v25;
  uint64_t v26;
  int v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSAttributedStringKey v33;
  void *v34;
  NSString *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  NSString v40;
  Class isa;
  id v42;
  char **v43;
  uint64_t v44;
  int v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char v56;
  char v57;
  Swift::String v58;
  void *object;
  unint64_t v60;
  id v61;
  NSString v62;
  double v63;
  void *v64;
  _UNKNOWN **v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  NSString v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  unint64_t v78;
  double *v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  unint64_t v87;
  double v88;
  unint64_t v89;
  char v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  NSString v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  double *v107;
  unint64_t v108;
  unint64_t v109;
  double *v110;
  uint64_t v111;
  unint64_t v112;
  id v113;
  unint64_t v114;
  double *v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  char isUniquelyReferenced_nonNull_native;
  __n128 v124;
  uint64_t v125;
  double *v126;
  _QWORD *v127;
  __n128 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(__n128);
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char *v140;
  NSAttributedStringKey v141;
  unint64_t v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  __int128 v151;
  uint64_t v152;
  id v153;
  char *v154;
  uint64_t v155;
  double *v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  __int128 v160;
  __int128 v161;
  _BYTE v162[848];
  _BYTE v163[848];
  char v164[24];
  __int128 v165[2];
  int v166;
  char v167;
  char v168;
  uint64_t v169;
  uint64_t v170;
  __int128 v171;
  int v172;
  char v173;
  char v174;
  uint64_t v175;
  uint64_t v176;
  __int128 v177;
  int v178;
  char v179;
  char v180;

  v6 = type metadata accessor for URL(0);
  v137 = *(_QWORD *)(v6 - 8);
  v138 = v6;
  __chkstk_darwin(v6);
  v136 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UTType(0);
  v134 = *(_QWORD *)(v8 - 8);
  v135 = v8;
  __chkstk_darwin(v8);
  v133 = (char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000EDC8((uint64_t *)&unk_1004862E0);
  __chkstk_darwin(v10);
  v147 = (uint64_t)&v129 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MeasurementCapture(0);
  v146 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v145 = (uint64_t)&v129 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = type metadata accessor for MeasurementHistoryItem(0);
  __chkstk_darwin(v155);
  v15 = (char *)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SpatialPlattersHistoryItem(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v149 = (uint64_t)&v129 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t *)(a1 + qword_100485CC8);
  swift_beginAccess(v19, v164, 0, 0);
  v20 = *v19;
  v21 = *(_QWORD *)(*v19 + 16);
  v131 = a3;
  v132 = a2;
  if (!v21)
  {
    v126 = _swiftEmptyArrayStorage;
    v127 = _swiftEmptyDictionarySingleton;
LABEL_46:
    v128 = swift_bridgeObjectRetain(v126);
    v132(v128);
    swift_bridgeObjectRelease(v127);
    swift_bridgeObjectRelease_n(v126, 2);
    return;
  }
  v144 = v12;
  v22 = v20 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  v148 = *(_QWORD *)(v17 + 72);
  v141 = NSFontAttributeName;
  v130 = v20;
  swift_bridgeObjectRetain(v20);
  v156 = _swiftEmptyArrayStorage;
  v150 = _swiftEmptyDictionarySingleton;
  v157 = v21 - 1;
  v151 = xmmword_1003B0BD0;
  v23 = &_sSo7UIColorC17MeasureFoundationE4argbABs6UInt32V_tcfC_ptr;
  v24 = &selRef_renderer_didAddNode_forAnchor_;
  v25 = &selRef_renderer_didAddNode_forAnchor_;
  v139 = (unint64_t)"Measure.HistoryViewCoordinator";
  v140 = (char *)&type metadata for Any + 8;
  v142 = 0x80000001003E20B0;
  v154 = v15;
  while (1)
  {
    v26 = v149;
    sub_100036344(v22, v149, type metadata accessor for SpatialPlattersHistoryItem);
    sub_100036344(v26, (uint64_t)v15, type metadata accessor for MeasurementHistoryItem);
    sub_1000258F8(v26, type metadata accessor for SpatialPlattersHistoryItem);
    sub_10001F970(&v15[*(int *)(v155 + 28)], v162);
    sub_10001F970(v162, v163);
    v27 = sub_10001F9AC((uint64_t)v163);
    if (v27)
    {
      if (v27 == 1)
      {
        sub_10001F9B8((uint64_t)v163);
        v28 = sub_100020194((uint64_t)v15);
        if (!v28)
          goto LABEL_39;
      }
      else
      {
        sub_10001F9B8((uint64_t)v163);
        v28 = sub_10019AEE0((uint64_t)v15);
        if (!v28)
          goto LABEL_39;
      }
      v152 = v22;
      v67 = v28;
      v43 = v24;
      v65 = v23;
    }
    else
    {
      v152 = v22;
      sub_10001F9B8((uint64_t)v163);
      sub_10001F970(v162, &v160);
      v29 = sub_10001F9B8((uint64_t)&v160);
      v30 = *((_QWORD *)v15 + 3);
      v31 = sub_10000EDC8(&qword_100486370);
      v32 = swift_allocObject(v31, 48, 7);
      *(_OWORD *)(v32 + 16) = v151;
      v33 = v141;
      *(_QWORD *)(v32 + 32) = v141;
      v34 = (void *)objc_opt_self(UIFont);
      v35 = v33;
      objc_msgSend(v34, "systemFontSize");
      *(_QWORD *)(v32 + 40) = objc_msgSend(v34, "systemFontOfSize:weight:");
      v36 = sub_1000C74F4(v32);
      swift_bridgeObjectRetain(v30);
      sub_10001FDC4(v36);
      v38 = v37;
      swift_bridgeObjectRelease(v36);
      v39 = objc_allocWithZone((Class)NSAttributedString);
      v40 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v30);
      type metadata accessor for Key(0);
      sub_10000C4B0((unint64_t *)&qword_10047B698, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1003B0824);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v42 = objc_msgSend(v39, "initWithString:attributes:", v40, isa, swift_bridgeObjectRelease(v38).n128_f64[0]);

      v43 = v24;
      v28 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v42);

      v44 = *(_QWORD *)(v29 + 8);
      v45 = *(_DWORD *)(v29 + 32);
      v46 = *(_BYTE *)(v29 + 36);
      v47 = *(_BYTE *)(v29 + 37);
      v48 = *(_QWORD *)(v29 + 40);
      v49 = *(_QWORD *)(v29 + 48);
      v50 = *(_DWORD *)(v29 + 72);
      v51 = *(_BYTE *)(v29 + 76);
      v52 = *(_BYTE *)(v29 + 77);
      v53 = *(_QWORD *)(v29 + 80);
      v54 = *(_QWORD *)(v29 + 88);
      v55 = *(_DWORD *)(v29 + 112);
      v56 = *(_BYTE *)(v29 + 116);
      v57 = *(_BYTE *)(v29 + 117);
      *(_QWORD *)&v165[0] = *(_QWORD *)v29;
      *((_QWORD *)&v165[0] + 1) = v44;
      v165[1] = *(_OWORD *)(v29 + 16);
      v166 = v45;
      v167 = v46;
      v168 = v47;
      v169 = v48;
      v170 = v49;
      v171 = *(_OWORD *)(v29 + 56);
      v172 = v50;
      v173 = v51;
      v174 = v52;
      v175 = v53;
      v176 = v54;
      v177 = *(_OWORD *)(v29 + 96);
      v178 = v55;
      v179 = v56;
      v180 = v57;
      v58._countAndFlagsBits = sub_1000189B0(v165);
      object = v58._object;
      v158 = 10;
      v159 = 0xE100000000000000;
      String.append(_:)(v58);
      swift_bridgeObjectRelease(object);
      v60 = v159;
      v61 = objc_allocWithZone((Class)NSAttributedString);
      v62 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v63 = swift_bridgeObjectRelease(v60).n128_u64[0];
      v64 = v61;
      v65 = &_sSo7UIColorC17MeasureFoundationE4argbABs6UInt32V_tcfC_ptr;
      v66 = objc_msgSend(v64, v24[116], v62, v63);

      objc_msgSend(v28, v25[117], v66);
      v67 = v28;
    }
    v68 = objc_allocWithZone((Class)NSMutableAttributedString);
    v153 = v67;
    v69 = objc_msgSend(v68, "initWithAttributedString:", v67);
    v23 = v65;
    v70 = objc_allocWithZone((Class)v65[292]);
    v71 = String._bridgeToObjectiveC()();
    v72 = objc_msgSend(v70, v43[116], v71);

    objc_msgSend(v69, v25[117], v72);
    v73 = v147;
    sub_1000644F8((uint64_t)&v154[*(int *)(v155 + 24)], v147, (uint64_t *)&unk_1004862E0);
    v74 = v144;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v146 + 48))(v73, 1, v144) == 1)
    {
      sub_100036600(v73, (uint64_t *)&unk_1004862E0);
      v75 = sub_10000EDC8((uint64_t *)&unk_100486350);
      v76 = swift_allocObject(v75, 80, 7);
      *(_OWORD *)(v76 + 16) = v151;
      *(_QWORD *)(v76 + 32) = 0xD00000000000001ALL;
      *(_QWORD *)(v76 + 40) = v142;
      *(_QWORD *)(v76 + 72) = sub_100018148(0, &qword_100486338, NSMutableAttributedString_ptr);
      *(_QWORD *)(v76 + 48) = v69;
      v77 = v69;
      v78 = sub_1000C7998(v76);
      if ((swift_isUniquelyReferenced_nonNull_native(v156) & 1) != 0)
        v79 = v156;
      else
        v79 = sub_100060668(0, *((_QWORD *)v156 + 2) + 1, 1, v156);
      v24 = v43;
      v81 = *((_QWORD *)v79 + 2);
      v80 = *((_QWORD *)v79 + 3);
      if (v81 >= v80 >> 1)
        v79 = sub_100060668((double *)(v80 > 1), v81 + 1, 1, v79);
      *((_QWORD *)v79 + 2) = v81 + 1;
      v156 = v79;
      *(_QWORD *)&v79[v81 + 4] = v78;

LABEL_38:
      v22 = v152;
      v23 = &_sSo7UIColorC17MeasureFoundationE4argbABs6UInt32V_tcfC_ptr;
      v15 = v154;
LABEL_39:
      v125 = v157;
      goto LABEL_40;
    }
    v82 = v73;
    v83 = v145;
    v84 = sub_10006CAB4(v82, v145, type metadata accessor for MeasurementCapture);
    v85 = v83 + *(int *)(v74 + 20);
    v24 = v43;
    if (!v150[2])
      goto LABEL_29;
    v84 = sub_1000C8438(v85);
    if ((v86 & 1) == 0)
      goto LABEL_29;
    v87 = *(_QWORD *)(v150[7] + 8 * v84);
    if ((v87 & 0x8000000000000000) != 0)
      break;
    if (v87 >= *((_QWORD *)v156 + 2))
      goto LABEL_48;
    v88 = v156[v87 + 4];
    v15 = v154;
    if (!*(_QWORD *)(*(_QWORD *)&v88 + 16))
    {
      v160 = 0u;
      v161 = 0u;
LABEL_28:
      v84 = sub_100036600((uint64_t)&v160, (uint64_t *)&unk_10047ED00);
      goto LABEL_29;
    }
    swift_bridgeObjectRetain(*(_QWORD *)&v88);
    v89 = sub_1000C80A8(0xD00000000000001ALL, v139 | 0x8000000000000000);
    if ((v90 & 1) != 0)
    {
      sub_10004F88C(*(_QWORD *)(*(_QWORD *)&v88 + 56) + 32 * v89, (uint64_t)&v160);
    }
    else
    {
      v160 = 0u;
      v161 = 0u;
    }
    swift_bridgeObjectRelease(*(_QWORD *)&v88);
    if (!*((_QWORD *)&v161 + 1))
      goto LABEL_28;
    v91 = sub_100018148(0, &qword_100486338, NSMutableAttributedString_ptr);
    v84 = swift_dynamicCast(&v158, &v160, (char *)&type metadata for Any + 8, v91, 6);
    if ((v84 & 1) != 0)
    {
      v92 = (id)v158;
      objc_msgSend((id)v158, v25[117], v69);

      sub_1000258F8(v145, type metadata accessor for MeasurementCapture);
      v22 = v152;
      goto LABEL_39;
    }
LABEL_29:
    URL.path.getter(v84);
    v94 = v93;
    v95 = objc_allocWithZone((Class)UIImage);
    v96 = String._bridgeToObjectiveC()();
    v97 = objc_msgSend(v95, "initWithContentsOfFile:", v96, swift_bridgeObjectRelease(v94).n128_f64[0]);

    if (!v97)
    {

      sub_1000258F8(v145, type metadata accessor for MeasurementCapture);
      goto LABEL_38;
    }
    v98 = v85;
    v99 = sub_10000EDC8((uint64_t *)&unk_100486350);
    v100 = swift_allocObject(v99, 80, 7);
    *(_OWORD *)(v100 + 16) = v151;
    v101 = v133;
    v102 = static UTType.png.getter();
    v103 = UTType.identifier.getter(v102);
    v105 = v104;
    (*(void (**)(char *, uint64_t))(v134 + 8))(v101, v135);
    *(_QWORD *)(v100 + 32) = v103;
    *(_QWORD *)(v100 + 40) = v105;
    *(_QWORD *)(v100 + 72) = sub_100018148(0, (unint64_t *)&unk_100486360, UIImage_ptr);
    *(_QWORD *)(v100 + 48) = v97;
    v143 = v97;
    v106 = sub_1000C7998(v100);
    if ((swift_isUniquelyReferenced_nonNull_native(v156) & 1) != 0)
      v107 = v156;
    else
      v107 = sub_100060668(0, *((_QWORD *)v156 + 2) + 1, 1, v156);
    v109 = *((_QWORD *)v107 + 2);
    v108 = *((_QWORD *)v107 + 3);
    v24 = &selRef_renderer_didAddNode_forAnchor_;
    if (v109 >= v108 >> 1)
      v107 = sub_100060668((double *)(v108 > 1), v109 + 1, 1, v107);
    *((_QWORD *)v107 + 2) = v109 + 1;
    *(_QWORD *)&v107[v109 + 4] = v106;
    v110 = v107;
    v111 = swift_allocObject(v99, 80, 7);
    *(_OWORD *)(v111 + 16) = v151;
    v112 = v139 | 0x8000000000000000;
    *(_QWORD *)(v111 + 32) = 0xD00000000000001ALL;
    *(_QWORD *)(v111 + 40) = v112;
    *(_QWORD *)(v111 + 72) = sub_100018148(0, &qword_100486338, NSMutableAttributedString_ptr);
    *(_QWORD *)(v111 + 48) = v69;
    v113 = v69;
    v114 = sub_1000C7998(v111);
    v115 = v110;
    v116 = v114;
    v117 = *((_QWORD *)v110 + 2);
    v118 = *((_QWORD *)v115 + 3);
    if (v117 >= v118 >> 1)
      v115 = sub_100060668((double *)(v118 > 1), v117 + 1, 1, v115);
    *((_QWORD *)v115 + 2) = v117 + 1;
    v156 = v115;
    *(_QWORD *)&v115[v117 + 4] = v116;
    v120 = (uint64_t)v136;
    v119 = v137;
    v121 = v138;
    (*(void (**)(char *, uint64_t, uint64_t))(v137 + 16))(v136, v98, v138);
    v122 = v150;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v150);
    *(_QWORD *)&v160 = v122;
    sub_1000BD5C0(v117, v120, isUniquelyReferenced_nonNull_native);
    v150 = (_QWORD *)v160;
    v124 = swift_bridgeObjectRelease(0x8000000000000000);
    (*(void (**)(uint64_t, uint64_t, __n128))(v119 + 8))(v120, v121, v124);

    sub_1000258F8(v145, type metadata accessor for MeasurementCapture);
    v22 = v152;
    v125 = v157;
    v23 = &_sSo7UIColorC17MeasureFoundationE4argbABs6UInt32V_tcfC_ptr;
    v25 = &selRef_renderer_didAddNode_forAnchor_;
    v15 = v154;
LABEL_40:
    sub_1000258F8((uint64_t)v15, type metadata accessor for MeasurementHistoryItem);
    if (!v125)
    {
      swift_bridgeObjectRelease(v130);
      v126 = v156;
      v127 = v150;
      goto LABEL_46;
    }
    v157 = v125 - 1;
    v22 += v148;
  }
  __break(1u);
LABEL_48:
  __break(1u);
}

void sub_10014C6CC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  if ((*((_BYTE *)v0 + qword_100485DA0) & 1) == 0)
  {
    v1 = swift_allocObject(&unk_100448588, 24, 7);
    *(_QWORD *)(v1 + 16) = v0;
    v2 = sub_10000EDC8(&qword_100486320);
    swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
    v3 = v0;
    Future.init(_:)(sub_100150810, v1, v4);
    v5 = sub_100043310((unint64_t *)&unk_100486328, &qword_100486320, (uint64_t)&protocol conformance descriptor for Future<A, B>);
    v6 = Publisher.sink(receiveCompletion:receiveValue:)(nullsub_1, 0, sub_10014C7E4, 0, v2, v5);
    swift_release();
    *(_QWORD *)&v3[qword_100485DD0] = v6;
    swift_release();
    sub_100145C04(0, 1u, 0);
  }
}

void sub_10014C7E4(uint64_t *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  double *v5;
  Class isa;
  _BYTE v7[24];

  v1 = *a1;
  v2 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  if (qword_10047AB68 != -1)
    swift_once(&qword_10047AB68, sub_10011E814);
  v3 = qword_1004AF6B8 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess(qword_1004AF6B8 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState, v7, 1, 0);
  *(double *)(v3 + 56) = *(double *)(v3 + 56) + 1.0;
  v4 = v2;
  v5 = sub_10014FF74(v1);

  sub_10000EDC8(&qword_10047E520);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "setItems:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

}

void sub_10014C8F0(void *a1)
{
  id v1;

  v1 = a1;
  sub_10014C6CC();

}

void sub_10014C924(void *a1)
{
  id v1;

  v1 = a1;
  sub_100145C04(0, 1u, 0);

}

uint64_t sub_10014C968(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, __n128);
  __n128 v10;
  void (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[32];

  v2 = sub_10000EDC8((uint64_t *)&unk_100486260);
  result = __chkstk_darwin(v2);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(void **)(a1 + qword_100485CD8);
  if (v6)
  {
    v7 = v6;
    sub_10018CE84(0);
    v8 = *(_QWORD *)(a1 + qword_100485C88);
    v9 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(a1 + qword_100485CC0) + 400);
    v10 = swift_retain();
    v11 = (void (*)(_BYTE *, _QWORD))v9(v15, v10);
    swift_unknownObjectWeakAssign(v12, v8);
    v11(v15, 0);
    swift_release();
    v14 = type metadata accessor for IndexPath(0, v13);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
    sub_100146AA0(0, (uint64_t)v5);

    return sub_100036600((uint64_t)v5, (uint64_t *)&unk_100486260);
  }
  return result;
}

void sub_10014CA94(void *a1)
{
  id v1;

  v1 = a1;
  sub_100149B34();

}

void sub_10014CAC8()
{
  _swift_stdlib_reportUnimplementedInitializer("Measure.HistoryViewCoordinator", 30, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_10014CAF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + qword_100485C90));
  swift_release(*(_QWORD *)(v0 + qword_100485C98));
  swift_release(*(_QWORD *)(v0 + qword_100485CA0));
  swift_release(*(_QWORD *)(v0 + qword_100485CA8));
  swift_release(*(_QWORD *)(v0 + qword_100485CB0));
  swift_release(*(_QWORD *)(v0 + qword_100485CB8));
  swift_release(*(_QWORD *)(v0 + qword_100485CC0));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100485CC8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100485CD0));

  swift_release(*(_QWORD *)(v0 + qword_100485CF8));
  swift_release(*(_QWORD *)(v0 + qword_100485D20));
  swift_release(*(_QWORD *)(v0 + qword_100485D28));
  swift_release(*(_QWORD *)(v0 + qword_100485D30));
  swift_unknownObjectWeakDestroy(v0 + qword_100485D38, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100485D48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100485D50));
  swift_release(*(_QWORD *)(v0 + qword_100485D58));
  swift_release(*(_QWORD *)(v0 + qword_100485D60));
  swift_release(*(_QWORD *)(v0 + qword_100485D68));
  swift_release(*(_QWORD *)(v0 + qword_100485D70));
  swift_unknownObjectWeakDestroy(v0 + qword_100485DC0, v2);

  return swift_release(*(_QWORD *)(v0 + qword_100485DD0));
}

uint64_t sub_10014CCE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(a1 + qword_100485C90));
  swift_release(*(_QWORD *)(a1 + qword_100485C98));
  swift_release(*(_QWORD *)(a1 + qword_100485CA0));
  swift_release(*(_QWORD *)(a1 + qword_100485CA8));
  swift_release(*(_QWORD *)(a1 + qword_100485CB0));
  swift_release(*(_QWORD *)(a1 + qword_100485CB8));
  swift_release(*(_QWORD *)(a1 + qword_100485CC0));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100485CC8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100485CD0));

  swift_release(*(_QWORD *)(a1 + qword_100485CF8));
  swift_release(*(_QWORD *)(a1 + qword_100485D20));
  swift_release(*(_QWORD *)(a1 + qword_100485D28));
  swift_release(*(_QWORD *)(a1 + qword_100485D30));
  swift_unknownObjectWeakDestroy(a1 + qword_100485D38, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100485D48));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100485D50));
  swift_release(*(_QWORD *)(a1 + qword_100485D58));
  swift_release(*(_QWORD *)(a1 + qword_100485D60));
  swift_release(*(_QWORD *)(a1 + qword_100485D68));
  swift_release(*(_QWORD *)(a1 + qword_100485D70));
  swift_unknownObjectWeakDestroy(a1 + qword_100485DC0, v3);

  return swift_release(*(_QWORD *)(a1 + qword_100485DD0));
}

uint64_t type metadata accessor for HistoryViewCoordinator(uint64_t a1)
{
  uint64_t result;

  result = qword_100485E08;
  if (!qword_100485E08)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HistoryViewCoordinator);
  return result;
}

uint64_t sub_10014CF14(uint64_t a1)
{
  _QWORD v2[45];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[9] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[12] = "\b";
  v2[13] = &unk_1003B90E0;
  v2[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[15] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[16] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[17] = &unk_1003B90F8;
  v2[18] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[19] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[20] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[21] = "\b";
  v2[22] = "\b";
  v2[23] = "\b";
  v2[24] = &unk_1003B9110;
  v2[25] = &unk_1003B90F8;
  v2[26] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[27] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[28] = "\b";
  v2[29] = "\b";
  v2[30] = "\b";
  v2[31] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[32] = &unk_1003B90F8;
  v2[33] = &unk_1003B90F8;
  v2[34] = &unk_1003B90F8;
  v2[35] = &unk_1003B90F8;
  v2[36] = &unk_1003B90F8;
  v2[37] = &unk_1003B90F8;
  v2[38] = &unk_1003B9128;
  v2[39] = &unk_1003B90F8;
  v2[40] = &unk_1003B9140;
  v2[41] = &unk_1003B9110;
  v2[42] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[43] = "\b";
  v2[44] = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_initClassMetadata2(a1, 256, 45, v2, a1 + 200);
}

uint64_t sub_10014D00C()
{
  return type metadata accessor for HistoryViewCoordinator(0);
}

_QWORD *sub_10014D064(id a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  NSString v17;
  Class isa;
  id v19;
  uint64_t ObjectType;
  _QWORD *result;
  uint64_t v22;
  NSString v23;
  Class v24;
  uint64_t v25;
  NSString v26;
  Class v27;
  uint64_t v28;
  NSString v29;
  Class v30;
  uint64_t v31;
  NSString v32;
  Class v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  void (*v37)(_BYTE *, uint64_t, _QWORD *);
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  _BYTE v45[848];
  _BYTE v46[848];
  char v47[32];
  CGRect v48;

  v3 = v2;
  v6 = type metadata accessor for SpatialPlattersHistoryItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = v2 + qword_100485CC8;
  swift_beginAccess(v2 + qword_100485CC8, v47, 0, 0);
  v12 = *(_QWORD *)(*(_QWORD *)v10 + 16);
  if (!v12)
    goto LABEL_9;
  v13 = a2;
  v14 = IndexPath.item.getter(v11);
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v14 >= *(_QWORD *)(*(_QWORD *)v10 + 16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_100036344(*(_QWORD *)v10+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v14, (uint64_t)v9, type metadata accessor for SpatialPlattersHistoryItem);
  v15 = type metadata accessor for MeasurementHistoryItem(0);
  sub_10001F970(&v9[*(int *)(v15 + 28)], v45);
  sub_10001F970(v45, v46);
  v16 = sub_10001F9AC((uint64_t)v46);
  if (v16)
  {
    if (v16 == 1)
    {
      sub_10001F9B8((uint64_t)v46);
      if (*(_QWORD *)&v9[*(int *)(v6 + 20)])
      {
        v17 = String._bridgeToObjectiveC()();
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v19 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v17, isa);

        ObjectType = swift_getObjectType(v19);
        result = (_QWORD *)swift_conformsToProtocol2(ObjectType, &protocol descriptor for HistoryCellProtocol);
        if (!result)
        {
          __break(1u);
LABEL_9:
          v22 = type metadata accessor for LineHistoryCell();
          return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v22)), "init");
        }
LABEL_18:
        v35 = result;
        v36 = swift_getObjectType(v19);
        v37 = (void (*)(_BYTE *, uint64_t, _QWORD *))v35[2];
        v38 = v19;
        v37(v9, v36, v35);

        objc_msgSend(v38, "setSelectionStyle:", 2);
        v39 = (void *)objc_opt_self(UIColor);
        a1 = v38;
        v40 = objc_msgSend(v39, "clearColor");
        objc_msgSend(a1, "setBackgroundColor:", v40);

        if (IndexPath.row.getter(v41) == v12 - 1)
        {
          v42 = *(void **)(v3 + qword_100485C80);
          v43 = a1;
          objc_msgSend(v42, "bounds");
          objc_msgSend(v43, "setSeparatorInset:", 0.0, CGRectGetWidth(v48), 0.0, 0.0);
LABEL_22:

          sub_1000258F8((uint64_t)v9, type metadata accessor for SpatialPlattersHistoryItem);
          return a1;
        }
        v44 = qword_10047A798;
        v13 = a1;
        if (v44 == -1)
        {
LABEL_21:
          objc_msgSend(v13, "setSeparatorInset:", xmmword_1004AF0D0, *(double *)&qword_1004AF0E0, *(double *)&qword_1004AF0E8);
          goto LABEL_22;
        }
LABEL_26:
        swift_once(&qword_10047A798, sub_10000F014);
        goto LABEL_21;
      }
      goto LABEL_15;
    }
  }
  else
  {
    sub_10001F9B8((uint64_t)v46);
    if (!*(_QWORD *)&v9[*(int *)(v6 + 20)])
      goto LABEL_17;
    v23 = String._bridgeToObjectiveC()();
    v24 = IndexPath._bridgeToObjectiveC()().super.isa;
    v19 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v23, v24);

    v25 = swift_getObjectType(v19);
    result = (_QWORD *)swift_conformsToProtocol2(v25, &protocol descriptor for HistoryCellProtocol);
    if (result)
      goto LABEL_18;
    __break(1u);
  }
  sub_10001F9B8((uint64_t)v46);
  v26 = String._bridgeToObjectiveC()();
  v27 = IndexPath._bridgeToObjectiveC()().super.isa;
  v19 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v26, v27);

  v28 = swift_getObjectType(v19);
  result = (_QWORD *)swift_conformsToProtocol2(v28, &protocol descriptor for HistoryCellProtocol);
  if (result)
    goto LABEL_18;
  __break(1u);
LABEL_15:
  v29 = String._bridgeToObjectiveC()();
  v30 = IndexPath._bridgeToObjectiveC()().super.isa;
  v19 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v29, v30);

  v31 = swift_getObjectType(v19);
  result = (_QWORD *)swift_conformsToProtocol2(v31, &protocol descriptor for HistoryCellProtocol);
  if (result)
    goto LABEL_18;
  __break(1u);
LABEL_17:
  v32 = String._bridgeToObjectiveC()();
  v33 = IndexPath._bridgeToObjectiveC()().super.isa;
  v19 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v32, v33);

  v34 = swift_getObjectType(v19);
  result = (_QWORD *)swift_conformsToProtocol2(v34, &protocol descriptor for HistoryCellProtocol);
  if (result)
    goto LABEL_18;
  __break(1u);
  return result;
}

void sub_10014D650(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  double v14;
  id v15;
  unint64_t v16;
  Class isa;
  id v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, __n128);
  __n128 v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t KeyPath;
  uint64_t v54;
  id v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  _QWORD v65[3];

  v3 = v2;
  v6 = sub_10000EDC8((uint64_t *)&unk_100486260);
  __chkstk_darwin(v6);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SpatialPlattersHistoryItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((*(_BYTE *)(v2 + qword_100485DA0) & 1) == 0)
  {
    v13 = v2 + qword_100485CC8;
    *(_QWORD *)&v14 = swift_beginAccess(v2 + qword_100485CC8, (char *)v65 + 1, 0, 0).n128_u64[0];
    if (*(_QWORD *)(*(_QWORD *)v13 + 16))
    {
      v15 = objc_msgSend(*(id *)(v2 + qword_100485C80), "superview", v14);
      v64 = v15;
      if (v15)
      {
        v16 = IndexPath.item.getter(v15);
        if ((v16 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v16 < *(_QWORD *)(*(_QWORD *)v13 + 16))
        {
          sub_100036344(*(_QWORD *)v13+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v16, (uint64_t)v12, type metadata accessor for SpatialPlattersHistoryItem);
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          v18 = objc_msgSend(a1, "cellForRowAtIndexPath:", isa);

          if (v18)
          {
            ObjectType = swift_getObjectType(v18);
            v20 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HistoryCellProtocol);
            if (v20)
              v21 = v20;
            else
              v21 = 0;
            if (v20)
              v22 = v18;
            else
              v22 = 0;
            if (v22)
            {
              v23 = swift_getObjectType(v22);
              (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v23, v21);
            }

          }
          v24 = sub_100193754(v12);
          v26 = v25;
          v28 = v27;
          v29 = v12[1];
          v62 = (id)*v12;
          v63 = v24;
          v30 = *(double *)(v3 + qword_100485CE0);
          v31 = *(double *)(v3 + qword_100485CE0 + 8);
          v32 = *(double *)(v3 + qword_100485CE0 + 16);
          v33 = *(double *)(v3 + qword_100485CE0 + 24);
          v34 = swift_getObjectType(v25);
          v35 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v28 + 72);
          v36 = swift_bridgeObjectRetain(v29);
          v37 = v35(v34, v28, v36);
          if (v37)
          {
            v38 = (void *)v37;
            v39 = objc_opt_self(UITableView);
            v40 = (void *)swift_dynamicCastObjCClass(v38, v39);
            if (!v40)

          }
          else
          {
            v40 = 0;
          }
          v41 = *(void **)(v3 + qword_100485D10);
          v42 = objc_allocWithZone((Class)type metadata accessor for SpatialGenericPlatter(0));
          v43 = v41;
          v44 = v26;
          v45 = v63;
          v46 = (uint64_t)v62;
          v62 = v45;
          v63 = v44;
          sub_10018D274(v46, v29, 1, (char *)v45, v44, v28, v40, v43, v30, v31, v32, v33);
          v47 = qword_100485CD8;
          v48 = *(void **)(v3 + qword_100485CD8);
          *(_QWORD *)(v3 + qword_100485CD8) = v49;

          if (*(_QWORD *)(v3 + v47))
          {
            objc_msgSend(v64, "addSubview:");
            v50 = *(void **)(v3 + v47);
            if (v50)
            {
              objc_msgSend(v50, "layoutIfNeeded");
              v51 = *(void **)(v3 + v47);
              if (v51)
              {
                v52 = *(_QWORD *)(v3 + qword_100485CE8);
                KeyPath = swift_getKeyPath(&unk_1003B9168);
                v54 = swift_getKeyPath(&unk_1003B9190);
                v55 = v51;
                static Published.subscript.getter(v65, v52, KeyPath, v54);
                swift_release();
                swift_release();
                sub_10018CCC8(v65[0]);

                v56 = *(void **)(v3 + v47);
                if (v56)
                {
                  objc_msgSend(v56, "setNeedsLayout");
                  v57 = *(void **)(v3 + v47);
                  if (v57)
                  {
                    objc_msgSend(v57, "layoutIfNeeded");
                    v59 = type metadata accessor for IndexPath(0, v58);
                    v60 = *(_QWORD *)(v59 - 8);
                    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v8, a2, v59);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v8, 0, 1, v59);
                    sub_100146AA0(1, (uint64_t)v8);

                    sub_100036600((uint64_t)v8, (uint64_t *)&unk_100486260);
                    sub_1000258F8((uint64_t)v12, type metadata accessor for SpatialPlattersHistoryItem);
                    return;
                  }
LABEL_33:
                  __break(1u);
                  return;
                }
LABEL_32:
                __break(1u);
                goto LABEL_33;
              }
LABEL_31:
              __break(1u);
              goto LABEL_32;
            }
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        __break(1u);
        goto LABEL_29;
      }
    }
  }
}

void *sub_10014DBF8(void *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *result;
  uint64_t v18;
  uint64_t *v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD *, __n128);
  __n128 v35;
  void (*v36)(_QWORD *, _QWORD, __n128);
  uint64_t *v37;
  uint64_t *v38;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t KeyPath;
  uint64_t v49;
  Class isa;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  CGFloat Height;
  uint64_t v60;
  double v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  double v65;
  double v66;
  double v67;
  uint64_t v68;
  uint64_t *v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  void *Strong;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  Class v86;
  double v87;
  id v88;
  Class v89;
  uint64_t v90;
  void *v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(_QWORD *, __n128);
  __n128 v99;
  void (*v100)(_QWORD *, _QWORD);
  _QWORD *v101;
  char *v102;
  Class v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  void *v107;
  _BYTE *v108;
  _QWORD aBlock[6];
  uint64_t v110;
  char v111[32];
  CGRect v112;
  CGRect v113;

  v4 = v3;
  v8 = type metadata accessor for IndexPath(0, a2);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SpatialPlattersHistoryItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (void *)__chkstk_darwin(v14);
  v19 = (uint64_t *)((char *)&v104 - v18);
  if (a2 != 1)
    return result;
  v106 = v11;
  v4[qword_100485D00] = 0;
  v108 = *(_BYTE **)&v4[qword_100485CE8];
  result = (void *)swift_unknownObjectUnownedLoadStrong(&v108[OBJC_IVAR____TtC7Measure23CardContainerController_panGestureRecognizer]);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v20 = result;
  objc_msgSend(result, "setEnabled:", 1);

  v22 = IndexPath.item.getter(v21);
  v23 = &v4[qword_100485CC8];
  swift_beginAccess(&v4[qword_100485CC8], v111, 0, 0);
  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  v24 = *(_QWORD *)v23;
  if (v22 >= *(_QWORD *)(*(_QWORD *)v23 + 16))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    swift_once(&qword_10047A750, sub_10000EF04);
    goto LABEL_24;
  }
  v104 = v9;
  v105 = v8;
  sub_100036344(v24+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v22, (uint64_t)v19, type metadata accessor for SpatialPlattersHistoryItem);
  v26 = *v19;
  v25 = v19[1];
  swift_beginAccess(&v4[qword_100485CD0], aBlock, 33, 0);
  swift_bridgeObjectRetain(v25);
  sub_1001933A4(v26, v25);
  v28 = v27;
  swift_endAccess(aBlock);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v28);
  v30 = IndexPath.item.getter(v29);
  swift_beginAccess(v23, aBlock, 33, 0);
  sub_1000283AC(v30, (uint64_t)v16);
  sub_1000258F8((uint64_t)v16, type metadata accessor for SpatialPlattersHistoryItem);
  swift_endAccess(aBlock);
  v108[OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded] = sub_100142A10() & 1;
  v31 = *v19;
  v32 = v19[1];
  v33 = **(_QWORD **)&v4[qword_100485CB8];
  v107 = a1;
  v34 = *(uint64_t (**)(_QWORD *, __n128))(v33 + 400);
  swift_bridgeObjectRetain(v32);
  v35 = swift_retain();
  v36 = (void (*)(_QWORD *, _QWORD, __n128))v34(aBlock, v35);
  v38 = v37;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v37);
  v110 = *v38;
  *v38 = 0x8000000000000000;
  sub_10014FAAC(v31, v32, isUniquelyReferenced_nonNull_native);
  v41 = v40;
  v42 = *v38;
  *v38 = v110;
  v43 = v107;
  swift_bridgeObjectRelease(v42);
  v44 = swift_bridgeObjectRelease(v41);
  v36(aBlock, 0, v44);
  swift_release();
  v45 = qword_100485CF8;
  v46 = *(_QWORD *)&v4[qword_100485CF8];
  swift_retain();
  v47 = sub_100142BEC();
  KeyPath = swift_getKeyPath(&unk_1003B92C8);
  v49 = swift_getKeyPath(&unk_1003B92F0);
  *(double *)aBlock = v47;
  static Published.subscript.setter(aBlock, v46, KeyPath, v49);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v43, "rectForRowAtIndexPath:", isa);
  v52 = v51;
  v54 = v53;
  v56 = v55;
  v58 = v57;

  v112.origin.x = v52;
  v112.origin.y = v54;
  v112.size.width = v56;
  v112.size.height = v58;
  Height = CGRectGetHeight(v112);
  v60 = qword_100485D08;
  v61 = *(double *)&v4[qword_100485D08] - Height;
  *(double *)&v4[qword_100485D08] = v61;
  v62 = *(_QWORD *)&v4[qword_100485C88];
  sub_100018BA0(v62);
  if (v61 >= v63)
  {
    v93 = sub_10000EDC8(&qword_1004862F8);
    v81 = v104;
    v94 = *(unsigned __int8 *)(v104 + 80);
    v95 = (v94 + 32) & ~v94;
    v96 = swift_allocObject(v93, v95 + *(_QWORD *)(v104 + 72), v94 | 7);
    *(_OWORD *)(v96 + 16) = xmmword_1003B0BD0;
    v85 = v105;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v96 + v95, a3, v105);
    v89 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v43, "deleteRowsAtIndexPaths:withRowAnimation:", v89, 100, swift_bridgeObjectRelease(v96).n128_f64[0]);
  }
  else
  {
    v64 = *(_QWORD *)&v4[v45];
    swift_retain();
    sub_100018BA0(v62);
    if (*(double *)&v4[v60] < v65)
      v65 = *(double *)&v4[v60];
    v66 = v65 + -0.5;
    if (qword_10047A790 != -1)
      swift_once(&qword_10047A790, sub_10000F000);
    v67 = *(double *)&qword_1004AF0C8;
    v68 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
    if ((static UIDevice.isIPhone()(v68) & 1) != 0)
      v69 = &OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
    else
      v69 = &OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
    objc_msgSend(*(id *)(v62 + *v69), "bounds");
    v70 = v66 + v67 + CGRectGetHeight(v113);
    v71 = swift_getKeyPath(&unk_1003B9310);
    v72 = swift_getKeyPath(&unk_1003B9338);
    *(double *)aBlock = v70;
    static Published.subscript.setter(aBlock, v64, v71, v72);
    if (*(_QWORD *)(*(_QWORD *)v23 + 16) == 1 && (sub_100142A10() & 1) == 0)
    {
      v73 = swift_getKeyPath(&unk_1003B9168);
      v74 = swift_getKeyPath(&unk_1003B9190);
      LOBYTE(aBlock[0]) = 1;
      v75 = v108;
      static Published.subscript.setter(aBlock, v75, v73, v74);
      sub_100184D4C();
      v76 = &v75[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
      *(_QWORD *)v76 = 0;
      v76[8] = 1;
      v43 = v107;
      v77 = &v75[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture];
      Strong = (void *)swift_unknownObjectWeakLoadStrong(&v75[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture], v78);
      objc_msgSend(Strong, "setEnabled:", 1);

      swift_unknownObjectWeakAssign(v77, 0);
    }
    v80 = sub_10000EDC8(&qword_1004862F8);
    v81 = v104;
    v82 = *(unsigned __int8 *)(v104 + 80);
    v83 = (v82 + 32) & ~v82;
    v84 = swift_allocObject(v80, v83 + *(_QWORD *)(v104 + 72), v82 | 7);
    *(_OWORD *)(v84 + 16) = xmmword_1003B0BD0;
    v85 = v105;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v84 + v83, a3, v105);
    v86 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v43, "deleteRowsAtIndexPaths:withRowAnimation:", v86, 100, swift_bridgeObjectRelease(v84).n128_f64[0]);

    if (qword_10047ABB0 != -1)
      swift_once(&qword_10047ABB0, sub_1001427C4);
    v87 = *(double *)&qword_100485C60;
    if (qword_10047ABA8 != -1)
      swift_once(&qword_10047ABA8, sub_1001427B4);
    v88 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithDampingRatio:initialVelocity:", v87, *(double *)&qword_100485C50, *(double *)algn_100485C58);
    v89 = (Class)objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v88, 0.4);
    v90 = swift_allocObject(&unk_100448380, 24, 7);
    *(_QWORD *)(v90 + 16) = v4;
    aBlock[4] = sub_1001509E0;
    aBlock[5] = v90;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003ECA0;
    aBlock[3] = &unk_100448398;
    v91 = _Block_copy(aBlock);
    v92 = v4;
    -[objc_class addAnimations:](v89, "addAnimations:", v91, swift_release().n128_f64[0]);
    _Block_release(v91);
    -[objc_class startAnimation](v89, "startAnimation");

  }
  v97 = *(_QWORD *)(*(_QWORD *)v23 + 16);
  v98 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)&v4[qword_100485C98] + 400);
  v99 = swift_retain();
  v100 = (void (*)(_QWORD *, _QWORD))v98(aBlock, v99);
  *v101 = v97;
  v100(aBlock, 0);
  swift_release();
  v102 = v106;
  IndexPath.init(row:section:)(*(_QWORD *)(*(_QWORD *)v23 + 16) - 1, 0);
  v103 = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v81 + 8))(v102, v85);
  v22 = (unint64_t)objc_msgSend(v43, "cellForRowAtIndexPath:", v103);

  if (!v22)
    goto LABEL_25;
  if (qword_10047A750 != -1)
    goto LABEL_31;
LABEL_24:
  objc_msgSend((id)v22, "setSeparatorInset:", 0.0, *(double *)&qword_1004AF088, 0.0, 0.0);

LABEL_25:
  if (!*(_QWORD *)(*(_QWORD *)v23 + 16))
    sub_100145C04(0, 1u, 0);
  return (void *)sub_1000258F8((uint64_t)v19, type metadata accessor for SpatialPlattersHistoryItem);
}

void sub_10014E83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, __n128);
  __n128 v10;
  void (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[32];

  v1 = v0;
  v2 = sub_10000EDC8((uint64_t *)&unk_100486260);
  __chkstk_darwin(v2);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = objc_msgSend((id)objc_opt_self(UIMenuController), "sharedMenuController");
  objc_msgSend(v5, "hideMenu");

  v6 = *(void **)(v1 + qword_100485CD8);
  if (v6)
  {
    v7 = v6;
    sub_10018CE84(0);
    v8 = *(_QWORD *)(v1 + qword_100485C88);
    v9 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v1 + qword_100485CC0) + 400);
    v10 = swift_retain();
    v11 = (void (*)(_BYTE *, _QWORD))v9(v15, v10);
    swift_unknownObjectWeakAssign(v12, v8);
    v11(v15, 0);
    swift_release();
    v14 = type metadata accessor for IndexPath(0, v13);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
    sub_100146AA0(0, (uint64_t)v4);

    sub_100036600((uint64_t)v4, (uint64_t *)&unk_100486260);
  }
}

uint64_t sub_10014E99C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, __n128);
  __n128 v9;
  void (*v10)(_BYTE *, _QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[32];

  v1 = sub_10000EDC8((uint64_t *)&unk_100486260);
  result = __chkstk_darwin(v1);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(void **)(v0 + qword_100485CD8);
  if (v5)
  {
    v6 = v5;
    sub_10018CE84(0);
    v7 = *(_QWORD *)(v0 + qword_100485C88);
    v8 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v0 + qword_100485CC0) + 400);
    v9 = swift_retain();
    v10 = (void (*)(_BYTE *, _QWORD))v8(v14, v9);
    swift_unknownObjectWeakAssign(v11, v7);
    v10(v14, 0);
    swift_release();
    v13 = type metadata accessor for IndexPath(0, v12);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
    sub_100146AA0(0, (uint64_t)v4);

    return sub_100036600((uint64_t)v4, (uint64_t *)&unk_100486260);
  }
  return result;
}

void sub_10014EAC8()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t (*v5)(void ***, __n128);
  __n128 v6;
  void (*v7)(void ***, _QWORD);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;

  v1 = *(void **)&v0[qword_100485CD8];
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    sub_10018CE84(0);
    v4 = *(_QWORD *)&v0[qword_100485C88];
    v5 = *(uint64_t (**)(void ***, __n128))(**(_QWORD **)&v0[qword_100485CC0] + 400);
    v6 = swift_retain();
    v7 = (void (*)(void ***, _QWORD))v5(&v16, v6);
    swift_unknownObjectWeakAssign(v8, v4);
    v7(&v16, 0);
    swift_release();
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_100447AE8, 24, 7);
    *(_QWORD *)(v10 + 16) = v2;
    v20 = sub_10014F084;
    v21 = v10;
    v16 = _NSConcreteStackBlock;
    v17 = 1107296256;
    v18 = sub_10003ECA0;
    v19 = &unk_100447B00;
    v11 = _Block_copy(&v16);
    v12 = v2;
    swift_release();
    v13 = swift_allocObject(&unk_100447B38, 24, 7);
    *(_QWORD *)(v13 + 16) = v12;
    v20 = sub_10014F0A4;
    v21 = v13;
    v16 = _NSConcreteStackBlock;
    v17 = 1107296256;
    v18 = sub_10002E168;
    v19 = &unk_100447B50;
    v14 = _Block_copy(&v16);
    v15 = v12;
    swift_release();
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 0, v11, v14, 0.2, 0.0);
    _Block_release(v14);
    _Block_release(v11);

  }
}

id sub_10014EC94(uint64_t a1)
{
  void *v2;
  _QWORD v4[6];

  v2 = *(void **)(*(_QWORD *)(a1 + qword_100485C88) + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
  v4[0] = 0x3FF0000000000000;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = 0x3FF0000000000000;
  v4[4] = 0;
  v4[5] = 0;
  objc_msgSend(v2, "setTransform:", v4);
  objc_msgSend(v2, "setAlpha:", 1.0);
  return objc_msgSend(*(id *)(a1 + qword_100485C80), "layoutIfNeeded");
}

void sub_10014ED24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;

  if ((*(_BYTE *)(a2 + qword_100485DA0) & 1) == 0)
  {
    v3 = qword_100485CD8;
    v4 = *(void **)(a2 + qword_100485CD8);
    if (v4)
    {
      v5 = v4;
      sub_10018D024();
      objc_msgSend(v5, "removeFromSuperview");

      v6 = *(void **)(a2 + v3);
    }
    else
    {
      v6 = 0;
    }
    *(_QWORD *)(a2 + v3) = 0;

  }
}

void sub_10014EDB4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *ObjectType;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  void **v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  v5 = *(double *)(v1 + qword_100485CE0);
  v6 = *(double *)(v1 + qword_100485CE0 + 8);
  v7 = *(double *)(v1 + qword_100485CE0 + 16);
  v8 = *(double *)(v1 + qword_100485CE0 + 24);
  v9 = *(void **)(v1 + qword_100485D10);
  v10 = *(void ***)(v1 + qword_100485D70);
  v11 = objc_allocWithZone(ObjectType);
  v12 = v9;
  swift_retain();
  sub_100143148(v12, v10, 1, v5, v6, v7, v8);
  v14 = v13;
  if (*(_QWORD *)(v2 + qword_100485D28))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  if (*(_QWORD *)(v2 + qword_100485D20))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  if (*(_QWORD *)(v2 + qword_100485D30))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  a1[3] = ObjectType;
  *a1 = v14;
}

uint64_t sub_10014EF3C(void *a1, id a2)
{
  uint64_t v2;
  id v5;
  id v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v5 = objc_msgSend(a2, "view");
  v6 = objc_msgSend(a1, "view");
  v7 = v6;
  if (v5)
  {

    if (v7)
    {

      if (v5 == v7)
        return 1;
    }
  }
  else
  {
    if (!v6)
      return 1;

  }
  result = (uint64_t)objc_msgSend(a2, "view");
  if (result)
  {
    v9 = result;
    v10 = *(_QWORD *)(v2 + qword_100485C88);

    return v9 == v10;
  }
  return result;
}

uint64_t sub_10014F060()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10014F084()
{
  uint64_t v0;

  return sub_10014EC94(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10014F08C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10014F09C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10014F0A4(uint64_t a1)
{
  uint64_t v1;

  sub_10014ED24(a1, *(_QWORD *)(v1 + 16));
}

id sub_10014F0AC()
{
  uint64_t v0;

  return sub_10014A7D4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10014F0B4(uint64_t a1)
{
  uint64_t v1;

  sub_10014A8B8(a1, *(_QWORD *)(v1 + 16));
}

void sub_10014F0BC()
{
  uint64_t v0;

  sub_10014A974(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10014F0C4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003B9168);
  v5 = swift_getKeyPath(&unk_1003B9190);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

void sub_10014F140(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003B9168);
  v5 = swift_getKeyPath(&unk_1003B9190);
  v6 = v2;
  static Published.subscript.setter(&v6, v3, KeyPath, v5);
  sub_100184D4C();
}

uint64_t sub_10014F1C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014F1EC()
{
  uint64_t v0;

  return sub_10014A574(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10014F1F8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_10000EDC8((uint64_t *)&unk_100486260) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10014A3A4(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_10014F23C()
{
  uint64_t v0;

  sub_10014A668(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10014F244()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014F258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = *(_QWORD *)(sub_10000EDC8((uint64_t *)&unk_100486260) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v6 = type metadata accessor for IndexPath(0, v5);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  v8 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 8;

  return swift_deallocObject(v0, v9, v2 | 7);
}

uint64_t sub_10014F30C()
{
  uint64_t v0;

  return sub_10014A768(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10014F318@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 256);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_10014F328@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 256);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_10014F344@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 264);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_10014F354@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 264);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_10014F368()
{
  uint64_t v0;

  return sub_1001444FC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10014F370()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014F380(__int16 a1)
{
  sub_1001445E4(a1 & 0x101);
}

uint64_t sub_10014F3AC(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  if (a1[2])
    v2 = 0x10000;
  else
    v2 = 0;
  if (a1[1])
    v3 = 256;
  else
    v3 = 0;
  return (*(uint64_t (**)(_QWORD))(v1 + 16))(v3 | *a1 | v2);
}

uint64_t sub_10014F3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

double sub_10014F41C(uint64_t a1)
{
  uint64_t v1;

  return sub_100144A68(a1, v1);
}

void sub_10014F424(uint64_t a1)
{
  uint64_t v1;

  sub_100145A90(a1, v1);
}

uint64_t sub_10014F42C()
{
  uint64_t v0;

  return sub_100144410(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10014F434()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014F444()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + qword_100485C80), "layoutIfNeeded");
}

uint64_t sub_10014F460()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

void sub_10014F484(uint64_t a1)
{
  uint64_t v1;

  sub_10014A318(a1, *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_10014F494()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10014F4B8()
{
  uint64_t v0;

  return sub_10014A230(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_10014F4C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014F4D4()
{
  uint64_t v0;

  sub_10014A048(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_10014F4E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014F504()
{
  uint64_t v0;

  return sub_10016A70C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10014F510()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014F534()
{
  uint64_t v0;

  return sub_100149E3C(*(unsigned __int8 *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10014F540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;

  v1 = v0;
  v2 = type metadata accessor for MeasurementsHistory(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  v7 = v1 + v5;
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + v5));
  v8 = v1 + v5 + *(int *)(v2 + 20);
  v9 = type metadata accessor for MeasurementHistoryItem(0);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  if (!v10(v8, 1, v9))
  {
    v62 = v6;
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + 24));
    v11 = v8 + *(int *)(v9 + 24);
    v12 = type metadata accessor for MeasurementCapture(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
      v61 = v1;
      v13 = type metadata accessor for URL(0);
      v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
      v14(v11, v13);
      v15 = v13;
      v1 = v61;
      v14(v11 + *(int *)(v12 + 20), v15);
      v5 = (v4 + 16) & ~v4;
    }
    v16 = v8 + *(int *)(v9 + 28);
    v57 = *(_OWORD *)(v16 + 464);
    v59 = *(_OWORD *)(v16 + 480);
    v53 = *(_OWORD *)(v16 + 432);
    v55 = *(_OWORD *)(v16 + 448);
    v49 = *(_OWORD *)(v16 + 400);
    v51 = *(_OWORD *)(v16 + 416);
    v45 = *(_OWORD *)(v16 + 368);
    v47 = *(_OWORD *)(v16 + 384);
    v41 = *(_OWORD *)(v16 + 336);
    v43 = *(_OWORD *)(v16 + 352);
    v37 = *(_OWORD *)(v16 + 304);
    v39 = *(_OWORD *)(v16 + 320);
    v35 = *(_OWORD *)(v16 + 288);
    v33 = *(_OWORD *)(v16 + 272);
    v31 = *(_OWORD *)(v16 + 256);
    v29 = *(_OWORD *)(v16 + 240);
    sub_100020E24(*(_QWORD *)v16, *(_QWORD *)(v16 + 8), *(_QWORD *)(v16 + 16), *(_QWORD *)(v16 + 24), *(_QWORD *)(v16 + 32), *(_QWORD *)(v16 + 40), *(_QWORD *)(v16 + 48), *(_QWORD *)(v16 + 56), *(_QWORD *)(v16 + 64), *(_QWORD *)(v16 + 72), *(_QWORD *)(v16 + 80), *(_QWORD *)(v16 + 88), *(_QWORD *)(v16 + 96), *(_QWORD *)(v16 + 104), *(_QWORD *)(v16 + 112), *(_QWORD *)(v16 + 120), *(_QWORD *)(v16 + 128), *(_QWORD *)(v16 + 136), *(_QWORD *)(v16 + 144),
      *(_QWORD *)(v16 + 152),
      *(_QWORD *)(v16 + 160),
      *(_QWORD *)(v16 + 168),
      *(_QWORD *)(v16 + 176),
      *(_QWORD *)(v16 + 184),
      *(_QWORD *)(v16 + 192),
      *(_QWORD *)(v16 + 200),
      *(_QWORD *)(v16 + 208),
      *(_QWORD *)(v16 + 216),
      *(_QWORD *)(v16 + 224),
      *(_QWORD *)(v16 + 232),
      v29,
      *((uint64_t *)&v29 + 1),
      v31,
      *((uint64_t *)&v31 + 1),
      v33,
      *((uint64_t *)&v33 + 1),
      v35,
      *((uint64_t *)&v35 + 1),
      v37,
      *((uint64_t *)&v37 + 1),
      v39,
      *((uint64_t *)&v39 + 1),
      v41,
      *((uint64_t *)&v41 + 1),
      v43,
      *((uint64_t *)&v43 + 1),
      v45,
      *((uint64_t *)&v45 + 1),
      v47,
      *((uint64_t *)&v47 + 1),
      v49,
      *((uint64_t *)&v49 + 1),
      v51,
      *((uint64_t *)&v51 + 1),
      v53,
      *((uint64_t *)&v53 + 1),
      v55,
      *((uint64_t *)&v55 + 1),
      v57,
      *((uint64_t *)&v57 + 1),
      v59,
      *((uint64_t *)&v59 + 1),
      *(_QWORD *)(v16 + 496));
    v6 = v62;
  }
  v17 = v7 + *(int *)(v2 + 24);
  if (!v10(v17, 1, v9))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + 24));
    v18 = v17 + *(int *)(v9 + 24);
    v19 = type metadata accessor for MeasurementCapture(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
    {
      v20 = v6;
      v21 = type metadata accessor for URL(0);
      v22 = v5;
      v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8);
      v23(v18, v21);
      v24 = v21;
      v6 = v20;
      v23(v18 + *(int *)(v19 + 20), v24);
      v5 = v22;
    }
    v25 = v17 + *(int *)(v9 + 28);
    v58 = *(_OWORD *)(v25 + 464);
    v60 = *(_OWORD *)(v25 + 480);
    v54 = *(_OWORD *)(v25 + 432);
    v56 = *(_OWORD *)(v25 + 448);
    v50 = *(_OWORD *)(v25 + 400);
    v52 = *(_OWORD *)(v25 + 416);
    v46 = *(_OWORD *)(v25 + 368);
    v48 = *(_OWORD *)(v25 + 384);
    v42 = *(_OWORD *)(v25 + 336);
    v44 = *(_OWORD *)(v25 + 352);
    v38 = *(_OWORD *)(v25 + 304);
    v40 = *(_OWORD *)(v25 + 320);
    v36 = *(_OWORD *)(v25 + 288);
    v34 = *(_OWORD *)(v25 + 272);
    v32 = *(_OWORD *)(v25 + 256);
    v30 = *(_OWORD *)(v25 + 240);
    sub_100020E24(*(_QWORD *)v25, *(_QWORD *)(v25 + 8), *(_QWORD *)(v25 + 16), *(_QWORD *)(v25 + 24), *(_QWORD *)(v25 + 32), *(_QWORD *)(v25 + 40), *(_QWORD *)(v25 + 48), *(_QWORD *)(v25 + 56), *(_QWORD *)(v25 + 64), *(_QWORD *)(v25 + 72), *(_QWORD *)(v25 + 80), *(_QWORD *)(v25 + 88), *(_QWORD *)(v25 + 96), *(_QWORD *)(v25 + 104), *(_QWORD *)(v25 + 112), *(_QWORD *)(v25 + 120), *(_QWORD *)(v25 + 128), *(_QWORD *)(v25 + 136), *(_QWORD *)(v25 + 144),
      *(_QWORD *)(v25 + 152),
      *(_QWORD *)(v25 + 160),
      *(_QWORD *)(v25 + 168),
      *(_QWORD *)(v25 + 176),
      *(_QWORD *)(v25 + 184),
      *(_QWORD *)(v25 + 192),
      *(_QWORD *)(v25 + 200),
      *(_QWORD *)(v25 + 208),
      *(_QWORD *)(v25 + 216),
      *(_QWORD *)(v25 + 224),
      *(_QWORD *)(v25 + 232),
      v30,
      *((uint64_t *)&v30 + 1),
      v32,
      *((uint64_t *)&v32 + 1),
      v34,
      *((uint64_t *)&v34 + 1),
      v36,
      *((uint64_t *)&v36 + 1),
      v38,
      *((uint64_t *)&v38 + 1),
      v40,
      *((uint64_t *)&v40 + 1),
      v42,
      *((uint64_t *)&v42 + 1),
      v44,
      *((uint64_t *)&v44 + 1),
      v46,
      *((uint64_t *)&v46 + 1),
      v48,
      *((uint64_t *)&v48 + 1),
      v50,
      *((uint64_t *)&v50 + 1),
      v52,
      *((uint64_t *)&v52 + 1),
      v54,
      *((uint64_t *)&v54 + 1),
      v56,
      *((uint64_t *)&v56 + 1),
      v58,
      *((uint64_t *)&v58 + 1),
      v60,
      *((uint64_t *)&v60 + 1),
      *(_QWORD *)(v25 + 496));
  }
  v26 = (v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = v26 + 8;

  return swift_deallocObject(v1, v27, v4 | 7);
}

size_t sub_10014FA6C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for MeasurementsHistory(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100144D18(v0 + v2, *(uint64_t (**)(uint64_t))(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10014FAAC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t *v34;
  uint64_t result;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  _QWORD v45[9];

  v4 = v3;
  v8 = *v3;
  Hasher.init(_seed:)(v45);
  String.hash(into:)(v45, a1, a2);
  v9 = Hasher._finalize()();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  v12 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v13 = *(_QWORD *)(v8 + 48);
    v14 = (_QWORD *)(v13 + 16 * v11);
    v15 = v14[1];
    v16 = *v14 == a1 && v15 == a2;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) != 0)
    {
LABEL_7:
      v17 = 0;
      v18 = 1;
      goto LABEL_18;
    }
    v19 = ~v10;
    v11 = (v11 + 1) & ~v10;
    if (((*(_QWORD *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
    {
      v17 = 1;
      while (1)
      {
        v20 = (_QWORD *)(v13 + 16 * v11);
        v21 = v20[1];
        v22 = *v20 == a1 && v21 == a2;
        if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, a1, a2, 0) & 1) != 0)
          goto LABEL_7;
        v11 = (v11 + 1) & v19;
        if (((*(_QWORD *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        {
          v18 = 0;
          goto LABEL_18;
        }
      }
    }
  }
  v18 = 0;
  v17 = 1;
LABEL_18:
  v23 = *(_QWORD *)(v8 + 16);
  v24 = v23 + v17;
  if (__OFADD__(v23, v17))
  {
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v25 = *(_QWORD *)(v8 + 24);
  if (v25 >= v24 && (a3 & 1) != 0)
  {
    if (!v18)
      goto LABEL_46;
    goto LABEL_36;
  }
  if ((a3 & 1) != 0)
  {
    sub_100192AD4(v24);
  }
  else
  {
    if (v25 >= v24)
    {
      sub_100192F48();
      if (!v18)
      {
LABEL_46:
        v40 = *v4;
        *(_QWORD *)(*v4 + 8 * (v11 >> 6) + 56) |= 1 << v11;
        v41 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * v11);
        *v41 = a1;
        v41[1] = a2;
        v42 = *(_QWORD *)(v40 + 16);
        v43 = __OFADD__(v42, 1);
        v44 = v42 + 1;
        if (!v43)
        {
          result = 0;
          *(_QWORD *)(v40 + 16) = v44;
          return result;
        }
        goto LABEL_49;
      }
LABEL_36:
      v34 = (uint64_t *)(*(_QWORD *)(*v4 + 48) + 16 * v11);
      result = *v34;
      *v34 = a1;
      v34[1] = a2;
      return result;
    }
    sub_1001930F8(v24);
  }
  v26 = *v4;
  Hasher.init(_seed:)(v45);
  String.hash(into:)(v45, a1, a2);
  v27 = Hasher._finalize()();
  v28 = -1 << *(_BYTE *)(v26 + 32);
  v11 = v27 & ~v28;
  v29 = v26 + 56;
  if (((*(_QWORD *)(v26 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    goto LABEL_45;
  v30 = *(_QWORD *)(v26 + 48);
  v31 = (_QWORD *)(v30 + 16 * v11);
  v32 = v31[1];
  v33 = *v31 == a1 && v32 == a2;
  if (!v33 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v31, v32, a1, a2, 0) & 1) == 0)
  {
    v36 = ~v28;
    while (1)
    {
      v11 = (v11 + 1) & v36;
      if (((*(_QWORD *)(v29 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        break;
      v37 = (_QWORD *)(v30 + 16 * v11);
      v38 = v37[1];
      v39 = *v37 == a1 && v38 == a2;
      if (v39 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v37, v38, a1, a2, 0) & 1) != 0)
        goto LABEL_35;
    }
LABEL_45:
    if ((v18 & 1) == 0)
      goto LABEL_46;
    goto LABEL_50;
  }
LABEL_35:
  if ((v18 & 1) != 0)
    goto LABEL_36;
LABEL_50:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

#error "10014FF4C: call analysis failed (funcsize=118)"

double *sub_10014FF74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t inited;
  NSAttributedStringDocumentAttributeKey v17;
  uint64_t v18;
  NSAttributedStringDocumentType v19;
  NSString *v20;
  NSString *v21;
  unint64_t v22;
  Class isa;
  double v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  Class v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  CFStringRef v55;
  uint64_t v56;
  __int128 v57;
  CFStringRef v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  __int128 v63;
  NSAttributedStringDocumentType v64;
  NSAttributedStringDocumentAttributeKey v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  id v71;
  char v72[80];
  char v73[8];
  id v74;

  v61 = type metadata accessor for String.Encoding(0);
  v60 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v59 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return _swiftEmptyArrayStorage;
  v54 = v1;
  v65 = NSDocumentTypeDocumentAttribute;
  v64 = NSRTFTextDocumentType;
  v58 = kUTTypeRTF;
  v55 = kUTTypeUTF8PlainText;
  swift_bridgeObjectRetain(v70);
  v5 = 0;
  v6 = _swiftEmptyArrayStorage;
  v7 = 0x80000001003E20B0;
  v69 = (char *)&type metadata for Any + 8;
  v63 = xmmword_1003B0BD0;
  v57 = xmmword_1003B0F60;
  v56 = v4;
  v62 = 0x80000001003E20B0;
  do
  {
    v8 = *(_QWORD *)(v70 + 8 * v5 + 32);
    v9 = *(_QWORD *)(v8 + 16);
    swift_bridgeObjectRetain(v8);
    if (v9)
    {
      v10 = sub_1000C80A8(0xD00000000000001ALL, v7);
      if ((v11 & 1) != 0)
      {
        sub_10004F88C(*(_QWORD *)(v8 + 56) + 32 * v10, (uint64_t)&v74);
        v12 = sub_100018148(0, &qword_100486338, NSMutableAttributedString_ptr);
        if (swift_dynamicCast(&v71, &v74, v69, v12, 6))
        {
          v13 = v71;
          v14 = objc_msgSend(v71, "length");
          v15 = sub_10000EDC8((uint64_t *)&unk_100486340);
          inited = swift_initStackObject(v15, v73);
          *(_OWORD *)(inited + 16) = v63;
          v17 = v65;
          *(_QWORD *)(inited + 32) = v65;
          type metadata accessor for DocumentType(0);
          *(_QWORD *)(inited + 64) = v18;
          v19 = v64;
          *(_QWORD *)(inited + 40) = v64;
          v20 = v17;
          v21 = v19;
          v22 = sub_1000C797C(inited);
          type metadata accessor for DocumentAttributeKey(0);
          sub_10000C4B0((unint64_t *)&qword_10047B5E0, (uint64_t (*)(uint64_t))type metadata accessor for DocumentAttributeKey, (uint64_t)&unk_1003B0628);
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          *(_QWORD *)&v24 = swift_bridgeObjectRelease(v22).n128_u64[0];
          v74 = 0;
          v25 = objc_msgSend(v13, "dataFromRange:documentAttributes:error:", 0, v14, isa, &v74, v24);

          v26 = v74;
          if (!v25)
          {
            v49 = v26;
            v50 = _convertNSErrorToError(_:)(v26);

            swift_willThrow(v51);
            swift_errorRelease(v50);
            swift_bridgeObjectRelease(v8);

            v54 = 0;
            v7 = v62;
            goto LABEL_14;
          }
          v66 = v13;
          v27 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v25);
          v29 = v28;

          v30 = sub_10000EDC8((uint64_t *)&unk_100486350);
          v31 = swift_initStackObject(v30, v72);
          *(_OWORD *)(v31 + 16) = v57;
          v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
          *(_QWORD *)(v31 + 32) = v32;
          *(_QWORD *)(v31 + 40) = v33;
          v34 = v59;
          v35 = static String.Encoding.utf8.getter(v32);
          v36 = String.Encoding.rawValue.getter(v35);
          (*(void (**)(char *, uint64_t))(v60 + 8))(v34, v61);
          v37 = objc_allocWithZone((Class)NSString);
          v67 = v27;
          v68 = v29;
          v38 = Data._bridgeToObjectiveC()().super.isa;
          v39 = objc_msgSend(v37, "initWithData:encoding:", v38, v36);

          if (!v39)
            __break(1u);
          *(_QWORD *)(v31 + 72) = sub_100018148(0, &qword_100481BC8, NSString_ptr);
          *(_QWORD *)(v31 + 48) = v39;
          *(_QWORD *)(v31 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
          *(_QWORD *)(v31 + 88) = v40;
          v41 = v66;
          v42 = objc_msgSend(v66, "string");
          v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
          v45 = v44;

          *(_QWORD *)(v31 + 120) = &type metadata for String;
          *(_QWORD *)(v31 + 96) = v43;
          *(_QWORD *)(v31 + 104) = v45;
          v46 = sub_1000C7998(v31);
          sub_100036300(v67, v68);
          swift_bridgeObjectRelease(v8);

          v8 = v46;
          v4 = v56;
          v7 = v62;
        }
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
      v6 = sub_100060668(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
    v48 = *((_QWORD *)v6 + 2);
    v47 = *((_QWORD *)v6 + 3);
    if (v48 >= v47 >> 1)
      v6 = sub_100060668((double *)(v47 > 1), v48 + 1, 1, v6);
    *((_QWORD *)v6 + 2) = v48 + 1;
    *(_QWORD *)&v6[v48 + 4] = v8;
LABEL_14:
    ++v5;
  }
  while (v4 != v5);
  swift_bridgeObjectRelease(v70);
  return v6;
}

uint64_t sub_100150518(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = type metadata accessor for IndexPath(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 24) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2 + v6, v3);
  return swift_deallocObject(v2, v7, v8);
}

void sub_10015058C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0, a2) - 8) + 80);
  sub_10014AA30(*(_QWORD *)(v2 + 16), v2 + ((v3 + 24) & ~v3));
}

uint64_t sub_1001505BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001505CC(char a1)
{
  uint64_t v1;

  sub_10014AB24(a1, v1);
}

void sub_1001505D4()
{
  sub_100184538();
}

uint64_t sub_100150600(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Class isa;
  id v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v21;

  v3 = type metadata accessor for IndexPath(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v2 + qword_100485C80);
  v8 = OBJC_IVAR____TtC7Measure11HistoryView_tableView;
  result = (uint64_t)objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC7Measure11HistoryView_tableView), "numberOfRowsInSection:", 0);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v10 = result;
    v11 = 0;
    while (1)
    {
      IndexPath.init(row:section:)(v11, 0);
      v12 = *(id *)(v7 + v8);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v14 = objc_msgSend(v12, "cellForRowAtIndexPath:", isa);

      if (!v14)
        return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      ObjectType = swift_getObjectType(v14);
      v16 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HistoryCellProtocol);
      if (v16)
        v17 = v16;
      else
        v17 = 0;
      if (v16)
        v18 = v14;
      else
        v18 = 0;
      if (!v18)
        goto LABEL_15;
      v19 = swift_getObjectType(v18);
      (*(void (**)(uint64_t, uint64_t))(v17 + 24))(v19, v17);

      result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      if (v10 == v11)
        return result;
      if (__OFADD__(v11++, 1))
      {
        __break(1u);
LABEL_15:

        return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      }
    }
  }
  return result;
}

void sub_10015077C()
{
  sub_100148DC0();
  sub_100149144();
}

void sub_1001507A0(unint64_t *a1)
{
  uint64_t v1;

  sub_1001493C0(a1, *(_QWORD *)(v1 + 16));
}

void sub_1001507A8()
{
  uint64_t v0;

  sub_100149730(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001507B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1001507C0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + qword_100485C80), "setAlpha:", *(double *)(v0 + 24));
}

void sub_1001507E0()
{
  uint64_t v0;

  sub_1001494E4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001507E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001507F8()
{
  uint64_t v0;

  return sub_10014C968(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100150800()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100150810(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10014B868(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100150818()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10015083C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_100150874()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1001508A0()
{
  uint64_t v0;

  sub_10014BA94(*(_QWORD *)(v0 + 16), *(void (**)(__n128))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1001509E8()
{
  uint64_t v0;
  Swift::String v1;
  void *object;
  Swift::String v3;
  uint64_t v4;
  Swift::String v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  Swift::String v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  void *v14;
  Swift::String v15;
  uint64_t v17;
  _QWORD v18[2];

  v18[0] = 0;
  v18[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  v17 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure10FrameEvent_index);
  v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  v3._countAndFlagsBits = 592172;
  v3._object = (void *)0xE300000000000000;
  String.append(_:)(v3);
  v4 = *(char *)(v0 + OBJC_IVAR____TtC7Measure10FrameEvent_button);
  v17 = qword_1003B9368[v4];
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v6 = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v6);
  v7._countAndFlagsBits = 592172;
  v7._object = (void *)0xE300000000000000;
  String.append(_:)(v7);
  LOBYTE(v17) = v4;
  _print_unlocked<A, B>(_:_:)(&v17, v18, &type metadata for EventButton, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v8._countAndFlagsBits = 592172;
  v8._object = (void *)0xE300000000000000;
  String.append(_:)(v8);
  v9 = v0 + OBJC_IVAR____TtC7Measure10FrameEvent_position;
  v10._countAndFlagsBits = Double.description.getter(*(double *)(v0 + OBJC_IVAR____TtC7Measure10FrameEvent_position));
  v11 = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v11);
  v12._countAndFlagsBits = 592172;
  v12._object = (void *)0xE300000000000000;
  String.append(_:)(v12);
  v13._countAndFlagsBits = Double.description.getter(*(double *)(v9 + 8));
  v14 = v13._object;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v14);
  v15._countAndFlagsBits = 592172;
  v15._object = (void *)0xE300000000000000;
  String.append(_:)(v15);
  Double.write<A>(to:)(v18, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(double *)(v0 + OBJC_IVAR____TtC7Measure10FrameEvent_timestamp));
  return v18[0];
}

void sub_100150C10(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  id v5;
  NSString v6;
  id v7;
  char v8;
  uint64_t v9;
  char v10;
  NSString v11;
  unint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  NSString *v16;
  CGPoint v17;
  CGFloat x;
  CGFloat y;
  NSString v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  CGFloat *v24;
  uint64_t v25;
  _QWORD v26[2];
  objc_super v27;
  _OWORD v28[2];
  _BYTE v29[24];
  uint64_t v30;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  v5 = v2;
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(a1, "decodeIntegerForKey:", v6);

  v8 = sub_10006C77C((uint64_t)v7);
  if (v8 == 10)
  {

    v9 = swift_getObjectType(v5);
    swift_deallocPartialClassInstance(v5, v9, 49, 7);
    return;
  }
  v10 = v8;
  v11 = String._bridgeToObjectiveC()();
  v12 = (unint64_t)objc_msgSend(a1, "decodeIntegerForKey:", v11);

  if ((v12 & 0x8000000000000000) == 0)
  {
    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend(a1, "decodeObjectForKey:", v13);

    if (v14)
    {
      _bridgeAnyObjectToAny(_:)(v28, v14);
      swift_unknownObjectRelease(v14);
    }
    else
    {
      memset(v28, 0, sizeof(v28));
    }
    sub_10006C868((uint64_t)v28, (uint64_t)v29);
    if (v30)
    {
      if ((swift_dynamicCast(v26, v29, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v15 = v26[1];
        v16 = (NSString *)String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v15);
        v17 = CGPointFromString(v16);
        x = v17.x;
        y = v17.y;

LABEL_12:
        v20 = String._bridgeToObjectiveC()();
        objc_msgSend(a1, "decodeDoubleForKey:", v20);
        v22 = v21;

        v23 = objc_allocWithZone(ObjectType);
        v23[OBJC_IVAR____TtC7Measure10FrameEvent_replayed] = 0;
        *(_QWORD *)&v23[OBJC_IVAR____TtC7Measure10FrameEvent_index] = v12;
        v23[OBJC_IVAR____TtC7Measure10FrameEvent_button] = v10;
        v24 = (CGFloat *)&v23[OBJC_IVAR____TtC7Measure10FrameEvent_position];
        *v24 = x;
        v24[1] = y;
        *(_QWORD *)&v23[OBJC_IVAR____TtC7Measure10FrameEvent_timestamp] = v22;
        v27.receiver = v23;
        v27.super_class = ObjectType;
        objc_msgSendSuper2(&v27, "init");

        v25 = swift_getObjectType(v5);
        swift_deallocPartialClassInstance(v5, v25, 49, 7);
        return;
      }
    }
    else
    {
      sub_100018180((uint64_t)v29);
    }
    y = 0.0;
    x = 0.0;
    goto LABEL_12;
  }
  __break(1u);
}

void sub_100150EEC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  NSString v4;
  uint64_t v5;
  NSString v6;
  NSString *v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  double v11;
  id v12;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure10FrameEvent_index);
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    v4 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "encodeInteger:forKey:", v2, v4);

    v5 = qword_1003B9368[*(char *)(v1 + OBJC_IVAR____TtC7Measure10FrameEvent_button)];
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "encodeInteger:forKey:", v5, v6);

    v7 = objc_retainAutoreleasedReturnValue(NSStringFromPoint(*(NSPoint *)(v1
                                                                         + OBJC_IVAR____TtC7Measure10FrameEvent_position)));
    if (!v7)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v9 = v8;
      v7 = (NSString *)String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v9);
    }
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "encodeObject:forKey:", v7, v10);

    v11 = *(double *)(v1 + OBJC_IVAR____TtC7Measure10FrameEvent_timestamp);
    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "encodeDouble:forKey:", v12, v11);

  }
}

uint64_t sub_1001510CC(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, a2);
      v7 = (uint64_t)sub_100151460(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = sub_100151370(result, a2, 10, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100151460);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease(a2);
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t type metadata accessor for FrameEvent()
{
  return objc_opt_self(_TtC7Measure10FrameEvent);
}

uint64_t sub_100151370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = a1;
  v17 = a2;
  swift_bridgeObjectRetain(a2);
  v6 = String.init<A>(_:)(&v16, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v8 = v6;
  v9 = v7;
  if ((v7 & 0x1000000000000000) == 0)
  {
    if ((v7 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v11 = HIBYTE(v9) & 0xF;
    v16 = v8;
    v17 = v9 & 0xFFFFFFFFFFFFFFLL;
    v10 = &v16;
    goto LABEL_7;
  }
  v8 = sub_100151958(v6, v7);
  v13 = v12;
  swift_bridgeObjectRelease(v9);
  v9 = v13;
  if ((v13 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v8 & 0x1000000000000000) != 0)
  {
    v10 = (uint64_t *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v10 = (uint64_t *)_StringObject.sharedUTF8.getter(v8, v9);
  }
LABEL_7:
  v14 = a4(v10, v11, a3);
  swift_bridgeObjectRelease(v9);
  return v14;
}

unsigned __int8 *sub_100151460(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_1001516DC(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  unint64_t v13;
  unsigned __int8 v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v13 = v9 * a3;
              v14 = v11 + v12;
              v15 = v13 >= v14;
              v9 = v13 - v14;
              if (!v15)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v25 = a3 + 48;
      v26 = a3 + 55;
      v27 = a3 + 87;
      if (a3 > 10)
      {
        v25 = 58;
      }
      else
      {
        v27 = 97;
        v26 = 65;
      }
      if (result)
      {
        v28 = 0;
        do
        {
          v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27)
                return 0;
              v30 = -87;
            }
            else
            {
              v30 = -55;
            }
          }
          else
          {
            v30 = -48;
          }
          if (!is_mul_ok(v28, a3))
            return 0;
          v31 = v28 * a3;
          v32 = v29 + v30;
          v15 = __CFADD__(v31, v32);
          v28 = v31 + v32;
          if (v15)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v16 = a2 - 1;
  if (a2 == 1)
    return 0;
  v17 = a3 + 48;
  v18 = a3 + 55;
  v19 = a3 + 87;
  if (a3 > 10)
  {
    v17 = 58;
  }
  else
  {
    v19 = 97;
    v18 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v20 = result + 1;
  do
  {
    v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19)
          return 0;
        v22 = -87;
      }
      else
      {
        v22 = -55;
      }
    }
    else
    {
      v22 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v23 = v9 * a3;
    v24 = v21 + v22;
    v15 = __CFADD__(v23, v24);
    v9 = v23 + v24;
    if (v15)
      return 0;
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_100151958(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1;
  v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v3 = 11;
  v4 = String.subscript.getter(15, v3 | (v2 << 16), a1, a2);
  v6 = v5;
  v9 = sub_1001519D4(v4, v7, v8, v5);
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_1001519D4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v5 = a3;
  if ((a4 & 0x1000000000000000) != 0)
  {
    v12 = sub_100151B18(a1, a2, a3, a4);
    if (v12)
    {
      v9 = v12;
      v8 = (unint64_t)sub_100151C04(v12, 0);
      v5 = sub_100151C68((unint64_t)v15, v8 + 32, v9, a1, a2, v5, a4);
      v13 = v15[3];
      swift_bridgeObjectRetain(a4);
      swift_bridgeObjectRelease(v13);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    v14 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(_QWORD *)(v8 + 16));
    swift_release(v8);
    return v14;
  }
  else
  {
    v8 = a1 >> 16;
    v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
LABEL_11:
      v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10)
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      goto LABEL_5;
    }
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v15 + v8, v9 - v8);
  }
}

unint64_t sub_100151B18(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_100151E78(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_100151E78(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return String.UTF8View._foreignDistance(from:to:)(v7, a2, a3, a4);
  }
  __break(1u);
  return result;
}

_QWORD *sub_100151C04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_10000EDC8(&qword_1004863C8);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

unint64_t sub_100151C68(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_100151E78(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = String.UTF8View._foreignSubscript(position:)();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = _StringObject.sharedUTF8.getter(a6, a7);
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_100151E78(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = String.UTF8View._foreignIndex(after:)(v12, a6, a7);
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100151E78(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = a1;
  v6 = a1 >> 16;
  v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v13 = String.UTF16View.index(_:offsetBy:)(15, v6, a2);
    v14 = v13 + (v7 << 16);
    v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v16 = v14 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v16 = v15;
    return v16 | 4;
  }
  else
  {
    v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15, v6);
    v9 = v8 + (v7 << 16);
    v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v11 = v9 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v11 = v10;
    return v11 | 8;
  }
}

id sub_100151EF0(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  objc_super *v10;
  Class super_class;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  char v21;
  unint64_t v22;
  unsigned __int8 v23;
  BOOL v24;
  unint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  Class v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  Class v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  BOOL v44;
  uint64_t v45;
  unsigned __int8 *v46;
  unsigned int v47;
  unsigned __int8 v48;
  unint64_t v49;
  uint64_t v50;
  unsigned __int8 *v51;
  unsigned int v52;
  uint64_t v53;
  objc_class *v54;
  _BYTE *v55;
  _QWORD *v56;
  char v57;
  uint64_t v58;
  objc_super v59;
  BOOL v60;
  _QWORD v61[2];
  unint64_t receiver;
  uint64_t v63;

  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v8 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v8)
  {
    v22 = a2;
LABEL_47:
    swift_bridgeObjectRelease(v22);
    return 0;
  }
  receiver = a1;
  v63 = a2;
  v61[0] = 44;
  v61[1] = 0xE100000000000000;
  v9 = sub_10006C814();
  v10 = (objc_super *)StringProtocol.components<A>(separatedBy:)(v61, &type metadata for String, &type metadata for String, v9, v9);
  swift_bridgeObjectRelease(a2);
  if (v10[1].receiver < (id)6)
  {
LABEL_46:
    v22 = (unint64_t)v10;
    goto LABEL_47;
  }
  super_class = v10[2].super_class;
  receiver = (unint64_t)v10[2].receiver;
  v63 = (uint64_t)super_class;
  v12 = swift_bridgeObjectRetain(super_class);
  static CharacterSet.whitespaces.getter(v12);
  v13 = StringProtocol.trimmingCharacters(in:)(v7, &type metadata for String, v9);
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v7, v4);
  swift_bridgeObjectRelease(v63);
  v17 = HIBYTE(v15) & 0xF;
  v18 = v13 & 0xFFFFFFFFFFFFLL;
  if ((v15 & 0x2000000000000000) != 0)
    v19 = HIBYTE(v15) & 0xF;
  else
    v19 = v13 & 0xFFFFFFFFFFFFLL;
  if (!v19)
  {
    swift_bridgeObjectRelease(v10);
    v22 = v15;
    goto LABEL_47;
  }
  if ((v15 & 0x1000000000000000) != 0)
  {
    a2 = sub_100151370(v13, v15, 10, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_1001516DC);
    LOBYTE(v13) = v57;
    goto LABEL_42;
  }
  if ((v15 & 0x2000000000000000) != 0)
  {
    receiver = v13;
    v63 = v15 & 0xFFFFFFFFFFFFFFLL;
    if (v13 == 43)
    {
      if (v17)
      {
        if (v17 != 1 && (BYTE1(v13) - 48) <= 9u)
        {
          a2 = (BYTE1(v13) - 48);
          if (v17 == 2)
            goto LABEL_41;
          if ((BYTE2(v13) - 48) <= 9u)
          {
            a2 = 10 * (BYTE1(v13) - 48) + (BYTE2(v13) - 48);
            v26 = v17 - 3;
            if (v26)
            {
              v27 = (unsigned __int8 *)&receiver + 3;
              while (1)
              {
                v28 = *v27 - 48;
                if (v28 > 9)
                  goto LABEL_38;
                if (!is_mul_ok(a2, 0xAuLL))
                  goto LABEL_38;
                v24 = __CFADD__(10 * a2, v28);
                a2 = 10 * a2 + v28;
                if (v24)
                  goto LABEL_38;
                LOBYTE(v13) = 0;
                ++v27;
                if (!--v26)
                  goto LABEL_42;
              }
            }
            goto LABEL_41;
          }
        }
        goto LABEL_38;
      }
    }
    else
    {
      if (v13 != 45)
      {
        if (v17 && (v13 - 48) <= 9u)
        {
          a2 = (v13 - 48);
          if (v17 == 1)
            goto LABEL_41;
          if ((BYTE1(v13) - 48) <= 9u)
          {
            a2 = 10 * (v13 - 48) + (BYTE1(v13) - 48);
            v45 = v17 - 2;
            if (v45)
            {
              v46 = (unsigned __int8 *)&receiver + 2;
              while (1)
              {
                v47 = *v46 - 48;
                if (v47 > 9)
                  goto LABEL_38;
                if (!is_mul_ok(a2, 0xAuLL))
                  goto LABEL_38;
                v24 = __CFADD__(10 * a2, v47);
                a2 = 10 * a2 + v47;
                if (v24)
                  goto LABEL_38;
                LOBYTE(v13) = 0;
                ++v46;
                if (!--v45)
                  goto LABEL_42;
              }
            }
            goto LABEL_41;
          }
        }
LABEL_38:
        a2 = 0;
LABEL_39:
        LOBYTE(v13) = 1;
        goto LABEL_42;
      }
      if (v17)
      {
        if (v17 != 1)
        {
          v23 = BYTE1(v13) - 48;
          if ((BYTE1(v13) - 48) <= 9u)
          {
            a2 = 0;
            v24 = v23 == 0;
            v25 = -(uint64_t)v23;
            if (!v24)
              goto LABEL_39;
            if (v17 == 2)
            {
              LOBYTE(v13) = 0;
              a2 = v25;
              goto LABEL_42;
            }
            v48 = BYTE2(v13) - 48;
            if ((BYTE2(v13) - 48) <= 9u && is_mul_ok(v25, 0xAuLL))
            {
              v49 = 10 * v25;
              a2 = v49 - v48;
              if (v49 >= v48)
              {
                v50 = v17 - 3;
                if (v50)
                {
                  v51 = (unsigned __int8 *)&receiver + 3;
                  while (1)
                  {
                    v52 = *v51 - 48;
                    if (v52 > 9)
                      goto LABEL_38;
                    if (!is_mul_ok(a2, 0xAuLL))
                      goto LABEL_38;
                    v24 = 10 * a2 >= v52;
                    a2 = 10 * a2 - v52;
                    if (!v24)
                      goto LABEL_38;
                    LOBYTE(v13) = 0;
                    ++v51;
                    if (!--v50)
                      goto LABEL_42;
                  }
                }
LABEL_41:
                LOBYTE(v13) = 0;
                goto LABEL_42;
              }
            }
          }
        }
        goto LABEL_38;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_91;
  }
  if ((v13 & 0x1000000000000000) != 0)
    v20 = (unsigned __int8 *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v20 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v13, v15);
  a2 = (unint64_t)sub_1001516DC(v20, v18, 10);
  LOBYTE(v13) = v21 & 1;
LABEL_42:
  swift_bridgeObjectRelease(v15);
  if ((v13 & 1) != 0)
    goto LABEL_46;
  if (v10[1].receiver < (id)2)
  {
    __break(1u);
LABEL_88:
    _StringGuts._slowWithCString<A>(_:)(&v60, sub_10015257C);
    goto LABEL_56;
  }
  v29 = v10[3].super_class;
  receiver = (unint64_t)v10[3].receiver;
  v63 = (uint64_t)v29;
  v30 = swift_bridgeObjectRetain(v29);
  static CharacterSet.whitespaces.getter(v30);
  v15 = StringProtocol.trimmingCharacters(in:)(v7, &type metadata for String, v9);
  v13 = v31;
  v16(v7, v4);
  swift_bridgeObjectRelease(v63);
  v32 = sub_1001510CC(v15, v13);
  if ((v33 & 1) != 0)
    goto LABEL_46;
  v34 = sub_10006C77C(v32);
  if (v34 == 10)
    goto LABEL_46;
  if (v10[1].receiver < (id)6)
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  LOBYTE(v13) = v34;
  v37 = v10[7].receiver;
  v36 = v10[7].super_class;
  swift_bridgeObjectRetain(v36);
  v38 = swift_bridgeObjectRelease(v10);
  receiver = (unint64_t)v37;
  v63 = (uint64_t)v36;
  static CharacterSet.whitespaces.getter(v38);
  v15 = StringProtocol.trimmingCharacters(in:)(v7, &type metadata for String, v9);
  v9 = v39;
  v16(v7, v4);
  v40 = swift_bridgeObjectRelease(v63);
  v61[0] = 0;
  v41 = __chkstk_darwin(v40);
  *((_QWORD *)&v59 - 2) = v61;
  if ((v9 & 0x1000000000000000) != 0 || !(v9 & 0x2000000000000000 | v15 & 0x1000000000000000))
    goto LABEL_88;
  __chkstk_darwin(v41);
  v10 = &v59 - 2;
  *((_QWORD *)&v59 - 2) = sub_10015257C;
  *((_QWORD *)&v59 - 1) = v42;
  if ((v9 & 0x2000000000000000) == 0)
  {
    if ((v15 & 0x1000000000000000) != 0)
    {
      ((void (*)(unint64_t *__return_ptr, unint64_t))sub_10015257C)(&receiver, (v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
LABEL_55:
      v60 = receiver;
LABEL_56:
      swift_bridgeObjectRelease(v9);
      goto LABEL_82;
    }
LABEL_92:
    v58 = _StringObject.sharedUTF8.getter(v15, v9);
    ((void (*)(unint64_t *__return_ptr, uint64_t))v10[1].receiver)(&receiver, v58);
    goto LABEL_55;
  }
  receiver = v15;
  v63 = v9 & 0xFFFFFFFFFFFFFFLL;
  v44 = (v15 > 0x20u || ((0x100003E01uLL >> v15) & 1) == 0)
     && (v43 = (_BYTE *)_swift_stdlib_strtod_clocale(&receiver, v61)) != 0
     && *v43 == 0;
  v60 = v44;
  swift_bridgeObjectRelease(v9);
LABEL_82:
  if (!v60)
    return 0;
  v53 = v61[0];
  v54 = (objc_class *)type metadata accessor for FrameEvent();
  v55 = objc_allocWithZone(v54);
  v55[OBJC_IVAR____TtC7Measure10FrameEvent_replayed] = 0;
  *(_QWORD *)&v55[OBJC_IVAR____TtC7Measure10FrameEvent_index] = a2;
  v55[OBJC_IVAR____TtC7Measure10FrameEvent_button] = v13;
  v56 = &v55[OBJC_IVAR____TtC7Measure10FrameEvent_position];
  *v56 = 0;
  v56[1] = 0;
  *(_QWORD *)&v55[OBJC_IVAR____TtC7Measure10FrameEvent_timestamp] = v53;
  v59.receiver = v55;
  v59.super_class = v54;
  return objc_msgSendSuper2(&v59, "init");
}

_BYTE *sub_10015257C@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

double *sub_1001525E8(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  int v4;
  uint64_t v5;
  char *v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1000A5860(0, v1, 0);
    v3 = sub_100158060(a1);
    if (v3 < 0 || v3 >= 1 << *(_BYTE *)(a1 + 32))
    {
      __break(1u);
    }
    else if ((*(_QWORD *)(a1 + 64 + 8 * ((unint64_t)v3 >> 6)) & (1 << v3)) != 0)
    {
      if (*(_DWORD *)(a1 + 36) == v4)
      {
        v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v3);
        swift_retain();
        _StringGuts.grow(_:)(18);
        v6 = (char *)&loc_100152730 + dword_100152964[(*(unsigned __int8 (**)(void))(*(_QWORD *)v5 + 248))()];
        __asm { BR              X9 }
      }
LABEL_10:
      __break(1u);
      JUMPOUT(0x100152958);
    }
    __break(1u);
    goto LABEL_10;
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_100152980(unint64_t a1)
{
  return sub_10015298C(a1, VNFaceObservation_ptr);
}

_QWORD *sub_10015298C(unint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  specialized ContiguousArray.reserveCapacity(_:)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10));
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
        v7 = i + 1;
        if (__OFADD__(i, 1))
          break;
        v8 = v6;
        v9 = objc_opt_self(*a2);
        v10 = swift_dynamicCastObjCClass(v8, v9);
        if (!v10)
        {
          swift_unknownObjectRelease(v8);
          goto LABEL_15;
        }
        v11 = v10;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v12 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
        v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
        specialized ContiguousArray._endMutation()(v13);
        if (v7 == v4)
          return _swiftEmptyArrayStorage;
      }
      __break(1u);
    }
    else
    {
      v14 = 0;
      v15 = v3 + 32;
      while (1)
      {
        v16 = v14 + 1;
        if (__OFADD__(v14, 1))
          break;
        v17 = *(void **)(v15 + 8 * v14);
        v18 = objc_opt_self(*a2);
        v19 = swift_dynamicCastObjCClass(v17, v18);
        if (!v19)
        {
LABEL_15:
          swift_release(_swiftEmptyArrayStorage);
          return 0;
        }
        v3 = v19;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v20 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
        v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v3);
        specialized ContiguousArray._endMutation()(v21);
        ++v14;
        if (v16 == v4)
          return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_18:
    if (v3 < 0)
      v23 = v3;
    else
      v23 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v24 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v3);
    specialized ContiguousArray.reserveCapacity(_:)(v24);
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v3);
  }
  return _swiftEmptyArrayStorage;
}

void sub_100152B6C(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  _QWORD aBlock[6];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v19 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v10 = (void *)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (*((_QWORD *)&xmmword_1004AF258 + 1))
  {
    v11 = (void *)Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
    v12 = swift_allocObject(&unk_1004486F8, 32, 7);
    *(_QWORD *)(v12 + 16) = v1;
    *(double *)(v12 + 24) = a1;
    aBlock[4] = sub_100154CC8;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003ECA0;
    aBlock[3] = &unk_100448710;
    v13 = _Block_copy(aBlock);
    v14 = v10;
    v15 = swift_retain();
    static DispatchQoS.unspecified.getter(v15);
    v20 = _swiftEmptyArrayStorage;
    v16 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v17 = sub_10000EDC8((uint64_t *)&unk_10047E430);
    v18 = sub_100036038((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v17, v18, v3, v16);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v13);
    _Block_release(v13);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_100152DA4()
{
  sub_100153FE4((uint64_t)sub_1001598F4, (uint64_t)&unk_1004489B8);
}

uint64_t sub_100152DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double *v5;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = _swiftEmptyArrayStorage;
  v1 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v2 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v3 = sub_100036038((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430);
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v5, v2, v3, v0, v1);
}

uint64_t sub_100152E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t ObjectType;
  __n128 v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v21 = *(_QWORD *)(v2 - 8);
  v22 = v2;
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 16));
  OS_dispatch_source.cancel()();
  static DispatchQoS.unspecified.getter(v14);
  sub_100152DB8();
  OS_dispatch_source.setEventHandler(qos:flags:handler:)(v12, v8, 0, ObjectType);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v15 = *(void **)(v0 + 24);
  *v4 = v15;
  v17 = v21;
  v16 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v21 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v22);
  v18 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)(v4);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v4, v16);
  if ((v15 & 1) != 0)
  {
    if ((*(_BYTE *)(v1 + 32) & 1) == 0)
    {
      *(_BYTE *)(v1 + 32) = 1;
      swift_getObjectType(*(_QWORD *)(v1 + 16));
      OS_dispatch_source.resume()();
    }
    v20 = *(_QWORD *)(v1 + 16);

    swift_unknownObjectRelease(v20);
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100153034()
{
  uint64_t v0;

  v0 = sub_100152E64();
  return swift_deallocClassInstance(v0, 33, 7);
}

uint64_t type metadata accessor for RepeatingTimer()
{
  return objc_opt_self(_TtC7MeasureP33_CDD0E5FDB406287F460B03571421BBF614RepeatingTimer);
}

uint64_t sub_100153070()
{
  uint64_t v0;
  uint64_t result;
  double v2;

  v0 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  result = static UIDevice.isIPhone()(v0);
  if ((result & 1) == 0
    || (result = (uint64_t)objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"),
        v2 = 0.25,
        (result & 1) == 0))
  {
    v2 = 0.15;
  }
  qword_1004863D0 = *(_QWORD *)&v2;
  return result;
}

void sub_1001530E0()
{
  qword_1004863D8 = (uint64_t)&off_10043BB80;
}

void sub_1001530F4()
{
  uint64_t v0;

  swift_allocObject(v0, 192, 7);
  sub_100153118();
}

void sub_100153118()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, __n128);
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];

  v1 = v0;
  v36[0] = _swiftEmptyArrayStorage;
  v2 = sub_10000EDC8(&qword_100485BC8);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v0[8] = CurrentValueSubject.init(_:)(v36, v3);
  KeyPath = swift_getKeyPath(&unk_1003B9550);
  v5 = sub_10000EDC8((uint64_t *)&unk_100486710);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v6 = qword_1004AF890;
  v7 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v5 + 272);
  v8 = swift_retain();
  v1[9] = v7(KeyPath, v6, v8);
  v9 = swift_getKeyPath(&unk_1003B9578);
  v10 = sub_10000EDC8(&qword_100481BA0);
  v11 = qword_1004AF890;
  v12 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v10 + 272);
  v13 = swift_retain();
  v1[10] = v12(v9, v11, v13);
  v14 = swift_getKeyPath(&unk_1003B95A0);
  v15 = sub_10000EDC8((uint64_t *)&unk_100481B90);
  v16 = qword_1004AF890;
  v17 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v15 + 272);
  v18 = swift_retain();
  v1[11] = v17(v14, v16, v18);
  v19 = swift_getKeyPath(&unk_1003B95C8);
  v20 = sub_10000EDC8((uint64_t *)&unk_10047E5D0);
  v21 = qword_1004AF890;
  v22 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v20 + 272);
  v23 = swift_retain();
  v1[12] = v22(v19, v21, v23);
  v24 = swift_getKeyPath(&unk_1003B95F0);
  v25 = sub_10000EDC8((uint64_t *)&unk_100486720);
  v26 = qword_1004AF890;
  v27 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v25 + 272);
  v28 = swift_retain();
  v1[13] = v27(v24, v26, v28);
  v29 = swift_getKeyPath(&unk_1003B9618);
  v30 = sub_10000EDC8(&qword_10047E610);
  v31 = qword_1004AF890;
  v32 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v30 + 272);
  v33 = swift_retain();
  v1[14] = v32(v29, v31, v33);
  v1[16] = 0;
  v36[0] = 0;
  v36[1] = 0;
  v34 = sub_10000EDC8(&qword_100486730);
  swift_allocObject(v34, 40, 7);
  v1[18] = Synchronized.init(wrappedValue:)(v36);
  v1[19] = _swiftEmptyArrayStorage;
  v36[0] = _swiftEmptyArrayStorage;
  v35 = sub_10000EDC8(&qword_100486738);
  swift_allocObject(v35, 32, 7);
  v1[20] = Synchronized.init(wrappedValue:)(v36);
  v1[23] = 0x3FF0000000000000;
  swift_release();
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002DLL, 0x80000001003D7D70, "Measure/RectangleDetector.swift", 31, 2, 165, 0);
  __break(1u);
}

void sub_1001533E4(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  char v10;
  void *v11;
  double v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  void *object;
  Swift::String v22;
  void *v23;
  _QWORD v24[2];
  Swift::String v25;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (_QWORD *)((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(double *)(v2 + 184) = a1;
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v8 = (void *)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (!*((_QWORD *)&xmmword_1004AF258 + 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  *v7 = Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  v10 = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (*(_QWORD *)(v2 + 128))
    return;
  v11 = (void *)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (!*((_QWORD *)&xmmword_1004AF258 + 1))
  {
LABEL_13:
    __break(1u);
    return;
  }
  v12 = *(double *)(v2 + 168) * a1;
  v13 = (void *)Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
  v14 = swift_allocObject(&unk_100448748, 24, 7);
  swift_weakInit(v14 + 16, v2);
  v15 = type metadata accessor for RepeatingTimer();
  swift_allocObject(v15, 33, 7);
  v16 = v11;
  v17 = sub_100158A4C(v13, (uint64_t)sub_100154D2C, v14, v12);

  swift_release();
  *(_QWORD *)(v2 + 128) = v17;
  swift_release();
  if (qword_10047AA28 != -1)
LABEL_11:
    swift_once(&qword_10047AA28, sub_1000E1108);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(114);
  v18._countAndFlagsBits = 0xD000000000000021;
  v18._object = (void *)0x80000001003E22D0;
  String.append(_:)(v18);
  Double.write<A>(to:)(&v25, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(double *)(v2 + 168));
  v19._object = (void *)0x80000001003E2300;
  v19._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v19);
  v24[1] = *(_QWORD *)(v2 + 176);
  v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v20._object;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(object);
  v22._countAndFlagsBits = 0xD000000000000036;
  v22._object = (void *)0x80000001003E2320;
  String.append(_:)(v22);
  v23 = v25._object;
  Log.default(_:isPrivate:)(v25, 0);
  swift_bridgeObjectRelease(v23);
}

double sub_1001536A4(uint64_t a1)
{
  uint64_t v1;
  double result;
  _BYTE v3[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v3, 0, 0);
  if (swift_weakLoadStrong(v1))
  {
    sub_1001536F8();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_1001536F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t countAndFlagsBits;
  void (*v12)(Swift::String *__return_ptr, __n128);
  __n128 v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;
  void *object;
  void (*v21)(Swift::String *__return_ptr, __n128);
  __n128 v22;
  double v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  unint64_t v35;
  Class isa;
  double v37;
  uint64_t v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  unint64_t v56;
  double *v57;
  Swift::String aBlock;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  char v63;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  Synchronized.wrappedValue.getter(&aBlock, v10);
  swift_release();
  countAndFlagsBits = aBlock._countAndFlagsBits;

  if (!countAndFlagsBits)
  {
    v12 = *(void (**)(Swift::String *__return_ptr, __n128))(**(_QWORD **)(v1 + 72) + 144);
    v13 = swift_retain();
    v12(&aBlock, v13);
    swift_release();
    v56 = aBlock._countAndFlagsBits;
    v14 = sub_1001545DC(aBlock._countAndFlagsBits, (_QWORD **)v1);
    if (v15)
    {
      v16 = v14;
      v17 = v15;
      if (qword_10047AA28 != -1)
        swift_once(&qword_10047AA28, sub_1000E1108);
      aBlock._countAndFlagsBits = 0;
      aBlock._object = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(52);
      v18._object = (void *)0x80000001003E2360;
      v18._countAndFlagsBits = 0xD000000000000032;
      String.append(_:)(v18);
      v19._countAndFlagsBits = v16;
      v19._object = v17;
      String.append(_:)(v19);
      swift_bridgeObjectRelease(v17);
      object = aBlock._object;
      Log.debug(_:isPrivate:)(aBlock, 0);
      swift_bridgeObjectRelease(object);
      goto LABEL_11;
    }
    v21 = *(void (**)(Swift::String *__return_ptr, __n128))(**(_QWORD **)(v1 + 96) + 144);
    v22 = swift_retain();
    v21(&aBlock, v22);
    *(_QWORD *)&v23 = swift_release().n128_u64[0];
    if ((v63 & 1) != 0
      || (v24 = objc_msgSend(*(id *)(v1 + 120), "session", v23),
          v25 = objc_msgSend(v24, "currentFrame"),
          v24,
          !v25))
    {
LABEL_11:
      sub_10001A810(v56);
      return;
    }
    ariadne_trace(_:_:_:_:_:)(727056464, 0, 0, 0, 0);
    sub_100153FE4((uint64_t)sub_1001598EC, (uint64_t)&unk_100448990);
    v26 = objc_allocWithZone((Class)VNDetectRectanglesRequest);
    v61 = sub_100158ED8;
    v62 = v1;
    aBlock._countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
    aBlock._object = (void *)1107296256;
    v59 = sub_100157FEC;
    v60 = &unk_100448788;
    v27 = _Block_copy(&aBlock);
    v55 = v25;
    swift_retain();
    v28 = objc_msgSend(v26, "initWithCompletionHandler:", v27, swift_release().n128_f64[0]);
    _Block_release(v27);
    LODWORD(v29) = 981668463;
    objc_msgSend(v28, "setMinimumAspectRatio:", v29);
    LODWORD(v30) = 1.0;
    objc_msgSend(v28, "setMaximumAspectRatio:", v30);
    LODWORD(v31) = 30.0;
    objc_msgSend(v28, "setQuadratureTolerance:", v31);
    LODWORD(v32) = 1036831949;
    objc_msgSend(v28, "setMinimumSize:", v32);
    LODWORD(v33) = 1061997773;
    objc_msgSend(v28, "setMinimumConfidence:", v33);
    v54 = v28;
    objc_msgSend(v28, "setMaximumObservations:", 1000);
    v34 = objc_msgSend(v55, "capturedImage");
    v35 = sub_1000C77CC((uint64_t)_swiftEmptyArrayStorage);
    v53 = objc_allocWithZone((Class)VNImageRequestHandler);
    type metadata accessor for VNImageOption(0);
    sub_10000C4B0(&qword_10047B640, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_1003B079C);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v37 = swift_bridgeObjectRelease(v35).n128_u64[0];
    v53 = objc_msgSend(v53, "initWithCVPixelBuffer:options:", v34, isa, v37);

    v38 = qword_10047A930;
    v39 = v55;
    if (v38 != -1)
      swift_once(&qword_10047A930, sub_100083368);
    v40 = (void *)ARKeyFrame.init(arFrame:interfaceOrientation:)(v39, qword_1004AF250);
    aBlock._countAndFlagsBits = (uint64_t)v40;
    aBlock._object = v41;
    swift_retain();
    v42 = v40;
    v55 = v39;
    v43 = v42;
    Synchronized.wrappedValue.setter(&aBlock);
    swift_release();

    v52 = *(_QWORD *)(v1 + 136);
    v44 = swift_allocObject(&unk_1004487C0, 32, 7);
    v45 = v53;
    v46 = v54;
    *(_QWORD *)(v44 + 16) = v53;
    *(_QWORD *)(v44 + 24) = v46;
    v61 = sub_100158F0C;
    v62 = v44;
    aBlock._countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
    aBlock._object = (void *)1107296256;
    v59 = sub_10003ECA0;
    v60 = &unk_1004487D8;
    v47 = _Block_copy(&aBlock);
    v53 = v45;
    v54 = v46;
    static DispatchQoS.unspecified.getter(v48);
    v57 = _swiftEmptyArrayStorage;
    v49 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v50 = sub_10000EDC8((uint64_t *)&unk_10047E430);
    v51 = sub_100036038((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v57, v50, v51, v2, v49);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v47);
    sub_10001A810(v56);
    _Block_release(v47);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_release();
  }
}

void sub_100153D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  void *object;
  Swift::String v14;
  void *v15;
  uint64_t v16;
  Swift::String v17;
  double *v18;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v6 = (void *)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (!*((_QWORD *)&xmmword_1004AF258 + 1))
  {
    __break(1u);
    return;
  }
  *v5 = Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = v6;
  v8 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once(&qword_10047ABC8, sub_100153070);
    goto LABEL_7;
  }
  if (!*(_QWORD *)(v1 + 128))
    return;
  *(_QWORD *)(v1 + 128) = 0;
  swift_release();
  swift_retain();
  Synchronized.wrappedValue.getter(&v17, v9);
  swift_bridgeObjectRelease(v17._countAndFlagsBits);
  v18 = _swiftEmptyArrayStorage;
  Synchronized.wrappedValue.setter(&v18);
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = 0;
  swift_retain();
  Synchronized.wrappedValue.setter(&v17);
  swift_release();
  if (qword_10047ABC8 != -1)
    goto LABEL_12;
LABEL_7:
  *(_QWORD *)(v1 + 168) = qword_1004863D0;
  *(_QWORD *)(v1 + 176) = 1;
  if (qword_10047AA28 != -1)
    swift_once(&qword_10047AA28, sub_1000E1108);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(141);
  v10._countAndFlagsBits = 0xD00000000000003CLL;
  v10._object = (void *)0x80000001003E2890;
  String.append(_:)(v10);
  Double.write<A>(to:)(&v17, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(double *)(v1 + 168));
  v11._object = (void *)0x80000001003E2300;
  v11._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v11);
  v18 = *(double **)(v1 + 176);
  v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(object);
  v14._countAndFlagsBits = 0xD000000000000036;
  v14._object = (void *)0x80000001003E2320;
  String.append(_:)(v14);
  v15 = v17._object;
  Log.default(_:isPrivate:)(v17, 0);
  swift_bridgeObjectRelease(v15);
}

void sub_100153FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  _QWORD aBlock[6];

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v12 = (void *)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (*((_QWORD *)&xmmword_1004AF258 + 1))
  {
    v13 = (void *)Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
    aBlock[4] = a1;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003ECA0;
    aBlock[3] = a2;
    v14 = _Block_copy(aBlock);
    v15 = v12;
    v16 = swift_retain();
    static DispatchQoS.unspecified.getter(v16);
    v21 = _swiftEmptyArrayStorage;
    v17 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v18 = sub_10000EDC8((uint64_t *)&unk_10047E430);
    v19 = sub_100036038((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v18, v19, v5, v17);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v14);
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_1001541EC(uint64_t a1)
{
  double v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  char v9;
  void (*v10)(unint64_t *__return_ptr, __n128);
  __n128 v11;
  unint64_t v12;
  Swift::String v13;
  uint64_t v14;
  unint64_t v15;

  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v7 = (void *)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (!*((_QWORD *)&xmmword_1004AF258 + 1))
  {
    __break(1u);
    return;
  }
  *v6 = Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  v8 = v7;
  v9 = _dispatchPreconditionTest(_:)(v6);
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once(&qword_10047ABC8, sub_100153070);
    goto LABEL_12;
  }
  if (!*(_QWORD *)(a1 + 128))
    return;
  v10 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(a1 + 72) + 144);
  v11 = swift_retain();
  v10(&v15, v11);
  swift_release();
  v12 = v15;
  sub_10001A810(v15);
  v1 = *(double *)(a1 + 168);
  if (!(v12 >> 62))
  {
    if (v1 == 0.3)
      return;
    sub_100153D30();
    *(_QWORD *)(a1 + 168) = 0x3FD3333333333333;
    *(_QWORD *)(a1 + 176) = 4;
    if (qword_10047AA28 != -1)
      swift_once(&qword_10047AA28, sub_1000E1108);
    v13._object = (void *)0x80000001003E2860;
    v13._countAndFlagsBits = 0xD000000000000021;
    Log.default(_:isPrivate:)(v13, 0);
    goto LABEL_14;
  }
  if (qword_10047ABC8 != -1)
    goto LABEL_17;
LABEL_12:
  if (v1 == *(double *)&qword_1004863D0)
    return;
  sub_100153D30();
LABEL_14:
  sub_1001533E4(*(double *)(a1 + 184));
}

uint64_t sub_1001543F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 104));
  swift_release(*(_QWORD *)(v0 + 112));

  swift_release(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 144));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 152));
  return swift_release(*(_QWORD *)(v0 + 160));
}

uint64_t sub_10015446C(uint64_t a1)
{
  uint64_t v1;

  v1 = StateObserver.deinit(a1);
  swift_release(*(_QWORD *)(v1 + 64));
  swift_release(*(_QWORD *)(v1 + 72));
  swift_release(*(_QWORD *)(v1 + 80));
  swift_release(*(_QWORD *)(v1 + 88));
  swift_release(*(_QWORD *)(v1 + 96));
  swift_release(*(_QWORD *)(v1 + 104));
  swift_release(*(_QWORD *)(v1 + 112));

  swift_release(*(_QWORD *)(v1 + 128));
  swift_release(*(_QWORD *)(v1 + 144));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 152));
  swift_release(*(_QWORD *)(v1 + 160));
  return v1;
}

uint64_t sub_1001544F8(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_10015446C(a1);
  return swift_deallocClassInstance(v1, 192, 7);
}

uint64_t type metadata accessor for RectangleDetector(uint64_t a1)
{
  uint64_t result;

  result = qword_100486518;
  if (!qword_100486518)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RectangleDetector);
  return result;
}

uint64_t sub_100154550(uint64_t a1)
{
  _QWORD v2[16];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[8] = "\b";
  v2[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[10] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[12] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[13] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[14] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[15] = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_initClassMetadata2(a1, 256, 16, v2, a1 + 208);
}

uint64_t sub_1001545DC(unint64_t a1, _QWORD **a2)
{
  unint64_t v3;
  unsigned int v4;
  void (*v5)(__int128 *__return_ptr, __n128);
  __n128 v6;
  void (*v7)(__int128 *__return_ptr, __n128);
  __n128 v8;
  void (*v9)(__int128 *__return_ptr, __n128);
  __n128 v10;
  void (*v11)(_OWORD *__return_ptr, __n128);
  __n128 v12;
  _OWORD v14[9];
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26[18];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;

  v3 = 0xD000000000000012;
  if ((a1 >> 62) - 1 < 2)
  {
    if ((objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable") & 1) != 0)
      return v3;
    goto LABEL_8;
  }
  if (a1 >> 62 == 3)
  {
    if (a1 == 0xC000000000000010)
    {
      v4 = 1768186945;
      return v4 | 0x6120676E00000000;
    }
    if (a1 == 0xC000000000000018)
    {
      v4 = 1769369421;
      return v4 | 0x6120676E00000000;
    }
  }
LABEL_8:
  v5 = *(void (**)(__int128 *__return_ptr, __n128))(*a2[11] + 144);
  v6 = swift_retain();
  v5(&v16, v6);
  swift_release();
  if ((BYTE3(v16) & 1) != 0)
    return 0xD00000000000001BLL;
  v7 = *(void (**)(__int128 *__return_ptr, __n128))(*a2[12] + 144);
  v8 = swift_retain();
  v7(&v16, v8);
  swift_release();
  v31 = v20;
  v32 = v21;
  v33 = v22;
  v34 = v23;
  v27 = v16;
  v28 = v17;
  v29 = v18;
  v30 = v19;
  if (sub_10007089C())
    return 0x7420676E69766F4DLL;
  v9 = *(void (**)(__int128 *__return_ptr, __n128))(*a2[13] + 144);
  v10 = swift_retain();
  v9(&v16, v10);
  swift_release();
  if (v16 == 1
    && (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable") & 1) != 0)
  {
    return 0xD000000000000018;
  }
  v11 = *(void (**)(_OWORD *__return_ptr, __n128))(*a2[14] + 144);
  v12 = swift_retain();
  v11(v14, v12);
  swift_release();
  v22 = v14[6];
  v23 = v14[7];
  v24 = v14[8];
  v25 = v15;
  v18 = v14[2];
  v19 = v14[3];
  v20 = v14[4];
  v21 = v14[5];
  v16 = v14[0];
  v17 = v14[1];
  sub_1000127E8((id *)&v16);
  sub_100012BC4((uint64_t)&v16);
  sub_100012C58((uint64_t)&v16, (uint64_t)v26, (uint64_t *)&unk_100486700);
  if (sub_1000127D0(v26) == 1)
    return 0;
  sub_100012810((id *)&v16);
  return v3;
}

void sub_10015487C(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  char isEscapingClosureAtFileLocation;
  _QWORD v13[6];

  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v5 = (void *)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (*((_QWORD *)&xmmword_1004AF258 + 1))
  {
    v6 = Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
    v7 = swift_allocObject(&unk_100448810, 32, 7);
    *(_QWORD *)(v7 + 16) = a1;
    *(_QWORD *)(v7 + 24) = a3;
    v8 = swift_allocObject(&unk_100448838, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_100158F40;
    *(_QWORD *)(v8 + 24) = v7;
    v13[4] = sub_100030C24;
    v13[5] = v8;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_1000DDB80;
    v13[3] = &unk_100448850;
    v9 = _Block_copy(v13);
    v10 = v5;
    v11 = a1;
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v6, v9);

    _Block_release(v9);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v8, "", 80, 328, 33, 1);
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  __break(1u);
}

id sub_1001549FC(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  Class isa;
  double v8;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;

  v4 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1003B0F00;
  *(_QWORD *)(v5 + 32) = a2;
  v14 = (id)v5;
  specialized Array._endMutation()(v5);
  sub_100018148(0, &qword_10047E5A0, VNRequest_ptr);
  v6 = a2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(v14).n128_u64[0];
  v14 = 0;
  LODWORD(a1) = objc_msgSend(a1, "performRequests:error:", isa, &v14, v8);

  if ((_DWORD)a1)
    return v14;
  v13 = v14;
  v10 = v14;
  v11 = _convertNSErrorToError(_:)(v13);

  swift_willThrow(v12);
  ariadne_trace(_:_:_:_:_:)(727056468, 0, 0, 0, 0);
  return (id)swift_errorRelease(v11);
}

uint64_t storeEnumTagSinglePayload for RepeatingTimer.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100154BDC + 4 * byte_1003B93C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100154C10 + 4 * byte_1003B93C0[v4]))();
}

uint64_t sub_100154C10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100154C18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100154C20);
  return result;
}

uint64_t sub_100154C2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100154C34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100154C38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100154C40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RepeatingTimer.State()
{
  return &type metadata for RepeatingTimer.State;
}

unint64_t sub_100154C60()
{
  unint64_t result;

  result = qword_100486698;
  if (!qword_100486698)
  {
    result = swift_getWitnessTable(&unk_1003B9528, &type metadata for RepeatingTimer.State);
    atomic_store(result, (unint64_t *)&qword_100486698);
  }
  return result;
}

uint64_t sub_100154CA4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100154CC8()
{
  uint64_t v0;

  sub_1001533E4(*(double *)(v0 + 24));
}

uint64_t sub_100154CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100154D00(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100154D08()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100154D2C()
{
  uint64_t v0;

  return sub_1001536A4(v0);
}

void sub_100154D34(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  void *v18;
  Swift::String v19;
  void *v20;
  uint64_t v21;
  Swift::String *v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  float32x2_t *v31;
  float32x2_t *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  double *v43;
  Swift::String v44;
  void *v45;
  Swift::String v46;
  Swift::String v47;
  void *v48;
  Swift::String v49;
  uint64_t v50;
  double *v51;
  Swift::String v52;
  void *v53;
  Swift::String v54;
  Swift::String v55;
  void *v56;
  Swift::String v57;
  void *v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double *v65;
  void *object;
  void *countAndFlagsBits;
  unint64_t v68;
  uint64_t v69;
  Swift::String v70;
  double *v71;
  _QWORD v72[8];
  _QWORD v73[38];
  uint64_t __src[38];
  Swift::String _[20];

  v4 = objc_msgSend(a1, "results", ariadne_trace(_:_:_:_:_:)(727056476, 0, 0, 0, 0).n128_f64[0]);
  if (v4)
  {
    v5 = v4;
    v6 = sub_100018148(0, (unint64_t *)&unk_1004866E0, VNObservation_ptr);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    if ((unint64_t)v7 >> 62)
    {
      v63 = v7 < 0 ? v7 : v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v8 = _CocoaArrayWrapper.endIndex.getter(v63);
      swift_bridgeObjectRelease(v7);
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v7);
    if (!v8)
      ariadne_trace(_:_:_:_:_:)(727056472, 0, 0, 0, 0);
  }
  swift_retain();
  Synchronized.wrappedValue.getter(_, v9);
  *(_QWORD *)&v10 = swift_release().n128_u64[0];
  if (!_[0]._countAndFlagsBits)
    goto LABEL_16;
  countAndFlagsBits = (void *)_[0]._countAndFlagsBits;
  object = _[0]._object;
  v11 = objc_msgSend(a1, "results", v10);
  if (!v11
    || (v12 = v11,
        v13 = sub_100018148(0, (unint64_t *)&unk_1004866E0, VNObservation_ptr),
        v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13),
        v12,
        v15 = (uint64_t)sub_10015298C(v14, VNRectangleObservation_ptr),
        swift_bridgeObjectRelease(v14),
        !v15))
  {

LABEL_16:
    ariadne_trace(_:_:_:_:_:)(727056468, 0, 0, 0, 0);
    _[0]._object = 0;
    _[0]._countAndFlagsBits = 0;
    swift_retain();
    v22 = _;
    goto LABEL_17;
  }
  if (!((unint64_t)v15 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v16 >= 1)
      goto LABEL_11;
    goto LABEL_52;
  }
  if (v15 < 0)
    v64 = v15;
  else
    v64 = v15 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v15);
  v16 = _CocoaArrayWrapper.endIndex.getter(v64);
  swift_bridgeObjectRelease(v15);
  if (v16 < 1)
  {
LABEL_52:

    swift_bridgeObjectRelease(v15);
    goto LABEL_16;
  }
LABEL_11:
  if (qword_10047AA28 != -1)
    swift_once(&qword_10047AA28, sub_1000E1108);
  _[0]._countAndFlagsBits = 0;
  _[0]._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(38);
  swift_bridgeObjectRelease(_[0]._object);
  _[0]._countAndFlagsBits = 0x6465766965636552;
  _[0]._object = (void *)0xE900000000000020;
  v65 = (double *)v16;
  __src[0] = v16;
  v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v18 = v17._object;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v18);
  v19._countAndFlagsBits = 0xD00000000000001BLL;
  v19._object = (void *)0x80000001003E23A0;
  String.append(_:)(v19);
  v20 = _[0]._object;
  Log.debug(_:isPrivate:)(_[0], 0);
  swift_bridgeObjectRelease(v20);
  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v23 = v15;
    else
      v23 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v21 = _CocoaArrayWrapper.endIndex.getter(v23);
  }
  else
  {
    v21 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v15);
  }
  v25 = (unint64_t)object;
  v24 = countAndFlagsBits;
  v26 = (char *)_swiftEmptyArrayStorage;
  v69 = a2;
  if (!v21)
    goto LABEL_38;
  if (v21 >= 1)
  {
    v27 = 0;
    v68 = *(_QWORD *)(a2 + 120);
    v28 = v15 & 0xC000000000000001;
    v29 = v15;
    do
    {
      v30 = v21;
      if (v28)
        v31 = (float32x2_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v15);
      else
        v31 = (float32x2_t *)*(id *)(v15 + 8 * v27 + 32);
      v32 = v31;
      v33 = v24;
      v34 = sub_1001555D4(v31, v68, (uint64_t)v24, v25);
      if (!v34
        || (v35 = v34,
            VNRectangleObservation.quad.getter(v72),
            v36 = v33,
            WorldRectangleData.init(_:screenCoordinates:keyFrame:)(v73, v35, v72, v33, v25),
            sub_100012C58((uint64_t)v73, (uint64_t)__src, &qword_100484AC8),
            sub_100124C4C(__src) == 1))
      {
        v24 = v33;
        v15 = v29;
      }
      else
      {
        memcpy(_, __src, 0x130uLL);
        v15 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) == 0)
          v26 = sub_100060538(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
        v38 = *((_QWORD *)v26 + 2);
        v37 = *((_QWORD *)v26 + 3);
        if (v38 >= v37 >> 1)
          v26 = sub_100060538((char *)(v37 > 1), v38 + 1, 1, v26);
        *((_QWORD *)v26 + 2) = v38 + 1;
        memcpy(&v26[304 * v38 + 32], _, 0x130uLL);
        v25 = (unint64_t)object;
        v24 = countAndFlagsBits;
      }
      ++v27;

      v21 = v30;
    }
    while (v30 != v27);
LABEL_38:
    swift_bridgeObjectRelease(v15);
    if (!*((_QWORD *)v26 + 2))
    {
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v26);
      ariadne_trace(_:_:_:_:_:)(727056468, 0, 0, 0, 0);

      v70 = (Swift::String)0;
      swift_retain();
      Synchronized.wrappedValue.setter(&v70);
      swift_release();
      goto LABEL_18;
    }
    swift_retain();
    Synchronized.wrappedValue.getter(&v70, v39);
    swift_release();
    v40 = *(_QWORD *)(v70._countAndFlagsBits + 16);
    swift_bridgeObjectRelease(v70._countAndFlagsBits);
    if (v40 >= *(_QWORD *)(v69 + 176))
    {
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v26);
      swift_retain();
      swift_retain();
      Synchronized.wrappedValue.getter(&v70, v59);
      v60 = swift_release();
      v61 = v70._countAndFlagsBits;
      CurrentValueSubject.send(_:)(&v70, v60);
      swift_bridgeObjectRelease(v61);
      swift_release();
      swift_retain();
      Synchronized.wrappedValue.getter(&v70, v62);
      swift_bridgeObjectRelease(v70._countAndFlagsBits);
      v71 = _swiftEmptyArrayStorage;
      Synchronized.wrappedValue.setter(&v71);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain(v26);
      swift_retain();
      Synchronized.wrappedValue.getter(&v70, v41);
      sub_1001001D4(v26);
      v71 = (double *)v70._countAndFlagsBits;
      Synchronized.wrappedValue.setter(&v71);
      swift_release();
      v70._countAndFlagsBits = 0;
      v70._object = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(116);
      v42._object = (void *)0x80000001003E23C0;
      v42._countAndFlagsBits = 0xD000000000000017;
      String.append(_:)(v42);
      v43 = (double *)*((_QWORD *)v26 + 2);
      swift_bridgeObjectRelease(v26);
      v71 = v43;
      v44._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v45 = v44._object;
      String.append(_:)(v44);
      swift_bridgeObjectRelease(v45);
      v46._countAndFlagsBits = 0xD000000000000018;
      v46._object = (void *)0x80000001003E23E0;
      String.append(_:)(v46);
      swift_bridgeObjectRelease(v15);
      v71 = v65;
      v47._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v48 = v47._object;
      String.append(_:)(v47);
      swift_bridgeObjectRelease(v48);
      v49._countAndFlagsBits = 0xD00000000000003BLL;
      v49._object = (void *)0x80000001003E2400;
      String.append(_:)(v49);
      swift_retain();
      Synchronized.wrappedValue.getter(&v71, v50);
      swift_release();
      v51 = (double *)*((_QWORD *)v71 + 2);
      swift_bridgeObjectRelease(v71);
      v71 = v51;
      v52._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v53 = v52._object;
      String.append(_:)(v52);
      swift_bridgeObjectRelease(v53);
      v54._countAndFlagsBits = 47;
      v54._object = (void *)0xE100000000000000;
      String.append(_:)(v54);
      v71 = *(double **)(v69 + 176);
      v55._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v56 = v55._object;
      String.append(_:)(v55);
      swift_bridgeObjectRelease(v56);
      v57._countAndFlagsBits = 41;
      v57._object = (void *)0xE100000000000000;
      String.append(_:)(v57);
      v58 = v70._object;
      Log.debug(_:isPrivate:)(v70, 0);
      swift_bridgeObjectRelease(v58);
    }
    ariadne_trace(_:_:_:_:_:)(727056468, 0, 0, 0, 0);

    v70 = (Swift::String)0;
    swift_retain();
    v22 = &v70;
LABEL_17:
    Synchronized.wrappedValue.setter(v22);
    swift_release();
LABEL_18:
    ariadne_trace(_:_:_:_:_:)(727056480, 0, 0, 0, 0);
    return;
  }
  __break(1u);
}

uint64_t sub_1001555D4(float32x2_t *a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  _QWORD *v44;
  _QWORD *v45;
  unint64_t v46;
  BOOL v47;
  float v48;
  float v49;
  float v50;
  float v51;
  float32x2_t v52;
  float32x2_t v53;
  float32x2_t v54;
  float32x2_t v55;
  unsigned __int32 v56;
  float32x2_t v57;
  float32x2_t v58;
  float32x2_t v59;
  float32x2_t v60;
  float32x2_t v61;
  float32x2_t v62;
  float v63;
  float32x2_t v64;
  float32x2_t v65;
  float v66;
  float v67;
  float32x2_t v68;
  float32x2_t v69;
  float32x2_t v70;
  float32x2_t v71;
  float32x2_t v72;
  float32x2_t v73;
  float v74;
  float MinX;
  float MinY;
  float MaxX;
  float MaxY;
  void *v79;
  void *v80;
  id v81;
  id v82;
  unint64_t v83;
  const char *v84;
  unint64_t v85;
  _QWORD *v86;
  id v88;
  uint64_t v89;
  id v90;
  __n128 v91;
  __n128 v92;
  __n128 v93;
  __n128 v94;
  uint64_t v95;
  __n128 *v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  __n128 v100;
  __n128 v101;
  __n128 v102;
  unint64_t v103;
  __n128 v104;
  __n128 v105;
  unint64_t v106;
  unsigned __int32 v107;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v109;
  Swift::String v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  double *v120;
  unint64_t v121;
  unint64_t v122;
  double *v123;
  double *v124;
  __n128 v125;
  __n128 v126;
  __n128 v127;
  uint64_t v128;
  int v129;
  __n128 v131;
  __n128 v132;
  uint64_t v133;
  char v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  Swift::String v138;
  uint64_t v139;
  uint64_t v140;
  double v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  double *v145;
  double *v146;
  __n128 v147;
  unint64_t v148;
  unint64_t v149;
  double *v150;
  uint64_t v151;
  double v152;
  __n128 v153;
  __n128 v154;
  __n128 v155;
  __n128 v156;
  id v157;
  id v158;
  uint64_t v159;
  id v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  int64_t v173;
  int64_t v174;
  unint64_t v175;
  unint64_t v176;
  int64_t v177;
  unint64_t v178;
  int64_t v179;
  uint64_t v180;
  char v181;
  Swift::String v182;
  unint64_t v183;
  unint64_t v184;
  char v185;
  uint64_t v186;
  char v187;
  char v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  unint64_t v193;
  uint64_t v194;
  _BOOL8 v195;
  uint64_t v196;
  char v197;
  unint64_t v198;
  char v199;
  uint64_t v200;
  uint64_t v201;
  BOOL v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  char v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  char v225;
  uint64_t v226;
  unsigned __int8 v227;
  unsigned __int8 v228;
  int v229;
  float (*v230)(__n128);
  __n128 v231;
  float v232;
  float (*v233)(__n128);
  __n128 v234;
  float v235;
  Swift::String v236;
  uint64_t (*v237)(__n128);
  __n128 v238;
  char v239;
  unint64_t v240;
  _QWORD *v241;
  __n128 *v242;
  double v243;
  void (*v244)(_OWORD *__return_ptr, uint64_t, uint64_t, double);
  unsigned __int32 v245;
  __n128 v246;
  __n128 v247;
  __n128 v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  __n128 v255;
  uint64_t v256;
  void *v257;
  void *v258;
  id v259;
  id v260;
  id v261;
  __n128 v262;
  uint64_t v263;
  __n128 v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  unint64_t v271;
  void *v272;
  char *v273;
  unint64_t v274;
  float (*v275)(__n128);
  __n128 v276;
  float v277;
  uint64_t v278;
  uint64_t v279;
  unint64_t v280;
  unint64_t v281;
  uint64_t v282;
  Swift::String v283;
  uint64_t v284;
  __n128 v285;
  uint64_t v286;
  __n128 v287;
  void *v288;
  __n128 v289;
  __n128 v290;
  __n128 v291;
  __n128 v292;
  __n128 v293;
  float32x4_t v294;
  float32x4_t v295;
  float32x4_t v296;
  float v297;
  void *v298;
  void *v299;
  id v300;
  id v301;
  Swift::String v302;
  Swift::String v303;
  void *object;
  uint64_t v305;
  uint64_t v306;
  double *v307;
  __n128 v308;
  __n128 v309;
  __n128 v310;
  __n128 v311;
  uint64_t v312;
  uint64_t v313;
  _QWORD *v314;
  __n128 v315;
  __n128 v316;
  __n128 v317;
  __n128 v318;
  __n128 v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  __n128 v325;
  __n128 v326;
  __n128 v327;
  __n128 v328;
  Swift::String v329;
  uint64_t (*v330)(uint64_t);
  void *v331;
  void (*v332)();
  uint64_t v333;
  uint64_t v334;
  _OWORD v335[7];
  unsigned __int32 v336;
  uint64_t v337;
  _QWORD v338[16];
  _QWORD v339[6];
  __n128 v340[2];
  char v341;
  _QWORD v342[16];
  _OWORD v343[4];
  char v344;
  _QWORD v345[8];
  char v346;
  _QWORD v347[20];
  CGRect v348;
  CGRect v349;
  CGRect v350;
  CGRect v351;

  v328.n128_u64[0] = a4;
  v327.n128_u64[0] = a2;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v324 = *(_QWORD *)(v7 - 8);
  v325.n128_u64[0] = v7;
  __chkstk_darwin(v7);
  v323 = (char *)&v306 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v321 = *(_QWORD *)(v9 - 8);
  v322 = v9;
  __chkstk_darwin(v9);
  v320 = (char *)&v306 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t *)(v4 + 152);
  swift_beginAccess(v4 + 152, &v337, 1, 0);
  v326.n128_u64[0] = v4;
  v12 = *(_QWORD *)(v4 + 152);
  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v17 = *(_QWORD *)(v4 + 152);
    else
      v17 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v4 + 152));
    v13 = _CocoaArrayWrapper.endIndex.getter(v17);
    if (v13)
      goto LABEL_3;
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v4 + 152));
    if (v13)
    {
LABEL_3:
      if (v13 < 1)
        goto LABEL_165;
      for (i = 0; i != v13; ++i)
      {
        if ((v12 & 0xC000000000000001) != 0)
          v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
        else
          v15 = *(id *)(v12 + 8 * i + 32);
        v16 = v15;
        objc_msgSend(v15, "removeFromSuperlayer");

      }
    }
  }
  swift_bridgeObjectRelease(v12);
  v18 = *v11;
  *v11 = (uint64_t)_swiftEmptyArrayStorage;
  -[float32x2_t boundingBox](a1, "boundingBox", swift_bridgeObjectRelease(v18).n128_f64[0]);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  if (qword_10047B190 != -1)
    swift_once(&qword_10047B190, sub_1001C81CC);
  v27 = qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits;
  if ((*(_BYTE *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80) & 1) == 0)
  {
    v29 = *(double *)(v27 + 64);
    v28 = *(double *)(v27 + 72);
    v30 = sub_10000EDC8((uint64_t *)&unk_10047ED60);
    v31 = swift_allocObject(v30, 96, 7);
    *(_OWORD *)(v31 + 16) = xmmword_1003B0AF0;
    -[float32x2_t topLeft](a1, "topLeft");
    *(_QWORD *)(v31 + 32) = v32;
    *(_QWORD *)(v31 + 40) = v33;
    -[float32x2_t topRight](a1, "topRight");
    *(_QWORD *)(v31 + 48) = v34;
    *(_QWORD *)(v31 + 56) = v35;
    -[float32x2_t bottomRight](a1, "bottomRight");
    *(_QWORD *)(v31 + 64) = v36;
    *(_QWORD *)(v31 + 72) = v37;
    -[float32x2_t bottomLeft](a1, "bottomLeft");
    *(_QWORD *)(v31 + 80) = v38;
    *(_QWORD *)(v31 + 88) = v39;
    v40 = (id)a3;
    v41 = v328.n128_u64[0];
    a1 = (float32x2_t *)sub_1001580E8(v31, (uint64_t)v40, v328.n128_i64[0], v29, v28);

    swift_setDeallocating(v31);
    swift_deallocClassInstance(v31, 32, 7);
    v42 = v40;
    swift_bridgeObjectRetain(a1);
    v43 = (id)v327.n128_u64[0];
    sub_1001581E4(0, 4, (uint64_t)v42, v41, (uint64_t)a1, (uint64_t)v43);
    v45 = v44;

    swift_bridgeObjectRelease(a1);
    v46 = (unint64_t)a1[2];
    if (v46 < 3)
    {
      __break(1u);
    }
    else if (v46 != 3)
    {
      v47 = 0;
      v48 = v29;
      v49 = v28;
      v50 = v48 * 0.5;
      v51 = v49 * 0.5;
      v52 = a1[7];
      v53 = vsub_f32(a1[6], v52);
      v54 = vmul_f32(v53, v53);
      v55 = vsub_f32(a1[4], v52);
      v56 = vadd_f32(v54, (float32x2_t)vdup_lane_s32((int32x2_t)v54, 1)).u32[0];
      v57 = vrsqrte_f32((float32x2_t)v56);
      v58 = vmul_f32(v57, vrsqrts_f32((float32x2_t)v56, vmul_f32(v57, v57)));
      v59 = vmul_n_f32(v53, vmul_f32(v58, vrsqrts_f32((float32x2_t)v56, vmul_f32(v58, v58))).f32[0]);
      v60.f32[0] = v50 - v52.f32[0];
      v60.f32[1] = v51 - v52.f32[1];
      v61 = vmul_f32(v60, v59);
      v62 = vmul_f32(v55, v55);
      LODWORD(v63) = vadd_f32(v62, (float32x2_t)vdup_lane_s32((int32x2_t)v62, 1)).u32[0];
      if (vaddv_f32(v61) > 0.0)
      {
        v64 = vadd_f32(v61, (float32x2_t)vdup_lane_s32((int32x2_t)v61, 1));
        v65 = vmul_f32(v59, v64);
        v66 = vmul_lane_f32(v64, v59, 1).f32[0];
        v64.f32[0] = v50 - vadd_f32(v52, v65).f32[0];
        v64.f32[1] = v51 - (float)(v52.f32[1] + v66);
        v67 = sqrtf(vaddv_f32(vmul_f32(v64, v64)));
        if (v67 > 0.0)
          v47 = v67 < sqrtf(v63);
      }
      v68 = vrsqrte_f32((float32x2_t)LODWORD(v63));
      v69 = vmul_f32(v68, vrsqrts_f32((float32x2_t)LODWORD(v63), vmul_f32(v68, v68)));
      v70 = vmul_n_f32(v55, vmul_f32(v69, vrsqrts_f32((float32x2_t)LODWORD(v63), vmul_f32(v69, v69))).f32[0]);
      v71 = vmul_f32(v60, v70);
      if (vaddv_f32(v71) > 0.0)
      {
        v72 = vadd_f32(v71, (float32x2_t)vdup_lane_s32((int32x2_t)v71, 1));
        v73.f32[0] = v50 - vadd_f32(v52, vmul_f32(v70, v72)).f32[0];
        v73.f32[1] = v51 - (float)(v52.f32[1] + vmul_lane_f32(v72, v70, 1).f32[0]);
        v74 = sqrtf(vaddv_f32(vmul_f32(v73, v73)));
        if (v74 > 0.0 && v47 && v74 < sqrtf(vaddv_f32(v54)))
        {
          v348.origin.x = v20;
          v348.origin.y = v22;
          v348.size.width = v24;
          v348.size.height = v26;
          MinX = CGRectGetMinX(v348);
          if (MinX >= 0.01)
          {
            v349.origin.x = v20;
            v349.origin.y = v22;
            v349.size.width = v24;
            v349.size.height = v26;
            MinY = CGRectGetMinY(v349);
            if (MinY >= 0.01)
            {
              v350.origin.x = v20;
              v350.origin.y = v22;
              v350.size.width = v24;
              v350.size.height = v26;
              MaxX = CGRectGetMaxX(v350);
              if (MaxX <= 0.99)
              {
                v351.origin.x = v20;
                v351.origin.y = v22;
                v351.size.width = v24;
                v351.size.height = v26;
                MaxY = CGRectGetMaxY(v351);
                if (MaxY <= 0.99)
                {
                  v314 = v45;
                  v88 = v42;
                  swift_bridgeObjectRetain(a1);
                  v89 = sub_100158340(0, 4, (uint64_t)a1, (uint64_t)v88, v328.n128_i64[0]);
                  v306 = 0;
                  swift_bridgeObjectRelease(a1);

                  v313 = (uint64_t)v88;
                  v90 = objc_msgSend(v88, "camera");
                  objc_msgSend(v90, "transform");
                  v310 = v92;
                  v311 = v91;
                  v308 = v94;
                  v309 = v93;

                  v95 = *(_QWORD *)(v89 + 16);
                  a3 = (uint64_t)_swiftEmptyArrayStorage;
                  v312 = v89;
                  if (v95)
                  {
                    swift_bridgeObjectRetain(v89);
                    v96 = (__n128 *)(v89 + 144);
                    do
                    {
                      v103 = v96[-1].n128_u64[1];
                      if (v103)
                      {
                        v327 = v96[-7];
                        v104 = v96[-6];
                        v318 = v96[-5];
                        v319 = v104;
                        v105 = v96[-4];
                        v316 = v96[-3];
                        v317 = v105;
                        v315 = v96[-2];
                        v106 = v96[-1].n128_u64[0];
                        v107 = v96->n128_u32[0];
                        swift_retain();
                        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a3);
                        v347[0] = a3;
                        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                        {
                          sub_1000A587C(0, *(_QWORD *)(a3 + 16) + 1, 1);
                          a3 = v347[0];
                        }
                        v98 = *(_QWORD *)(a3 + 16);
                        v97 = *(_QWORD *)(a3 + 24);
                        if (v98 >= v97 >> 1)
                        {
                          sub_1000A587C((double *)(v97 > 1), v98 + 1, 1);
                          a3 = v347[0];
                        }
                        *(_QWORD *)(a3 + 16) = v98 + 1;
                        v99 = a3 + (v98 << 7);
                        v100 = v319;
                        *(__n128 *)(v99 + 32) = v327;
                        *(__n128 *)(v99 + 48) = v100;
                        v101 = v317;
                        *(__n128 *)(v99 + 64) = v318;
                        *(__n128 *)(v99 + 80) = v101;
                        v102 = v315;
                        *(__n128 *)(v99 + 96) = v316;
                        *(__n128 *)(v99 + 112) = v102;
                        *(_QWORD *)(v99 + 128) = v106;
                        *(_QWORD *)(v99 + 136) = v103;
                        *(_DWORD *)(v99 + 144) = v107;
                      }
                      v96 += 8;
                      --v95;
                    }
                    while (v95);
                    v89 = v312;
                    swift_bridgeObjectRelease(v312);
                  }
                  v109 = v314;
                  if (*(_QWORD *)(a3 + 16))
                  {
                    v345[0] = _swiftEmptyDictionarySingleton;
                    if (qword_10047AA28 == -1)
                      goto LABEL_53;
                    goto LABEL_173;
                  }
                  swift_release();
                  sub_100158FB8((uint64_t)a1, v313, v328.n128_i64[0]);
                  if (v136)
                  {
                    v137 = v136;
                    if (qword_10047AA28 != -1)
                      swift_once(&qword_10047AA28, sub_1000E1108);
                    v138._countAndFlagsBits = 0xD000000000000057;
                    v138._object = (void *)0x80000001003E2610;
                    Log.debug(_:isPrivate:)(v138, 0);
                    goto LABEL_217;
                  }
                  swift_bridgeObjectRelease(v109);
                  swift_bridgeObjectRelease(a1);
                  swift_bridgeObjectRelease(v89);
                  if (qword_10047AA28 != -1)
                    swift_once(&qword_10047AA28, sub_1000E1108);
                  v83 = 0xD000000000000057;
                  v84 = "Projecting rectangle corners failed -> searching for plane inside rectangle... FAILURE!";
                  goto LABEL_36;
                }
              }
            }
          }
          swift_bridgeObjectRelease(v45);
          if (qword_10047A930 == -1)
          {
LABEL_30:
            if (!qword_1004AF238)
              goto LABEL_272;
            v79 = *(void **)(qword_1004AF238 + 80);
            if (v79)
            {
              v80 = (void *)objc_opt_self(UIColor);
              v81 = v79;
              v82 = objc_msgSend(v80, "redColor");
              sub_10004945C((uint64_t)a1, v82, 0xD000000000000014, 0x80000001003E2710);

            }
            swift_bridgeObjectRelease(a1);
            if (qword_10047AA28 != -1)
              swift_once(&qword_10047AA28, sub_1000E1108);
            v83 = 0xD000000000000039;
            v84 = "Ignored 2D rectangle for being too close to display edge.";
LABEL_36:
            v85 = (unint64_t)(v84 - 32) | 0x8000000000000000;
            Log.debug(_:isPrivate:)(*(Swift::String *)&v83, 0);
            return 0;
          }
LABEL_167:
          swift_once(&qword_10047A930, sub_100083368);
          goto LABEL_30;
        }
      }
      swift_bridgeObjectRelease(a1);
      v86 = v45;
LABEL_38:
      swift_bridgeObjectRelease(v86);
      return 0;
    }
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
    goto LABEL_167;
  }
  __break(1u);
LABEL_175:
  if (a3 < 0)
    v204 = a3;
  else
    v204 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(a3, 2);
  v165 = _CocoaArrayWrapper.endIndex.getter(v204);
  swift_bridgeObjectRelease(a3);
  if (!v165)
  {
LABEL_179:
    swift_bridgeObjectRelease(a3);
    v168 = v345[0];
    goto LABEL_180;
  }
LABEL_104:
  v166 = 0;
  v327.n128_u64[0] = a3 & 0xC000000000000001;
  v316.n128_u64[0] = a3 & 0xFFFFFFFFFFFFFF8;
  v315.n128_u64[0] = a3 + 32;
  v317.n128_u64[0] = 0x80000001003E24A0;
  v318.n128_u64[0] = a3;
  v319.n128_u64[0] = v165;
  while (1)
  {
    if (v327.n128_u64[0])
    {
      a3 = specialized _ArrayBuffer._getElementSlowPath(_:)(v166, a3);
    }
    else
    {
      if (v166 >= *(_QWORD *)(v316.n128_u64[0] + 16))
        goto LABEL_169;
      a3 = *(_QWORD *)(v315.n128_u64[0] + 8 * v166);
      swift_retain();
    }
    v328.n128_u64[0] = v166 + 1;
    if (__OFADD__(v166, 1))
    {
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      swift_once(&qword_10047AA28, sub_1000E1108);
LABEL_53:
      v110._countAndFlagsBits = 0xD000000000000056;
      v110._object = (void *)0x80000001003E2440;
      Log.debug(_:isPrivate:)(v110, 0);
      v347[0] = _swiftEmptyArrayStorage;
      v111 = *(_QWORD *)(a3 + 16);
      if (v111)
      {
        swift_retain();
        v112 = 136;
        v113 = v111;
        do
        {
          v115 = *(_QWORD *)(a3 + v112);
          if (v115)
          {
            swift_retain();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v116);
            v118 = *(_QWORD *)((v347[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
            v117 = *(_QWORD *)((v347[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v118 >= v117 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v117 > 1, v118 + 1, 1);
            v114 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v118, v115);
            specialized Array._endMutation()(v114);
          }
          v112 += 128;
          --v113;
        }
        while (v113);
        swift_release();
        *(_QWORD *)&v343[0] = v347[0];
        v119 = a3 + 80;
        v120 = _swiftEmptyArrayStorage;
        do
        {
          v128 = *(_QWORD *)(v119 + 56);
          if (!v128)
            goto LABEL_273;
          v129 = *(unsigned __int8 *)(v128 + 48);
          if (v129 == 5 || v129 == 3)
          {
            v327 = *(__n128 *)(v119 - 48);
            v131 = *(__n128 *)(v119 - 32);
            v318 = *(__n128 *)(v119 - 16);
            v319 = v131;
            v132 = *(__n128 *)v119;
            v316 = *(__n128 *)(v119 + 16);
            v317 = v132;
            v315 = *(__n128 *)(v119 + 32);
            v133 = *(_QWORD *)(v119 + 48);
            v135 = *(_DWORD *)(v119 + 64);
            swift_retain();
            v134 = swift_isUniquelyReferenced_nonNull_native(v120);
            v347[0] = v120;
            if ((v134 & 1) == 0)
            {
              sub_1000A587C(0, *((_QWORD *)v120 + 2) + 1, 1);
              v120 = (double *)v347[0];
            }
            v122 = *((_QWORD *)v120 + 2);
            v121 = *((_QWORD *)v120 + 3);
            v123 = v120;
            if (v122 >= v121 >> 1)
            {
              LODWORD(v307) = v135;
              sub_1000A587C((double *)(v121 > 1), v122 + 1, 1);
              v135 = (int)v307;
              v123 = (double *)v347[0];
            }
            *((_QWORD *)v123 + 2) = v122 + 1;
            v124 = &v123[16 * v122];
            v125 = v319;
            *((__n128 *)v124 + 2) = v327;
            *((__n128 *)v124 + 3) = v125;
            v126 = v317;
            *((__n128 *)v124 + 4) = v318;
            *((__n128 *)v124 + 5) = v126;
            v127 = v315;
            *((__n128 *)v124 + 6) = v316;
            *((__n128 *)v124 + 7) = v127;
            *((_QWORD *)v124 + 16) = v133;
            *((_QWORD *)v124 + 17) = v128;
            *((_DWORD *)v124 + 36) = v135;
            v120 = v123;
          }
          v119 += 128;
          --v111;
        }
        while (v111);
      }
      else
      {
        *(_QWORD *)&v343[0] = _swiftEmptyArrayStorage;
        v120 = _swiftEmptyArrayStorage;
      }
      swift_release();
      if (*((_QWORD *)v120 + 2) >= 2uLL)
      {
        MeasureCore.shared.unsafeMutableAddressor(v139);
        swift_retain();
        v141 = static SIMD2<>.average(_:)(a1);
        sub_100158F58((uint64_t)v335);
        sub_100012C58((uint64_t)v335, (uint64_t)v347, &qword_100483F80);
        v140 = v312;
        if (qword_10047ABD0 != -1)
          swift_once(&qword_10047ABD0, sub_1001530E0);
        MeasureCore.hitTest(screenPoint:frame:orientation:context:planeTypes:)(v338, v313, v328.n128_u64[0], v347, qword_1004863D8, v141);
        swift_release();
        sub_100012C58((uint64_t)v338, (uint64_t)v342, &qword_1004866F0);
        if (v342[13])
        {
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native(v120) & 1) == 0)
            v120 = sub_100060880(0, *((_QWORD *)v120 + 2) + 1, 1, v120);
          v143 = *((_QWORD *)v120 + 2);
          v142 = *((_QWORD *)v120 + 3);
          if (v143 >= v142 >> 1)
            v120 = sub_100060880((double *)(v142 > 1), v143 + 1, 1, v120);
          *((_QWORD *)v120 + 2) = v143 + 1;
          sub_100012C58((uint64_t)v338, (uint64_t)&v120[16 * v143 + 4], &qword_1004866F0);
          sub_100047210((uint64_t)v338);
        }
      }
      else
      {
        v140 = v312;
      }
      v144 = *((_QWORD *)v120 + 2);
      v307 = v120;
      if (v144 >= 3)
      {
        swift_bridgeObjectRetain(v120);
        v145 = v120 + 9;
        v146 = _swiftEmptyArrayStorage;
        do
        {
          if (*((_QWORD *)v145 + 8))
          {
            v147.n128_f64[0] = simd_float4x4.position.getter(*(__n128 *)(v145 - 3), *(__n128 *)(v145 - 1), *(__n128 *)(v145 + 1), *(__n128 *)(v145 + 3));
            v328 = v147;
            if ((swift_isUniquelyReferenced_nonNull_native(v146) & 1) == 0)
              v146 = sub_1000609A0(0, *((_QWORD *)v146 + 2) + 1, 1, (uint64_t)v146);
            v149 = *((_QWORD *)v146 + 2);
            v148 = *((_QWORD *)v146 + 3);
            if (v149 >= v148 >> 1)
              v146 = sub_1000609A0((double *)(v148 > 1), v149 + 1, 1, (uint64_t)v146);
            *((_QWORD *)v146 + 2) = v149 + 1;
            *(__n128 *)&v146[2 * v149 + 4] = v328;
          }
          v145 += 16;
          --v144;
        }
        while (v144);
        v150 = v307;
        swift_bridgeObjectRelease(v307);
        type metadata accessor for PlaneUtil(0);
        static PlaneUtil.findBestPlane(points:facing:)(v339, v146, v311, v310, v309, v308);
        swift_bridgeObjectRelease(v146);
        sub_100012C58((uint64_t)v339, (uint64_t)v340, &qword_1004866F8);
        if ((v341 & 1) != 0)
        {
          swift_bridgeObjectRelease(v150);
          swift_bridgeObjectRelease(a1);
          swift_bridgeObjectRelease(v314);
          v151 = *(_QWORD *)&v343[0];
          swift_bridgeObjectRelease(v140);
          swift_bridgeObjectRelease(v151);
          v86 = (_QWORD *)v345[0];
          goto LABEL_38;
        }
        v152 = static simd_float4x4.make(position:normalizedForward:)(v340[0], v340[1]);
        v153.n128_f64[0] = sceneKitToARKit(_:)(v152);
        v327 = v154;
        v328 = v153;
        v318 = v156;
        v319 = v155;
        v157 = objc_allocWithZone((Class)ARAnchor);
        v158 = objc_msgSend(v157, "initWithTransform:", v328.n128_f64[0], v327.n128_f64[0], v319.n128_f64[0], v318.n128_f64[0]);
        v159 = type metadata accessor for WorldPlane(0);
        swift_allocObject(v159, 60, 7);
        v160 = v158;
        v161 = WorldPlane.init(anchor:type:uncertainty:confidenceMultiplier:)(0.0, 1.0);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v161);
        v163 = *(_QWORD *)((*(_QWORD *)&v343[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v162 = *(_QWORD *)((*(_QWORD *)&v343[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v163 >= v162 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v162 > 1, v163 + 1, 1);
        v164 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v163, v161);
        specialized Array._endMutation()(v164);

      }
      a3 = *(_QWORD *)&v343[0];
      if (*(_QWORD *)&v343[0] >> 62)
        goto LABEL_175;
      v165 = *(_QWORD *)((*(_QWORD *)&v343[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)&v343[0]);
      if (!v165)
        goto LABEL_179;
      goto LABEL_104;
    }
    v168 = v345[0];
    v169 = v345[0] + 64;
    v170 = 1 << *(_BYTE *)(v345[0] + 32);
    if (v170 < 64)
      v171 = ~(-1 << v170);
    else
      v171 = -1;
    v172 = v171 & *(_QWORD *)(v345[0] + 64);
    v173 = (unint64_t)(v170 + 63) >> 6;
    swift_bridgeObjectRetain(v345[0]);
    v174 = 0;
    if (v172)
    {
LABEL_116:
      v175 = __clz(__rbit64(v172));
      v172 &= v172 - 1;
      v176 = v175 | (v174 << 6);
      goto LABEL_135;
    }
    while (1)
    {
      v177 = v174 + 1;
      if (__OFADD__(v174, 1))
        goto LABEL_166;
      if (v177 >= v173)
        goto LABEL_141;
      v178 = *(_QWORD *)(v169 + 8 * v177);
      ++v174;
      if (!v178)
      {
        v174 = v177 + 1;
        if (v177 + 1 >= v173)
          goto LABEL_141;
        v178 = *(_QWORD *)(v169 + 8 * v174);
        if (!v178)
        {
          v174 = v177 + 2;
          if (v177 + 2 >= v173)
            goto LABEL_141;
          v178 = *(_QWORD *)(v169 + 8 * v174);
          if (!v178)
          {
            v174 = v177 + 3;
            if (v177 + 3 >= v173)
              goto LABEL_141;
            v178 = *(_QWORD *)(v169 + 8 * v174);
            if (!v178)
            {
              v174 = v177 + 4;
              if (v177 + 4 >= v173)
                goto LABEL_141;
              v178 = *(_QWORD *)(v169 + 8 * v174);
              if (!v178)
              {
                v179 = v177 + 5;
                if (v179 >= v173)
                {
LABEL_141:
                  swift_release();
                  v184 = v319.n128_u64[0];
                  v166 = v328.n128_u64[0];
                  goto LABEL_146;
                }
                v178 = *(_QWORD *)(v169 + 8 * v179);
                if (!v178)
                {
                  while (1)
                  {
                    v174 = v179 + 1;
                    if (__OFADD__(v179, 1))
                      goto LABEL_172;
                    if (v174 >= v173)
                      goto LABEL_141;
                    v178 = *(_QWORD *)(v169 + 8 * v174);
                    ++v179;
                    if (v178)
                      goto LABEL_134;
                  }
                }
                v174 = v179;
              }
            }
          }
        }
      }
LABEL_134:
      v172 = (v178 - 1) & v178;
      v176 = __clz(__rbit64(v178)) + (v174 << 6);
LABEL_135:
      v180 = *(_QWORD *)(*(_QWORD *)(v168 + 48) + 8 * v176);
      swift_retain();
      sub_1001576D8(a3);
      if ((v181 & 1) != 0)
        break;
      swift_release();
      if (v172)
        goto LABEL_116;
    }
    v182._countAndFlagsBits = 0xD00000000000004ALL;
    v182._object = (void *)v317.n128_u64[0];
    Log.debug(_:isPrivate:)(v182, 0);
    if (*(_QWORD *)(v168 + 16))
    {
      swift_retain();
      swift_retain();
      v183 = sub_1000C84D0(v180);
      v184 = v319.n128_u64[0];
      if ((v185 & 1) != 0)
      {
        v186 = *(_QWORD *)(*(_QWORD *)(v168 + 56) + 8 * v183);
        swift_release();
        v187 = swift_isUniquelyReferenced_nonNull_native(v168);
        *(_QWORD *)&v335[0] = v168;
        sub_1000BD710(v186, a3, v187);
        v345[0] = *(_QWORD *)&v335[0];
        swift_release();
        swift_bridgeObjectRelease(0x8000000000000000);
        v166 = v328.n128_u64[0];
        goto LABEL_145;
      }
      swift_release();
    }
    else
    {
      swift_retain();
      v184 = v319.n128_u64[0];
    }
    v166 = v328.n128_u64[0];
    sub_100093FC8(a3);
    swift_release();
LABEL_145:
    sub_100093FC8(v180);
    swift_release();
    swift_release();
    v168 = v345[0];
LABEL_146:
    if (!*(_QWORD *)(v168 + 16)
      || (swift_bridgeObjectRetain(v168),
          sub_1000C84D0(a3),
          v189 = v188,
          swift_bridgeObjectRelease(v168),
          (v189 & 1) == 0))
    {
      v167 = swift_isUniquelyReferenced_nonNull_native(v168);
      *(_QWORD *)&v335[0] = v168;
      sub_1000BD710(1, a3, v167);
      v168 = *(_QWORD *)&v335[0];
      v345[0] = *(_QWORD *)&v335[0];
      swift_release();
      swift_bridgeObjectRelease(0x8000000000000000);
      goto LABEL_106;
    }
    swift_retain();
    v190 = swift_isUniquelyReferenced_nonNull_native(v168);
    *(_QWORD *)&v335[0] = v168;
    v345[0] = 0x8000000000000000;
    swift_retain();
    v193 = sub_1000C84D0(v191);
    v194 = *(_QWORD *)(v168 + 16);
    v195 = (v192 & 1) == 0;
    v196 = v194 + v195;
    if (__OFADD__(v194, v195))
      goto LABEL_170;
    v197 = v192;
    if (*(_QWORD *)(v168 + 24) >= v196)
    {
      if ((v190 & 1) != 0)
      {
        if ((v192 & 1) == 0)
          break;
      }
      else
      {
        sub_1000C042C();
        if ((v197 & 1) == 0)
          break;
      }
      goto LABEL_155;
    }
    sub_1000BB114(v196, v190);
    v198 = sub_1000C84D0(a3);
    if ((v197 & 1) != (v199 & 1))
      goto LABEL_277;
    v193 = v198;
    if ((v197 & 1) == 0)
      break;
LABEL_155:
    v168 = *(_QWORD *)&v335[0];
    v200 = *(_QWORD *)(*(_QWORD *)&v335[0] + 56);
    v201 = *(_QWORD *)(v200 + 8 * v193);
    v202 = __OFADD__(v201, 1);
    v203 = v201 + 1;
    if (v202)
      goto LABEL_171;
    *(_QWORD *)(v200 + 8 * v193) = v203;
    swift_release();
    v345[0] = v168;
    swift_release_n(a3, 2);
    v166 = v328.n128_u64[0];
LABEL_106:
    a3 = v318.n128_u64[0];
    if (v166 == v184)
      goto LABEL_159;
  }
  __break(1u);
LABEL_159:
  swift_bridgeObjectRelease(a3);
LABEL_180:
  v205 = *(_QWORD *)(v168 + 64);
  v327.n128_u64[0] = v168 + 64;
  v206 = 1 << *(_BYTE *)(v168 + 32);
  v207 = -1;
  if (v206 < 64)
    v207 = ~(-1 << v206);
  v208 = v207 & v205;
  v328.n128_u64[0] = (unint64_t)(v206 + 63) >> 6;
  swift_bridgeObjectRetain(v168);
  v137 = 0;
  v209 = 0;
  while (v208)
  {
    v210 = __clz(__rbit64(v208));
    v208 &= v208 - 1;
    v211 = v210 | (v209 << 6);
LABEL_200:
    v215 = 8 * v211;
    a3 = *(_QWORD *)(*(_QWORD *)(v168 + 48) + v215);
    if (v137)
    {
      v216 = v137;
      v217 = *(_QWORD *)(*(_QWORD *)(v168 + 56) + v215);
      v218 = *(_QWORD *)(v168 + 16);
      swift_retain();
      if (!v218)
        goto LABEL_269;
      swift_retain();
      v220 = sub_1000C84D0(v219);
      if ((v221 & 1) == 0)
      {
        swift_release();
LABEL_269:
        swift_release();
        __break(1u);
LABEL_270:
        swift_release();
LABEL_271:
        swift_release();
        __break(1u);
LABEL_272:
        __break(1u);
LABEL_273:
        __break(1u);
LABEL_274:
        __break(1u);
LABEL_275:
        __break(1u);
        JUMPOUT(0x100157694);
      }
      v222 = *(_QWORD *)(*(_QWORD *)(v168 + 56) + 8 * v220);
      swift_release();
      if (v222 < v217)
        goto LABEL_211;
      if (!*(_QWORD *)(v168 + 16))
        goto LABEL_271;
      swift_retain();
      v224 = sub_1000C84D0(v223);
      if ((v225 & 1) == 0)
        goto LABEL_270;
      v226 = *(_QWORD *)(*(_QWORD *)(v168 + 56) + 8 * v224);
      swift_release();
      if (v217 != v226)
      {
LABEL_183:
        swift_release();
        v137 = v216;
        continue;
      }
      swift_retain();
      sub_1001576D8(a3);
      v228 = v227;
      v229 = v227;
      swift_release();
      if (v229 != 2)
      {
        if ((v228 & 1) == 0)
          goto LABEL_183;
LABEL_211:
        swift_release();
        v137 = a3;
        continue;
      }
      v230 = *(float (**)(__n128))(*(_QWORD *)a3 + 232);
      v231 = swift_retain();
      v232 = v230(v231);
      swift_release();
      v233 = *(float (**)(__n128))(*(_QWORD *)v216 + 232);
      v234 = swift_retain();
      v235 = v233(v234);
      swift_release();
      v137 = v216;
      swift_release();
      if (v235 < v232)
        v137 = a3;
    }
    else
    {
      swift_retain();
      v137 = a3;
    }
  }
  v212 = v209 + 1;
  if (__OFADD__(v209, 1))
    goto LABEL_263;
  v89 = v312;
  if (v212 >= v328.n128_i64[0])
    goto LABEL_214;
  v213 = *(_QWORD *)(v327.n128_u64[0] + 8 * v212);
  ++v209;
  if (v213)
    goto LABEL_199;
  v209 = v212 + 1;
  if (v212 + 1 >= v328.n128_i64[0])
    goto LABEL_214;
  v213 = *(_QWORD *)(v327.n128_u64[0] + 8 * v209);
  if (v213)
    goto LABEL_199;
  v209 = v212 + 2;
  if (v212 + 2 >= v328.n128_i64[0])
    goto LABEL_214;
  v213 = *(_QWORD *)(v327.n128_u64[0] + 8 * v209);
  if (v213)
  {
LABEL_199:
    v208 = (v213 - 1) & v213;
    v211 = __clz(__rbit64(v213)) + (v209 << 6);
    goto LABEL_200;
  }
  v214 = v212 + 3;
  if (v214 >= v328.n128_i64[0])
    goto LABEL_214;
  v213 = *(_QWORD *)(v327.n128_u64[0] + 8 * v214);
  if (v213)
  {
    v209 = v214;
    goto LABEL_199;
  }
  while (1)
  {
    v209 = v214 + 1;
    if (__OFADD__(v214, 1))
      goto LABEL_264;
    if (v209 >= v328.n128_i64[0])
      break;
    v213 = *(_QWORD *)(v327.n128_u64[0] + 8 * v209);
    ++v214;
    if (v213)
      goto LABEL_199;
  }
LABEL_214:
  swift_release();
  if (v137)
  {
    v328.n128_u64[0] = qword_1004AF450;
    *(_QWORD *)&v335[0] = 0;
    *((_QWORD *)&v335[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(86);
    v236._countAndFlagsBits = 0xD000000000000034;
    v236._object = (void *)0x80000001003E25D0;
    String.append(_:)(v236);
    v237 = *(uint64_t (**)(__n128))(*(_QWORD *)v137 + 248);
    v238 = swift_retain();
    v239 = v237(v238);
    swift_release();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease(v307);
  swift_bridgeObjectRelease(*(_QWORD *)&v343[0]);
  swift_bridgeObjectRelease(v345[0]);
  v109 = v314;
LABEL_217:
  a3 = *(_QWORD *)(v89 + 16);
  if (a3)
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v89) & 1) == 0)
      goto LABEL_267;
    goto LABEL_219;
  }
LABEL_226:
  swift_bridgeObjectRelease(v109);
  v249 = *(_QWORD *)(v89 + 16);
  if (!v249)
  {
    v334 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_245;
  }
  v250 = 136;
  v251 = *(_QWORD *)(v89 + 16);
  do
  {
    if (!*(_QWORD *)(v89 + v250))
    {
      swift_bridgeObjectRelease(v89);
      swift_bridgeObjectRelease(a1);
      if (qword_10047AA28 != -1)
        swift_once(&qword_10047AA28, sub_1000E1108);
      v283._object = (void *)0x80000001003E24F0;
      v283._countAndFlagsBits = 0xD000000000000051;
      Log.debug(_:isPrivate:)(v283, 0);
LABEL_258:
      swift_release();
      return 0;
    }
    v250 += 128;
    --v251;
  }
  while (v251);
  v313 = v137;
  v334 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v89);
  v252 = v89 + 72;
  do
  {
    v253 = *(_QWORD *)(v252 + 64);
    v254 = *(_QWORD *)(v252 - 8);
    v328 = *(__n128 *)(v252 - 24);
    v255.n128_u64[0] = v254;
    v255.n128_u64[1] = *(_QWORD *)v252;
    v327 = v255;
    v326 = *(__n128 *)(v252 + 8);
    v319 = *(__n128 *)(v252 + 24);
    v256 = qword_10047A930;
    swift_retain();
    if (v256 != -1)
      swift_once(&qword_10047A930, sub_100083368);
    if (!qword_1004AF238)
      goto LABEL_274;
    v257 = *(void **)(qword_1004AF238 + 80);
    if (v257)
    {
      v258 = (void *)objc_opt_self(UIColor);
      v259 = v257;
      v318.n128_u64[0] = v249;
      v260 = v259;
      v261 = objc_msgSend(v258, "redColor");
      sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
      v317.n128_u64[0] = static OS_dispatch_queue.main.getter(v262);
      v263 = swift_allocObject(&unk_100448888, 56, 7);
      *(_QWORD *)(v263 + 16) = v260;
      *(_QWORD *)(v263 + 24) = a1;
      *(_QWORD *)(v263 + 32) = v261;
      strcpy((char *)(v263 + 40), "No plane found");
      *(_BYTE *)(v263 + 55) = -18;
      v332 = sub_100049694;
      v333 = v263;
      v329._countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
      v329._object = (void *)1107296256;
      v330 = sub_10003ECA0;
      v331 = &unk_1004488A0;
      v314 = _Block_copy(&v329);
      swift_bridgeObjectRetain(a1);
      v316.n128_u64[0] = (unint64_t)v260;
      v315.n128_u64[0] = (unint64_t)v261;
      v264 = swift_release();
      v265 = v320;
      static DispatchQoS.unspecified.getter(v264);
      v329._countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
      v266 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v267 = sub_10000EDC8((uint64_t *)&unk_10047E430);
      v268 = sub_100036038((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430);
      v269 = v89;
      v270 = v323;
      v271 = v325.n128_u64[0];
      dispatch thunk of SetAlgebra.init<A>(_:)(&v329, v267, v268, v325.n128_u64[0], v266);
      v109 = v314;
      v272 = (void *)v317.n128_u64[0];
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v265, v270, v314);
      _Block_release(v109);

      v273 = v270;
      v89 = v269;
      v274 = v271;
      v249 = v318.n128_u64[0];
      (*(void (**)(char *, unint64_t))(v324 + 8))(v273, v274);
      (*(void (**)(char *, uint64_t))(v321 + 8))(v265, v322);

    }
    if (!v253)
      goto LABEL_275;
    v343[0] = v311;
    v343[1] = v310;
    v343[2] = v309;
    v343[3] = v308;
    v344 = 0;
    v275 = *(float (**)(__n128))(*(_QWORD *)v253 + 232);
    v276 = swift_retain();
    v277 = v275(v276);
    memset(v345, 0, sizeof(v345));
    v346 = 1;
    v278 = type metadata accessor for WorldAnchor(0);
    swift_allocObject(v278, *(unsigned int *)(v278 + 48), *(unsigned __int16 *)(v278 + 52));
    v279 = WorldAnchor.init(transform:viewTransform:plane:confidence:shouldAutoUpdate:viewTarget:)(v343, v253, 1, v345, v328, v327, v326, v319, v277);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v279);
    v281 = *(_QWORD *)((v334 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v280 = *(_QWORD *)((v334 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v281 >= v280 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v280 > 1, v281 + 1, 1);
    v252 += 128;
    v282 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v281, v279);
    specialized Array._endMutation()(v282);
    swift_release();
    --v249;
  }
  while (v249);
  swift_bridgeObjectRelease(v89);
  v137 = v313;
LABEL_245:
  swift_bridgeObjectRelease(v89);
  a3 = v334;
  if ((v334 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v334 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v284 = *(_QWORD *)(v334 + 32);
      v285 = swift_retain();
      goto LABEL_248;
    }
    __break(1u);
LABEL_267:
    v89 = (uint64_t)sub_100028830(v89);
LABEL_219:
    v240 = 0;
    v241 = v109 + 4;
    v242 = (__n128 *)(v89 + 144);
    while (1)
    {
      if (v137)
      {
        if (v240 >= v109[2])
          goto LABEL_262;
        v243 = *(double *)&v241[v240];
        v244 = *(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t, double))(*(_QWORD *)v137 + 312);
        swift_retain();
        v244(v335, v313, 7, v243);
        v327 = (__n128)v335[1];
        v328 = (__n128)v335[0];
        v326 = (__n128)v335[2];
        v318 = (__n128)v335[4];
        v319 = (__n128)v335[3];
        v316 = (__n128)v335[6];
        v317 = (__n128)v335[5];
        v245 = v336;
        swift_release();
      }
      else
      {
        v245 = 0;
        v327 = 0u;
        v328 = 0u;
        v326 = 0u;
        v318 = 0u;
        v319 = 0u;
        v316 = 0u;
        v317 = 0u;
      }
      if (v240 >= *(_QWORD *)(v89 + 16))
        break;
      ++v240;
      v246 = v327;
      v242[-7] = v328;
      v242[-6] = v246;
      v247 = v319;
      v242[-5] = v326;
      v242[-4] = v247;
      v248 = v317;
      v242[-3] = v318;
      v242[-2] = v248;
      v242[-1] = v316;
      v242->n128_u32[0] = v245;
      v242 += 8;
      swift_release();
      v109 = v314;
      if (a3 == v240)
        goto LABEL_226;
    }
    __break(1u);
LABEL_262:
    __break(1u);
LABEL_263:
    __break(1u);
LABEL_264:
    __break(1u);
  }
  v284 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a3);
LABEL_248:
  v286 = (*(uint64_t (**)(__n128))(*(_QWORD *)v284 + 216))(v285);
  v287 = swift_release();
  if (v286)
  {
    v288 = (void *)(*(uint64_t (**)(__n128))(*(_QWORD *)v286 + 160))(v287);
    objc_msgSend(v288, "transform");
    v327 = v290;
    v328 = v289;
    v325 = v292;
    v326 = v291;

    v293.n128_f64[0] = simd_float4x4.position.getter(v328, v327, v326, v325);
    v328 = v293;
    *(double *)v294.i64 = simd_float4x4.position.getter(v311, v310, v309, v308);
    v295 = vsubq_f32((float32x4_t)v328, v294);
    v296 = vmulq_f32(v295, v295);
    v297 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v296, 2), vaddq_f32(v296, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v296.f32, 1))).f32[0]);
    if (v297 < 0.01)
    {
      if (qword_10047A930 != -1)
        swift_once(&qword_10047A930, sub_100083368);
      if (qword_1004AF238)
      {
        v298 = *(void **)(qword_1004AF238 + 80);
        if (v298)
        {
          v299 = (void *)objc_opt_self(UIColor);
          v300 = v298;
          v301 = objc_msgSend(v299, "redColor");
          sub_10004945C((uint64_t)a1, v301, 0xD000000000000012, 0x80000001003E25B0);

        }
        swift_bridgeObjectRelease(a1);
        if (qword_10047AA28 != -1)
          swift_once(&qword_10047AA28, sub_1000E1108);
        v329._countAndFlagsBits = 0;
        v329._object = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(84);
        v302._object = (void *)0x80000001003E2550;
        v302._countAndFlagsBits = 0xD000000000000051;
        String.append(_:)(v302);
        Float.write<A>(to:)(&v329, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v297);
        v303._countAndFlagsBits = 109;
        v303._object = (void *)0xE100000000000000;
        String.append(_:)(v303);
        object = v329._object;
        Log.debug(_:isPrivate:)(v329, 0);
        swift_bridgeObjectRelease(a3);
        swift_release();
        swift_bridgeObjectRelease(object);
        goto LABEL_258;
      }
      __break(1u);
LABEL_277:
      v305 = type metadata accessor for WorldPlane(0);
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v305);
      __break(1u);
      JUMPOUT(0x1001576BCLL);
    }
    swift_release();
  }
  swift_bridgeObjectRelease(a1);
  swift_release();
  return a3;
}

void sub_1001576D8(uint64_t a1)
{
  Swift::String v2;

  if (qword_10047AA28 != -1)
    swift_once(&qword_10047AA28, sub_1000E1108);
  _StringGuts.grow(_:)(84);
  v2._object = (void *)0x80000001003E2730;
  v2._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v2);
  __asm { BR              X9 }
}

uint64_t sub_100157CC8(unsigned __int8 a1)
{
  return ((uint64_t (*)(void))((char *)sub_100157CF0 + 4 * byte_1003B93E6[a1]))();
}

uint64_t sub_100157CF0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)&loc_100157CFC + 4 * byte_1003B93ED[a2]))();
}

unint64_t sub_100157D0C(uint64_t a1, uint64_t a2, char a3)
{
  return 0x10102010100uLL >> (8 * a3);
}

void sub_100157D48(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X8>)
{
  unint64_t v5;
  id v6;
  double v9;
  unint64_t v10;
  double v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  if ((a4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  a5 = *(_QWORD *)(a3 + 16);
  if (a5 <= a4)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(a5 > 1, v5 + 1, 1);
    goto LABEL_7;
  }
  v9 = *(double *)(a3 + 32 + 8 * a4);
  if (a4 + 1 == a5)
    v10 = 0;
  else
    v10 = a4 + 1;
  v11 = *(double *)(a3 + 32 + 8 * v10);
  v12 = objc_msgSend((id)objc_opt_self(UIColor), "yellowColor");
  v6 = sub_1000490F8(v12, v9, v11, 1.0);
  v13 = objc_msgSend(a2, "layer");
  objc_msgSend(v13, "addSublayer:", v6);

  swift_beginAccess(a1 + 152, v17, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
  v15 = *(_QWORD *)(a1 + 152) & 0xFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(v15 + 0x10);
  a5 = *(_QWORD *)(v15 + 24);
  if (v5 >= a5 >> 1)
    goto LABEL_10;
LABEL_7:
  v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v6);
  specialized Array._endMutation()(v16);
  swift_endAccess(v17);
}

void sub_100157E7C(unint64_t a1, void *a2, _QWORD *a3)
{
  _QWORD *v3;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  double v9;
  double v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];
  char v17[24];

  v3 = a3;
  swift_beginAccess(a3 + 2, v17, 0, 0);
  v6 = v3[2];
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v8 = v6 + 8 * v7;
  v10 = *(double *)(v8 + 16);
  v9 = *(double *)(v8 + 24);
  v11 = objc_msgSend((id)objc_opt_self(UIColor), "yellowColor");
  v3 = sub_1000490F8(v11, v9, v10, 1.0);
  v12 = objc_msgSend(a2, "layer");
  objc_msgSend(v12, "addSublayer:", v3);

  swift_beginAccess(a1 + 152, v16, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
  v14 = *(_QWORD *)(a1 + 152) & 0xFFFFFFFFFFFFFF8;
  a1 = *(_QWORD *)(v14 + 0x10);
  v6 = *(_QWORD *)(v14 + 24);
  if (a1 >= v6 >> 1)
LABEL_7:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, a1 + 1, 1);
  v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a1, v3);
  specialized Array._endMutation()(v15);
  swift_endAccess(v16);
}

uint64_t sub_100157FBC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_100157FCC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 208);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_100157FDC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 272);
  *a2 = v2;
  return swift_retain(v2);
}

void sub_100157FEC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(id, void *);
  id v7;
  id v8;

  v6 = *(void (**)(id, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(v8, a3);
  swift_release(v5);

}

uint64_t sub_100158060(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

double *sub_1001580E8(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  int64_t v5;
  double *v11;
  double v12;
  double v13;
  double v14;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    sub_1000A578C(0, v5, 0);
    v11 = (double *)(a1 + 40);
    do
    {
      v12 = convertToDisplayCoordinates(_:forKeyFrame:viewSize:)(a2, a3, *(v11 - 1), *v11, a4, a5);
      v14 = _swiftEmptyArrayStorage[2];
      v13 = _swiftEmptyArrayStorage[3];
      if (*(_QWORD *)&v14 >= *(_QWORD *)&v13 >> 1)
        sub_1000A578C((char *)(*(_QWORD *)&v13 > 1uLL), *(_QWORD *)&v14 + 1, 1);
      *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v14 + 1;
      _swiftEmptyArrayStorage[*(_QWORD *)&v14 + 4] = v12;
      v11 += 2;
      --v5;
    }
    while (v5);
  }
  return _swiftEmptyArrayStorage;
}

void sub_1001581E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;

  v6 = a2 - a1;
  if (__OFSUB__(a2, a1))
    goto LABEL_16;
  if (v6)
  {
    sub_1000A578C(0, v6 & ~(v6 >> 63), 0);
    if (a2 < a1 || v6 < 0)
      goto LABEL_17;
    v10 = *(_QWORD *)(a5 + 16);
    if (v10 <= a1)
      v10 = a1;
    v11 = v10 - a1;
    v12 = (double *)(a5 + 8 * a1 + 32);
    while ((a1 & 0x8000000000000000) == 0)
    {
      if (!v11)
        goto LABEL_15;
      v13 = CGPoint.init(_:)(*v12);
      v15 = ARFrame.viewToCamera(screenPoint:sceneView:orientation:)(a6, &protocol witness table for ARSCNView, v13, v14);
      v17 = SIMD2<>.init(_:)(v15, v16);
      v19 = _swiftEmptyArrayStorage[2];
      v18 = _swiftEmptyArrayStorage[3];
      if (*(_QWORD *)&v19 >= *(_QWORD *)&v18 >> 1)
        sub_1000A578C((char *)(*(_QWORD *)&v18 > 1uLL), *(_QWORD *)&v19 + 1, 1);
      *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v19 + 1;
      _swiftEmptyArrayStorage[*(_QWORD *)&v19 + 4] = v17;
      --v11;
      ++v12;
      if (!--v6)
        return;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
}

uint64_t sub_100158340(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  double *v6;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  unint64_t v14;
  double *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _BYTE v21[152];
  double *v22;
  _QWORD v23[16];
  _BYTE v24[160];

  v5 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v6 = _swiftEmptyArrayStorage;
  if (!v5)
    return (uint64_t)v6;
  v10 = result;
  v22 = _swiftEmptyArrayStorage;
  result = (uint64_t)sub_1000A587C(0, v5 & ~(v5 >> 63), 0);
  if (v5 < 0)
    goto LABEL_18;
  v6 = v22;
  MeasureCore.shared.unsafeMutableAddressor(result);
  sub_100158F58((uint64_t)v21);
  result = sub_100012C58((uint64_t)v21, (uint64_t)v24, &qword_100483F80);
  if (a2 >= v10)
  {
    v11 = *(_QWORD *)(a3 + 16);
    v12 = v11 >= v10;
    v13 = v11 - v10;
    if (v12)
      v14 = v13;
    else
      v14 = 0;
    v15 = (double *)(a3 + 8 * v10 + 32);
    while (v14)
    {
      v16 = *v15;
      v17 = qword_10047ABD0;
      swift_retain();
      if (v17 != -1)
        swift_once(&qword_10047ABD0, sub_1001530E0);
      MeasureCore.hitTest(screenPoint:frame:orientation:context:planeTypes:)(v23, a4, a5, v24, qword_1004863D8, v16);
      swift_release();
      v22 = v6;
      v19 = *((_QWORD *)v6 + 2);
      v18 = *((_QWORD *)v6 + 3);
      if (v19 >= v18 >> 1)
      {
        sub_1000A587C((double *)(v18 > 1), v19 + 1, 1);
        v6 = v22;
      }
      *((_QWORD *)v6 + 2) = v19 + 1;
      result = sub_100012C58((uint64_t)v23, (uint64_t)&v6[16 * v19 + 4], &qword_1004866F0);
      --v14;
      ++v15;
      if (!--v5)
        return (uint64_t)v6;
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_100158504(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, __n128);
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, __n128);
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, __n128);
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, __n128);
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  Swift::String v49;
  _QWORD *v50;
  unint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  _QWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  unint64_t v71;
  void *v72;
  void *v73;

  v3 = v2;
  v69 = a2;
  v68 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v66 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v67 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v64);
  v65 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = _swiftEmptyArrayStorage;
  v11 = sub_10000EDC8(&qword_100485BC8);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v12 = swift_retain();
  v2[8] = CurrentValueSubject.init(_:)(&v70, v12);
  KeyPath = swift_getKeyPath(&unk_1003B9550);
  v14 = sub_10000EDC8((uint64_t *)&unk_100486710);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v63 = v7;
  v15 = qword_1004AF890;
  v16 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v14 + 272);
  v17 = swift_retain();
  v3[9] = v16(KeyPath, v15, v17);
  v18 = swift_getKeyPath(&unk_1003B9578);
  v19 = sub_10000EDC8(&qword_100481BA0);
  v20 = qword_1004AF890;
  v21 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v19 + 272);
  v22 = swift_retain();
  v3[10] = v21(v18, v20, v22);
  v23 = swift_getKeyPath(&unk_1003B95A0);
  v24 = sub_10000EDC8((uint64_t *)&unk_100481B90);
  v25 = qword_1004AF890;
  v26 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v24 + 272);
  v27 = swift_retain();
  v3[11] = v26(v23, v25, v27);
  v28 = swift_getKeyPath(&unk_1003B95C8);
  v29 = sub_10000EDC8((uint64_t *)&unk_10047E5D0);
  v30 = qword_1004AF890;
  v31 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v29 + 272);
  v32 = swift_retain();
  v3[12] = v31(v28, v30, v32);
  v33 = swift_getKeyPath(&unk_1003B95F0);
  v34 = sub_10000EDC8((uint64_t *)&unk_100486720);
  v35 = qword_1004AF890;
  v36 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v34 + 272);
  v37 = swift_retain();
  v3[13] = v36(v33, v35, v37);
  v38 = swift_getKeyPath(&unk_1003B9618);
  v39 = sub_10000EDC8(&qword_10047E610);
  v40 = qword_1004AF890;
  v41 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v39 + 272);
  v42 = swift_retain();
  v3[14] = v41(v38, v40, v42);
  v3[16] = 0;
  v70 = 0;
  v71 = 0;
  v43 = sub_10000EDC8(&qword_100486730);
  swift_allocObject(v43, 40, 7);
  v3[18] = Synchronized.init(wrappedValue:)(&v70);
  v3[19] = _swiftEmptyArrayStorage;
  v70 = _swiftEmptyArrayStorage;
  v44 = sub_10000EDC8(&qword_100486738);
  swift_allocObject(v44, 32, 7);
  v3[20] = Synchronized.init(wrappedValue:)(&v70);
  v3[23] = 0x3FF0000000000000;
  v3[15] = a1;
  v62[1] = sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  v70 = 0;
  v71 = 0xE000000000000000;
  v45 = a1;
  _StringGuts.grow(_:)(19);
  v46 = v71;
  if (qword_10047A970 != -1)
    swift_once(&qword_10047A970, sub_10009581C);
  v47 = qword_1004AF2C8;
  v48 = unk_1004AF2D0;
  swift_bridgeObjectRetain(unk_1004AF2D0);
  swift_bridgeObjectRelease(v46);
  v70 = (_QWORD *)v47;
  v71 = v48;
  v49._object = (void *)0x80000001003E2950;
  v49._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v49);
  v50 = v70;
  v51 = v71;
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v62[0] = v8;
  v53 = v69;
  v54 = v63;
  v52(v10, v69, v63);
  v70 = _swiftEmptyArrayStorage;
  v55 = sub_10000C4B0((unint64_t *)&qword_10047E690, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v56 = sub_10000EDC8(&qword_100486EF0);
  v57 = sub_100036038((unint64_t *)&qword_10047E6A0, &qword_100486EF0);
  v58 = v65;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v70, v56, v57, v64, v55);
  v59 = v67;
  (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v67, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v68);
  v3[17] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v50, v51, v10, v58, v59, 0);
  if (qword_10047ABC8 != -1)
    swift_once(&qword_10047ABC8, sub_100153070);
  v3[21] = qword_1004863D0;
  v3[22] = 1;
  swift_release();
  v72 = &type metadata for Configurations.Default;
  v73 = &protocol witness table for Configurations.Default;
  v60 = StateObserver.init(configuration:)(&v70);
  (*(void (**)(uint64_t, uint64_t))(v62[0] + 8))(v53, v54);
  return v60;
}

uint64_t sub_100158A4C(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  __n128 v36;
  char *v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  id v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD aBlock[7];

  v53 = a2;
  v54 = a3;
  v50 = a1;
  v6 = type metadata accessor for DispatchPredicate(0);
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  __chkstk_darwin(v6);
  v59 = (uint64_t *)((char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  __chkstk_darwin(v8);
  v52 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  __chkstk_darwin(v10);
  v51 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for DispatchTimeInterval(0);
  v48 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v13 = (uint64_t *)((char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v47 = type metadata accessor for DispatchTime(0);
  v46 = *(_QWORD *)(v47 - 8);
  v14 = __chkstk_darwin(v47);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v45 - v17;
  v19 = type metadata accessor for OS_dispatch_source.TimerFlags(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v4 + 32) = 0;
  sub_100018148(0, &qword_1004866A8, OS_dispatch_source_ptr);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_10000C4B0(&qword_1004866B0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
  v24 = sub_10000EDC8(&qword_1004866B8);
  v25 = sub_100036038((unint64_t *)&unk_1004866C0, &qword_1004866B8);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v19, v23);
  v26 = v50;
  v27 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v22, v50);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v28 = v45;
  *(_QWORD *)(v45 + 16) = v27;
  ObjectType = swift_getObjectType(v27);
  static DispatchTime.now()();
  + infix(_:_:)(v16, a4);
  v30 = *(void (**)(char *, uint64_t))(v46 + 8);
  v31 = v47;
  v30(v16, v47);
  *v13 = 0;
  v32 = v48;
  v33 = v49;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v48 + 104))(v13, enum case for DispatchTimeInterval.nanoseconds(_:), v49);
  OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v18, v13, ObjectType, a4);
  (*(void (**)(_QWORD *, uint64_t))(v32 + 8))(v13, v33);
  v30(v18, v31);
  v34 = swift_getObjectType(*(_QWORD *)(v28 + 16));
  aBlock[4] = v53;
  aBlock[5] = v54;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003ECA0;
  aBlock[3] = &unk_100448760;
  v35 = _Block_copy(aBlock);
  v36 = swift_retain();
  v37 = v51;
  static DispatchQoS.unspecified.getter(v36);
  v38 = v52;
  sub_100152DB8();
  OS_dispatch_source.setEventHandler(qos:flags:handler:)(v37, v38, v35, v34);
  _Block_release(v35);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v58);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v37, v56);
  v39 = swift_release();
  *(_QWORD *)(v28 + 24) = v26;
  v41 = v59;
  v40 = v60;
  *v59 = v26;
  v42 = v61;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v40 + 104))(v41, enum case for DispatchPredicate.onQueue(_:), v61, v39);
  v43 = v26;
  LOBYTE(v34) = _dispatchPreconditionTest(_:)(v41);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v40 + 8))(v41, v42);
  if ((v34 & 1) != 0)
  {
    if ((*(_BYTE *)(v28 + 32) & 1) == 0)
    {
      *(_BYTE *)(v28 + 32) = 1;
      swift_getObjectType(*(_QWORD *)(v28 + 16));
      OS_dispatch_source.resume()();
    }
    return v28;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100158ED8(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10015487C(a1, a2, v2);
}

uint64_t sub_100158EE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100158F0C()
{
  uint64_t v0;

  return sub_1001549FC(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100158F14()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100158F40()
{
  uint64_t v0;

  sub_100154D34(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100158F48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100158F58(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 1;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  return result;
}

uint64_t sub_100158F7C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_100158FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  ClassDescriptor **v9;
  uint64_t v10;
  double *v11;
  float32x2_t v12;
  uint64_t v13;
  float32x2_t v14;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  double *v18;
  void *v19;
  id v20;
  __n128 v21;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  const void *v25;
  __n128 v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  double *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  float32x2_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  float32x2_t v46;
  uint64_t *v47;
  __n128 v48;
  __n128 v49;
  uint64_t v50;
  uint64_t *v51;
  unint64_t v52;
  float32x2_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  float32x2_t v58;
  void *v59;
  id v60;
  __n128 v61;
  _QWORD *v62;
  void *v63;
  __n128 v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t *v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  double v76;
  uint64_t v77;
  double *v78;
  uint64_t v79;
  double *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  id v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[18];
  uint64_t v97;
  double *v98;
  _QWORD v99[16];
  _QWORD v100[16];
  _QWORD v101[16];
  _QWORD v102[16];
  _QWORD v103[18];
  _BYTE v104[160];

  v94 = a2;
  v95 = a3;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v89 = *(_QWORD *)(v4 - 8);
  v90 = v4;
  __chkstk_darwin(v4);
  v88 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v86 = *(_QWORD *)(v6 - 8);
  v87 = v6;
  __chkstk_darwin(v6);
  v85 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = &off_10047A000;
  if (v8)
  {
    v10 = 0;
    v82 = v8 - 1;
    v83 = (_QWORD *)(a1 + 32);
    v11 = _swiftEmptyArrayStorage;
    v81 = v8;
    while (1)
    {
      v12 = *(float32x2_t *)(a1 + 8 * v10 + 32);
      if (v82 == v10)
        v13 = 0;
      else
        v13 = v10 + 1;
      v14 = (float32x2_t)v83[v13];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_100060788(0, *((_QWORD *)v11 + 2) + 1, 1, (uint64_t)v11);
        v11 = (double *)isUniquelyReferenced_nonNull_native;
      }
      v17 = *((_QWORD *)v11 + 2);
      v16 = *((_QWORD *)v11 + 3);
      if (v17 >= v16 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_100060788((double *)(v16 > 1), v17 + 1, 1, (uint64_t)v11);
        v11 = (double *)isUniquelyReferenced_nonNull_native;
      }
      *((_QWORD *)v11 + 2) = v17 + 1;
      v18 = v11 + 4;
      *(float32x2_t *)&v11[v17 + 4] = vsub_f32(vadd_f32(v12, v14), v12);
      if (v9[294] != (ClassDescriptor *)-1)
        isUniquelyReferenced_nonNull_native = swift_once(&qword_10047A930, sub_100083368);
      if (!qword_1004AF238)
        break;
      v19 = *(void **)(qword_1004AF238 + 80);
      if (v19)
      {
        sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
        v20 = v19;
        v92 = static OS_dispatch_queue.main.getter(v21);
        v22 = (_QWORD *)swift_allocObject(&unk_100448950, 48, 7);
        v22[2] = v91;
        v22[3] = v20;
        v22[4] = a1;
        v22[5] = v10;
        v103[4] = sub_1001598E0;
        v103[5] = v22;
        v103[0] = _NSConcreteStackBlock;
        v103[1] = 1107296256;
        v103[2] = sub_10003ECA0;
        v103[3] = &unk_100448968;
        v23 = _Block_copy(v103);
        v93.n128_u64[0] = (unint64_t)(v11 + 4);
        v24 = a1;
        v25 = v23;
        v84 = v20;
        swift_retain();
        swift_bridgeObjectRetain(v24);
        v26 = swift_release();
        v27 = v85;
        static DispatchQoS.unspecified.getter(v26);
        v103[0] = _swiftEmptyArrayStorage;
        v28 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v29 = sub_10000EDC8((uint64_t *)&unk_10047E430);
        v30 = sub_100036038((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430);
        v31 = v88;
        v32 = v11;
        v33 = v90;
        v34 = v28;
        v9 = &off_10047A000;
        dispatch thunk of SetAlgebra.init<A>(_:)(v103, v29, v30, v90, v34);
        v35 = (void *)v92;
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v27, v31, v25);
        v36 = v25;
        a1 = v24;
        v18 = (double *)v93.n128_u64[0];
        _Block_release(v36);

        v37 = v33;
        v11 = v32;
        (*(void (**)(char *, uint64_t))(v89 + 8))(v31, v37);
        v38 = v27;
        v8 = v81;
        isUniquelyReferenced_nonNull_native = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v38, v87);
      }
      MeasureCore.shared.unsafeMutableAddressor(isUniquelyReferenced_nonNull_native);
      v39 = *((_QWORD *)v11 + 2);
      if (!v39)
        goto LABEL_48;
      v40 = v18[v39 - 1];
      sub_100158F58((uint64_t)v103);
      sub_100012C58((uint64_t)v103, (uint64_t)v104, &qword_100483F80);
      v41 = qword_10047ABD0;
      swift_retain();
      if (v41 != -1)
        swift_once(&qword_10047ABD0, sub_1001530E0);
      MeasureCore.hitTest(screenPoint:frame:orientation:context:planeTypes:)(v99, v94, v95, v104, qword_1004863D8, v40);
      swift_release();
      sub_100012C58((uint64_t)v99, (uint64_t)v102, &qword_1004866F0);
      if (v102[13])
      {
        v78 = v11;
LABEL_45:
        swift_bridgeObjectRelease(v78);
        return;
      }
      if (v8 == ++v10)
        goto LABEL_22;
    }
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
LABEL_22:
    v42 = COERCE_FLOAT32X2_T(static SIMD2<>.average(_:)(a1));
    v98 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(a1);
    sub_1001004F4(v43);
    swift_bridgeObjectRetain(v11);
    v80 = v11;
    sub_1001004F4(v44);
    v45 = 0;
    v46 = (float32x2_t)vdup_n_s32(0x3E19999Au);
    v47 = &qword_1004866F0;
    v48.n128_u32[0] = 1.0;
    v93 = v48;
    while (1)
    {
      LODWORD(v81) = v45;
      v50 = swift_allocObject(&unk_1004488D8, 24, 7);
      v82 = v50;
      *(_QWORD *)(v50 + 16) = _swiftEmptyArrayStorage;
      v51 = (uint64_t *)(v50 + 16);
      v92 = *((_QWORD *)v98 + 2);
      if (v92)
        break;
LABEL_23:
      v49 = swift_release();
      v49.n128_u32[0] = 2.0;
      v93 = v49;
      v45 = 1;
      if ((v81 & 1) != 0)
      {
        swift_bridgeObjectRelease(v80);
        swift_bridgeObjectRelease(v98);
        return;
      }
    }
    swift_beginAccess(v50 + 16, &v97, 1, 0);
    v52 = 0;
    while (v52 < *((_QWORD *)v98 + 2))
    {
      v53 = *(float32x2_t *)&v98[v52 + 4];
      v54 = *v51;
      v55 = swift_isUniquelyReferenced_nonNull_native(*v51);
      *v51 = v54;
      if ((v55 & 1) == 0)
      {
        v55 = (uint64_t)sub_100060788(0, *(_QWORD *)(v54 + 16) + 1, 1, v54);
        v54 = v55;
        *v51 = v55;
      }
      v57 = *(_QWORD *)(v54 + 16);
      v56 = *(_QWORD *)(v54 + 24);
      if (v57 >= v56 >> 1)
      {
        v55 = (uint64_t)sub_100060788((double *)(v56 > 1), v57 + 1, 1, v54);
        v54 = v55;
        *v51 = v55;
      }
      v58 = vadd_f32(v53, vmul_n_f32(vmul_f32(vsub_f32(v42, v53), v46), v93.n128_f32[0]));
      *(_QWORD *)(v54 + 16) = v57 + 1;
      *(float32x2_t *)(v54 + 8 * v57 + 32) = v58;
      if (v9[294] != (ClassDescriptor *)-1)
        v55 = swift_once(&qword_10047A930, sub_100083368);
      if (!qword_1004AF238)
        goto LABEL_49;
      v59 = *(void **)(qword_1004AF238 + 80);
      if (v59 && *(_QWORD *)(*v51 + 16) >= 2uLL)
      {
        sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
        v60 = v59;
        v84 = (id)static OS_dispatch_queue.main.getter(v61);
        v62 = (_QWORD *)swift_allocObject(&unk_100448900, 40, 7);
        v62[2] = v91;
        v62[3] = v60;
        v62[4] = v82;
        v96[4] = sub_100159878;
        v96[5] = v62;
        v96[0] = _NSConcreteStackBlock;
        v96[1] = 1107296256;
        v96[2] = sub_10003ECA0;
        v96[3] = &unk_100448918;
        v63 = _Block_copy(v96);
        swift_retain();
        v83 = v60;
        swift_retain();
        v64 = swift_release();
        v65 = v85;
        static DispatchQoS.unspecified.getter(v64);
        v96[0] = _swiftEmptyArrayStorage;
        v66 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v67 = sub_10000EDC8((uint64_t *)&unk_10047E430);
        v68 = sub_100036038((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430);
        v69 = v88;
        v70 = v47;
        v71 = v90;
        dispatch thunk of SetAlgebra.init<A>(_:)(v96, v67, v68, v90, v66);
        v72 = v84;
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v65, v69, v63);
        _Block_release(v63);

        v73 = v71;
        v47 = v70;
        (*(void (**)(char *, uint64_t))(v89 + 8))(v69, v73);
        v74 = v65;
        v9 = &off_10047A000;
        v55 = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v74, v87);
      }
      MeasureCore.shared.unsafeMutableAddressor(v55);
      v75 = *(_QWORD *)(*v51 + 16);
      if (!v75)
        goto LABEL_50;
      v76 = *(double *)(*v51 + 8 * v75 + 24);
      sub_100158F58((uint64_t)v96);
      sub_100012C58((uint64_t)v96, (uint64_t)v103, &qword_100483F80);
      v77 = qword_10047ABD0;
      swift_retain();
      if (v77 != -1)
        swift_once(&qword_10047ABD0, sub_1001530E0);
      MeasureCore.hitTest(screenPoint:frame:orientation:context:planeTypes:)(v100, v94, v95, v103, qword_1004863D8, v76);
      swift_release();
      sub_100012C58((uint64_t)v100, (uint64_t)v101, v47);
      if (v101[13])
      {
        swift_release();
        swift_bridgeObjectRelease(v80);
        v78 = v98;
        goto LABEL_45;
      }
      if (v92 == ++v52)
        goto LABEL_23;
    }
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    swift_retain();
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100159844()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100159868()
{
  return sub_100159894((void (*)(_QWORD))&_swift_release, 40);
}

void sub_100159878()
{
  uint64_t v0;

  sub_100157E7C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD **)(v0 + 32));
}

uint64_t sub_100159884()
{
  return sub_100159894((void (*)(_QWORD))&_swift_bridgeObjectRelease, 48);
}

uint64_t sub_100159894(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 16));

  a1(*(_QWORD *)(v2 + 32));
  return swift_deallocObject(v2, a2, 7);
}

void sub_1001598E0(unint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100157D48(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

void sub_1001598EC()
{
  uint64_t v0;

  sub_1001541EC(v0);
}

uint64_t sub_1001598FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_100159914@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 272);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_100159924@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 208);
  *a2 = v2;
  return swift_retain(v2);
}

id sub_1001599F4(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  double v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char **v13;
  char **v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;

  v3 = (void *)objc_opt_self(SCNTransaction);
  objc_msgSend(v3, "begin");
  v4 = 0.0;
  objc_msgSend(v3, "setAnimationDuration:", 0.0);
  v5 = OBJC_IVAR____TtC7Measure13RectangleFill_rectangleFill;
  v6 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Measure13RectangleFill_rectangleFill), "geometry");
  if (v6)
  {
    v34 = v5;
    v35 = v1;
    v36 = v3;
    v37 = a1;
    v33 = v6;
    v7 = objc_msgSend(v6, "materials");
    v8 = sub_100018148(0, (unint64_t *)&qword_10048A110, SCNMaterial_ptr);
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

    if ((unint64_t)v9 >> 62)
    {
      if (v9 < 0)
        v31 = v9;
      else
        v31 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v9);
      v10 = _CocoaArrayWrapper.endIndex.getter(v31);
      swift_bridgeObjectRelease(v9);
      if (v10)
        goto LABEL_4;
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v10)
      {
LABEL_4:
        if (v10 < 1)
        {
          __break(1u);
          JUMPOUT(0x100159DC8);
        }
        v11 = 0;
        v12 = v9 & 0xC000000000000001;
        v13 = &selRef_renderer_didAddNode_forAnchor_;
        v14 = &selRef_renderer_didAddNode_forAnchor_;
        v38 = v10;
        do
        {
          if (v12)
            v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
          else
            v17 = *(id *)(v9 + 8 * v11 + 32);
          v18 = v17;
          v19 = objc_msgSend(v17, v13[38]);
          switch(v37)
          {
            case 5:
              if (qword_10047B100 != -1)
                swift_once(&qword_10047B100, sub_100197A30);
              v20 = (void *)qword_1004AFC00;
              v21 = *(void **)algn_1004AFC08;
              if ((byte_1004AFC10 & 1) == 0)
                goto LABEL_27;
              v22 = byte_1004AFC20;
              v23 = qword_1004AFC18;
              v24 = byte_10048A2A0;
              (id)qword_1004AFC00;
              v25 = v24;
              v26 = v23;
              v27 = v22;
              v12 = v9 & 0xC000000000000001;
              v10 = v38;
              goto LABEL_23;
            case 6:
              if (qword_10047B100 != -1)
                swift_once(&qword_10047B100, sub_100197A30);
              v20 = (void *)qword_1004AFC00;
              v21 = *(void **)algn_1004AFC08;
              if ((byte_1004AFC10 & 1) != 0)
              {
                v28 = byte_1004AFC20;
                v29 = qword_1004AFC18;
                v30 = byte_10048A2A0;
                (id)qword_1004AFC00;
                v25 = v30;
                v26 = v29;
                v12 = v9 & 0xC000000000000001;
                v10 = v38;
                v27 = v28;
LABEL_23:
                v16 = sub_100070DBC(v25, v26, v27);
                sub_100021580(v20, v21, 1);
              }
              else
              {
LABEL_27:
                if ((byte_10048A2A0 & 1) != 0)
                  v15 = v21;
                else
                  v15 = v20;
                v16 = v15;
              }
              v13 = &selRef_renderer_didAddNode_forAnchor_;
              v14 = &selRef_renderer_didAddNode_forAnchor_;
              break;
            case 9:
              if (qword_10047AEB0 != -1)
                swift_once(&qword_10047AEB0, sub_1001961DC);
              v16 = (id)qword_1004AF9A8;
              break;
            default:
              v16 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
              break;
          }
          ++v11;
          objc_msgSend(v19, v14[39], v16);

        }
        while (v10 != v11);
      }
    }

    swift_bridgeObjectRelease(v9);
    v3 = v36;
    a1 = v37;
    v5 = v34;
    v1 = v35;
  }
  if ((unint64_t)(a1 - 1) <= 8)
    v4 = dbl_1003B9650[a1 - 1];
  objc_msgSend(*(id *)(v1 + v5), "setOpacity:", v4);
  return objc_msgSend(v3, "commit");
}

void sub_100159DEC(float32x2_t *a1)
{
  char *v1;
  char *v2;
  unint64_t v4;
  _QWORD *v5;
  float32x2_t *v6;
  unint64_t v7;
  float32x4_t v8;
  float32x4_t v9;
  __int32 v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  _DWORD *v17;
  float v18;
  float32x2_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x2_t v22;
  __int128 v23;
  uint64_t v24;
  Swift::OpaquePointer v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  Class isa;
  Class v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  Class v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  objc_class *v43;
  objc_class *v44;
  id v45;
  Class v46;
  Class v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  char *v57;
  double v58;
  __int128 v59;
  uint64_t v60;
  double v61;
  void *v62;
  _QWORD v63[4];

  v2 = v1;
  v61 = static SIMD3<>.average(_:)(a1);
  v4 = (unint64_t)a1[2];
  if (!v4)
    goto LABEL_15;
  v63[0] = _swiftEmptyArrayStorage;
  sub_1000A57FC(0, v4, 0);
  v5 = _swiftEmptyArrayStorage;
  v6 = a1 + 5;
  v7 = v4;
  do
  {
    SCNVector3.init(_:)(COERCE_DOUBLE(vsub_f32(v6[-1], *(float32x2_t *)&v61)));
    v10 = v8.i32[0];
    v12 = v11;
    v14 = v13;
    v63[0] = v5;
    v16 = v5[2];
    v15 = v5[3];
    if (v16 >= v15 >> 1)
    {
      sub_1000A57FC((char *)(v15 > 1), v16 + 1, 1);
      v5 = (_QWORD *)v63[0];
    }
    v5[2] = v16 + 1;
    v17 = (_DWORD *)v5 + 3 * v16;
    v17[8] = v10;
    v17[9] = v12;
    v17[10] = v14;
    v6 += 2;
    --v7;
  }
  while (v7);
  if (v4 < 2)
    goto LABEL_15;
  if (v4 == 2)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  v18 = a1[5].f32[0];
  v19 = a1[4];
  *(float32x2_t *)v9.f32 = vsub_f32(a1[6], v19);
  v9.f32[2] = a1[7].f32[0] - v18;
  *(float32x2_t *)v8.f32 = vsub_f32(a1[8], v19);
  v8.f32[2] = a1[9].f32[0] - v18;
  v20 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v8, (int32x4_t)v8), (int8x16_t)v8, 0xCuLL), vnegq_f32(v9)), v8, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v9, (int32x4_t)v9), (int8x16_t)v9, 0xCuLL));
  v21 = vmulq_f32(v20, v20);
  v21.i64[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v21.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v21, 2), v21)).u64[0];
  v21.f32[0] = sqrtf(v21.f32[0]);
  v22.i32[0] = vextq_s8((int8x16_t)v20, (int8x16_t)v20, 8uLL).u32[0];
  v22.i32[1] = v20.i32[0];
  *(float32x2_t *)&v23 = vdiv_f32(v22, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v21.f32, 0));
  *((_QWORD *)&v23 + 1) = COERCE_UNSIGNED_INT(v20.f32[1] / v21.f32[0]);
  v59 = v23;
  v24 = sub_10000EDC8(&qword_100481240);
  v25._rawValue = (void *)swift_allocObject(v24, 56, 7);
  *((_OWORD *)v25._rawValue + 1) = xmmword_1003B0F60;
  SCNVector3.init(_:)(*(double *)&v59);
  *((_DWORD *)v25._rawValue + 8) = v26;
  *((_DWORD *)v25._rawValue + 9) = v27;
  *((_DWORD *)v25._rawValue + 10) = v28;
  SCNVector3.init(_:)(*(double *)&v59);
  *((_DWORD *)v25._rawValue + 11) = v29;
  *((_DWORD *)v25._rawValue + 12) = v30;
  *((_DWORD *)v25._rawValue + 13) = v31;
  sub_100018148(0, &qword_1004845E0, SCNGeometrySource_ptr);
  isa = SCNGeometrySource.init(vertices:)((Swift::OpaquePointer)v5).super.isa;
  v33 = SCNGeometrySource.init(normals:)(v25).super.isa;
  v34 = sub_10015A518(byte_10043C008, 24);
  v36 = v35;
  *(_QWORD *)&v59 = v34;
  v37 = Data._bridgeToObjectiveC()().super.isa;
  v38 = objc_msgSend((id)objc_opt_self(SCNGeometryElement), "geometryElementWithData:primitiveType:primitiveCount:bytesPerIndex:", v37, 0, 2, 4);

  v39 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
  v40 = swift_allocObject(v39, 48, 7);
  *(_OWORD *)(v40 + 16) = xmmword_1003B1460;
  *(_QWORD *)(v40 + 32) = isa;
  *(_QWORD *)(v40 + 40) = v33;
  v63[0] = v40;
  specialized Array._endMutation()(v40);
  v41 = v63[0];
  v42 = swift_allocObject(v39, 40, 7);
  *(_OWORD *)(v42 + 16) = xmmword_1003B0F00;
  *(_QWORD *)(v42 + 32) = v38;
  v63[0] = v42;
  specialized Array._endMutation()(v42);
  v43 = isa;
  v44 = v33;
  v45 = v38;
  v46 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v41);
  sub_100018148(0, &qword_1004845E8, SCNGeometryElement_ptr);
  v47 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v63[0]);
  v48 = objc_msgSend((id)objc_opt_self(SCNGeometry), "geometryWithSources:elements:", v46, v47);

  v49 = sub_100181ABC(3);
  v50 = objc_msgSend(v49, "copy");

  _bridgeAnyObjectToAny(_:)(v63, v50);
  swift_unknownObjectRelease(v50);
  v51 = sub_100018148(0, (unint64_t *)&qword_10048A110, SCNMaterial_ptr);
  if (swift_dynamicCast(&v62, v63, (char *)&type metadata for Any + 8, v51, 6))
    v52 = v62;
  else
    v52 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init", v59);
  objc_msgSend(v48, "setFirstMaterial:", v52, (_QWORD)v59);

  v53 = OBJC_IVAR____TtC7Measure13RectangleFill_rectangleFill;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC7Measure13RectangleFill_rectangleFill], "removeFromParentNode");
  v54 = objc_msgSend((id)objc_opt_self(SCNNode), "nodeWithGeometry:", v48);
  v55 = *(void **)&v2[v53];
  *(_QWORD *)&v2[v53] = v54;

  objc_msgSend(*(id *)&v2[v53], "setRenderingOrder:", -1);
  v56 = *(id *)&v2[v53];
  v57 = (char *)objc_msgSend(v2, "state");
  v58 = 0.0;
  if ((unint64_t)(v57 - 1) <= 8)
    v58 = dbl_1003B9650[(_QWORD)(v57 - 1)];
  objc_msgSend(v56, "setOpacity:", v58);

  objc_msgSend(v2, "addChildNode:", *(_QWORD *)&v2[v53]);
  SCNVector3.init(_:)(v61);
  objc_msgSend(v2, "setPosition:");

  sub_100036300(v60, v36);
}

uint64_t type metadata accessor for RectangleFill()
{
  return objc_opt_self(_TtC7Measure13RectangleFill);
}

uint64_t sub_10015A458(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;

  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_10015A518(_BYTE *__src, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_10015A458(__src, &__src[a2]);
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  __DataStorage.init(bytes:length:)(__src, a2);
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  v6 = type metadata accessor for Data.RangeReference(0);
  result = swift_allocObject(v6, 32, 7);
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_10015A5C4()
{
  uint64_t v0;
  char *v1;
  uint64_t *v2;
  float v3;
  float v4;
  float v5;
  char v6;
  __int128 v7;
  __int128 v8;
  char v9;
  int v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  int v16;
  char v17;
  int v18;
  char v19;
  int v20;
  char v21;
  char v22;
  char v23;
  int v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char v30;
  __int128 v31;
  __int128 v32;
  char v33;
  int v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  int v40;
  char v41;
  int v42;
  char v43;
  int v44;
  char v45;
  char v46;
  char v47;
  int v48;
  char v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t result;
  float v55;
  char v56;
  __int128 v57;
  __int128 v58;
  char v59;
  int v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  int v66;
  char v67;
  int v68;
  char v69;
  int v70;
  char v71;
  char v72;
  char v73;
  int v74;
  char v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  char v80;
  __int128 v81;
  __int128 v82;
  char v83;
  int v84;
  char v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  char v89;
  int v90;
  char v91;
  int v92;
  char v93;
  int v94;
  char v95;
  char v96;
  char v97;
  int v98;
  char v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  float v104;
  _OWORD v105[19];
  _BYTE __dst[304];
  _BYTE v107[304];
  _OWORD __src[19];
  _BYTE v109[304];
  _BYTE v110[304];

  if ((*(_BYTE *)(v0 + 216) & 1) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v1 = (char *)(v0 + 256);
  if ((*(_BYTE *)(v0 + 520) & 1) != 0)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v2 = (uint64_t *)(v0 + 532);
  v3 = *(float *)(v0 + 212);
  v4 = *(float *)(v0 + 516);
  v5 = v4;
  if (v4 >= v3)
  {
    v56 = *(_BYTE *)(v0 + 432);
    v57 = *(_OWORD *)(v0 + 448);
    v58 = *(_OWORD *)(v0 + 464);
    v59 = *(_BYTE *)(v0 + 512);
    v60 = *(_DWORD *)(v0 + 524);
    v61 = *(_BYTE *)(v0 + 528);
    v62 = *v2;
    v63 = *(_BYTE *)(v0 + 540);
    v64 = *(_QWORD *)(v0 + 544);
    v65 = *(_BYTE *)(v0 + 552);
    v66 = *(_DWORD *)(v0 + 556);
    v67 = *(_BYTE *)(v0 + 560);
    v68 = *(_DWORD *)(v0 + 564);
    v69 = *(_BYTE *)(v0 + 568);
    v70 = *(_DWORD *)(v0 + 572);
    v71 = *(_BYTE *)(v0 + 576);
    v72 = *(_BYTE *)(v0 + 577);
    v73 = *(_BYTE *)(v0 + 608);
    v74 = *(_DWORD *)(v0 + 612);
    v75 = *(_BYTE *)(v0 + 616);
    v76 = *(_OWORD *)(v0 + 400);
    v105[0] = *(_OWORD *)(v0 + 384);
    v105[1] = v76;
    v105[2] = *(_OWORD *)(v0 + 416);
    LOBYTE(v105[3]) = v56;
    v105[4] = v57;
    v105[5] = v58;
    v77 = *(_OWORD *)(v0 + 496);
    v105[6] = *(_OWORD *)(v0 + 480);
    v105[7] = v77;
    LOBYTE(v105[8]) = v59;
    *((float *)&v105[8] + 1) = v4;
    BYTE8(v105[8]) = 0;
    HIDWORD(v105[8]) = v60;
    LOBYTE(v105[9]) = v61;
    *(_QWORD *)((char *)&v105[9] + 4) = v62;
    BYTE12(v105[9]) = v63;
    *(_QWORD *)&v105[10] = v64;
    BYTE8(v105[10]) = v65;
    HIDWORD(v105[10]) = v66;
    LOBYTE(v105[11]) = v67;
    DWORD1(v105[11]) = v68;
    BYTE8(v105[11]) = v69;
    HIDWORD(v105[11]) = v70;
    LOBYTE(v105[12]) = v71;
    BYTE1(v105[12]) = v72;
    v105[13] = *(_OWORD *)(v0 + 592);
    LOBYTE(v105[14]) = v73;
    DWORD1(v105[14]) = v74;
    BYTE8(v105[14]) = v75;
    v78 = *(_OWORD *)(v0 + 640);
    v105[15] = *(_OWORD *)(v0 + 624);
    v105[16] = v78;
    v79 = *(_OWORD *)(v0 + 672);
    v105[17] = *(_OWORD *)(v0 + 656);
    v105[18] = v79;
    memcpy(__dst, v105, sizeof(__dst));
    nullsub_1(__dst);
    sub_100012C58(v0 + 704, (uint64_t)v107, &qword_100484AC8);
    sub_1000C2C50((uint64_t *)v105);
    sub_10015BA58((uint64_t)v107, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100124CF0);
    sub_100012C58((uint64_t)__dst, v0 + 704, &qword_100484AC8);
    v80 = *(_BYTE *)(v0 + 128);
    v81 = *(_OWORD *)(v0 + 144);
    v82 = *(_OWORD *)(v0 + 160);
    v83 = *(_BYTE *)(v0 + 208);
    v84 = *(_DWORD *)(v0 + 220);
    v85 = *(_BYTE *)(v0 + 224);
    v86 = *(_QWORD *)(v0 + 228);
    v87 = *(_BYTE *)(v0 + 236);
    v88 = *(_QWORD *)(v0 + 240);
    v89 = *(_BYTE *)(v0 + 248);
    v90 = *(_DWORD *)(v0 + 252);
    v91 = *v1;
    v92 = *(_DWORD *)(v0 + 260);
    v93 = *(_BYTE *)(v0 + 264);
    v94 = *(_DWORD *)(v0 + 268);
    v95 = *(_BYTE *)(v0 + 272);
    v96 = *(_BYTE *)(v0 + 273);
    v97 = *(_BYTE *)(v0 + 304);
    v98 = *(_DWORD *)(v0 + 308);
    v99 = *(_BYTE *)(v0 + 312);
    v100 = *(_OWORD *)(v0 + 96);
    __src[0] = *(_OWORD *)(v0 + 80);
    __src[1] = v100;
    __src[2] = *(_OWORD *)(v0 + 112);
    LOBYTE(__src[3]) = v80;
    __src[4] = v81;
    __src[5] = v82;
    v101 = *(_OWORD *)(v0 + 192);
    __src[6] = *(_OWORD *)(v0 + 176);
    __src[7] = v101;
    LOBYTE(__src[8]) = v83;
    *((float *)&__src[8] + 1) = v3;
    BYTE8(__src[8]) = 0;
    HIDWORD(__src[8]) = v84;
    LOBYTE(__src[9]) = v85;
    *(_QWORD *)((char *)&__src[9] + 4) = v86;
    BYTE12(__src[9]) = v87;
    *(_QWORD *)&__src[10] = v88;
    BYTE8(__src[10]) = v89;
    HIDWORD(__src[10]) = v90;
    LOBYTE(__src[11]) = v91;
    DWORD1(__src[11]) = v92;
    BYTE8(__src[11]) = v93;
    HIDWORD(__src[11]) = v94;
    LOBYTE(__src[12]) = v95;
    BYTE1(__src[12]) = v96;
    __src[13] = *(_OWORD *)(v0 + 288);
    LOBYTE(__src[14]) = v97;
    DWORD1(__src[14]) = v98;
    BYTE8(__src[14]) = v99;
    v102 = *(_OWORD *)(v0 + 336);
    __src[15] = *(_OWORD *)(v0 + 320);
    __src[16] = v102;
    v103 = *(_OWORD *)(v0 + 368);
    __src[17] = *(_OWORD *)(v0 + 352);
    __src[18] = v103;
    memcpy(v109, __src, sizeof(v109));
    nullsub_1(v109);
    sub_100012C58(v0 + 1008, (uint64_t)v110, &qword_100484AC8);
    sub_1000C2C50((uint64_t *)__src);
    sub_10015BA58((uint64_t)v110, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100124CF0);
    result = sub_100012C58((uint64_t)v109, v0 + 1008, &qword_100484AC8);
    v55 = v4;
    v5 = v3;
  }
  else
  {
    v6 = *(_BYTE *)(v0 + 128);
    v7 = *(_OWORD *)(v0 + 144);
    v8 = *(_OWORD *)(v0 + 160);
    v9 = *(_BYTE *)(v0 + 208);
    v10 = *(_DWORD *)(v0 + 220);
    v11 = *(_BYTE *)(v0 + 224);
    v12 = *(_QWORD *)(v0 + 228);
    v13 = *(_BYTE *)(v0 + 236);
    v14 = *(_QWORD *)(v0 + 240);
    v15 = *(_BYTE *)(v0 + 248);
    v16 = *(_DWORD *)(v0 + 252);
    v17 = *v1;
    v18 = *(_DWORD *)(v0 + 260);
    v19 = *(_BYTE *)(v0 + 264);
    v20 = *(_DWORD *)(v0 + 268);
    v21 = *(_BYTE *)(v0 + 272);
    v22 = *(_BYTE *)(v0 + 273);
    v23 = *(_BYTE *)(v0 + 304);
    v24 = *(_DWORD *)(v0 + 308);
    v25 = *(_BYTE *)(v0 + 312);
    v26 = *(_OWORD *)(v0 + 96);
    v105[0] = *(_OWORD *)(v0 + 80);
    v105[1] = v26;
    v105[2] = *(_OWORD *)(v0 + 112);
    LOBYTE(v105[3]) = v6;
    v105[4] = v7;
    v105[5] = v8;
    v27 = *(_OWORD *)(v0 + 192);
    v105[6] = *(_OWORD *)(v0 + 176);
    v105[7] = v27;
    LOBYTE(v105[8]) = v9;
    *((float *)&v105[8] + 1) = v3;
    BYTE8(v105[8]) = 0;
    HIDWORD(v105[8]) = v10;
    LOBYTE(v105[9]) = v11;
    *(_QWORD *)((char *)&v105[9] + 4) = v12;
    BYTE12(v105[9]) = v13;
    *(_QWORD *)&v105[10] = v14;
    BYTE8(v105[10]) = v15;
    HIDWORD(v105[10]) = v16;
    LOBYTE(v105[11]) = v17;
    DWORD1(v105[11]) = v18;
    BYTE8(v105[11]) = v19;
    HIDWORD(v105[11]) = v20;
    LOBYTE(v105[12]) = v21;
    BYTE1(v105[12]) = v22;
    v105[13] = *(_OWORD *)(v0 + 288);
    LOBYTE(v105[14]) = v23;
    DWORD1(v105[14]) = v24;
    BYTE8(v105[14]) = v25;
    v28 = *(_OWORD *)(v0 + 336);
    v105[15] = *(_OWORD *)(v0 + 320);
    v105[16] = v28;
    v29 = *(_OWORD *)(v0 + 368);
    v105[17] = *(_OWORD *)(v0 + 352);
    v105[18] = v29;
    memcpy(__dst, v105, sizeof(__dst));
    nullsub_1(__dst);
    sub_100012C58(v0 + 704, (uint64_t)v107, &qword_100484AC8);
    sub_1000C2C50((uint64_t *)v105);
    sub_10015BA58((uint64_t)v107, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100124CF0);
    sub_100012C58((uint64_t)__dst, v0 + 704, &qword_100484AC8);
    v30 = *(_BYTE *)(v0 + 432);
    v31 = *(_OWORD *)(v0 + 448);
    v32 = *(_OWORD *)(v0 + 464);
    v33 = *(_BYTE *)(v0 + 512);
    v34 = *(_DWORD *)(v0 + 524);
    v35 = *(_BYTE *)(v0 + 528);
    v36 = *v2;
    v37 = *(_BYTE *)(v0 + 540);
    v38 = *(_QWORD *)(v0 + 544);
    v39 = *(_BYTE *)(v0 + 552);
    v40 = *(_DWORD *)(v0 + 556);
    v41 = *(_BYTE *)(v0 + 560);
    v42 = *(_DWORD *)(v0 + 564);
    v43 = *(_BYTE *)(v0 + 568);
    v44 = *(_DWORD *)(v0 + 572);
    v45 = *(_BYTE *)(v0 + 576);
    v46 = *(_BYTE *)(v0 + 577);
    v47 = *(_BYTE *)(v0 + 608);
    v48 = *(_DWORD *)(v0 + 612);
    v49 = *(_BYTE *)(v0 + 616);
    v50 = *(_OWORD *)(v0 + 400);
    __src[0] = *(_OWORD *)(v0 + 384);
    __src[1] = v50;
    __src[2] = *(_OWORD *)(v0 + 416);
    LOBYTE(__src[3]) = v30;
    __src[4] = v31;
    __src[5] = v32;
    v51 = *(_OWORD *)(v0 + 496);
    __src[6] = *(_OWORD *)(v0 + 480);
    __src[7] = v51;
    LOBYTE(__src[8]) = v33;
    *((float *)&__src[8] + 1) = v4;
    BYTE8(__src[8]) = 0;
    HIDWORD(__src[8]) = v34;
    LOBYTE(__src[9]) = v35;
    *(_QWORD *)((char *)&__src[9] + 4) = v36;
    BYTE12(__src[9]) = v37;
    *(_QWORD *)&__src[10] = v38;
    BYTE8(__src[10]) = v39;
    HIDWORD(__src[10]) = v40;
    LOBYTE(__src[11]) = v41;
    DWORD1(__src[11]) = v42;
    BYTE8(__src[11]) = v43;
    HIDWORD(__src[11]) = v44;
    LOBYTE(__src[12]) = v45;
    BYTE1(__src[12]) = v46;
    __src[13] = *(_OWORD *)(v0 + 592);
    LOBYTE(__src[14]) = v47;
    DWORD1(__src[14]) = v48;
    BYTE8(__src[14]) = v49;
    v52 = *(_OWORD *)(v0 + 640);
    __src[15] = *(_OWORD *)(v0 + 624);
    __src[16] = v52;
    v53 = *(_OWORD *)(v0 + 672);
    __src[17] = *(_OWORD *)(v0 + 656);
    __src[18] = v53;
    memcpy(v109, __src, sizeof(v109));
    nullsub_1(v109);
    sub_100012C58(v0 + 1008, (uint64_t)v110, &qword_100484AC8);
    sub_1000C2C50((uint64_t *)__src);
    sub_10015BA58((uint64_t)v110, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100124CF0);
    result = sub_100012C58((uint64_t)v109, v0 + 1008, &qword_100484AC8);
    v55 = v3;
  }
  v104 = v5 / v55;
  *(float *)(v0 + 1316) = v104;
  *(_BYTE *)(v0 + 1313) = v104 >= 0.7;
  return result;
}

void sub_10015AB2C()
{
  float32x4_t *v0;
  float32x4_t *v1;
  float32x4_t v2;
  unint64_t v3;
  float32x4_t v4;
  float32x4_t v5;
  int32x4_t v6;
  float32x2_t v7;
  float32x2_t v8;
  float32x4_t v9;
  float32x4_t v10;
  float32x4_t v11;
  int32x4_t v12;
  float32x2_t v13;
  float32x2_t v14;
  float32x4_t v15;
  float32x4_t v16;

  v1 = (float32x4_t *)v0[6].i64[1];
  if ((v0[17].i8[1] & 1) == 0 && !v0[36].i8[1])
  {
    if ((v0[8].i8[0] & 1) == 0)
    {
      if ((v0[27].i8[0] & 1) == 0)
      {
        v2 = vmulq_f32(v0[7], v0[26]);
        v2.i32[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v2, 2), vaddq_f32(v2, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v2.f32, 1))).u32[0];
LABEL_12:
        v0[82].i8[8] = v2.f32[0] >= 0.8;
        return;
      }
      goto LABEL_16;
    }
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v1)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v3 = v1[1].u64[0];
  if (!v3)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((v0[27].i8[0] & 1) == 0)
  {
    if (v3 >= 2)
    {
      v4 = v1[2];
      v5 = v1[3];
      v6 = (int32x4_t)vmulq_f32(v4, v4);
      v6.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v6, 2), vadd_f32(*(float32x2_t *)v6.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v6.i8, 1))).u32[0];
      v7 = vrsqrte_f32((float32x2_t)v6.u32[0]);
      v8 = vmul_f32(v7, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v7, v7)));
      v9 = vmulq_n_f32(v4, vmul_f32(v8, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v8, v8))).f32[0]);
      v10 = v0[26];
      v11 = vmulq_f32(v9, v10);
      v2 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v11, 2), vaddq_f32(v11, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v11.f32, 1)));
      v12 = (int32x4_t)vmulq_f32(v5, v5);
      v12.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v12, 2), vadd_f32(*(float32x2_t *)v12.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v12.i8, 1))).u32[0];
      v13 = vrsqrte_f32((float32x2_t)v12.u32[0]);
      v14 = vmul_f32(v13, vrsqrts_f32((float32x2_t)v12.u32[0], vmul_f32(v13, v13)));
      v15 = vmulq_f32(vmulq_n_f32(v5, vmul_f32(v14, vrsqrts_f32((float32x2_t)v12.u32[0], vmul_f32(v14, v14))).f32[0]), v10);
      v16 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v15, 2), vaddq_f32(v15, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v15.f32, 1)));
      if ((vmovn_s32(vcgeq_f32(v16, v2)).u8[0] & 1) != 0)
        v2.f32[0] = v16.f32[0];
      goto LABEL_12;
    }
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_10015AC88()
{
  uint64_t v0;
  uint64_t v1;
  float32x2_t *v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  float32x4_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;
  __int32 v26;
  uint64_t v27;
  float32x4_t *v28;
  unint64_t v29;
  float32x4_t v30;
  unint64_t v31;
  int32x4_t v32;
  float32x2_t v33;
  float32x2_t v34;
  float32x4_t v35;
  __int128 v36;
  __n128 v37;
  __int128 v38;
  unint64_t v39;
  __int128 v40;
  float v41;
  uint64_t v42;
  __n128 v43;
  float v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x2_t v55;
  float32x4_t v56;
  float v57;
  float32x4_t v58;
  void *v60;
  id v61;
  id v62;
  _QWORD *v63;
  double v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  _QWORD *v71;
  _QWORD *v72;
  double v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  __n128 v79;
  id v80;
  _QWORD *v81;
  _QWORD *v82;
  double v83;
  id v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  float32x2_t *v89;
  uint64_t v90;
  id v91;
  void *v92;
  id v93;
  unint64_t v94;
  float32x2_t *v95;
  void *v96;
  void *v97;
  id v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  float32x2_t *v104;
  float32x2_t *v105;
  uint64_t v106;
  __n128 v107;
  __n128 v108;
  __n128 v109;
  __n128 v110;
  __n128 v111;
  __n128 v112;
  __n128 v113;
  __n128 v114;
  __n128 v115;
  __n128 v116;
  __n128 v117;
  __n128 v118;
  __n128 v119;
  __int128 v120;
  __n128 v121;
  __n128 v122;
  __n128 v123;
  __int128 v124;
  unsigned int v125;
  __n128 v126;
  __n128 v127;
  __n128 v128;
  __n128 v129;
  __n128 v130;
  __n128 v131;
  float32x4_t v132;
  float32x2_t v133;
  float32x2_t v134;
  __n128 v135;
  __n128 v136;
  __n128 v137;
  double v138;
  __int32 v139;
  _BYTE v140[304];
  uint64_t v141[38];
  _BYTE v142[304];
  uint64_t v143[3];
  float32x4_t *v144;
  double v145;
  char v146;
  unint64_t v147;
  uint64_t v148[18];
  __n128 v149;
  __n128 v150;
  __n128 v151;
  __n128 v152;
  double v153[60];
  uint64_t v154[18];
  __n128 v155;
  __n128 v156;
  __n128 v157;
  __n128 v158;
  double v159[60];
  uint64_t v160[18];
  __n128 v161;
  __n128 v162;
  __n128 v163;
  __n128 v164;
  double v165[60];
  uint64_t v166[18];
  __n128 v167;
  __n128 v168;
  __n128 v169;
  __n128 v170;
  double v171[60];
  uint64_t v172[18];
  __n128 v173;
  __n128 v174;
  __n128 v175;
  __n128 v176;
  uint64_t v177[62];

  v1 = v0;
  v2 = 0;
  v147 = 0;
  if ((*(_BYTE *)(v0 + 40) & 1) == 0)
  {
    v2 = (float32x2_t *)objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", *(double *)(v0 + 8), *(double *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32));
    v147 = (unint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(0);
    v3 = *(_QWORD *)(v0 + 688);
    v4 = (char *)objc_opt_self(UIColor);
    v5 = objc_msgSend(v4, "redColor");
    sub_1000496A4(v3, v5);
    v7 = v6;

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
    v10 = *(float32x4_t **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v9 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if ((unint64_t)v10 >= v9 >> 1)
      goto LABEL_71;
    goto LABEL_3;
  }
  while (2)
  {
    sub_100012C58(v1 + 704, (uint64_t)v142, &qword_100484AC8);
    sub_100012C58((uint64_t)v142, (uint64_t)v143, &qword_100484AC8);
    if (sub_100124C4C(v143) == 1
      || (sub_100012C58(v1 + 1008, (uint64_t)v140, &qword_100484AC8),
          sub_100012C58((uint64_t)v140, (uint64_t)v141, &qword_100484AC8),
          sub_100124C4C(v141) == 1))
    {

      *(_QWORD *)(v1 + 1328) = 0;
      *(_BYTE *)(v1 + 1336) = 1;
      v20 = v147;
LABEL_83:
      swift_bridgeObjectRelease(v20);
      return;
    }
    v21 = *(_BYTE *)(v1 + 248);
    if ((v146 & 1) != 0)
    {
      if (!*(_BYTE *)(v1 + 248))
      {
LABEL_12:
        v22 = (uint64_t *)(v1 + 696);
        v23 = (uint64_t *)(v1 + 688);
        goto LABEL_17;
      }
    }
    else
    {
      if (v145 != *(double *)(v1 + 240))
        v21 = 1;
      if ((v21 & 1) != 0)
        goto LABEL_12;
    }
    v22 = (uint64_t *)(v1 + 688);
    v23 = (uint64_t *)(v1 + 696);
LABEL_17:
    v7 = *v22;
    v24 = *v23;
    swift_bridgeObjectRetain(*v22);
    v104 = (float32x2_t *)v24;
    swift_bridgeObjectRetain(v24);
    v10 = v144;
    if (!v144)
      goto LABEL_86;
    v105 = v2;
    v25 = v144[1].i64[0];
    if (v25)
    {
      sub_10015BA58((uint64_t)v142, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10015B798);
      v177[0] = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v10);
      sub_1000A5698(0, v25, 0);
      v27 = 0;
      v28 = (float32x4_t *)v177[0];
      v29 = *(_QWORD *)(v177[0] + 16);
      do
      {
        v30 = v10[v27 + 2];
        v177[0] = (uint64_t)v28;
        v31 = v28[1].u64[1];
        if (v29 >= v31 >> 1)
        {
          v132 = v30;
          v139 = v26;
          sub_1000A5698((char *)(v31 > 1), v29 + 1, 1);
          v30 = v132;
          v26 = v139;
          v28 = (float32x4_t *)v177[0];
        }
        ++v27;
        v32 = (int32x4_t)vmulq_f32(v30, v30);
        v32.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v32, 2), vadd_f32(*(float32x2_t *)v32.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v32.i8, 1))).u32[0];
        v33 = vrsqrte_f32((float32x2_t)v32.u32[0]);
        v34 = vmul_f32(v33, vrsqrts_f32((float32x2_t)v32.u32[0], vmul_f32(v33, v33)));
        v35 = vmulq_n_f32(v30, vmul_f32(v34, vrsqrts_f32((float32x2_t)v32.u32[0], vmul_f32(v34, v34))).f32[0]);
        v35.i32[3] = v26;
        v28[1].i64[0] = v29 + 1;
        v28[v29++ + 2] = v35;
      }
      while (v25 != v27);
      swift_bridgeObjectRelease(v10);
    }
    else
    {
      sub_100012C58((uint64_t)v142, (uint64_t)v177, &qword_100484AC8);
      sub_1000C2C50(v177);
      v28 = (float32x4_t *)_swiftEmptyArrayStorage;
    }
    v39 = *(_QWORD *)(v7 + 16);
    v2 = (float32x2_t *)v24;
    if (!v39)
    {
      __break(1u);
      goto LABEL_73;
    }
    v103 = v7;
    v7 = *(_QWORD *)(v24 + 16);
    if (!v7)
    {
      swift_bridgeObjectRelease(v28);
      v4 = 0;
LABEL_56:
      swift_bridgeObjectRelease(v2);
      sub_10015BA58((uint64_t)v142, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100124CF0);
      *(_QWORD *)(v1 + 1328) = v4;
      *(_BYTE *)(v1 + 1336) = 0;
      v7 = v147;
      v2 = v105;
      if (!v105)
      {
        swift_bridgeObjectRelease(v103);
LABEL_82:
        v20 = v7;
        goto LABEL_83;
      }
      if (!v147)
      {
        swift_bridgeObjectRelease(v103);
LABEL_81:

        goto LABEL_82;
      }
      v39 = v147 & 0xFFFFFFFFFFFFFF8;
      if (!(v147 >> 62))
      {
        v88 = *(_QWORD *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(v147, 2);
        v89 = v105;
        if (!v88)
        {
LABEL_78:
          swift_bridgeObjectRelease(v7);
          v2 = v105;
          sub_1000661C4(v105);
          v97 = v96;
          swift_bridgeObjectRelease(v7);

          v98 = v97;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v98);
          v99 = *(_QWORD *)(v1 + 48) & 0xFFFFFFFFFFFFFF8;
          v101 = *(_QWORD *)(v99 + 0x10);
          v100 = *(_QWORD *)(v99 + 24);
          if (v101 >= v100 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v100 > 1, v101 + 1, 1);
          v102 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v101, v98);
          specialized Array._endMutation()(v102);
          swift_bridgeObjectRelease(v103);

          goto LABEL_81;
        }
LABEL_60:
        if (v88 < 1)
        {
          __break(1u);
          break;
        }
        v90 = 0;
        do
        {
          if ((v7 & 0xC000000000000001) != 0)
            v91 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v90, v7);
          else
            v91 = *(id *)(v7 + 8 * v90 + 32);
          v92 = v91;
          ++v90;
          v93 = -[float32x2_t layer](v105, "layer");
          objc_msgSend(v93, "addSublayer:", v92);

        }
        while (v88 != v90);
        goto LABEL_78;
      }
LABEL_74:
      if (v7 >= 0)
        v94 = v39;
      else
        v94 = v7;
      swift_bridgeObjectRetain_n(v7, 2);
      v95 = v2;
      v88 = _CocoaArrayWrapper.endIndex.getter(v94);
      if (!v88)
        goto LABEL_78;
      goto LABEL_60;
    }
    v39 = v28[1].u64[0];
    if (v39 < 2)
    {
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    v4 = 0;
    v40 = *(_OWORD *)(v103 + 32);
    v2 = (float32x2_t *)(v24 + 32);
    LODWORD(v41) = *(_QWORD *)(v103 + 40);
    v106 = v40;
    while (1)
    {
      v9 = 0;
      v43 = *(__n128 *)v2->f32;
      *(float32x2_t *)v45.f32 = vsub_f32(*v2, *(float32x2_t *)&v40);
      v44 = COERCE_FLOAT(*(_QWORD *)&v2[1]);
      v45.f32[2] = v44 - v41;
      v45.i32[3] = 0;
      v46 = v28[2];
      v47 = vmulq_f32(v46, v45);
      v48 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v47, 2), vaddq_f32(v47, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v47.f32, 1)));
      *(float *)&v38 = v41 + vmulq_laneq_f32(v48, v46, 2).f32[0];
      v37.n128_u64[0] = (unint64_t)vadd_f32(*(float32x2_t *)&v40, vmul_n_f32(*(float32x2_t *)v46.f32, v48.f32[0]));
      if (v48.f32[0] <= 0.0)
        goto LABEL_36;
      *(float32x2_t *)v46.f32 = vsub_f32((float32x2_t)v43.n128_u64[0], (float32x2_t)v37.n128_u64[0]);
      v46.f32[2] = v44 - *(float *)&v38;
      v49 = vmulq_f32(v46, v46);
      v50 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v49, 2), vaddq_f32(v49, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v49.f32, 1))).f32[0]);
      if (v50 <= 0.0)
        goto LABEL_36;
      v9 = v10[1].u64[0];
      if (v9 < 2)
        break;
      v51 = vmulq_f32(v10[3], v10[3]);
      v9 = v50 < sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v51, 2), vaddq_f32(v51, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v51.f32, 1))).f32[0]);
LABEL_36:
      v52 = v28[3];
      v53 = vmulq_f32(v45, v52);
      v54 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v53, 2), vaddq_f32(v53, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v53.f32, 1)));
      *(float *)&v36 = v41 + vmulq_laneq_f32(v54, v52, 2).f32[0];
      v55 = vadd_f32(*(float32x2_t *)&v40, vmul_n_f32(*(float32x2_t *)v52.f32, v54.f32[0]));
      if (v54.f32[0] <= 0.0)
        goto LABEL_48;
      *(float32x2_t *)v54.f32 = vsub_f32((float32x2_t)v43.n128_u64[0], v55);
      v54.f32[2] = v44 - *(float *)&v36;
      v56 = vmulq_f32(v54, v54);
      v57 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v56, 2), vaddq_f32(v56, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v56.f32, 1))).f32[0]);
      if (v57 <= 0.0)
        goto LABEL_48;
      if (!v10[1].i64[0])
        goto LABEL_69;
      v58 = vmulq_f32(v10[2], v10[2]);
      v9 = v57 < sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v58, 2), vaddq_f32(v58, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v58.f32, 1))).f32[0])? v9: 0;
      if ((_DWORD)v9 != 1)
        goto LABEL_48;
      if (__OFADD__(v4++, 1))
        goto LABEL_70;
      if (v147)
      {
        v120 = v38;
        v124 = v36;
        v128 = v37;
        v133 = v55;
        v136 = *(__n128 *)v2->f32;
        v60 = (void *)objc_opt_self(UIColor);
        v61 = objc_msgSend(v60, "whiteColor");
        v62 = objc_msgSend(v60, "clearColor");
        type metadata accessor for MeasureCamera(0);
        static ComputedCameraProperties.shared.getter(v148);
        v112 = v150;
        v115 = v149;
        v107 = v152;
        v109 = v151;
        v63 = static ComputedCameraProperties.shared.getter(v153);
        v64 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v63, v136, v115, v112, v109, v107, v153[0]);
        v65 = sub_1000492F4(v61, v62, v64, 4.0);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v66);
        v68 = *(_QWORD *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v67 = *(_QWORD *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v68 >= v67 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v67 > 1, v68 + 1, 1);
        v69 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v68, v65);
        specialized Array._endMutation()(v69);
        *(_QWORD *)&v40 = v106;
        v55 = v133;
        v43 = v136;
        v36 = v124;
        v37 = v128;
        v38 = v120;
LABEL_48:
        if (v147)
        {
          v134 = v55;
          v137 = v43;
          v37.n128_u64[1] = v38;
          v125 = v36;
          v129 = v37;
          v70 = objc_msgSend((id)objc_opt_self(UIColor), "purpleColor");
          type metadata accessor for MeasureCamera(0);
          static ComputedCameraProperties.shared.getter(v154);
          v116 = v156;
          v121 = v155;
          v110 = v158;
          v113 = v157;
          v71 = static ComputedCameraProperties.shared.getter(v159);
          v121.n128_u64[0] = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v71, v137, v121, v116, v113, v110, v159[0]);
          static ComputedCameraProperties.shared.getter(v160);
          v114 = v162;
          v117 = v161;
          v108 = v164;
          v111 = v163;
          v72 = static ComputedCameraProperties.shared.getter(v165);
          v73 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v72, v129, v117, v114, v111, v108, v165[0]);
          v74 = sub_1000490F8(v70, v121.n128_f64[0], v73, 1.0);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v75);
          v77 = *(_QWORD *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v76 = *(_QWORD *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v77 >= v76 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1);
          v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v74);
          specialized Array._endMutation()(v78);
          if (v147)
          {
            v79.n128_u64[0] = (unint64_t)v134;
            v79.n128_u64[1] = v125;
            v135 = v79;
            v80 = objc_msgSend((id)objc_opt_self(UIColor), "magentaColor");
            static ComputedCameraProperties.shared.getter(v166);
            v126 = v168;
            v130 = v167;
            v118 = v170;
            v122 = v169;
            v81 = static ComputedCameraProperties.shared.getter(v171);
            v138 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v81, v137, v130, v126, v122, v118, v171[0]);
            static ComputedCameraProperties.shared.getter(v172);
            v127 = v174;
            v131 = v173;
            v119 = v176;
            v123 = v175;
            v82 = static ComputedCameraProperties.shared.getter(v177);
            v83 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v82, v135, v131, v127, v123, v119, *(double *)v177);
            v84 = sub_1000490F8(v80, v138, v83, 1.0);

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v85);
            v87 = *(_QWORD *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v86 = *(_QWORD *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v87 >= v86 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v86 > 1, v87 + 1, 1);
            v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v87, v84);
            specialized Array._endMutation()(v42);
          }
          *(_QWORD *)&v40 = v106;
        }
      }
      v2 += 2;
      if (!--v7)
      {
        swift_bridgeObjectRelease(v28);
        v2 = v104;
        goto LABEL_56;
      }
    }
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, (char *)v10->f32 + 1, 1);
LABEL_3:
    v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v7);
    specialized Array._endMutation()(v11);
    v12 = *(_QWORD *)(v1 + 696);
    v13 = objc_msgSend(v4, "greenColor");
    sub_1000496A4(v12, v13);
    v15 = v14;

    if (v147)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      v18 = *(_QWORD *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v17 = *(_QWORD *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v18 >= v17 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
      v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v15);
      specialized Array._endMutation()(v19);
      continue;
    }
    break;
  }

  __break(1u);
LABEL_86:
  sub_100012C58((uint64_t)v142, (uint64_t)v177, &qword_100484AC8);
  sub_1000C2C50(v177);
  swift_bridgeObjectRelease(v104);

  __break(1u);
}

uint64_t sub_10015B798(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if (result != 1)
  {
    v6 = result;
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a3);
  }
  return result;
}

uint64_t sub_10015B7EC(uint64_t a1)
{
  uint64_t result;
  _BYTE v3[8];
  uint64_t v4;

  sub_100012C58(a1, (uint64_t)v3, &qword_100485BF8);
  result = sub_100012C58((uint64_t)v3, (uint64_t)&v4, &qword_100485BF8);
  if (!v4)
    goto LABEL_6;
  if (!*(_QWORD *)(v4 + 16))
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if ((*(_BYTE *)(a1 + 224) & 1) != 0)
LABEL_7:
    __break(1u);
  return result;
}

_QWORD *sub_10015B8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  __int128 *v6;
  _QWORD *result;
  float32x4_t v8;
  uint64_t v9;
  float32x4_t v10;
  float32x2_t v11;
  float v12;
  unint64_t v13;
  unint64_t v14;
  float32x4_t v15;
  float32x4_t v16;
  float v17;
  float32x4_t v18;
  __int128 v19;
  _BYTE v20[8];
  float32x2_t *v21;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return _swiftEmptyArrayStorage;
  sub_1000A5698(0, v3, 0);
  v6 = (__int128 *)(a1 + 32);
  sub_100012C58(a3, (uint64_t)v20, &qword_100485BF8);
  while (1)
  {
    v19 = *v6;
    result = (_QWORD *)sub_100012C58((uint64_t)v20, (uint64_t)&v21, &qword_100485BF8);
    if (!v21)
      break;
    if (!*(_QWORD *)&v21[2])
    {
      __break(1u);
      break;
    }
    if ((*(_BYTE *)(a3 + 224) & 1) != 0)
      goto LABEL_12;
    v9 = *(_QWORD *)(a3 + 208);
    v10.i64[0] = v9;
    v10.i64[1] = *(_QWORD *)(a3 + 216);
    v11 = v21[4];
    v12 = v21[5].f32[0];
    v14 = _swiftEmptyArrayStorage[2];
    v13 = _swiftEmptyArrayStorage[3];
    if (v14 >= v13 >> 1)
    {
      v18 = v10;
      sub_1000A5698((char *)(v13 > 1), v14 + 1, 1);
      v10 = v18;
    }
    *(float32x2_t *)v8.f32 = vsub_f32(*(float32x2_t *)&v19, v11);
    v8.f32[2] = *((float *)&v19 + 2) - v12;
    v15 = vmulq_f32(v8, v10);
    v16 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v15, 2), vaddq_f32(v15, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v15.f32, 1)));
    v17 = vmulq_laneq_f32(v16, v10, 2).f32[0];
    v10.i32[0] = v9;
    *(float32x2_t *)v16.f32 = vsub_f32(*(float32x2_t *)&v19, vmul_n_f32(*(float32x2_t *)v10.f32, v16.f32[0]));
    v16.f32[2] = *((float *)&v19 + 2) - v17;
    v16.i32[3] = 0;
    _swiftEmptyArrayStorage[2] = v14 + 1;
    *(float32x4_t *)&_swiftEmptyArrayStorage[2 * v14 + 4] = v16;
    ++v6;
    if (!--v3)
      return _swiftEmptyArrayStorage;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_10015BA58(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v6 = *(_OWORD *)(a1 + 256);
  v7 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  v5 = *(_OWORD *)(a1 + 240);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    *(_QWORD *)(a1 + 288),
    *(_QWORD *)(a1 + 296));
  return a1;
}

uint64_t sub_10015BADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  float v12;
  float32x4_t v13;
  float32x4_t v14;
  float32x4_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  char v32;
  char v33;
  char v34;
  int v35;
  char v36;
  char v37;
  char v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  char v49;
  __int128 v50;
  __int128 v51;
  _QWORD *v52;
  _QWORD *v53;
  char __src;
  void *v55;
  float32x4_t v56;
  float32x4_t v57;
  uint64_t v58;
  float32x4_t v59;
  int v60;
  _BYTE __dst[304];
  _BYTE v62[304];
  _BYTE v63[304];
  _BYTE v64[304];
  _OWORD v65[90];
  _BYTE v66[1472];
  _BYTE v67[40];
  char v68;
  __int128 v69;
  _QWORD *v70;
  _BYTE v71[304];
  _BYTE v72[304];
  __int128 v73;
  _BYTE v74[304];
  _BYTE v75[304];
  __int16 v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  _BYTE v83[28];
  char v84;
  uint64_t v85;
  char v86;
  _BYTE v87[32];
  _BYTE v88[32];
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  float v93;
  char v94;
  float v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  float32x4_t v99;
  char v100;
  float32x4_t v101;
  char v102;
  _BYTE v103[1440];
  _BYTE v104[320];

  memset(&v67[8], 0, 32);
  v68 = 1;
  *(_QWORD *)&v69 = _swiftEmptyArrayStorage;
  *((_QWORD *)&v69 + 1) = _swiftEmptyArrayStorage;
  v70 = _swiftEmptyArrayStorage;
  sub_10013FECC((uint64_t)v104);
  sub_100012C58((uint64_t)v104, (uint64_t)v74, &qword_100484AC8);
  result = sub_100012C58((uint64_t)v104, (uint64_t)v75, &qword_100484AC8);
  v76 = 0;
  v78 = 0;
  v77 = 0;
  v79 = 1;
  v80 = 0u;
  v81 = 0u;
  v82 = 0u;
  memset(v83, 0, sizeof(v83));
  v84 = 1;
  v85 = 0;
  v86 = 0;
  v9 = *(_BYTE *)(a2 + 168);
  if ((*(_BYTE *)(a1 + 168) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 168))
      goto LABEL_3;
LABEL_12:

    sub_10013FE7C((_QWORD *)a2);
    sub_10013FE7C((_QWORD *)a1);
    goto LABEL_13;
  }
  if (*(double *)(a1 + 160) != *(double *)(a2 + 160))
    v9 = 1;
  if ((v9 & 1) == 0)
    goto LABEL_12;
LABEL_3:
  if ((*(_BYTE *)(a1 + 128) & 1) != 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v58 = a4;
  if ((*(_BYTE *)(a2 + 128) & 1) != 0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v11 = *(_QWORD *)(a1 + 112);
  v10 = *(_QWORD *)(a1 + 120);
  v59 = *(float32x4_t *)(a2 + 112);
  sub_100012C58(a1 + 228, (uint64_t)&v92, &qword_10047F0A8);
  result = sub_100012C58((uint64_t)&v92, (uint64_t)&v93, &qword_10047F0A8);
  if ((v94 & 1) != 0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v12 = v93;
  sub_100012C58(a2 + 228, (uint64_t)&v91, &qword_10047F0A8);
  result = sub_100012C58((uint64_t)&v91, (uint64_t)&v95, &qword_10047F0A8);
  if ((v96 & 1) != 0)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v13.i64[0] = v11;
  v13.i64[1] = v10;
  v14 = vsubq_f32(v13, v59);
  v15 = vmulq_f32(v14, v14);
  if ((float)(v12 + v95) < sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v15, 2), vaddq_f32(v15, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v15.f32, 1))).f32[0]))
  {

    sub_10013FE7C((_QWORD *)a2);
    sub_10013FE7C((_QWORD *)a1);
    a4 = v58;
    goto LABEL_13;
  }
  v56 = v13;
  *(_QWORD *)v67 = a3;
  if (a3)
  {
    v16 = a3;
    objc_msgSend(v16, "frame");
    v18 = v17;
    v20 = v19;
    objc_msgSend(v16, "frame");
    *(_QWORD *)&v67[8] = v18;
    *(_QWORD *)&v67[16] = v20;
    *(_QWORD *)&v67[24] = static CGSize.* infix(_:_:)(v21, v22, 2.0);
    *(_QWORD *)&v67[32] = v23;
    v68 = 0;
  }
  sub_100012C58(a1, (uint64_t)&v90, &qword_100485BF8);
  memcpy(v71, (const void *)a1, sizeof(v71));
  memcpy(v72, (const void *)a2, sizeof(v72));
  result = sub_100012C58((uint64_t)&v90, (uint64_t)&v97, &qword_100485BF8);
  v24 = v97;
  if (!v97)
    goto LABEL_30;
  sub_100012C58(a2, (uint64_t)&v89, &qword_100485BF8);
  sub_1000C2C50((uint64_t *)a1);
  sub_1000C2C50((uint64_t *)a1);
  sub_100141EB8(&v90);
  v25 = sub_10015B8C0(v24, (uint64_t)v67, a1);
  sub_10013FE7C((_QWORD *)a1);
  sub_10007BB44(&v90);
  v52 = v25;
  *(_QWORD *)&v73 = v25;
  result = sub_100012C58((uint64_t)&v89, (uint64_t)&v98, &qword_100485BF8);
  v26 = v98;
  if (!v98)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_100012C58(a1 + 208, (uint64_t)v88, &qword_100484AD0);
  sub_1000C2C50((uint64_t *)a1);
  sub_100141EB8(&v89);
  v27 = sub_10015B8C0(v26, (uint64_t)v67, a1);
  sub_10013FE7C((_QWORD *)a1);
  sub_10013FE7C((_QWORD *)a1);
  sub_10007BB44(&v89);
  *((_QWORD *)&v73 + 1) = v27;
  result = sub_100012C58((uint64_t)v88, (uint64_t)&v99, &qword_100484AD0);
  if ((v100 & 1) != 0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v57 = v99;
  sub_100012C58(a2 + 208, (uint64_t)v87, &qword_100484AD0);
  result = sub_100012C58((uint64_t)v87, (uint64_t)&v101, &qword_100484AD0);
  a4 = v58;
  if ((v102 & 1) == 0)
  {
    v28 = vmulq_f32(v57, v101);
    v28.f32[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v28, 2), vaddq_f32(v28, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v28.f32, 1))).f32[0];
    BYTE5(v77) = v28.f32[0] >= 0.8;
    if (v28.f32[0] >= 0.8)
    {
      sub_10015B7EC(a1);
      v30 = vsubq_f32(v56, v29);
      v31 = vmulq_f32(v30, v30);
      LOBYTE(v76) = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v31, 2), vaddq_f32(v31, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v31.f32, 1))).f32[0]) < 0.05;
      sub_10015A5C4();
      sub_10015AB2C();

      v32 = HIBYTE(v76);
      v33 = v76;
      v34 = BYTE4(v77);
      v60 = (BYTE4(v77) & ~HIBYTE(v76) & v76);
      if (v60 == 1)
      {
        v78 = 4;
        v79 = 0;
      }
      v50 = *(_OWORD *)&v67[16];
      v51 = *(_OWORD *)v67;
      v49 = v68;
      v48 = *(_QWORD *)&v67[32];
      v53 = v70;
      memcpy(__dst, v71, sizeof(__dst));
      memcpy(v62, v72, sizeof(v62));
      v39 = v69;
      v40 = v73;
      sub_100012C58((uint64_t)v74, (uint64_t)v63, &qword_100484AC8);
      sub_100012C58((uint64_t)v75, (uint64_t)v64, &qword_100484AC8);
      v35 = v77;
      v36 = BYTE5(v77);
      v37 = BYTE6(v77);
      v55 = (void *)v78;
      __src = v79;
      v46 = v81;
      v47 = v80;
      v44 = *(_OWORD *)v83;
      v45 = v82;
      v43 = *(_QWORD *)&v83[16];
      v42 = *(_DWORD *)&v83[24];
      v38 = v84;
      v41 = v85;
      v65[0] = v51;
      v65[1] = v50;
      *(_QWORD *)&v65[2] = v48;
      BYTE8(v65[2]) = v49;
      v65[3] = v39;
      *(_QWORD *)&v65[4] = v53;
      memcpy(&v65[5], __dst, 0x130uLL);
      memcpy(&v65[24], v62, 0x130uLL);
      v65[43] = v40;
      sub_100012C58((uint64_t)v63, (uint64_t)&v65[44], &qword_100484AC8);
      sub_100012C58((uint64_t)v64, (uint64_t)&v65[63], &qword_100484AC8);
      LOBYTE(v65[82]) = v33;
      BYTE1(v65[82]) = v32;
      DWORD1(v65[82]) = v35;
      BYTE8(v65[82]) = v34;
      BYTE9(v65[82]) = v36;
      BYTE10(v65[82]) = v37;
      BYTE11(v65[82]) = v60;
      *(_QWORD *)&v65[83] = v55;
      BYTE8(v65[83]) = __src;
      v65[84] = v47;
      v65[85] = v46;
      v65[86] = v45;
      v65[87] = v44;
      *(_QWORD *)&v65[88] = v43;
      DWORD2(v65[88]) = v42;
      BYTE12(v65[88]) = v38;
      *(_QWORD *)&v65[89] = v41;
      BYTE8(v65[89]) = v33 & v32 & v34;
      memcpy(v66, v65, 0x599uLL);
      nullsub_1(v66);
      sub_100012C58((uint64_t)v66, (uint64_t)v103, &qword_100485BF0);
      a4 = v58;
      return sub_100012C58((uint64_t)v103, a4, &qword_100485BF0);
    }

    sub_10013FE7C((_QWORD *)a1);
    sub_10013FE7C((_QWORD *)a2);
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRelease(v52);
LABEL_13:
    sub_10015C2B8(v66);
    sub_100012C58((uint64_t)v66, (uint64_t)v103, &qword_100485BF0);
    return sub_100012C58((uint64_t)v103, a4, &qword_100485BF0);
  }
LABEL_33:
  __break(1u);
  return result;
}

void sub_10015C2B8(void *a1)
{
  bzero(a1, 0x599uLL);
}

uint64_t destroy for RectangleSimilarity(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 384));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 392));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 400));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 408));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 688));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 696));
  v2 = *(_QWORD *)(a1 + 704);
  if (v2 != 1)
  {
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 712));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 720));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 728));
  }
  v3 = *(_QWORD *)(a1 + 1008);
  if (v3 != 1)
  {
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 1016));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 1024));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 1032));
  }
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 1424));
}

uint64_t initializeWithCopy for RectangleSimilarity(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  int v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  int v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *__dst;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v56 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v56;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v6;
  v57 = v6;
  v58 = *(_QWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v58;
  *(_QWORD *)(a1 + 88) = v7;
  v59 = v7;
  v60 = *(_QWORD *)(a2 + 96);
  v61 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v60;
  *(_QWORD *)(a1 + 104) = v61;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v8 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v8;
  v9 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v9;
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  LODWORD(v7) = *(_DWORD *)(a2 + 212);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_DWORD *)(a1 + 212) = v7;
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_DWORD *)(a1 + 220) = *(_DWORD *)(a2 + 220);
  *(_BYTE *)(a1 + 236) = *(_BYTE *)(a2 + 236);
  *(_QWORD *)(a1 + 228) = *(_QWORD *)(a2 + 228);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
  LODWORD(v7) = *(_DWORD *)(a2 + 260);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_DWORD *)(a1 + 260) = v7;
  LODWORD(v7) = *(_DWORD *)(a2 + 268);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_DWORD *)(a1 + 268) = v7;
  *(_BYTE *)(a1 + 273) = *(_BYTE *)(a2 + 273);
  v10 = *(_OWORD *)(a2 + 288);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = v10;
  LODWORD(v7) = *(_DWORD *)(a2 + 308);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_DWORD *)(a1 + 308) = v7;
  v11 = *(_OWORD *)(a2 + 320);
  v12 = *(_OWORD *)(a2 + 336);
  v13 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v13;
  *(_OWORD *)(a1 + 320) = v11;
  *(_OWORD *)(a1 + 336) = v12;
  v15 = *(_QWORD *)(a2 + 384);
  v14 = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 384) = v15;
  *(_QWORD *)(a1 + 392) = v14;
  v17 = *(_QWORD *)(a2 + 400);
  v16 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = v17;
  *(_QWORD *)(a1 + 408) = v16;
  v18 = *(_OWORD *)(a2 + 416);
  *(_BYTE *)(a1 + 432) = *(_BYTE *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = v18;
  v19 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v19;
  v20 = *(_OWORD *)(a2 + 480);
  v21 = *(_OWORD *)(a2 + 496);
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  *(_OWORD *)(a1 + 480) = v20;
  *(_OWORD *)(a1 + 496) = v21;
  v22 = *(_DWORD *)(a2 + 516);
  *(_BYTE *)(a1 + 520) = *(_BYTE *)(a2 + 520);
  *(_DWORD *)(a1 + 516) = v22;
  v23 = *(_DWORD *)(a2 + 524);
  *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
  *(_DWORD *)(a1 + 524) = v23;
  v24 = *(_QWORD *)(a2 + 532);
  *(_BYTE *)(a1 + 540) = *(_BYTE *)(a2 + 540);
  *(_QWORD *)(a1 + 532) = v24;
  v25 = *(_QWORD *)(a2 + 544);
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  *(_QWORD *)(a1 + 544) = v25;
  LODWORD(v25) = *(_DWORD *)(a2 + 556);
  *(_BYTE *)(a1 + 560) = *(_BYTE *)(a2 + 560);
  *(_DWORD *)(a1 + 556) = v25;
  LODWORD(v25) = *(_DWORD *)(a2 + 564);
  *(_BYTE *)(a1 + 568) = *(_BYTE *)(a2 + 568);
  *(_DWORD *)(a1 + 564) = v25;
  LODWORD(v25) = *(_DWORD *)(a2 + 572);
  *(_BYTE *)(a1 + 576) = *(_BYTE *)(a2 + 576);
  *(_DWORD *)(a1 + 572) = v25;
  *(_BYTE *)(a1 + 577) = *(_BYTE *)(a2 + 577);
  v26 = *(_OWORD *)(a2 + 592);
  *(_BYTE *)(a1 + 608) = *(_BYTE *)(a2 + 608);
  *(_OWORD *)(a1 + 592) = v26;
  LODWORD(v25) = *(_DWORD *)(a2 + 612);
  *(_BYTE *)(a1 + 616) = *(_BYTE *)(a2 + 616);
  *(_DWORD *)(a1 + 612) = v25;
  v27 = *(_OWORD *)(a2 + 624);
  v28 = *(_OWORD *)(a2 + 640);
  v29 = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 672) = v29;
  *(_OWORD *)(a1 + 624) = v27;
  *(_OWORD *)(a1 + 640) = v28;
  v30 = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 688) = v30;
  v31 = *(_QWORD *)(a2 + 696);
  *(_QWORD *)(a1 + 696) = v31;
  __dst = (char *)(a1 + 704);
  v32 = *(_QWORD *)(a2 + 704);
  v33 = v4;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRetain(v57);
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRetain(v60);
  swift_bridgeObjectRetain(v61);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRetain(v31);
  if (v32 == 1)
  {
    memcpy(__dst, (const void *)(a2 + 704), 0x130uLL);
  }
  else
  {
    *(_QWORD *)(a1 + 704) = v32;
    v34 = *(_QWORD *)(a2 + 712);
    *(_QWORD *)(a1 + 712) = v34;
    v35 = *(_QWORD *)(a2 + 720);
    *(_QWORD *)(a1 + 720) = v35;
    v36 = *(_QWORD *)(a2 + 728);
    *(_QWORD *)(a1 + 728) = v36;
    *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
    *(_BYTE *)(a1 + 752) = *(_BYTE *)(a2 + 752);
    v37 = *(_OWORD *)(a2 + 784);
    *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
    *(_OWORD *)(a1 + 784) = v37;
    v38 = *(_OWORD *)(a2 + 800);
    v39 = *(_OWORD *)(a2 + 816);
    *(_BYTE *)(a1 + 832) = *(_BYTE *)(a2 + 832);
    *(_OWORD *)(a1 + 800) = v38;
    *(_OWORD *)(a1 + 816) = v39;
    *(_DWORD *)(a1 + 836) = *(_DWORD *)(a2 + 836);
    *(_BYTE *)(a1 + 840) = *(_BYTE *)(a2 + 840);
    *(_DWORD *)(a1 + 844) = *(_DWORD *)(a2 + 844);
    *(_BYTE *)(a1 + 848) = *(_BYTE *)(a2 + 848);
    *(_QWORD *)(__dst + 148) = *(_QWORD *)(a2 + 852);
    *(_BYTE *)(a1 + 860) = *(_BYTE *)(a2 + 860);
    *(_BYTE *)(a1 + 872) = *(_BYTE *)(a2 + 872);
    *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
    *(_BYTE *)(a1 + 880) = *(_BYTE *)(a2 + 880);
    *(_DWORD *)(a1 + 876) = *(_DWORD *)(a2 + 876);
    *(_BYTE *)(a1 + 888) = *(_BYTE *)(a2 + 888);
    *(_DWORD *)(a1 + 884) = *(_DWORD *)(a2 + 884);
    *(_DWORD *)(a1 + 892) = *(_DWORD *)(a2 + 892);
    *(_WORD *)(a1 + 896) = *(_WORD *)(a2 + 896);
    *(_OWORD *)(a1 + 912) = *(_OWORD *)(a2 + 912);
    *(_BYTE *)(a1 + 928) = *(_BYTE *)(a2 + 928);
    v40 = *(_DWORD *)(a2 + 932);
    *(_BYTE *)(a1 + 936) = *(_BYTE *)(a2 + 936);
    *(_DWORD *)(a1 + 932) = v40;
    v41 = *(_OWORD *)(a2 + 944);
    v42 = *(_OWORD *)(a2 + 960);
    v43 = *(_OWORD *)(a2 + 992);
    *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
    *(_OWORD *)(a1 + 992) = v43;
    *(_OWORD *)(a1 + 944) = v41;
    *(_OWORD *)(a1 + 960) = v42;
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v36);
  }
  v44 = *(_QWORD *)(a2 + 1008);
  if (v44 == 1)
  {
    memcpy((void *)(a1 + 1008), (const void *)(a2 + 1008), 0x130uLL);
  }
  else
  {
    *(_QWORD *)(a1 + 1008) = v44;
    v45 = *(_QWORD *)(a2 + 1016);
    *(_QWORD *)(a1 + 1016) = v45;
    v46 = *(_QWORD *)(a2 + 1024);
    *(_QWORD *)(a1 + 1024) = v46;
    v47 = *(_QWORD *)(a2 + 1032);
    *(_QWORD *)(a1 + 1032) = v47;
    *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
    *(_BYTE *)(a1 + 1056) = *(_BYTE *)(a2 + 1056);
    *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
    *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
    *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
    v48 = *(_OWORD *)(a2 + 1120);
    *(_BYTE *)(a1 + 1136) = *(_BYTE *)(a2 + 1136);
    *(_OWORD *)(a1 + 1120) = v48;
    *(_DWORD *)(a1 + 1140) = *(_DWORD *)(a2 + 1140);
    *(_BYTE *)(a1 + 1144) = *(_BYTE *)(a2 + 1144);
    *(_DWORD *)(a1 + 1148) = *(_DWORD *)(a2 + 1148);
    *(_BYTE *)(a1 + 1152) = *(_BYTE *)(a2 + 1152);
    *(_QWORD *)(a1 + 1156) = *(_QWORD *)(a2 + 1156);
    *(_BYTE *)(a1 + 1164) = *(_BYTE *)(a2 + 1164);
    *(_BYTE *)(a1 + 1176) = *(_BYTE *)(a2 + 1176);
    *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
    *(_BYTE *)(a1 + 1184) = *(_BYTE *)(a2 + 1184);
    *(_DWORD *)(a1 + 1180) = *(_DWORD *)(a2 + 1180);
    *(_BYTE *)(a1 + 1192) = *(_BYTE *)(a2 + 1192);
    *(_DWORD *)(a1 + 1188) = *(_DWORD *)(a2 + 1188);
    *(_DWORD *)(a1 + 1196) = *(_DWORD *)(a2 + 1196);
    *(_WORD *)(a1 + 1200) = *(_WORD *)(a2 + 1200);
    *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
    *(_BYTE *)(a1 + 1232) = *(_BYTE *)(a2 + 1232);
    v49 = *(_DWORD *)(a2 + 1236);
    *(_BYTE *)(a1 + 1240) = *(_BYTE *)(a2 + 1240);
    *(_DWORD *)(a1 + 1236) = v49;
    v50 = *(_OWORD *)(a2 + 1248);
    v51 = *(_OWORD *)(a2 + 1264);
    v52 = *(_OWORD *)(a2 + 1280);
    *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
    *(_OWORD *)(a1 + 1280) = v52;
    *(_OWORD *)(a1 + 1264) = v51;
    *(_OWORD *)(a1 + 1248) = v50;
    swift_bridgeObjectRetain(v44);
    swift_bridgeObjectRetain(v45);
    swift_bridgeObjectRetain(v46);
    swift_bridgeObjectRetain(v47);
  }
  *(_WORD *)(a1 + 1312) = *(_WORD *)(a2 + 1312);
  *(_DWORD *)(a1 + 1316) = *(_DWORD *)(a2 + 1316);
  *(_DWORD *)(a1 + 1320) = *(_DWORD *)(a2 + 1320);
  *(_QWORD *)(a1 + 1328) = *(_QWORD *)(a2 + 1328);
  *(_BYTE *)(a1 + 1336) = *(_BYTE *)(a2 + 1336);
  *(_OWORD *)(a1 + 1360) = *(_OWORD *)(a2 + 1360);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(_OWORD *)(a1 + 1392) = *(_OWORD *)(a2 + 1392);
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(_OWORD *)(a1 + 1405) = *(_OWORD *)(a2 + 1405);
  v53 = *(_QWORD *)(a2 + 1424);
  *(_QWORD *)(a1 + 1424) = v53;
  *(_BYTE *)(a1 + 1432) = *(_BYTE *)(a2 + 1432);
  swift_bridgeObjectRetain(v53);
  return a1;
}

uint64_t assignWithCopy for RectangleSimilarity(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  void *v5;
  void *v6;
  id v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;

  v4 = (_BYTE *)(a2 + 273);
  v5 = *(void **)a1;
  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = v6;

  v8 = *(_OWORD *)(a2 + 8);
  v9 = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v9;
  *(_OWORD *)(a1 + 8) = v8;
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(a1 + 80);
  v17 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v16);
  v18 = *(_QWORD *)(a1 + 88);
  v19 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v18);
  v20 = *(_QWORD *)(a1 + 96);
  v21 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v20);
  v22 = *(_QWORD *)(a1 + 104);
  v23 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v22);
  v24 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = v24;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  v25 = *(_OWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = v25;
  v26 = *(_DWORD *)(a2 + 212);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_DWORD *)(a1 + 212) = v26;
  v27 = *(_DWORD *)(a2 + 220);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_DWORD *)(a1 + 220) = v27;
  v28 = *(_QWORD *)(a2 + 228);
  *(_BYTE *)(a1 + 236) = *(_BYTE *)(a2 + 236);
  *(_QWORD *)(a1 + 228) = v28;
  v29 = *(_QWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = v29;
  LODWORD(v29) = *(_DWORD *)(a2 + 252);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_DWORD *)(a1 + 252) = v29;
  LODWORD(v29) = *(_DWORD *)(a2 + 260);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_DWORD *)(a1 + 260) = v29;
  LODWORD(v29) = *(_DWORD *)(a2 + 268);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_DWORD *)(a1 + 268) = v29;
  *(_BYTE *)(a1 + 273) = *(_BYTE *)(a2 + 273);
  v30 = *(_OWORD *)(a2 + 288);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = v30;
  LODWORD(v29) = *(_DWORD *)(a2 + 308);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_DWORD *)(a1 + 308) = v29;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  v31 = *(_QWORD *)(a1 + 384);
  v32 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 384) = v32;
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRelease(v31);
  v33 = *(_QWORD *)(a1 + 392);
  v34 = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 392) = v34;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v33);
  v35 = *(_QWORD *)(a1 + 400);
  v36 = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 400) = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease(v35);
  v37 = *(_QWORD *)(a1 + 408);
  v38 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 408) = v38;
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRelease(v37);
  v39 = *(_OWORD *)(a2 + 416);
  *(_BYTE *)(a1 + 432) = *(_BYTE *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = v39;
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  v40 = *(_OWORD *)(a2 + 496);
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = v40;
  v41 = *(_DWORD *)(a2 + 516);
  *(_BYTE *)(a1 + 520) = *(_BYTE *)(a2 + 520);
  *(_DWORD *)(a1 + 516) = v41;
  v42 = *(_DWORD *)(a2 + 524);
  *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
  *(_DWORD *)(a1 + 524) = v42;
  v43 = *(_QWORD *)(a2 + 532);
  *(_BYTE *)(a1 + 540) = *(_BYTE *)(a2 + 540);
  *(_QWORD *)(a1 + 532) = v43;
  v44 = *(_QWORD *)(a2 + 544);
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  *(_QWORD *)(a1 + 544) = v44;
  LODWORD(v44) = *(_DWORD *)(a2 + 556);
  *(_BYTE *)(a1 + 560) = *(_BYTE *)(a2 + 560);
  *(_DWORD *)(a1 + 556) = v44;
  LODWORD(v44) = *(_DWORD *)(a2 + 564);
  *(_BYTE *)(a1 + 568) = *(_BYTE *)(a2 + 568);
  *(_DWORD *)(a1 + 564) = v44;
  LODWORD(v44) = *(_DWORD *)(a2 + 572);
  *(_BYTE *)(a1 + 576) = *(_BYTE *)(a2 + 576);
  *(_DWORD *)(a1 + 572) = v44;
  *(_BYTE *)(a1 + 577) = *(_BYTE *)(a2 + 577);
  v45 = *(_OWORD *)(a2 + 592);
  *(_BYTE *)(a1 + 608) = *(_BYTE *)(a2 + 608);
  *(_OWORD *)(a1 + 592) = v45;
  LODWORD(v44) = *(_DWORD *)(a2 + 612);
  *(_BYTE *)(a1 + 616) = *(_BYTE *)(a2 + 616);
  *(_DWORD *)(a1 + 612) = v44;
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  v46 = *(_QWORD *)(a2 + 688);
  v47 = *(_QWORD *)(a1 + 688);
  *(_QWORD *)(a1 + 688) = v46;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRelease(v47);
  v48 = *(_QWORD *)(a2 + 696);
  v49 = *(_QWORD *)(a1 + 696);
  *(_QWORD *)(a1 + 696) = v48;
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRelease(v49);
  v50 = *(_QWORD *)(a1 + 704);
  v51 = *(_QWORD *)(a2 + 704);
  if (v50 == 1)
  {
    if (v51 != 1)
    {
      *(_QWORD *)(a1 + 704) = v51;
      v52 = *(_QWORD *)(a2 + 712);
      *(_QWORD *)(a1 + 712) = v52;
      v53 = *(_QWORD *)(a2 + 720);
      *(_QWORD *)(a1 + 720) = v53;
      v54 = *(_QWORD *)(a2 + 728);
      *(_QWORD *)(a1 + 728) = v54;
      v55 = *(_OWORD *)(a2 + 736);
      *(_BYTE *)(a1 + 752) = *(_BYTE *)(a2 + 752);
      *(_OWORD *)(a1 + 736) = v55;
      v56 = *(_OWORD *)(a2 + 768);
      v57 = *(_OWORD *)(a2 + 800);
      *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
      *(_OWORD *)(a1 + 800) = v57;
      *(_OWORD *)(a1 + 768) = v56;
      v58 = *(_OWORD *)(a2 + 816);
      *(_BYTE *)(a1 + 832) = *(_BYTE *)(a2 + 832);
      *(_OWORD *)(a1 + 816) = v58;
      v59 = *(_DWORD *)(a2 + 836);
      *(_BYTE *)(a1 + 840) = *(_BYTE *)(a2 + 840);
      *(_DWORD *)(a1 + 836) = v59;
      v60 = *(_DWORD *)(a2 + 844);
      *(_BYTE *)(a1 + 848) = *(_BYTE *)(a2 + 848);
      *(_DWORD *)(a1 + 844) = v60;
      v61 = *(_QWORD *)(a2 + 852);
      *(_BYTE *)(a1 + 860) = *(_BYTE *)(a2 + 860);
      *(_QWORD *)(a1 + 852) = v61;
      v62 = *(_QWORD *)(a2 + 864);
      *(_BYTE *)(a1 + 872) = *(_BYTE *)(a2 + 872);
      *(_QWORD *)(a1 + 864) = v62;
      LODWORD(v62) = *(_DWORD *)(a2 + 876);
      *(_BYTE *)(a1 + 880) = *(_BYTE *)(a2 + 880);
      *(_DWORD *)(a1 + 876) = v62;
      LODWORD(v62) = *(_DWORD *)(a2 + 884);
      *(_BYTE *)(a1 + 888) = *(_BYTE *)(a2 + 888);
      *(_DWORD *)(a1 + 884) = v62;
      LODWORD(v62) = *(_DWORD *)(a2 + 892);
      *(_BYTE *)(a1 + 896) = *(_BYTE *)(a2 + 896);
      *(_DWORD *)(a1 + 892) = v62;
      *(_BYTE *)(a1 + 897) = *(_BYTE *)(a2 + 897);
      v63 = *(_OWORD *)(a2 + 912);
      *(_BYTE *)(a1 + 928) = *(_BYTE *)(a2 + 928);
      *(_OWORD *)(a1 + 912) = v63;
      LODWORD(v62) = *(_DWORD *)(a2 + 932);
      *(_BYTE *)(a1 + 936) = *(_BYTE *)(a2 + 936);
      *(_DWORD *)(a1 + 932) = v62;
      v64 = *(_OWORD *)(a2 + 944);
      v65 = *(_OWORD *)(a2 + 960);
      v66 = *(_OWORD *)(a2 + 992);
      *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
      *(_OWORD *)(a1 + 992) = v66;
      *(_OWORD *)(a1 + 944) = v64;
      *(_OWORD *)(a1 + 960) = v65;
      swift_bridgeObjectRetain(v51);
      swift_bridgeObjectRetain(v52);
      swift_bridgeObjectRetain(v53);
      swift_bridgeObjectRetain(v54);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v51 == 1)
  {
    sub_10015D374(a1 + 704);
LABEL_6:
    memcpy((void *)(a1 + 704), (const void *)(a2 + 704), 0x130uLL);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 704) = v51;
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRelease(v50);
  v67 = *(_QWORD *)(a1 + 712);
  v68 = *(_QWORD *)(a2 + 712);
  *(_QWORD *)(a1 + 712) = v68;
  swift_bridgeObjectRetain(v68);
  swift_bridgeObjectRelease(v67);
  v69 = *(_QWORD *)(a1 + 720);
  v70 = *(_QWORD *)(a2 + 720);
  *(_QWORD *)(a1 + 720) = v70;
  swift_bridgeObjectRetain(v70);
  swift_bridgeObjectRelease(v69);
  v71 = *(_QWORD *)(a1 + 728);
  v72 = *(_QWORD *)(a2 + 728);
  *(_QWORD *)(a1 + 728) = v72;
  swift_bridgeObjectRetain(v72);
  swift_bridgeObjectRelease(v71);
  v73 = *(_OWORD *)(a2 + 736);
  *(_BYTE *)(a1 + 752) = *(_BYTE *)(a2 + 752);
  *(_OWORD *)(a1 + 736) = v73;
  *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  v74 = *(_OWORD *)(a2 + 816);
  *(_BYTE *)(a1 + 832) = *(_BYTE *)(a2 + 832);
  *(_OWORD *)(a1 + 816) = v74;
  v75 = *(_DWORD *)(a2 + 836);
  *(_BYTE *)(a1 + 840) = *(_BYTE *)(a2 + 840);
  *(_DWORD *)(a1 + 836) = v75;
  v76 = *(_DWORD *)(a2 + 844);
  *(_BYTE *)(a1 + 848) = *(_BYTE *)(a2 + 848);
  *(_DWORD *)(a1 + 844) = v76;
  v77 = *(_QWORD *)(a2 + 852);
  *(_BYTE *)(a1 + 860) = *(_BYTE *)(a2 + 860);
  *(_QWORD *)(a1 + 852) = v77;
  v78 = *(_QWORD *)(a2 + 864);
  *(_BYTE *)(a1 + 872) = *(_BYTE *)(a2 + 872);
  *(_QWORD *)(a1 + 864) = v78;
  LODWORD(v78) = *(_DWORD *)(a2 + 876);
  *(_BYTE *)(a1 + 880) = *(_BYTE *)(a2 + 880);
  *(_DWORD *)(a1 + 876) = v78;
  LODWORD(v78) = *(_DWORD *)(a2 + 884);
  *(_BYTE *)(a1 + 888) = *(_BYTE *)(a2 + 888);
  *(_DWORD *)(a1 + 884) = v78;
  LODWORD(v78) = *(_DWORD *)(a2 + 892);
  *(_BYTE *)(a1 + 896) = *(_BYTE *)(a2 + 896);
  *(_DWORD *)(a1 + 892) = v78;
  *(_BYTE *)(a1 + 897) = v4[624];
  v79 = *(_OWORD *)(a2 + 912);
  *(_BYTE *)(a1 + 928) = *(_BYTE *)(a2 + 928);
  *(_OWORD *)(a1 + 912) = v79;
  LODWORD(v78) = *(_DWORD *)(a2 + 932);
  *(_BYTE *)(a1 + 936) = *(_BYTE *)(a2 + 936);
  *(_DWORD *)(a1 + 932) = v78;
  *(_QWORD *)(a1 + 944) = *(_QWORD *)(a2 + 944);
  *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
  *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
  *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
  *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
LABEL_8:
  v80 = *(_QWORD *)(a1 + 1008);
  v81 = *(_QWORD *)(a2 + 1008);
  if (v80 != 1)
  {
    if (v81 != 1)
    {
      *(_QWORD *)(a1 + 1008) = v81;
      swift_bridgeObjectRetain(v81);
      swift_bridgeObjectRelease(v80);
      v97 = *(_QWORD *)(a1 + 1016);
      v98 = *(_QWORD *)(a2 + 1016);
      *(_QWORD *)(a1 + 1016) = v98;
      swift_bridgeObjectRetain(v98);
      swift_bridgeObjectRelease(v97);
      v99 = *(_QWORD *)(a1 + 1024);
      v100 = *(_QWORD *)(a2 + 1024);
      *(_QWORD *)(a1 + 1024) = v100;
      swift_bridgeObjectRetain(v100);
      swift_bridgeObjectRelease(v99);
      v101 = *(_QWORD *)(a1 + 1032);
      v102 = *(_QWORD *)(a2 + 1032);
      *(_QWORD *)(a1 + 1032) = v102;
      swift_bridgeObjectRetain(v102);
      swift_bridgeObjectRelease(v101);
      v103 = *(_OWORD *)(a2 + 1040);
      *(_BYTE *)(a1 + 1056) = *(_BYTE *)(a2 + 1056);
      *(_OWORD *)(a1 + 1040) = v103;
      *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
      *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
      *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
      v104 = *(_OWORD *)(a2 + 1120);
      *(_BYTE *)(a1 + 1136) = *(_BYTE *)(a2 + 1136);
      *(_OWORD *)(a1 + 1120) = v104;
      v105 = *(_DWORD *)(a2 + 1140);
      *(_BYTE *)(a1 + 1144) = *(_BYTE *)(a2 + 1144);
      *(_DWORD *)(a1 + 1140) = v105;
      v106 = *(_DWORD *)(a2 + 1148);
      *(_BYTE *)(a1 + 1152) = *(_BYTE *)(a2 + 1152);
      *(_DWORD *)(a1 + 1148) = v106;
      v107 = *(_QWORD *)(a2 + 1156);
      *(_BYTE *)(a1 + 1164) = *(_BYTE *)(a2 + 1164);
      *(_QWORD *)(a1 + 1156) = v107;
      v108 = *(_QWORD *)(a2 + 1168);
      *(_BYTE *)(a1 + 1176) = *(_BYTE *)(a2 + 1176);
      *(_QWORD *)(a1 + 1168) = v108;
      LODWORD(v108) = *(_DWORD *)(a2 + 1180);
      *(_BYTE *)(a1 + 1184) = *(_BYTE *)(a2 + 1184);
      *(_DWORD *)(a1 + 1180) = v108;
      LODWORD(v108) = *(_DWORD *)(a2 + 1188);
      *(_BYTE *)(a1 + 1192) = *(_BYTE *)(a2 + 1192);
      *(_DWORD *)(a1 + 1188) = v108;
      LODWORD(v108) = *(_DWORD *)(a2 + 1196);
      *(_BYTE *)(a1 + 1200) = *(_BYTE *)(a2 + 1200);
      *(_DWORD *)(a1 + 1196) = v108;
      *(_BYTE *)(a1 + 1201) = v4[928];
      v109 = *(_OWORD *)(a2 + 1216);
      *(_BYTE *)(a1 + 1232) = *(_BYTE *)(a2 + 1232);
      *(_OWORD *)(a1 + 1216) = v109;
      LODWORD(v108) = *(_DWORD *)(a2 + 1236);
      *(_BYTE *)(a1 + 1240) = *(_BYTE *)(a2 + 1240);
      *(_DWORD *)(a1 + 1236) = v108;
      *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
      *(_QWORD *)(a1 + 1256) = *(_QWORD *)(a2 + 1256);
      *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
      *(_QWORD *)(a1 + 1272) = *(_QWORD *)(a2 + 1272);
      *(_QWORD *)(a1 + 1280) = *(_QWORD *)(a2 + 1280);
      *(_QWORD *)(a1 + 1288) = *(_QWORD *)(a2 + 1288);
      *(_QWORD *)(a1 + 1296) = *(_QWORD *)(a2 + 1296);
      *(_QWORD *)(a1 + 1304) = *(_QWORD *)(a2 + 1304);
      goto LABEL_15;
    }
    sub_10015D374(a1 + 1008);
    goto LABEL_13;
  }
  if (v81 == 1)
  {
LABEL_13:
    memcpy((void *)(a1 + 1008), (const void *)(a2 + 1008), 0x130uLL);
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 1008) = v81;
  v82 = *(_QWORD *)(a2 + 1016);
  *(_QWORD *)(a1 + 1016) = v82;
  v83 = *(_QWORD *)(a2 + 1024);
  *(_QWORD *)(a1 + 1024) = v83;
  v84 = *(_QWORD *)(a2 + 1032);
  *(_QWORD *)(a1 + 1032) = v84;
  v85 = *(_OWORD *)(a2 + 1040);
  *(_BYTE *)(a1 + 1056) = *(_BYTE *)(a2 + 1056);
  *(_OWORD *)(a1 + 1040) = v85;
  v86 = *(_OWORD *)(a2 + 1072);
  v87 = *(_OWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(_OWORD *)(a1 + 1088) = v87;
  *(_OWORD *)(a1 + 1072) = v86;
  v88 = *(_OWORD *)(a2 + 1120);
  *(_BYTE *)(a1 + 1136) = *(_BYTE *)(a2 + 1136);
  *(_OWORD *)(a1 + 1120) = v88;
  v89 = *(_DWORD *)(a2 + 1140);
  *(_BYTE *)(a1 + 1144) = *(_BYTE *)(a2 + 1144);
  *(_DWORD *)(a1 + 1140) = v89;
  v90 = *(_DWORD *)(a2 + 1148);
  *(_BYTE *)(a1 + 1152) = *(_BYTE *)(a2 + 1152);
  *(_DWORD *)(a1 + 1148) = v90;
  v91 = *(_QWORD *)(a2 + 1156);
  *(_BYTE *)(a1 + 1164) = *(_BYTE *)(a2 + 1164);
  *(_QWORD *)(a1 + 1156) = v91;
  v92 = *(_QWORD *)(a2 + 1168);
  *(_BYTE *)(a1 + 1176) = *(_BYTE *)(a2 + 1176);
  *(_QWORD *)(a1 + 1168) = v92;
  LODWORD(v92) = *(_DWORD *)(a2 + 1180);
  *(_BYTE *)(a1 + 1184) = *(_BYTE *)(a2 + 1184);
  *(_DWORD *)(a1 + 1180) = v92;
  LODWORD(v92) = *(_DWORD *)(a2 + 1188);
  *(_BYTE *)(a1 + 1192) = *(_BYTE *)(a2 + 1192);
  *(_DWORD *)(a1 + 1188) = v92;
  LODWORD(v92) = *(_DWORD *)(a2 + 1196);
  *(_BYTE *)(a1 + 1200) = *(_BYTE *)(a2 + 1200);
  *(_DWORD *)(a1 + 1196) = v92;
  *(_BYTE *)(a1 + 1201) = *(_BYTE *)(a2 + 1201);
  v93 = *(_OWORD *)(a2 + 1216);
  *(_BYTE *)(a1 + 1232) = *(_BYTE *)(a2 + 1232);
  *(_OWORD *)(a1 + 1216) = v93;
  LODWORD(v92) = *(_DWORD *)(a2 + 1236);
  *(_BYTE *)(a1 + 1240) = *(_BYTE *)(a2 + 1240);
  *(_DWORD *)(a1 + 1236) = v92;
  v94 = *(_OWORD *)(a2 + 1248);
  v95 = *(_OWORD *)(a2 + 1264);
  v96 = *(_OWORD *)(a2 + 1280);
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1280) = v96;
  *(_OWORD *)(a1 + 1264) = v95;
  *(_OWORD *)(a1 + 1248) = v94;
  swift_bridgeObjectRetain(v81);
  swift_bridgeObjectRetain(v82);
  swift_bridgeObjectRetain(v83);
  swift_bridgeObjectRetain(v84);
LABEL_15:
  *(_BYTE *)(a1 + 1312) = v4[1039];
  *(_BYTE *)(a1 + 1313) = v4[1040];
  *(_DWORD *)(a1 + 1316) = *(_DWORD *)(a2 + 1316);
  *(_BYTE *)(a1 + 1320) = v4[1047];
  *(_BYTE *)(a1 + 1321) = v4[1048];
  *(_BYTE *)(a1 + 1322) = v4[1049];
  *(_BYTE *)(a1 + 1323) = v4[1050];
  v110 = *(_QWORD *)(a2 + 1328);
  *(_BYTE *)(a1 + 1336) = *(_BYTE *)(a2 + 1336);
  *(_QWORD *)(a1 + 1328) = v110;
  v111 = *(_OWORD *)(a2 + 1376);
  v112 = *(_OWORD *)(a2 + 1392);
  v113 = *(_OWORD *)(a2 + 1405);
  *(_OWORD *)(a1 + 1360) = *(_OWORD *)(a2 + 1360);
  *(_OWORD *)(a1 + 1405) = v113;
  *(_OWORD *)(a1 + 1392) = v112;
  *(_OWORD *)(a1 + 1376) = v111;
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  v114 = *(_QWORD *)(a1 + 1424);
  v115 = *(_QWORD *)(a2 + 1424);
  *(_QWORD *)(a1 + 1424) = v115;
  swift_bridgeObjectRetain(v115);
  swift_bridgeObjectRelease(v114);
  *(_BYTE *)(a1 + 1432) = v4[1159];
  return a1;
}

uint64_t sub_10015D374(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for WorldRectangleData - 1) + 8))();
  return a1;
}

void *initializeWithTake for RectangleSimilarity(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x599uLL);
}

uint64_t assignWithTake for RectangleSimilarity(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  int v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  int v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  int v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;

  v4 = (_BYTE *)(a2 + 273);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease(v12);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v13 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v13;
  v14 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v14;
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
  *(_DWORD *)(a1 + 220) = *(_DWORD *)(a2 + 220);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 228) = *(_QWORD *)(a2 + 228);
  *(_BYTE *)(a1 + 236) = *(_BYTE *)(a2 + 236);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
  v15 = *(_DWORD *)(a2 + 260);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_DWORD *)(a1 + 260) = v15;
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(_BYTE *)(a1 + 273) = *(_BYTE *)(a2 + 273);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_DWORD *)(a1 + 308) = *(_DWORD *)(a2 + 308);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  v16 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v16;
  v17 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v17;
  v18 = *(_QWORD *)(a1 + 384);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  swift_bridgeObjectRelease(v18);
  v19 = *(_QWORD *)(a1 + 392);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  swift_bridgeObjectRelease(v19);
  v20 = *(_QWORD *)(a1 + 400);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  swift_bridgeObjectRelease(v20);
  v21 = *(_QWORD *)(a1 + 408);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  swift_bridgeObjectRelease(v21);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_BYTE *)(a1 + 432) = *(_BYTE *)(a2 + 432);
  v22 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v22;
  v23 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v23;
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  *(_BYTE *)(a1 + 520) = *(_BYTE *)(a2 + 520);
  *(_DWORD *)(a1 + 516) = *(_DWORD *)(a2 + 516);
  *(_DWORD *)(a1 + 524) = *(_DWORD *)(a2 + 524);
  *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
  *(_QWORD *)(a1 + 532) = *(_QWORD *)(a2 + 532);
  *(_BYTE *)(a1 + 540) = *(_BYTE *)(a2 + 540);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  *(_BYTE *)(a1 + 560) = *(_BYTE *)(a2 + 560);
  *(_DWORD *)(a1 + 556) = *(_DWORD *)(a2 + 556);
  v24 = *(_DWORD *)(a2 + 564);
  *(_BYTE *)(a1 + 568) = *(_BYTE *)(a2 + 568);
  *(_DWORD *)(a1 + 564) = v24;
  *(_BYTE *)(a1 + 576) = *(_BYTE *)(a2 + 576);
  *(_DWORD *)(a1 + 572) = *(_DWORD *)(a2 + 572);
  *(_BYTE *)(a1 + 577) = *(_BYTE *)(a2 + 577);
  *(_BYTE *)(a1 + 608) = *(_BYTE *)(a2 + 608);
  *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
  *(_DWORD *)(a1 + 612) = *(_DWORD *)(a2 + 612);
  *(_BYTE *)(a1 + 616) = *(_BYTE *)(a2 + 616);
  v25 = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = v25;
  v26 = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 672) = v26;
  v27 = *(_QWORD *)(a1 + 688);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  swift_bridgeObjectRelease(v27);
  v28 = *(_QWORD *)(a1 + 696);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  swift_bridgeObjectRelease(v28);
  v29 = *(_QWORD *)(a1 + 704);
  if (v29 == 1)
    goto LABEL_4;
  v30 = *(_QWORD *)(a2 + 704);
  if (v30 == 1)
  {
    sub_10015D374(a1 + 704);
LABEL_4:
    memcpy((void *)(a1 + 704), (const void *)(a2 + 704), 0x130uLL);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 704) = v30;
  swift_bridgeObjectRelease(v29);
  v31 = *(_QWORD *)(a1 + 712);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  swift_bridgeObjectRelease(v31);
  v32 = *(_QWORD *)(a1 + 720);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  swift_bridgeObjectRelease(v32);
  v33 = *(_QWORD *)(a1 + 728);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  swift_bridgeObjectRelease(v33);
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(_BYTE *)(a1 + 752) = *(_BYTE *)(a2 + 752);
  v34 = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 784) = v34;
  v35 = *(_OWORD *)(a2 + 816);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 816) = v35;
  *(_BYTE *)(a1 + 832) = *(_BYTE *)(a2 + 832);
  *(_BYTE *)(a1 + 840) = *(_BYTE *)(a2 + 840);
  *(_DWORD *)(a1 + 836) = *(_DWORD *)(a2 + 836);
  *(_DWORD *)(a1 + 844) = *(_DWORD *)(a2 + 844);
  *(_BYTE *)(a1 + 848) = *(_BYTE *)(a2 + 848);
  *(_QWORD *)(a1 + 852) = *(_QWORD *)(a2 + 852);
  *(_BYTE *)(a1 + 860) = *(_BYTE *)(a2 + 860);
  *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
  *(_BYTE *)(a1 + 872) = *(_BYTE *)(a2 + 872);
  *(_BYTE *)(a1 + 880) = *(_BYTE *)(a2 + 880);
  *(_DWORD *)(a1 + 876) = *(_DWORD *)(a2 + 876);
  v36 = *(_DWORD *)(a2 + 884);
  *(_BYTE *)(a1 + 888) = *(_BYTE *)(a2 + 888);
  *(_DWORD *)(a1 + 884) = v36;
  *(_BYTE *)(a1 + 896) = *(_BYTE *)(a2 + 896);
  *(_DWORD *)(a1 + 892) = *(_DWORD *)(a2 + 892);
  *(_BYTE *)(a1 + 897) = v4[624];
  *(_BYTE *)(a1 + 928) = *(_BYTE *)(a2 + 928);
  *(_OWORD *)(a1 + 912) = *(_OWORD *)(a2 + 912);
  *(_DWORD *)(a1 + 932) = *(_DWORD *)(a2 + 932);
  *(_BYTE *)(a1 + 936) = *(_BYTE *)(a2 + 936);
  v37 = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
  *(_OWORD *)(a1 + 960) = v37;
  v38 = *(_OWORD *)(a2 + 992);
  *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
  *(_OWORD *)(a1 + 992) = v38;
LABEL_6:
  v39 = *(_QWORD *)(a1 + 1008);
  if (v39 != 1)
  {
    v40 = *(_QWORD *)(a2 + 1008);
    if (v40 != 1)
    {
      *(_QWORD *)(a1 + 1008) = v40;
      swift_bridgeObjectRelease(v39);
      v41 = *(_QWORD *)(a1 + 1016);
      *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
      swift_bridgeObjectRelease(v41);
      v42 = *(_QWORD *)(a1 + 1024);
      *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
      swift_bridgeObjectRelease(v42);
      v43 = *(_QWORD *)(a1 + 1032);
      *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
      swift_bridgeObjectRelease(v43);
      *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
      *(_BYTE *)(a1 + 1056) = *(_BYTE *)(a2 + 1056);
      *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
      *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
      *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
      *(_OWORD *)(a1 + 1120) = *(_OWORD *)(a2 + 1120);
      *(_BYTE *)(a1 + 1136) = *(_BYTE *)(a2 + 1136);
      *(_BYTE *)(a1 + 1144) = *(_BYTE *)(a2 + 1144);
      *(_DWORD *)(a1 + 1140) = *(_DWORD *)(a2 + 1140);
      *(_DWORD *)(a1 + 1148) = *(_DWORD *)(a2 + 1148);
      *(_BYTE *)(a1 + 1152) = *(_BYTE *)(a2 + 1152);
      *(_QWORD *)(a1 + 1156) = *(_QWORD *)(a2 + 1156);
      *(_BYTE *)(a1 + 1164) = *(_BYTE *)(a2 + 1164);
      *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
      *(_BYTE *)(a1 + 1176) = *(_BYTE *)(a2 + 1176);
      *(_BYTE *)(a1 + 1184) = *(_BYTE *)(a2 + 1184);
      *(_DWORD *)(a1 + 1180) = *(_DWORD *)(a2 + 1180);
      v44 = *(_DWORD *)(a2 + 1188);
      *(_BYTE *)(a1 + 1192) = *(_BYTE *)(a2 + 1192);
      *(_DWORD *)(a1 + 1188) = v44;
      *(_BYTE *)(a1 + 1200) = *(_BYTE *)(a2 + 1200);
      *(_DWORD *)(a1 + 1196) = *(_DWORD *)(a2 + 1196);
      *(_BYTE *)(a1 + 1201) = v4[928];
      *(_BYTE *)(a1 + 1232) = *(_BYTE *)(a2 + 1232);
      *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
      *(_DWORD *)(a1 + 1236) = *(_DWORD *)(a2 + 1236);
      *(_BYTE *)(a1 + 1240) = *(_BYTE *)(a2 + 1240);
      *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
      *(_OWORD *)(a1 + 1264) = *(_OWORD *)(a2 + 1264);
      *(_OWORD *)(a1 + 1280) = *(_OWORD *)(a2 + 1280);
      *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
      goto LABEL_11;
    }
    sub_10015D374(a1 + 1008);
  }
  memcpy((void *)(a1 + 1008), (const void *)(a2 + 1008), 0x130uLL);
LABEL_11:
  *(_BYTE *)(a1 + 1312) = v4[1039];
  *(_BYTE *)(a1 + 1313) = v4[1040];
  *(_DWORD *)(a1 + 1316) = *(_DWORD *)(a2 + 1316);
  *(_BYTE *)(a1 + 1320) = v4[1047];
  *(_BYTE *)(a1 + 1321) = v4[1048];
  *(_BYTE *)(a1 + 1322) = v4[1049];
  *(_BYTE *)(a1 + 1323) = v4[1050];
  *(_QWORD *)(a1 + 1328) = *(_QWORD *)(a2 + 1328);
  *(_BYTE *)(a1 + 1336) = *(_BYTE *)(a2 + 1336);
  *(_OWORD *)(a1 + 1360) = *(_OWORD *)(a2 + 1360);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(_OWORD *)(a1 + 1392) = *(_OWORD *)(a2 + 1392);
  *(_OWORD *)(a1 + 1405) = *(_OWORD *)(a2 + 1405);
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  v45 = *(_QWORD *)(a1 + 1424);
  *(_QWORD *)(a1 + 1424) = *(_QWORD *)(a2 + 1424);
  swift_bridgeObjectRelease(v45);
  *(_BYTE *)(a1 + 1432) = v4[1159];
  return a1;
}

uint64_t getEnumTagSinglePayload for RectangleSimilarity(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 1433))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RectangleSimilarity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 1432) = 0;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 1433) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 1433) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RectangleSimilarity()
{
  return &type metadata for RectangleSimilarity;
}

void destroy for RectangleRenderComponents(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));

}

_QWORD *initializeWithCopy for RectangleRenderComponents(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = a2[3];
  a1[2] = v4;
  a1[3] = v5;
  v6 = a2[4];
  v7 = (void *)a2[5];
  a1[4] = v6;
  a1[5] = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  v8 = v7;
  return a1;
}

_QWORD *assignWithCopy for RectangleRenderComponents(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a2[4];
  v11 = a1[4];
  a1[4] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = (void *)a2[5];
  v13 = (void *)a1[5];
  a1[5] = v12;
  v14 = v12;

  return a1;
}

_QWORD *assignWithTake for RectangleRenderComponents(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(a1[3]);
  v5 = a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v5);
  v6 = (void *)a1[5];
  a1[5] = *(_QWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for RectangleRenderComponents(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RectangleRenderComponents(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RectangleRenderComponents()
{
  return &type metadata for RectangleRenderComponents;
}

void sub_10015DE44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  int64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_unfair_lock_s *v37;
  uint64_t v38;
  os_unfair_lock_s *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  int64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  int64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  os_unfair_lock_s *v57;
  uint64_t v58;
  os_unfair_lock_s *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v2 = v1;
  objc_msgSend(*(id *)(v1 + 40), "setState:", a1);
  v4 = *(_QWORD *)(v1 + 32);
  v63 = v4;
  v5 = v4 + 64;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v4 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain_n(v4, 2);
  v10 = 0;
  v11 = a1 - 1;
  while (1)
  {
    if (v8)
    {
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v12 | (v10 << 6);
      if (v11 > 8)
        goto LABEL_25;
      goto LABEL_6;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    if (v15 >= v9)
      goto LABEL_28;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v9)
        goto LABEL_28;
      v16 = *(_QWORD *)(v5 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v9)
          goto LABEL_28;
        v16 = *(_QWORD *)(v5 + 8 * v10);
        if (!v16)
        {
          v10 = v15 + 3;
          if (v15 + 3 >= v9)
            goto LABEL_28;
          v16 = *(_QWORD *)(v5 + 8 * v10);
          if (!v16)
          {
            v10 = v15 + 4;
            if (v15 + 4 >= v9)
              goto LABEL_28;
            v16 = *(_QWORD *)(v5 + 8 * v10);
            if (!v16)
              break;
          }
        }
      }
    }
LABEL_24:
    v8 = (v16 - 1) & v16;
    v13 = __clz(__rbit64(v16)) + (v10 << 6);
    if (v11 > 8)
    {
LABEL_25:
      v14 = 1;
      goto LABEL_26;
    }
LABEL_6:
    v14 = qword_1003B96E0[v11];
LABEL_26:
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v13);
    v19 = *(_QWORD *)(v18 + OBJC_IVAR____TtC7Measure11PointRender_state);
    *(_QWORD *)(v18 + OBJC_IVAR____TtC7Measure11PointRender_state) = v14;
    if (v14 != v19)
      sub_10012D04C((id)v14);
  }
  v17 = v15 + 5;
  if (v17 < v9)
  {
    v16 = *(_QWORD *)(v5 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        v10 = v17 + 1;
        if (__OFADD__(v17, 1))
          break;
        if (v10 >= v9)
          goto LABEL_28;
        v16 = *(_QWORD *)(v5 + 8 * v10);
        ++v17;
        if (v16)
          goto LABEL_24;
      }
LABEL_98:
      __break(1u);
      goto LABEL_99;
    }
    v10 = v17;
    goto LABEL_24;
  }
LABEL_28:
  swift_release();
  sub_10007BB44(&v63);
  v60 = v2;
  v20 = *(_QWORD *)(v2 + 8);
  v62 = v20;
  v21 = v20 + 64;
  v22 = 1 << *(_BYTE *)(v20 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & *(_QWORD *)(v20 + 64);
  v25 = (unint64_t)(v22 + 63) >> 6;
  swift_bridgeObjectRetain_n(v20, 2);
  v26 = 0;
  if (!v24)
    goto LABEL_35;
LABEL_33:
  v27 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  v28 = v27 | (v26 << 6);
  if (v11 <= 8)
  {
LABEL_34:
    v29 = qword_1003B96E0[v11];
    goto LABEL_54;
  }
  while (1)
  {
    v29 = 1;
LABEL_54:
    v33 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v28);
    v34 = OBJC_IVAR____TtC7Measure10LineRender_state;
    v35 = *(_QWORD *)(v33 + OBJC_IVAR____TtC7Measure10LineRender_state);
    *(_QWORD *)(v33 + OBJC_IVAR____TtC7Measure10LineRender_state) = v29;
    if (v35 != v29)
    {
      v36 = OBJC_IVAR____TtC7Measure10LineRender__needsRendering;
      if (*(_BYTE *)(v33 + OBJC_IVAR____TtC7Measure10LineRender__needsRendering) != 1)
      {
        v37 = (os_unfair_lock_s *)sub_1000D3494();
        os_unfair_lock_lock(v37);
        *(_BYTE *)(v33 + v36) = 1;
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + OBJC_IVAR____TtC7Measure10LineRender____lazy_storage___lock));
        v29 = *(_QWORD *)(v33 + v34);
      }
    }
    *(_QWORD *)(v33 + v34) = a1;
    if (v29 == a1
      || (v38 = OBJC_IVAR____TtC7Measure10LineRender__needsRendering,
          *(_BYTE *)(v33 + OBJC_IVAR____TtC7Measure10LineRender__needsRendering) == 1))
    {
      sub_1000D4900();
      if (v24)
        goto LABEL_33;
    }
    else
    {
      v39 = (os_unfair_lock_s *)sub_1000D3494();
      os_unfair_lock_lock(v39);
      *(_BYTE *)(v33 + v38) = 1;
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + OBJC_IVAR____TtC7Measure10LineRender____lazy_storage___lock));
      sub_1000D4900();
      if (v24)
        goto LABEL_33;
    }
LABEL_35:
    v30 = v26 + 1;
    if (__OFADD__(v26, 1))
      goto LABEL_96;
    if (v30 >= v25)
    {
LABEL_61:
      swift_release();
      sub_10007BB44(&v62);
      v40 = *(_QWORD *)(v60 + 16);
      v61 = v40;
      v41 = v40 + 64;
      v42 = 1 << *(_BYTE *)(v40 + 32);
      v43 = -1;
      if (v42 < 64)
        v43 = ~(-1 << v42);
      v44 = v43 & *(_QWORD *)(v40 + 64);
      v45 = (unint64_t)(v42 + 63) >> 6;
      swift_bridgeObjectRetain_n(v40, 2);
      v46 = 0;
      if (!v44)
        goto LABEL_68;
LABEL_66:
      v47 = __clz(__rbit64(v44));
      v44 &= v44 - 1;
      v48 = v47 | (v46 << 6);
      if (v11 <= 8)
      {
LABEL_67:
        v49 = qword_1003B96E0[v11];
        goto LABEL_87;
      }
      while (1)
      {
        v49 = 1;
LABEL_87:
        v53 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v48);
        v54 = OBJC_IVAR____TtC7Measure10LineRender_state;
        v55 = *(_QWORD *)(v53 + OBJC_IVAR____TtC7Measure10LineRender_state);
        *(_QWORD *)(v53 + OBJC_IVAR____TtC7Measure10LineRender_state) = v49;
        if (v55 != v49)
        {
          v56 = OBJC_IVAR____TtC7Measure10LineRender__needsRendering;
          if (*(_BYTE *)(v53 + OBJC_IVAR____TtC7Measure10LineRender__needsRendering) != 1)
          {
            v57 = (os_unfair_lock_s *)sub_1000D3494();
            os_unfair_lock_lock(v57);
            *(_BYTE *)(v53 + v56) = 1;
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + OBJC_IVAR____TtC7Measure10LineRender____lazy_storage___lock));
            v49 = *(_QWORD *)(v53 + v54);
          }
        }
        *(_QWORD *)(v53 + v54) = a1;
        if (v49 == a1
          || (v58 = OBJC_IVAR____TtC7Measure10LineRender__needsRendering,
              *(_BYTE *)(v53 + OBJC_IVAR____TtC7Measure10LineRender__needsRendering) == 1))
        {
          sub_1000D4900();
          if (v44)
            goto LABEL_66;
        }
        else
        {
          v59 = (os_unfair_lock_s *)sub_1000D3494();
          os_unfair_lock_lock(v59);
          *(_BYTE *)(v53 + v58) = 1;
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + OBJC_IVAR____TtC7Measure10LineRender____lazy_storage___lock));
          sub_1000D4900();
          if (v44)
            goto LABEL_66;
        }
LABEL_68:
        v50 = v46 + 1;
        if (__OFADD__(v46, 1))
          goto LABEL_97;
        if (v50 >= v45)
        {
LABEL_94:
          swift_release();
          sub_10007BB44(&v61);
          return;
        }
        v51 = *(_QWORD *)(v41 + 8 * v50);
        ++v46;
        if (!v51)
        {
          v46 = v50 + 1;
          if (v50 + 1 >= v45)
            goto LABEL_94;
          v51 = *(_QWORD *)(v41 + 8 * v46);
          if (!v51)
          {
            v46 = v50 + 2;
            if (v50 + 2 >= v45)
              goto LABEL_94;
            v51 = *(_QWORD *)(v41 + 8 * v46);
            if (!v51)
            {
              v46 = v50 + 3;
              if (v50 + 3 >= v45)
                goto LABEL_94;
              v51 = *(_QWORD *)(v41 + 8 * v46);
              if (!v51)
              {
                v46 = v50 + 4;
                if (v50 + 4 >= v45)
                  goto LABEL_94;
                v51 = *(_QWORD *)(v41 + 8 * v46);
                if (!v51)
                {
                  v52 = v50 + 5;
                  if (v52 >= v45)
                    goto LABEL_94;
                  v51 = *(_QWORD *)(v41 + 8 * v52);
                  if (!v51)
                  {
                    while (1)
                    {
                      v46 = v52 + 1;
                      if (__OFADD__(v52, 1))
                        goto LABEL_100;
                      if (v46 >= v45)
                        goto LABEL_94;
                      v51 = *(_QWORD *)(v41 + 8 * v46);
                      ++v52;
                      if (v51)
                        goto LABEL_85;
                    }
                  }
                  v46 = v52;
                }
              }
            }
          }
        }
LABEL_85:
        v44 = (v51 - 1) & v51;
        v48 = __clz(__rbit64(v51)) + (v46 << 6);
        if (v11 <= 8)
          goto LABEL_67;
      }
    }
    v31 = *(_QWORD *)(v21 + 8 * v30);
    ++v26;
    if (!v31)
    {
      v26 = v30 + 1;
      if (v30 + 1 >= v25)
        goto LABEL_61;
      v31 = *(_QWORD *)(v21 + 8 * v26);
      if (!v31)
      {
        v26 = v30 + 2;
        if (v30 + 2 >= v25)
          goto LABEL_61;
        v31 = *(_QWORD *)(v21 + 8 * v26);
        if (!v31)
        {
          v26 = v30 + 3;
          if (v30 + 3 >= v25)
            goto LABEL_61;
          v31 = *(_QWORD *)(v21 + 8 * v26);
          if (!v31)
          {
            v26 = v30 + 4;
            if (v30 + 4 >= v25)
              goto LABEL_61;
            v31 = *(_QWORD *)(v21 + 8 * v26);
            if (!v31)
              break;
          }
        }
      }
    }
LABEL_52:
    v24 = (v31 - 1) & v31;
    v28 = __clz(__rbit64(v31)) + (v26 << 6);
    if (v11 <= 8)
      goto LABEL_34;
  }
  v32 = v30 + 5;
  if (v32 >= v25)
    goto LABEL_61;
  v31 = *(_QWORD *)(v21 + 8 * v32);
  if (v31)
  {
    v26 = v32;
    goto LABEL_52;
  }
  while (1)
  {
    v26 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v26 >= v25)
      goto LABEL_61;
    v31 = *(_QWORD *)(v21 + 8 * v26);
    ++v32;
    if (v31)
      goto LABEL_52;
  }
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
}

uint64_t sub_10015E43C(void *a1)
{
  _QWORD *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v3 = (void *)v1[5];
  objc_msgSend(v3, "worldTransform");
  v16 = v19;
  v17 = v18;
  v14 = v21;
  v15 = v20;
  objc_msgSend(v3, "removeFromParentNode");
  objc_msgSend(a1, "addChildNode:", v3);
  v18 = v17;
  v19 = v16;
  v20 = v15;
  v21 = v14;
  objc_msgSend(v3, "setTransform:", &v18);
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[4];
  *(_QWORD *)&v18 = v1[3];
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  sub_100141EB8(&v18);
  swift_bridgeObjectRetain(v6);
  v7 = v3;
  v8 = a1;
  sub_10015EAE8(v6, v8);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);

  sub_10007BB44(&v18);
  swift_bridgeObjectRelease(v6);

  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  sub_100141EB8(&v18);
  swift_bridgeObjectRetain(v6);
  v9 = v7;
  v10 = v8;
  sub_10015EAE8(v4, v10);
  swift_bridgeObjectRelease(v5);

  sub_10007BB44(&v18);
  swift_bridgeObjectRelease(v4);

  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  sub_100141EB8(&v18);
  swift_bridgeObjectRetain(v6);
  v11 = v9;
  v12 = v10;
  sub_10015EAE8(v5, v12);
  swift_bridgeObjectRelease(v4);

  sub_10007BB44(&v18);
  swift_bridgeObjectRelease(v5);

  return swift_bridgeObjectRelease(v6);
}

id sub_10015E634()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  id result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  unint64_t v37;
  unint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;

  v1 = v0;
  v2 = (char *)v0[5];
  v3 = objc_msgSend(v2, "parentNode");
  if (v3)
  {
    v4 = v3;
    SCNNode.removeAllChildren()();

  }
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC7Measure13RectangleFill_rectangleFill], "removeFromParentNode");
  objc_msgSend(v2, "removeFromParentNode");
  v5 = v1[4];
  v6 = v5 + 64;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = (id)swift_bridgeObjectRetain_n(v1[4], 2);
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_7;
    }
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
      goto LABEL_79;
    }
    if (v15 >= v10)
      goto LABEL_27;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_27;
      v16 = *(_QWORD *)(v6 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_27;
        v16 = *(_QWORD *)(v6 + 8 * v12);
        if (!v16)
        {
          v12 = v15 + 3;
          if (v15 + 3 >= v10)
            goto LABEL_27;
          v16 = *(_QWORD *)(v6 + 8 * v12);
          if (!v16)
          {
            v12 = v15 + 4;
            if (v15 + 4 >= v10)
              goto LABEL_27;
            v16 = *(_QWORD *)(v6 + 8 * v12);
            if (!v16)
              break;
          }
        }
      }
    }
LABEL_26:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_7:
    result = objc_msgSend(*(id *)(*(_QWORD *)(v5 + 56) + 8 * v14), "removeFromParentNode");
  }
  v17 = v15 + 5;
  if (v17 < v10)
  {
    v16 = *(_QWORD *)(v6 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        v12 = v17 + 1;
        if (__OFADD__(v17, 1))
          break;
        if (v12 >= v10)
          goto LABEL_27;
        v16 = *(_QWORD *)(v6 + 8 * v12);
        ++v17;
        if (v16)
          goto LABEL_26;
      }
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    v12 = v17;
    goto LABEL_26;
  }
LABEL_27:
  swift_release(v5);
  swift_bridgeObjectRelease_n(v5, 2);
  v1[4] = &_swiftEmptyDictionarySingleton;
  v18 = v1[1];
  v19 = v18 + 64;
  v20 = 1 << *(_BYTE *)(v18 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & *(_QWORD *)(v18 + 64);
  v23 = (unint64_t)(v20 + 63) >> 6;
  result = (id)swift_bridgeObjectRetain_n(v1[1], 2);
  v24 = 0;
  while (2)
  {
    if (v22)
    {
      v25 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      v26 = v25 | (v24 << 6);
LABEL_31:
      result = objc_msgSend(*(id *)(*(_QWORD *)(v18 + 56) + 8 * v26), "removeFromParentNode");
      continue;
    }
    break;
  }
  v27 = v24 + 1;
  if (__OFADD__(v24, 1))
    goto LABEL_77;
  if (v27 >= v23)
  {
LABEL_51:
    swift_release(v18);
    swift_bridgeObjectRelease_n(v18, 2);
    v1[1] = &_swiftEmptyDictionarySingleton;
    v30 = v1[2];
    v31 = v30 + 64;
    v32 = 1 << *(_BYTE *)(v30 + 32);
    v33 = -1;
    if (v32 < 64)
      v33 = ~(-1 << v32);
    v34 = v33 & *(_QWORD *)(v30 + 64);
    v35 = (unint64_t)(v32 + 63) >> 6;
    result = (id)swift_bridgeObjectRetain_n(v1[2], 2);
    v36 = 0;
    while (1)
    {
      if (v34)
      {
        v37 = __clz(__rbit64(v34));
        v34 &= v34 - 1;
        v38 = v37 | (v36 << 6);
      }
      else
      {
        v39 = v36 + 1;
        if (__OFADD__(v36, 1))
          goto LABEL_78;
        if (v39 >= v35)
        {
LABEL_75:
          swift_release(v30);
          result = (id)swift_bridgeObjectRelease_n(v30, 2);
          v1[2] = &_swiftEmptyDictionarySingleton;
          return result;
        }
        v40 = *(_QWORD *)(v31 + 8 * v39);
        ++v36;
        if (!v40)
        {
          v36 = v39 + 1;
          if (v39 + 1 >= v35)
            goto LABEL_75;
          v40 = *(_QWORD *)(v31 + 8 * v36);
          if (!v40)
          {
            v36 = v39 + 2;
            if (v39 + 2 >= v35)
              goto LABEL_75;
            v40 = *(_QWORD *)(v31 + 8 * v36);
            if (!v40)
            {
              v36 = v39 + 3;
              if (v39 + 3 >= v35)
                goto LABEL_75;
              v40 = *(_QWORD *)(v31 + 8 * v36);
              if (!v40)
              {
                v36 = v39 + 4;
                if (v39 + 4 >= v35)
                  goto LABEL_75;
                v40 = *(_QWORD *)(v31 + 8 * v36);
                if (!v40)
                {
                  v41 = v39 + 5;
                  if (v41 >= v35)
                    goto LABEL_75;
                  v40 = *(_QWORD *)(v31 + 8 * v41);
                  if (!v40)
                  {
                    while (1)
                    {
                      v36 = v41 + 1;
                      if (__OFADD__(v41, 1))
                        goto LABEL_81;
                      if (v36 >= v35)
                        goto LABEL_75;
                      v40 = *(_QWORD *)(v31 + 8 * v36);
                      ++v41;
                      if (v40)
                        goto LABEL_74;
                    }
                  }
                  v36 = v41;
                }
              }
            }
          }
        }
LABEL_74:
        v34 = (v40 - 1) & v40;
        v38 = __clz(__rbit64(v40)) + (v36 << 6);
      }
      result = objc_msgSend(*(id *)(*(_QWORD *)(v30 + 56) + 8 * v38), "removeFromParentNode");
    }
  }
  v28 = *(_QWORD *)(v19 + 8 * v27);
  ++v24;
  if (v28)
    goto LABEL_50;
  v24 = v27 + 1;
  if (v27 + 1 >= v23)
    goto LABEL_51;
  v28 = *(_QWORD *)(v19 + 8 * v24);
  if (v28)
    goto LABEL_50;
  v24 = v27 + 2;
  if (v27 + 2 >= v23)
    goto LABEL_51;
  v28 = *(_QWORD *)(v19 + 8 * v24);
  if (v28)
    goto LABEL_50;
  v24 = v27 + 3;
  if (v27 + 3 >= v23)
    goto LABEL_51;
  v28 = *(_QWORD *)(v19 + 8 * v24);
  if (v28)
    goto LABEL_50;
  v24 = v27 + 4;
  if (v27 + 4 >= v23)
    goto LABEL_51;
  v28 = *(_QWORD *)(v19 + 8 * v24);
  if (v28)
  {
LABEL_50:
    v22 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v24 << 6);
    goto LABEL_31;
  }
  v29 = v27 + 5;
  if (v29 >= v23)
    goto LABEL_51;
  v28 = *(_QWORD *)(v19 + 8 * v29);
  if (v28)
  {
    v24 = v29;
    goto LABEL_50;
  }
  while (1)
  {
    v24 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v24 >= v23)
      goto LABEL_51;
    v28 = *(_QWORD *)(v19 + 8 * v24);
    ++v29;
    if (v28)
      goto LABEL_50;
  }
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
  return result;
}

uint64_t sub_10015EAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10015ECE8();
  return static NSObject.== infix(_:_:)(a1, a3) & 1;
}

uint64_t sub_10015EAE8(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v8)
      return swift_release(a1);
    v17 = *(_QWORD *)(v4 + 8 * v16);
    ++v10;
    if (!v17)
    {
      v10 = v16 + 1;
      if (v16 + 1 >= v8)
        return swift_release(a1);
      v17 = *(_QWORD *)(v4 + 8 * v10);
      if (!v17)
      {
        v10 = v16 + 2;
        if (v16 + 2 >= v8)
          return swift_release(a1);
        v17 = *(_QWORD *)(v4 + 8 * v10);
        if (!v17)
        {
          v10 = v16 + 3;
          if (v16 + 3 >= v8)
            return swift_release(a1);
          v17 = *(_QWORD *)(v4 + 8 * v10);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12 + 8);
    v14 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain(v13);
    v15 = v14;
    objc_msgSend(v15, "worldTransform");
    v21 = v24;
    v22 = v23;
    v19 = v26;
    v20 = v25;
    objc_msgSend(v15, "removeFromParentNode");
    objc_msgSend(a2, "addChildNode:", v15);
    v23 = v22;
    v24 = v21;
    v25 = v20;
    v26 = v19;
    objc_msgSend(v15, "setTransform:", &v23);

    result = swift_bridgeObjectRelease(v13);
  }
  v18 = v16 + 4;
  if (v18 >= v8)
    return swift_release(a1);
  v17 = *(_QWORD *)(v4 + 8 * v18);
  if (v17)
  {
    v10 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v10 >= v8)
      return swift_release(a1);
    v17 = *(_QWORD *)(v4 + 8 * v10);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_10015ECE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10047C128;
  if (!qword_10047C128)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10047C128);
  }
  return result;
}

void sub_10015ED24(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t i;
  _DWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  _DWORD *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  int64_t v46;
  _QWORD *v47;

  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v44 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  for (i = 0; ; i = v46)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v46 = i;
      v10 = v9 | (i << 6);
    }
    else
    {
      v11 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_38;
      if (v11 >= v44)
      {
LABEL_35:
        swift_release();
        return;
      }
      v12 = *(_QWORD *)(v43 + 8 * v11);
      v13 = i + 1;
      if (!v12)
      {
        v13 = i + 2;
        if (i + 2 >= v44)
          goto LABEL_35;
        v12 = *(_QWORD *)(v43 + 8 * v13);
        if (!v12)
        {
          v13 = i + 3;
          if (i + 3 >= v44)
            goto LABEL_35;
          v12 = *(_QWORD *)(v43 + 8 * v13);
          if (!v12)
          {
            v13 = i + 4;
            if (i + 4 >= v44)
              goto LABEL_35;
            v12 = *(_QWORD *)(v43 + 8 * v13);
            if (!v12)
            {
              v14 = i + 5;
              if (i + 5 >= v44)
                goto LABEL_35;
              v12 = *(_QWORD *)(v43 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  v13 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_39;
                  if (v13 >= v44)
                    goto LABEL_35;
                  v12 = *(_QWORD *)(v43 + 8 * v13);
                  ++v14;
                  if (v12)
                    goto LABEL_23;
                }
              }
              v13 = i + 5;
            }
          }
        }
      }
LABEL_23:
      v5 = (v12 - 1) & v12;
      v46 = v13;
      v10 = __clz(__rbit64(v12)) + (v13 << 6);
    }
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(char **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    v19 = *(void **)&v18[OBJC_IVAR____TtC7Measure11PointRender_point];
    swift_bridgeObjectRetain_n(v16, 2);
    v20 = v18;
    objc_msgSend(v19, "position");
    v22 = v21;
    v24 = v23;
    v26 = v25;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a2);
    v28 = *a2;
    v47 = (_QWORD *)*a2;
    *a2 = 0x8000000000000000;
    v30 = sub_1000C80A8(v17, v16);
    v31 = *(_QWORD *)(v28 + 16);
    v32 = (v29 & 1) == 0;
    v33 = v31 + v32;
    if (__OFADD__(v31, v32))
      break;
    v34 = v29;
    if (*(_QWORD *)(v28 + 24) >= v33)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v37 = v47;
        if ((v29 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1000BFCCC();
        v37 = v47;
        if ((v34 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1000BA21C(v33, isUniquelyReferenced_nonNull_native);
      v35 = sub_1000C80A8(v17, v16);
      if ((v34 & 1) != (v36 & 1))
        goto LABEL_40;
      v30 = v35;
      v37 = v47;
      if ((v34 & 1) != 0)
      {
LABEL_4:
        v7 = (_DWORD *)(v37[7] + 12 * v30);
        *v7 = v22;
        v7[1] = v24;
        v7[2] = v26;
        goto LABEL_5;
      }
    }
    v37[(v30 >> 6) + 8] |= 1 << v30;
    v38 = (uint64_t *)(v37[6] + 16 * v30);
    *v38 = v17;
    v38[1] = v16;
    v39 = (_DWORD *)(v37[7] + 12 * v30);
    *v39 = v22;
    v39[1] = v24;
    v39[2] = v26;
    v40 = v37[2];
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (v41)
      goto LABEL_37;
    v37[2] = v42;
    swift_bridgeObjectRetain(v16);
LABEL_5:
    v8 = *a2;
    *a2 = v37;

    swift_bridgeObjectRelease_n(v16, 2);
    swift_bridgeObjectRelease(v8);
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_10015F06C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t i;
  _DWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double *v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t *v44;
  _DWORD *v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  int64_t v52;
  __int128 v53;
  _QWORD *v54;

  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v50 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  for (i = 0; ; i = v52)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v52 = i;
      v10 = v9 | (i << 6);
    }
    else
    {
      v11 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_38;
      if (v11 >= v50)
      {
LABEL_35:
        swift_release();
        return;
      }
      v12 = *(_QWORD *)(v49 + 8 * v11);
      v13 = i + 1;
      if (!v12)
      {
        v13 = i + 2;
        if (i + 2 >= v50)
          goto LABEL_35;
        v12 = *(_QWORD *)(v49 + 8 * v13);
        if (!v12)
        {
          v13 = i + 3;
          if (i + 3 >= v50)
            goto LABEL_35;
          v12 = *(_QWORD *)(v49 + 8 * v13);
          if (!v12)
          {
            v13 = i + 4;
            if (i + 4 >= v50)
              goto LABEL_35;
            v12 = *(_QWORD *)(v49 + 8 * v13);
            if (!v12)
            {
              v14 = i + 5;
              if (i + 5 >= v50)
                goto LABEL_35;
              v12 = *(_QWORD *)(v49 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  v13 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_39;
                  if (v13 >= v50)
                    goto LABEL_35;
                  v12 = *(_QWORD *)(v49 + 8 * v13);
                  ++v14;
                  if (v12)
                    goto LABEL_23;
                }
              }
              v13 = i + 5;
            }
          }
        }
      }
LABEL_23:
      v5 = (v12 - 1) & v12;
      v52 = v13;
      v10 = __clz(__rbit64(v12)) + (v13 << 6);
    }
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(char **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    v19 = (double *)&v18[OBJC_IVAR____TtC7Measure10LineRender_currentPositions];
    v53 = *(_OWORD *)&v18[OBJC_IVAR____TtC7Measure10LineRender_currentPositions];
    swift_bridgeObjectRetain_n(v16, 2);
    v20 = v18;
    SCNVector3.init(_:)(*(double *)&v53);
    v22 = v21;
    v24 = v23;
    v26 = v25;
    SCNVector3.init(_:)(v19[2]);
    v28 = v27;
    v30 = v29;
    v32 = v31;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a2);
    v34 = *a2;
    v54 = (_QWORD *)*a2;
    *a2 = 0x8000000000000000;
    v36 = sub_1000C80A8(v17, v16);
    v37 = *(_QWORD *)(v34 + 16);
    v38 = (v35 & 1) == 0;
    v39 = v37 + v38;
    if (__OFADD__(v37, v38))
      break;
    v40 = v35;
    if (*(_QWORD *)(v34 + 24) >= v39)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v43 = v54;
        if ((v35 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1000BFB0C();
        v43 = v54;
        if ((v40 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1000B9F04(v39, isUniquelyReferenced_nonNull_native);
      v41 = sub_1000C80A8(v17, v16);
      if ((v40 & 1) != (v42 & 1))
        goto LABEL_40;
      v36 = v41;
      v43 = v54;
      if ((v40 & 1) != 0)
      {
LABEL_4:
        v7 = (_DWORD *)(v43[7] + 24 * v36);
        *v7 = v22;
        v7[1] = v24;
        v7[2] = v26;
        v7[3] = v28;
        v7[4] = v30;
        v7[5] = v32;
        goto LABEL_5;
      }
    }
    v43[(v36 >> 6) + 8] |= 1 << v36;
    v44 = (uint64_t *)(v43[6] + 16 * v36);
    *v44 = v17;
    v44[1] = v16;
    v45 = (_DWORD *)(v43[7] + 24 * v36);
    *v45 = v22;
    v45[1] = v24;
    v45[2] = v26;
    v45[3] = v28;
    v45[4] = v30;
    v45[5] = v32;
    v46 = v43[2];
    v47 = __OFADD__(v46, 1);
    v48 = v46 + 1;
    if (v47)
      goto LABEL_37;
    v43[2] = v48;
    swift_bridgeObjectRetain(v16);
LABEL_5:
    v8 = *a2;
    *a2 = v43;

    swift_bridgeObjectRelease_n(v16, 2);
    swift_bridgeObjectRelease(v8);
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_10015F3DC(float32x2_t a1, float32x2_t a2)
{
  _QWORD *v2;
  float32x2_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  unsigned __int32 v10;
  unsigned __int32 v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  Class isa;
  __n128 v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  BOOL v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  int64_t v83;
  uint64_t v84;
  id v85;
  unint64_t v86;
  int64_t v87;
  uint64_t v88;
  double v89;
  double v90;
  uint64_t v91;
  _QWORD aBlock[6];
  char v93[24];
  char v94[136];

  v3 = vmul_f32(vmul_f32(a2, (float32x2_t)vdup_n_s32(0x3ECCCCCDu)), (float32x2_t)0x3F0000003F000000);
  v89 = COERCE_DOUBLE(vadd_f32(a1, v3));
  v90 = COERCE_DOUBLE(vsub_f32(a1, v3));
  v4 = sub_10000EDC8((uint64_t *)&unk_100486350);
  inited = swift_initStackObject(v4, v94);
  *(_OWORD *)(inited + 16) = xmmword_1003B0F60;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(SCNHitTestFirstFoundOnlyKey);
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 72) = &type metadata for Bool;
  *(_BYTE *)(inited + 48) = 0;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(SCNHitTestIgnoreHiddenNodesKey);
  *(_QWORD *)(inited + 88) = v7;
  *(_QWORD *)(inited + 120) = &type metadata for Bool;
  *(_BYTE *)(inited + 96) = 0;
  v8 = sub_1000C7998(inited);
  v9 = (void *)v2[7];
  SCNVector3.init(_:)(v90);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  SCNVector3.init(_:)(v89);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v23 = swift_bridgeObjectRelease(v8);
  v23.n128_u32[0] = v11;
  LODWORD(v24) = v13;
  LODWORD(v25) = v15;
  LODWORD(v26) = v17;
  LODWORD(v27) = v19;
  LODWORD(v28) = v21;
  v29 = objc_msgSend(v9, "hitTestWithSegmentFromPoint:toPoint:options:", isa, v23.n128_f64[0], v24, v25, v26, v27, v28);

  v30 = sub_100018148(0, &qword_100485C10, SCNHitTestResult_ptr);
  v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);

  if ((unint64_t)v31 >> 62)
    goto LABEL_53;
  v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v32)
    goto LABEL_57;
LABEL_3:
  v78 = v32;
  v80 = v2 + 3;
  swift_beginAccess(v2 + 3, v93, 0, 0);
  v33 = v31 & 0xC000000000000001;
  v34 = 0;
  v35 = v31 & 0xFFFFFFFFFFFFFF8;
  v81 = v31;
  v36 = v31 + 32;
  v76 = v31 & 0xFFFFFFFFFFFFFF8;
  v77 = v31 & 0xC000000000000001;
  v75 = v31 + 32;
LABEL_4:
  if (v33)
  {
    v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v81);
  }
  else
  {
    if (v34 >= *(_QWORD *)(v35 + 16))
      goto LABEL_61;
    v37 = *(id *)(v36 + 8 * v34);
  }
  v85 = v37;
  v38 = __OFADD__(v34, 1);
  v39 = v34 + 1;
  if (!v38)
  {
    v79 = v39;
    v82 = *v80 + 64;
    v40 = 1 << *(_BYTE *)(*v80 + 32);
    if (v40 < 64)
      v41 = ~(-1 << v40);
    else
      v41 = -1;
    v42 = v41 & *(_QWORD *)(*v80 + 64);
    v83 = (unint64_t)(v40 + 63) >> 6;
    v84 = *v80;
    swift_bridgeObjectRetain(*v80);
    v43 = 0;
    if (v42)
    {
LABEL_13:
      v44 = __clz(__rbit64(v42));
      v45 = (v42 - 1) & v42;
      v46 = v44 | (v43 << 6);
      goto LABEL_25;
    }
    while (1)
    {
      v38 = __OFADD__(v43++, 1);
      if (v38)
        goto LABEL_52;
      if (v43 >= v83)
        goto LABEL_43;
      v47 = *(_QWORD *)(v82 + 8 * v43);
      if (!v47)
      {
        v48 = v43 + 1;
        if (v43 + 1 >= v83)
          goto LABEL_43;
        v47 = *(_QWORD *)(v82 + 8 * v48);
        if (!v47)
        {
          v48 = v43 + 2;
          if (v43 + 2 >= v83)
            goto LABEL_43;
          v47 = *(_QWORD *)(v82 + 8 * v48);
          if (!v47)
          {
            v48 = v43 + 3;
            if (v43 + 3 >= v83)
            {
LABEL_43:

              swift_release();
              v34 = v79;
              v35 = v76;
              v33 = v77;
              v36 = v75;
              if (v79 != v78)
                goto LABEL_4;
              v72 = v81;
LABEL_58:
              swift_bridgeObjectRelease(v72);
              return;
            }
            v47 = *(_QWORD *)(v82 + 8 * v48);
            if (!v47)
            {
              while (1)
              {
                v43 = v48 + 1;
                if (__OFADD__(v48, 1))
                  goto LABEL_60;
                if (v43 >= v83)
                  goto LABEL_43;
                v47 = *(_QWORD *)(v82 + 8 * v43);
                ++v48;
                if (v47)
                  goto LABEL_24;
              }
            }
          }
        }
        v43 = v48;
      }
LABEL_24:
      v45 = (v47 - 1) & v47;
      v46 = __clz(__rbit64(v47)) + (v43 << 6);
LABEL_25:
      v49 = *(_QWORD *)(*(_QWORD *)(v84 + 48) + 16 * v46 + 8);
      v50 = (_QWORD *)(*(_QWORD *)(v84 + 56) + 48 * v46);
      v51 = v50[1];
      v52 = v50[2];
      v53 = v50[3];
      v54 = v50[4];
      v55 = (void *)v50[5];
      swift_bridgeObjectRetain(v49);
      v31 = v51;
      swift_bridgeObjectRetain(v51);
      swift_bridgeObjectRetain(v52);
      v91 = v53;
      swift_bridgeObjectRetain(v53);
      swift_bridgeObjectRetain(v54);
      v56 = v55;
      v57 = objc_msgSend(v85, "node");
      sub_100018148(0, (unint64_t *)&qword_10047C128, NSObject_ptr);
      if ((static NSObject.== infix(_:_:)(v56, v57) & 1) != 0)
      {

        v73 = v53;
        v60 = v56;
        v65 = v31;
LABEL_50:

        swift_bridgeObjectRelease(v54);
        swift_bridgeObjectRelease(v73);
        swift_bridgeObjectRelease(v52);
        swift_bridgeObjectRelease(v65);
        swift_bridgeObjectRelease(v81);
        swift_release();
        return;
      }
      v86 = v45;
      v87 = v43;
      v88 = v49;
      v2 = (_QWORD *)swift_allocObject(&unk_100448CC0, 24, 7);
      v2[2] = v57;
      v58 = swift_allocObject(&unk_100448CE8, 32, 7);
      *(_QWORD *)(v58 + 16) = sub_100164A98;
      *(_QWORD *)(v58 + 24) = v2;
      aBlock[4] = sub_100164AB0;
      aBlock[5] = v58;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100161684;
      aBlock[3] = &unk_100448D00;
      v59 = _Block_copy(aBlock);
      v57 = v57;
      swift_retain();
      v60 = v56;
      v61 = objc_msgSend(v56, "childNodesPassingTest:", v59, swift_release().n128_f64[0]);
      _Block_release(v59);
      LOBYTE(v59) = swift_isEscapingClosureAtFileLocation(v58, "", 107, 69, 17, 1);
      swift_release();
      if ((v59 & 1) != 0)
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        if (v31 < 0)
          v74 = v31;
        else
          v74 = v31 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v31);
        v32 = _CocoaArrayWrapper.endIndex.getter(v74);
        swift_bridgeObjectRelease(v31);
        if (!v32)
        {
LABEL_57:
          v72 = v31;
          goto LABEL_58;
        }
        goto LABEL_3;
      }
      v62 = sub_100018148(0, &qword_10047BCE8, SCNNode_ptr);
      v63 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v61, v62);

      if ((unint64_t)v63 >> 62)
      {
        if (v63 < 0)
          v71 = v63;
        else
          v71 = v63 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v63);
        v64 = _CocoaArrayWrapper.endIndex.getter(v71);
        swift_release();
        swift_bridgeObjectRelease(v63);
      }
      else
      {
        v64 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_release();
      }
      v65 = v31;
      swift_bridgeObjectRelease(v63);
      if (v64 == 1)
        goto LABEL_47;
      swift_bridgeObjectRetain(v52);
      v57 = v57;
      v31 = 0;
      sub_10016341C(v52, v57);
      v67 = v66;
      swift_bridgeObjectRelease(v52);

      if (v67
        || (swift_bridgeObjectRetain(v65),
            v57 = v57,
            sub_100163784(v65, v57),
            v69 = v68,
            swift_bridgeObjectRelease(v65),
            v57,
            v69,
            v69))
      {
LABEL_47:

LABEL_49:
        v73 = v91;
        goto LABEL_50;
      }
      swift_bridgeObjectRetain(v54);
      v2 = v57;
      sub_100163AEC(v54, v2);
      v57 = v70;
      swift_bridgeObjectRelease(v54);

      if (v57)
      {

        goto LABEL_49;
      }

      swift_bridgeObjectRelease(v54);
      swift_bridgeObjectRelease(v91);
      swift_bridgeObjectRelease(v52);
      swift_bridgeObjectRelease(v65);
      swift_bridgeObjectRelease(v88);

      v42 = v86;
      v43 = v87;
      if (v86)
        goto LABEL_13;
    }
  }
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
}

void sub_10015FB7C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  __int128 *v12;
  __int128 v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  void *object;
  Swift::String v19;
  Swift::String v20;
  void *v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD *);
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  char v34;
  _QWORD v35[4];
  _BYTE v36[24];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  _QWORD v46[2];

  v4 = v3;
  v8 = v3 + 24;
  swift_beginAccess(v3 + 24, &v40, 32, 0);
  v9 = *(_QWORD *)(v3 + 24);
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_16;
  swift_bridgeObjectRetain(a3);
  v10 = sub_1000C80A8(a2, (uint64_t)a3);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease(a3);
LABEL_16:
    swift_endAccess(&v40);
    return;
  }
  v12 = (__int128 *)(*(_QWORD *)(v9 + 56) + 48 * v10);
  v13 = v12[1];
  v37 = *v12;
  v38 = v13;
  v39 = v12[2];
  v44 = *((_QWORD *)&v37 + 1);
  v45 = v13;
  v46[0] = v39;
  swift_endAccess(&v40);
  sub_100141EB8(&v44);
  sub_100141EB8(&v45);
  sub_100141EB8((_QWORD *)&v45 + 1);
  sub_100141EB8(v46);
  v14 = *((id *)&v39 + 1);
  swift_bridgeObjectRelease(a3);
  if ((_QWORD)v37 != a1)
  {
    if (qword_10047AA28 != -1)
      swift_once(&qword_10047AA28, sub_1000E1108);
    v40 = 0;
    *(_QWORD *)&v41 = 0xE000000000000000;
    _StringGuts.grow(_:)(45);
    swift_bridgeObjectRelease(v41);
    v40 = 0x636552646C726F57;
    *(_QWORD *)&v41 = 0xEF20656C676E6174;
    v15._countAndFlagsBits = a2;
    v15._object = a3;
    String.append(_:)(v15);
    v16._object = (void *)0x80000001003E2B00;
    v16._countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v16);
    v17._countAndFlagsBits = MeasureObjectState.description.getter(v37);
    object = v17._object;
    String.append(_:)(v17);
    swift_bridgeObjectRelease(object);
    v19._countAndFlagsBits = 544175136;
    v19._object = (void *)0xE400000000000000;
    String.append(_:)(v19);
    v20._countAndFlagsBits = MeasureObjectState.description.getter(a1);
    v21 = v20._object;
    String.append(_:)(v20);
    swift_bridgeObjectRelease(v21);
    v22._countAndFlagsBits = v40;
    v23 = v41;
    v22._object = (void *)v41;
    Log.default(_:isPrivate:)(v22, 0);
    swift_bridgeObjectRelease(v23);
  }
  swift_beginAccess(v8, v36, 33, 0);
  swift_bridgeObjectRetain(a3);
  v25 = sub_100161450(v35, a2, (uint64_t)a3);
  if (*(_QWORD *)(v24 + 8))
  {
    v26 = (uint64_t *)v24;
    if (*(_QWORD *)v24 != a1)
    {
      v27 = *(_QWORD *)(v24 + 40);
      v40 = *(_QWORD *)v24;
      v28 = *(_OWORD *)(v24 + 24);
      v41 = *(_OWORD *)(v24 + 8);
      v42 = v28;
      v43 = v27;
      sub_10015DE44(a1);
    }
    *v26 = a1;
  }
  ((void (*)(_QWORD *, _QWORD))v25)(v35, 0);
  swift_endAccess(v36);
  swift_bridgeObjectRelease(a3);
  v29 = objc_msgSend(v14, "state");
  if (v29 == (id)6)
  {
    v30 = *(void **)(v4 + 56);
    v31 = objc_msgSend(v14, "parentNode");
    if (!v31)
    {
LABEL_19:
      sub_10015E43C(v30);
      goto LABEL_20;
    }
  }
  else
  {
    if (v29 != (id)5)
      goto LABEL_20;
    v30 = *(void **)(v4 + 64);
    v31 = objc_msgSend(v14, "parentNode");
    if (!v31)
      goto LABEL_19;
  }
  v32 = v31;
  sub_100018148(0, &qword_10047BCE8, SCNNode_ptr);
  v33 = v30;
  v34 = static NSObject.== infix(_:_:)(v33, v32);

  if ((v34 & 1) == 0)
    goto LABEL_19;
LABEL_20:
  sub_10007BB44(&v44);
  sub_10007BB44(&v45);
  sub_10007BB44((_QWORD *)&v45 + 1);
  sub_10007BB44(v46);

}

void sub_10015FF1C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  uint64_t (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  __n128 v38;
  __int128 v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  double v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  uint64_t v53;
  _BOOL8 v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  char v58;
  uint64_t *v59;
  _DWORD *v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(void);
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  __n128 v81;
  __int128 v82;
  __n128 v83;
  __n128 v84;
  __n128 v85;
  double v86;
  uint64_t v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  __n128 v98;
  __int128 v99;
  __n128 v100;
  __n128 v101;
  __n128 v102;
  double v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  void **v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(void);
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  __n128 v130;
  __int128 v131;
  __n128 v132;
  __n128 v133;
  __n128 v134;
  double v135;
  uint64_t v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  __n128 v147;
  __int128 v148;
  __n128 v149;
  __n128 v150;
  __n128 v151;
  double v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  void **v159;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  id v165;
  id v166;
  uint64_t v167;
  double v168;
  void *v169;
  NSString v170;
  id v171;
  uint64_t v172;
  void *v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t (*v189)(void);
  uint64_t v190;
  __n128 v191;
  __n128 v192;
  __n128 v193;
  __n128 v194;
  __n128 v195;
  __n128 v196;
  __n128 v197;
  __n128 v198;
  __n128 v199;
  __n128 v200;
  __n128 v201;
  __n128 v202;
  __n128 v203;
  __n128 v204;
  __n128 v205;
  void *v206;
  NSString v207;
  id v208[2];
  id v209[2];
  id v210[2];
  id v211[2];
  id v212[2];
  void *v213;
  uint64_t v214;
  void **aBlock;
  uint64_t v216;
  void *v217;
  void *v218;
  void *v219;
  _QWORD *v220;
  int v221[6];
  int v222[8];
  _QWORD v223[6];
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  void *v229;
  _QWORD v230[2];

  v4 = v3;
  v8 = (uint64_t)&swift_isaMask;
  v9 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8))();
  v11 = v10;
  swift_beginAccess(v4 + 24, &aBlock, 32, 0);
  v185 = v4;
  sub_1001369DC(v9, v11, *(_QWORD *)(v4 + 24), v223);
  swift_bridgeObjectRelease(v11);
  sub_100012C58((uint64_t)v223, (uint64_t)&v224, &qword_100485B90);
  v188 = v225;
  if (!v225)
  {
    swift_endAccess(&aBlock);
    return;
  }
  v176 = a3;
  v177 = v224;
  v12 = v227;
  v186 = v226;
  v13 = v228;
  v14 = v229;
  swift_endAccess(&aBlock);
  v15 = (void *)objc_opt_self(SCNTransaction);
  objc_msgSend(v15, "begin");
  objc_msgSend(v15, "setAnimationDuration:", 0.0);
  v183 = swift_allocObject(&unk_100448BD0, 24, 7);
  *(_QWORD *)(v183 + 16) = _swiftEmptyDictionarySingleton;
  v16 = swift_bridgeObjectRetain(v13);
  sub_10015ED24(v16, (_QWORD *)(v183 + 16));
  v184 = v13;
  swift_bridgeObjectRelease(v13);
  v214 = swift_allocObject(&unk_100448BD0, 24, 7);
  *(_QWORD *)(v214 + 16) = _swiftEmptyDictionarySingleton;
  v189 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x230);
  v17 = v189();
  v18 = v17;
  v175 = a2;
  v178 = v12;
  v179 = v15;
  v187 = a1;
  v182 = v14;
  if (v17 >> 62)
    goto LABEL_35;
  v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v17);
  if (!v19)
  {
LABEL_39:
    swift_bridgeObjectRelease_n(v18, 2);
    v181 = swift_allocObject(&unk_100448BF8, 24, 7);
    *(_QWORD *)(v181 + 16) = _swiftEmptyDictionarySingleton;
    v65 = swift_bridgeObjectRetain(v188);
    sub_10015F06C(v65, (_QWORD *)(v181 + 16));
    swift_bridgeObjectRelease(v188);
    v66 = swift_allocObject(&unk_100448BF8, 24, 7);
    *(_QWORD *)(v66 + 16) = _swiftEmptyDictionarySingleton;
    v67 = v189();
    v68 = v67;
    if (v67 >> 62)
      goto LABEL_58;
    v69 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v67);
    if (!v69)
    {
LABEL_62:
      swift_bridgeObjectRelease_n(v68, 2);
      v180 = swift_allocObject(&unk_100448BF8, 24, 7);
      *(_QWORD *)(v180 + 16) = _swiftEmptyDictionarySingleton;
      v114 = swift_bridgeObjectRetain(v186);
      sub_10015F06C(v114, (_QWORD *)(v180 + 16));
      swift_bridgeObjectRelease(v186);
      v115 = swift_allocObject(&unk_100448BF8, 24, 7);
      *(_QWORD *)(v115 + 16) = _swiftEmptyDictionarySingleton;
      v116 = (*(uint64_t (**)(void))((swift_isaMask & *v187) + 0x248))();
      v117 = v116;
      if (v116 >> 62)
        goto LABEL_81;
      v118 = *(_QWORD *)((v116 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v116);
      v190 = v118;
      if (!v118)
      {
LABEL_85:
        swift_bridgeObjectRelease_n(v117, 2);
        v213 = (void *)objc_opt_self(SCNAction);
        v230[0] = v178;
        v163 = (_QWORD *)swift_allocObject(&unk_100448C20, 128, 7);
        v163[2] = v183;
        v163[3] = v181;
        v163[4] = v180;
        v163[5] = 0x3FE0000000000000;
        v163[6] = v187;
        v163[7] = v214;
        v163[8] = v177;
        v163[9] = v188;
        v163[10] = v186;
        v163[11] = v178;
        v163[12] = v184;
        v163[13] = v182;
        v163[14] = v66;
        v163[15] = v115;
        v219 = sub_100162D68;
        v220 = v163;
        aBlock = _NSConcreteStackBlock;
        v216 = 1107296256;
        v217 = sub_1000D28CC;
        v218 = &unk_100448C38;
        v206 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain(v184);
        swift_bridgeObjectRetain(v188);
        swift_bridgeObjectRetain(v186);
        swift_retain();
        swift_retain();
        swift_retain();
        v164 = v187;
        swift_retain();
        sub_100141EB8(v230);
        v165 = v182;
        swift_retain();
        swift_retain();
        swift_release();
        v166 = objc_msgSend(v213, "customActionWithDuration:actionBlock:", v206, 0.5);
        _Block_release(v206);
        v167 = (*(uint64_t (**)(void))((swift_isaMask & *v164) + 0xD0))();
        v168 = 1.0;
        if (v167 == 5)
          v168 = 3.0;
        objc_msgSend(v166, "setSpeed:", v168);
        objc_msgSend(v166, "setTimingMode:", 1);
        v169 = *(void **)(v185 + 56);
        v170 = String._bridgeToObjectiveC()();
        v171 = objc_msgSend(v169, "actionForKey:", v170);

        if (!v171 || v167 == 5)
        {
          v207 = String._bridgeToObjectiveC()();
          v172 = swift_allocObject(&unk_100448C70, 56, 7);
          *(_QWORD *)(v172 + 16) = v175;
          *(_QWORD *)(v172 + 24) = v176;
          *(_BYTE *)(v172 + 32) = v167 == 5;
          *(_QWORD *)(v172 + 40) = v164;
          *(_QWORD *)(v172 + 48) = v185;
          v219 = sub_100162DF4;
          v220 = (_QWORD *)v172;
          aBlock = _NSConcreteStackBlock;
          v216 = 1107296256;
          v217 = sub_10003ECA0;
          v218 = &unk_100448C88;
          v173 = _Block_copy(&aBlock);
          v174 = v164;
          sub_100036254(v175, v176);
          swift_retain();
          objc_msgSend(v169, "runAction:forKey:completionHandler:", v166, v207, v173, swift_release().n128_f64[0]);
          _Block_release(v173);

        }
        objc_msgSend(v179, "commit");
        swift_bridgeObjectRelease(v186);
        swift_bridgeObjectRelease(v188);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        sub_10007BB44(v230);
        swift_bridgeObjectRelease(v184);
        return;
      }
LABEL_64:
      if (v190 < 1)
        goto LABEL_93;
      v119 = 0;
      while (1)
      {
        if ((v117 & 0xC000000000000001) != 0)
          v120 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v119, v117);
        else
          v120 = *(id *)(v117 + 8 * v119 + 32);
        v121 = v120;
        v122 = (*(uint64_t (**)(void))((swift_isaMask & *v120) + 0xB8))();
        v124 = v123;
        v125 = *(uint64_t (**)(void))((swift_isaMask & *v121) + 0x250);
        v126 = v125();
        v127 = v126;
        if ((v126 & 0xC000000000000001) != 0)
        {
          v128 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v126);
        }
        else
        {
          if (!*(_QWORD *)((v126 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_80:
            __break(1u);
LABEL_81:
            if (v117 < 0)
              v162 = v117;
            else
              v162 = v117 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v117);
            v190 = _CocoaArrayWrapper.endIndex.getter(v162);
            if (!v190)
              goto LABEL_85;
            goto LABEL_64;
          }
          v128 = *(id *)(v126 + 32);
        }
        v129 = v128;
        v130 = swift_bridgeObjectRelease(v127);
        *(double *)&v131 = (*(double (**)(__n128))((swift_isaMask & *v129) + 0x2B0))(v130);
        v204 = v132;
        *(_OWORD *)v211 = v131;
        v194 = v134;
        v199 = v133;

        v135 = simd_float4x4.position.getter(*(__n128 *)v211, v204, v199, v194);
        v136 = SCNVector3.init(_:)(v135);
        v138 = v137;
        v140 = v139;
        v142 = v141;
        v143 = ((uint64_t (*)(uint64_t))v125)(v136);
        v144 = v143;
        if ((v143 & 0xC000000000000001) != 0)
        {
          v145 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v143);
        }
        else
        {
          if (*(_QWORD *)((v143 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
            goto LABEL_80;
          v145 = *(id *)(v143 + 40);
        }
        v146 = v145;
        v147 = swift_bridgeObjectRelease(v144);
        ++v119;
        *(double *)&v148 = (*(double (**)(__n128))((swift_isaMask & *v146) + 0x2B0))(v147);
        v205 = v149;
        *(_OWORD *)v212 = v148;
        v195 = v151;
        v200 = v150;

        v152 = simd_float4x4.position.getter(*(__n128 *)v212, v205, v200, v195);
        SCNVector3.init(_:)(v152);
        v154 = v153;
        v156 = v155;
        v158 = v157;
        v159 = *(void ***)(v115 + 16);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v159);
        aBlock = v159;
        *(_QWORD *)(v115 + 16) = 0x8000000000000000;
        v221[0] = v138;
        v221[1] = v140;
        v221[2] = v142;
        v221[3] = v154;
        v221[4] = v156;
        v221[5] = v158;
        sub_1000BD024(v221, v122, v124, isUniquelyReferenced_nonNull_native);
        v161 = *(_QWORD *)(v115 + 16);
        *(_QWORD *)(v115 + 16) = aBlock;

        swift_bridgeObjectRelease(v124);
        swift_bridgeObjectRelease(v161);
        if (v190 == v119)
          goto LABEL_85;
      }
    }
LABEL_41:
    if (v69 < 1)
      goto LABEL_92;
    v70 = 0;
    while (1)
    {
      if ((v68 & 0xC000000000000001) != 0)
        v71 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v70, v68);
      else
        v71 = *(id *)(v68 + 8 * v70 + 32);
      v72 = v71;
      v73 = (*(uint64_t (**)(void))((swift_isaMask & *v71) + 0xB8))();
      v75 = v74;
      v76 = *(uint64_t (**)(void))((swift_isaMask & *v72) + 0x250);
      v77 = v76();
      v78 = v77;
      if ((v77 & 0xC000000000000001) != 0)
      {
        v79 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v77);
      }
      else
      {
        if (!*(_QWORD *)((v77 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          if (v68 < 0)
            v113 = v68;
          else
            v113 = v68 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v68);
          v69 = _CocoaArrayWrapper.endIndex.getter(v113);
          if (!v69)
            goto LABEL_62;
          goto LABEL_41;
        }
        v79 = *(id *)(v77 + 32);
      }
      v80 = v79;
      v81 = swift_bridgeObjectRelease(v78);
      *(double *)&v82 = (*(double (**)(__n128))((swift_isaMask & *v80) + 0x2B0))(v81);
      v202 = v83;
      *(_OWORD *)v209 = v82;
      v192 = v85;
      v197 = v84;

      v86 = simd_float4x4.position.getter(*(__n128 *)v209, v202, v197, v192);
      v87 = SCNVector3.init(_:)(v86);
      v89 = v88;
      v91 = v90;
      v93 = v92;
      v94 = ((uint64_t (*)(uint64_t))v76)(v87);
      v95 = v94;
      if ((v94 & 0xC000000000000001) != 0)
      {
        v96 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v94);
      }
      else
      {
        if (*(_QWORD *)((v94 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
          goto LABEL_57;
        v96 = *(id *)(v94 + 40);
      }
      v97 = v96;
      v98 = swift_bridgeObjectRelease(v95);
      ++v70;
      *(double *)&v99 = (*(double (**)(__n128))((swift_isaMask & *v97) + 0x2B0))(v98);
      v203 = v100;
      *(_OWORD *)v210 = v99;
      v193 = v102;
      v198 = v101;

      v103 = simd_float4x4.position.getter(*(__n128 *)v210, v203, v198, v193);
      SCNVector3.init(_:)(v103);
      v105 = v104;
      v107 = v106;
      v109 = v108;
      v110 = *(void ***)(v66 + 16);
      v111 = swift_isUniquelyReferenced_nonNull_native(v110);
      aBlock = v110;
      *(_QWORD *)(v66 + 16) = 0x8000000000000000;
      v222[0] = v89;
      v222[1] = v91;
      v222[2] = v93;
      v222[3] = v105;
      v222[4] = v107;
      v222[5] = v109;
      sub_1000BD024(v222, v73, v75, v111);
      v112 = *(_QWORD *)(v66 + 16);
      *(_QWORD *)(v66 + 16) = aBlock;

      swift_bridgeObjectRelease(v75);
      swift_bridgeObjectRelease(v112);
      if (v69 == v70)
        goto LABEL_62;
    }
  }
LABEL_4:
  if (v19 >= 1)
  {
    v20 = 0;
    while (1)
    {
      if ((v18 & 0xC000000000000001) != 0)
        v23 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v18);
      else
        v23 = *(id *)(v18 + 8 * v20 + 32);
      v24 = v23;
      v25 = *(uint64_t (**)(void))((*(_QWORD *)v8 & *v23) + 0x250);
      v26 = v25();
      v27 = v26;
      if ((v26 & 0xC000000000000001) != 0)
      {
        v28 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v26);
      }
      else
      {
        if (!*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          if (v18 < 0)
            v64 = v18;
          else
            v64 = v18 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v18);
          v19 = _CocoaArrayWrapper.endIndex.getter(v64);
          if (!v19)
            goto LABEL_39;
          goto LABEL_4;
        }
        v28 = *(id *)(v26 + 32);
      }
      v29 = v28;
      v30 = swift_bridgeObjectRelease(v27);
      v31 = (*(uint64_t (**)(__n128))((*(_QWORD *)v8 & *v29) + 0xB8))(v30);
      v33 = v32;

      v34 = v25();
      v35 = v34;
      if ((v34 & 0xC000000000000001) != 0)
      {
        v36 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v34);
      }
      else
      {
        if (!*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_33;
        v36 = *(id *)(v34 + 32);
      }
      v37 = v36;
      v38 = swift_bridgeObjectRelease(v35);
      *(double *)&v39 = (*(double (**)(__n128))((*(_QWORD *)v8 & *v37) + 0x2B0))(v38);
      v201 = v40;
      *(_OWORD *)v208 = v39;
      v191 = v42;
      v196 = v41;

      v43 = simd_float4x4.position.getter(*(__n128 *)v208, v201, v196, v191);
      SCNVector3.init(_:)(v43);
      v45 = v44;
      v47 = v46;
      v49 = v48;
      v50 = *(_QWORD *)(v214 + 16);
      v8 = swift_isUniquelyReferenced_nonNull_native(v50);
      aBlock = (void **)v50;
      *(_QWORD *)(v214 + 16) = 0x8000000000000000;
      v52 = sub_1000C80A8(v31, v33);
      v53 = *(_QWORD *)(v50 + 16);
      v54 = (v51 & 1) == 0;
      v55 = v53 + v54;
      if (__OFADD__(v53, v54))
        goto LABEL_32;
      v56 = v51;
      if (*(_QWORD *)(v50 + 24) >= v55)
      {
        if ((v8 & 1) != 0)
        {
          v8 = (uint64_t)aBlock;
          if ((v51 & 1) != 0)
            goto LABEL_6;
        }
        else
        {
          sub_1000BFCCC();
          v8 = (uint64_t)aBlock;
          if ((v56 & 1) != 0)
            goto LABEL_6;
        }
      }
      else
      {
        sub_1000BA21C(v55, v8);
        v57 = sub_1000C80A8(v31, v33);
        if ((v56 & 1) != (v58 & 1))
          goto LABEL_94;
        v52 = v57;
        v8 = (uint64_t)aBlock;
        if ((v56 & 1) != 0)
        {
LABEL_6:
          v21 = (_DWORD *)(*(_QWORD *)(v8 + 56) + 12 * v52);
          *v21 = v45;
          v21[1] = v47;
          v21[2] = v49;
          goto LABEL_7;
        }
      }
      *(_QWORD *)(v8 + 8 * (v52 >> 6) + 64) |= 1 << v52;
      v59 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v52);
      *v59 = v31;
      v59[1] = v33;
      v60 = (_DWORD *)(*(_QWORD *)(v8 + 56) + 12 * v52);
      *v60 = v45;
      v60[1] = v47;
      v60[2] = v49;
      v61 = *(_QWORD *)(v8 + 16);
      v62 = __OFADD__(v61, 1);
      v63 = v61 + 1;
      if (v62)
        goto LABEL_34;
      *(_QWORD *)(v8 + 16) = v63;
      swift_bridgeObjectRetain(v33);
LABEL_7:
      ++v20;
      v22 = *(_QWORD *)(v214 + 16);
      *(_QWORD *)(v214 + 16) = v8;

      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease(v22);
      v8 = (uint64_t)&swift_isaMask;
      if (v19 == v20)
        goto LABEL_39;
    }
  }
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_100160CE8(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  __n128 v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(uint64_t *__return_ptr, __n128);
  float32x2_t *v24;
  objc_class *v25;
  char *v26;
  uint64_t v27;
  id v28;
  char *v29;
  char *v30;
  char *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  double v48;
  _QWORD *v49;
  uint64_t v50;
  id v51;
  _QWORD *v52;
  _QWORD *v53;
  char *v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v61;
  uint64_t (*v62)(void);
  uint64_t v63;
  id v65;
  uint64_t v66;
  _BYTE v67[32];
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  objc_super v71;
  uint64_t v72[38];
  uint64_t v73[38];
  uint64_t v74[38];
  _BYTE v75[304];
  uint64_t __src[38];
  _BYTE __dst[312];
  uint64_t v78;
  _BYTE v79[32];
  __int128 v80;
  _QWORD *v81;
  char *v82;
  _QWORD *v83;
  char *v84;
  __int128 v85;
  char v86;
  float32x2_t *v87;

  v2 = v1;
  v3 = &swift_isaMask;
  v4 = *(char **)((swift_isaMask & *a1) + 0x230);
  v5 = ((uint64_t (*)(void))v4)();
  if ((unint64_t)v5 >> 62)
    goto LABEL_19;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v62 = (uint64_t (*)(void))v4;
  v63 = v1;
  while (v6)
  {
    if (v6 < 1)
    {
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    v7 = 0;
    v4 = (char *)_swiftEmptyArrayStorage;
    while (1)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
      else
        v8 = *(id *)(v5 + 8 * v7 + 32);
      v9 = v8;
      v10 = (*(uint64_t (**)(void))((*v3 & *v8) + 0x250))();
      v11 = v10;
      if ((v10 & 0xC000000000000001) != 0)
      {
        v12 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
        goto LABEL_11;
      }
      if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
        break;
      v12 = *(id *)(v10 + 32);
LABEL_11:
      v13 = v12;
      v14 = swift_bridgeObjectRelease(v11);
      v15 = v3;
      v16 = (*(uint64_t (**)(__n128))((*v3 & *v13) + 0xB8))(v14);
      v18 = v17;

      if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
        v4 = sub_10005F9C4(0, *((_QWORD *)v4 + 2) + 1, 1, v4);
      v2 = *((_QWORD *)v4 + 2);
      v19 = *((_QWORD *)v4 + 3);
      if (v2 >= v19 >> 1)
        v4 = sub_10005F9C4((char *)(v19 > 1), v2 + 1, 1, v4);
      ++v7;
      *((_QWORD *)v4 + 2) = v2 + 1;
      v20 = &v4[16 * v2];
      *((_QWORD *)v20 + 4) = v16;
      *((_QWORD *)v20 + 5) = v18;

      v3 = v15;
      if (v6 == v7)
        goto LABEL_24;
    }
    __break(1u);
LABEL_19:
    if (v5 < 0)
      v21 = v5;
    else
      v21 = v5 & 0xFFFFFFFFFFFFFF8;
    v6 = _CocoaArrayWrapper.endIndex.getter(v21);
    v62 = (uint64_t (*)(void))v4;
    v63 = v2;
  }
  v4 = (char *)_swiftEmptyArrayStorage;
LABEL_24:
  v22 = swift_bridgeObjectRelease(v5);
  v23 = *(void (**)(uint64_t *__return_ptr, __n128))((*v3 & *a1) + 0x260);
  v23(v72, v22);
  sub_100012C58((uint64_t)v72, (uint64_t)__src, &qword_100484AC8);
  if (sub_100124C4C(__src) == 1)
    goto LABEL_58;
  memcpy(__dst, __src, 0x130uLL);
  sub_100012C58((uint64_t)__dst, (uint64_t)&v78, &qword_100485BF8);
  sub_100141EB8(&v78);
  sub_100124C70(v72);
  sub_100012C58((uint64_t)&v78, (uint64_t)&v87, &qword_100485BF8);
  v24 = v87;
  if (!v87)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v25 = (objc_class *)type metadata accessor for RectangleFill();
  v26 = (char *)objc_allocWithZone(v25);
  *(_QWORD *)&v26[OBJC_IVAR____TtC7Measure13RectangleFill_state] = 1;
  *(_QWORD *)&v26[OBJC_IVAR____TtC7Measure13RectangleFill_currentPoints] = 0;
  v27 = OBJC_IVAR____TtC7Measure13RectangleFill_rectangleFill;
  v28 = objc_allocWithZone((Class)SCNNode);
  v29 = v26;
  *(_QWORD *)&v26[v27] = objc_msgSend(v28, "init");

  v71.receiver = v29;
  v71.super_class = v25;
  v30 = (char *)objc_msgSendSuper2(&v71, "init");
  *(_QWORD *)&v30[OBJC_IVAR____TtC7Measure13RectangleFill_state] = 1;
  sub_100159DEC(v24);
  sub_10007BB44(&v78);
  v31 = v30;
  ((void (*)(uint64_t *__return_ptr))v23)(v73);
  sub_100012C58((uint64_t)v73, (uint64_t)v74, &qword_100484AC8);
  if (sub_100124C4C(v74) == 1)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  memcpy(v75, v74, sizeof(v75));
  sub_100124C70(v73);
  sub_100012C58((uint64_t)&v75[112], (uint64_t)v79, &qword_100484AD0);
  sub_100012C58((uint64_t)v79, (uint64_t)&v85, &qword_100484AD0);
  if ((v86 & 1) == 0)
  {
    SCNVector3.init(_:)(*(double *)&v85);
    objc_msgSend(v31, "setPosition:");

    v32 = (void *)objc_opt_self(SCNTransaction);
    objc_msgSend(v32, "begin");
    objc_msgSend(v32, "setAnimationDuration:", 0.0);
    v33 = *(void **)(v63 + 56);
    SCNNode.removeAllChildren()();
    v69 = _swiftEmptyDictionarySingleton;
    v70 = _swiftEmptyDictionarySingleton;
    v68 = _swiftEmptyDictionarySingleton;
    v34 = v62();
    v35 = v34;
    if ((unint64_t)v34 >> 62)
    {
      if (v34 < 0)
        v40 = v34;
      else
        v40 = v34 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v34);
      v36 = _CocoaArrayWrapper.endIndex.getter(v40);
      v65 = v33;
      if (!v36)
        goto LABEL_40;
    }
    else
    {
      v36 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v34);
      v65 = v33;
      if (!v36)
        goto LABEL_40;
    }
    if (v36 < 1)
      goto LABEL_56;
    v37 = 0;
    do
    {
      if ((v35 & 0xC000000000000001) != 0)
        v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v35);
      else
        v38 = *(id *)(v35 + 8 * v37 + 32);
      v39 = v38;
      ++v37;
      *(_QWORD *)&v80 = v38;
      sub_1001616C8((_QWORD **)&v80, v63, &v70, &v69);

    }
    while (v36 != v37);
LABEL_40:
    v41 = swift_bridgeObjectRelease_n(v35, 2);
    v42 = (*(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0x248))(v41);
    v43 = v42;
    if ((unint64_t)v42 >> 62)
    {
      if (v42 < 0)
        v50 = v42;
      else
        v50 = v42 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v42);
      v44 = _CocoaArrayWrapper.endIndex.getter(v50);
      if (v44)
        goto LABEL_42;
    }
    else
    {
      v44 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v42);
      if (v44)
      {
LABEL_42:
        if (v44 < 1)
          goto LABEL_57;
        v45 = 0;
        do
        {
          if ((v43 & 0xC000000000000001) != 0)
            v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v45, v43);
          else
            v46 = *(id *)(v43 + 8 * v45 + 32);
          v47 = v46;
          ++v45;
          *(_QWORD *)&v80 = v46;
          sub_100161ADC((_QWORD **)&v80, v63, &v68);

        }
        while (v44 != v45);
        *(_QWORD *)&v48 = swift_bridgeObjectRelease_n(v43, 2).n128_u64[0];
        v49 = v68;
        goto LABEL_54;
      }
    }
    *(_QWORD *)&v48 = swift_bridgeObjectRelease_n(v43, 2).n128_u64[0];
    v49 = _swiftEmptyDictionarySingleton;
LABEL_54:
    objc_msgSend(v65, "addChildNode:", v31, v48, v62);
    objc_msgSend(v32, "commit");
    v51 = objc_msgSend(v31, "state");
    v52 = v69;
    v53 = v70;
    *(_QWORD *)&v80 = v51;
    *((_QWORD *)&v80 + 1) = v69;
    v81 = v49;
    v82 = v4;
    v83 = v70;
    v84 = v31;
    v54 = v31;
    swift_bridgeObjectRetain(v52);
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(v53);
    swift_bridgeObjectRetain(v4);
    sub_10015DE44((uint64_t)v51);

    v55 = swift_bridgeObjectRelease(v4);
    v56 = (*(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0xB8))(v55);
    v58 = v57;
    swift_beginAccess(v63 + 24, v67, 33, 0);
    v59 = v54;
    swift_bridgeObjectRetain(v52);
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(v53);
    swift_bridgeObjectRetain(v4);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v63 + 24));
    v66 = *(_QWORD *)(v63 + 24);
    *(_QWORD *)(v63 + 24) = 0x8000000000000000;
    sub_1000BD2E4(&v80, v56, v58, isUniquelyReferenced_nonNull_native);
    v61 = *(_QWORD *)(v63 + 24);
    *(_QWORD *)(v63 + 24) = v66;
    swift_bridgeObjectRelease(v58);
    swift_bridgeObjectRelease(v61);
    swift_endAccess(v67);

    swift_bridgeObjectRelease(v53);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v49);
    swift_bridgeObjectRelease(v52);
    swift_bridgeObjectRelease(v68);
    swift_bridgeObjectRelease(v69);
    swift_bridgeObjectRelease(v70);
    return;
  }
LABEL_61:
  __break(1u);
}

void (*sub_100161450(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain(a3);
  v6[5] = sub_100162E04(v6, a2, a3);
  return sub_1001614BC;
}

void sub_1001614BC(_QWORD *a1)
{
  void *v1;
  uint64_t v2;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease(v2);
  free(v1);
}

void (*sub_1001614F4(double ****a1, double a2))(_QWORD *a1)
{
  double ***v4;

  v4 = (double ***)malloc(0x28uLL);
  *a1 = v4;
  v4[4] = (double **)sub_100162EE4(v4, a2);
  return sub_100161548;
}

void sub_100161548(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t sub_100161578(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *);
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];
  _QWORD v16[6];

  v2 = v1;
  v3 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8);
  v4 = v3();
  v6 = v5;
  v7 = v2 + 24;
  swift_beginAccess(v7, v15, 33, 0);
  v8 = sub_100161450(v16, v4, v6);
  if (*(_QWORD *)(v9 + 8))
    sub_10015E634();
  ((void (*)(_QWORD *, _QWORD))v8)(v16, 0);
  swift_endAccess(v15);
  v10 = swift_bridgeObjectRelease(v6);
  v11 = ((uint64_t (*)(__n128))v3)(v10);
  v13 = v12;
  swift_beginAccess(v7, v15, 33, 0);
  sub_100093EBC(v11, v13, (uint64_t)v16);
  swift_endAccess(v15);
  swift_bridgeObjectRelease(v13);
  return sub_10013FDB8((uint64_t)v16);
}

uint64_t sub_100161684(uint64_t a1, void *a2)
{
  uint64_t (*v2)(void);
  id v3;
  char v4;

  v2 = *(uint64_t (**)(void))(a1 + 32);
  v3 = a2;
  v4 = v2();

  return v4 & 1;
}

void sub_1001616C8(_QWORD **a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  void *v4;
  uint64_t v5;
  _QWORD *v9;
  id v10;
  char *v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  double v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  double v29;
  double v30;
  double v31;
  void *v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  _QWORD *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  __n128 v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  __n128 v50;
  __n128 v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  __n128 v58;
  __n128 v59;
  id v60;
  void *v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  char v68;
  uint64_t v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;
  __n128 v75;
  __n128 v76;
  __n128 v77;
  void *v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;

  v9 = *a1;
  v10 = objc_allocWithZone((Class)type metadata accessor for PointRender());
  v11 = sub_10012DE9C(0, 1);
  v12 = *(uint64_t (**)(void))((swift_isaMask & *v9) + 0x250);
  v13 = v12();
  v14 = v13;
  if ((v13 & 0xC000000000000001) != 0)
  {
    v15 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
  }
  else
  {
    if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_16;
    }
    v15 = *(id *)(v13 + 32);
  }
  v16 = v15;
  v17 = swift_bridgeObjectRelease(v14);
  v18.n128_f64[0] = (*(double (**)(__n128))((swift_isaMask & *v16) + 0x2B0))(v17);
  v77 = v19;
  v79 = v18;
  v75 = v21;
  v76 = v20;

  v22 = simd_float4x4.position.getter(v79, v77, v76, v75);
  SCNVector3.init(_:)(v22);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC7Measure11PointRender_point], "setWorldPosition:");
  LODWORD(v29) = v24;
  LODWORD(v30) = v26;
  LODWORD(v31) = v28;
  objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC7Measure11PointRender_pointPrime], "setWorldPosition:", v29, v30, v31);
  v32 = *(void **)(a2 + 56);
  v33 = ((uint64_t (*)(id))v12)(objc_msgSend(v32, "addChildNode:", v11));
  v5 = v33;
  v78 = v32;
  if ((v33 & 0xC000000000000001) != 0)
  {
LABEL_16:
    v34 = v4;
    v35 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
    goto LABEL_7;
  }
  if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_18;
  }
  v34 = v4;
  v35 = *(id *)(v33 + 32);
LABEL_7:
  v36 = v35;
  v37 = swift_bridgeObjectRelease(v5);
  v38 = (*(uint64_t (**)(__n128))((swift_isaMask & *v36) + 0xB8))(v37);
  v40 = v39;

  v11 = v11;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a3);
  v80 = *a3;
  *a3 = 0x8000000000000000;
  sub_1000BCBB4((uint64_t)v11, v38, v40, isUniquelyReferenced_nonNull_native);
  v42 = *a3;
  *a3 = v80;
  swift_bridgeObjectRelease(v40);
  v43 = swift_bridgeObjectRelease(v42);
  v44 = v9;
  v45 = ((uint64_t (*)(__n128))v12)(v43);
  a3 = (_QWORD *)v45;
  if ((v45 & 0xC000000000000001) != 0)
  {
LABEL_18:
    v46 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a3);
    goto LABEL_10;
  }
  if (!*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_20;
  }
  v46 = *(id *)(v45 + 32);
LABEL_10:
  v47 = swift_bridgeObjectRelease(a3);
  v48.n128_f64[0] = (*(double (**)(__n128))((swift_isaMask & *v46) + 0x2B0))(v47);
  v76 = v49;
  v77 = v48;
  v74 = v51;
  v75 = v50;

  v52 = v12();
  v44 = (_QWORD *)v52;
  v34 = v78;
  if ((v52 & 0xC000000000000001) != 0)
  {
LABEL_20:
    v53 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v44);
    goto LABEL_13;
  }
  if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    v53 = *(id *)(v52 + 40);
LABEL_13:
    v54 = v53;
    v55 = swift_bridgeObjectRelease(v44);
    v56.n128_f64[0] = (*(double (**)(__n128))((swift_isaMask & *v54) + 0x2B0))(v55);
    v72 = v57;
    v73 = v56;
    v70 = v59;
    v71 = v58;

    v60 = objc_allocWithZone((Class)type metadata accessor for LineRender(0));
    sub_1000D34D0(1, 0, 0, 0, 0, v77, v76, v75, v74, v73, v72, v71, v70);
    v62 = v61;
    v63 = objc_msgSend(v34, "addChildNode:", v61);
    v64 = (*(uint64_t (**)(id))((swift_isaMask & *v9) + 0xB8))(v63);
    v66 = v65;
    v67 = v62;
    v68 = swift_isUniquelyReferenced_nonNull_native(*a4);
    v81 = *a4;
    *a4 = 0x8000000000000000;
    sub_1000BCD34((uint64_t)v67, v64, v66, v68);
    v69 = *a4;
    *a4 = v81;

    swift_bridgeObjectRelease(v66);
    swift_bridgeObjectRelease(v69);
    return;
  }
  __break(1u);
}

void sub_100161ADC(_QWORD **a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v5;
  uint64_t (*v6)(void);
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  uint64_t v43;

  v5 = *a1;
  v6 = *(uint64_t (**)(void))((swift_isaMask & **a1) + 0x250);
  v7 = *a1;
  v8 = v6();
  v9 = v8;
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_10;
    }
    v10 = *(id *)(v8 + 32);
  }
  v11 = v10;
  v12 = swift_bridgeObjectRelease(v9);
  v13.n128_f64[0] = (*(double (**)(__n128))((swift_isaMask & *v11) + 0x2B0))(v12);
  v42 = v13;
  v40 = v15;
  v41 = v14;
  v39 = v16;

  v17 = v6();
  v7 = (_QWORD *)v17;
  if ((v17 & 0xC000000000000001) != 0)
  {
LABEL_10:
    v18 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v7);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    v18 = *(id *)(v17 + 40);
LABEL_7:
    v19 = v18;
    v20 = swift_bridgeObjectRelease(v7);
    v21.n128_f64[0] = (*(double (**)(__n128))((swift_isaMask & *v19) + 0x2B0))(v20);
    v37 = v22;
    v38 = v21;
    v35 = v24;
    v36 = v23;

    v25 = objc_allocWithZone((Class)type metadata accessor for LineRender(0));
    sub_1000D34D0(1, 1, 0, 0, 0, v42, v41, v40, v39, v38, v37, v36, v35);
    v27 = v26;
    v28 = objc_msgSend(*(id *)(a2 + 56), "addChildNode:", v26);
    v29 = (*(uint64_t (**)(id))((swift_isaMask & *v5) + 0xB8))(v28);
    v31 = v30;
    v32 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a3);
    v43 = *a3;
    *a3 = 0x8000000000000000;
    sub_1000BCD34((uint64_t)v32, v29, v31, isUniquelyReferenced_nonNull_native);
    v34 = *a3;
    *a3 = v43;

    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v34);
    return;
  }
  __break(1u);
}

void sub_100161CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, _QWORD *a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t (*v20)(__n128);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD *v34;
  void *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  float v53;
  __int128 v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  float v58;
  __int128 v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  float v63;
  __int128 v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  float v68;
  __int128 v69;
  uint64_t *v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  _BYTE v74[24];
  _BYTE v75[24];
  _BYTE v76[32];

  v16 = (uint64_t *)(a2 + 16);
  swift_beginAccess(a2 + 16, v76, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)(a2 + 16) + 16) == 4)
  {
    v17 = (uint64_t *)(a3 + 16);
    swift_beginAccess(a3 + 16, v75, 0, 0);
    if (*(_QWORD *)(*(_QWORD *)(a3 + 16) + 16) == 4)
    {
      v18 = a4 + 16;
      v19 = swift_beginAccess(v18, v74, 0, 0);
      if (*(_QWORD *)(*(_QWORD *)v18 + 16) == 2)
      {
        v70 = (uint64_t *)v18;
        v73 = _swiftEmptyDictionarySingleton;
        v20 = *(uint64_t (**)(__n128))((swift_isaMask & *a5) + 0x230);
        v71 = a5;
        v21 = v20(v19);
        v22 = v21;
        if ((unint64_t)v21 >> 62)
        {
          if (v21 < 0)
            v18 = v21;
          else
            v18 = v21 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v21);
          v23 = _CocoaArrayWrapper.endIndex.getter(v18);
        }
        else
        {
          v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v21);
        }
        if (v23)
        {
          if (v23 < 1)
          {
LABEL_63:
            __break(1u);
            goto LABEL_64;
          }
          v18 = 0;
          v24 = a6 + 16;
          do
          {
            if ((v22 & 0xC000000000000001) != 0)
              v25 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v22);
            else
              v25 = *(id *)(v22 + 8 * v18 + 32);
            v26 = v25;
            ++v18;
            v72 = v25;
            sub_1001622D8(&v72, &v73, v16, v24);

          }
          while (v23 != v18);
        }
        v27 = swift_bridgeObjectRelease_n(v22, 2);
        v28 = v20(v27);
        v29 = v28;
        if ((unint64_t)v28 >> 62)
        {
          if (v28 < 0)
            v18 = v28;
          else
            v18 = v28 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v28);
          v30 = _CocoaArrayWrapper.endIndex.getter(v18);
          if (!v30)
            goto LABEL_29;
        }
        else
        {
          v30 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v28);
          if (!v30)
            goto LABEL_29;
        }
        if (v30 < 1)
        {
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        v31 = 0;
        v32 = (uint64_t *)(a8 + 16);
        v33 = (_QWORD *)a7[4];
        v18 = a7[1];
        do
        {
          if ((v29 & 0xC000000000000001) != 0)
            v34 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v29);
          else
            v34 = *(id *)(v29 + 8 * v31 + 32);
          v35 = v34;
          ++v31;
          v72 = v34;
          sub_100163FEC(&v72, v18, v33, (uint64_t)&v73, v17, v32);

        }
        while (v30 != v31);
LABEL_29:
        v36 = swift_bridgeObjectRelease_n(v29, 2);
        v37 = (*(uint64_t (**)(__n128))((swift_isaMask & *v71) + 0x248))(v36);
        v38 = v37;
        if ((unint64_t)v37 >> 62)
        {
          if (v37 < 0)
            v18 = v37;
          else
            v18 = v37 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v37);
          v39 = _CocoaArrayWrapper.endIndex.getter(v18);
          v40 = v70;
          if (!v39)
            goto LABEL_41;
        }
        else
        {
          v39 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v37);
          v40 = v70;
          if (!v39)
            goto LABEL_41;
        }
        if (v39 < 1)
        {
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        v18 = 0;
        v41 = a7[2];
        do
        {
          if ((v38 & 0xC000000000000001) != 0)
            v42 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v38);
          else
            v42 = *(id *)(v38 + 8 * v18 + 32);
          v43 = v42;
          ++v18;
          v72 = v42;
          sub_1001645E0(&v72, v41, v40, (uint64_t *)(a9 + 16));

        }
        while (v39 != v18);
LABEL_41:
        swift_bridgeObjectRelease_n(v38, 2);
        v44 = sub_10000EDC8(&qword_10047E4D0);
        v45 = swift_allocObject(v44, 96, 15);
        *(_OWORD *)(v45 + 16) = xmmword_1003B0AF0;
        v46 = (_QWORD *)a7[3];
        v47 = v46[2];
        if (v47)
        {
          v48 = v73;
          if (v73[2])
          {
            v49 = v45;
            v50 = v46[4];
            v18 = v46[5];
            swift_bridgeObjectRetain(v18);
            v51 = sub_1000C80A8(v50, v18);
            if ((v52 & 1) == 0)
            {
LABEL_66:
              swift_bridgeObjectRelease(v18);
              __break(1u);
              goto LABEL_67;
            }
            v53 = *(float *)(v48[7] + 12 * v51);
            swift_bridgeObjectRelease(v18);
            *(double *)&v54 = SIMD3<>.init(_:)(v53);
            *(_OWORD *)(v49 + 32) = v54;
            if (v47 >= 2)
            {
              if (v48[2])
              {
                v55 = v46[6];
                v18 = v46[7];
                swift_bridgeObjectRetain(v18);
                v56 = sub_1000C80A8(v55, v18);
                if ((v57 & 1) == 0)
                {
LABEL_67:
                  swift_bridgeObjectRelease(v18);
                  __break(1u);
                  goto LABEL_68;
                }
                v58 = *(float *)(v48[7] + 12 * v56);
                swift_bridgeObjectRelease(v18);
                *(double *)&v59 = SIMD3<>.init(_:)(v58);
                *(_OWORD *)(v49 + 48) = v59;
                if (v47 >= 3)
                {
                  if (v48[2])
                  {
                    v60 = v46[8];
                    v18 = v46[9];
                    swift_bridgeObjectRetain(v18);
                    v61 = sub_1000C80A8(v60, v18);
                    if ((v62 & 1) == 0)
                    {
LABEL_68:
                      swift_bridgeObjectRelease(v18);
                      __break(1u);
                      goto LABEL_69;
                    }
                    v63 = *(float *)(v48[7] + 12 * v61);
                    swift_bridgeObjectRelease(v18);
                    *(double *)&v64 = SIMD3<>.init(_:)(v63);
                    *(_OWORD *)(v49 + 64) = v64;
                    if (v47 >= 4)
                    {
                      if (v48[2])
                      {
                        v65 = v46[10];
                        v18 = v46[11];
                        swift_bridgeObjectRetain(v18);
                        v66 = sub_1000C80A8(v65, v18);
                        if ((v67 & 1) != 0)
                        {
                          v68 = *(float *)(v48[7] + 12 * v66);
                          swift_bridgeObjectRelease(v18);
                          *(double *)&v69 = SIMD3<>.init(_:)(v68);
                          *(_OWORD *)(v49 + 80) = v69;
                          sub_100159DEC((float32x2_t *)v49);
                          swift_setDeallocating(v49);
                          swift_deallocClassInstance(v49, 32, 7);
                          swift_bridgeObjectRelease(v48);
                          return;
                        }
LABEL_69:
                        swift_bridgeObjectRelease(v18);
                        __break(1u);
                        return;
                      }
                      goto LABEL_62;
                    }
LABEL_61:
                    __break(1u);
LABEL_62:
                    __break(1u);
                    goto LABEL_63;
                  }
LABEL_60:
                  __break(1u);
                  goto LABEL_61;
                }
LABEL_59:
                __break(1u);
                goto LABEL_60;
              }
LABEL_58:
              __break(1u);
              goto LABEL_59;
            }
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_57;
      }
    }
  }
}

void sub_1001622D8(_QWORD **a1, _QWORD *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  float v5;
  float v6;
  float v7;
  float v8;
  float v9;
  float v10;
  uint64_t v11;
  _QWORD *v15;
  uint64_t (*v16)(void);
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  float *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  float *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  float *v56;
  float v57;
  float v58;
  float v59;
  uint64_t v60;
  double v61;
  float v62;
  float v63;
  float v64;
  float v65;
  float v66;
  float v67;
  float v68;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v70;
  float v71;
  float v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[13];

  v11 = v4;
  v15 = *a1;
  v16 = *(uint64_t (**)(void))((swift_isaMask & **a1) + 0x250);
  v17 = *a1;
  v18 = v16();
  v19 = v18;
  if ((v18 & 0xC000000000000001) != 0)
  {
    v20 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v18);
  }
  else
  {
    if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_22;
    }
    v20 = *(id *)(v18 + 32);
  }
  v21 = v20;
  v22 = ((uint64_t (*)(uint64_t))swift_bridgeObjectRelease)(v19);
  v23 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v21) + 0xB8))(v22);
  v73 = v24;
  v74 = v23;

  v25 = v16();
  v17 = (_QWORD *)v25;
  v75[12] = v4;
  if ((v25 & 0xC000000000000001) != 0)
  {
LABEL_22:
    v19 = a4;
    v26 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
    goto LABEL_7;
  }
  if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_24:
    v38 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
    goto LABEL_12;
  }
  v19 = a4;
  v26 = *(id *)(v25 + 32);
LABEL_7:
  v27 = v26;
  v28 = ((uint64_t (*)(_QWORD *))swift_bridgeObjectRelease)(v17);
  v29 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v27) + 0xB8))(v28);
  v31 = v30;

  swift_beginAccess(a3, v75, 32, 0);
  v32 = *a3;
  if (!*(_QWORD *)(*a3 + 16))
    goto LABEL_28;
  v33 = sub_1000C80A8(v29, v31);
  if ((v34 & 1) == 0)
    goto LABEL_28;
  v35 = (float *)(*(_QWORD *)(v32 + 56) + 12 * v33);
  v7 = *v35;
  v6 = v35[1];
  v5 = v35[2];
  swift_endAccess(v75);
  v36 = ((uint64_t (*)(uint64_t))swift_bridgeObjectRelease)(v31);
  v37 = ((uint64_t (*)(uint64_t))v16)(v36);
  v11 = v37;
  if ((v37 & 0xC000000000000001) != 0)
    goto LABEL_24;
  if (!*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_26;
  }
  v38 = *(id *)(v37 + 32);
LABEL_12:
  v39 = ((uint64_t (*)(uint64_t))swift_bridgeObjectRelease)(v11);
  v40 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v38) + 0xB8))(v39);
  v31 = v41;

  swift_beginAccess(v19, v75, 32, 0);
  v42 = *(_QWORD *)v19;
  if (!*(_QWORD *)(*(_QWORD *)v19 + 16))
    goto LABEL_29;
  v43 = sub_1000C80A8(v40, v31);
  if ((v44 & 1) == 0)
    goto LABEL_29;
  v45 = (float *)(*(_QWORD *)(v42 + 56) + 12 * v43);
  v10 = *v45;
  v9 = v45[1];
  v8 = v45[2];
  swift_endAccess(v75);
  v46 = ((uint64_t (*)(uint64_t))swift_bridgeObjectRelease)(v31);
  v47 = ((uint64_t (*)(uint64_t))v16)(v46);
  v11 = v47;
  v71 = v6;
  v72 = v5;
  if ((v47 & 0xC000000000000001) != 0)
  {
LABEL_26:
    v48 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
    goto LABEL_17;
  }
  if (!*(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_28:
    swift_bridgeObjectRelease(v31);
    swift_endAccess(v75);
    __break(1u);
LABEL_29:
    swift_bridgeObjectRelease(v31);
    swift_endAccess(v75);
    __break(1u);
    goto LABEL_30;
  }
  v48 = *(id *)(v47 + 32);
LABEL_17:
  v49 = v48;
  v50 = ((uint64_t (*)(uint64_t))swift_bridgeObjectRelease)(v11);
  v51 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v49) + 0xB8))(v50);
  v15 = v52;

  swift_beginAccess(a3, v75, 32, 0);
  v53 = *a3;
  if (*(_QWORD *)(*a3 + 16))
  {
    v54 = sub_1000C80A8(v51, (uint64_t)v15);
    if ((v55 & 1) != 0)
    {
      v56 = (float *)(*(_QWORD *)(v53 + 56) + 12 * v54);
      v58 = *v56;
      v57 = v56[1];
      v59 = v56[2];
      swift_endAccess(v75);
      swift_bridgeObjectRelease(v15);
      v60 = - infix(_:_:)(v10, v9, v8, v58, v57, v59);
      v61 = * infix(_:_:)(v60);
      v64 = + infix(_:_:)(v7, v71, v72, *(float *)&v61, v62, v63);
      v66 = v65;
      v68 = v67;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a2);
      v75[0] = *a2;
      *a2 = 0x8000000000000000;
      sub_1000BD198(v74, v73, isUniquelyReferenced_nonNull_native, v64, v66, v68);
      v70 = *a2;
      *a2 = v75[0];
      swift_bridgeObjectRelease(v73);
      swift_bridgeObjectRelease(v70);
      return;
    }
  }
LABEL_30:
  swift_bridgeObjectRelease(v15);
  swift_endAccess(v75);
  __break(1u);
}

double sub_100162708(uint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  void (*v6)(_QWORD *, __n128);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  double result;

  if (a1 && (a3 & 1) != 0)
  {
    v6 = (void (*)(_QWORD *, __n128))a1;
    v7 = swift_retain();
    v6(a4, v7);
    a1 = sub_1000217BC((uint64_t)v6, a2);
  }
  v8 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a4) + 0xD0))(a1);
  v9 = (*(uint64_t (**)(void))((swift_isaMask & *a4) + 0xB8))();
  v11 = v10;
  sub_10015FB7C(v8, v9, v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

uint64_t sub_1001627BC()
{
  uint64_t v0;
  void *v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  v1 = *(void **)(v0 + 48);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for RectangleRenderer()
{
  return objc_opt_self(_TtC7Measure17RectangleRenderer);
}

uint64_t sub_100162834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  int64_t v22;
  _BYTE v23[24];

  swift_beginAccess(v0 + 24, v23, 0, 0);
  v1 = *(_QWORD *)(v0 + 24);
  v21 = v1 + 64;
  v2 = 1 << *(_BYTE *)(v1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(v1 + 64);
  v22 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain(v1);
  v6 = 0;
  while (v4)
  {
    v7 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v8 = v7 | (v6 << 6);
LABEL_20:
    v12 = *(_QWORD *)(v1 + 56);
    if (*(_QWORD *)(v12 + 48 * v8) != 5)
    {
      v13 = (_QWORD *)(v12 + 48 * v8);
      v14 = v13[4];
      v15 = (void *)v13[5];
      v17 = v13[2];
      v16 = v13[3];
      v18 = v13[1];
      v19 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v8 + 8);
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRetain(v14);
      v20 = v15;
      objc_msgSend(v20, "removeFromParentNode");

      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v18);
      result = swift_bridgeObjectRelease(v19);
    }
  }
  v9 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v9 >= v22)
    return swift_release(v1);
  v10 = *(_QWORD *)(v21 + 8 * v9);
  ++v6;
  if (v10)
    goto LABEL_19;
  v6 = v9 + 1;
  if (v9 + 1 >= v22)
    return swift_release(v1);
  v10 = *(_QWORD *)(v21 + 8 * v6);
  if (v10)
    goto LABEL_19;
  v6 = v9 + 2;
  if (v9 + 2 >= v22)
    return swift_release(v1);
  v10 = *(_QWORD *)(v21 + 8 * v6);
  if (v10)
  {
LABEL_19:
    v4 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v6 << 6);
    goto LABEL_20;
  }
  v11 = v9 + 3;
  if (v11 >= v22)
    return swift_release(v1);
  v10 = *(_QWORD *)(v21 + 8 * v11);
  if (v10)
  {
    v6 = v11;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v6 >= v22)
      return swift_release(v1);
    v10 = *(_QWORD *)(v21 + 8 * v6);
    ++v11;
    if (v10)
      goto LABEL_19;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_100162A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t i;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  int64_t v28;
  char v29[24];

  swift_beginAccess(v0 + 24, v29, 0, 0);
  v1 = *(_QWORD *)(v0 + 24);
  v25 = v0;
  v26 = v1 + 64;
  v2 = 1 << *(_BYTE *)(v1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(v1 + 64);
  v27 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain(v1);
  for (i = 0; ; i = v28)
  {
    if (v4)
    {
      v7 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v28 = i;
      v8 = v7 | (i << 6);
      goto LABEL_21;
    }
    v9 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v27)
      return swift_release(v1);
    v10 = *(_QWORD *)(v26 + 8 * v9);
    v11 = i + 1;
    if (!v10)
    {
      v11 = i + 2;
      if (i + 2 >= v27)
        return swift_release(v1);
      v10 = *(_QWORD *)(v26 + 8 * v11);
      if (!v10)
      {
        v11 = i + 3;
        if (i + 3 >= v27)
          return swift_release(v1);
        v10 = *(_QWORD *)(v26 + 8 * v11);
        if (!v10)
          break;
      }
    }
LABEL_20:
    v4 = (v10 - 1) & v10;
    v28 = v11;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_21:
    v13 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v8 + 8);
    v14 = (_QWORD *)(*(_QWORD *)(v1 + 56) + 48 * v8);
    v15 = v14[1];
    v16 = v14[2];
    v17 = v14[3];
    v18 = v14[4];
    v19 = (void *)v14[5];
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v18);
    v20 = v19;
    v21 = objc_msgSend(v20, "parentNode");

    if (!v21)
    {
      v22 = *(void **)(v25 + 56);
      v23 = v1;
      v24 = v20;
      objc_msgSend(v22, "addChildNode:", v24);

      v1 = v23;
    }

    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v15);
    result = swift_bridgeObjectRelease(v13);
  }
  v12 = i + 4;
  if (i + 4 >= v27)
    return swift_release(v1);
  v10 = *(_QWORD *)(v26 + 8 * v12);
  if (v10)
  {
    v11 = i + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v27)
      return swift_release(v1);
    v10 = *(_QWORD *)(v26 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100162CC8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100162CEC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  swift_release(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));

  swift_release(*(_QWORD *)(v0 + 112));
  swift_release(*(_QWORD *)(v0 + 120));
  return swift_deallocObject(v0, 128, 7);
}

void sub_100162D68(uint64_t a1)
{
  uint64_t v1;

  sub_100161CE8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD **)(v1 + 48), *(_QWORD *)(v1 + 56), (_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
}

uint64_t sub_100162DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100162DB0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100162DB8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

double sub_100162DF4()
{
  uint64_t v0;

  return sub_100162708(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD **)(v0 + 40));
}

void (*sub_100162E04(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v3;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;

  v7 = malloc(0x58uLL);
  *a1 = v7;
  v7[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  swift_bridgeObjectRetain(a3);
  v7[9] = sub_1001632D8(v7);
  v7[10] = sub_100162F9C(v7 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_100162E94;
}

void sub_100162E94(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  uint64_t v3;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease(v3);
  v2(v1, 0);
  free(v1);
}

void (*sub_100162EE4(double ***a1, double a2))(uint64_t a1)
{
  _QWORD *v2;
  double **v5;
  char isUniquelyReferenced_nonNull_native;

  v5 = (double **)malloc(0x50uLL);
  *a1 = v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v5[8] = (double *)sub_100163304(v5);
  v5[9] = (double *)sub_100163138(v5 + 4, isUniquelyReferenced_nonNull_native, a2);
  return sub_100162F60;
}

void sub_100162F60(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  v2(v1, 0);
  free(v1);
}

void (*sub_100162F9C(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  char *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = (char *)malloc(0x58uLL);
  *a1 = v10;
  *((_QWORD *)v10 + 7) = a3;
  *((_QWORD *)v10 + 8) = v5;
  *((_QWORD *)v10 + 6) = a2;
  v11 = *v5;
  v13 = sub_1000C80A8(a2, a3);
  v10[80] = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      *((_QWORD *)v10 + 9) = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*v5 + 56) + 48 * v13;
        v20 = *(_QWORD *)v19;
        v21 = *(_OWORD *)(v19 + 8);
        v22 = *(_OWORD *)(v19 + 24);
        v23 = *(_QWORD *)(v19 + 40);
LABEL_12:
        *(_QWORD *)v10 = v20;
        *(_OWORD *)(v10 + 8) = v21;
        *(_OWORD *)(v10 + 24) = v22;
        *((_QWORD *)v10 + 5) = v23;
        return sub_1001630F4;
      }
LABEL_11:
      v20 = 0;
      v23 = 0;
      v21 = 0uLL;
      v22 = 0uLL;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1000BF8FC();
      goto LABEL_7;
    }
    sub_1000B9B90(v16, a4 & 1);
    v24 = sub_1000C80A8(a2, a3);
    if ((v17 & 1) == (v25 & 1))
    {
      v13 = v24;
      *((_QWORD *)v10 + 9) = v24;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_1001630F4(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_100163324(*a1, *((_BYTE *)*a1 + 80), (uint64_t *)(*a1)[8], (*a1)[9], (*a1)[6], (*a1)[7]);
  sub_10013FDEC(*v1, v1[1], v1[2], v1[3], v1[4], (void *)v1[5]);
  free(v1);
}

void (*sub_100163138(double **a1, char a2, double a3))(uint64_t **a1)
{
  uint64_t *v3;
  uint64_t *v4;
  double *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = (double *)malloc(0x28uLL);
  *a1 = v8;
  *((_QWORD *)v8 + 2) = v4;
  v8[1] = a3;
  v9 = *v4;
  v11 = sub_1000C827C(a3);
  *((_BYTE *)v8 + 32) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a2 & 1) != 0)
    {
LABEL_7:
      *((_QWORD *)v8 + 3) = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *(_QWORD *)v8 = v17;
        return sub_100163258;
      }
LABEL_11:
      v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a2 & 1) == 0)
    {
      sub_1000C0068();
      goto LABEL_7;
    }
    sub_1000BAAC0(v14, a2 & 1);
    v18 = sub_1000C827C(a3);
    if ((v15 & 1) == (v19 & 1))
    {
      v11 = v18;
      *((_QWORD *)v8 + 3) = v18;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Double);
  __break(1u);
  return result;
}

void sub_100163258(uint64_t **a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = *a1;
  v2 = **a1;
  v3 = *((_BYTE *)*a1 + 32);
  if (v2)
  {
    v4 = v1[3];
    v5 = *(_QWORD **)v1[2];
    if ((v3 & 1) != 0)
      *(_QWORD *)(v5[7] + 8 * v4) = v2;
    else
      sub_1000BE39C(v4, v2, v5, *((double *)v1 + 1));
  }
  else if (((*a1)[4] & 1) != 0)
  {
    sub_100094E50(v1[3], *(_QWORD *)v1[2]);
  }
  v6 = *v1;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRelease(v6);
  free(v1);
}

uint64_t (*sub_1001632D8(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1001632F8;
}

uint64_t sub_1001632F8(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t (*sub_100163304(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_100164B04;
}

id sub_100163324(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v9 = *a1;
  v8 = a1[1];
  v10 = a1[2];
  v11 = a1[3];
  v12 = a1[4];
  v13 = (void *)a1[5];
  if (v8)
  {
    *(_QWORD *)&v18 = *a1;
    *((_QWORD *)&v18 + 1) = v8;
    *(_QWORD *)&v19 = v10;
    *((_QWORD *)&v19 + 1) = v11;
    *(_QWORD *)&v20 = v12;
    *((_QWORD *)&v20 + 1) = v13;
    if ((a2 & 1) != 0)
    {
      v14 = (_OWORD *)(*(_QWORD *)(*a3 + 56) + 48 * a4);
      v15 = v19;
      *v14 = v18;
      v14[1] = v15;
      v14[2] = v20;
    }
    else
    {
      sub_1000BE290(a4, a5, a6, &v18, (_QWORD *)*a3);
      swift_bridgeObjectRetain(a6);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy(*(_QWORD *)(*a3 + 48) + 16 * a4, 1, &type metadata for String);
    sub_100094AC0(a4, *a3);
  }
  return sub_100164A10(v9, v8, v10, v11, v12, v13);
}

void sub_10016341C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD aBlock[6];

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v8 | (v7 << 6); ; i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    v13 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * i);
    sub_100018148(0, (unint64_t *)&qword_10047C128, NSObject_ptr);
    v14 = v13;
    if ((static NSObject.== infix(_:_:)(v14, a2) & 1) != 0)
    {
LABEL_31:
      swift_release();
      return;
    }
    v15 = swift_allocObject(&unk_100448E28, 24, 7);
    *(_QWORD *)(v15 + 16) = a2;
    v16 = swift_allocObject(&unk_100448E50, 32, 7);
    *(_QWORD *)(v16 + 16) = sub_100164A98;
    *(_QWORD *)(v16 + 24) = v15;
    aBlock[4] = sub_100164B40;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100161684;
    aBlock[3] = &unk_100448E68;
    v17 = _Block_copy(aBlock);
    v18 = a2;
    swift_retain();
    v19 = objc_msgSend(v14, "childNodesPassingTest:", v17, swift_release().n128_f64[0]);
    _Block_release(v17);
    LOBYTE(v17) = swift_isEscapingClosureAtFileLocation(v16, "", 107, 70, 63, 1);
    swift_release();
    if ((v17 & 1) != 0)
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v20 = sub_100018148(0, &qword_10047BCE8, SCNNode_ptr);
    v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

    if ((unint64_t)v21 >> 62)
    {
      if (v21 < 0)
        v23 = v21;
      else
        v23 = v21 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v21);
      v22 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_release();
      swift_bridgeObjectRelease(v21);
    }
    else
    {
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_release();
    }
    swift_bridgeObjectRelease(v21);
    if (v22 == 1)
      goto LABEL_31;

    if (v6)
      goto LABEL_4;
LABEL_5:
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_34;
    if (v10 >= v25)
      goto LABEL_31;
    v11 = *(_QWORD *)(v24 + 8 * v10);
    ++v7;
    if (!v11)
    {
      v7 = v10 + 1;
      if (v10 + 1 >= v25)
        goto LABEL_31;
      v11 = *(_QWORD *)(v24 + 8 * v7);
      if (!v11)
      {
        v7 = v10 + 2;
        if (v10 + 2 >= v25)
          goto LABEL_31;
        v11 = *(_QWORD *)(v24 + 8 * v7);
        if (!v11)
        {
          v7 = v10 + 3;
          if (v10 + 3 >= v25)
            goto LABEL_31;
          v11 = *(_QWORD *)(v24 + 8 * v7);
          if (!v11)
          {
            v12 = v10 + 4;
            if (v12 >= v25)
              goto LABEL_31;
            v11 = *(_QWORD *)(v24 + 8 * v12);
            v7 = v12;
            if (!v11)
              break;
          }
        }
      }
    }
LABEL_19:
    v6 = (v11 - 1) & v11;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v25)
      goto LABEL_31;
    v11 = *(_QWORD *)(v24 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_19;
  }
LABEL_35:
  __break(1u);
}

void sub_100163784(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD aBlock[6];

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v8 | (v7 << 6); ; i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    v13 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * i);
    sub_100018148(0, (unint64_t *)&qword_10047C128, NSObject_ptr);
    v14 = v13;
    if ((static NSObject.== infix(_:_:)(v14, a2) & 1) != 0)
    {
LABEL_31:
      swift_release();
      return;
    }
    v15 = swift_allocObject(&unk_100448DB0, 24, 7);
    *(_QWORD *)(v15 + 16) = a2;
    v16 = swift_allocObject(&unk_100448DD8, 32, 7);
    *(_QWORD *)(v16 + 16) = sub_100164A98;
    *(_QWORD *)(v16 + 24) = v15;
    aBlock[4] = sub_100164B40;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100161684;
    aBlock[3] = &unk_100448DF0;
    v17 = _Block_copy(aBlock);
    v18 = a2;
    swift_retain();
    v19 = objc_msgSend(v14, "childNodesPassingTest:", v17, swift_release().n128_f64[0]);
    _Block_release(v17);
    LOBYTE(v17) = swift_isEscapingClosureAtFileLocation(v16, "", 107, 71, 58, 1);
    swift_release();
    if ((v17 & 1) != 0)
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v20 = sub_100018148(0, &qword_10047BCE8, SCNNode_ptr);
    v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

    if ((unint64_t)v21 >> 62)
    {
      if (v21 < 0)
        v23 = v21;
      else
        v23 = v21 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v21);
      v22 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_release();
      swift_bridgeObjectRelease(v21);
    }
    else
    {
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_release();
    }
    swift_bridgeObjectRelease(v21);
    if (v22 == 1)
      goto LABEL_31;

    if (v6)
      goto LABEL_4;
LABEL_5:
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_34;
    if (v10 >= v25)
      goto LABEL_31;
    v11 = *(_QWORD *)(v24 + 8 * v10);
    ++v7;
    if (!v11)
    {
      v7 = v10 + 1;
      if (v10 + 1 >= v25)
        goto LABEL_31;
      v11 = *(_QWORD *)(v24 + 8 * v7);
      if (!v11)
      {
        v7 = v10 + 2;
        if (v10 + 2 >= v25)
          goto LABEL_31;
        v11 = *(_QWORD *)(v24 + 8 * v7);
        if (!v11)
        {
          v7 = v10 + 3;
          if (v10 + 3 >= v25)
            goto LABEL_31;
          v11 = *(_QWORD *)(v24 + 8 * v7);
          if (!v11)
          {
            v12 = v10 + 4;
            if (v12 >= v25)
              goto LABEL_31;
            v11 = *(_QWORD *)(v24 + 8 * v12);
            v7 = v12;
            if (!v11)
              break;
          }
        }
      }
    }
LABEL_19:
    v6 = (v11 - 1) & v11;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v25)
      goto LABEL_31;
    v11 = *(_QWORD *)(v24 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_19;
  }
LABEL_35:
  __break(1u);
}

void sub_100163AEC(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD aBlock[6];

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v8 | (v7 << 6); ; i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    v13 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * i);
    sub_100018148(0, (unint64_t *)&qword_10047C128, NSObject_ptr);
    v14 = v13;
    if ((static NSObject.== infix(_:_:)(v14, a2) & 1) != 0)
    {
LABEL_31:
      swift_release();
      return;
    }
    v15 = swift_allocObject(&unk_100448D38, 24, 7);
    *(_QWORD *)(v15 + 16) = a2;
    v16 = swift_allocObject(&unk_100448D60, 32, 7);
    *(_QWORD *)(v16 + 16) = sub_100164A98;
    *(_QWORD *)(v16 + 24) = v15;
    aBlock[4] = sub_100164B40;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100161684;
    aBlock[3] = &unk_100448D78;
    v17 = _Block_copy(aBlock);
    v18 = a2;
    swift_retain();
    v19 = objc_msgSend(v14, "childNodesPassingTest:", v17, swift_release().n128_f64[0]);
    _Block_release(v17);
    LOBYTE(v17) = swift_isEscapingClosureAtFileLocation(v16, "", 107, 72, 59, 1);
    swift_release();
    if ((v17 & 1) != 0)
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v20 = sub_100018148(0, &qword_10047BCE8, SCNNode_ptr);
    v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

    if ((unint64_t)v21 >> 62)
    {
      if (v21 < 0)
        v23 = v21;
      else
        v23 = v21 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v21);
      v22 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_release();
      swift_bridgeObjectRelease(v21);
    }
    else
    {
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_release();
    }
    swift_bridgeObjectRelease(v21);
    if (v22 == 1)
      goto LABEL_31;

    if (v6)
      goto LABEL_4;
LABEL_5:
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_34;
    if (v10 >= v25)
      goto LABEL_31;
    v11 = *(_QWORD *)(v24 + 8 * v10);
    ++v7;
    if (!v11)
    {
      v7 = v10 + 1;
      if (v10 + 1 >= v25)
        goto LABEL_31;
      v11 = *(_QWORD *)(v24 + 8 * v7);
      if (!v11)
      {
        v7 = v10 + 2;
        if (v10 + 2 >= v25)
          goto LABEL_31;
        v11 = *(_QWORD *)(v24 + 8 * v7);
        if (!v11)
        {
          v7 = v10 + 3;
          if (v10 + 3 >= v25)
            goto LABEL_31;
          v11 = *(_QWORD *)(v24 + 8 * v7);
          if (!v11)
          {
            v12 = v10 + 4;
            if (v12 >= v25)
              goto LABEL_31;
            v11 = *(_QWORD *)(v24 + 8 * v12);
            v7 = v12;
            if (!v11)
              break;
          }
        }
      }
    }
LABEL_19:
    v6 = (v11 - 1) & v11;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v25)
      goto LABEL_31;
    v11 = *(_QWORD *)(v24 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_19;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_100163E54(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  NSString v5;
  unsigned __int8 v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v4 = *(_QWORD *)(Defaults.hideRectangleSuggestions.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain(v4);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "BOOLForKey:", v5, swift_bridgeObjectRelease(v4).n128_f64[0]);

  *(_BYTE *)(v1 + 16) = v6;
  *(_QWORD *)(v1 + 24) = sub_1000C7500((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  v7 = objc_msgSend(objc_allocWithZone((Class)SCNNode), "init");
  *(_QWORD *)(v1 + 56) = v7;
  v8 = objc_msgSend(objc_allocWithZone((Class)SCNNode), "init");
  *(_QWORD *)(v1 + 64) = v8;
  v9 = objc_msgSend(objc_allocWithZone((Class)SCNNode), "init");
  *(_QWORD *)(v1 + 72) = v9;
  *(_QWORD *)(v1 + 80) = a1;
  v10 = (void *)objc_opt_self(SCNTransaction);
  v11 = a1;
  objc_msgSend(v10, "begin");
  if ((v6 & 1) == 0)
    objc_msgSend(v9, "addChildNode:", v7);
  objc_msgSend(v9, "addChildNode:", v8);
  v12 = objc_msgSend(v11, "rootNode");
  objc_msgSend(v12, "addChildNode:", v9);

  objc_msgSend(v10, "commit");
  return v1;
}

void sub_100163FEC(_QWORD **a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  __n128 v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  unsigned __int32 *v34;
  unsigned __int32 v35;
  unsigned __int32 v36;
  unsigned __int32 v37;
  __n128 v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t (*v44)(void);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  id v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  float *v57;
  float v58;
  float v59;
  float v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  float *v67;
  float v68;
  float v69;
  float v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  float *v77;
  float v78;
  float v79;
  float v80;
  uint64_t v81;
  double v82;
  float v83;
  float v84;
  float v85;
  float32x4_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  float *v92;
  float v93;
  float v94;
  float v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  float *v102;
  float v103;
  float v104;
  float v105;
  __n128 v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  unint64_t v110;
  char v111;
  float *v112;
  float v113;
  float v114;
  float v115;
  uint64_t v116;
  double v117;
  float v118;
  float v119;
  float v120;
  float32x4_t v121;
  double v122;
  double v123;
  double v124;
  double v125;
  float v126;
  float v127;
  float32x4_t v128;
  uint64_t *v130;
  _BYTE v131[24];
  uint64_t v132;

  v7 = v6;
  v12 = *a1;
  v13 = *(uint64_t (**)(void))((swift_isaMask & **a1) + 0x250);
  v14 = v13();
  v15 = v14;
  v132 = v6;
  v130 = a5;
  if ((v14 & 0xC000000000000001) != 0)
  {
    v16 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
  }
  else
  {
    if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_29;
    }
    v16 = *(id *)(v14 + 32);
  }
  v17 = v16;
  v18 = swift_bridgeObjectRelease(v15);
  v19 = (*(uint64_t (**)(__n128))((swift_isaMask & *v17) + 0xB8))(v18);
  v21 = v20;

  if (!a3[2])
    goto LABEL_31;
  v22 = sub_1000C80A8(v19, v21);
  if ((v23 & 1) == 0)
    goto LABEL_31;
  a3 = *(id *)(a3[7] + 8 * v22);
  v24 = swift_bridgeObjectRelease(v21);
  v25 = ((uint64_t (*)(__n128))v13)(v24);
  v7 = v25;
  if ((v25 & 0xC000000000000001) != 0)
  {
LABEL_29:
    v26 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
    goto LABEL_9;
  }
  if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease(v21);
    __break(1u);
LABEL_32:
    swift_bridgeObjectRelease(v21);
    __break(1u);
LABEL_33:
    swift_bridgeObjectRelease(a4);
    __break(1u);
LABEL_34:
    swift_bridgeObjectRelease(a4);
    __break(1u);
LABEL_35:
    swift_bridgeObjectRelease(a4);
    __break(1u);
LABEL_36:
    swift_bridgeObjectRelease(a4);
    __break(1u);
    goto LABEL_37;
  }
  v26 = *(id *)(v25 + 32);
LABEL_9:
  v27 = v26;
  v28 = swift_bridgeObjectRelease(v7);
  v29 = (*(uint64_t (**)(__n128))((swift_isaMask & *v27) + 0xB8))(v28);
  v21 = v30;

  v31 = *(_QWORD *)a4;
  if (!*(_QWORD *)(*(_QWORD *)a4 + 16))
    goto LABEL_32;
  v32 = sub_1000C80A8(v29, v21);
  if ((v33 & 1) == 0)
    goto LABEL_32;
  v34 = (unsigned __int32 *)(*(_QWORD *)(v31 + 56) + 12 * v32);
  v35 = *v34;
  v36 = v34[1];
  v37 = v34[2];
  v38 = swift_bridgeObjectRelease(v21);
  v38.n128_u32[0] = v35;
  LODWORD(v39) = v36;
  LODWORD(v40) = v37;
  objc_msgSend(*(id *)((char *)a3 + OBJC_IVAR____TtC7Measure11PointRender_point), "setWorldPosition:", v38.n128_f64[0], v39, v40);
  LODWORD(v41) = v35;
  LODWORD(v42) = v36;
  LODWORD(v43) = v37;
  objc_msgSend(*(id *)((char *)a3 + OBJC_IVAR____TtC7Measure11PointRender_pointPrime), "setWorldPosition:", v41, v42, v43);

  v44 = *(uint64_t (**)(void))((swift_isaMask & *v12) + 0xB8);
  v45 = v44();
  v47 = v46;
  if (!*(_QWORD *)(a2 + 16) || (v48 = sub_1000C80A8(v45, v46), (v49 & 1) == 0))
  {
    swift_bridgeObjectRelease(v47);
    return;
  }
  v50 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v48);
  v51 = swift_bridgeObjectRelease(v47);
  v52 = ((uint64_t (*)(__n128))v44)(v51);
  a4 = v53;
  swift_beginAccess(v130, v131, 32, 0);
  v54 = *v130;
  if (!*(_QWORD *)(*v130 + 16))
    goto LABEL_33;
  v55 = sub_1000C80A8(v52, a4);
  if ((v56 & 1) == 0)
    goto LABEL_33;
  v57 = (float *)(*(_QWORD *)(v54 + 56) + 24 * v55);
  v59 = *v57;
  v58 = v57[1];
  v60 = v57[2];
  swift_endAccess(v131);
  v61 = swift_bridgeObjectRelease(a4);
  v62 = ((uint64_t (*)(__n128))v44)(v61);
  a4 = v63;
  swift_beginAccess(a6, v131, 32, 0);
  v64 = *a6;
  if (!*(_QWORD *)(*a6 + 16))
    goto LABEL_34;
  v65 = sub_1000C80A8(v62, a4);
  if ((v66 & 1) == 0)
    goto LABEL_34;
  v127 = v58;
  v67 = (float *)(*(_QWORD *)(v64 + 56) + 24 * v65);
  v68 = *v67;
  v69 = v67[1];
  v70 = v67[2];
  swift_endAccess(v131);
  v71 = swift_bridgeObjectRelease(a4);
  v72 = ((uint64_t (*)(__n128))v44)(v71);
  a4 = v73;
  swift_beginAccess(v130, v131, 32, 0);
  v74 = *v130;
  if (!*(_QWORD *)(*v130 + 16))
    goto LABEL_35;
  v75 = sub_1000C80A8(v72, a4);
  if ((v76 & 1) == 0)
    goto LABEL_35;
  v77 = (float *)(*(_QWORD *)(v74 + 56) + 24 * v75);
  v79 = *v77;
  v78 = v77[1];
  v80 = v77[2];
  swift_endAccess(v131);
  swift_bridgeObjectRelease(a4);
  v81 = - infix(_:_:)(v68, v69, v70, v79, v78, v80);
  v82 = * infix(_:_:)(v81);
  v85 = + infix(_:_:)(v59, v127, v60, *(float *)&v82, v83, v84);
  *(double *)v86.i64 = SIMD3<>.init(_:)(v85);
  v128 = v86;
  v87 = v44();
  a4 = v88;
  swift_beginAccess(v130, v131, 32, 0);
  v89 = *v130;
  if (!*(_QWORD *)(*v130 + 16))
    goto LABEL_36;
  v90 = sub_1000C80A8(v87, a4);
  if ((v91 & 1) == 0)
    goto LABEL_36;
  v92 = (float *)(*(_QWORD *)(v89 + 56) + 24 * v90);
  v94 = v92[3];
  v93 = v92[4];
  v95 = v92[5];
  swift_endAccess(v131);
  v96 = swift_bridgeObjectRelease(a4);
  v97 = ((uint64_t (*)(__n128))v44)(v96);
  a4 = v98;
  swift_beginAccess(a6, v131, 32, 0);
  v99 = *a6;
  if (*(_QWORD *)(*a6 + 16))
  {
    v100 = sub_1000C80A8(v97, a4);
    if ((v101 & 1) != 0)
    {
      v126 = v95;
      v102 = (float *)(*(_QWORD *)(v99 + 56) + 24 * v100);
      v103 = v102[3];
      v104 = v102[4];
      v105 = v102[5];
      swift_endAccess(v131);
      v106 = swift_bridgeObjectRelease(a4);
      v107 = ((uint64_t (*)(__n128))v44)(v106);
      v12 = v108;
      swift_beginAccess(v130, v131, 32, 0);
      v109 = *v130;
      if (*(_QWORD *)(*v130 + 16))
      {
        v110 = sub_1000C80A8(v107, (uint64_t)v12);
        if ((v111 & 1) != 0)
        {
          v112 = (float *)(*(_QWORD *)(v109 + 56) + 24 * v110);
          v114 = v112[3];
          v113 = v112[4];
          v115 = v112[5];
          swift_endAccess(v131);
          swift_bridgeObjectRelease(v12);
          v116 = - infix(_:_:)(v103, v104, v105, v114, v113, v115);
          v117 = * infix(_:_:)(v116);
          v120 = + infix(_:_:)(v94, v93, v126, *(float *)&v117, v118, v119);
          *(double *)v121.i64 = SIMD3<>.init(_:)(v120);
          sub_1000D7CC0(v128, v121, v122, v123, v124, v125);

          return;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_37:
  swift_bridgeObjectRelease(a4);
  __break(1u);
LABEL_38:
  swift_bridgeObjectRelease(v12);
  __break(1u);
}

void sub_1001645E0(_QWORD **a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  float *v17;
  float v18;
  float v19;
  float v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  float *v24;
  float v25;
  float v26;
  float v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  float *v31;
  float v32;
  float v33;
  float v34;
  uint64_t v35;
  double v36;
  float v37;
  float v38;
  float v39;
  float32x4_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  float *v44;
  float v45;
  float v46;
  float v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  float *v51;
  float v52;
  float v53;
  float v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  float *v58;
  float v59;
  float v60;
  float v61;
  uint64_t v62;
  double v63;
  float v64;
  float v65;
  float v66;
  float32x4_t v67;
  double v68;
  double v69;
  double v70;
  double v71;
  float32x4_t v72;
  _BYTE v73[24];
  float v74;
  float v75;

  v7 = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB8))();
  v9 = v8;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRelease(v8);
    return;
  }
  v10 = v7;
  swift_bridgeObjectRetain(v8);
  v11 = sub_1000C80A8(v10, v9);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease_n(v9, 2);
    return;
  }
  v13 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v11);
  swift_bridgeObjectRelease(v9);
  swift_beginAccess(a3, v73, 32, 0);
  v14 = *a3;
  if (!*(_QWORD *)(*a3 + 16))
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  swift_bridgeObjectRetain(v9);
  v15 = sub_1000C80A8(v10, v9);
  if ((v16 & 1) == 0)
  {
LABEL_24:
    swift_bridgeObjectRelease(v9);
    __break(1u);
    goto LABEL_25;
  }
  v17 = (float *)(*(_QWORD *)(v14 + 56) + 24 * v15);
  v19 = *v17;
  v18 = v17[1];
  v20 = v17[2];
  swift_endAccess(v73);
  swift_bridgeObjectRelease(v9);
  swift_beginAccess(a4, v73, 32, 0);
  v21 = *a4;
  if (!*(_QWORD *)(*a4 + 16))
    goto LABEL_19;
  swift_bridgeObjectRetain(v9);
  v22 = sub_1000C80A8(v10, v9);
  if ((v23 & 1) == 0)
  {
LABEL_25:
    swift_bridgeObjectRelease(v9);
    __break(1u);
    goto LABEL_26;
  }
  v24 = (float *)(*(_QWORD *)(v21 + 56) + 24 * v22);
  v26 = *v24;
  v25 = v24[1];
  v27 = v24[2];
  swift_endAccess(v73);
  swift_bridgeObjectRelease(v9);
  swift_beginAccess(a3, v73, 32, 0);
  v28 = *a3;
  if (!*(_QWORD *)(*a3 + 16))
    goto LABEL_20;
  v75 = v18;
  swift_bridgeObjectRetain(v9);
  v29 = sub_1000C80A8(v10, v9);
  if ((v30 & 1) == 0)
  {
LABEL_26:
    swift_bridgeObjectRelease(v9);
    __break(1u);
    goto LABEL_27;
  }
  v31 = (float *)(*(_QWORD *)(v28 + 56) + 24 * v29);
  v33 = *v31;
  v32 = v31[1];
  v34 = v31[2];
  swift_endAccess(v73);
  swift_bridgeObjectRelease(v9);
  v35 = - infix(_:_:)(v26, v25, v27, v33, v32, v34);
  v36 = * infix(_:_:)(v35);
  v39 = + infix(_:_:)(v19, v75, v20, *(float *)&v36, v37, v38);
  *(double *)v40.i64 = SIMD3<>.init(_:)(v39);
  v72 = v40;
  swift_beginAccess(a3, v73, 32, 0);
  v41 = *a3;
  if (!*(_QWORD *)(*a3 + 16))
    goto LABEL_21;
  swift_bridgeObjectRetain(v9);
  v42 = sub_1000C80A8(v10, v9);
  if ((v43 & 1) == 0)
  {
LABEL_27:
    swift_bridgeObjectRelease(v9);
    __break(1u);
    goto LABEL_28;
  }
  v44 = (float *)(*(_QWORD *)(v41 + 56) + 24 * v42);
  v46 = v44[3];
  v45 = v44[4];
  v47 = v44[5];
  swift_endAccess(v73);
  swift_bridgeObjectRelease(v9);
  swift_beginAccess(a4, v73, 32, 0);
  v48 = *a4;
  if (!*(_QWORD *)(*a4 + 16))
    goto LABEL_22;
  swift_bridgeObjectRetain(v9);
  v49 = sub_1000C80A8(v10, v9);
  if ((v50 & 1) != 0)
  {
    v51 = (float *)(*(_QWORD *)(v48 + 56) + 24 * v49);
    v53 = v51[3];
    v52 = v51[4];
    v54 = v51[5];
    swift_endAccess(v73);
    swift_bridgeObjectRelease(v9);
    swift_beginAccess(a3, v73, 32, 0);
    v55 = *a3;
    if (*(_QWORD *)(*a3 + 16))
    {
      v74 = v45;
      v75 = v47;
      swift_bridgeObjectRetain(v9);
      v56 = sub_1000C80A8(v10, v9);
      if ((v57 & 1) != 0)
      {
        v58 = (float *)(*(_QWORD *)(v55 + 56) + 24 * v56);
        v60 = v58[3];
        v59 = v58[4];
        v61 = v58[5];
        swift_endAccess(v73);
        swift_bridgeObjectRelease_n(v9, 2);
        v62 = - infix(_:_:)(v53, v52, v54, v60, v59, v61);
        v63 = * infix(_:_:)(v62);
        v66 = + infix(_:_:)(v46, v74, v75, *(float *)&v63, v64, v65);
        *(double *)v67.i64 = SIMD3<>.init(_:)(v66);
        sub_1000D7CC0(v72, v67, v68, v69, v70, v71);

        return;
      }
      goto LABEL_29;
    }
    goto LABEL_23;
  }
LABEL_28:
  swift_bridgeObjectRelease(v9);
  __break(1u);
LABEL_29:
  swift_bridgeObjectRelease(v9);
  __break(1u);
}

id sub_100164A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a5);
    return a6;
  }
  return result;
}

uint64_t sub_100164A74()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100164A98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10015EAA4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100164AA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100164AB0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_100164AD4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100164AE4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100164AF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double (*sub_100164B44())(const void *a1)
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  double (*v4)(const void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (uint64_t *)(v0 + qword_100486860);
  v2 = *(_QWORD *)(v0 + qword_100486860);
  v3 = *(_QWORD *)(v0 + qword_100486860 + 8);
  if (v2)
  {
    v4 = *(double (**)(const void *))(v0 + qword_100486860);
  }
  else
  {
    v5 = swift_allocObject(&unk_100448ED0, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16, v0);
    v6 = *v1;
    v7 = v1[1];
    v4 = sub_100166E48;
    *v1 = (uint64_t)sub_100166E48;
    v1[1] = v5;
    swift_retain();
    sub_1000217BC(v6, v7);
  }
  sub_100036254(v2, v3);
  return v4;
}

double sub_100164BF0(const void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  double result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v7 = (void *)Strong;
    swift_retain();
    Synchronized.wrappedValue.getter(&v11, v8);
    swift_release();
    swift_retain();
    swift_retain();
    Synchronized.wrappedValue.setter(&v11);
    swift_release();
    swift_release();
    v9 = type metadata accessor for RetainedFrame();
    v10 = swift_allocObject(v9, 544, 15);
    sub_1000471E8((uint64_t)a1);
    *(_QWORD *)(v10 + 16) = sub_10008F8B8();
    memcpy((void *)(v10 + 32), a1, 0x200uLL);
    v11 = v10;
    swift_retain();
    swift_retain();
    Synchronized.wrappedValue.setter(&v11);

    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

id sub_100164D1C(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  id v28;
  objc_super v30;
  uint64_t v31;
  _QWORD v32[64];
  _QWORD __src[60];
  _BYTE v34[488];

  ObjectType = (objc_class *)swift_getObjectType(v3);
  v8 = &v3[qword_100486860];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = qword_100486868;
  v32[0] = 0;
  v10 = sub_10000EDC8(&qword_100486B30);
  swift_allocObject(v10, 32, 7);
  v11 = v3;
  *(_QWORD *)&v3[v9] = Synchronized.init(wrappedValue:)(v32);
  v12 = qword_100486870;
  ComputedCameraProperties.init()(__src);
  memcpy(&v34[8], __src, 0x1E0uLL);
  v32[0] = 0;
  v32[1] = 0xBFF0000000000000;
  v32[2] = 0;
  memcpy(&v32[3], v34, 0x1E8uLL);
  v13 = type metadata accessor for RetainedFrame();
  v14 = swift_allocObject(v13, 544, 15);
  *(_QWORD *)(v14 + 16) = sub_10008F8B8();
  memcpy((void *)(v14 + 32), v32, 0x200uLL);
  v31 = v14;
  v15 = sub_10000EDC8(&qword_100486B38);
  swift_allocObject(v15, 32, 7);
  *(_QWORD *)&v11[v12] = Synchronized.init(wrappedValue:)(&v31);
  v16 = qword_100486888;
  KeyPath = swift_getKeyPath(&unk_1003B97E8);
  v18 = sub_10000EDC8(&qword_100486B40);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v19 = qword_1004AF890;
  v20 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v18 + 272);
  v21 = swift_retain();
  *(_QWORD *)&v11[v16] = v20(KeyPath, v19, v21);
  v22 = qword_100486890;
  sub_10000EDC8(&qword_100486B48);
  v23 = swift_getKeyPath(&unk_1003B9810);
  *(_QWORD *)&v11[v22] = MutableStateValue.__allocating_init(_:_:)(v23, ObjectType);
  v24 = qword_100486898;
  sub_10000EDC8((uint64_t *)&unk_100486B50);
  v25 = swift_getKeyPath(&unk_1003B9838);
  *(_QWORD *)&v11[v24] = MutableStateValue.__allocating_init(_:_:)(v25, ObjectType);
  v26 = &v11[qword_1004868A0];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  v26[16] = 1;
  *(_QWORD *)&v11[qword_1004868A8] = 0;
  *(_QWORD *)&v11[qword_100486878] = a2;
  *(_QWORD *)&v11[qword_100486880] = a3;
  *(_QWORD *)&v11[qword_1004868B0] = a1;
  swift_retain();
  swift_retain();
  v27 = a1;

  v30.receiver = v11;
  v30.super_class = ObjectType;
  v28 = objc_msgSendSuper2(&v30, "init");
  objc_msgSend(v27, "setDelegate:", v28);

  swift_release();
  swift_release();
  return v28;
}

void sub_100164FF0()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  sub_10016500C();
}

void sub_10016500C()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD v22[64];
  _QWORD __src[61];
  _BYTE v24[488];

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = &v0[qword_100486860];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = qword_100486868;
  v22[0] = 0;
  v5 = sub_10000EDC8(&qword_100486B30);
  swift_allocObject(v5, 32, 7);
  *(_QWORD *)&v0[v4] = Synchronized.init(wrappedValue:)(v22);
  v6 = qword_100486870;
  ComputedCameraProperties.init()(__src);
  memcpy(&v24[8], __src, 0x1E0uLL);
  v22[0] = 0;
  v22[1] = 0xBFF0000000000000;
  v22[2] = 0;
  memcpy(&v22[3], v24, 0x1E8uLL);
  v7 = type metadata accessor for RetainedFrame();
  v8 = swift_allocObject(v7, 544, 15);
  *(_QWORD *)(v8 + 16) = sub_10008F8B8();
  memcpy((void *)(v8 + 32), v22, 0x200uLL);
  v21 = v8;
  v9 = sub_10000EDC8(&qword_100486B38);
  swift_allocObject(v9, 32, 7);
  *(_QWORD *)&v0[v6] = Synchronized.init(wrappedValue:)(&v21);
  v10 = qword_100486888;
  KeyPath = swift_getKeyPath(&unk_1003B97E8);
  v12 = sub_10000EDC8(&qword_100486B40);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v13 = qword_1004AF890;
  v14 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 272);
  v15 = swift_retain();
  *(_QWORD *)&v1[v10] = v14(KeyPath, v13, v15);
  v16 = qword_100486890;
  sub_10000EDC8(&qword_100486B48);
  v17 = swift_getKeyPath(&unk_1003B9810);
  *(_QWORD *)&v1[v16] = MutableStateValue.__allocating_init(_:_:)(v17, ObjectType);
  v18 = qword_100486898;
  sub_10000EDC8((uint64_t *)&unk_100486B50);
  v19 = swift_getKeyPath(&unk_1003B9838);
  *(_QWORD *)&v1[v18] = MutableStateValue.__allocating_init(_:_:)(v19, ObjectType);
  v20 = &v1[qword_1004868A0];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 1;
  *(_QWORD *)&v1[qword_1004868A8] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002DLL, 0x80000001003D7D70, "Measure/RenderLoop.swift", 24, 2, 56, 0);
  __break(1u);
}

void sub_100165268(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  id v9;
  id v10;
  double v11;
  _QWORD *v12;
  _QWORD *v13;
  double v14;
  uint64_t v15;
  id v16;
  double v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  _BYTE v28[24];
  _QWORD v29[61];
  _BYTE v30[488];
  _QWORD v31[3];
  _BYTE v32[488];
  uint64_t v33;
  double v34;
  _QWORD __src[64];
  _QWORD __dst[64];
  _QWORD v37[64];

  swift_retain();
  Synchronized.wrappedValue.getter(v37, v5);
  swift_release();
  swift_retain();
  Synchronized.wrappedValue.getter(v37, v6);
  *(_QWORD *)&v7 = swift_release().n128_u64[0];
  v8 = v37[0];
  v9 = objc_msgSend(*(id *)(v2 + qword_1004868B0), "session", v7);
  v10 = objc_msgSend(v9, "currentFrame");

  sub_1000E2F30(&v33);
  sub_100012C00((uint64_t)&v33);
  v11 = v34;
  if (v34 == a2)
  {
    sub_1000E2F30(__src);
    swift_release();

    swift_release();
    v12 = __src;
LABEL_3:
    memcpy(__dst, v12, sizeof(__dst));
    nullsub_1(__dst);
LABEL_4:
    v13 = __dst;
LABEL_5:
    sub_100166CF4((uint64_t)v13, (uint64_t)v37);
    sub_100166CF4((uint64_t)v37, a1);
    return;
  }
  if (v8)
  {
    swift_retain();
    sub_1000E2F30(__src);
    sub_100012C00((uint64_t)__src);
    if (*(double *)&__src[1] == a2)
    {
      sub_1000E2F30(v31);
      swift_release();

      swift_release_n(v8, 2);
      v12 = v31;
      goto LABEL_3;
    }
    *(_QWORD *)&v11 = swift_release().n128_u64[0];
  }
  if (!v10)
  {
LABEL_18:
    swift_release();
    swift_release();
    sub_100166DA4((uint64_t)__dst);
    goto LABEL_4;
  }
  objc_msgSend(v10, "timestamp", v11);
  if (v14 != a2)
  {

    goto LABEL_18;
  }
  v15 = qword_10047B190;
  v16 = v10;
  if (v15 != -1)
    swift_once(&qword_10047B190, sub_1001C81CC);
  if ((*(_BYTE *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80) & 1) == 0)
  {
    v17 = SIMD2<>.init(_:)(*(double *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 64), *(double *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 72));
    static ComputedCameraProperties.updateShared(_:viewportSize:)(v16, v17);

    sub_1000E2F30(__dst);
    v18 = __dst[0];
    v19 = v16;
    objc_msgSend(v19, "timestamp");
    v21 = v20;
    v22 = sub_10000EDC8(&qword_10047DDD8);
    v23 = swift_allocObject(v22, 32, 7);
    swift_unknownObjectWeakInit(v23 + 16, 0);
    swift_beginAccess(v24, v28, 1, 0);
    swift_unknownObjectWeakAssign(v23 + 16, v19);
    v25 = v19;
    v26 = NSObject.hashValue.getter();

    *(_QWORD *)(v23 + 24) = v26;
    swift_release();
    v27 = v25;
    static ComputedCameraProperties.shared(for:)(v29);
    swift_release();

    swift_release();
    if (v18 != -1)
    {
      memcpy(&v30[8], v29, 0x1E0uLL);
      v31[0] = v18 + 1;
      v31[1] = v21;
      v31[2] = v23;
      memcpy(v32, v30, sizeof(v32));
      nullsub_1(v31);
      v13 = v31;
      goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_1001655D0()
{
  _swift_stdlib_reportUnimplementedInitializer("Measure.RenderLoop", 18, "init()", 6, 0);
  __break(1u);
}

void sub_1001655FC()
{
  uint64_t v0;

  sub_1000217BC(*(_QWORD *)(v0 + qword_100486860), *(_QWORD *)(v0 + qword_100486860 + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

}

void sub_10016569C(uint64_t a1)
{
  sub_1000217BC(*(_QWORD *)(a1 + qword_100486860), *(_QWORD *)(a1 + qword_100486860 + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t type metadata accessor for RenderLoop(uint64_t a1)
{
  uint64_t result;

  result = qword_1004868E0;
  if (!qword_1004868E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RenderLoop);
  return result;
}

uint64_t sub_100165784(uint64_t a1)
{
  _QWORD v2[11];

  v2[0] = &unk_1003B97B0;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[8] = &unk_1003B97C8;
  v2[9] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 256, 11, v2, a1 + 200);
}

uint64_t sub_100165804()
{
  return type metadata accessor for RenderLoop(0);
}

void sub_10016580C(uint64_t a1, double a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  unint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  char v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  __n128 v20;
  void (*v21)(_BYTE *, __n128);
  __n128 v22;
  __n128 v23;
  uint64_t v24;
  uint64_t *v25;
  char v26;
  uint64_t (*v27)(__n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(id *(*)(id *), uint64_t);
  _BYTE v32[128];
  _BYTE __dst[512];
  _BYTE v34[512];
  _BYTE v35[512];
  _QWORD v36[64];
  _BYTE v37[512];
  __n128 __src[32];

  v5 = v2;
  v8 = ariadne_trace(_:_:_:_:_:)(727056396, 0, 0, 0, 0).n128_u64[0];
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  if (!qword_1004AF238)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (*(_QWORD *)(qword_1004AF238 + 32))
  {
    swift_retain();
    sub_10004CA38();
    v8 = swift_release().n128_u64[0];
  }
  objc_msgSend(*(id *)(v2 + qword_1004868B0), "lastFrameTimestamp", *(double *)&v8);
  sub_100165268((uint64_t)v35, v9);
  sub_100166CF4((uint64_t)v35, (uint64_t)v34);
  sub_100166CF4((uint64_t)v35, (uint64_t)v37);
  if (sub_100166D3C((uint64_t)v37) == 1)
  {
    swift_retain();
    Synchronized.wrappedValue.getter(__src, v10);
    swift_release();
    sub_1000E2F30(__src);
    swift_release();
    memcpy(__dst, __src, sizeof(__dst));
  }
  else
  {
    sub_100166CF4((uint64_t)v34, (uint64_t)__dst);
  }
  memcpy(__src, __dst, sizeof(__src));
  v11 = sub_10008F8B8();
  if (!v11)
    goto LABEL_15;
  v3 = (void *)v11;
  swift_retain();
  Synchronized.wrappedValue.getter(v36, v12);
  swift_release();
  if (!v36[0])
  {
LABEL_19:
    v4 = 0;
    goto LABEL_20;
  }
  sub_1000E2F30(v36);
  swift_release();
  v4 = (void *)sub_10008F8B8();
  v13 = sub_100012C00((uint64_t)v36);
  if (!v4
    || (sub_100018148(0, (unint64_t *)&unk_100486B20, ARFrame_ptr),
        v14 = v3,
        v15 = v4,
        v16 = static NSObject.== infix(_:_:)(v14, v15),
        v14,
        v15,
        (v16 & 1) == 0))
  {
LABEL_20:
    if (qword_1004AF238)
    {
      v19 = *(_QWORD *)(qword_1004AF238 + 56);
      if (v19)
      {
        type metadata accessor for WorldAnchor(0);
        v20 = swift_retain();
        static WorldAnchor.forEachAnchor(_:)(sub_100166D9C, v19, v20);
        swift_release();
      }
      MeasureCore.shared.unsafeMutableAddressor(v13);
      swift_retain();
      MeasureCore.updatePlanes(with:)((ARFrame)v3);
      swift_release();
      sub_100165D54(v3, v4, (uint64_t)v32);
      v21 = *(void (**)(_BYTE *, __n128))(**(_QWORD **)(v5 + qword_100486890) + 392);
      v22 = swift_retain();
      v21(v32, v22);
      swift_release();
      if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
      {
        if (qword_10047AC58 != -1)
          swift_once(&qword_10047AC58, sub_1001833E8);
        if (byte_1004AF790 == 1)
          sub_100105CDC(__src);
      }
      v24 = *(_QWORD *)(v5 + qword_100486878);
      v25 = (uint64_t *)SnapType.standard.unsafeMutableAddressor(v23);
      if (*(_BYTE *)(v24 + 544) == 3)
      {
        sub_1000F6208(*v25, (uint64_t)__src);
        v32[0] = v26 & 1;
        swift_retain();
        Synchronized.wrappedValue.setter(v32);
        swift_release();
      }
      sub_1000F8C6C();
      sub_1000F98D8();
      sub_10010586C();
      v27 = *(uint64_t (**)(__n128))(**(_QWORD **)(v5 + qword_100486898) + 200);
      v28 = swift_retain();
      v29 = v27(v28);
      swift_release();
      v30 = swift_allocObject(&unk_100448EA8, 544, 15);
      *(double *)(v30 + 16) = a2;
      *(_QWORD *)(v30 + 24) = a1;
      memcpy((void *)(v30 + 32), __src, 0x200uLL);
      v31 = *(void (**)(id *(*)(id *), uint64_t))(*(_QWORD *)v29 + 416);
      swift_unknownObjectRetain(a1);
      sub_1000471E8((uint64_t)__dst);
      v31(sub_100166D8C, v30);

      swift_release();
      swift_release();

      sub_100012C00((uint64_t)__dst);
      v17 = qword_1004AF238;
      if (qword_1004AF238)
        goto LABEL_31;
LABEL_36:
      __break(1u);
      return;
    }
LABEL_35:

    __break(1u);
    goto LABEL_36;
  }
  ariadne_trace(_:_:_:_:_:)(727056392, 0, 0, 0, 0);

  sub_100012C00((uint64_t)__dst);
  v17 = qword_1004AF238;
  if (!qword_1004AF238)
  {
    __break(1u);
LABEL_15:
    ariadne_trace(_:_:_:_:_:)(727056392, 0, 0, 0, 0);
    if (qword_10047AAA8 != -1)
      swift_once(&qword_10047AAA8, sub_1000E17E0);
    v18._object = (void *)0x80000001003E2C60;
    v18._countAndFlagsBits = 0xD00000000000003BLL;
    Log.default(_:isPrivate:)(v18, 0);
    v13 = sub_100012C00((uint64_t)__dst);
    v17 = qword_1004AF238;
    if (qword_1004AF238)
      goto LABEL_31;
    __break(1u);
    goto LABEL_19;
  }
LABEL_31:
  if (*(_QWORD *)(v17 + 32))
  {
    swift_retain();
    sub_10004CA54();
    swift_release();
  }
  ariadne_trace(_:_:_:_:_:)(727056400, 0, 0, 0, 0);
}

__n128 sub_100165D54@<Q0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  void (*v9)(id *__return_ptr, uint64_t);
  uint64_t v10;
  float v11;
  char v12;
  float v13;
  BOOL v14;
  float v15;
  BOOL v16;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  id v22;
  __n128 v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __int128 v33;
  uint64_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t *v37;
  float32x4_t v38;
  float32x4_t v39;
  float v40;
  uint64_t v41;
  void (*v42)(id *__return_ptr, uint64_t);
  uint64_t v43;
  id v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  __n128 result;
  __int128 v57;
  __n128 v58;
  __n128 v59;
  __n128 v60;
  __n128 v61;
  float32x4_t v62;
  __n128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  id v68[8];
  float v69;
  char v70;
  float v71;
  BOOL v72;
  float v73;
  BOOL v74;

  v4 = v3;
  v8 = *(_QWORD *)(v3 + qword_100486890);
  v9 = *(void (**)(id *__return_ptr, uint64_t))(*(_QWORD *)v8 + 144);
  v10 = swift_retain(v8);
  v9(v68, v10);
  swift_release(v8);
  v11 = v69;
  v12 = v70;
  v13 = v71;
  v14 = v72;
  v15 = v73;
  v16 = v74;
  v17 = objc_msgSend(a1, "camera");
  objc_msgSend(v17, "transform");
  v66 = v19;
  v67 = v18;
  v64 = v21;
  v65 = v20;

  v22 = objc_msgSend(a1, "camera");
  objc_msgSend(v22, "eulerAngles");
  v63 = v23;

  objc_msgSend(a1, "timestamp");
  if (a2)
  {
    v25 = v24;
    objc_msgSend(a2, "timestamp");
    v27 = v26;
    if (vabdd_f64(v25, v26) > 2.22044605e-16)
    {
      v28 = objc_msgSend(a1, "camera");
      objc_msgSend(v28, "transform");
      v60 = v30;
      v61 = v29;
      v58 = v32;
      v59 = v31;

      *(double *)&v33 = simd_float4x4.position.getter(v61, v60, v59, v58);
      v57 = v33;
      *(double *)v35.i64 = simd_float4x4.forward.getter(v34);
      *(float32x2_t *)v36.f32 = vadd_f32(*(float32x2_t *)&v57, vmul_f32(*(float32x2_t *)v35.f32, (float32x2_t)vdup_n_s32(0xBE4CCCCD)));
      v36.f32[2] = *((float *)&v57 + 2) + vmuls_lane_f32(-0.2, v35, 2);
      v36.i32[3] = 0;
      v37 = (float32x4_t *)(v4 + qword_1004868A0);
      v12 = *(_BYTE *)(v4 + qword_1004868A0 + 16);
      v15 = 0.0;
      v11 = 0.0;
      if ((v12 & 1) == 0)
      {
        v38 = vsubq_f32(*v37, v36);
        v39 = vmulq_f32(v38, v38);
        v40 = v25 - v27;
        v11 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v39, 2), vaddq_f32(v39, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v39.f32, 1))).f32[0])/ v40;
      }
      v62 = v36;
      v41 = *(_QWORD *)(v4 + qword_100486888);
      v42 = *(void (**)(id *__return_ptr, uint64_t))(*(_QWORD *)v41 + 144);
      v43 = swift_retain(v41);
      v42(v68, v43);
      swift_release(v41);
      v44 = v68[0];
      v14 = v68[0] == 0;
      v13 = 0.0;
      if (v68[0])
      {
        objc_msgSend(v68[0], "userAcceleration");
        v46 = v45;
        objc_msgSend(v44, "userAcceleration");
        v48 = v47;
        objc_msgSend(v44, "userAcceleration");
        v13 = sqrt(v46 * v46 + v48 * v48 + v49 * v49);
        objc_msgSend(v44, "rotationRate");
        v51 = v50;
        objc_msgSend(v44, "rotationRate");
        v53 = v52;
        objc_msgSend(v44, "rotationRate");
        v55 = v54;

        v15 = sqrt(v51 * v51 + v53 * v53 + v55 * v55);
      }
      *v37 = v62;
      v37[1].i8[0] = 0;
      v16 = v14;
    }
  }
  *(_OWORD *)a3 = v67;
  *(_OWORD *)(a3 + 16) = v66;
  *(_OWORD *)(a3 + 32) = v65;
  *(_OWORD *)(a3 + 48) = v64;
  *(_BYTE *)(a3 + 64) = 0;
  *(float *)(a3 + 68) = v11;
  *(_BYTE *)(a3 + 72) = v12;
  result = v63;
  *(__n128 *)(a3 + 80) = v63;
  *(_BYTE *)(a3 + 96) = 0;
  *(float *)(a3 + 100) = v13;
  *(_BYTE *)(a3 + 104) = v14;
  *(float *)(a3 + 108) = v15;
  *(_BYTE *)(a3 + 112) = v16;
  return result;
}

id *sub_100166098(id *result, id a2, uint64_t a3, double a4)
{
  char *v4;
  BOOL v5;
  void *v6;
  id *v8;
  id v9;
  id v10;

  *(double *)result = a4;
  v4 = (char *)result[62];
  v5 = __CFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v8 = result;
    result[62] = v6;
    v9 = objc_msgSend(a2, "pointOfView");
    v10 = objc_msgSend(v9, "camera");

    v8[1] = v10;
    return (id *)memcpy(v8 + 2, (const void *)(a3 + 32), 0x1E0uLL);
  }
  return result;
}

void sub_100166358(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void (*a6)(id, id))
{
  id v11;
  id v12;
  id v13;

  swift_unknownObjectRetain(a3);
  v11 = a4;
  v12 = a5;
  v13 = a1;
  a6(v11, v12);
  swift_unknownObjectRelease(a3);

}

void sub_100166458(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  void *object;
  Swift::String v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  Swift::String v23;
  Swift::String v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  void *v29;
  void *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  _QWORD v34[2];
  id v35;
  uint64_t v36;
  Swift::String v37;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_opt_self(ARPlaneAnchor);
  v11 = swift_dynamicCastObjCClass(a2, v10);
  if (v11)
  {
    v12 = (void *)v11;
    v13 = qword_10047A930;
    v35 = a2;
    if (v13 != -1)
      swift_once(&qword_10047A930, sub_100083368);
    if (qword_1004AF238 && *(_QWORD *)(qword_1004AF238 + 48))
    {
      swift_retain();
      sub_10004BF88((unint64_t)v12, a1);
      swift_release();
    }
    if (qword_10047AA48 != -1)
      swift_once(&qword_10047AA48, sub_1000E1250);
    v34[0] = qword_1004AF4B8;
    v34[1] = qword_1004AF4B0;
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease(v37._object);
    v37._countAndFlagsBits = 0xD000000000000016;
    v37._object = (void *)0x80000001003E2C40;
    v14 = qword_1004868A8;
    v36 = *(_QWORD *)(v3 + qword_1004868A8);
    v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v15._object;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(object);
    v17._countAndFlagsBits = 8236;
    v17._object = (void *)0xE200000000000000;
    String.append(_:)(v17);
    v18 = objc_msgSend(v12, "identifier");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v20 = UUID.uuidString.getter(v19);
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v23._countAndFlagsBits = v20;
    v23._object = v22;
    String.append(_:)(v23);
    swift_bridgeObjectRelease(v22);
    v24._countAndFlagsBits = 8236;
    v24._object = (void *)0xE200000000000000;
    String.append(_:)(v24);
    v25 = objc_msgSend(v12, "geometry");
    v26 = ARPlaneGeometry.vertices.getter();

    v27 = sub_10000EDC8((uint64_t *)&unk_100486AB0);
    v28._countAndFlagsBits = Array.description.getter(v26, v27);
    v29 = v28._object;
    String.append(_:)(v28);
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v29);
    v30 = v37._object;
    Log.debug(_:isPrivate:)(v37, 0);
    swift_bridgeObjectRelease(v30);

    v31 = *(_QWORD *)(v3 + v14);
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      __break(1u);
    else
      *(_QWORD *)(v3 + v14) = v33;
  }
}

void sub_100166720(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  Swift::String v27;
  void *object;
  Swift::String v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  Swift::String v35;
  Swift::String v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  Swift::String v48;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_opt_self(ARPlaneAnchor);
  v11 = swift_dynamicCastObjCClass(a2, v10);
  if (!v11)
    return;
  v12 = (void *)v11;
  v46 = a2;
  v13 = objc_msgSend(a1, "childNodes");
  v14 = sub_100018148(0, &qword_10047BCE8, SCNNode_ptr);
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v43 = v15;
    else
      v43 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v16 = (void *)_CocoaArrayWrapper.endIndex.getter(v43);
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    v16 = *(void **)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v45 = v7;
  if (!v16)
  {
    swift_bridgeObjectRelease(v15);
    goto LABEL_18;
  }
  if ((v15 & 0xC000000000000001) != 0)
  {
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
  }
  else
  {
    if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_28;
    }
    v17 = *(id *)(v15 + 32);
  }
  v16 = v17;
  swift_bridgeObjectRelease(v15);
  if (qword_10047A930 != -1)
LABEL_28:
    swift_once(&qword_10047A930, sub_100083368);
  if (!qword_1004AF238)
  {
    __break(1u);
    return;
  }
  if (*(_QWORD *)(qword_1004AF238 + 48))
  {
    v18 = objc_msgSend(v16, "geometry", swift_retain().n128_f64[0]);
    if (v18)
    {
      v19 = v18;
      v20 = objc_opt_self(ARSCNPlaneGeometry);
      v21 = swift_dynamicCastObjCClass(v19, v20);
      if (v21)
      {
        v22 = (void *)v21;
        v23 = (void *)objc_opt_self(SCNTransaction);
        v44 = v3;
        v24 = v23;
        objc_msgSend(v23, "begin");
        v25 = objc_msgSend(v12, "geometry");
        objc_msgSend(v22, "updateFromPlaneGeometry:", v25);

        v26 = v24;
        v3 = v44;
        objc_msgSend(v26, "commit");
      }
      swift_release();

      goto LABEL_18;
    }
    swift_release();
  }

LABEL_18:
  if (qword_10047AA48 != -1)
    swift_once(&qword_10047AA48, sub_1000E1250);
  v48._countAndFlagsBits = 0;
  v48._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease(v48._object);
  v48._countAndFlagsBits = 0xD000000000000018;
  v48._object = (void *)0x80000001003E2C20;
  v47 = *(_QWORD *)(v3 + qword_1004868A8);
  v27._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v27._object;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(object);
  v29._countAndFlagsBits = 8236;
  v29._object = (void *)0xE200000000000000;
  String.append(_:)(v29);
  v30 = objc_msgSend(v12, "identifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v32 = UUID.uuidString.getter(v31);
  v34 = v33;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v6);
  v35._countAndFlagsBits = v32;
  v35._object = v34;
  String.append(_:)(v35);
  swift_bridgeObjectRelease(v34);
  v36._countAndFlagsBits = 8236;
  v36._object = (void *)0xE200000000000000;
  String.append(_:)(v36);
  v37 = objc_msgSend(v12, "geometry");
  v38 = ARPlaneGeometry.vertices.getter();

  v39 = sub_10000EDC8((uint64_t *)&unk_100486AB0);
  v40._countAndFlagsBits = Array.description.getter(v38, v39);
  v41 = v40._object;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v41);
  v42 = v48._object;
  Log.debug(_:isPrivate:)(v48, 0);

  swift_bridgeObjectRelease(v42);
}

double sub_100166B58(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  void *v9;
  uint64_t v10;
  id v11;
  double v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  void *object;
  Swift::String v20;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_opt_self(ARPlaneAnchor);
  v7 = swift_dynamicCastObjCClass(a1, v6);
  if (v7)
  {
    v9 = (void *)v7;
    v10 = qword_10047AA48;
    v11 = a1;
    if (v10 != -1)
      swift_once(&qword_10047AA48, sub_1000E1250);
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(25);
    *(_QWORD *)&v12 = swift_bridgeObjectRelease(v20._object).n128_u64[0];
    v20._countAndFlagsBits = 0xD000000000000017;
    v20._object = (void *)0x80000001003E2C00;
    v13 = objc_msgSend(v9, "identifier", v12);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v15 = UUID.uuidString.getter(v14);
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v18._countAndFlagsBits = v15;
    v18._object = v17;
    String.append(_:)(v18);
    swift_bridgeObjectRelease(v17);
    object = v20._object;
    Log.debug(_:isPrivate:)(v20, 0);

    *(_QWORD *)&result = swift_bridgeObjectRelease(object).n128_u64[0];
  }
  return result;
}

uint64_t sub_100166CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000EDC8(&qword_100484660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100166D3C(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_100166D60()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 544, 15);
}

id *sub_100166D8C(id *a1)
{
  uint64_t v1;

  return sub_100166098(a1, *(id *)(v1 + 24), v1 + 32, *(double *)(v1 + 16));
}

double sub_100166D9C(uint64_t a1)
{
  return sub_1001D15AC(a1);
}

_OWORD *sub_100166DA4(uint64_t a1)
{
  _OWORD *result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 1;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_QWORD *)(a1 + 504) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  result = (_OWORD *)(a1 + 24);
  result[15] = 0u;
  result[16] = 0u;
  result[17] = 0u;
  result[18] = 0u;
  result[19] = 0u;
  result[20] = 0u;
  result[21] = 0u;
  result[22] = 0u;
  result[23] = 0u;
  result[24] = 0u;
  result[25] = 0u;
  result[26] = 0u;
  result[27] = 0u;
  result[28] = 0u;
  result[29] = 0u;
  return result;
}

uint64_t sub_100166E24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

double sub_100166E48(const void *a1)
{
  uint64_t v1;

  return sub_100164BF0(a1, v1);
}

uint64_t sub_100166E50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSString v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  NSString v32;
  void *v33;
  char v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  _BYTE v42[848];
  _BYTE v43[848];

  v3 = type metadata accessor for MeasurementHistoryItem(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000226FC(a1, (uint64_t)v5);
  sub_10001F970(&v5[*(int *)(v3 + 28)], v42);
  sub_10001F970(v42, v43);
  if (sub_10001F9AC((uint64_t)v43))
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ALL, 0x80000001003D8820, "Measure/LineHistoryCell.swift", 29, 2, 38, 0);
    __break(1u);
  }
  else
  {
    v6 = sub_10001F9B8((uint64_t)v43);
    v7 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v8 = objc_msgSend(v7, "preferredContentSizeCategory");

    LOBYTE(v7) = UIContentSizeCategory.isAccessibilityCategory.getter(v8);
    if ((v7 & 1) != 0)
    {
      v9 = *(void **)(v1 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_accessibleMeasureContent);
      v10 = *((_QWORD *)v5 + 2);
      v11 = (void *)*((_QWORD *)v5 + 3);
      v12 = *(_QWORD *)(v6 + 48);
      v41 = *(_QWORD *)(v6 + 40);
      v13 = *(_QWORD *)(v6 + 56);
      v14 = *(_QWORD *)(v6 + 64);
      v40 = *(_OWORD *)(v6 + 80);
      v16 = *(_QWORD *)(v6 + 96);
      v15 = *(_QWORD *)(v6 + 104);
      v17 = v9;
      sub_100125740(v10, (uint64_t)v11, v10, v11, v41, v12, v13, v14, v40, *((uint64_t *)&v40 + 1), v16, v15);
    }
    else
    {
      v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent);
      v19 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent;
      v36 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent;
      v20 = *(id *)(v18 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
      v21 = String._bridgeToObjectiveC()();
      objc_msgSend(v20, "setText:", v21);

      v22 = *(void **)(*(_QWORD *)(v1 + v19) + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits);
      v23 = *(_QWORD *)v6;
      v24 = *(_QWORD *)(v6 + 8);
      v25 = *(_QWORD *)(v6 + 40);
      v26 = *(_QWORD *)(v6 + 48);
      v41 = *(_QWORD *)(v6 + 56);
      v27 = *(_QWORD *)(v6 + 64);
      v39 = *(_QWORD *)(v6 + 80);
      *(_QWORD *)&v40 = v27;
      v28 = *(_QWORD *)(v6 + 88);
      v29 = *(_QWORD *)(v6 + 96);
      v30 = *(_QWORD *)(v6 + 104);
      v37 = v29;
      v38 = v28;
      v31 = v22;
      v32 = String._bridgeToObjectiveC()();
      objc_msgSend(v31, "setText:", v32);

      v33 = *(void **)(*(_QWORD *)(v1 + v36)
                     + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
      if (v23 == v25 && v24 == v26)
        v34 = 1;
      else
        v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v25, v26, 0);
      v17 = v33;
      sub_100134B8C(v25, v26, v41, (NSString)v40, v39, v38, v37, v30, v34 & 1);
    }

    return sub_100022740((uint64_t)v5);
  }
  return result;
}

id sub_100167248()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LineHistoryCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LineHistoryCell()
{
  return objc_opt_self(_TtC7Measure15LineHistoryCell);
}

void sub_1001672A0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char *v4;
  double v5;
  uint64_t v6;
  char v7;
  void *v8;
  char **v9;
  id v10;
  id v11;
  char v12;
  double v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  void *object;
  NSString v23;
  void *v24;
  id v25;
  id v26;
  char *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  _QWORD aBlock[6];
  Swift::String v39;

  v1 = OBJC_IVAR____TtC7Measure14ClearAllButton_separator;
  v2 = type metadata accessor for SeparatorView();
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v4 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v3, "init");

  if (qword_10047A748 != -1)
    swift_once(&qword_10047A748, sub_10000EE64);
  v5 = *(double *)&qword_1004AF080;
  v6 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v7 = static UIDevice.isIPhone()(v6);
  v8 = (void *)objc_opt_self(UIColor);
  v9 = &selRef_systemBackgroundColor;
  if ((v7 & 1) == 0)
    v9 = &selRef_clearColor;
  v10 = objc_msgSend(v8, *v9);
  if (qword_10047AE28 != -1)
    swift_once(&qword_10047AE28, sub_100195B18);
  v11 = (id)qword_1004AF910;
  v12 = static UIDevice.isIPhone()(v11);
  v13 = 0.0;
  if ((v12 & 1) != 0)
  {
    if (qword_10047A7B0 != -1)
      swift_once(&qword_10047A7B0, sub_10000F088);
    v13 = *(double *)&qword_1004AF100;
  }
  v14 = sub_100038F30(v10, v11, 0.0, 0.0, 375.0, v5, v13);
  aBlock[4] = sub_100167760;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001994A4;
  aBlock[3] = &unk_100448F20;
  v15 = _Block_copy(aBlock);
  v16 = v14;
  objc_msgSend(v16, "setPointerStyleProvider:", v15);
  _Block_release(v15);

  v17 = (void *)objc_opt_self(NSBundle);
  v18 = v16;
  v19 = objc_msgSend(v17, "mainBundle");
  v39._object = (void *)0xE000000000000000;
  v20._countAndFlagsBits = 0x4C415F5241454C43;
  v20._object = (void *)0xE90000000000004CLL;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v39._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v39)._object;

  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setTitle:forState:", v23, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

  v24 = (void *)objc_opt_self(UIColor);
  v25 = v18;
  v26 = objc_msgSend(v24, "systemRedColor");
  objc_msgSend(v25, "setTitleColor:forState:", v26, 0);

  v27 = (char *)v25;
  v28 = objc_msgSend(v24, "systemRedColor");
  objc_msgSend(v27, "setTitleColor:forState:", v28, 1);

  v29 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleHeadline);
  v30 = objc_msgSend(v27, "titleLabel");
  if (v30)
  {
    v31 = v30;
    v32 = (void *)objc_opt_self(UIFont);
    v33 = objc_msgSend(v32, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
    v34 = objc_msgSend(v33, "fontDescriptor");

    v35 = objc_msgSend(v34, "fontDescriptorWithSymbolicTraits:", 2);
    if (!v35)
    {
      __break(1u);
      return;
    }
    v36 = objc_msgSend(v32, "fontWithDescriptor:size:", v35, 0.0);

    v37 = objc_msgSend(v29, "scaledFontForFont:maximumPointSize:", v36, 28.0);
    objc_msgSend(v31, "setFont:", v37);

  }
  if ((static UIDevice.isIPhone()(v30) & 1) == 0)
  {
    objc_msgSend(v27, "addSubview:", *(_QWORD *)&v27[OBJC_IVAR____TtC7Measure14ClearAllButton_separator]);
    sub_100167934();
  }

}

uint64_t sub_100167760(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  int *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v2 = sub_10000EDC8(&qword_10047F480);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIPointerEffect(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (uint64_t *)((char *)&v21 - v10);
  v12 = (int *)sub_10000EDC8(&qword_100486C18);
  v13 = (char *)v11 + v12[12];
  v14 = v12[16];
  v15 = v12[20];
  *v11 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:", a1);
  v16 = enum case for UIPointerEffect.TintMode.overlay(_:);
  v17 = type metadata accessor for UIPointerEffect.TintMode(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v13, v16, v17);
  *((_BYTE *)v11 + v14) = 0;
  *((_BYTE *)v11 + v15) = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v11, enum case for UIPointerEffect.hover(_:), v5);
  sub_100018148(0, (unint64_t *)&qword_10047F488, UIPointerStyle_ptr);
  (*(void (**)(char *, _QWORD *, uint64_t))(v6 + 16))(v9, v11, v5);
  v18 = type metadata accessor for UIPointerShape(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
  v19 = UIPointerStyle.init(effect:shape:)(v9, v4);
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v11, v5);
  return v19;
}

void sub_100167934()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC7Measure14ClearAllButton_separator];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1003B1410;
  v5 = objc_msgSend(v1, "topAnchor");
  v6 = objc_msgSend(v0, "topAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v6, -0.25);

  *(_QWORD *)(v4 + 32) = v7;
  v8 = objc_msgSend(v1, "widthAnchor");
  v9 = objc_msgSend(v0, "widthAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v4 + 40) = v10;
  v11 = objc_msgSend(v1, "heightAnchor");
  v12 = objc_msgSend(v11, "constraintEqualToConstant:", 0.5);

  *(_QWORD *)(v4 + 48) = v12;
  v13 = objc_msgSend(v1, "centerXAnchor");
  v14 = objc_msgSend(v0, "centerXAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v4 + 56) = v15;
  specialized Array._endMutation()(v16);
  sub_100018148(0, (unint64_t *)&qword_100486300, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

void sub_100167CC8()
{
  uint64_t v0;

}

uint64_t type metadata accessor for ClearAllButton()
{
  return objc_opt_self(_TtC7Measure14ClearAllButton);
}

uint64_t sub_100167D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100167D18(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

ValueMetadata *type metadata accessor for PillToPlatterAnimationState()
{
  return &type metadata for PillToPlatterAnimationState;
}

uint64_t sub_100167D30()
{
  uint64_t result;

  result = Contexts.UIKit.init()();
  qword_1004AF6F0 = result;
  return result;
}

id sub_100167D4C@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_10047ABD8 != -1)
    swift_once(&qword_10047ABD8, sub_100167D30);
  v2 = (void *)qword_1004AF6F0;
  *a1 = qword_1004AF6F0;
  return v2;
}

unint64_t sub_100167D9C(uint64_t a1)
{
  unint64_t result;

  result = sub_100167DC0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100167DC0()
{
  unint64_t result;

  result = qword_100486C48;
  if (!qword_100486C48)
  {
    result = swift_getWitnessTable(&unk_1003B98AC, &type metadata for PillToPlatterAnimationState);
    atomic_store(result, (unint64_t *)&qword_100486C48);
  }
  return result;
}

void destroy for RenderState(uint64_t a1)
{

}

_QWORD *initializeWithCopy for RenderState(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  id v5;

  v4 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v4;
  memcpy(a1 + 2, a2 + 2, 0x1E0uLL);
  a1[62] = a2[62];
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for RenderState(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = v5;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_DWORD *)(a1 + 384) = *(_DWORD *)(a2 + 384);
  *(_DWORD *)(a1 + 388) = *(_DWORD *)(a2 + 388);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  return a1;
}

void *initializeWithTake for RenderState(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1F8uLL);
}

uint64_t assignWithTake for RenderState(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  v10 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v10;
  v11 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v11;
  v12 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v12;
  v13 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v13;
  v14 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v14;
  v15 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v15;
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  v16 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v16;
  v17 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v17;
  v18 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v18;
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  return a1;
}

uint64_t getEnumTagSinglePayload for RenderState(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 504))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RenderState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 504) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 504) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RenderState()
{
  return &type metadata for RenderState;
}

id sub_1001681B8()
{
  id result;
  id v1;

  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  result = (id)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (*((_QWORD *)&xmmword_1004AF258 + 1))
  {
    v1 = (id)*((_QWORD *)&xmmword_1004AF258 + 1);
    qword_1004AF6F8 = Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10016821C@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_10047ABE0 != -1)
    swift_once(&qword_10047ABE0, sub_1001681B8);
  v2 = (void *)qword_1004AF6F8;
  *a1 = qword_1004AF6F8;
  return v2;
}

BOOL sub_10016826C(void *__src, const void *a2)
{
  _BYTE v4[512];
  _BYTE __dst[512];

  memcpy(v4, __src, 0x1F8uLL);
  memcpy(__dst, a2, 0x1F8uLL);
  return sub_100168328((uint64_t)v4, (uint64_t)__dst);
}

unint64_t sub_1001682C0(uint64_t a1)
{
  unint64_t result;

  result = sub_1001682E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001682E4()
{
  unint64_t result;

  result = qword_100486C78;
  if (!qword_100486C78)
  {
    result = swift_getWitnessTable(&unk_1003B98FC, &type metadata for RenderState);
    atomic_store(result, (unint64_t *)&qword_100486C78);
  }
  return result;
}

BOOL sub_100168328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE v8[480];
  _BYTE __dst[480];

  if (*(double *)a1 != *(double *)a2)
    return 0;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    if (!v5)
      return 0;
    sub_100168450();
    sub_100168428(a2);
    sub_100168428(a1);
    v6 = static NSObject.== infix(_:_:)(v4, v5);
    sub_100036264(a2);
    sub_100036264(a1);
    if ((v6 & 1) == 0)
      return 0;
  }
  else
  {
    if (v5)
    {
      sub_100036264(a1);
      return 0;
    }
    sub_100168428(a2);
  }
  memcpy(__dst, (const void *)(a1 + 16), sizeof(__dst));
  memcpy(v8, (const void *)(a2 + 16), sizeof(v8));
  if ((static ComputedCameraProperties.__derived_struct_equals(_:_:)(__dst, v8) & 1) != 0)
    return *(_QWORD *)(a1 + 496) == *(_QWORD *)(a2 + 496);
  return 0;
}

uint64_t sub_100168428(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 8);
  return a1;
}

unint64_t sub_100168450()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100486C80;
  if (!qword_100486C80)
  {
    v1 = objc_opt_self(SCNCamera);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100486C80);
  }
  return result;
}

uint64_t sub_10016848C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __n128 v6;
  char v7;
  uint64_t result;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  *v5 = static OS_dispatch_queue.main.getter(v6);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = _dispatchPreconditionTest(_:)(v5);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) != 0)
  {
    v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                               + OBJC_IVAR____TtC7Measure17CardContainerView_backgroundBlur), "contentView"));
    v10 = objc_msgSend(v9, "layer");
    objc_msgSend(v9, "bounds");
    v12 = v11;
    v14 = v13;
    v15 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v15, "scale");
    v17 = v16;

    v18 = (_QWORD *)swift_allocObject(&unk_100449058, 48, 7);
    v18[2] = v12;
    v18[3] = v14;
    v18[4] = v17;
    v18[5] = v10;
    v19 = sub_10000EDC8(&qword_100481080);
    swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
    v21 = Future.init(_:)(sub_10016AE58, v18, v20);

    return v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100168650(void *a1)
{
  char *v1;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  double left;
  double bottom;
  double right;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  id v22;
  void *v23;
  uint64_t v24;

  v3 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v4 = OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView;
  v5 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView] = v3;

  v6 = *(void **)&v1[v4];
  if (!v6)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v7 = qword_10047AE30;
  v8 = v6;
  if (v7 != -1)
    swift_once(&qword_10047AE30, sub_100195B90);
  objc_msgSend(v8, "setBackgroundColor:", qword_1004AF918);

  v9 = *(void **)&v1[v4];
  if (!v9)
    goto LABEL_24;
  objc_msgSend(v9, "setUserInteractionEnabled:", 0);
  v10 = *(void **)&v1[v4];
  if (!v10)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  objc_msgSend(v10, "setAlpha:", 0.0);
  v11 = *(void **)&v1[v4];
  if (!v11)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v12 = *(_QWORD *)&v1[v4];
  if (!v12)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  objc_msgSend(v1, "insertSubview:belowSubview:", v12, *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_backdropView]);
  v13 = *(void **)&v1[v4];
  if (v13)
  {
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
    v17 = v13;
    v18 = sub_100124D70(a1, UIEdgeInsetsZero.top, left, bottom, right);
    v19 = v18;
    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0)
        v24 = v18;
      else
        v24 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v18);
      v20 = _CocoaArrayWrapper.endIndex.getter(v24);
      if (v20)
        goto LABEL_11;
    }
    else
    {
      v20 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v18);
      if (v20)
      {
LABEL_11:
        if (v20 >= 1)
        {
          for (i = 0; i != v20; ++i)
          {
            if ((v19 & 0xC000000000000001) != 0)
              v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v19);
            else
              v22 = *(id *)(v19 + 8 * i + 32);
            v23 = v22;
            objc_msgSend(v22, "setActive:", 1);

          }
          goto LABEL_21;
        }
        __break(1u);
        goto LABEL_23;
      }
    }
LABEL_21:

    swift_bridgeObjectRelease_n(v19, 2);
    return;
  }
LABEL_28:
  __break(1u);
}

double sub_100168880()
{
  return sub_1001688A8((uint64_t)&unk_1003B99C8, (uint64_t)&unk_1003B99F0);
}

double sub_100168894()
{
  return sub_1001688A8((uint64_t)&unk_1003B9980, (uint64_t)&unk_1003B99A8);
}

double sub_1001688A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  double v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_100168910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration__maxHeight;
  v2 = sub_10000EDC8(&qword_100486EF8);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration__minHeight, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

void sub_100168984()
{
  qword_100486C90 = 0x404A000000000000;
}

double sub_100168994()
{
  double result;

  if (qword_10047ABE8 != -1)
    swift_once(&qword_10047ABE8, sub_100168984);
  result = -*(double *)&qword_100486C90;
  __asm { FMOV            V1.2D, #16.0 }
  xmmword_100486C98 = _Q1;
  *(double *)&qword_100486CA8 = -*(double *)&qword_100486C90;
  qword_100486CB0 = 0xC030000000000000;
  return result;
}

void sub_1001689F4()
{
  qword_100486CB8 = 0x4030000000000000;
}

id sub_100168A04(void *a1, void *a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  char *v45;
  void *v46;
  char *v47;
  void *v48;
  id v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  objc_class *ObjectType;
  objc_super v58;
  double *v59;

  v54 = a2;
  v55 = a3;
  v56 = a1;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OBJC_IVAR____TtC7Measure17CardContainerView_draggableView;
  v14 = objc_allocWithZone((Class)UIView);
  v15 = v3;
  *(_QWORD *)&v3[v13] = objc_msgSend(v14, "init");
  v16 = OBJC_IVAR____TtC7Measure17CardContainerView_titleView;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CardTitleView()), "init");
  v17 = OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton;
  v18 = objc_allocWithZone((Class)type metadata accessor for PlatterCopyButton());
  sub_10019952C();
  *(_QWORD *)&v15[v17] = v19;
  swift_unknownObjectUnownedInit(&v15[OBJC_IVAR____TtC7Measure17CardContainerView_scrollView], 0);
  v20 = &v15[OBJC_IVAR____TtC7Measure17CardContainerView_internalSpatialPlatter];
  *((_QWORD *)v20 + 1) = 0;
  swift_unknownObjectWeakInit(v20, 0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC7Measure17CardContainerView_clearButton] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketTopConstraint] = 0;
  v21 = OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView;
  v22 = type metadata accessor for SeparatorView();
  *(_QWORD *)&v15[v21] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v22)), "init");
  v15[OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController] = 0;
  v23 = OBJC_IVAR____TtC7Measure17CardContainerView_scrollViewFooterView;
  *(_QWORD *)&v15[v23] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v24 = OBJC_IVAR____TtC7Measure17CardContainerView_contentView;
  *(_QWORD *)&v15[v24] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v25 = OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
  *(_QWORD *)&v15[v25] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v26 = OBJC_IVAR____TtC7Measure17CardContainerView_grabberView;
  *(_QWORD *)&v15[v26] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GrabberView()), "init");
  v27 = OBJC_IVAR____TtC7Measure17CardContainerView_contentScrollView;
  *(_QWORD *)&v15[v27] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v28 = OBJC_IVAR____TtC7Measure17CardContainerView_backgroundBlur;
  v29 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 9);
  v30 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v29);

  *(_QWORD *)&v15[v28] = v30;
  v31 = OBJC_IVAR____TtC7Measure17CardContainerView_internalDraggableView;
  *(_QWORD *)&v15[v31] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v32 = OBJC_IVAR____TtC7Measure17CardContainerView_shadowView;
  v33 = type metadata accessor for PlatterShadowView();
  *(_QWORD *)&v15[v32] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v33)), "init");
  v34 = OBJC_IVAR____TtC7Measure17CardContainerView_backdropView;
  *(_QWORD *)&v15[v34] = objc_msgSend(objc_allocWithZone((Class)_UIVisualEffectBackdropView), "init");
  v35 = OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
  *(_QWORD *)&v15[v35] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v15[OBJC_IVAR____TtC7Measure17CardContainerView_scrollViewFooterViewHeightConstraint] = 0;
  v36 = OBJC_IVAR____TtC7Measure17CardContainerView_workQ;
  sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  static DispatchQoS.userInitiated.getter();
  v59 = _swiftEmptyArrayStorage;
  v37 = sub_10000C4B0((unint64_t *)&qword_10047E690, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v38 = sub_10000EDC8(&qword_100486EF0);
  v39 = sub_100036038((unint64_t *)&qword_10047E6A0, &qword_100486EF0);
  v40 = v37;
  v41 = v54;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v59, v38, v39, v7, v40);
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v53);
  *(_QWORD *)&v15[v36] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000016, 0x80000001003E3010, v12, v9, v6, 0);
  v43 = v55;
  v42 = v56;
  v15[OBJC_IVAR____TtC7Measure17CardContainerView_didSetupScrollViewFooterHeight] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC7Measure17CardContainerView_actualContentView] = v42;
  *(_QWORD *)&v15[OBJC_IVAR____TtC7Measure17CardContainerView_configuration] = v43;
  v44 = v42;
  swift_retain();

  v58.receiver = v15;
  v58.super_class = ObjectType;
  v45 = (char *)objc_msgSendSuper2(&v58, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v46 = v45;
  if (v41)
  {
    v47 = &v45[OBJC_IVAR____TtC7Measure17CardContainerView_scrollView];
    v48 = v41;
  }
  else
  {
    v48 = *(void **)&v45[OBJC_IVAR____TtC7Measure17CardContainerView_contentScrollView];
    v47 = &v45[OBJC_IVAR____TtC7Measure17CardContainerView_scrollView];
  }
  swift_unknownObjectUnownedAssign(v47, v48);
  v49 = v46;
  sub_100168F30();
  sub_100169508();

  swift_release();
  return v49;
}

void sub_100168F30()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  NSString v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  double v31;
  id v32;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "clearColor");
  objc_msgSend(v1, "setBackgroundColor:", v3);

  v4 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_backdropView];
  objc_msgSend(v1, "addSubview:", v4);
  v5 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_draggableView];
  v6 = objc_msgSend(v2, "clearColor");
  objc_msgSend(v5, "setBackgroundColor:", v6);

  objc_msgSend(v1, "addSubview:", v5);
  v7 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_internalDraggableView];
  v8 = objc_msgSend(v2, "clearColor");
  objc_msgSend(v7, "setBackgroundColor:", v8);

  objc_msgSend(v7, "setClipsToBounds:", 1);
  v9 = objc_msgSend(v7, "layer");
  if (qword_10047A768 != -1)
    swift_once(&qword_10047A768, sub_10000EF38);
  objc_msgSend(v9, "setCornerRadius:", *(double *)&qword_1004AF0A0);

  v10 = objc_msgSend(v7, "layer");
  objc_msgSend(v10, "setCornerCurve:", kCACornerCurveContinuous);

  objc_msgSend(v4, "setRenderMode:", 1);
  objc_msgSend(v5, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_shadowView]);
  objc_msgSend(v5, "addSubview:", v7);
  v11 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_backgroundBlur];
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "_setGroupName:", v12);

  objc_msgSend(v11, "_setCaptureView:", v4);
  objc_msgSend(v7, "addSubview:", v11);
  v13 = OBJC_IVAR____TtC7Measure17CardContainerView_scrollViewFooterView;
  v14 = *(id *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_scrollViewFooterView];
  v15 = objc_msgSend(v2, "clearColor");
  objc_msgSend(v14, "setBackgroundColor:", v15);

  v16 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_contentView];
  objc_msgSend(v16, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_actualContentView]);
  objc_msgSend(v16, "addSubview:", *(_QWORD *)&v1[v13]);
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_titleView];
  objc_msgSend(*(id *)(v17 + OBJC_IVAR____TtC7Measure13CardTitleView_title), "setUserInteractionEnabled:", 1);
  v18 = objc_msgSend(v11, "contentView");
  objc_msgSend(v18, "addSubview:", v17);

  v19 = objc_msgSend(v11, "contentView");
  v20 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_contentScrollView];
  objc_msgSend(v19, "addSubview:", v20);

  objc_msgSend(v20, "addSubview:", v16);
  objc_msgSend(v20, "setScrollEnabled:", 0);
  v21 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView];
  objc_msgSend(v21, "setAxis:", 1);
  objc_msgSend(v21, "addArrangedSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton]);
  v22 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.isIPhone()(v22) & 1) != 0)
  {
    v23 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView];
    v24 = objc_msgSend(v2, "clearColor");
    objc_msgSend(v23, "setBackgroundColor:", v24);

    v25 = objc_msgSend(v11, "contentView");
    objc_msgSend(v25, "addSubview:", v23);

    objc_msgSend(v23, "addSubview:", v21);
    v26 = objc_opt_self(UIView);
    v27 = swift_allocObject(&unk_1004490F8, 24, 7);
    *(_QWORD *)(v27 + 16) = v1;
    v28 = swift_allocObject(&unk_100449120, 32, 7);
    *(_QWORD *)(v28 + 16) = sub_10016AF18;
    *(_QWORD *)(v28 + 24) = v27;
    aBlock[4] = sub_100030C24;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000DDB80;
    aBlock[3] = &unk_100449138;
    v29 = _Block_copy(aBlock);
    v30 = v1;
    swift_retain();
    objc_msgSend((id)v26, "performWithoutAnimation:", v29, swift_release().n128_f64[0]);
    _Block_release(v29);
    LOBYTE(v26) = swift_isEscapingClosureAtFileLocation(v28, "", 107, 199, 44, 1);
    *(_QWORD *)&v31 = swift_release().n128_u64[0];
    if ((v26 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      objc_msgSend(v23, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView], v31);
      swift_release();
    }
  }
  else
  {
    v32 = objc_msgSend(v11, "contentView");
    objc_msgSend(v32, "addSubview:", v21);

  }
}

void sub_100169508()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  double v39;
  id v40;
  id v41;
  id v42;
  double v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  unint64_t v56;
  id v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  id v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  id v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  double left;
  double bottom;
  double right;
  uint64_t v84;
  uint64_t v85;
  uint64_t inited;
  id v87;
  void *v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  char **v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  id v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  id v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  Class isa;
  uint64_t v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  void *v154;
  void *v155;
  id v156;
  void *v157;
  id v158;
  id v159;
  uint64_t v160;
  id v161;
  id v162;
  char v163[96];
  uint64_t v164;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_titleView];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_grabberView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_contentScrollView];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v161 = *(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_contentView];
  objc_msgSend(v161, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v158 = *(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView];
  objc_msgSend(v158, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v155 = *(void **)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_internalDraggableView];
  objc_msgSend(v155, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_actualContentView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = *(void **)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_backgroundBlur];
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_shadowView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_backdropView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = *(void **)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_draggableView];
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v153 = *(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView];
  objc_msgSend(v153, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v152 = OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_scrollViewFooterView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = objc_msgSend(v4, "contentView");
  v151 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
  v7 = swift_allocObject(v151, 104, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1003B2E70;
  v8 = objc_msgSend(v2, "topAnchor");
  v9 = objc_msgSend(v6, "topAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v7 + 32) = v10;
  v11 = objc_msgSend(v2, "leadingAnchor");
  v12 = objc_msgSend(v6, "leadingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v7 + 40) = v13;
  v14 = objc_msgSend(v2, "trailingAnchor");
  v15 = objc_msgSend(v6, "trailingAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v7 + 48) = v16;
  v17 = objc_msgSend(v3, "topAnchor");
  v18 = objc_msgSend(v2, "bottomAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v7 + 56) = v19;
  v20 = objc_msgSend(v3, "leadingAnchor");
  v21 = objc_msgSend(v6, "leadingAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v7 + 64) = v22;
  v23 = objc_msgSend(v3, "trailingAnchor");
  v159 = v6;
  v24 = objc_msgSend(v6, "trailingAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v7 + 72) = v25;
  v26 = objc_msgSend(v5, "bottomAnchor");
  v27 = objc_msgSend(v1, "bottomAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v7 + 80) = v28;
  v29 = objc_msgSend(v5, "leadingAnchor");
  v30 = objc_msgSend(v1, "leadingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v7 + 88) = v31;
  v154 = v5;
  v32 = objc_msgSend(v5, "trailingAnchor");
  v33 = objc_msgSend(v1, "trailingAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v7 + 96) = v34;
  v164 = v7;
  specialized Array._endMutation()(v35);
  v160 = v7;
  v36 = objc_msgSend(v161, "centerYAnchor");
  v37 = objc_msgSend(v3, "centerYAnchor");
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

  LODWORD(v39) = 1132068864;
  objc_msgSend(v38, "setPriority:", v39);
  v40 = objc_msgSend(v161, "bottomAnchor");
  v41 = objc_msgSend(v3, "bottomAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  LODWORD(v43) = 1132068864;
  objc_msgSend(v42, "setPriority:", v43);
  v44 = objc_msgSend(v161, "topAnchor");
  v45 = objc_msgSend(v3, "topAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  v47 = v42;
  v48 = objc_msgSend(v161, "leadingAnchor");
  v49 = objc_msgSend(v3, "leadingAnchor");
  v156 = objc_msgSend(v48, "constraintEqualToAnchor:", v49);

  v50 = objc_msgSend(v161, "trailingAnchor");
  v51 = objc_msgSend(v3, "trailingAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

  v53 = objc_msgSend(v161, "centerXAnchor");
  v54 = objc_msgSend(v3, "centerXAnchor");
  v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

  if ((unint64_t)v160 >> 62)
  {
    if (v160 < 0)
      v148 = v160;
    else
      v148 = v160 & 0xFFFFFFFFFFFFFF8;
    v149 = v38;
    swift_bridgeObjectRetain(v160);
    v56 = _CocoaArrayWrapper.endIndex.getter(v148);
    swift_bridgeObjectRelease(v160);
  }
  else
  {
    v56 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFF8) + 0x10);
    v57 = v38;
  }
  if (__OFADD__(v56, 6))
  {
    __break(1u);
  }
  else
  {
    v59 = sub_100078D9C(v56 + 6, 1);
    specialized Array._endMutation()(v59);
    v46 = v46;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
    v56 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v58 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v56 < v58 >> 1)
      goto LABEL_5;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v58 > 1, v56 + 1, 1);
LABEL_5:
  v60 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v46);
  specialized Array._endMutation()(v60);
  v61 = v47;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v61);
  v63 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v62 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v63 >= v62 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v62 > 1, v63 + 1, 1);
  v64 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v63, v61);
  specialized Array._endMutation()(v64);
  v65 = v156;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v65);
  v67 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v66 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v67 >= v66 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1);
  v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v65);
  specialized Array._endMutation()(v68);
  v69 = v52;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
  v71 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v70 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v71 >= v70 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v70 > 1, v71 + 1, 1);
  v72 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v71, v69);
  specialized Array._endMutation()(v72);
  v73 = v55;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v73);
  v75 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v74 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v75 >= v74 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v74 > 1, v75 + 1, 1);
  v76 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v75, v73);
  specialized Array._endMutation()(v76);
  v77 = v38;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v77);
  v79 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v78 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v79 >= v78 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v78 > 1, v79 + 1, 1);
  v80 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v79, v77);
  specialized Array._endMutation()(v80);

  v157 = v61;
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v84 = sub_100124D70(v161, UIEdgeInsetsZero.top, left, bottom, right);
  sub_1000FFFEC(v84);
  v85 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.isIPhone()(v85) & 1) != 0)
  {
    inited = swift_initStackObject(v151, v163);
    *(_OWORD *)(inited + 16) = xmmword_1003B2E80;
    v87 = objc_msgSend(v153, "bottomAnchor");
    v88 = v159;
    v89 = objc_msgSend(v159, "bottomAnchor");
    v90 = objc_msgSend(v87, "constraintEqualToAnchor:", v89);

    *(_QWORD *)(inited + 32) = v90;
    v91 = objc_msgSend(v153, "leadingAnchor");
    v92 = objc_msgSend(v159, "leadingAnchor");
    v93 = objc_msgSend(v91, "constraintEqualToAnchor:", v92);

    *(_QWORD *)(inited + 40) = v93;
    v94 = objc_msgSend(v153, "trailingAnchor");
    v95 = objc_msgSend(v159, "trailingAnchor");
    v96 = objc_msgSend(v94, "constraintEqualToAnchor:", v95);

    *(_QWORD *)(inited + 48) = v96;
    v97 = objc_msgSend(v3, "bottomAnchor");
    v98 = objc_msgSend(v153, "topAnchor");
    v99 = objc_msgSend(v97, "constraintEqualToAnchor:", v98);

    *(_QWORD *)(inited + 56) = v99;
    v100 = objc_msgSend(*(id *)&v1[v152], "topAnchor");
    v101 = objc_msgSend(v153, "topAnchor");
    v102 = objc_msgSend(v100, "constraintEqualToAnchor:constant:", v101, -0.25);

    *(_QWORD *)(inited + 64) = v102;
    v103 = objc_msgSend(*(id *)&v1[v152], "widthAnchor");
    v104 = objc_msgSend(v1, "widthAnchor");
    v105 = objc_msgSend(v103, "constraintEqualToAnchor:", v104);

    *(_QWORD *)(inited + 72) = v105;
    v106 = objc_msgSend(*(id *)&v1[v152], "heightAnchor");
    v107 = objc_msgSend(v106, "constraintEqualToConstant:", 0.33);

    *(_QWORD *)(inited + 80) = v107;
    v108 = objc_msgSend(*(id *)&v1[v152], "centerXAnchor");
    v109 = objc_msgSend(v1, "centerXAnchor");
    v110 = objc_msgSend(v108, "constraintEqualToAnchor:", v109);

    *(_QWORD *)(inited + 88) = v110;
    specialized Array._endMutation()(v111);
    sub_1000FFFEC(inited);
    if (qword_10047ABF0 != -1)
      swift_once(&qword_10047ABF0, sub_100168994);
    v112 = sub_100124D70(v153, *(double *)&xmmword_100486C98, *((double *)&xmmword_100486C98 + 1), *(double *)&qword_100486CA8, *(double *)&qword_100486CB0);
    sub_1000FFFEC(v112);
    goto LABEL_30;
  }
  v113 = &selRef_renderer_didAddNode_forAnchor_;
  v114 = objc_msgSend(v158, "bottomAnchor");
  v88 = v159;
  v115 = objc_msgSend(v159, "bottomAnchor");
  v162 = objc_msgSend(v114, "constraintEqualToAnchor:", v115);

  v116 = objc_msgSend(v158, "leadingAnchor");
  v117 = objc_msgSend(v159, "leadingAnchor");
  v118 = objc_msgSend(v116, "constraintEqualToAnchor:", v117);

  v119 = objc_msgSend(v158, "trailingAnchor");
  v120 = objc_msgSend(v159, "trailingAnchor");
  v121 = objc_msgSend(v119, "constraintEqualToAnchor:", v120);

  v122 = objc_msgSend(v3, "bottomAnchor");
  v123 = objc_msgSend(v158, "topAnchor");
  v124 = objc_msgSend(v122, "constraintEqualToAnchor:", v123);

  if ((unint64_t)v164 >> 62)
  {
    if (v164 < 0)
      v150 = v164;
    else
      v150 = v164 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v164);
    v126 = _CocoaArrayWrapper.endIndex.getter(v150);
    swift_bridgeObjectRelease(v164);
  }
  else
  {
    v125 = v164 & 0xFFFFFFFFFFFFF8;
    v126 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v126, 4))
  {
    __break(1u);
    goto LABEL_42;
  }
  v127 = sub_100078D9C(v126 + 4, 1);
  specialized Array._endMutation()(v127);
  v113 = (char **)v162;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v113);
  v126 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v125 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v126 >= v125 >> 1)
LABEL_42:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v125 > 1, v126 + 1, 1);
  v128 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v126, v113);
  specialized Array._endMutation()(v128);
  v129 = v118;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v129);
  v131 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v130 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v131 >= v130 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v130 > 1, v131 + 1, 1);
  v132 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v131, v129);
  specialized Array._endMutation()(v132);
  v133 = v121;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v133);
  v135 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v134 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v135 >= v134 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v134 > 1, v135 + 1, 1);
  v136 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v135, v133);
  specialized Array._endMutation()(v136);
  v137 = v124;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v137);
  v139 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v138 = *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v139 >= v138 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v138 > 1, v139 + 1, 1);
  v140 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v139, v137);
  specialized Array._endMutation()(v140);

LABEL_30:
  v141 = sub_100124D70(v154, UIEdgeInsetsZero.top, left, bottom, right);
  sub_1000FFFEC(v141);
  v142 = sub_100124D70(v1, UIEdgeInsetsZero.top, left, bottom, right);
  sub_1000FFFEC(v142);
  v143 = sub_100124D70(v154, UIEdgeInsetsZero.top, left, bottom, right);
  sub_1000FFFEC(v143);
  v144 = sub_100124D70(v155, UIEdgeInsetsZero.top, left, bottom, right);
  sub_1000FFFEC(v144);
  v145 = (void *)objc_opt_self(NSLayoutConstraint);
  v146 = v164;
  sub_100018148(0, (unint64_t *)&qword_100486300, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v145, "activateConstraints:", isa, swift_bridgeObjectRelease(v146).n128_f64[0]);

}

id sub_10016A70C(uint64_t a1)
{
  id result;

  result = *(id *)(a1 + OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView);
  if (result)
    return objc_msgSend(result, "setAlpha:");
  __break(1u);
  return result;
}

void sub_10016A72C(uint64_t a1)
{
  id v1;

  v1 = *(id *)(a1 + OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView);
  sub_10004FAD0(0);

}

uint64_t sub_10016A774(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_allocObject(&unk_100449080, 32, 7);
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  v20 = swift_retain();
  v21 = (void *)static OS_dispatch_queue.main.getter(v20);
  v22 = swift_allocObject(&unk_1004490A8, 64, 7);
  *(double *)(v22 + 16) = a4;
  *(double *)(v22 + 24) = a5;
  *(double *)(v22 + 32) = a6;
  *(_QWORD *)(v22 + 40) = sub_10015083C;
  *(_QWORD *)(v22 + 48) = v19;
  *(_QWORD *)(v22 + 56) = a3;
  aBlock[4] = sub_10016AEB8;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003ECA0;
  aBlock[3] = &unk_1004490C0;
  v23 = _Block_copy(aBlock);
  v24 = a3;
  v25 = swift_release();
  static DispatchQoS.unspecified.getter(v25);
  aBlock[0] = _swiftEmptyArrayStorage;
  v26 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v27 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v28 = sub_100036038((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v12, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v18, v14, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

void sub_10016A9E0(void (*a1)(UIImage *, uint64_t), double a2, double a3, CGFloat a4, uint64_t a5, void *a6)
{
  CGContext *v8;
  UIImage *v9;
  UIImage *v10;
  void *v11;
  UIImage *v12;
  CGContext *v13;

  UIGraphicsBeginImageContextWithOptions(*(CGSize *)&a2, 0, a4);
  v8 = UIGraphicsGetCurrentContext();
  if (v8)
  {
    v13 = v8;
    objc_msgSend(a6, "renderInContext:");
    v9 = UIGraphicsGetImageFromCurrentImageContext();
    if (v9)
    {
      v10 = v9;
      v12 = v9;
      a1(v10, 0);

      v11 = v12;
    }
    else
    {
      a1((UIImage *)1, 1);
      v11 = v13;
    }

  }
  else
  {
    a1(0, 1);
  }
}

id sub_10016AAB0(double a1, double a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t *v7;
  void *v8;

  v3 = v2;
  v6 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.isIPhone()(v6) & 1) != 0)
    v7 = &OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
  else
    v7 = &OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
  v8 = *(void **)&v2[*v7];
  objc_msgSend(v3, "convertPoint:toCoordinateSpace:", *(_QWORD *)&v3[*v7], a1, a2);
  return objc_msgSend(v8, "pointInside:withEvent:", 0);
}

uint64_t type metadata accessor for CardContainerView()
{
  return objc_opt_self(_TtC7Measure17CardContainerView);
}

uint64_t sub_10016AD20()
{
  return type metadata accessor for CardContainerView.Configuration(0);
}

uint64_t type metadata accessor for CardContainerView.Configuration(uint64_t a1)
{
  uint64_t result;

  result = qword_100486E48;
  if (!qword_100486E48)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CardContainerView.Configuration);
  return result;
}

void sub_10016AD64(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_10016ADE0();
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_10016ADE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_100486E58)
  {
    v0 = type metadata accessor for Published(0, &type metadata for CGFloat);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_100486E58);
  }
}

uint64_t sub_10016AE34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10016AE58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10016A774(a1, a2, *(void **)(v2 + 40), *(double *)(v2 + 16), *(double *)(v2 + 24), *(double *)(v2 + 32));
}

uint64_t sub_10016AE68()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10016AE8C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

void sub_10016AEB8()
{
  uint64_t v0;

  sub_10016A9E0(*(void (**)(UIImage *, uint64_t))(v0 + 40), *(double *)(v0 + 16), *(double *)(v0 + 24), *(CGFloat *)(v0 + 32), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56));
}

uint64_t sub_10016AECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10016AEDC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10016AEF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10016AF18()
{
  uint64_t v0;

  sub_10016A72C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10016AF20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10016AF30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  void *v11;

  v2 = OBJC_IVAR____TtC7Measure17CardContainerView_clearButton;
  if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC7Measure17CardContainerView_clearButton))
  {
    v5 = objc_allocWithZone((Class)type metadata accessor for ClearAllButton());
    sub_1001672A0();
    v6 = *(void **)(a1 + v2);
    *(_QWORD *)(a1 + v2) = v7;

    if (*(_QWORD *)(a1 + v2))
    {
      v8 = *(void **)(a1 + OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView);
      objc_msgSend(v8, "addArrangedSubview:");
      v9 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
      if ((static UIDevice.isIPhone()(v9) & 1) != 0)
      {
        if (qword_10047ABF8 != -1)
          swift_once(&qword_10047ABF8, sub_1001689F4);
        objc_msgSend(v8, "setCustomSpacing:afterView:", *(_QWORD *)(a1 + OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton), *(double *)&qword_100486CB8);
        v10 = *(char **)(a1 + OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView);
      }
      else
      {
        v10 = *(char **)(a1 + OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton);
        *(_QWORD *)&v10[OBJC_IVAR____TtC7Measure31ButtonWithCustomBackgroundColor_radius] = 0;
      }
      objc_msgSend(v10, "setNeedsLayout");
      v11 = *(void **)(a1 + v2);
      if (v11)
      {
        swift_unknownObjectWeakAssign(a2 + qword_100485D38, *(_QWORD *)(a1 + v2));
        objc_msgSend(v11, "addTarget:action:forControlEvents:", a2, "clearAll", 64);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_10016B0B0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double *v39;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v37 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC7Measure17CardContainerView_draggableView;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v12 = OBJC_IVAR____TtC7Measure17CardContainerView_titleView;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CardTitleView()), "init");
  v13 = OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton;
  v14 = objc_allocWithZone((Class)type metadata accessor for PlatterCopyButton());
  sub_10019952C();
  *(_QWORD *)&v1[v13] = v15;
  swift_unknownObjectUnownedInit(&v1[OBJC_IVAR____TtC7Measure17CardContainerView_scrollView], 0);
  v16 = &v1[OBJC_IVAR____TtC7Measure17CardContainerView_internalSpatialPlatter];
  *((_QWORD *)v16 + 1) = 0;
  swift_unknownObjectWeakInit(v16, 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_clearButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketTopConstraint] = 0;
  v17 = OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView;
  v18 = type metadata accessor for SeparatorView();
  *(_QWORD *)&v1[v17] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v18)), "init");
  v1[OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController] = 0;
  v19 = OBJC_IVAR____TtC7Measure17CardContainerView_scrollViewFooterView;
  *(_QWORD *)&v1[v19] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v20 = OBJC_IVAR____TtC7Measure17CardContainerView_contentView;
  *(_QWORD *)&v1[v20] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v21 = OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
  *(_QWORD *)&v1[v21] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v22 = OBJC_IVAR____TtC7Measure17CardContainerView_grabberView;
  *(_QWORD *)&v1[v22] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GrabberView()), "init");
  v23 = OBJC_IVAR____TtC7Measure17CardContainerView_contentScrollView;
  *(_QWORD *)&v1[v23] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v24 = OBJC_IVAR____TtC7Measure17CardContainerView_backgroundBlur;
  v25 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 9);
  v26 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v25);

  *(_QWORD *)&v1[v24] = v26;
  v27 = OBJC_IVAR____TtC7Measure17CardContainerView_internalDraggableView;
  *(_QWORD *)&v1[v27] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v28 = OBJC_IVAR____TtC7Measure17CardContainerView_shadowView;
  v29 = type metadata accessor for PlatterShadowView();
  *(_QWORD *)&v1[v28] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v29)), "init");
  v30 = OBJC_IVAR____TtC7Measure17CardContainerView_backdropView;
  *(_QWORD *)&v1[v30] = objc_msgSend(objc_allocWithZone((Class)_UIVisualEffectBackdropView), "init");
  v31 = OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
  *(_QWORD *)&v1[v31] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_scrollViewFooterViewHeightConstraint] = 0;
  v32 = OBJC_IVAR____TtC7Measure17CardContainerView_workQ;
  sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  static DispatchQoS.userInitiated.getter();
  v39 = _swiftEmptyArrayStorage;
  v33 = sub_10000C4B0((unint64_t *)&qword_10047E690, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v34 = sub_10000EDC8(&qword_100486EF0);
  v35 = sub_100036038((unint64_t *)&qword_10047E6A0, &qword_100486EF0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v39, v34, v35, v5, v33);
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v38);
  *(_QWORD *)&v1[v32] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000016, 0x80000001003E3010, v10, v7, v4, 0);
  v1[OBJC_IVAR____TtC7Measure17CardContainerView_didSetupScrollViewFooterHeight] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003D8190, "Measure/CardContainerView.swift", 31, 2, 98, 0);
  __break(1u);
}

uint64_t storeEnumTagSinglePayload for CardContainerView.BackgroundAsUIImageError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10016B588 + 4 * byte_1003B9945[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10016B5BC + 4 * byte_1003B9940[v4]))();
}

uint64_t sub_10016B5BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10016B5C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10016B5CCLL);
  return result;
}

uint64_t sub_10016B5D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10016B5E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10016B5E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10016B5EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardContainerView.BackgroundAsUIImageError()
{
  return &type metadata for CardContainerView.BackgroundAsUIImageError;
}

unint64_t sub_10016B60C()
{
  unint64_t result;

  result = qword_100486F00;
  if (!qword_100486F00)
  {
    result = swift_getWitnessTable(&unk_1003B9AAC, &type metadata for CardContainerView.BackgroundAsUIImageError);
    atomic_store(result, (unint64_t *)&qword_100486F00);
  }
  return result;
}

double *sub_10016B658(uint64_t a1)
{
  uint64_t v2;
  double *v3;
  double *result;
  uint64_t i;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id *v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  _OWORD v16[2];
  double *v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return v3;
  v17 = _swiftEmptyArrayStorage;
  result = sub_1000A56B4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v6 = type metadata accessor for MeasureObject(0);
        swift_dynamicCast(v16, &v15, v6, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_1000A56B4(0, *((_QWORD *)v3 + 2) + 1, 1);
          v3 = v17;
        }
        v8 = *((_QWORD *)v3 + 2);
        v7 = *((_QWORD *)v3 + 3);
        if (v8 >= v7 >> 1)
        {
          sub_1000A56B4((double *)(v7 > 1), v8 + 1, 1);
          v3 = v17;
        }
        *((_QWORD *)v3 + 2) = v8 + 1;
        sub_100020848(v16, &v3[4 * v8 + 4]);
      }
    }
    else
    {
      v9 = (id *)(a1 + 32);
      v10 = type metadata accessor for MeasureObject(0);
      do
      {
        v15 = *v9;
        v11 = v15;
        swift_dynamicCast(v16, &v15, v10, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_1000A56B4(0, *((_QWORD *)v3 + 2) + 1, 1);
          v3 = v17;
        }
        v13 = *((_QWORD *)v3 + 2);
        v12 = *((_QWORD *)v3 + 3);
        if (v13 >= v12 >> 1)
        {
          sub_1000A56B4((double *)(v12 > 1), v13 + 1, 1);
          v3 = v17;
        }
        *((_QWORD *)v3 + 2) = v13 + 1;
        sub_100020848(v16, &v3[4 * v13 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10016B888(uint64_t a1)
{
  return sub_10016B8B0(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_1000A56D0, &qword_100487020);
}

_QWORD *sub_10016B89C(uint64_t a1)
{
  return sub_10016B8B0(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_1000A56F4, &qword_100487028);
}

_QWORD *sub_10016B8B0(uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t v3;
  _QWORD *v4;
  __int128 *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v18;
  _OWORD v19[2];
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = _swiftEmptyArrayStorage;
  if (v3)
  {
    v23 = _swiftEmptyArrayStorage;
    a2(0, v3, 0);
    v4 = _swiftEmptyArrayStorage;
    v8 = (__int128 *)(a1 + 48);
    do
    {
      v9 = *v8;
      v19[0] = *(v8 - 1);
      v19[1] = v9;
      v10 = sub_10000EDC8(&qword_100487018);
      v11 = sub_10000EDC8(a3);
      swift_dynamicCast(&v20, v19, v10, v11, 7);
      v12 = v20;
      v18 = v21;
      v13 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
      {
        a2(0, v4[2] + 1, 1);
        v4 = v23;
      }
      v15 = v4[2];
      v14 = v4[3];
      if (v15 >= v14 >> 1)
      {
        a2(v14 > 1, v15 + 1, 1);
        v4 = v23;
      }
      v4[2] = v15 + 1;
      v16 = &v4[4 * v15];
      v16[4] = v12;
      *(_OWORD *)(v16 + 5) = v18;
      v16[7] = v13;
      v8 += 2;
      --v3;
    }
    while (v3);
  }
  return v4;
}

_QWORD *sub_10016B9FC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  Class isa;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = a1 + 32;
    do
    {
      v4 += 8;
      isa = Double._bridgeToObjectiveC()().super.super.isa;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(isa);
      v6 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v6);
      v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, isa);
      specialized ContiguousArray._endMutation()(v7);
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

double *sub_10016BAA0(uint64_t a1)
{
  int64_t v1;
  double *v2;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  unint64_t v12;
  _OWORD v14[8];
  _OWORD v15[2];
  double *v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v16 = _swiftEmptyArrayStorage;
    sub_1000A56B4(0, v1, 0);
    v4 = (_OWORD *)(a1 + 32);
    type metadata accessor for CATransform3D(0);
    v6 = v5;
    do
    {
      v7 = v4[5];
      v14[4] = v4[4];
      v14[5] = v7;
      v8 = v4[7];
      v14[6] = v4[6];
      v14[7] = v8;
      v9 = v4[1];
      v14[0] = *v4;
      v14[1] = v9;
      v10 = v4[3];
      v14[2] = v4[2];
      v14[3] = v10;
      swift_dynamicCast(v15, v14, v6, (char *)&type metadata for Any + 8, 7);
      v2 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      {
        sub_1000A56B4(0, *((_QWORD *)v2 + 2) + 1, 1);
        v2 = v16;
      }
      v12 = *((_QWORD *)v2 + 2);
      v11 = *((_QWORD *)v2 + 3);
      if (v12 >= v11 >> 1)
      {
        sub_1000A56B4((double *)(v11 > 1), v12 + 1, 1);
        v2 = v16;
      }
      *((_QWORD *)v2 + 2) = v12 + 1;
      sub_100020848(v15, &v2[4 * v12 + 4]);
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

id sub_10016BBEC(void *a1, void *a2, void *a3, void *a4)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  NSString v21;
  void *v22;
  id v23;
  uint64_t v24;
  NSString v25;
  void *v26;
  id v27;
  uint64_t v28;
  NSString v29;
  id v30;
  uint64_t v31;
  NSString v32;
  id v33;
  uint64_t v34;
  NSString v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  objc_class *ObjectType;
  objc_super v45;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v9 = OBJC_IVAR____TtC7Measure15ReticleAnimator__reticlePulseState;
  KeyPath = swift_getKeyPath(&unk_1003B9AF0);
  v11 = sub_10000EDC8((uint64_t *)&unk_100487000);
  v12 = qword_10047AD88;
  v13 = v5;
  if (v12 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v14 = qword_1004AF890;
  v15 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v11 + 272);
  v16 = swift_retain();
  *(_QWORD *)&v13[v9] = v15(KeyPath, v14, v16);
  v17 = &v13[OBJC_IVAR____TtC7Measure15ReticleAnimator_snapAnimationKey];
  *(_QWORD *)v17 = 0xD000000000000015;
  *((_QWORD *)v17 + 1) = 0x80000001003E3200;
  v18 = &v13[OBJC_IVAR____TtC7Measure15ReticleAnimator_unsnapAnimationKey];
  *(_QWORD *)v18 = 0xD000000000000017;
  *((_QWORD *)v18 + 1) = 0x80000001003E3220;
  v19 = &v13[OBJC_IVAR____TtC7Measure15ReticleAnimator_goodStateAnimationKey];
  *(_QWORD *)v19 = 0xD000000000000013;
  *((_QWORD *)v19 + 1) = 0x80000001003E3240;
  v20 = OBJC_IVAR____TtC7Measure15ReticleAnimator_continueAnimation;
  v21 = String._bridgeToObjectiveC()();
  v22 = (void *)objc_opt_self(CAKeyframeAnimation);
  v23 = objc_msgSend(v22, "animationWithKeyPath:", v21);

  *(_QWORD *)&v13[v20] = v23;
  v24 = OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointAnimation;
  v25 = String._bridgeToObjectiveC()();
  v26 = (void *)objc_opt_self(CASpringAnimation);
  v27 = objc_msgSend(v26, "animationWithKeyPath:", v25);

  *(_QWORD *)&v13[v24] = v27;
  v28 = OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation;
  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend(v26, "animationWithKeyPath:", v29);

  *(_QWORD *)&v13[v28] = v30;
  v31 = OBJC_IVAR____TtC7Measure15ReticleAnimator_idlePulsateAnimation;
  v32 = String._bridgeToObjectiveC()();
  v33 = objc_msgSend(v22, "animationWithKeyPath:", v32);

  *(_QWORD *)&v13[v31] = v33;
  v34 = OBJC_IVAR____TtC7Measure15ReticleAnimator_scaleOutAnimation;
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend(v26, "animationWithKeyPath:", v35);

  *(_QWORD *)&v13[v34] = v36;
  *(_QWORD *)&v13[OBJC_IVAR____TtC7Measure15ReticleAnimator_reticleShapeLayer] = a1;
  *(_QWORD *)&v13[OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointLayer] = a4;
  *(_QWORD *)&v13[OBJC_IVAR____TtC7Measure15ReticleAnimator_pulsateLayer] = a2;
  *(_QWORD *)&v13[OBJC_IVAR____TtC7Measure15ReticleAnimator_dropLayer] = a3;
  v37 = a1;
  v38 = a4;
  v39 = a2;
  v40 = a3;

  v45.receiver = v13;
  v45.super_class = ObjectType;
  v41 = objc_msgSendSuper2(&v45, "init");
  sub_10016BF78();

  return v41;
}

id sub_10016BF78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double *v4;
  CGFloat m11;
  CGFloat m12;
  CGFloat m13;
  CGFloat m14;
  CGFloat m21;
  CGFloat m22;
  CGFloat m23;
  CGFloat m24;
  unint64_t v13;
  unint64_t v14;
  CGFloat *v15;
  void *v16;
  _QWORD *v17;
  Class isa;
  char **v19;
  double *v20;
  Class v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  unint64_t v34;
  unint64_t v35;
  CGFloat *v36;
  void *v37;
  _QWORD *v38;
  Class v39;
  double *v40;
  Class v41;
  id v42;
  void *v43;
  void *v44;
  void *v45;
  CGFloat m44;
  CGFloat v48;
  CGFloat m43;
  CGFloat v50;
  CGFloat m42;
  CGFloat v52;
  CGFloat m41;
  CGFloat v54;
  CGFloat m34;
  CGFloat v56;
  CGFloat m33;
  CGFloat v58;
  CGFloat m32;
  CGFloat v60;
  CGFloat m31;
  CGFloat v62;
  CATransform3D v63;

  if (qword_10047B070 != -1)
    swift_once(&qword_10047B070, sub_1001971C8);
  v1 = qword_1004AFB80;
  v2 = *(_QWORD *)(qword_1004AFB80 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain(qword_1004AFB80);
    v3 = 0;
    v4 = _swiftEmptyArrayStorage;
    do
    {
      CATransform3DMakeScale(&v63, *(CGFloat *)(v1 + 8 * v3 + 32), *(CGFloat *)(v1 + 8 * v3 + 32), 1.0);
      m11 = v63.m11;
      m12 = v63.m12;
      m13 = v63.m13;
      m14 = v63.m14;
      m21 = v63.m21;
      m22 = v63.m22;
      m23 = v63.m23;
      m24 = v63.m24;
      m32 = v63.m32;
      m31 = v63.m31;
      m34 = v63.m34;
      m33 = v63.m33;
      m42 = v63.m42;
      m41 = v63.m41;
      m44 = v63.m44;
      m43 = v63.m43;
      if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
        v4 = sub_100060A98(0, *((_QWORD *)v4 + 2) + 1, 1, (uint64_t)v4);
      v14 = *((_QWORD *)v4 + 2);
      v13 = *((_QWORD *)v4 + 3);
      if (v14 >= v13 >> 1)
        v4 = sub_100060A98((double *)(v13 > 1), v14 + 1, 1, (uint64_t)v4);
      ++v3;
      *((_QWORD *)v4 + 2) = v14 + 1;
      v15 = &v4[16 * v14];
      v15[4] = m11;
      v15[5] = m12;
      v15[6] = m13;
      v15[7] = m14;
      v15[8] = m21;
      v15[9] = m22;
      v15[10] = m23;
      v15[11] = m24;
      v15[12] = m31;
      v15[13] = m32;
      v15[14] = m33;
      v15[15] = m34;
      v15[16] = m41;
      v15[17] = m42;
      v15[18] = m43;
      v15[19] = m44;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  v16 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_continueAnimation);
  if (qword_10047B068 != -1)
    swift_once(&qword_10047B068, sub_1001971B4);
  v17 = sub_10016B9FC(qword_1004AFB78);
  sub_100018148(0, &qword_100488BA0, NSNumber_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v19 = &selRef_setOverlaySKScene_;
  objc_msgSend(v16, "setKeyTimes:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

  v20 = sub_10016BAA0((uint64_t)v4);
  swift_bridgeObjectRelease(v4);
  v21 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "setValues:", v21, swift_bridgeObjectRelease(v20).n128_f64[0]);

  objc_msgSend(v16, "setDuration:", 1.0);
  v22 = qword_1004AFB80;
  v23 = *(_QWORD *)(qword_1004AFB80 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain(qword_1004AFB80);
    v24 = 0;
    v25 = _swiftEmptyArrayStorage;
    do
    {
      CATransform3DMakeScale(&v63, *(CGFloat *)(v22 + 8 * v24 + 32), *(CGFloat *)(v22 + 8 * v24 + 32), 1.0);
      v26 = v63.m11;
      v27 = v63.m12;
      v28 = v63.m13;
      v29 = v63.m14;
      v30 = v63.m21;
      v31 = v63.m22;
      v32 = v63.m23;
      v33 = v63.m24;
      v60 = v63.m32;
      v62 = v63.m31;
      v56 = v63.m34;
      v58 = v63.m33;
      v52 = v63.m42;
      v54 = v63.m41;
      v48 = v63.m44;
      v50 = v63.m43;
      if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
        v25 = sub_100060A98(0, *((_QWORD *)v25 + 2) + 1, 1, (uint64_t)v25);
      v35 = *((_QWORD *)v25 + 2);
      v34 = *((_QWORD *)v25 + 3);
      if (v35 >= v34 >> 1)
        v25 = sub_100060A98((double *)(v34 > 1), v35 + 1, 1, (uint64_t)v25);
      ++v24;
      *((_QWORD *)v25 + 2) = v35 + 1;
      v36 = &v25[16 * v35];
      v36[4] = v26;
      v36[5] = v27;
      v36[6] = v28;
      v36[7] = v29;
      v36[8] = v30;
      v36[9] = v31;
      v36[10] = v32;
      v36[11] = v33;
      v36[12] = v62;
      v36[13] = v60;
      v36[14] = v58;
      v36[15] = v56;
      v36[16] = v54;
      v36[17] = v52;
      v36[18] = v50;
      v36[19] = v48;
    }
    while (v23 != v24);
    swift_bridgeObjectRelease(v22);
    v19 = &selRef_setOverlaySKScene_;
  }
  else
  {
    v25 = _swiftEmptyArrayStorage;
  }
  v37 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_idlePulsateAnimation);
  if (qword_10047B078 != -1)
    swift_once(&qword_10047B078, sub_1001971DC);
  v38 = sub_10016B9FC(qword_1004AFB88);
  v39 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v37, v19[221], v39, swift_bridgeObjectRelease(v38).n128_f64[0]);

  v40 = sub_10016BAA0((uint64_t)v25);
  swift_bridgeObjectRelease(v25);
  v41 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v37, "setValues:", v41, swift_bridgeObjectRelease(v40).n128_f64[0]);

  objc_msgSend(v37, "setDuration:", 1.0);
  v42 = objc_msgSend((id)objc_opt_self(CAMediaTimingFunction), "functionWithName:", kCAMediaTimingFunctionEaseInEaseOut);
  objc_msgSend(v37, "setTimingFunction:", v42);

  v43 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointAnimation);
  objc_msgSend(v43, "setDamping:", 40.0);
  objc_msgSend(v43, "setStiffness:", 400.0);
  objc_msgSend(v43, "setDuration:", 0.5);
  objc_msgSend(v43, "setDelegate:", v0);
  objc_msgSend(v43, "setRemovedOnCompletion:", 0);
  v44 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_scaleOutAnimation);
  objc_msgSend(v44, "setDamping:", 30.0);
  objc_msgSend(v44, "setStiffness:", 180.0);
  objc_msgSend(v44, "settlingDuration");
  objc_msgSend(v44, "setDuration:");
  objc_msgSend(v44, "setDelegate:", v0);
  objc_msgSend(v44, "setRemovedOnCompletion:", 0);
  v45 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
  objc_msgSend(v45, "setDamping:", 24.0);
  objc_msgSend(v45, "setStiffness:", 300.0);
  objc_msgSend(v45, "settlingDuration");
  objc_msgSend(v45, "setDuration:");
  objc_msgSend(v45, "setDelegate:", v0);
  return objc_msgSend(v45, "setRemovedOnCompletion:", 0);
}

void sub_10016C5D4()
{
  sub_10016C5FC();
}

void sub_10016C5E8()
{
  sub_10016C5FC();
}

void sub_10016C5FC()
{
  uint64_t v0;
  void *v1;
  Class isa;
  Class v3;
  id v4;
  id v5;
  void *v6;
  NSString v7;
  CATransform3D sx;
  _OWORD v9[2];
  _OWORD v10[2];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointAnimation);
  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v1, "setFromValue:", isa);

  v3 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v1, "setToValue:", v3);

  v4 = objc_msgSend(v1, "toValue");
  if (v4)
  {
    v5 = v4;
    _bridgeAnyObjectToAny(_:)(v9, v4);
    swift_unknownObjectRelease(v5);
    sub_100020848(v9, v10);
    swift_dynamicCast(&sx, v10, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 7);
    v6 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointLayer);
    CATransform3DMakeScale(&sx, sx.m11, sx.m11, 1.0);
    objc_msgSend(v6, "setTransform:", &sx);
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "addAnimation:forKey:", v1, v7);

  }
  else
  {
    __break(1u);
  }
}

void sub_10016C774()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void (*v3)(_QWORD *__return_ptr, __n128);
  __n128 v4;
  uint64_t (*v5)(__n128);
  __n128 v6;
  uint64_t v7;
  __n128 v8;
  void *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  uint64_t v14;
  NSString v15;
  _QWORD v16[6];

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Measure15ReticleAnimator__reticlePulseState;
  v3 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)&v0[OBJC_IVAR____TtC7Measure15ReticleAnimator__reticlePulseState]
                                                           + 144);
  v4 = swift_retain();
  v3(v16, v4);
  swift_release();
  if (LOBYTE(v16[0]) != 1)
  {
    v5 = *(uint64_t (**)(__n128))(**(_QWORD **)&v0[v2] + 200);
    v6 = swift_retain();
    v7 = v5(v6);
    v8 = swift_release();
    (*(void (**)(_BYTE *(*)(_BYTE *), _QWORD, __n128))(*(_QWORD *)v7 + 280))(sub_100022BA0, 0, v8);
    swift_release();
    v9 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v9, "begin");
    v10 = swift_allocObject(&unk_100449268, 24, 7);
    *(_QWORD *)(v10 + 16) = v1;
    v16[4] = sub_10016EB34;
    v16[5] = v10;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_10003ECA0;
    v16[3] = &unk_100449280;
    v11 = _Block_copy(v16);
    v12 = v1;
    objc_msgSend(v9, "setCompletionBlock:", v11, swift_release().n128_f64[0]);
    _Block_release(v11);
    v13 = *(void **)&v12[OBJC_IVAR____TtC7Measure15ReticleAnimator_dropLayer];
    v14 = *(_QWORD *)&v12[OBJC_IVAR____TtC7Measure15ReticleAnimator_continueAnimation];
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "addAnimation:forKey:", v14, v15);

    objc_msgSend(v9, "commit");
  }
}

double sub_10016C92C(uint64_t a1)
{
  uint64_t (*v1)(__n128);
  __n128 v2;
  uint64_t v3;
  __n128 v4;
  double result;

  v1 = *(uint64_t (**)(__n128))(**(_QWORD **)(a1 + OBJC_IVAR____TtC7Measure15ReticleAnimator__reticlePulseState)
                                        + 200);
  v2 = swift_retain();
  v3 = v1(v2);
  v4 = swift_release();
  (*(void (**)(_BYTE *(*)(_BYTE *), _QWORD, __n128))(*(_QWORD *)v3 + 280))(sub_100022BF8, 0, v4);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10016C990(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  Class v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  Class isa;
  Class v33;
  NSString v34;
  NSString v35;
  NSString v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  CATransform3D v44;
  CATransform3D v45;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_reticleShapeLayer);
  objc_msgSend(v3, "removeAllAnimations");
  v4 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointLayer);
  objc_msgSend(v4, "removeAllAnimations");
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_pulsateLayer), "removeAllAnimations");
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_dropLayer), "removeAllAnimations");
  CATransform3DMakeScale(&v45, 1.0, 1.0, 1.0);
  objc_msgSend(v4, "setTransform:", &v45);
  switch(a1)
  {
    case 1:
      v5 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
      if (qword_10047B008 != -1)
        swift_once(&qword_10047B008, sub_100196B0C);
      v22 = objc_msgSend((id)qword_1004AFB20, "CGColor");
      objc_msgSend(v5, "setFromValue:", v22);

      if (qword_10047B000 != -1)
        swift_once(&qword_10047B000, sub_100196AD4);
      v23 = objc_msgSend((id)qword_1004AFB18, "CGColor");
      if (qword_10047B010 != -1)
        swift_once(&qword_10047B010, sub_100196BF0);

      objc_msgSend(v3, "setStrokeColor:", v23);
      v24 = objc_msgSend(v3, "strokeColor");
      objc_msgSend(v5, "setToValue:", v24);

      v25 = sub_10016D268();
      v26 = qword_10047B018;
      v27 = v25;
      if (v26 != -1)
        swift_once(&qword_10047B018, sub_100196C28);
      v28 = objc_msgSend((id)qword_1004AFB30, "CGColor");
      objc_msgSend(v27, "setFromValue:", v28);

      v29 = objc_msgSend((id)qword_1004AFB18, "CGColor");
      v30 = objc_msgSend((id)qword_1004AFB28, "CGColor");

      objc_msgSend(v4, "setFillColor:", v30);
      v15 = v27;
      v31 = objc_msgSend(v4, "fillColor");
      objc_msgSend(v15, "setToValue:", v31);

      v17 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_scaleOutAnimation);
      CATransform3DMakeScale(&v45, 1.0, 1.0, 1.0);
      isa = CATransform3D._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v17, "setFromValue:", isa);

      v19 = 1.5;
      v20 = 1.5;
      v21 = 1.5;
      break;
    case 3:
      v37 = sub_10016D268();
      v38 = qword_10047B018;
      v39 = v37;
      if (v38 != -1)
        swift_once(&qword_10047B018, sub_100196C28);
      v40 = objc_msgSend((id)qword_1004AFB30, "CGColor");
      objc_msgSend(v39, "setFromValue:", v40);

      if (qword_10047B000 != -1)
        swift_once(&qword_10047B000, sub_100196AD4);
      v41 = objc_msgSend((id)qword_1004AFB18, "CGColor");
      if (qword_10047B010 != -1)
        swift_once(&qword_10047B010, sub_100196BF0);
      v42 = objc_msgSend((id)qword_1004AFB28, "CGColor");

      objc_msgSend(v4, "setFillColor:", v42);
      v15 = v39;
      v43 = objc_msgSend(v4, "fillColor");
      objc_msgSend(v15, "setToValue:", v43);

      v36 = String._bridgeToObjectiveC()();
      objc_msgSend(v4, "addAnimation:forKey:", v15, v36);
      goto LABEL_30;
    case 2:
      v5 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
      if (qword_10047B008 != -1)
        swift_once(&qword_10047B008, sub_100196B0C);
      v6 = objc_msgSend((id)qword_1004AFB20, "CGColor");
      objc_msgSend(v5, "setFromValue:", v6);

      if (qword_10047B000 != -1)
        swift_once(&qword_10047B000, sub_100196AD4);
      v7 = objc_msgSend((id)qword_1004AFB18, "CGColor");
      if (qword_10047B010 != -1)
        swift_once(&qword_10047B010, sub_100196BF0);

      objc_msgSend(v3, "setStrokeColor:", v7);
      v8 = objc_msgSend(v3, "strokeColor");
      objc_msgSend(v5, "setToValue:", v8);

      v9 = sub_10016D268();
      v10 = qword_10047B020;
      v11 = v9;
      if (v10 != -1)
        swift_once(&qword_10047B020, sub_100196CA0);
      v12 = objc_msgSend((id)qword_1004AFB38, "CGColor");
      objc_msgSend(v11, "setFromValue:", v12);

      v13 = objc_msgSend((id)qword_1004AFB18, "CGColor");
      v14 = objc_msgSend((id)qword_1004AFB28, "CGColor");

      objc_msgSend(v4, "setFillColor:", v14);
      v15 = v11;
      v16 = objc_msgSend(v4, "fillColor");
      objc_msgSend(v15, "setToValue:", v16);

      v17 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_scaleOutAnimation);
      CATransform3DMakeScale(&v45, 1.0, 1.0, 1.0);
      v18 = CATransform3D._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v17, "setFromValue:", v18);

      v19 = 1.5;
      v20 = 1.5;
      v21 = 1.0;
      break;
    default:
      return;
  }
  CATransform3DMakeScale(&v44, v19, v20, v21);
  objc_msgSend(v3, "setTransform:", &v44);
  CATransform3DMakeScale(&v44, 1.5, 1.5, 1.0);
  v33 = CATransform3D._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v17, "setToValue:", v33);

  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "addAnimation:forKey:", v5, v34);

  v35 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "addAnimation:forKey:", v15, v35);

  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "addAnimation:forKey:", v17, v36);
LABEL_30:

}

id sub_10016D268()
{
  uint64_t v0;
  NSString v1;
  id v2;
  void *v3;
  id v4;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v1);

  v3 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
  objc_msgSend(v3, "damping");
  objc_msgSend(v2, "setDamping:");
  objc_msgSend(v3, "stiffness");
  objc_msgSend(v2, "setStiffness:");
  v4 = v2;
  objc_msgSend(v4, "settlingDuration");
  objc_msgSend(v4, "setDuration:");

  return v4;
}

void sub_10016D354(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSString v19;
  NSString v20;
  void *v21;
  double v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  NSString v35;
  NSString v36;
  void *v37;
  Class isa;
  Class v39;
  NSString v40;
  void *v41;
  double v42;
  NSString v43;
  id v44;
  CATransform3D v45;
  CATransform3D v46;

  v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_reticleShapeLayer);
  objc_msgSend(v4, "removeAllAnimations");
  v5 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointLayer);
  objc_msgSend(v5, "removeAllAnimations");
  v6 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_pulsateLayer);
  objc_msgSend(v6, "removeAllAnimations");
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_dropLayer), "removeAllAnimations");
  if (!a1 || a1 == 3)
  {
    v23 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
    if (qword_10047B000 != -1)
      swift_once(&qword_10047B000, sub_100196AD4);
    v24 = objc_msgSend((id)qword_1004AFB18, "CGColor");
    objc_msgSend(v23, "setFromValue:", v24);

    if (qword_10047B008 != -1)
      swift_once(&qword_10047B008, sub_100196B0C);
    v25 = objc_msgSend((id)qword_1004AFB20, "CGColor");
    if (qword_10047B020 != -1)
      swift_once(&qword_10047B020, sub_100196CA0);

    objc_msgSend(v4, "setStrokeColor:", v25);
    v26 = objc_msgSend(v4, "strokeColor");
    objc_msgSend(v23, "setToValue:", v26);

    v27 = sub_10016D268();
    v28 = qword_10047B010;
    v29 = v27;
    if (v28 != -1)
      swift_once(&qword_10047B010, sub_100196BF0);
    v30 = objc_msgSend((id)qword_1004AFB28, "CGColor");
    objc_msgSend(v29, "setFromValue:", v30);

    v31 = objc_msgSend((id)qword_1004AFB20, "CGColor");
    v32 = objc_msgSend((id)qword_1004AFB38, "CGColor");

    objc_msgSend(v5, "setFillColor:", v32);
    v33 = v29;
    v34 = objc_msgSend(v5, "fillColor");
    objc_msgSend(v33, "setToValue:", v34);

    v35 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "addAnimation:forKey:", v23, v35);

    v36 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "addAnimation:forKey:", v33, v36);

    v37 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_scaleOutAnimation);
    CATransform3DMakeScale(&v46, 1.5, 1.5, 1.0);
    isa = CATransform3D._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v37, "setFromValue:", isa);

    CATransform3DMakeScale(&v45, 1.0, 1.0, 1.0);
    objc_msgSend(v4, "setTransform:", &v45);
    CATransform3DMakeScale(&v45, 1.0, 1.0, 1.0);
    v39 = CATransform3D._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v37, "setToValue:", v39);

    v40 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "addAnimation:forKey:", v37, v40);

    v41 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_idlePulsateAnimation);
    LODWORD(v42) = 2139095039;
    objc_msgSend(v41, "setRepeatCount:", v42);
    v43 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "addAnimation:forKey:", v41, v43);

  }
  else if (a1 == 1)
  {
    v7 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
    if (qword_10047B008 != -1)
      swift_once(&qword_10047B008, sub_100196B0C);
    v8 = objc_msgSend((id)qword_1004AFB20, "CGColor");
    objc_msgSend(v7, "setFromValue:", v8);

    v9 = objc_msgSend((id)qword_1004AFB20, "CGColor");
    if (qword_10047B020 != -1)
      swift_once(&qword_10047B020, sub_100196CA0);

    objc_msgSend(v4, "setStrokeColor:", v9);
    v10 = objc_msgSend(v4, "strokeColor");
    objc_msgSend(v7, "setToValue:", v10);

    v11 = sub_10016D268();
    v12 = qword_10047B018;
    v13 = v11;
    if (v12 != -1)
      swift_once(&qword_10047B018, sub_100196C28);
    v14 = objc_msgSend((id)qword_1004AFB30, "CGColor");
    objc_msgSend(v13, "setFromValue:", v14);

    v15 = objc_msgSend((id)qword_1004AFB20, "CGColor");
    v16 = objc_msgSend((id)qword_1004AFB38, "CGColor");

    objc_msgSend(v5, "setFillColor:", v16);
    v17 = v13;
    v18 = objc_msgSend(v5, "fillColor");
    objc_msgSend(v17, "setToValue:", v18);

    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "addAnimation:forKey:", v7, v19);

    v20 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "addAnimation:forKey:", v17, v20);

    v21 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_idlePulsateAnimation);
    LODWORD(v22) = 2139095039;
    objc_msgSend(v21, "setRepeatCount:", v22);
    v44 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "addAnimation:forKey:", v21, v44);

  }
}

void sub_10016DAEC(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  void *v19;
  Class isa;
  Class v21;
  NSString v22;
  CATransform3D v23;
  CATransform3D v24;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_reticleShapeLayer);
  objc_msgSend(v3, "removeAllAnimations");
  v4 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointLayer);
  objc_msgSend(v4, "removeAllAnimations");
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_pulsateLayer), "removeAllAnimations");
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_dropLayer), "removeAllAnimations");
  CATransform3DMakeScale(&v24, 1.0, 1.0, 1.0);
  objc_msgSend(v4, "setTransform:", &v24);
  switch(a1)
  {
    case 0:
      v8 = sub_10016D268();
      v9 = qword_10047B010;
      v10 = v8;
      if (v9 != -1)
        swift_once(&qword_10047B010, sub_100196BF0);
      v11 = objc_msgSend((id)qword_1004AFB28, "CGColor");
      objc_msgSend(v10, "setFromValue:", v11);

      if (qword_10047B000 != -1)
        swift_once(&qword_10047B000, sub_100196AD4);
      v12 = objc_msgSend((id)qword_1004AFB18, "CGColor");
      if (qword_10047B018 != -1)
        swift_once(&qword_10047B018, sub_100196C28);
      v13 = objc_msgSend((id)qword_1004AFB30, "CGColor");

      objc_msgSend(v4, "setFillColor:", v13);
      v14 = v10;
      v15 = objc_msgSend(v4, "fillColor");
      objc_msgSend(v14, "setToValue:", v15);

      v16 = String._bridgeToObjectiveC()();
      objc_msgSend(v4, "addAnimation:forKey:", v14, v16);

      goto LABEL_23;
    case 1:
      v5 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
      if (qword_10047B008 != -1)
        swift_once(&qword_10047B008, sub_100196B0C);
      v17 = objc_msgSend((id)qword_1004AFB20, "CGColor");
      objc_msgSend(v5, "setFromValue:", v17);

      if (qword_10047B000 != -1)
        swift_once(&qword_10047B000, sub_100196AD4);
      v7 = objc_msgSend((id)qword_1004AFB18, "CGColor");
      if (qword_10047B018 == -1)
        goto LABEL_22;
      break;
    case 2:
      v5 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
      if (qword_10047B008 != -1)
        swift_once(&qword_10047B008, sub_100196B0C);
      v6 = objc_msgSend((id)qword_1004AFB20, "CGColor");
      objc_msgSend(v5, "setFromValue:", v6);

      if (qword_10047B000 != -1)
        swift_once(&qword_10047B000, sub_100196AD4);
      v7 = objc_msgSend((id)qword_1004AFB18, "CGColor");
      if (qword_10047B018 == -1)
        goto LABEL_22;
      break;
    default:
      return;
  }
  swift_once(&qword_10047B018, sub_100196C28);
LABEL_22:

  objc_msgSend(v3, "setStrokeColor:", v7);
  v18 = objc_msgSend(v3, "strokeColor");
  objc_msgSend(v5, "setToValue:", v18);

  v19 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_scaleOutAnimation);
  CATransform3DMakeScale(&v24, 1.0, 1.0, 1.0);
  isa = CATransform3D._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v19, "setFromValue:", isa);

  CATransform3DMakeScale(&v23, 1.5, 1.5, 1.5);
  objc_msgSend(v3, "setTransform:", &v23);
  CATransform3DMakeScale(&v23, 1.5, 1.5, 1.0);
  v21 = CATransform3D._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v19, "setToValue:", v21);

  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "addAnimation:forKey:", v5, v22);

  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "addAnimation:forKey:", v19, v16);
LABEL_23:

}

void sub_10016E114(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  NSString v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  NSString v30;
  NSString v31;
  void *v32;
  Class isa;
  Class v34;
  NSString v35;
  id v36;
  CATransform3D v37;
  CATransform3D v38;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_reticleShapeLayer);
  objc_msgSend(v3, "removeAllAnimations");
  v4 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointLayer);
  objc_msgSend(v4, "removeAllAnimations");
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_pulsateLayer), "removeAllAnimations");
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_dropLayer), "removeAllAnimations");
  if (!a1 || a1 == 3)
  {
    v18 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
    if (qword_10047B000 != -1)
      swift_once(&qword_10047B000, sub_100196AD4);
    v19 = objc_msgSend((id)qword_1004AFB18, "CGColor");
    objc_msgSend(v18, "setFromValue:", v19);

    if (qword_10047B008 != -1)
      swift_once(&qword_10047B008, sub_100196B0C);
    v20 = objc_msgSend((id)qword_1004AFB20, "CGColor");
    if (qword_10047B018 != -1)
      swift_once(&qword_10047B018, sub_100196C28);

    objc_msgSend(v3, "setStrokeColor:", v20);
    v21 = objc_msgSend(v3, "strokeColor");
    objc_msgSend(v18, "setToValue:", v21);

    v22 = sub_10016D268();
    v23 = qword_10047B010;
    v24 = v22;
    if (v23 != -1)
      swift_once(&qword_10047B010, sub_100196BF0);
    v25 = objc_msgSend((id)qword_1004AFB28, "CGColor");
    objc_msgSend(v24, "setFromValue:", v25);

    v26 = objc_msgSend((id)qword_1004AFB20, "CGColor");
    v27 = objc_msgSend((id)qword_1004AFB30, "CGColor");

    objc_msgSend(v4, "setFillColor:", v27);
    v28 = v24;
    v29 = objc_msgSend(v4, "fillColor");
    objc_msgSend(v28, "setToValue:", v29);

    v30 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "addAnimation:forKey:", v18, v30);

    v31 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "addAnimation:forKey:", v28, v31);

    v32 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_scaleOutAnimation);
    CATransform3DMakeScale(&v38, 1.5, 1.5, 1.0);
    isa = CATransform3D._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v32, "setFromValue:", isa);

    CATransform3DMakeScale(&v37, 1.0, 1.0, 1.0);
    objc_msgSend(v3, "setTransform:", &v37);
    CATransform3DMakeScale(&v37, 1.0, 1.0, 1.0);
    v34 = CATransform3D._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v32, "setToValue:", v34);

    v35 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "addAnimation:forKey:", v32, v35);

  }
  else if (a1 == 2)
  {
    v5 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
    if (qword_10047B008 != -1)
      swift_once(&qword_10047B008, sub_100196B0C);
    v6 = objc_msgSend((id)qword_1004AFB20, "CGColor");
    objc_msgSend(v5, "setFromValue:", v6);

    v7 = objc_msgSend((id)qword_1004AFB20, "CGColor");
    if (qword_10047B018 != -1)
      swift_once(&qword_10047B018, sub_100196C28);

    objc_msgSend(v3, "setStrokeColor:", v7);
    v8 = objc_msgSend(v3, "strokeColor");
    objc_msgSend(v5, "setToValue:", v8);

    v9 = sub_10016D268();
    v10 = qword_10047B020;
    v11 = v9;
    if (v10 != -1)
      swift_once(&qword_10047B020, sub_100196CA0);
    v12 = objc_msgSend((id)qword_1004AFB38, "CGColor");
    objc_msgSend(v11, "setFromValue:", v12);

    v13 = objc_msgSend((id)qword_1004AFB20, "CGColor");
    v14 = objc_msgSend((id)qword_1004AFB30, "CGColor");

    objc_msgSend(v4, "setFillColor:", v14);
    v15 = v11;
    v16 = objc_msgSend(v4, "fillColor");
    objc_msgSend(v15, "setToValue:", v16);

    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "addAnimation:forKey:", v5, v17);

    v36 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "addAnimation:forKey:", v15, v36);

  }
}

uint64_t type metadata accessor for ReticleAnimator()
{
  return objc_opt_self(_TtC7Measure15ReticleAnimator);
}

void sub_10016E940(void *a1, char a2)
{
  uint64_t v2;
  void *v4;
  NSString v5;
  id v6;
  id v7;
  char v8;
  NSString v9;
  id v10;
  id v11;
  char v12;

  if ((a2 & 1) != 0)
  {
    v4 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointLayer);
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend(v4, "animationForKey:", v5);

    if (v6)
    {
      sub_100018148(0, &qword_100487010, CAAnimation_ptr);
      v7 = a1;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
        goto LABEL_6;
    }
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend(v4, "animationForKey:", v9);

    if (v10)
    {
      sub_100018148(0, &qword_100487010, CAAnimation_ptr);
      v11 = a1;
      v12 = static NSObject.== infix(_:_:)(v11, v10);

      if ((v12 & 1) != 0)
LABEL_6:
        objc_msgSend(v4, "removeAllAnimations");
    }
  }
}

uint64_t sub_10016EB10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_10016EB34()
{
  uint64_t v0;

  return sub_10016C92C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10016EB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10016EB4C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10016EB54(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

void sub_10016EB78()
{
  uint64_t v0;

  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  sub_10016EB9C();
}

void sub_10016EB9C()
{
  _QWORD *v0;
  _QWORD *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, __n128);
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, __n128);
  __n128 v39;
  char *v40;
  uint64_t v41;

  v1 = v0;
  v2 = v0 + 36;
  v3 = *v0;
  v4 = sub_10000EDC8(&qword_10047E5E0);
  KeyPath = swift_getKeyPath(&unk_1003B9DB0);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v6 = qword_1004AF890;
  v7 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v4 + 272);
  v8 = swift_retain();
  v1[8] = v7(KeyPath, v6, v8);
  v9 = sub_10000EDC8(&qword_10047BBA8);
  v10 = swift_getKeyPath(&unk_1003B9DD8);
  v11 = qword_1004AF890;
  v12 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v9 + 272);
  v13 = swift_retain();
  v1[9] = v12(v10, v11, v13);
  v14 = swift_getKeyPath(&unk_1003B9E00);
  v15 = sub_10000EDC8(&qword_10047BBA0);
  v16 = qword_1004AF890;
  v17 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v15 + 272);
  v18 = swift_retain();
  v1[10] = v17(v14, v16, v18);
  v19 = swift_getKeyPath(&unk_1003B9E28);
  v20 = sub_10000EDC8(&qword_10047BBD0);
  v21 = qword_1004AF890;
  v22 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v20 + 272);
  v23 = swift_retain();
  v1[11] = v22(v19, v21, v23);
  v24 = swift_getKeyPath(&unk_1003B9E50);
  v25 = sub_10000EDC8(&qword_1004819A0);
  v26 = qword_1004AF890;
  v27 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v25 + 272);
  v28 = swift_retain();
  v1[12] = v27(v24, v26, v28);
  v29 = sub_10000EDC8(&qword_10047D010);
  v30 = swift_getKeyPath(&unk_1003B9E78);
  v31 = qword_1004AF890;
  v32 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v29 + 272);
  v33 = swift_retain();
  v1[13] = v32(v30, v31, v33);
  sub_10000EDC8(&qword_1004871F8);
  v34 = swift_getKeyPath(&unk_1003B9EA0);
  v1[14] = MutableStateValue.__allocating_init(_:_:)(v34, v3);
  v35 = sub_10000EDC8(&qword_100487200);
  v36 = swift_getKeyPath(&unk_1003B9EC8);
  v37 = qword_1004AF890;
  v38 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v35 + 272);
  v39 = swift_retain();
  v1[15] = v38(v36, v37, v39);
  *((_WORD *)v1 + 68) = 2;
  *((_BYTE *)v1 + 138) = 0;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_BYTE *)v1 + 208) = 1;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  *((_OWORD *)v1 + 16) = 0u;
  *((_OWORD *)v1 + 17) = 0u;
  *v2 = 1;
  v2[88] = 1;
  v40 = (char *)v1 + qword_100487030;
  v1[46] = 0;
  v41 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
  swift_release();
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002DLL, 0x80000001003D7D70, "Measure/ReticleController.swift", 31, 2, 81, 0);
  __break(1u);
}

double sub_10016EE98()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  _QWORD v3[3];
  uint64_t v4;
  _BYTE v5[16];
  void (*v6)(uint64_t);
  uint64_t v7;

  v6 = sub_10017055C;
  v7 = v0;
  swift_retain();
  swift_retain();
  StateValue.ifUpdated(_:)(sub_10004185C, v5);
  swift_release();
  swift_release();
  v3[2] = sub_100170564;
  v4 = v0;
  swift_retain();
  swift_retain();
  StateValue.ifUpdated(_:)(sub_100170578, v3);
  swift_release();
  swift_release();
  v1 = swift_allocObject(&unk_100449470, 24, 7);
  swift_weakInit(v1 + 16, v0);
  swift_retain();
  StateValue.ifUpdated(_:)(sub_100170610, v1);
  swift_release();
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)(sub_100170618, v0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10016EFB8(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  if (a1 == 0xC000000000000018 && *(unsigned __int8 *)(a2 + 136) <= 1u)
  {
    *(_BYTE *)(a2 + 136) = 2;
    v2 = *(void **)(*(_QWORD *)(a2 + 128) + OBJC_IVAR____TtC7Measure11ReticleView_animator);
    if (v2)
    {
      v3 = v2;
      sub_10016C5E8();

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10016F038(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  double v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  Swift::String v13;
  uint64_t (*v14)(uint64_t);
  void *v15;
  id (*v16)();
  uint64_t v17;

  v2 = v1;
  if ((_BYTE)a1)
  {
    objc_msgSend(*(id *)(v1 + 128), "setState:", 0);
  }
  else
  {
    v3 = a1 & 0x101000000;
    if (qword_10047AA70 != -1)
      swift_once(&qword_10047AA70, sub_1000E13E4);
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease(0xE000000000000000);
    v13._countAndFlagsBits = 0xD000000000000011;
    v13._object = (void *)0x80000001003E3370;
    if (v3)
      v4 = 0.0;
    else
      v4 = 1.0;
    if (v3)
      v5 = 0x65736C6166;
    else
      v5 = 1702195828;
    if (v3)
      v6 = 0xE500000000000000;
    else
      v6 = 0xE400000000000000;
    v7 = v6;
    String.append(_:)(*(Swift::String *)&v5);
    swift_bridgeObjectRelease(v6);
    Log.debug(_:isPrivate:)(v13, 0);
    objc_msgSend(*(id *)(v1 + 128), "alpha", swift_bridgeObjectRelease(v13._object).n128_f64[0]);
    if (v8 != v4)
    {
      v9 = swift_allocObject(&unk_1004494C0, 32, 7);
      *(_QWORD *)(v9 + 16) = v2;
      *(double *)(v9 + 24) = v4;
      v10 = objc_allocWithZone((Class)UIViewPropertyAnimator);
      v16 = sub_100170EF0;
      v17 = v9;
      v13._countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
      v13._object = (void *)1107296256;
      v14 = sub_10003ECA0;
      v15 = &unk_1004494D8;
      v11 = _Block_copy(&v13);
      swift_retain();
      swift_release();
      v12 = objc_msgSend(v10, "initWithDuration:dampingRatio:animations:", v11, 0.5, 0.6);
      _Block_release(v11);
      objc_msgSend(v12, "setInterruptible:", 0);
      objc_msgSend(v12, "startAnimation");

    }
  }
}

void sub_10016F284(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void (*v4)(void **__return_ptr, __n128);
  __n128 v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  _BYTE v14[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v4 = *(void (**)(void **__return_ptr, __n128))(**(_QWORD **)(Strong + 80) + 144);
    v5 = swift_retain();
    v4(&v10, v5);
    swift_release();
    v6 = v10;
    v7 = v11;
    v8 = v12;
    v9 = v13;
    sub_100170648(v10, v11);
    swift_release();

  }
}

uint64_t sub_10016F330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  void *v10;
  void *v11;
  __n128 v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD aBlock[5];
  uint64_t v18;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100049274();
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  aBlock[4] = sub_100170628;
  v18 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003ECA0;
  aBlock[3] = &unk_100449488;
  v11 = _Block_copy(aBlock);
  swift_retain();
  v12 = swift_release();
  static DispatchQoS.unspecified.getter(v12);
  aBlock[0] = _swiftEmptyArrayStorage;
  v13 = sub_100030E1C();
  v14 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v15 = sub_100030E64();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v14, v15, v1, v13);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10016F4E4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return sub_1000C21E4(v0 + qword_100487030);
}

uint64_t sub_10016F548(uint64_t a1)
{
  uint64_t v1;

  v1 = StateObserver.deinit(a1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_1000C21E4(v1 + qword_100487030);
  return v1;
}

uint64_t sub_10016F5C4(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_10016F548(a1);
  return swift_deallocClassInstance(v1, *(unsigned int *)(*(_QWORD *)v1 + 48), *(unsigned __int16 *)(*(_QWORD *)v1 + 52));
}

uint64_t type metadata accessor for ReticleController(uint64_t a1)
{
  uint64_t result;

  result = qword_100487060;
  if (!qword_100487060)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReticleController);
  return result;
}

void sub_10016F620(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[17];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[9] = &unk_1003B9BC8;
  v4[10] = &unk_1003B9BE0;
  v4[11] = &unk_1003B9BC8;
  v4[12] = &unk_1003B9BF8;
  v4[13] = &unk_1003B9BF8;
  v4[14] = &unk_1003B9C10;
  v4[15] = &unk_1003B9C28;
  sub_10005CFA4(319);
  if (v3 <= 0x3F)
  {
    v4[16] = *(_QWORD *)(v2 - 8) + 64;
    swift_initClassMetadata2(a1, 256, 17, v4, a1 + 208);
  }
}

ValueMetadata *type metadata accessor for ReticleController.ReticleConditions()
{
  return &type metadata for ReticleController.ReticleConditions;
}

uint64_t _s7Measure17ReticleControllerC12ReticleStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10016F74C + 4 * byte_1003B9B25[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10016F780 + 4 * byte_1003B9B20[v4]))();
}

uint64_t sub_10016F780(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10016F788(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10016F790);
  return result;
}

uint64_t sub_10016F79C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10016F7A4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10016F7A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10016F7B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReticleController.ReticleState()
{
  return &type metadata for ReticleController.ReticleState;
}

unint64_t sub_10016F7D0()
{
  unint64_t result;

  result = qword_1004871E8;
  if (!qword_1004871E8)
  {
    result = swift_getWitnessTable(&unk_1003B9CD8, &type metadata for ReticleController.ReticleState);
    atomic_store(result, (unint64_t *)&qword_1004871E8);
  }
  return result;
}

unint64_t sub_10016F818()
{
  unint64_t result;

  result = qword_1004871F0;
  if (!qword_1004871F0)
  {
    result = swift_getWitnessTable(&unk_1003B9D78, &type metadata for ReticleController.ReticleConditions);
    atomic_store(result, (unint64_t *)&qword_1004871F0);
  }
  return result;
}

void sub_10016F85C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  swift_retain();
  StateValue.wrappedValue.getter(&v2, v1);
  swift_release();
  if (v2 >> 62 == 2 || v2 >> 62 == 1)
  {
    sub_10001A810(v2);
  }
  else
  {
    sub_10001A810(v2);
    *(_BYTE *)(v0 + 138) = 0;
  }
}

void sub_10016F8C4()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 138) = 1;
}

void sub_10016F8D0()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 138) = 2;
}

void sub_10016F8DC()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 138) = 0;
}

void sub_10016F8E8()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 138) = 3;
}

void sub_10016F8F4(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)(a1 + 128) + OBJC_IVAR____TtC7Measure11ReticleView_animator);
  if (v1)
  {
    v2 = v1;
    sub_10016C774();

  }
  else
  {
    __break(1u);
  }
}

void sub_10016F940(_QWORD *a1, _QWORD *a2, uint64_t a3, unsigned __int32 a4)
{
  uint64_t v4;
  double v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  void (*v51)(_OWORD *__return_ptr, __n128);
  __n128 v52;
  char v53;
  void *v54;
  id v55;
  uint64_t (*v56)(char *, uint64_t, unint64_t);
  int v57;
  uint64_t v58;
  __n128 v59;
  char *v60;
  double v61;
  void (*v62)(char *, unint64_t);
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  char v69;
  void (*v70)(double *__return_ptr, __n128);
  __n128 v71;
  char v72;
  int v73;
  char v74;
  float v75;
  __n128 v76;
  __n128 v77;
  __n128 v78;
  __n128 v79;
  __n128 v80;
  __n128 v81;
  __n128 v82;
  __n128 v83;
  __n128 v84;
  void (*v85)(double *__return_ptr, __n128);
  __n128 v86;
  void (*v87)(_QWORD *__return_ptr, __n128);
  __n128 v88;
  uint64_t v89;
  double v90;
  uint64_t v91;
  double (*v92)(__n128);
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  double v101;
  double v102;
  double v103;
  uint64_t v104;
  void *v105;
  double *v106;
  double v107;
  uint64_t v108;
  char *v109;
  _QWORD *v110;
  _QWORD *v111;
  __n128 v112;
  __n128 v113;
  __n128 v114;
  __n128 v115;
  __n128 v116;
  uint64_t v117;
  _QWORD v118[64];
  _OWORD v119[32];
  double v120[64];
  _BYTE v121[32];

  v115.n128_u32[0] = a4;
  v110 = a2;
  v111 = a1;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v109 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114.n128_u64[0] = type metadata accessor for DispatchPredicate(0);
  v113.n128_u64[0] = *(_QWORD *)(v114.n128_u64[0] - 8);
  __chkstk_darwin(v114.n128_u64[0]);
  v112.n128_u64[0] = (unint64_t)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v108 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v108 - v19;
  v21 = __chkstk_darwin(v18);
  v116.n128_u64[0] = (unint64_t)&v108 - v22;
  __chkstk_darwin(v21);
  v24 = (char *)&v108 - v23;
  v117 = v4;
  v25 = v4 + qword_100487030;
  if ((a3 & 1) != 0)
  {
    swift_beginAccess(v4 + qword_100487030, v120, 0, 0);
    sub_1000C219C(v25, (uint64_t)v24);
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v24, 1, v7);
    v27 = sub_1000C21E4((uint64_t)v24);
    v28 = v117;
    if (v26 != 1)
    {
      v29 = *(_OWORD *)(v117 + 320);
      v30 = *(_OWORD *)(v117 + 336);
      v32 = *(_QWORD *)(v117 + 352);
      v31 = *(_QWORD *)(v117 + 360);
      *(_OWORD *)(v117 + 144) = *(_OWORD *)(v117 + 304);
      *(_OWORD *)(v28 + 160) = v29;
      *(_OWORD *)(v28 + 176) = v30;
      *(_QWORD *)(v28 + 192) = v32;
      *(_QWORD *)(v28 + 200) = v31;
      *(_BYTE *)(v28 + 208) = 0;
    }
    v33 = v116.n128_u64[0];
    Date.init()(v27);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
    swift_beginAccess(v25, v119, 33, 0);
    sub_1000C2224(v33, v25);
    swift_endAccess(v119);
    *(_BYTE *)(v28 + 137) = 0;
    v34 = *(void **)(*(_QWORD *)(v28 + 128) + OBJC_IVAR____TtC7Measure11ReticleView_animator);
    if (v34)
    {
      v35 = v34;
      sub_10016C5D4();

      return;
    }
    goto LABEL_41;
  }
  v36 = v7;
  if ((v115.n128_u8[0] & 1) != 0)
  {
    swift_beginAccess(v25, v120, 0, 0);
    sub_1000C219C(v25, (uint64_t)v20);
    v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v20, 1, v7);
    v38 = sub_1000C21E4((uint64_t)v20);
    v39 = v117;
    if (v37 != 1)
    {
      v40 = *(_OWORD *)(v117 + 320);
      v41 = *(_OWORD *)(v117 + 336);
      v43 = *(_QWORD *)(v117 + 352);
      v42 = *(_QWORD *)(v117 + 360);
      *(_OWORD *)(v117 + 144) = *(_OWORD *)(v117 + 304);
      *(_OWORD *)(v39 + 160) = v40;
      *(_OWORD *)(v39 + 176) = v41;
      *(_QWORD *)(v39 + 192) = v43;
      *(_QWORD *)(v39 + 200) = v42;
      *(_BYTE *)(v39 + 208) = 0;
    }
    v44 = v116.n128_u64[0];
    Date.init()(v38);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v44, 0, 1, v7);
    swift_beginAccess(v25, v119, 33, 0);
    sub_1000C2224(v44, v25);
    swift_endAccess(v119);
    if (qword_10047A938 != -1)
      swift_once(&qword_10047A938, sub_100083764);
    v45 = qword_1004AF290;
    sub_100049274();
    v47 = static OS_dispatch_queue.main.getter(v46);
    v48 = v112.n128_u64[0];
    *(_QWORD *)v112.n128_u64[0] = v47;
    v36 = v113.n128_u64[0];
    v49 = v114.n128_u64[0];
    (*(void (**)(uint64_t, _QWORD, unint64_t))(v113.n128_u64[0] + 104))(v48, enum case for DispatchPredicate.onQueue(_:), v114.n128_u64[0]);
    v50 = _dispatchPreconditionTest(_:)(v48);
    (*(void (**)(uint64_t, unint64_t))(v36 + 8))(v48, v49);
    if ((v50 & 1) != 0)
    {
      v51 = *(void (**)(_OWORD *__return_ptr, __n128))(**(_QWORD **)(v45 + 56) + 144);
      v52 = swift_retain();
      v51(v119, v52);
      swift_release();
      v53 = BYTE3(v119[0]) | BYTE4(v119[0]);
      if (((BYTE3(v119[0]) | BYTE4(v119[0])) & 1) == 0)
        sub_1000838C4(2);
      *(_BYTE *)(v39 + 137) = (v53 & 1) == 0;
      v54 = *(void **)(*(_QWORD *)(v39 + 128) + OBJC_IVAR____TtC7Measure11ReticleView_animator);
      if (v54)
      {
        v55 = v54;
        sub_10016C5E8();

        return;
      }
      goto LABEL_42;
    }
    __break(1u);
    goto LABEL_39;
  }
  v48 = v4 + qword_100487030;
  swift_beginAccess(v25, v121, 0, 0);
  sub_1000C219C(v25, (uint64_t)v17);
  a3 = v8;
  v56 = *(uint64_t (**)(char *, uint64_t, unint64_t))(v8 + 48);
  v57 = v56(v17, 1, v36);
  v58 = sub_1000C21E4((uint64_t)v17);
  v39 = v117;
  if (v57 == 1)
  {
LABEL_35:
    v92 = *(double (**)(__n128))((swift_isaMask & *v111) + 0x2B0);
    *(double *)&v93 = v92(v59);
    *(_OWORD *)(v39 + 144) = v93;
    *(_OWORD *)(v39 + 160) = v94;
    *(_OWORD *)(v39 + 176) = v95;
    *(_OWORD *)(v39 + 192) = v96;
    *(_BYTE *)(v39 + 208) = 0;
    *(double *)&v97 = ((double (*)(void))v92)();
    *(_OWORD *)(v39 + 304) = v97;
    *(_OWORD *)(v39 + 320) = v98;
    *(_OWORD *)(v39 + 336) = v99;
    *(_OWORD *)(v39 + 352) = v100;
    v90 = (*(double (**)(void))((swift_isaMask & *v110) + 0x200))();
    goto LABEL_36;
  }
  v60 = v109;
  Date.init()(v58);
  sub_1000C219C(v48, (uint64_t)v14);
  if (v56(v14, 1, v36) == 1)
  {
LABEL_43:
    __break(1u);
    return;
  }
  v61 = Date.timeIntervalSince(_:)(v14);
  v62 = *(void (**)(char *, unint64_t))(a3 + 8);
  v62(v60, v36);
  v62(v14, v36);
  v5 = fabs(v61);
  if (v5 > 0.1 && (*(_BYTE *)(v39 + 137) & 1) == 0 && *(_BYTE *)(v39 + 136) == 1)
  {
    if (qword_10047A938 == -1)
    {
LABEL_22:
      v63 = qword_1004AF290;
      sub_100049274();
      v65 = static OS_dispatch_queue.main.getter(v64);
      v66 = v112.n128_u64[0];
      *(_QWORD *)v112.n128_u64[0] = v65;
      v67 = v113.n128_u64[0];
      v68 = v114.n128_u64[0];
      (*(void (**)(unint64_t, _QWORD, unint64_t))(v113.n128_u64[0] + 104))(v66, enum case for DispatchPredicate.onQueue(_:), v114.n128_u64[0]);
      v69 = _dispatchPreconditionTest(_:)(v66);
      (*(void (**)(unint64_t, unint64_t))(v67 + 8))(v66, v68);
      if ((v69 & 1) == 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      v70 = *(void (**)(double *__return_ptr, __n128))(**(_QWORD **)(v63 + 56) + 144);
      v71 = swift_retain();
      v70(v120, v71);
      swift_release();
      v72 = BYTE3(v120[0]) | BYTE4(v120[0]);
      if (((BYTE3(v120[0]) | BYTE4(v120[0])) & 1) == 0)
        sub_1000838C4(1);
      *(_BYTE *)(v39 + 137) = (v72 & 1) == 0;
      goto LABEL_26;
    }
LABEL_39:
    swift_once(&qword_10047A938, sub_100083764);
    goto LABEL_22;
  }
LABEL_26:
  if (v5 > 0.5)
  {
    v73 = *(unsigned __int8 *)(v39 + 136);
    if (v73 == 3)
    {
      v74 = 2;
    }
    else
    {
      if (v73 != 1)
      {
LABEL_34:
        v91 = v116.n128_u64[0];
        (*(void (**)(unint64_t, uint64_t, uint64_t, unint64_t))(a3 + 56))(v116.n128_u64[0], 1, 1, v36);
        swift_beginAccess(v48, v120, 33, 0);
        sub_1000C2224(v91, v48);
        v59 = swift_endAccess(v120);
        *(_BYTE *)(v39 + 137) = 0;
        goto LABEL_35;
      }
      v74 = 0;
    }
    *(_BYTE *)(v39 + 136) = v74;
    goto LABEL_34;
  }
  if ((*(_BYTE *)(v39 + 208) & 1) != 0)
    return;
  v116 = *(__n128 *)(v39 + 144);
  v115 = *(__n128 *)(v39 + 160);
  v114 = *(__n128 *)(v39 + 176);
  v113 = *(__n128 *)(v39 + 192);
  v75 = spring(tension:friction:velocity:elapsed:)(400.0, 40.0, 0.0, v5);
  v76.n128_f64[0] = (*(double (**)(void))((swift_isaMask & *v111) + 0x2B0))();
  *(float *)&v107 = v75;
  v80.n128_f64[0] = slerp(transform1:transform2:percent:)(v116, v115, v114, v113, v76, v77, v78, v79, v107);
  v115 = v81;
  v116 = v80;
  v113 = v83;
  v114 = v82;
  *(__n128 *)(v39 + 304) = v80;
  *(__n128 *)(v39 + 320) = v81;
  *(__n128 *)(v39 + 336) = v82;
  *(__n128 *)(v39 + 352) = v83;
  type metadata accessor for MeasureCamera(0);
  v84.n128_f64[0] = simd_float4x4.position.getter(v116, v115, v114, v113);
  v116 = v84;
  v85 = *(void (**)(double *__return_ptr, __n128))(**(_QWORD **)(v39 + 88) + 144);
  v86 = swift_retain();
  v85(v120, v86);
  swift_release();
  memcpy(v119, v120, sizeof(v119));
  sub_100012C00((uint64_t)v119);
  v115 = (__n128)v119[11];
  v114 = (__n128)v119[12];
  v113 = (__n128)v119[13];
  v112 = (__n128)v119[14];
  v87 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v39 + 88) + 144);
  v88 = swift_retain();
  v87(v118, v88);
  swift_release();
  memcpy(v120, v118, sizeof(v120));
  v89 = sub_100012C00((uint64_t)v120);
  v90 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v89, v116, v115, v114, v113, v112, v120[4]);
LABEL_36:
  v101 = CGPoint.init(_:)(v90);
  v103 = v102;
  v104 = *(_QWORD *)(v39 + 128);
  v105 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v105, "begin");
  objc_msgSend(v105, "setAnimationDuration:", 0.0);
  objc_msgSend(*(id *)(v104 + OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer), "setPosition:", v101, v103);
  v106 = (double *)(v104 + OBJC_IVAR____TtC7Measure11ReticleView_targetOffset);
  *v106 = v101;
  v106[1] = v103;
  objc_msgSend(v105, "commit");
}

uint64_t sub_100170208@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 152);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_100170218(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, __n128);
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, __n128);
  __n128 v42;
  char *v43;
  uint64_t v44;
  id v45;
  char v47[24];
  void *v48;
  void *v49;

  v2 = v1;
  v4 = v1 + 36;
  v5 = *v1;
  v6 = sub_10000EDC8(&qword_10047E5E0);
  KeyPath = swift_getKeyPath(&unk_1003B9DB0);
  v8 = qword_10047AD88;
  swift_retain();
  if (v8 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v9 = qword_1004AF890;
  v10 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v6 + 272);
  v11 = swift_retain();
  v2[8] = v10(KeyPath, v9, v11);
  v12 = sub_10000EDC8(&qword_10047BBA8);
  v13 = swift_getKeyPath(&unk_1003B9DD8);
  v14 = qword_1004AF890;
  v15 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 272);
  v16 = swift_retain();
  v2[9] = v15(v13, v14, v16);
  v17 = swift_getKeyPath(&unk_1003B9E00);
  v18 = sub_10000EDC8(&qword_10047BBA0);
  v19 = qword_1004AF890;
  v20 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v18 + 272);
  v21 = swift_retain();
  v2[10] = v20(v17, v19, v21);
  v22 = swift_getKeyPath(&unk_1003B9E28);
  v23 = sub_10000EDC8(&qword_10047BBD0);
  v24 = qword_1004AF890;
  v25 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v23 + 272);
  v26 = swift_retain();
  v2[11] = v25(v22, v24, v26);
  v27 = swift_getKeyPath(&unk_1003B9E50);
  v28 = sub_10000EDC8(&qword_1004819A0);
  v29 = qword_1004AF890;
  v30 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v28 + 272);
  v31 = swift_retain();
  v2[12] = v30(v27, v29, v31);
  v32 = sub_10000EDC8(&qword_10047D010);
  v33 = swift_getKeyPath(&unk_1003B9E78);
  v34 = qword_1004AF890;
  v35 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v32 + 272);
  v36 = swift_retain();
  v2[13] = v35(v33, v34, v36);
  sub_10000EDC8(&qword_1004871F8);
  v37 = swift_getKeyPath(&unk_1003B9EA0);
  v2[14] = MutableStateValue.__allocating_init(_:_:)(v37, v5);
  v38 = sub_10000EDC8(&qword_100487200);
  v39 = swift_getKeyPath(&unk_1003B9EC8);
  v40 = qword_1004AF890;
  v41 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v38 + 272);
  v42 = swift_retain();
  v2[15] = v41(v39, v40, v42);
  *((_WORD *)v2 + 68) = 2;
  *((_BYTE *)v2 + 138) = 0;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_BYTE *)v2 + 208) = 1;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *v4 = 1;
  v4[88] = 1;
  v43 = (char *)v2 + qword_100487030;
  v2[46] = 0;
  v44 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v43, 1, 1, v44);
  v2[16] = a1;
  *((_OWORD *)v2 + 19) = 0u;
  *((_OWORD *)v2 + 20) = 0u;
  *((_OWORD *)v2 + 21) = 0u;
  *((_OWORD *)v2 + 22) = 0u;
  v45 = a1;
  swift_release();
  v48 = &type metadata for Configurations.Default;
  v49 = &protocol witness table for Configurations.Default;
  return StateObserver.init(configuration:)(v47);
}

uint64_t sub_10017054C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 152);
  *a2 = v2;
  return swift_retain(v2);
}

void sub_10017055C(uint64_t a1)
{
  uint64_t v1;

  sub_10016EFB8(a1, v1);
}

void sub_100170564(uint64_t a1)
{
  sub_10016F038(a1 & 0x1010101FFLL);
}

uint64_t sub_100170578(unsigned __int8 *a1)
{
  uint64_t v1;
  const mach_header_64 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = &_mh_execute_header;
  if (!a1[4])
    v2 = 0;
  v3 = 0x1000000;
  if (!a1[3])
    v3 = 0;
  v4 = 0x10000;
  if (!a1[2])
    v4 = 0;
  v5 = 256;
  if (!a1[1])
    v5 = 0;
  return (*(uint64_t (**)(unint64_t))(v1 + 16))(v5 | *a1 | v4 | v3 | (unint64_t)v2);
}

uint64_t sub_1001705EC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100170610(uint64_t a1)
{
  uint64_t v1;

  sub_10016F284(a1, v1);
}

_BYTE *sub_100170618(_BYTE *result)
{
  if (!*result)
    return (_BYTE *)sub_10016F330();
  return result;
}

void sub_100170628()
{
  uint64_t v0;

  sub_10016F8F4(v0);
}

uint64_t sub_100170630(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100170640(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100170648(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(unint64_t *__return_ptr, __n128);
  __n128 v10;
  id v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t (*v15)(void);
  _QWORD *v16;
  uint64_t v17;
  double (*v18)(void);
  _QWORD *v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  BOOL *v31;
  double *v32;
  double (*v33)(void);
  _QWORD *v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  double v39;
  uint64_t v40;
  BOOL v41;
  float32x2_t v42;
  uint64_t v43;
  BOOL v44;
  __n128 v45;
  __n128 v46;
  __n128 v47;
  __n128 v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x2_t v52;
  _QWORD *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  void (*v58)(unint64_t *__return_ptr, __n128);
  _QWORD *v59;
  _QWORD *v60;
  __n128 v61;
  void *v62;
  uint64_t v63;
  __n128 v64;
  __n128 v65;
  __n128 v66;
  __n128 v67;
  id v68;
  __n128 v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __n128 v73;
  float32x4_t v74;
  float32x4_t v75;
  float32x4_t v76;
  float v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t (*v86)(unint64_t *, __n128);
  __n128 v87;
  void (*v88)(unint64_t *, _QWORD);
  _DWORD *v89;
  __n128 v90;
  _QWORD *v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  double v115;
  uint64_t v116;
  _QWORD *v117;
  __n128 v118;
  __n128 v119;
  __n128 v120;
  __n128 v121;
  id v122;
  __n128 v123;
  __n128 v124;
  __n128 v125;
  __n128 v126;
  char *v127;
  BOOL *v128;
  double *v129;
  id v130;
  unint64_t *v131;
  unint64_t *v132;
  unint64_t *v133;
  __n128 v134;
  __n128 v135;
  __n128 v136;
  __n128 v137;
  _QWORD *v138;
  unint64_t v139[64];
  unint64_t v140[64];
  _BYTE v141[80];
  _OWORD v142[4];
  BOOL v143;

  v3 = v2;
  v6 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  __chkstk_darwin(v6);
  v8 = (char *)&v116 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(v2 + 96) + 144);
  v10 = swift_retain();
  v9(v140, v10);
  swift_release();
  if (LOBYTE(v140[0]) != 1)
  {
    v11 = a1;
    swift_retain();
    v138 = a2;
    StateValue.wrappedValue.getter(v140, v138);
    swift_release();
    v127 = v8;
    if ((v140[0] >> 62) - 1 >= 2)
    {
      if (v140[0] >> 62 != 3 || v140[0] != 0xC000000000000018)
      {
        sub_10001A810(v140[0]);
LABEL_8:
        v12 = v11;
        v13 = *(_QWORD *)(v2 + 368);
        v128 = (BOOL *)(v2 + 288);
        v14 = *(_BYTE *)(v2 + 376);
        if (a2)
        {
          v15 = *(uint64_t (**)(void))((swift_isaMask & *v138) + 0x2F0);
          v16 = v138;
          v17 = v15();

          v129 = (double *)(v3 + 224);
          sub_1000F3C80(v3 + 224, (uint64_t)v141);
          v18 = *(double (**)(void))((swift_isaMask & *v16) + 0x2B0);
          v19 = v16;
          v20.n128_f64[0] = v18();
          v136 = v21;
          v137 = v20;
          v134 = v23;
          v135 = v22;

          v25 = v134;
          v24 = v135;
          v27 = v136;
          v26 = v137;
        }
        else
        {
          v129 = (double *)(v2 + 224);
          sub_1000F3C80(v2 + 224, (uint64_t)v141);
          v17 = 0;
          v26 = 0uLL;
          v27 = 0uLL;
          v24 = 0uLL;
          v25 = 0uLL;
        }
        v142[0] = v26;
        v142[1] = v27;
        v142[2] = v24;
        v142[3] = v25;
        v143 = a2 == 0;
        v28 = sub_100182A30(v13, v14, v17, a2 == 0, (uint64_t)v141, (uint64_t)v142);
        v29 = v28;
        if ((v28 & 0x101) != 0)
        {
          if ((v28 & 0x100) != 0)
            v30 = 3;
          else
            v30 = 1;
          *(_BYTE *)(v3 + 136) = v30;
        }
        v130 = v12;
        v31 = v128;
        v32 = v129;
        if (a2)
        {
          v33 = *(double (**)(void))((swift_isaMask & *v138) + 0x2B0);
          v34 = v138;
          v35.n128_f64[0] = v33();
          v136 = v36;
          v137 = v35;
          v134 = v38;
          v135 = v37;

          v39 = simd_float4x4.position.getter(v137, v136, v135, v134);
          v137.n128_u64[0] = v3 + 232;
          v136.n128_u64[0] = v3 + 240;
          v135.n128_u64[0] = v3 + 248;
          v133 = (unint64_t *)(v3 + 264);
          v134.n128_u64[0] = v3 + 256;
          v41 = *v31;
          v131 = (unint64_t *)(v3 + 280);
          v132 = (unint64_t *)(v3 + 272);
          if (v41)
          {
LABEL_25:
            if (a1)
            {
              v58 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(v3 + 88) + 144);
              v59 = v138;
              v60 = v130;
              v61 = swift_retain();
              v58(v139, v61);
              swift_release();
              memcpy(v140, v139, sizeof(v140));
              v62 = (void *)sub_10008F8B8();
              v63 = sub_100012C00((uint64_t)v140);
              if (v62)
              {
                v117 = v60;
                v64.n128_f64[0] = (*(double (**)(uint64_t))((swift_isaMask & *v59) + 0x2B0))(v63);
                v125 = v65;
                v126 = v64;
                v123 = v67;
                v124 = v66;
                v122 = v62;
                v68 = objc_msgSend(v62, "camera");
                objc_msgSend(v68, "transform");
                v120 = v70;
                v121 = v69;
                v118 = v72;
                v119 = v71;

                v73.n128_f64[0] = simd_float4x4.position.getter(v121, v120, v119, v118);
                v121 = v73;
                *(double *)v74.i64 = simd_float4x4.position.getter(v126, v125, v124, v123);
                v75 = vsubq_f32((float32x4_t)v121, v74);
                v76 = vmulq_f32(v75, v75);
                v77 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v76, 2), vaddq_f32(v76, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v76.f32, 1))).f32[0]);
                v78 = *(char **)(v3 + 128);
                v79 = (*(uint64_t (**)(void))((swift_isaMask & *v59) + 0x2C0))();
                v80 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v79 + 216))(v79);
                swift_release();
                if (v80)
                {
                  v81 = *(_BYTE *)(v80 + 48);
                  swift_release();
                }
                else
                {
                  v81 = 7;
                }
                sub_100172000(v81, v126, v125, v124, v123, v77);
                v31 = v128;
                v32 = v129;
                if (*(_BYTE *)(v3 + 138))
                {
                  swift_retain();
                  StateValue.wrappedValue.getter(v139, v108);
                  swift_release();
                  v109 = v139[0];
                  sub_10001A810(v139[0]);
                  if (v109 != 0xC000000000000010)
                  {
                    objc_msgSend(v78, "setState:", 0);
                    *(_BYTE *)(v3 + 137) = 0;
                    v110 = type metadata accessor for Date(0);
                    v111 = (uint64_t)v127;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v127, 1, 1, v110);
                    v112 = v3 + qword_100487030;
                    swift_beginAccess(v3 + qword_100487030, v139, 33, 0);
                    sub_1000C2224(v111, v112);
                    swift_endAccess(v139);
LABEL_43:
                    v113 = v117;
LABEL_44:
                    sub_10016F940(v59, v113, v29 & 1, (v29 >> 8) & 1);

                    goto LABEL_31;
                  }
                }
                else if ((*(uint64_t (**)(void))((swift_isaMask & *v59) + 0xD0))() != 4)
                {
                  swift_retain();
                  StateValue.wrappedValue.getter(v139, v114);
                  *(_QWORD *)&v115 = swift_release().n128_u64[0];
                  v113 = v117;
                  if (!LOBYTE(v139[0]))
                    objc_msgSend(v78, "setState:", 1, v115);
                  goto LABEL_44;
                }
                objc_msgSend(v78, "setState:", 3);
                goto LABEL_43;
              }

            }
LABEL_30:
            v82 = (uint64_t)v127;
            v78 = *(char **)(v3 + 128);
            objc_msgSend(v78, "setState:", 0);
            *(_BYTE *)(v3 + 137) = 0;
            v83 = type metadata accessor for Date(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 1, 1, v83);
            v84 = v3 + qword_100487030;
            swift_beginAccess(v3 + qword_100487030, v139, 33, 0);
            sub_1000C2224(v82, v84);
            swift_endAccess(v139);
LABEL_31:
            v85 = *(_DWORD *)&v78[OBJC_IVAR____TtC7Measure11ReticleView_currentDiameter];
            v86 = *(uint64_t (**)(unint64_t *, __n128))(**(_QWORD **)(v3 + 112) + 400);
            v87 = swift_retain();
            v88 = (void (*)(unint64_t *, _QWORD))v86(v139, v87);
            *v89 = v85;
            v88(v139, 0);
            v90 = swift_release();
            if (a2)
            {
              v91 = v138;
              *(_QWORD *)(v3 + 368) = (*(uint64_t (**)(__n128))((swift_isaMask & *v138) + 0x2F0))(v90);
              v31[88] = 0;
              v92 = (*(double (**)(void))((swift_isaMask & *v91) + 0x2B0))();
              v94 = v93;
              v95 = v92;
              v97 = v96;
              v99 = v98;
              v101 = v100;
              v103 = v102;
              v105 = v104;
              v107 = v106;
            }
            else
            {
              v95 = 0.0;
              v94 = 0;
              v99 = 0;
              v97 = 0;
              v103 = 0;
              v101 = 0;
              v107 = 0;
              v105 = 0;
              *(_QWORD *)(v3 + 368) = 0;
              v31[88] = 1;
            }
            *v32 = v95;
            *(_QWORD *)v137.n128_u64[0] = v94;
            *(_QWORD *)v136.n128_u64[0] = v99;
            *(_QWORD *)v135.n128_u64[0] = v97;
            *(_QWORD *)v134.n128_u64[0] = v103;
            *v133 = v101;
            *v132 = v107;
            *v131 = v105;
            *v31 = a2 == 0;
            goto LABEL_35;
          }
          v42 = *(float32x2_t *)&v39;
          v43 = v40;
        }
        else
        {
          v137.n128_u64[0] = v3 + 232;
          v136.n128_u64[0] = v3 + 240;
          v135.n128_u64[0] = v3 + 248;
          v133 = (unint64_t *)(v3 + 264);
          v134.n128_u64[0] = v3 + 256;
          v44 = *v128;
          v131 = (unint64_t *)(v3 + 280);
          v132 = (unint64_t *)(v3 + 272);
          if (v44)
            goto LABEL_30;
          v43 = 0;
          v42 = 0;
        }
        v45.n128_f64[0] = *v32;
        v45.n128_u64[1] = *(_QWORD *)v137.n128_u64[0];
        v46.n128_u64[0] = *(_QWORD *)v136.n128_u64[0];
        v46.n128_u64[1] = *(_QWORD *)v135.n128_u64[0];
        v47.n128_u64[0] = *(_QWORD *)v134.n128_u64[0];
        v47.n128_u64[1] = *v133;
        v48.n128_u64[0] = *v132;
        v48.n128_u64[1] = *v131;
        *(double *)v49.i64 = simd_float4x4.position.getter(v45, v46, v47, v48);
        if (!a2)
          goto LABEL_30;
        if (*(_BYTE *)(v3 + 136) == 2)
        {
          *(float32x2_t *)v50.f32 = v42;
          v50.i64[1] = v43;
          v51 = vsubq_f32(v50, v49);
          v52 = vsub_f32(v42, *(float32x2_t *)v49.f32);
          if ((float)(COERCE_FLOAT(vmulq_f32(v51, v51).i32[2]) + vaddv_f32(vmul_f32(v52, v52))) < 0.00000011921)
          {
            v53 = v138;
            *(_QWORD *)(v3 + 368) = (*(uint64_t (**)(void))((swift_isaMask & *v138) + 0x2F0))();
            v31[88] = 0;
            *(double *)&v54 = (*(double (**)(void))((swift_isaMask & *v53) + 0x2B0))();
            *(_OWORD *)(v3 + 224) = v54;
            *(_OWORD *)(v3 + 240) = v55;
            *(_OWORD *)(v3 + 256) = v56;
            *(_OWORD *)(v3 + 272) = v57;
            *v31 = 0;
LABEL_35:

            return;
          }
        }
        goto LABEL_25;
      }
    }
    else
    {
      sub_10001A810(v140[0]);
    }
    *(_BYTE *)(v2 + 138) = 1;
    goto LABEL_8;
  }
}

uint64_t sub_100170ECC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

id sub_100170EF0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 128), "setAlpha:", *(double *)(v0 + 24));
}

uint64_t *sub_100170F18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_100170FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = type metadata accessor for URL(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_10017101C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for URL(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_10017108C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for URL(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1001710FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for URL(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_10017116C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for URL(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1001711DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001711E8);
}

uint64_t sub_1001711E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100171224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100171230);
}

uint64_t sub_100171230(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MeasurementCapture(uint64_t a1)
{
  uint64_t result;

  result = qword_100487260;
  if (!qword_100487260)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MeasurementCapture);
  return result;
}

uint64_t sub_1001712AC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

double sub_100171314(CGImage *a1, double a2, double a3)
{
  int64_t Width;
  double v7;
  double v8;
  int64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  int64_t v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double MinY;
  double v25;
  double MaxY;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  int64_t Height;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  int64_t v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double MinX;
  double v46;
  double MaxX;
  double v48;
  double v49;
  double v50;
  double v51;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;

  Width = CGImageGetWidth(a1);
  if (Width >= (uint64_t)CGImageGetHeight(a1))
  {
    v31 = (double)(uint64_t)CGImageGetHeight(a1) / 0.75;
    v32 = (double)(uint64_t)CGImageGetHeight(a1) * 0.5;
    Height = CGImageGetHeight(a1);
    v34 = CGSize.init(_:_:)(v31, (double)Height);
    v12 = CGRect.init(center:size:)(a2, v32, v34, v35);
    v37 = v36;
    v16 = v38;
    v18 = v39;
    v40 = (double)(uint64_t)CGImageGetWidth(a1);
    v41 = CGImageGetHeight(a1);
    v42 = CGSize.init(_:_:)(v40, (double)v41);
    v44 = v43;
    v57.origin.x = 0.0;
    v57.origin.y = 0.0;
    v57.size.width = v42;
    v57.size.height = v44;
    MinX = CGRectGetMinX(v57);
    v58.origin.x = v12;
    v58.origin.y = v37;
    v58.size.width = v16;
    v58.size.height = v18;
    v46 = MinX - CGRectGetMinX(v58);
    v59.origin.x = 0.0;
    v59.origin.y = 0.0;
    v59.size.width = v42;
    v59.size.height = v44;
    MaxX = CGRectGetMaxX(v59);
    v60.origin.x = v12;
    v60.origin.y = v37;
    v60.size.width = v16;
    v60.size.height = v18;
    v48 = CGRectGetMaxX(v60);
    if (v46 <= 0.0)
    {
      v51 = MaxX - v48;
      if (v51 >= 0.0)
        return v12;
      v28 = v51 + CGRect.center.getter(v12, v37, v16, v18);
    }
    else
    {
      v28 = v46 + CGRect.center.getter(v12, v37, v16, v18);
    }
    CGRect.center.getter(v12, v37, v16, v18);
    return CGRect.init(center:size:)(v28, v30, v16, v18);
  }
  v7 = (double)(uint64_t)CGImageGetWidth(a1) * 0.75;
  v8 = (double)(uint64_t)CGImageGetWidth(a1) * 0.5;
  v9 = CGImageGetWidth(a1);
  v10 = CGSize.init(_:_:)((double)v9, v7);
  v12 = CGRect.init(center:size:)(v8, a3, v10, v11);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = (double)(uint64_t)CGImageGetWidth(a1);
  v20 = CGImageGetHeight(a1);
  v21 = CGSize.init(_:_:)(v19, (double)v20);
  v23 = v22;
  v53.origin.x = 0.0;
  v53.origin.y = 0.0;
  v53.size.width = v21;
  v53.size.height = v23;
  MinY = CGRectGetMinY(v53);
  v54.origin.x = v12;
  v54.origin.y = v14;
  v54.size.width = v16;
  v54.size.height = v18;
  v25 = MinY - CGRectGetMinY(v54);
  v55.origin.x = 0.0;
  v55.origin.y = 0.0;
  v55.size.width = v21;
  v55.size.height = v23;
  MaxY = CGRectGetMaxY(v55);
  v56.origin.x = v12;
  v56.origin.y = v14;
  v56.size.width = v16;
  v56.size.height = v18;
  v27 = CGRectGetMaxY(v56);
  if (v25 > 0.0)
  {
    v28 = CGRect.center.getter(v12, v14, v16, v18);
    CGRect.center.getter(v12, v14, v16, v18);
    v30 = v25 + v29;
    return CGRect.init(center:size:)(v28, v30, v16, v18);
  }
  v49 = MaxY - v27;
  if (MaxY - v27 < 0.0)
  {
    v28 = CGRect.center.getter(v12, v14, v16, v18);
    CGRect.center.getter(v12, v14, v16, v18);
    v30 = v49 + v50;
    return CGRect.init(center:size:)(v28, v30, v16, v18);
  }
  return v12;
}

uint64_t sub_100171640(double a1, double a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t inited;
  const __CFString *v12;
  const __CFString *v13;
  const __CFString *v14;
  unint64_t v15;
  NSDictionary v16;
  const __CFData *isa;
  CGImageSource *v18;
  CFDictionaryRef v19;
  CFDictionaryRef v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  void *v31;
  CGImageRef ThumbnailAtIndex;
  CGImage *v33;
  id v34;
  double v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  void *v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  id v47;
  double v48;
  CGFloat v49;
  double v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double Width;
  double v58;
  void *v59;
  id v60;
  double v61;
  double v62;
  id v63;
  double v64;
  double v65;
  double v66;
  int64_t Height;
  double v68;
  double v69;
  double v70;
  double v71;
  CGImageRef v72;
  CGImageRef v73;
  UIImage *v74;
  NSData *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  double v80;
  void *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[5];
  __int128 v86;
  __int128 v87;
  _OWORD v88[2];
  _BYTE v89[160];
  CGRect v90;
  CGRect v91;

  v6 = v5;
  v10 = sub_10000EDC8(&qword_100487298);
  inited = swift_initStackObject(v10, v89);
  *(_OWORD *)(inited + 16) = xmmword_1003B0F50;
  *(_QWORD *)(inited + 32) = kCGImageSourceCreateThumbnailWithTransform;
  *(_BYTE *)(inited + 40) = 1;
  *(_QWORD *)(inited + 64) = &type metadata for Bool;
  *(_QWORD *)(inited + 72) = kCGImageSourceCreateThumbnailFromImageAlways;
  *(_BYTE *)(inited + 80) = 1;
  *(_QWORD *)(inited + 104) = &type metadata for Bool;
  *(_QWORD *)(inited + 112) = kCGImageSourceThumbnailMaxPixelSize;
  *(_QWORD *)(inited + 144) = &type metadata for Int;
  *(_QWORD *)(inited + 120) = 800;
  v12 = (id)kCGImageSourceCreateThumbnailWithTransform;
  v13 = (id)kCGImageSourceCreateThumbnailFromImageAlways;
  v14 = (id)kCGImageSourceThumbnailMaxPixelSize;
  v15 = sub_1000C76A0(inited);
  type metadata accessor for CFString(0);
  sub_100171F48();
  v16.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v15);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v18 = CGImageSourceCreateWithData(isa, 0);

  if (!v18)
  {
LABEL_29:
    if ((a5 & 1) == 0)
    {
LABEL_31:

      return 0;
    }
LABEL_30:
    sub_100171C8C();
    goto LABEL_31;
  }
  v19 = CGImageSourceCopyPropertiesAtIndex(v18, 0, 0);
  if (!v19
    || (v20 = v19,
        v85[0] = 0,
        static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)(v19, v85, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v20, (v21 = v85[0]) == 0))
  {

    if ((a5 & 1) == 0)
      goto LABEL_31;
    goto LABEL_30;
  }
  v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCGImagePropertyPixelWidth);
  v84 = v22;
  AnyHashable.init<A>(_:)(v85, &v83, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v21 + 16) && (v23 = sub_1000C82B0((uint64_t)v85), (v24 & 1) != 0))
  {
    sub_10004F88C(*(_QWORD *)(v21 + 56) + 32 * v23, (uint64_t)&v86);
  }
  else
  {
    v86 = 0u;
    v87 = 0u;
  }
  sub_1000C9818((uint64_t)v85);
  if (!*((_QWORD *)&v87 + 1))
  {
    swift_bridgeObjectRelease(v21);
LABEL_28:

    sub_100018180((uint64_t)&v86);
    goto LABEL_29;
  }
  sub_100020848(&v86, v88);
  type metadata accessor for CFNumber(0);
  v26 = v25;
  swift_dynamicCast(&v83, v88, (char *)&type metadata for Any + 8, v25, 7);
  v27 = (void *)v83;
  v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCGImagePropertyPixelHeight);
  v84 = v28;
  AnyHashable.init<A>(_:)(v85, &v83, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v21 + 16) && (v29 = sub_1000C82B0((uint64_t)v85), (v30 & 1) != 0))
  {
    sub_10004F88C(*(_QWORD *)(v21 + 56) + 32 * v29, (uint64_t)&v86);
  }
  else
  {
    v86 = 0u;
    v87 = 0u;
  }
  swift_bridgeObjectRelease(v21);
  sub_1000C9818((uint64_t)v85);
  if (!*((_QWORD *)&v87 + 1))
  {

    goto LABEL_28;
  }
  sub_100020848(&v86, v88);
  swift_dynamicCast(&v83, v88, (char *)&type metadata for Any + 8, v26, 7);
  v31 = (void *)v83;
  ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v18, 0, v16.super.isa);
  if (!ThumbnailAtIndex)
  {

    if ((a5 & 1) == 0)
      goto LABEL_31;
    goto LABEL_30;
  }
  v33 = ThumbnailAtIndex;
  v34 = v27;
  v35 = CGFloat.init(truncating:)();
  v82 = v34;

  v36 = v31;
  v37 = CGFloat.init(truncating:)();
  v81 = v36;

  v38 = CGSize.init(_:_:)(v35, v37);
  v40 = v39;
  v41 = (void *)objc_opt_self(UIScreen);
  v42 = objc_msgSend(v41, "mainScreen");
  objc_msgSend(v42, "nativeBounds");
  v44 = v43;
  v46 = v45;

  if (v40 <= v38)
  {
    v47 = objc_msgSend(v41, "mainScreen");
    objc_msgSend(v47, "nativeBounds");
    v49 = v48;
    v80 = v38;
    v50 = v40;
    v52 = v51;
    v54 = v53;
    v56 = v55;

    v90.origin.x = v49;
    v90.origin.y = v52;
    v40 = v50;
    v38 = v80;
    v90.size.width = v54;
    v90.size.height = v56;
    Width = CGRectGetWidth(v90);
    v44 = CGSize.init(_:_:)(v46, Width);
    v46 = v58;
  }
  if (v38 == v44 && v40 == v46)
  {
    v59 = (void *)objc_opt_self(UIScreen);
    v60 = objc_msgSend(v59, "mainScreen");
    objc_msgSend(v60, "nativeScale");
    v62 = v61;

    a1 = v62 * a1;
    v63 = objc_msgSend(v59, "mainScreen");
    objc_msgSend(v63, "nativeScale");
    v65 = v64;

    a2 = v65 * a2;
  }
  v66 = (double)(uint64_t)CGImageGetWidth(v33);
  Height = CGImageGetHeight(v33);
  v68 = CGSize.init(_:_:)(v66, (double)Height);
  v70 = CGSize.init(_:_:)(v68 / v38, v69 / v40);
  v91.origin.x = sub_100171314(v33, a1 * v70, a2 * v71);
  v72 = CGImageCreateWithImageInRect(v33, v91);
  if (!v72)
  {
    if ((a5 & 1) != 0)
      sub_100171C8C();

    return 0;
  }
  v73 = v72;
  v74 = (UIImage *)objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v72);
  v75 = UIImageJPEGRepresentation(v74, 1.0);

  if (v75)
  {
    v76 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v75);
    v78 = v77;

    Data.write(to:options:)(v6, 0, v76, v78);
    sub_100036300(v76, v78);
  }
  else
  {

  }
  return 1;
}

void sub_100171C8C()
{
  id v0;
  uint64_t v1;
  void *v2;
  void *v3;
  unsigned int v4;
  id v5;
  id v6;
  NSURL *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  unsigned int v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  v0 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v1 = type metadata accessor for MeasurementCapture(0);
  URL._bridgeToObjectiveC()((NSURL *)*(int *)(v1 + 20));
  v3 = v2;
  v19 = 0;
  v4 = objc_msgSend(v0, "removeItemAtURL:error:", v2, &v19);

  v5 = v19;
  if (v4)
  {
    v6 = v19;
  }
  else
  {
    v8 = v19;
    v9 = _convertNSErrorToError(_:)(v5);

    swift_willThrow(v10);
    swift_errorRelease(v9);
  }
  URL._bridgeToObjectiveC()(v7);
  v12 = v11;
  v19 = 0;
  v13 = objc_msgSend(v0, "removeItemAtURL:error:", v11, &v19);

  v14 = v19;
  if (v13)
  {
    v15 = v19;

  }
  else
  {
    v16 = v19;
    v17 = _convertNSErrorToError(_:)(v14);

    swift_willThrow(v18);
    swift_errorRelease(v17);
  }
}

uint64_t sub_100171DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v15;

  v4 = __chkstk_darwin(a1);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v15 - v8;
  v12 = static URL.== infix(_:_:)(v7 + *(int *)(v10 + 20), v11 + *(int *)(v10 + 20));
  sub_100171EC8(a1, (uint64_t)v9);
  sub_100171EC8(a2, (uint64_t)v6);
  if ((v12 & 1) != 0)
    v13 = static URL.== infix(_:_:)(v9, v6);
  else
    v13 = 0;
  sub_100171F0C((uint64_t)v6);
  sub_100171F0C((uint64_t)v9);
  return v13 & 1;
}

uint64_t sub_100171EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MeasurementCapture(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100171F0C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MeasurementCapture(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100171F48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10047B510;
  if (!qword_10047B510)
  {
    type metadata accessor for CFString(255);
    result = swift_getWitnessTable(&unk_1003B04E4, v1);
    atomic_store(result, (unint64_t *)&qword_10047B510);
  }
  return result;
}

ValueMetadata *type metadata accessor for RubberBand()
{
  return &type metadata for RubberBand;
}

double sub_100171FA0(double result, double a2, double a3, double a4, double a5)
{
  if (a3 < result)
    return (1.0 - 1.0 / ((result - a3) / a4 * a5 + 1.0)) * a4 + a3;
  if (result < a2)
    return a2 - (1.0 - 1.0 / ((a2 - result) / a4 * a5 + 1.0)) * a4;
  return result;
}

void sub_100172000(char a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, float a6)
{
  char *v6;
  char *v7;
  float v10;
  double v11;
  float v12;
  void *v13;
  uint64_t v14;
  id v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  unsigned int v28;
  __n128 *v29;
  float v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  void (*v35)(CATransform3D *__return_ptr, __n128);
  __n128 v36;
  uint64_t v37;
  void *v38;
  CGFloat v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  void *v44;
  char *v45;
  double v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  __n128 v50;
  __n128 v51;
  __n128 v52;
  __n128 v53;
  __n128 v54;
  __n128 v56;
  __n128 v57;
  __n128 v58;
  __n128 v60;
  __n128 v61;
  __n128 v63;
  __n128 v64;
  __n128 v66;
  __n128 v67;
  CATransform3D aBlock;
  CATransform3D __src[4];
  CATransform3D __dst[4];
  CATransform3D v71;

  v7 = v6;
  v10 = (float)(1.0 / (float)(a6 + 0.3)) + 0.5;
  if (qword_10047B048 != -1)
    swift_once(&qword_10047B048, sub_100196FAC);
  v11 = v10;
  v12 = qword_1004AFB50(a6);
  if (qword_10047B050 != -1)
    swift_once(&qword_10047B050, sub_100196FF8);
  *(float *)&v6[OBJC_IVAR____TtC7Measure11ReticleView_currentDiameter] = (float)(v12 * *(float *)&dword_1004AFB60)
                                                                       + (float)(v12 * *(float *)&dword_1004AFB60);
  v13 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v13, "begin");
  objc_msgSend(v13, "setAnimationDuration:", 0.0);
  v14 = OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer;
  v15 = *(id *)&v7[OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer];
  CATransform3DMakeScale(__dst, v11, v11, 1.0);
  objc_msgSend(v15, "setTransform:", __dst);

  objc_msgSend(v13, "commit");
  v16.n128_f64[0] = simd_float4x4.up.getter(a2, a3, a4, a5);
  v52 = v16;
  v17.n128_f64[0] = simd_float4x4.position.getter(a2, a3, a4, a5);
  v18.n128_f64[0] = createTransform(normal:forward:position:)(v52, (__n128)xmmword_1003B1A00, v17);
  v53 = v19;
  v56 = v18;
  v48 = v21;
  v50 = v20;
  v22.n128_f64[0] = simd_float4x4.up.getter(v18, v19, v20, v21);
  v22.n128_u32[3] = 0;
  v66 = v22;
  v24.n128_f64[0] = simd_float4x4.forward.getter(v23);
  v24.n128_u32[3] = 0;
  v63 = v24;
  v25 = simd_float4x4.right.getter(v56, v53, v50, v48);
  v26.n128_u64[0] = (unint64_t)vsub_f32(0, (float32x2_t)v25.n128_u64[0]);
  v26.n128_f32[2] = 0.0 - v25.n128_f32[2];
  v26.n128_u32[3] = 0;
  v60 = v26;
  v27.n128_f64[0] = simd_float4x4.position.getter(v56, v53, v50, v48);
  v27.n128_u32[3] = 1.0;
  v57 = v27;
  v28 = objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable");
  v29 = (__n128 *)&v7[OBJC_IVAR____TtC7Measure11ReticleView_currentReticleTransform];
  if (v28)
  {
    v51 = v29[1];
    v54 = *v29;
    v47 = v29[3];
    v49 = v29[2];
    sub_100174280(a1);
    *(float *)&v46 = v30 * 0.2;
    v31.n128_f64[0] = slerp(transform1:transform2:percent:)(v54, v51, v49, v47, v60, v63, v66, v57, v46);
  }
  else
  {
    v32 = v63;
    v33 = v66;
    v34 = v57;
    v31 = v60;
  }
  v61 = v31;
  v64 = v32;
  v58 = v34;
  v67 = v33;
  *v29 = v31;
  v29[1] = v32;
  v29[2] = v33;
  v29[3] = v34;
  type metadata accessor for MeasureCamera(0);
  v35 = *(void (**)(CATransform3D *__return_ptr, __n128))(**(_QWORD **)&v7[OBJC_IVAR____TtC7Measure11ReticleView__frameState]
                                                                   + 144);
  v36 = swift_retain();
  v35(__src, v36);
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  v37 = sub_100012C00((uint64_t)__dst);
  static MeasureCamera.getLayerTransform(for:view:)(&v71, v37, v61, v64, v67, v58, *(__n128 *)&__dst[0].m23, *(__n128 *)&__dst[0].m31, *(__n128 *)&__dst[0].m33, *(__n128 *)&__dst[0].m41);
  __src[0] = v71;
  CATransform3DScale(&aBlock, __src, v12, v12, 1.0);
  __src[0] = aBlock;
  if (!objc_msgSend(v7, "state"))
  {
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC7Measure11ReticleView_reticleParentLayer], "removeAllAnimations");
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC7Measure11ReticleView_reticleBackingView], "_removeAllRetargetableAnimations:", 1);
    objc_msgSend(*(id *)&v7[v14], "removeAllAnimations");
    sub_100174338(&__src[0].m11);
  }
  v38 = (void *)objc_opt_self(UIView);
  v39 = COERCE_DOUBLE(swift_allocObject(&unk_100449890, 152, 7));
  v40 = *(_OWORD *)&__src[0].m33;
  *(_OWORD *)(*(_QWORD *)&v39 + 88) = *(_OWORD *)&__src[0].m31;
  *(_OWORD *)(*(_QWORD *)&v39 + 104) = v40;
  v41 = *(_OWORD *)&__src[0].m43;
  *(_OWORD *)(*(_QWORD *)&v39 + 120) = *(_OWORD *)&__src[0].m41;
  *(_OWORD *)(*(_QWORD *)&v39 + 136) = v41;
  v42 = *(_OWORD *)&__src[0].m13;
  *(_OWORD *)(*(_QWORD *)&v39 + 24) = *(_OWORD *)&__src[0].m11;
  *(_OWORD *)(*(_QWORD *)&v39 + 40) = v42;
  v43 = *(_OWORD *)&__src[0].m23;
  *(_OWORD *)(*(_QWORD *)&v39 + 56) = *(_OWORD *)&__src[0].m21;
  *(_QWORD *)(*(_QWORD *)&v39 + 16) = v7;
  *(_OWORD *)(*(_QWORD *)&v39 + 72) = v43;
  *(_QWORD *)&aBlock.m21 = sub_100175A4C;
  aBlock.m22 = v39;
  *(_QWORD *)&aBlock.m11 = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.m12 = 1107296256;
  *(_QWORD *)&aBlock.m13 = sub_10003ECA0;
  *(_QWORD *)&aBlock.m14 = &unk_1004498A8;
  v44 = _Block_copy(&aBlock);
  v45 = v7;
  objc_msgSend(v38, "_animateUsingSpringInteractive:animations:completion:", 0, v44, 0, swift_release().n128_f64[0]);
  _Block_release(v44);
}

unint64_t sub_1001724C8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_100175544(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_100172548(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  char *v4;
  CGFloat v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  CGRect v12;
  CGRect v13;

  v2 = OBJC_IVAR____TtC7Measure11ReticleView__state;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11ReticleView__state] != a1)
  {
    v4 = v1;
    switch(a1)
    {
      case 0:
        objc_msgSend(v1, "frame");
        v5 = CGRectGetWidth(v12) * 0.5;
        objc_msgSend(v1, "frame");
        objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer], "setPosition:", v5, CGRectGetHeight(v13) * 0.5);
        v6 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ReticleView_animator];
        if (!v6)
        {
          __break(1u);
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
LABEL_17:
          v11 = a1;
          _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for ReticleState, &v11, &type metadata for ReticleState, &type metadata for Int);
          __break(1u);
          JUMPOUT(0x1001726F8);
        }
        v7 = v6;
        sub_10016C990((uint64_t)objc_msgSend(v4, "state"));
        break;
      case 1:
        v10 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ReticleView_animator];
        if (!v10)
          goto LABEL_16;
        v7 = v10;
        sub_10016E114((uint64_t)objc_msgSend(v4, "state"));
        break;
      case 2:
        v8 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ReticleView_animator];
        if (!v8)
          goto LABEL_14;
        v7 = v8;
        sub_10016D354((uint64_t)objc_msgSend(v4, "state"));
        break;
      case 3:
        v9 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ReticleView_animator];
        if (!v9)
          goto LABEL_15;
        v7 = v9;
        sub_10016DAEC((uint64_t)objc_msgSend(v4, "state"));
        break;
      default:
        goto LABEL_17;
    }

    *(_QWORD *)&v4[v2] = a1;
  }
}

void sub_100172728(unint64_t a1)
{
  char *v1;
  uint64_t v3;
  double v4;
  double v5;
  uint64_t (*v6)(__n128);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(double (*)(uint64_t), uint64_t);
  char *v11;
  CGRect v12;
  CGRect v13;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.isIPad()() & 1) != 0)
  {
    if (a1 - 1 >= 4)
      return;
    goto LABEL_6;
  }
  if (a1 <= 4 && ((1 << a1) & 0x1A) != 0)
  {
LABEL_6:
    v3 = OBJC_IVAR____TtC7Measure11ReticleView__orientation;
    if (*(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11ReticleView__orientation] != a1)
    {
      objc_msgSend(v1, "frame");
      v4 = CGRectGetWidth(v12) * 0.5;
      objc_msgSend(v1, "frame");
      v5 = CGRectGetHeight(v13) * 0.5;
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_reticleParentLayer], "setPosition:", v4, v5);
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer], "setPosition:", v4, v5);
      *(double *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_searchArea] = SIMD2<>.init(_:)(v4, v5);
      v6 = *(uint64_t (**)(__n128))(**(_QWORD **)&v1[OBJC_IVAR____TtC7Measure11ReticleView__input] + 200);
      v7 = swift_retain();
      v8 = v6(v7);
      swift_release();
      v9 = swift_allocObject(&unk_1004496D8, 24, 7);
      *(_QWORD *)(v9 + 16) = v1;
      v10 = *(void (**)(double (*)(uint64_t), uint64_t))(*(_QWORD *)v8 + 280);
      v11 = v1;
      v10(sub_100175578, v9);
      swift_release();
      swift_release();
      *(_QWORD *)&v1[v3] = a1;
    }
  }
}

void sub_100172910(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, __n128);
  __n128 v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  float v45;
  CGFloat v46;
  double v47;
  float v48;
  id v49;
  void *v50;
  unsigned int v51;
  float *v52;
  float v53;
  double v54;
  void *v55;
  void *v56;
  float v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  void *v75;
  double v76;
  double v77;
  double v78;
  id v79;
  void *v80;
  CGFloat v81;
  uint64_t (*v82)(__n128);
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(double (*)(uint64_t), uint64_t);
  char *v87;
  id v88;
  uint64_t v89;
  id v90;
  id v91;
  uint64_t v92;
  id v93;
  id v94;
  void *v95;
  void *v96;
  id v97;
  id v98;
  id v99;
  id v100;
  uint64_t v101;
  void *v102;
  id v103;
  void *v104;
  void *v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  void *v111;
  id v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  char *v117;
  char isEscapingClosureAtFileLocation;
  id v119;
  void *v120;
  CGFloat v121;
  void *v122;
  id v123;
  id v124;
  _QWORD aBlock[12];
  objc_super v126;
  CGRect v127;
  CGRect v128;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  *(_QWORD *)&v4[OBJC_IVAR____TtC7Measure11ReticleView__state] = 0;
  v10 = OBJC_IVAR____TtC7Measure11ReticleView_currentDiameter;
  v11 = qword_10047B050;
  v12 = v4;
  if (v11 != -1)
    swift_once(&qword_10047B050, sub_100196FF8);
  *(float *)&v4[v10] = *(float *)&dword_1004AFB60 + *(float *)&dword_1004AFB60;
  v13 = &v12[OBJC_IVAR____TtC7Measure11ReticleView_targetOffset];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC7Measure11ReticleView_snapTimer] = 0;
  v14 = &v12[OBJC_IVAR____TtC7Measure11ReticleView_snapTimestamp];
  v15 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = OBJC_IVAR____TtC7Measure11ReticleView__frameState;
  KeyPath = swift_getKeyPath(&unk_1003BA148);
  v18 = sub_10000EDC8(&qword_10047BBD0);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v19 = qword_1004AF890;
  v20 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v18 + 272);
  v21 = swift_retain();
  *(_QWORD *)&v12[v16] = v20(KeyPath, v19, v21);
  v22 = OBJC_IVAR____TtC7Measure11ReticleView__input;
  v23 = swift_getKeyPath(&unk_1003BA170);
  v24 = sub_10000EDC8((uint64_t *)&unk_1004873C0);
  v25 = qword_1004AF890;
  v26 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v24 + 272);
  v27 = swift_retain();
  *(_QWORD *)&v12[v22] = v26(v23, v25, v27);
  v28 = &v12[OBJC_IVAR____TtC7Measure11ReticleView_currentReticleTransform];
  *((_OWORD *)v28 + 2) = 0u;
  *((_OWORD *)v28 + 3) = 0u;
  *(_OWORD *)v28 = 0u;
  *((_OWORD *)v28 + 1) = 0u;
  *(_QWORD *)&v12[OBJC_IVAR____TtC7Measure11ReticleView__orientation] = 0;
  v29 = OBJC_IVAR____TtC7Measure11ReticleView_reticleBoundsLayer;
  *(_QWORD *)&v12[v29] = objc_msgSend(objc_allocWithZone((Class)CATransformLayer), "init");
  v30 = OBJC_IVAR____TtC7Measure11ReticleView_reticleParentLayer;
  *(_QWORD *)&v12[v30] = objc_msgSend(objc_allocWithZone((Class)CATransformLayer), "init");
  v31 = OBJC_IVAR____TtC7Measure11ReticleView_reticleShapeLayer;
  *(_QWORD *)&v12[v31] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v32 = OBJC_IVAR____TtC7Measure11ReticleView_snapPointLayer;
  *(_QWORD *)&v12[v32] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v33 = OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer;
  *(_QWORD *)&v12[v33] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v12[OBJC_IVAR____TtC7Measure11ReticleView_isGoingActive] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC7Measure11ReticleView_transformChangeDuration] = 0x3FB999999999999ALL;
  *(_QWORD *)&v12[OBJC_IVAR____TtC7Measure11ReticleView_transformChangeDurationAfterIdle] = 0x3FC999999999999ALL;
  v34 = &v12[OBJC_IVAR____TtC7Measure11ReticleView_searchArea];
  *(_QWORD *)v34 = 0;
  *((_DWORD *)v34 + 2) = 1106247680;
  v35 = OBJC_IVAR____TtC7Measure11ReticleView_reticleBackingView;
  *(_QWORD *)&v12[v35] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TransformLayerView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC7Measure11ReticleView_animatingProperties] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC7Measure11ReticleView_animator] = 0;

  v126.receiver = v12;
  v126.super_class = ObjectType;
  v121 = a3;
  v36 = (char *)objc_msgSendSuper2(&v126, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v36, "setAutoresizingMask:", 18);
  objc_msgSend(v36, "setUserInteractionEnabled:", 0);
  v37 = OBJC_IVAR____TtC7Measure11ReticleView_reticleBackingView;
  v38 = *(id *)&v36[OBJC_IVAR____TtC7Measure11ReticleView_reticleBackingView];
  objc_msgSend(v36, "bounds");
  objc_msgSend(v38, "setFrame:");

  v39 = *(void **)&v36[v37];
  objc_msgSend(v36, "addSubview:", v39);
  v40 = objc_msgSend(v39, "layer");
  v41 = objc_opt_self(CATransformLayer);
  v42 = swift_dynamicCastObjCClassUnconditional(v40, v41, 0, 0, 0);
  v43 = OBJC_IVAR____TtC7Measure11ReticleView_reticleParentLayer;
  v44 = *(void **)&v36[OBJC_IVAR____TtC7Measure11ReticleView_reticleParentLayer];
  *(_QWORD *)&v36[OBJC_IVAR____TtC7Measure11ReticleView_reticleParentLayer] = v42;

  objc_msgSend(*(id *)&v36[v43], "setAnchorPoint:", 0.0, 0.0);
  v45 = *(float *)&dword_1004AFB60;
  if (qword_10047B058 != -1)
    swift_once(&qword_10047B058, sub_100197088);
  v46 = a4;
  v47 = v45;
  v48 = *(double *)&qword_1004AFB68;
  v49 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v50 = (void *)objc_opt_self(Gestalt);
  v51 = objc_msgSend(v50, "jasperAvailable");
  v52 = (float *)Float.degreesToRadians.unsafeMutableAddressor();
  v53 = *v52;
  v54 = (float)((float)(v48 + 0.0) * *v52);
  v55 = (void *)objc_opt_self(UIBezierPath);
  v56 = v55;
  if (v51)
  {
    v57 = 180.0;
    v58 = objc_msgSend(v55, "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, 0.0, 0.0, v47, v54, (float)((float)(180.0 - v48) * v53));
  }
  else
  {
    v59 = objc_msgSend(v55, "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, 0.0, 0.0, v47, v54, (float)((float)(90.0 - v48) * v53));
    objc_msgSend(v49, "appendPath:", v59);

    v60 = objc_msgSend(v56, "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, 0.0, 0.0, v47, (float)((float)(v48 + 90.0) * *v52), (float)((float)(180.0 - v48) * *v52));
    objc_msgSend(v49, "appendPath:", v60);

    v57 = 270.0;
    v58 = objc_msgSend(v56, "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, 0.0, 0.0, v47, (float)((float)(v48 + 180.0) * *v52), (float)((float)(270.0 - v48) * *v52));
  }
  v61 = v58;
  objc_msgSend(v49, "appendPath:", v61);

  v62 = objc_msgSend(v56, "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, 0.0, 0.0, v47, (float)((float)(v48 + v57) * *v52), (float)((float)(360.0 - v48) * *v52));
  objc_msgSend(v49, "appendPath:", v62);

  v124 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v123 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v63 = OBJC_IVAR____TtC7Measure11ReticleView_reticleShapeLayer;
  v64 = *(id *)&v36[OBJC_IVAR____TtC7Measure11ReticleView_reticleShapeLayer];
  v65 = objc_msgSend(v49, "CGPath");
  objc_msgSend(v64, "setPath:", v65);

  if (objc_msgSend(v50, "jasperAvailable"))
    objc_msgSend(*(id *)&v36[v63], "setLineCap:", kCALineCapRound);
  v66 = qword_10047B040;
  v67 = *(id *)&v36[v63];
  if (v66 != -1)
    swift_once(&qword_10047B040, sub_100196EBC);
  objc_msgSend(v67, "setLineWidth:", *(float *)&dword_1004AFB4C);

  v68 = qword_10047AFF8;
  v69 = *(id *)&v36[v63];
  if (v68 != -1)
    swift_once(&qword_10047AFF8, sub_100196A9C);
  v70 = objc_msgSend((id)qword_1004AFB10, "CGColor", v49);
  objc_msgSend(v69, "setFillColor:", v70);

  v71 = qword_10047B000;
  v72 = *(id *)&v36[v63];
  if (v71 != -1)
    swift_once(&qword_10047B000, sub_100196AD4);
  v73 = objc_msgSend((id)qword_1004AFB18, "CGColor");
  objc_msgSend(v72, "setStrokeColor:", v73);

  objc_msgSend(*(id *)&v36[v63], "setCompositingFilter:", kCAFilterPlusL);
  v74 = OBJC_IVAR____TtC7Measure11ReticleView_reticleBoundsLayer;
  v75 = *(void **)&v36[OBJC_IVAR____TtC7Measure11ReticleView_reticleBoundsLayer];
  v76 = CGPoint.init(_:)(v47 * 1.41421356, v47 * 1.41421356);
  v78 = v77;
  v79 = v75;
  * infix(_:_:)(v76, v78, 0.5);
  objc_msgSend(v79, "setBounds:", static CGPoint.- infix(_:_:)(0.0));

  objc_msgSend(*(id *)&v36[v43], "addSublayer:", *(_QWORD *)&v36[v74]);
  objc_msgSend(*(id *)&v36[v43], "addSublayer:", v124);
  objc_msgSend(v124, "addSublayer:", v123);
  v80 = *(void **)&v36[v63];
  objc_msgSend(v123, "addSublayer:", v80);
  v127.origin.x = a1;
  v127.origin.y = a2;
  v127.size.width = v121;
  v127.size.height = v46;
  v81 = CGRectGetWidth(v127) * 0.5;
  v128.origin.x = a1;
  v128.origin.y = a2;
  v128.size.width = v121;
  v128.size.height = v46;
  objc_msgSend(*(id *)&v36[v43], "setPosition:", v81, CGRectGetHeight(v128) * 0.5);
  objc_msgSend(v80, "setPosition:", 0.0, 0.0);
  objc_msgSend(v124, "setPosition:", 0.0, 0.0);
  objc_msgSend(v123, "setPosition:", 0.0, 0.0);
  *(double *)&v36[OBJC_IVAR____TtC7Measure11ReticleView_searchArea] = SIMD2<>.init(_:)(0.0, 0.0);
  v82 = *(uint64_t (**)(__n128))(**(_QWORD **)&v36[OBJC_IVAR____TtC7Measure11ReticleView__input] + 200);
  v83 = swift_retain();
  v84 = v82(v83);
  swift_release();
  v85 = swift_allocObject(&unk_100449700, 24, 7);
  *(_QWORD *)(v85 + 16) = v36;
  v86 = *(void (**)(double (*)(uint64_t), uint64_t))(*(_QWORD *)v84 + 280);
  v87 = v36;
  v86(sub_100175A98, v85);
  swift_release();
  swift_release();
  if (qword_10047B060 != -1)
    swift_once(&qword_10047B060, sub_100197100);
  v88 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, 0.0, 0.0, *(float *)&dword_1004AFB70, 0.0, 6.28318531);
  v89 = OBJC_IVAR____TtC7Measure11ReticleView_snapPointLayer;
  v90 = *(id *)&v87[OBJC_IVAR____TtC7Measure11ReticleView_snapPointLayer];
  v122 = v88;
  v91 = objc_msgSend(v88, "CGPath");
  objc_msgSend(v90, "setPath:", v91);

  v92 = qword_10047B010;
  v93 = *(id *)&v87[v89];
  if (v92 != -1)
    swift_once(&qword_10047B010, sub_100196BF0);
  v94 = objc_msgSend((id)qword_1004AFB28, "CGColor");
  objc_msgSend(v93, "setFillColor:", v94);

  v95 = *(void **)&v87[v89];
  v96 = (void *)objc_opt_self(UIColor);
  v97 = v95;
  v98 = objc_msgSend(v96, "clearColor");
  v99 = objc_msgSend(v98, "CGColor");

  objc_msgSend(v97, "setStrokeColor:", v99);
  v100 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v101 = OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer;
  v102 = *(void **)&v87[OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer];
  *(_QWORD *)&v87[OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer] = v100;

  objc_msgSend(*(id *)&v87[v101], "addSublayer:", *(_QWORD *)&v87[v89]);
  objc_msgSend(*(id *)&v87[v101], "setPosition:", 0.0, 0.0);
  v103 = objc_msgSend(v87, "layer");
  objc_msgSend(v103, "addSublayer:", *(_QWORD *)&v87[v101]);

  v104 = *(void **)&v36[v63];
  v105 = *(void **)&v87[v89];
  v106 = objc_allocWithZone((Class)type metadata accessor for ReticleAnimator());
  v107 = v104;
  v108 = v124;
  v109 = v123;
  v110 = sub_10016BBEC(v107, v108, v109, v105);
  v111 = *(void **)&v87[OBJC_IVAR____TtC7Measure11ReticleView_animator];
  *(_QWORD *)&v87[OBJC_IVAR____TtC7Measure11ReticleView_animator] = v110;

  objc_msgSend(v87, "setState:", 0);
  v112 = *(id *)&v36[v43];
  objc_msgSend(v112, "transform");
  aBlock[11] = 0xBF647AE147AE147BLL;
  objc_msgSend(v112, "setTransform:", aBlock);

  sub_10017380C();
  v113 = (void *)objc_opt_self(UIView);
  v114 = swift_allocObject(&unk_100449728, 24, 7);
  *(_QWORD *)(v114 + 16) = v87;
  v115 = swift_allocObject(&unk_100449750, 32, 7);
  *(_QWORD *)(v115 + 16) = sub_1001758C8;
  *(_QWORD *)(v115 + 24) = v114;
  aBlock[4] = sub_100030C24;
  aBlock[5] = v115;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DDB80;
  aBlock[3] = &unk_100449768;
  v116 = _Block_copy(aBlock);
  v117 = v87;
  swift_retain();
  objc_msgSend(v113, "performWithoutAnimation:", v116, swift_release().n128_f64[0]);
  _Block_release(v116);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v115, "", 91, 254, 40, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v119 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v119, "addObserver:selector:name:object:", v117, "updateForCurrentOrientation", UIDeviceOrientationDidChangeNotification, 0);
    swift_release();

  }
}

void sub_10017380C()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Class isa;
  id v18;
  id v19;
  id v20;
  void **v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void **aBlock;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  void *v65;
  uint64_t (*v66)();
  _QWORD *v67;

  v30 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v53 = swift_allocObject(&unk_1004497A0, 24, 7);
  swift_unknownObjectWeakInit(v53 + 16, v30);
  v0 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v56 = swift_allocObject(&unk_1004497A0, 24, 7);
  swift_unknownObjectWeakInit(v56 + 16, v0);
  v1 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v55 = swift_allocObject(&unk_1004497A0, 24, 7);
  swift_unknownObjectWeakInit(v55 + 16, v1);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v54 = swift_allocObject(&unk_1004497A0, 24, 7);
  v3 = v2;
  swift_unknownObjectWeakInit(v54 + 16, v2);
  v4 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v52 = swift_allocObject(&unk_1004497A0, 24, 7);
  swift_unknownObjectWeakInit(v52 + 16, v4);
  v5 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v51 = swift_allocObject(&unk_1004497A0, 24, 7);
  v6 = v5;
  swift_unknownObjectWeakInit(v51 + 16, v5);
  v23 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v50 = swift_allocObject(&unk_1004497A0, 24, 7);
  swift_unknownObjectWeakInit(v50 + 16, v23);
  v37 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v61 = swift_allocObject(&unk_1004497A0, 24, 7);
  swift_unknownObjectWeakInit(v61 + 16, v37);
  v34 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v59 = swift_allocObject(&unk_1004497A0, 24, 7);
  swift_unknownObjectWeakInit(v59 + 16, v34);
  v44 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v57 = swift_allocObject(&unk_1004497A0, 24, 7);
  swift_unknownObjectWeakInit(v57 + 16, v44);
  v41 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v60 = swift_allocObject(&unk_1004497A0, 24, 7);
  swift_unknownObjectWeakInit(v60 + 16, v41);
  v39 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v58 = swift_allocObject(&unk_1004497A0, 24, 7);
  swift_unknownObjectWeakInit(v58 + 16, v39);
  v32 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v49 = swift_allocObject(&unk_1004497A0, 24, 7);
  swift_unknownObjectWeakInit(v49 + 16, v32);
  v7 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v47 = swift_allocObject(&unk_1004497A0, 24, 7);
  swift_unknownObjectWeakInit(v47 + 16, v7);
  v8 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v46 = swift_allocObject(&unk_1004497A0, 24, 7);
  swift_unknownObjectWeakInit(v46 + 16, v8);
  v9 = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), "init");
  v43 = swift_allocObject(&unk_1004497A0, 24, 7);
  swift_unknownObjectWeakInit(v43 + 16, v9);
  v10 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
  v11 = swift_allocObject(v10, 160, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1003B9F40;
  *(_QWORD *)(v11 + 32) = v30;
  *(_QWORD *)(v11 + 40) = v0;
  *(_QWORD *)(v11 + 48) = v1;
  *(_QWORD *)(v11 + 56) = v3;
  *(_QWORD *)(v11 + 64) = v4;
  *(_QWORD *)(v11 + 72) = v6;
  *(_QWORD *)(v11 + 80) = v23;
  *(_QWORD *)(v11 + 88) = v37;
  *(_QWORD *)(v11 + 96) = v34;
  *(_QWORD *)(v11 + 104) = v44;
  *(_QWORD *)(v11 + 112) = v41;
  *(_QWORD *)(v11 + 120) = v39;
  *(_QWORD *)(v11 + 128) = v32;
  *(_QWORD *)(v11 + 136) = v7;
  *(_QWORD *)(v11 + 144) = v8;
  *(_QWORD *)(v11 + 152) = v9;
  aBlock = (void **)v11;
  specialized Array._endMutation()(v11);
  v21 = aBlock;
  v36 = swift_allocObject(&unk_1004497C8, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16, *(_QWORD *)(v48 + OBJC_IVAR____TtC7Measure11ReticleView_reticleBackingView));
  v22 = (id)objc_opt_self(UIView);
  sub_100018148(0, &qword_1004873D0, UIViewFloatAnimatableProperty_ptr);
  v31 = v30;
  v29 = v0;
  v28 = v1;
  v27 = v3;
  v26 = v4;
  v25 = v6;
  v24 = v23;
  v38 = v37;
  v35 = v34;
  v45 = v44;
  v42 = v41;
  v40 = v39;
  v33 = v32;
  v20 = v7;
  v19 = v8;
  v18 = v9;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v12 = (_QWORD *)swift_allocObject(&unk_1004497F0, 152, 7);
  v12[2] = v53;
  v12[3] = v56;
  v12[4] = v55;
  v12[5] = v54;
  v12[6] = v52;
  v12[7] = v51;
  v12[8] = v50;
  v12[9] = v61;
  v12[10] = v59;
  v12[11] = v57;
  v12[12] = v60;
  v12[13] = v58;
  v12[14] = v49;
  v12[15] = v47;
  v12[16] = v46;
  v12[17] = v43;
  v12[18] = v36;
  v66 = sub_100175920;
  v67 = v12;
  aBlock = _NSConcreteStackBlock;
  v63 = 1107296256;
  v64 = sub_10003ECA0;
  v65 = &unk_100449808;
  v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  v13 = (_QWORD *)swift_allocObject(&unk_100449840, 152, 7);
  v13[2] = v53;
  v13[3] = v56;
  v13[4] = v55;
  v13[5] = v54;
  v13[6] = v52;
  v13[7] = v51;
  v13[8] = v50;
  v13[9] = v61;
  v13[10] = v59;
  v13[11] = v57;
  v13[12] = v60;
  v13[13] = v58;
  v13[14] = v49;
  v13[15] = v47;
  v13[16] = v46;
  v13[17] = v43;
  v13[18] = v36;
  v66 = sub_1001759D4;
  v67 = v13;
  aBlock = _NSConcreteStackBlock;
  v63 = 1107296256;
  v64 = sub_10003ECA0;
  v65 = &unk_100449858;
  v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  objc_msgSend(v22, "_createTransformerWithInputAnimatableProperties:modelValueSetter:presentationValueSetter:", isa, v16, v15, swift_release().n128_f64[0]);

  _Block_release(v15);
  _Block_release(v16);

  v14 = *(_QWORD *)(v48 + OBJC_IVAR____TtC7Measure11ReticleView_animatingProperties);
  *(_QWORD *)(v48 + OBJC_IVAR____TtC7Measure11ReticleView_animatingProperties) = v21;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v14);
}

void sub_10017415C()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v1 = objc_msgSend(v0, "orientation");

  sub_100172728((unint64_t)v1);
}

void sub_100174280(char a1)
{
  void *v1;
  id v2;
  float v3;
  float v4;
  id v5;

  if (a1 == 6)
  {
    v1 = (void *)objc_opt_self(NSUserDefaults);
    v2 = objc_msgSend(v1, "standardUserDefaults");
    objc_msgSend(v2, "kReticleADSlerpFactor");
    v4 = v3;

    if (v4 > 0.0)
    {
      v5 = objc_msgSend(v1, "standardUserDefaults");
      objc_msgSend(v5, "kReticleADSlerpFactor");

    }
  }
}

void sub_100174338(double *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure11ReticleView_animatingProperties);
  if (v2)
  {
    v4 = v2 & 0xC000000000000001;
    if ((v2 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain(v2);
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
    }
    else
    {
      if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_69;
      }
      v5 = *(void **)(v2 + 32);
      swift_bridgeObjectRetain(v2);
      v6 = v5;
    }
    v7 = v6;
    objc_msgSend(v6, "setValue:", *a1);

    if (v4)
    {
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v2);
LABEL_10:
      v9 = v8;
      objc_msgSend(v8, "setValue:", a1[1]);

      if (v4)
      {
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2, v2);
LABEL_14:
        v11 = v10;
        objc_msgSend(v10, "setValue:", a1[2]);

        if (v4)
        {
          v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(3, v2);
LABEL_18:
          v13 = v12;
          objc_msgSend(v12, "setValue:", a1[3]);

          if (v4)
          {
            v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(4, v2);
LABEL_22:
            v15 = v14;
            objc_msgSend(v14, "setValue:", a1[4]);

            if (v4)
            {
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(5, v2);
LABEL_26:
              v17 = v16;
              objc_msgSend(v16, "setValue:", a1[5]);

              if (v4)
              {
                v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(6, v2);
LABEL_30:
                v19 = v18;
                objc_msgSend(v18, "setValue:", a1[6]);

                if (v4)
                {
                  v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(7, v2);
LABEL_34:
                  v21 = v20;
                  objc_msgSend(v20, "setValue:", a1[7]);

                  if (v4)
                  {
                    v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(8, v2);
LABEL_38:
                    v23 = v22;
                    objc_msgSend(v22, "setValue:", a1[8]);

                    if (v4)
                    {
                      v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(9, v2);
LABEL_42:
                      v25 = v24;
                      objc_msgSend(v24, "setValue:", a1[9]);

                      if (v4)
                      {
                        v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(10, v2);
LABEL_46:
                        v27 = v26;
                        objc_msgSend(v26, "setValue:", a1[10]);

                        if (v4)
                        {
                          v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(11, v2);
LABEL_50:
                          v29 = v28;
                          objc_msgSend(v28, "setValue:", a1[11]);

                          if (v4)
                          {
                            v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(12, v2);
LABEL_54:
                            v31 = v30;
                            objc_msgSend(v30, "setValue:", a1[12]);

                            if (v4)
                            {
                              v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(13, v2);
LABEL_58:
                              v33 = v32;
                              objc_msgSend(v32, "setValue:", a1[13]);

                              if (v4)
                              {
                                v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(14, v2);
LABEL_62:
                                v35 = v34;
                                objc_msgSend(v34, "setValue:", a1[14]);

                                if (v4)
                                {
                                  v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(15, v2);
LABEL_66:
                                  v37 = v36;
                                  swift_bridgeObjectRelease(v2);
                                  objc_msgSend(v37, "setValue:", a1[15]);

                                  return;
                                }
                                if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 0x10uLL)
                                {
                                  v36 = *(id *)(v2 + 152);
                                  goto LABEL_66;
                                }
                                goto LABEL_83;
                              }
                              if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 0xFuLL)
                              {
                                v34 = *(id *)(v2 + 144);
                                goto LABEL_62;
                              }
LABEL_82:
                              __break(1u);
LABEL_83:
                              __break(1u);
                              return;
                            }
                            if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 0xEuLL)
                            {
                              v32 = *(id *)(v2 + 136);
                              goto LABEL_58;
                            }
LABEL_81:
                            __break(1u);
                            goto LABEL_82;
                          }
                          if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 0xDuLL)
                          {
                            v30 = *(id *)(v2 + 128);
                            goto LABEL_54;
                          }
LABEL_80:
                          __break(1u);
                          goto LABEL_81;
                        }
                        if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 0xCuLL)
                        {
                          v28 = *(id *)(v2 + 120);
                          goto LABEL_50;
                        }
LABEL_79:
                        __break(1u);
                        goto LABEL_80;
                      }
                      if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 0xBuLL)
                      {
                        v26 = *(id *)(v2 + 112);
                        goto LABEL_46;
                      }
LABEL_78:
                      __break(1u);
                      goto LABEL_79;
                    }
                    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 0xAuLL)
                    {
                      v24 = *(id *)(v2 + 104);
                      goto LABEL_42;
                    }
LABEL_77:
                    __break(1u);
                    goto LABEL_78;
                  }
                  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 9uLL)
                  {
                    v22 = *(id *)(v2 + 96);
                    goto LABEL_38;
                  }
LABEL_76:
                  __break(1u);
                  goto LABEL_77;
                }
                if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 8uLL)
                {
                  v20 = *(id *)(v2 + 88);
                  goto LABEL_34;
                }
LABEL_75:
                __break(1u);
                goto LABEL_76;
              }
              if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 7uLL)
              {
                v18 = *(id *)(v2 + 80);
                goto LABEL_30;
              }
LABEL_74:
              __break(1u);
              goto LABEL_75;
            }
            if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 6uLL)
            {
              v16 = *(id *)(v2 + 72);
              goto LABEL_26;
            }
LABEL_73:
            __break(1u);
            goto LABEL_74;
          }
          if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 5uLL)
          {
            v14 = *(id *)(v2 + 64);
            goto LABEL_22;
          }
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
        if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 4uLL)
        {
          v12 = *(id *)(v2 + 56);
          goto LABEL_18;
        }
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
      {
        v10 = *(id *)(v2 + 48);
        goto LABEL_14;
      }
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      v8 = *(id *)(v2 + 40);
      goto LABEL_10;
    }
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
}

uint64_t sub_1001748CC()
{
  return type metadata accessor for ReticleView(0);
}

uint64_t type metadata accessor for ReticleView(uint64_t a1)
{
  uint64_t result;

  result = qword_100487368;
  if (!qword_100487368)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReticleView);
  return result;
}

void sub_100174910(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[21];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = (char *)&value witness table for Builtin.Int32 + 64;
  v4[2] = &unk_1003B9F80;
  v4[3] = &unk_1003B9F98;
  sub_10005CFA4(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[7] = &unk_1003B9FB0;
    v4[8] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[14] = &unk_1003B9FC8;
    v4[15] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[16] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[17] = &unk_1003B9FE0;
    v4[18] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[19] = &unk_1003B9F98;
    v4[20] = &unk_1003B9F98;
    swift_updateClassMetadata2(a1, 256, 21, v4, a1 + 80);
  }
}

ValueMetadata *type metadata accessor for ReticleState()
{
  return &type metadata for ReticleState;
}

uint64_t storeEnumTagSinglePayload for ReticlePulseState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100174A5C + 4 * byte_1003B9F65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100174A90 + 4 * byte_1003B9F60[v4]))();
}

uint64_t sub_100174A90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100174A98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100174AA0);
  return result;
}

uint64_t sub_100174AAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100174AB4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100174AB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100174AC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReticlePulseState()
{
  return &type metadata for ReticlePulseState;
}

unint64_t sub_100174ADC(uint64_t a1)
{
  unint64_t result;

  result = sub_100174B00();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100174B00()
{
  unint64_t result;

  result = qword_1004873B0;
  if (!qword_1004873B0)
  {
    result = swift_getWitnessTable(&unk_1003BA080, &type metadata for ReticlePulseState);
    atomic_store(result, (unint64_t *)&qword_1004873B0);
  }
  return result;
}

unint64_t sub_100174B4C()
{
  unint64_t result;

  result = qword_1004873B8;
  if (!qword_1004873B8)
  {
    result = swift_getWitnessTable(&unk_1003BA120, &type metadata for ReticleState);
    atomic_store(result, (unint64_t *)&qword_1004873B8);
  }
  return result;
}

void sub_100174B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v24;
  uint64_t v25;
  void *Strong;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  void *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD v116[16];
  _BYTE v117[24];
  _BYTE v118[24];
  _BYTE v119[24];
  _BYTE v120[24];
  _BYTE v121[24];
  _BYTE v122[24];
  _BYTE v123[24];
  _BYTE v124[24];
  _BYTE v125[24];
  _BYTE v126[24];
  _BYTE v127[24];
  _BYTE v128[24];
  _BYTE v129[24];
  _BYTE v130[24];
  _BYTE v131[24];
  _BYTE v132[24];
  _BYTE v133[24];

  v24 = a1 + 16;
  swift_beginAccess(a1 + 16, v133, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v24, v25);
  if (Strong)
  {
    v27 = Strong;
    v28 = a2 + 16;
    objc_msgSend(Strong, "value");
    v30 = v29;

    swift_beginAccess(v28, v132, 0, 0);
    v32 = (void *)swift_unknownObjectWeakLoadStrong(v28, v31);
    if (v32)
    {
      v33 = v32;
      v34 = a3 + 16;
      objc_msgSend(v32, "value");
      v36 = v35;

      swift_beginAccess(v34, v131, 0, 0);
      v38 = (void *)swift_unknownObjectWeakLoadStrong(v34, v37);
      if (v38)
      {
        v39 = v38;
        v40 = a4 + 16;
        objc_msgSend(v38, "value");
        v42 = v41;

        swift_beginAccess(v40, v130, 0, 0);
        v44 = (void *)swift_unknownObjectWeakLoadStrong(v40, v43);
        if (v44)
        {
          v45 = v44;
          v46 = a5 + 16;
          objc_msgSend(v44, "value");
          v48 = v47;

          swift_beginAccess(v46, v129, 0, 0);
          v50 = (void *)swift_unknownObjectWeakLoadStrong(v46, v49);
          if (v50)
          {
            v51 = v50;
            v52 = a6 + 16;
            objc_msgSend(v50, "value");
            v54 = v53;

            swift_beginAccess(v52, v128, 0, 0);
            v56 = (void *)swift_unknownObjectWeakLoadStrong(v52, v55);
            if (v56)
            {
              v57 = v56;
              v58 = a7 + 16;
              objc_msgSend(v56, "value");
              v60 = v59;

              swift_beginAccess(v58, v127, 0, 0);
              v62 = (void *)swift_unknownObjectWeakLoadStrong(v58, v61);
              if (v62)
              {
                v63 = v62;
                v64 = a8 + 16;
                objc_msgSend(v62, "value");
                v66 = v65;

                swift_beginAccess(v64, v126, 0, 0);
                v68 = (void *)swift_unknownObjectWeakLoadStrong(v64, v67);
                if (v68)
                {
                  v69 = v68;
                  objc_msgSend(v68, "value");
                  v71 = v70;

                  swift_beginAccess(a9 + 16, v125, 0, 0);
                  v73 = (void *)swift_unknownObjectWeakLoadStrong(a9 + 16, v72);
                  if (v73)
                  {
                    v74 = v73;
                    objc_msgSend(v73, "value");
                    v115 = v75;

                    swift_beginAccess(a10 + 16, v124, 0, 0);
                    v77 = (void *)swift_unknownObjectWeakLoadStrong(a10 + 16, v76);
                    if (v77)
                    {
                      v78 = v77;
                      objc_msgSend(v77, "value");
                      v114 = v79;

                      swift_beginAccess(a11 + 16, v123, 0, 0);
                      v81 = (void *)swift_unknownObjectWeakLoadStrong(a11 + 16, v80);
                      if (v81)
                      {
                        v82 = v81;
                        objc_msgSend(v81, "value");
                        v113 = v83;

                        swift_beginAccess(a12 + 16, v122, 0, 0);
                        v85 = (void *)swift_unknownObjectWeakLoadStrong(a12 + 16, v84);
                        if (v85)
                        {
                          v86 = v85;
                          objc_msgSend(v85, "value");
                          v112 = v87;

                          swift_beginAccess(a13 + 16, v121, 0, 0);
                          v89 = (void *)swift_unknownObjectWeakLoadStrong(a13 + 16, v88);
                          if (v89)
                          {
                            v90 = v89;
                            objc_msgSend(v89, "value");
                            v111 = v91;

                            swift_beginAccess(a14 + 16, v120, 0, 0);
                            v93 = (void *)swift_unknownObjectWeakLoadStrong(a14 + 16, v92);
                            if (v93)
                            {
                              v94 = v93;
                              objc_msgSend(v93, "value");
                              v110 = v95;

                              swift_beginAccess(a15 + 16, v119, 0, 0);
                              v97 = (void *)swift_unknownObjectWeakLoadStrong(a15 + 16, v96);
                              if (v97)
                              {
                                v98 = v97;
                                objc_msgSend(v97, "value");
                                v109 = v99;

                                swift_beginAccess(a16 + 16, v118, 0, 0);
                                v101 = (void *)swift_unknownObjectWeakLoadStrong(a16 + 16, v100);
                                if (v101)
                                {
                                  v102 = v101;
                                  objc_msgSend(v101, "value");
                                  v108 = v103;

                                  swift_beginAccess(a17 + 16, v117, 0, 0);
                                  v105 = (void *)swift_unknownObjectWeakLoadStrong(a17 + 16, v104);
                                  if (v105)
                                  {
                                    v106 = v105;
                                    v107 = objc_msgSend(v105, "layer");

                                    v116[0] = v30;
                                    v116[1] = v36;
                                    v116[2] = v42;
                                    v116[3] = v48;
                                    v116[4] = v54;
                                    v116[5] = v60;
                                    v116[6] = v66;
                                    v116[7] = v71;
                                    v116[8] = v115;
                                    v116[9] = v114;
                                    v116[10] = v113;
                                    v116[11] = v112;
                                    v116[12] = v111;
                                    v116[13] = v110;
                                    v116[14] = v109;
                                    v116[15] = v108;
                                    objc_msgSend(v107, "setSublayerTransform:", v116);

                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_100175050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v24;
  uint64_t v25;
  void *Strong;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  id v107;
  NSString v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[16];
  _BYTE v118[24];
  _BYTE v119[24];
  _BYTE v120[24];
  _BYTE v121[24];
  _BYTE v122[24];
  _BYTE v123[24];
  _BYTE v124[24];
  _BYTE v125[24];
  _BYTE v126[24];
  _BYTE v127[24];
  _BYTE v128[24];
  _BYTE v129[24];
  _BYTE v130[24];
  _BYTE v131[24];
  _BYTE v132[24];
  _BYTE v133[24];
  _BYTE v134[24];

  v24 = a1 + 16;
  swift_beginAccess(a1 + 16, v134, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v24, v25);
  if (Strong)
  {
    v27 = Strong;
    v28 = a2 + 16;
    objc_msgSend(Strong, "presentationValue");
    v30 = v29;

    swift_beginAccess(v28, v133, 0, 0);
    v32 = (void *)swift_unknownObjectWeakLoadStrong(v28, v31);
    if (v32)
    {
      v33 = v32;
      v34 = a3 + 16;
      objc_msgSend(v32, "presentationValue");
      v36 = v35;

      swift_beginAccess(v34, v132, 0, 0);
      v38 = (void *)swift_unknownObjectWeakLoadStrong(v34, v37);
      if (v38)
      {
        v39 = v38;
        v40 = a4 + 16;
        objc_msgSend(v38, "presentationValue");
        v42 = v41;

        swift_beginAccess(v40, v131, 0, 0);
        v44 = (void *)swift_unknownObjectWeakLoadStrong(v40, v43);
        if (v44)
        {
          v45 = v44;
          v46 = a5 + 16;
          objc_msgSend(v44, "presentationValue");
          v48 = v47;

          swift_beginAccess(v46, v130, 0, 0);
          v50 = (void *)swift_unknownObjectWeakLoadStrong(v46, v49);
          if (v50)
          {
            v51 = v50;
            v52 = a6 + 16;
            objc_msgSend(v50, "presentationValue");
            v54 = v53;

            swift_beginAccess(v52, v129, 0, 0);
            v56 = (void *)swift_unknownObjectWeakLoadStrong(v52, v55);
            if (v56)
            {
              v57 = v56;
              v58 = a7 + 16;
              objc_msgSend(v56, "presentationValue");
              v60 = v59;

              swift_beginAccess(v58, v128, 0, 0);
              v62 = (void *)swift_unknownObjectWeakLoadStrong(v58, v61);
              if (v62)
              {
                v63 = v62;
                v64 = a8 + 16;
                objc_msgSend(v62, "presentationValue");
                v66 = v65;

                swift_beginAccess(v64, v127, 0, 0);
                v68 = (void *)swift_unknownObjectWeakLoadStrong(v64, v67);
                if (v68)
                {
                  v69 = v68;
                  objc_msgSend(v68, "presentationValue");
                  v71 = v70;

                  swift_beginAccess(a9 + 16, v126, 0, 0);
                  v73 = (void *)swift_unknownObjectWeakLoadStrong(a9 + 16, v72);
                  if (v73)
                  {
                    v74 = v73;
                    objc_msgSend(v73, "presentationValue");
                    v116 = v75;

                    swift_beginAccess(a10 + 16, v125, 0, 0);
                    v77 = (void *)swift_unknownObjectWeakLoadStrong(a10 + 16, v76);
                    if (v77)
                    {
                      v78 = v77;
                      objc_msgSend(v77, "presentationValue");
                      v115 = v79;

                      swift_beginAccess(a11 + 16, v124, 0, 0);
                      v81 = (void *)swift_unknownObjectWeakLoadStrong(a11 + 16, v80);
                      if (v81)
                      {
                        v82 = v81;
                        objc_msgSend(v81, "presentationValue");
                        v114 = v83;

                        swift_beginAccess(a12 + 16, v123, 0, 0);
                        v85 = (void *)swift_unknownObjectWeakLoadStrong(a12 + 16, v84);
                        if (v85)
                        {
                          v86 = v85;
                          objc_msgSend(v85, "presentationValue");
                          v113 = v87;

                          swift_beginAccess(a13 + 16, v122, 0, 0);
                          v89 = (void *)swift_unknownObjectWeakLoadStrong(a13 + 16, v88);
                          if (v89)
                          {
                            v90 = v89;
                            objc_msgSend(v89, "presentationValue");
                            v112 = v91;

                            swift_beginAccess(a14 + 16, v121, 0, 0);
                            v93 = (void *)swift_unknownObjectWeakLoadStrong(a14 + 16, v92);
                            if (v93)
                            {
                              v94 = v93;
                              objc_msgSend(v93, "presentationValue");
                              v111 = v95;

                              swift_beginAccess(a15 + 16, v120, 0, 0);
                              v97 = (void *)swift_unknownObjectWeakLoadStrong(a15 + 16, v96);
                              if (v97)
                              {
                                v98 = v97;
                                objc_msgSend(v97, "presentationValue");
                                v110 = v99;

                                swift_beginAccess(a16 + 16, v119, 0, 0);
                                v101 = (void *)swift_unknownObjectWeakLoadStrong(a16 + 16, v100);
                                if (v101)
                                {
                                  v102 = v101;
                                  objc_msgSend(v101, "presentationValue");
                                  v109 = v103;

                                  swift_beginAccess(a17 + 16, v118, 0, 0);
                                  v105 = swift_unknownObjectWeakLoadStrong(a17 + 16, v104);
                                  if (v105)
                                  {
                                    v106 = (void *)v105;
                                    v117[0] = v30;
                                    v117[1] = v36;
                                    v117[2] = v42;
                                    v117[3] = v48;
                                    v117[4] = v54;
                                    v117[5] = v60;
                                    v117[6] = v66;
                                    v117[7] = v71;
                                    v117[8] = v116;
                                    v117[9] = v115;
                                    v117[10] = v114;
                                    v117[11] = v113;
                                    v117[12] = v112;
                                    v117[13] = v111;
                                    v117[14] = v110;
                                    v117[15] = v109;
                                    v107 = objc_msgSend((id)objc_opt_self(NSValue), "valueWithCATransform3D:", v117);
                                    v108 = String._bridgeToObjectiveC()();
                                    objc_msgSend(v106, "_setPresentationValue:forKey:", v107, v108);

                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_100175544(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

uint64_t sub_100175554()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_100175578(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  int v4;

  v2 = *(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC7Measure11ReticleView_searchArea;
  result = *(double *)v2;
  v4 = *(_DWORD *)(v2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)v2;
  *(_DWORD *)(a1 + 32) = v4;
  return result;
}

void sub_10017559C()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, __n128);
  __n128 v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure11ReticleView__state] = 0;
  v2 = OBJC_IVAR____TtC7Measure11ReticleView_currentDiameter;
  if (qword_10047B050 != -1)
    swift_once(&qword_10047B050, sub_100196FF8);
  *(float *)&v1[v2] = *(float *)&dword_1004AFB60 + *(float *)&dword_1004AFB60;
  v3 = &v1[OBJC_IVAR____TtC7Measure11ReticleView_targetOffset];
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_snapTimer] = 0;
  v4 = &v1[OBJC_IVAR____TtC7Measure11ReticleView_snapTimestamp];
  v5 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = OBJC_IVAR____TtC7Measure11ReticleView__frameState;
  KeyPath = swift_getKeyPath(&unk_1003BA148);
  v8 = sub_10000EDC8(&qword_10047BBD0);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v9 = qword_1004AF890;
  v10 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v8 + 272);
  v11 = swift_retain();
  *(_QWORD *)&v1[v6] = v10(KeyPath, v9, v11);
  v12 = OBJC_IVAR____TtC7Measure11ReticleView__input;
  v13 = swift_getKeyPath(&unk_1003BA170);
  v14 = sub_10000EDC8((uint64_t *)&unk_1004873C0);
  v15 = qword_1004AF890;
  v16 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v14 + 272);
  v17 = swift_retain();
  *(_QWORD *)&v1[v12] = v16(v13, v15, v17);
  v18 = &v1[OBJC_IVAR____TtC7Measure11ReticleView_currentReticleTransform];
  v18[2] = 0u;
  v18[3] = 0u;
  *v18 = 0u;
  v18[1] = 0u;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11ReticleView__orientation] = 0;
  v19 = OBJC_IVAR____TtC7Measure11ReticleView_reticleBoundsLayer;
  *(_QWORD *)&v1[v19] = objc_msgSend(objc_allocWithZone((Class)CATransformLayer), "init");
  v20 = OBJC_IVAR____TtC7Measure11ReticleView_reticleParentLayer;
  *(_QWORD *)&v1[v20] = objc_msgSend(objc_allocWithZone((Class)CATransformLayer), "init");
  v21 = OBJC_IVAR____TtC7Measure11ReticleView_reticleShapeLayer;
  *(_QWORD *)&v1[v21] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v22 = OBJC_IVAR____TtC7Measure11ReticleView_snapPointLayer;
  *(_QWORD *)&v1[v22] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v23 = OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer;
  *(_QWORD *)&v1[v23] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v1[OBJC_IVAR____TtC7Measure11ReticleView_isGoingActive] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_transformChangeDuration] = 0x3FB999999999999ALL;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_transformChangeDurationAfterIdle] = 0x3FC999999999999ALL;
  v24 = &v1[OBJC_IVAR____TtC7Measure11ReticleView_searchArea];
  *(_QWORD *)v24 = 0;
  *((_DWORD *)v24 + 2) = 1106247680;
  v25 = OBJC_IVAR____TtC7Measure11ReticleView_reticleBackingView;
  *(_QWORD *)&v1[v25] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TransformLayerView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_animatingProperties] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_animator] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003D8190, "Measure/ReticleView.swift", 25, 2, 263, 0);
  __break(1u);
}

void sub_1001758C8()
{
  sub_10017415C();
}

uint64_t sub_1001758D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001758E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001758F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001758F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_100175920()
{
  return sub_1001759E0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100174B90);
}

uint64_t sub_100175930()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[8]);
  swift_release(v0[9]);
  swift_release(v0[10]);
  swift_release(v0[11]);
  swift_release(v0[12]);
  swift_release(v0[13]);
  swift_release(v0[14]);
  swift_release(v0[15]);
  swift_release(v0[16]);
  swift_release(v0[17]);
  swift_release(v0[18]);
  return swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1001759D4()
{
  return sub_1001759E0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100175050);
}

uint64_t sub_1001759E0(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17], v1[18]);
}

uint64_t sub_100175A28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 152, 7);
}

void sub_100175A4C()
{
  uint64_t v0;

  sub_100174338((double *)(v0 + 24));
}

void sub_100175A9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSString v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char **v23;
  id v24;
  id v25;
  id v26;
  char *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  Swift::String v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  char *v35;
  void *v36;
  void *v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  id v45;
  NSURL *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t i;
  id v51;
  void *v52;
  uint64_t v53;
  _QWORD v54[2];
  NSString v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  unint64_t v63;
  _QWORD v64[2];
  uint64_t v65;

  v3 = type metadata accessor for UUID(0);
  v60 = *(_QWORD *)(v3 - 8);
  v61 = v3;
  __chkstk_darwin(v3);
  v59 = (char *)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = *(id *)(v1 + OBJC_IVAR____TtC7Measure18SceneDebugObserver_sceneView);
  v5 = objc_msgSend(v62, "session");
  v6 = (uint64_t)objc_msgSend(v5, "currentFrame");

  if (!v6)
    return;
  v7 = (NSString)objc_opt_self(SCNTransaction);
  objc_msgSend(v7, "lock");
  v8 = (uint64_t)_swiftEmptyArrayStorage;
  v65 = (uint64_t)_swiftEmptyArrayStorage;
  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v10 = *(_QWORD *)(Defaults.drawDebugPlanes.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain(v10);
  v11 = String._bridgeToObjectiveC()();
  LOBYTE(v10) = objc_msgSend(v9, "BOOLForKey:", v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v12 = (unint64_t)&selRef_renderer_didAddNode_forAnchor_;
  if ((v10 & 1) == 0)
  {
    v13 = objc_msgSend((id)v6, "anchors");
    v14 = sub_100018148(0, (unint64_t *)&unk_100482ED0, ARAnchor_ptr);
    v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

    if ((unint64_t)v15 >> 62)
      goto LABEL_43;
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v16)
    {
      v54[1] = a1;
      v55 = v7;
      v56 = v6;
      if (v16 < 1)
        goto LABEL_63;
      v6 = 0;
      v17 = 0;
      v63 = v15 & 0xC000000000000001;
      v57 = v16;
      v58 = v15;
      while (1)
      {
        if (v63)
          v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v15);
        else
          v18 = *(id *)(v15 + 8 * v17 + 32);
        v19 = v18;
        v20 = objc_opt_self(ARPlaneAnchor);
        v21 = swift_dynamicCastObjCClass(v19, v20);
        if (!v21)
          goto LABEL_9;
        v22 = (void *)v21;
        v15 = v19;
        v23 = (char **)v12;
        v24 = objc_msgSend(v62, *(SEL *)(v12 + 240));
        v25 = objc_msgSend(v24, "rootNode");

        strcpy((char *)v64, "arkit_plane_");
        BYTE5(v64[1]) = 0;
        HIWORD(v64[1]) = -5120;
        v26 = objc_msgSend(v22, "identifier");
        v27 = v59;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        v28 = UUID.uuidString.getter();
        v30 = v29;
        (*(void (**)(char *, uint64_t))(v60 + 8))(v27, v61);
        v31._countAndFlagsBits = v28;
        v31._object = v30;
        String.append(_:)(v31);
        swift_bridgeObjectRelease(v30);
        v32 = v64[1];
        v7 = String._bridgeToObjectiveC()();
        v33 = objc_msgSend(v25, "childNodeWithName:recursively:", v7, 0, swift_bridgeObjectRelease(v32).n128_f64[0]);

        if (!v33)
          goto LABEL_8;
        if (qword_10047A8A8 != -1)
          swift_once(&qword_10047A8A8, sub_10004C6F0);
        v12 = qword_1004AF1F0;
        if ((unint64_t)qword_1004AF1F0 >> 62)
        {
          if (qword_1004AF1F0 < 0)
            v43 = qword_1004AF1F0;
          else
            v43 = qword_1004AF1F0 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(qword_1004AF1F0);
          a1 = _CocoaArrayWrapper.endIndex.getter(v43);
          swift_bridgeObjectRelease(v12);
          if (!a1)
            goto LABEL_40;
        }
        else
        {
          a1 = *(_QWORD *)((qword_1004AF1F0 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!a1)
            goto LABEL_40;
        }
        if (v6 == 0x8000000000000000 && a1 == -1)
          goto LABEL_42;
        v34 = v6 % a1;
        if ((v12 & 0xC000000000000001) != 0)
        {
          v35 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v12);
          goto LABEL_26;
        }
        if ((v34 & 0x8000000000000000) != 0)
          break;
        if (v34 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_39;
        v35 = (char *)*(id *)(v12 + 8 * v34 + 32);
LABEL_26:
        a1 = (uint64_t)v35;
        sub_10004C100((uint64_t)v35);
        v37 = v36;

        if (!v37)
        {

LABEL_8:
          v12 = (unint64_t)v23;
          v16 = v57;
          v15 = v58;
LABEL_9:

          goto LABEL_10;
        }
        objc_msgSend(v33, "addChildNode:", v37);
        v38 = v37;
        v12 = (unint64_t)&v65;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
        v40 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v39 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v40 >= v39 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
        v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
        specialized Array._endMutation()(v41);

        if (__OFADD__(v6++, 1))
          goto LABEL_41;
        v12 = (unint64_t)v23;
        v16 = v57;
        v15 = v58;
LABEL_10:
        if (v16 == ++v17)
        {
          swift_bridgeObjectRelease(v15);
          v8 = v65;
          v7 = v55;
          v6 = v56;
          goto LABEL_48;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      if (v15 < 0)
        v44 = v15;
      else
        v44 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v15);
      v16 = _CocoaArrayWrapper.endIndex.getter(v44);
      swift_bridgeObjectRelease(v15);
    }
    swift_bridgeObjectRelease(v15);
    v8 = (uint64_t)_swiftEmptyArrayStorage;
  }
LABEL_48:
  v45 = objc_msgSend(v62, *(SEL *)(v12 + 240));
  URL._bridgeToObjectiveC()(v46);
  v48 = v47;
  objc_msgSend(v45, "writeToURL:options:delegate:progressHandler:", v47, 0, 0, 0);

  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v53 = v8;
    else
      v53 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v49 = _CocoaArrayWrapper.endIndex.getter(v53);
    swift_bridgeObjectRelease(v8);
    if (v49)
      goto LABEL_50;
LABEL_60:
    objc_msgSend(v7, "unlock", swift_bridgeObjectRelease(v8).n128_f64[0]);

    return;
  }
  v49 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v49)
    goto LABEL_60;
LABEL_50:
  if (v49 >= 1)
  {
    for (i = 0; i != v49; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0)
        v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
      else
        v51 = *(id *)(v8 + 8 * i + 32);
      v52 = v51;
      objc_msgSend(v51, "removeFromParentNode");

    }
    goto LABEL_60;
  }
  __break(1u);
LABEL_63:
  __break(1u);
}

char *sub_1001760C4(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  char *v23;
  objc_super v25;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  v5 = OBJC_IVAR____TtC7Measure18SceneDebugObserver_keys;
  v6 = sub_10000EDC8(&qword_10047E468);
  v7 = swift_allocObject(v6, 80, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1003B0F50;
  v8 = v2;
  v9 = (uint64_t *)Defaults.showStatistics.unsafeMutableAddressor(v8);
  v11 = *v9;
  v10 = v9[1];
  *(_QWORD *)(v7 + 32) = v11;
  *(_QWORD *)(v7 + 40) = v10;
  v12 = swift_bridgeObjectRetain(v10);
  v13 = (uint64_t *)Defaults.showFeaturePoints.unsafeMutableAddressor(v12);
  v15 = *v13;
  v14 = v13[1];
  *(_QWORD *)(v7 + 48) = v15;
  *(_QWORD *)(v7 + 56) = v14;
  v16 = swift_bridgeObjectRetain(v14);
  v17 = (uint64_t *)Defaults.exportSceneFilePath.unsafeMutableAddressor(v16);
  v19 = *v17;
  v18 = v17[1];
  *(_QWORD *)(v7 + 64) = v19;
  *(_QWORD *)(v7 + 72) = v18;
  *(_QWORD *)&v2[v5] = v7;
  *(_QWORD *)&v8[OBJC_IVAR____TtC7Measure18SceneDebugObserver_sceneView] = a1;
  swift_bridgeObjectRetain(v18);
  v20 = a1;

  v25.receiver = v8;
  v25.super_class = ObjectType;
  v21 = (char *)objc_msgSendSuper2(&v25, "init");
  sub_100018148(0, (unint64_t *)&unk_100481BB0, NSUserDefaults_ptr);
  v22 = *(_QWORD *)&v21[OBJC_IVAR____TtC7Measure18SceneDebugObserver_keys];
  v23 = v21;
  swift_bridgeObjectRetain(v22);
  static NSUserDefaults.observe(observer:keys:)(v23, v22);

  swift_bridgeObjectRelease(v22);
  return v23;
}

uint64_t type metadata accessor for SceneDebugObserver()
{
  return objc_opt_self(_TtC7Measure18SceneDebugObserver);
}

void sub_1001763A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  void *v13;
  id v14;
  NSString v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  NSString v35;
  id v36;
  SCNDebugOptions v37;

  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v10 = (_QWORD *)Defaults.showStatistics.unsafeMutableAddressor(v7);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) != 0)
    {
      v13 = *(void **)(v2 + OBJC_IVAR____TtC7Measure18SceneDebugObserver_sceneView);
      v14 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v15 = String._bridgeToObjectiveC()();
      v16 = objc_msgSend(v14, "BOOLForKey:", v15);

      objc_msgSend(v13, "setShowsStatistics:", v16);
    }
    else
    {
      v17 = (_QWORD *)Defaults.showFeaturePoints.unsafeMutableAddressor();
      v18 = v17[1];
      if (*v17 == a1 && v18 == a2 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
      {
        sub_100018148(0, (unint64_t *)&unk_100481BB0, NSUserDefaults_ptr);
        v19 = *(void **)(v2 + OBJC_IVAR____TtC7Measure18SceneDebugObserver_sceneView);
        v37 = ARSCNDebugOptionShowFeaturePoints;
        v36 = objc_msgSend(v19, "debugOptions");
        type metadata accessor for SCNDebugOptions(0);
        v21 = v20;
        v22 = sub_10000C4B0(&qword_100487410, (uint64_t (*)(uint64_t))type metadata accessor for SCNDebugOptions, (uint64_t)&unk_1003B0668);
        static NSUserDefaults.update<A>(_:key:feature:)(&v36, a1, a2, &v37, v21, v22);
        objc_msgSend(v19, "setDebugOptions:", v36);
      }
      else
      {
        v23 = (_QWORD *)Defaults.exportSceneFilePath.unsafeMutableAddressor();
        v24 = v23[1];
        if (*v23 == a1 && v24 == a2 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v23, v24, a1, a2, 0) & 1) != 0)
        {
          v25 = (void *)objc_opt_self(NSUserDefaults);
          v26 = objc_msgSend(v25, "standardUserDefaults");
          v27 = v23[1];
          swift_bridgeObjectRetain(v27);
          v28 = String._bridgeToObjectiveC()();
          v29 = objc_msgSend(v26, "stringForKey:", v28, swift_bridgeObjectRelease(v27).n128_f64[0]);

          if (v29)
          {
            v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
            v32 = v31;

            URL.init(fileURLWithPath:)(v30, v32);
            swift_bridgeObjectRelease(v32);
            sub_100175A9C((uint64_t)v9);
            (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
            v33 = objc_msgSend(v25, "standardUserDefaults");
            v34 = v23[1];
            swift_bridgeObjectRetain(v34);
            v35 = String._bridgeToObjectiveC()();
            objc_msgSend(v33, "removeObjectForKey:", v35, swift_bridgeObjectRelease(v34).n128_f64[0]);

          }
        }
      }
    }
  }
}

ValueMetadata *_s8SceneKitVMa()
{
  return &_s8SceneKitVN;
}

uint64_t sub_100176720(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000286A0();
  return Context.description.getter(a1, v2);
}

unint64_t sub_100176748(uint64_t a1)
{
  unint64_t result;

  result = sub_10017676C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10017676C()
{
  unint64_t result;

  result = qword_100487418;
  if (!qword_100487418)
  {
    result = swift_getWitnessTable(&unk_1003BA1C0, &_s8SceneKitVN);
    atomic_store(result, (unint64_t *)&qword_100487418);
  }
  return result;
}

uint64_t sub_1001767B0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1003BA350);
  v2 = swift_getKeyPath(&unk_1003BA378);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_100176820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  _BYTE v7[24];

  v1 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v1);
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = v0 + qword_100487428;
  swift_beginAccess(v0 + qword_100487428, v7, 0, 0);
  sub_10007F03C(v4, (uint64_t)v3);
  v5 = (char *)sub_1001768C0 + 4 * byte_1003BA210[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_1001768C0()
{
  id *v0;
  void *v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1003BA350);
  v4 = swift_getKeyPath(&unk_1003BA378);
  *(_BYTE *)(v2 - 57) = 0;
  return static Published.subscript.setter(v2 - 57, v1, KeyPath, v4);
}

char *sub_1001769B0(void *a1, char *a2, void *a3, uint64_t a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  objc_class *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  void *v31;
  char *result;
  void *v33;
  id v34;
  unsigned __int8 v35;
  double v36;
  double v37;
  double v38;
  double v39;
  id v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  char *v47;
  _UNKNOWN **v48;
  char *v49;
  id v50;
  void *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  id v58;
  objc_super v59;
  char v60;

  v58 = a3;
  v8 = type metadata accessor for URL(0);
  __chkstk_darwin(v8);
  v57[0] = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000EDC8(&qword_100487848);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v4[qword_100487420];
  v60 = 2;
  v15 = v4;
  Published.init(initialValue:)(&v60, &type metadata for DebugSessionCoordinator.DebuggerState);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  v16 = &v15[qword_100487428];
  v17 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  swift_storeEnumTagMultiPayload(v16, v17, 4);
  v18 = qword_100487430;
  sub_10000EDC8(&qword_100487850);
  KeyPath = swift_getKeyPath(&unk_1003BA398);
  v20 = (objc_class *)type metadata accessor for DebugSessionCoordinator(0);
  *(_QWORD *)&v15[v18] = MutableStateValue.__allocating_init(_:_:)(KeyPath, v20);
  v21 = qword_100487438;
  *(_QWORD *)&v15[qword_100487438] = 0;
  v22 = qword_100487440;
  *(_QWORD *)&v15[qword_100487440] = 0;
  v23 = qword_100487448;
  *(_QWORD *)&v15[qword_100487448] = 0;
  *(_QWORD *)&v15[qword_100487450] = 0;
  *(_QWORD *)&v15[qword_1004AF720] = 0;
  v15[qword_1004AF728] = 0;
  v15[qword_1004AF730] = 0;
  v24 = &v15[qword_100487458];
  *(_QWORD *)v24 = v58;
  *((_QWORD *)v24 + 1) = a4;
  v57[1] = a4;
  *(_QWORD *)&v25 = swift_retain().n128_u64[0];
  v58 = a1;
  objc_msgSend(a1, "frame", v25);
  v30 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RecordingView()), "initWithFrame:", v26, v27, v28, v29);
  v31 = *(void **)&v15[v23];
  *(_QWORD *)&v15[v23] = v30;

  result = *(char **)&v15[v23];
  if (!result)
  {
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(result, "setHidden:", 1);
  result = (char *)objc_msgSend(a2, "view");
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (!*(_QWORD *)&v15[v23])
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v33 = result;
  objc_msgSend(result, "addSubview:");

  if (!objc_msgSend((id)objc_opt_self(Gestalt), "internalInstall"))
    goto LABEL_14;
  v34 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v35 = objc_msgSend(v34, "kHideTapToRadar");

  if ((v35 & 1) != 0)
    goto LABEL_14;
  objc_msgSend(v58, "frame");
  v40 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TapToRadarView()), "initWithFrame:", v36, v37, v38, v39);
  v41 = *(void **)&v15[v22];
  *(_QWORD *)&v15[v22] = v40;

  result = *(char **)&a2[qword_10048A398];
  if (!result)
    goto LABEL_22;
  if (!*(_QWORD *)&v15[v22])
  {
LABEL_23:
    __break(1u);
    return result;
  }
  objc_msgSend(result, "addSubview:");
  v42 = *(void **)&v15[v22];
  v43 = type metadata accessor for TapToRadarController(0);
  swift_allocObject(v43, 80, 7);
  v44 = v42;
  *(_QWORD *)&v15[v21] = sub_1001A7588(v42);
  swift_release();
  v45 = *(void **)&v15[v22];
  if (v45)
  {
    v46 = *(_QWORD *)&v15[v21];
    swift_retain();
    v47 = v45;

    v48 = &off_10044AF08;
    if (!v46)
      v48 = 0;
    v49 = &v47[OBJC_IVAR____TtC7Measure14TapToRadarView_delegate];
    *((_QWORD *)v49 + 1) = v48;
    swift_unknownObjectWeakAssign(v49, v46);

    swift_release();
    goto LABEL_15;
  }
LABEL_14:

LABEL_15:
  v59.receiver = v15;
  v59.super_class = v20;
  v50 = objc_msgSendSuper2(&v59, "init");
  v51 = (void *)objc_opt_self(NSUserDefaults);
  v52 = (char *)v50;
  v53 = objc_msgSend(v51, "standardUserDefaults");
  LODWORD(v51) = objc_msgSend(v53, "kShouldReportMeasurements");

  if ((_DWORD)v51)
  {
    v54 = type metadata accessor for ResultsReporter(0);
    v55 = v57[0];
    sub_1000CEF80();
    swift_allocObject(v54, *(unsigned int *)(v54 + 48), *(unsigned __int16 *)(v54 + 52));
    v56 = sub_1000CE5D4(v55);

    swift_release();
    *(_QWORD *)&v52[qword_1004AF720] = v56;
  }
  else
  {

  }
  swift_release();
  return v52;
}

void sub_100176ED4()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  sub_100176EF0();
}

void sub_100176EF0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v1 = v0;
  v2 = sub_10000EDC8(&qword_100487848);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v1[qword_100487420];
  v13 = 2;
  Published.init(initialValue:)(&v13, &type metadata for DebugSessionCoordinator.DebuggerState);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v5, v2);
  v7 = &v1[qword_100487428];
  v8 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  swift_storeEnumTagMultiPayload(v7, v8, 4);
  v9 = qword_100487430;
  sub_10000EDC8(&qword_100487850);
  KeyPath = swift_getKeyPath(&unk_1003BA398);
  v11 = type metadata accessor for DebugSessionCoordinator(0);
  *(_QWORD *)&v1[v9] = MutableStateValue.__allocating_init(_:_:)(KeyPath, v11);
  *(_QWORD *)&v1[qword_100487438] = 0;
  *(_QWORD *)&v1[qword_100487440] = 0;
  *(_QWORD *)&v1[qword_100487448] = 0;
  *(_QWORD *)&v1[qword_100487450] = 0;
  *(_QWORD *)&v1[qword_1004AF720] = 0;
  v1[qword_1004AF728] = 0;
  v1[qword_1004AF730] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002DLL, 0x80000001003D7D70, "Measure/DebugSessionCoordinator.swift", 37, 2, 133, 0);
  __break(1u);
}

void sub_100177094(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _BYTE v9[24];

  v8 = a1;
  v2 = type metadata accessor for URL(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1 + qword_100487428;
  swift_beginAccess(v1 + qword_100487428, v9, 0, 0);
  sub_10007F03C(v6, (uint64_t)v5);
  v7 = (char *)sub_100177178 + 4 * byte_1003BA215[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

id sub_100177178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  id v10;

  v5 = sub_10000EDC8(&qword_100483AC0);
  v6 = (uint64_t *)(v2 + *(int *)(v5 + 64));
  v7 = *v6;
  v8 = v6[1];
  v9 = *(unsigned __int8 *)(v2 + *(int *)(v5 + 48));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  v10 = sub_10017769C(*(void **)(v4 - 96), v1, v9, v7, v8);
  sub_1000217BC(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return v10;
}

id sub_1001772F0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  unsigned int v17;
  unsigned __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  _BYTE v37[24];

  v2 = v1;
  v36 = a1;
  v3 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v34 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v34 - v14;
  v16 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v17 = objc_msgSend(v16, "kShouldReportMeasurements");

  if (v17)
  {
    v18 = (unsigned __int8 *)NSUserDefaults.recordReplayOption.unsafeMutableAddressor();
    v19 = RecordReplayOption.replayFile.getter(*v18);
    v20 = URL.path.getter(v19);
    v22 = v21;
    v35 = v3;
    v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23(v13, v6);
    URL.init(fileURLWithPath:isDirectory:)(v20, v22, 0);
    URL.appendingPathExtension(_:)(0x6D6572757361656DLL, 0xEC00000073746E65);
    v23(v10, v6);
    swift_bridgeObjectRelease(v22);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v15, v6);
    v24 = type metadata accessor for ResultsReporter(0);
    swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
    v25 = sub_1000CE5D4((uint64_t)v13);
    v26 = *(_QWORD *)(v2 + qword_1004AF720);
    *(_QWORD *)(v2 + qword_1004AF720) = v25;
    v27 = swift_release(v26);
    ((void (*)(char *, uint64_t, __n128))v23)(v15, v6, v27);
    v3 = v35;
  }
  v28 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SessionSimulator(0)), "init");
  *v5 = v28;
  swift_storeEnumTagMultiPayload(v5, v3, 3);
  v29 = v2 + qword_100487428;
  swift_beginAccess(v2 + qword_100487428, v37, 33, 0);
  v30 = v28;
  sub_1001791F0((uint64_t)v5, v29);
  swift_endAccess(v37);
  sub_100176820();
  sub_10007F080((uint64_t)v5);
  v31 = swift_allocObject(&unk_100449AC8, 24, 7);
  swift_unknownObjectWeakInit(v31 + 16, v2);
  swift_retain(v31);
  v32 = sub_1000A9108(v36, (uint64_t)sub_100179298, v31);

  swift_release_n(v31, 2);
  return v32;
}

void sub_1001775D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  _BYTE *v4;
  id v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (_BYTE *)Strong;
    v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_10047AC00 != -1)
      swift_once(&qword_10047AC00, sub_100179044);
    objc_msgSend(v5, "postNotificationName:object:", qword_1004AF718, 0);

    v4[qword_1004AF730] = 1;
  }
}

id sub_10017769C(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t Path;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  NSURL *v28;
  void *v29;
  void *v30;
  unsigned int v31;
  uint64_t countAndFlagsBits;
  id v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String v36;
  void *object;
  Swift::String v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  uint64_t v43;
  Swift::String v44;
  uint64_t v45;
  Swift::String v46;
  void *v47;
  Swift::String v48;
  uint64_t v49;
  Swift::String v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  Swift::String v59;
  uint64_t v60;
  Swift::String v61;
  void *v62;
  Swift::String v63;
  uint64_t v64;
  Swift::String v65;
  void *v66;
  void *v67;
  NSString v68;
  NSString v69;
  id v70;
  NSString v71;
  void *v72;
  id v73;
  id result;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  void *v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  void *v93;
  id v94;
  uint64_t v95;
  int v96;
  _QWORD *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  Swift::String aBlock;
  void (*v106)(uint64_t, void *);
  void *v107;
  uint64_t (*v108)(_QWORD);
  uint64_t v109;

  v99 = a4;
  v100 = a5;
  v98 = a1;
  v8 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v8);
  v97 = (uint64_t *)((char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for URL(0);
  v103 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v95 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v95 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v95 - v20;
  sub_1001782E0(1);
  v104 = v5;
  sub_1001782FC(0);
  static RecordReplayOption.insertTimestamp(to:)(a2);
  v22 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  Path = URL.deletingLastPathComponent()();
  URL.path.getter(Path);
  v25 = v24;
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  LOBYTE(v25) = objc_msgSend(v22, "fileExistsAtPath:", v26);

  v102 = v22;
  if ((v25 & 1) == 0)
  {
    URL._bridgeToObjectiveC()(v28);
    v30 = v29;
    aBlock._countAndFlagsBits = 0;
    v31 = objc_msgSend(v22, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v29, 1, 0, &aBlock);

    countAndFlagsBits = aBlock._countAndFlagsBits;
    if (v31)
    {
      v27 = (id)aBlock._countAndFlagsBits;
    }
    else
    {
      v101 = v16;
      v95 = v8;
      v96 = a3;
      v33 = (id)aBlock._countAndFlagsBits;
      v34 = _convertNSErrorToError(_:)(countAndFlagsBits);

      swift_willThrow();
      if (qword_10047AA60 != -1)
        swift_once(&qword_10047AA60, sub_1000E1344);
      aBlock._countAndFlagsBits = 0;
      aBlock._object = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(44);
      swift_bridgeObjectRelease(aBlock._object);
      aBlock._countAndFlagsBits = 0xD00000000000001BLL;
      aBlock._object = (void *)0x80000001003E3780;
      v35 = sub_10000C4B0(&qword_100487858, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v36._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v10, v35);
      object = v36._object;
      String.append(_:)(v36);
      swift_bridgeObjectRelease(object);
      v38._countAndFlagsBits = 0x63657220726F6620;
      v38._object = (void *)0xEF2E676E6964726FLL;
      String.append(_:)(v38);
      v39 = aBlock._object;
      Log.error(_:isPrivate:)(aBlock, 0);
      swift_bridgeObjectRelease(v39);
      v27 = (id)swift_errorRelease(v34);
      a3 = v96;
      v8 = v95;
      v16 = v101;
      v22 = v102;
    }
  }
  URL.path.getter(v27);
  v41 = v40;
  v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v41);
  LOBYTE(v41) = objc_msgSend(v22, "isWritableFileAtPath:", v42);

  if ((v41 & 1) == 0)
  {
    v101 = v16;
    v96 = a3;
    if (qword_10047AA60 != -1)
      swift_once(&qword_10047AA60, sub_1000E1344);
    v95 = v8;
    aBlock._countAndFlagsBits = 0;
    aBlock._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(51);
    v44._countAndFlagsBits = 0x6620746567726154;
    v44._object = (void *)0xEE00207265646C6FLL;
    String.append(_:)(v44);
    v46._countAndFlagsBits = URL.path.getter(v45);
    v47 = v46._object;
    String.append(_:)(v46);
    swift_bridgeObjectRelease(v47);
    v48._countAndFlagsBits = 0xD000000000000021;
    v48._object = (void *)0x80000001003E37A0;
    String.append(_:)(v48);
    if (qword_10047A988 != -1)
      swift_once(&qword_10047A988, sub_100095A18);
    v49 = sub_1000362E8(v10, (uint64_t)qword_1004AF2F8);
    v50._countAndFlagsBits = URL.path.getter(v49);
    v51 = v50._object;
    String.append(_:)(v50);
    swift_bridgeObjectRelease(v51);
    v52 = aBlock._object;
    Log.error(_:isPrivate:)(aBlock, 0);
    v53 = swift_bridgeObjectRelease(v52);
    v54 = URL.lastPathComponent.getter(v53);
    v56 = v55;
    v57 = v101;
    URL.appendingPathComponent(_:)(v54);
    swift_bridgeObjectRelease(v56);
    v58 = v103;
    (*(void (**)(char *, uint64_t))(v103 + 8))(v21, v10);
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v21, v57, v10);
    objc_msgSend((id)objc_opt_self(ARKitUserDefaults), "removeCachedObjectForKey:", ARSessionRecordingFilePathDefaultsKey);
    aBlock._countAndFlagsBits = 0;
    aBlock._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(63);
    v59._object = (void *)0x80000001003E37D0;
    v59._countAndFlagsBits = 0xD000000000000015;
    String.append(_:)(v59);
    v61._countAndFlagsBits = URL.path.getter(v60);
    v62 = v61._object;
    String.append(_:)(v61);
    swift_bridgeObjectRelease(v62);
    v63._countAndFlagsBits = 0xD000000000000026;
    v63._object = (void *)0x80000001003E37F0;
    String.append(_:)(v63);
    v65._countAndFlagsBits = URL.path.getter(v64);
    v66 = v65._object;
    String.append(_:)(v65);
    swift_bridgeObjectRelease(v66);
    v67 = aBlock._object;
    v68 = String._bridgeToObjectiveC()();
    v69 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v67);
    v70 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v68, v69, 1);

    v71 = String._bridgeToObjectiveC()();
    v108 = nullsub_1;
    v109 = 0;
    aBlock._countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
    aBlock._object = (void *)1107296256;
    v106 = sub_10004C834;
    v107 = &unk_100449B08;
    v72 = _Block_copy(&aBlock);
    swift_release(v109);
    v73 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v71, 0, v72);
    _Block_release(v72);

    objc_msgSend(v70, "addAction:", v73);
    if (qword_10047A930 != -1)
      swift_once(&qword_10047A930, sub_100083368);
    result = (id)*((_QWORD *)&xmmword_1004AF228 + 1);
    LOBYTE(a3) = v96;
    v8 = v95;
    if (!*((_QWORD *)&xmmword_1004AF228 + 1))
    {
      __break(1u);
      return result;
    }
    objc_msgSend(*((id *)&xmmword_1004AF228 + 1), "presentViewController:animated:completion:", v70, 1, 0);

    v16 = v101;
  }
  v75 = URL.path.getter(v43);
  v77 = v76;
  URL.init(fileURLWithPath:isDirectory:)(v75, v76, 0);
  URL.appendingPathExtension(_:)(0x6D6572757361656DLL, 0xEC00000073746E65);
  v78 = v103;
  v79 = *(void (**)(char *, uint64_t))(v103 + 8);
  v79(v13, v10);
  swift_bridgeObjectRelease(v77);
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v13, v16, v10);
  v80 = type metadata accessor for ResultsReporter(0);
  swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
  v81 = sub_1000CE5D4((uint64_t)v13);
  v82 = *(_QWORD *)(v104 + qword_1004AF720);
  *(_QWORD *)(v104 + qword_1004AF720) = v81;
  v83 = swift_release(v82);
  ((void (*)(char *, uint64_t, __n128))v79)(v16, v10, v83);
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v84 = (void *)*((_QWORD *)&xmmword_1004AF228 + 1);
  if (!*((_QWORD *)&xmmword_1004AF228 + 1))
    __break(1u);
  v85 = objc_allocWithZone((Class)type metadata accessor for SessionRecorder());
  v86 = sub_1000E1DE4((uint64_t)v84);
  v87 = (uint64_t)v97;
  *v97 = v86;
  swift_storeEnumTagMultiPayload(v87, v8, 1);
  v88 = v104 + qword_100487428;
  swift_beginAccess(v104 + qword_100487428, &aBlock, 33, 0);
  v89 = v86;
  sub_1001791F0(v87, v88);
  swift_endAccess(&aBlock);
  sub_100176820();
  v90 = sub_10007F080(v87);
  v91 = URL.path.getter(v90);
  v93 = v92;
  v94 = sub_1000E1E9C(v98, v91, v92, a3, v99, v100);

  swift_bridgeObjectRelease(v93);
  v79(v19, v10);
  v79(v21, v10);
  return v94;
}

void sub_100177FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  _BYTE v16[24];
  _BYTE v17[24];

  v5 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  v6 = __chkstk_darwin(v5);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = (void **)&v16[-v9];
  v11 = v2 + qword_100487428;
  swift_beginAccess(v2 + qword_100487428, v17, 0, 0);
  sub_10007F03C(v11, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload(v10, v5) == 1)
  {
    v12 = *v10;
    *v8 = v12;
    swift_storeEnumTagMultiPayload(v8, v5, 2);
    swift_beginAccess(v11, v16, 33, 0);
    v13 = v12;
    sub_1001791F0((uint64_t)v8, v11);
    swift_endAccess(v16);
    sub_100176820();
    sub_10007F080((uint64_t)v8);
    v14 = swift_allocObject(&unk_100449AC8, 24, 7);
    swift_unknownObjectWeakInit(v14 + 16, v2);
    v15 = (_QWORD *)swift_allocObject(&unk_100449AF0, 40, 7);
    v15[2] = v14;
    v15[3] = a1;
    v15[4] = a2;
    swift_retain();
    sub_100036254(a1, a2);
    sub_1000E2584(sub_10017928C, (uint64_t)v15);

    swift_release();
    swift_release();
  }
  else
  {
    sub_10007F080((uint64_t)v10);
  }
}

void sub_100178190(uint64_t a1, void (*a2)(__n128))
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t Strong;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(__n128);
  __n128 v13;
  __n128 v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v4 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1, v7);
  if (Strong)
  {
    v9 = (_BYTE *)Strong;
    swift_storeEnumTagMultiPayload(v6, v4, 4);
    v10 = (uint64_t)&v9[qword_100487428];
    swift_beginAccess(&v9[qword_100487428], v15, 33, 0);
    sub_1001791F0((uint64_t)v6, v10);
    swift_endAccess(v15);
    sub_100176820();
    sub_10007F080((uint64_t)v6);
    v11 = qword_1004AF728;
    v9[qword_1004AF728] = 1;
    sub_1001782E0(0);
    sub_1001782FC(1);
    v12 = *(void (**)(__n128))&v9[qword_100487458];
    v13 = swift_retain();
    v12(v13);
    v14 = swift_release();
    v9[v11] = 1;
    if (a2)
      a2(v14);

  }
}

uint64_t sub_1001782E0(char a1)
{
  return sub_100178318(a1, (uint64_t)&unk_100449A78, (uint64_t)sub_1001791B8, (uint64_t)&unk_100449A90);
}

uint64_t sub_1001782FC(char a1)
{
  return sub_100178318(a1, (uint64_t)&unk_100449A28, (uint64_t)sub_100179194, (uint64_t)&unk_100449A40);
}

uint64_t sub_100178318(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v26 = a4;
  v7 = v4;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100049274();
  v15 = (void *)static OS_dispatch_queue.main.getter();
  v16 = swift_allocObject(a2, 25, 7);
  *(_QWORD *)(v16 + 16) = v4;
  *(_BYTE *)(v16 + 24) = a1;
  aBlock[4] = a3;
  v30 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003ECA0;
  aBlock[3] = v26;
  v17 = _Block_copy(aBlock);
  v18 = v30;
  v19 = v7;
  v20 = swift_release(v18);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v23 = sub_100030E64();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v9, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v27);
}

void sub_100178504()
{
  _swift_stdlib_reportUnimplementedInitializer("Measure.DebugSessionCoordinator", 31, "init()", 6, 0);
  __break(1u);
}

double sub_100178530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = v0 + qword_100487420;
  v2 = sub_10000EDC8(&qword_100487848);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_10007F080(v0 + qword_100487428);
  swift_release();
  swift_release();

  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

id sub_1001785F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugSessionCoordinator(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

double sub_100178628(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = a1 + qword_100487420;
  v3 = sub_10000EDC8(&qword_100487848);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_10007F080(a1 + qword_100487428);
  swift_release();
  swift_release();

  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t type metadata accessor for DebugSessionCoordinator(uint64_t a1)
{
  return sub_1000CEB70(a1, (uint64_t *)&unk_100487488, (uint64_t)&nominal type descriptor for DebugSessionCoordinator);
}

void sub_100178704(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[11];

  sub_1001787C4();
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[3] = "\b";
      v6[4] = "\b";
      v6[5] = "\b";
      v6[6] = "\b";
      v6[7] = (char *)&value witness table for () + 64;
      v6[8] = "\b";
      v6[9] = &unk_1003BA270;
      v6[10] = &unk_1003BA270;
      swift_initClassMetadata2(a1, 256, 11, v6, a1 + 200);
    }
  }
}

void sub_1001787C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_100487498)
  {
    v0 = type metadata accessor for Published(0, &type metadata for DebugSessionCoordinator.DebuggerState);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_100487498);
  }
}

uint64_t type metadata accessor for DebugSessionCoordinator.RecordReplayState(uint64_t a1)
{
  return sub_1000CEB70(a1, qword_100487808, (uint64_t)&nominal type descriptor for DebugSessionCoordinator.RecordReplayState);
}

uint64_t sub_10017882C()
{
  return type metadata accessor for DebugSessionCoordinator(0);
}

_QWORD *sub_100178834(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v8 = type metadata accessor for URL(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = sub_10000EDC8(&qword_100483AC0);
        *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
        v10 = *(int *)(v9 + 64);
        v11 = (_QWORD *)((char *)a1 + v10);
        v12 = (_QWORD *)((char *)a2 + v10);
        if (*v12)
        {
          v13 = v12[1];
          *v11 = *v12;
          v11[1] = v13;
          swift_retain();
        }
        else
        {
          *(_OWORD *)v11 = *(_OWORD *)v12;
        }
        swift_storeEnumTagMultiPayload(a1, a3, 0);
        break;
      case 1u:
        v16 = (void *)*a2;
        *a1 = *a2;
        v17 = v16;
        swift_storeEnumTagMultiPayload(a1, a3, 1);
        break;
      case 2u:
        v18 = (void *)*a2;
        *a1 = *a2;
        v19 = v18;
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      case 3u:
        v20 = (void *)*a2;
        *a1 = *a2;
        v21 = v20;
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

double sub_1001789A8(id *a1, uint64_t a2)
{
  double result;
  uint64_t v4;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      v4 = type metadata accessor for URL(0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      if (*(id *)((char *)a1 + *(int *)(sub_10000EDC8(&qword_100483AC0) + 64)))
        *(_QWORD *)&result = swift_release().n128_u64[0];
      break;
    case 1u:
    case 2u:
    case 3u:

      break;
    default:
      return result;
  }
  return result;
}

void **sub_100178A44(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = type metadata accessor for URL(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = sub_10000EDC8(&qword_100483AC0);
      *((_BYTE *)a1 + *(int *)(v7 + 48)) = *((_BYTE *)a2 + *(int *)(v7 + 48));
      v8 = *(int *)(v7 + 64);
      v9 = (void **)((char *)a1 + v8);
      v10 = (void **)((char *)a2 + v8);
      if (*v10)
      {
        v11 = v10[1];
        *v9 = *v10;
        v9[1] = v11;
        swift_retain();
      }
      else
      {
        *(_OWORD *)v9 = *(_OWORD *)v10;
      }
      v14 = a1;
      v15 = a3;
      v16 = 0;
      goto LABEL_10;
    case 1u:
      v12 = *a2;
      *a1 = *a2;
      v13 = v12;
      v14 = a1;
      v15 = a3;
      v16 = 1;
      goto LABEL_10;
    case 2u:
      v17 = *a2;
      *a1 = *a2;
      v18 = v17;
      v14 = a1;
      v15 = a3;
      v16 = 2;
      goto LABEL_10;
    case 3u:
      v19 = *a2;
      *a1 = *a2;
      v20 = v19;
      v14 = a1;
      v15 = a3;
      v16 = 3;
LABEL_10:
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void **sub_100178B84(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;

  if (a1 != a2)
  {
    sub_10007F080((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v6 = type metadata accessor for URL(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        v7 = sub_10000EDC8(&qword_100483AC0);
        *((_BYTE *)a1 + *(int *)(v7 + 48)) = *((_BYTE *)a2 + *(int *)(v7 + 48));
        v8 = *(int *)(v7 + 64);
        v9 = (void **)((char *)a1 + v8);
        v10 = (void **)((char *)a2 + v8);
        if (*v10)
        {
          v11 = v10[1];
          *v9 = *v10;
          v9[1] = v11;
          swift_retain();
        }
        else
        {
          *(_OWORD *)v9 = *(_OWORD *)v10;
        }
        v14 = a1;
        v15 = a3;
        v16 = 0;
        goto LABEL_11;
      case 1u:
        v12 = *a2;
        *a1 = *a2;
        v13 = v12;
        v14 = a1;
        v15 = a3;
        v16 = 1;
        goto LABEL_11;
      case 2u:
        v17 = *a2;
        *a1 = *a2;
        v18 = v17;
        v14 = a1;
        v15 = a3;
        v16 = 2;
        goto LABEL_11;
      case 3u:
        v19 = *a2;
        *a1 = *a2;
        v20 = v19;
        v14 = a1;
        v15 = a3;
        v16 = 3;
LABEL_11:
        swift_storeEnumTagMultiPayload(v14, v15, v16);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_100178CD4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = sub_10000EDC8(&qword_100483AC0);
    a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
    v8 = *(int *)(v7 + 64);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *(_QWORD *)v10;
    if (*(_QWORD *)v10)
    {
      v12 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = v11;
      *((_QWORD *)v9 + 1) = v12;
    }
    else
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_100178D9C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_10007F080((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = sub_10000EDC8(&qword_100483AC0);
      a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
      v8 = *(int *)(v7 + 64);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = *(_QWORD *)v10;
      if (*(_QWORD *)v10)
      {
        v12 = *((_QWORD *)v10 + 1);
        *(_QWORD *)v9 = v11;
        *((_QWORD *)v9 + 1) = v12;
      }
      else
      {
        *(_OWORD *)v9 = *(_OWORD *)v10;
      }
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_100178E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_100178E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_100178E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_100178EA0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[4];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout3(v4, *(_QWORD *)(result - 8) + 64, &unk_1003BA2A8, &unk_1003BA2C0);
    v5[0] = v4;
    v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 4, v5);
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugSessionCoordinator.DebuggerState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100178F7C + 4 * byte_1003BA22F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100178FB0 + 4 * byte_1003BA22A[v4]))();
}

uint64_t sub_100178FB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100178FB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100178FC0);
  return result;
}

uint64_t sub_100178FCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100178FD4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100178FD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100178FE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugSessionCoordinator.DebuggerState()
{
  return &type metadata for DebugSessionCoordinator.DebuggerState;
}

unint64_t sub_100179000()
{
  unint64_t result;

  result = qword_100487840;
  if (!qword_100487840)
  {
    result = swift_getWitnessTable(&unk_1003BA328, &type metadata for DebugSessionCoordinator.DebuggerState);
    atomic_store(result, (unint64_t *)&qword_100487840);
  }
  return result;
}

NSString sub_100179044()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1004AF718 = (uint64_t)result;
  return result;
}

uint64_t sub_10017907C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003BA350);
  v5 = swift_getKeyPath(&unk_1003BA378);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1001790FC(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003BA350);
  v5 = swift_getKeyPath(&unk_1003BA378);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100179170()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_100179194()
{
  return sub_1001791C4(&qword_100487440);
}

uint64_t sub_1001791A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001791B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_1001791B8()
{
  return sub_1001791C4(&qword_100487448);
}

id sub_1001791C4(_QWORD *a1)
{
  uint64_t v1;
  id result;

  result = *(id *)(*(_QWORD *)(v1 + 16) + *a1);
  if (result)
    return objc_msgSend(result, "setHidden:", (*(_BYTE *)(v1 + 24) & 1) == 0);
  return result;
}

uint64_t sub_1001791F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100179234(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_100179258()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_10017928C()
{
  uint64_t v0;

  sub_100178190(*(_QWORD *)(v0 + 16), *(void (**)(__n128))(v0 + 24));
}

void sub_100179298()
{
  uint64_t v0;

  sub_1001775D4(v0);
}

id sub_1001792B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___rayNode;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___rayNode);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___rayNode);
  }
  else
  {
    sub_100179310();
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_100179310()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  Class isa;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  id v14;
  NSString v15;
  void *v16;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(SCNBox), "boxWithWidth:height:length:chamferRadius:", 0.0003, 0.0003, 3.0, 0.0);
  v3 = objc_msgSend(v2, "materials");
  v4 = sub_100018148(0, (unint64_t *)&qword_10048A110, SCNMaterial_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if (!((unint64_t)v5 >> 62))
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(v5);
    goto LABEL_12;
  }
  if (v5 < 0)
    v10 = v5;
  else
    v10 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v11 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(v5);
  if (!v11)
    goto LABEL_11;
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v5 + 32);
LABEL_6:
    v7 = v6;
    v8 = objc_msgSend(v6, "diffuse", swift_bridgeObjectRelease(v5).n128_f64[0]);

    sub_100018148(0, &qword_10047D0A0, UIColor_ptr);
    isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.14913, 0.0, 1.0).super.isa;
    objc_msgSend(v8, "setContents:", isa);

LABEL_12:
    v12 = objc_msgSend((id)objc_opt_self(SCNNode), "nodeWithGeometry:", v2);
    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setName:", v13);

    objc_msgSend(v12, "position");
    objc_msgSend(v12, "setPosition:");
    objc_msgSend(v12, "setHidden:", 1);
    v14 = objc_msgSend(objc_allocWithZone((Class)SCNNode), "init");
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "setName:", v15);

    objc_msgSend(v14, "addChildNode:", v12);
    v16 = (void *)objc_opt_self(SCNTransaction);
    objc_msgSend(v16, "begin");
    objc_msgSend(v1, "addChildNode:", v14);
    objc_msgSend(v16, "commit");

    return;
  }
  __break(1u);
}

void sub_1001795EC(uint64_t a1)
{
  uint64_t **v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char **v9;
  id v10;
  void *v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  uint64_t **v32;
  id v33;
  uint64_t v34;

  v3 = (id)objc_opt_self(SCNBox);
  v4 = objc_msgSend(v3, "boxWithWidth:height:length:chamferRadius:", 0.001, 0.2, 0.001, 0.0);
  v5 = objc_msgSend(v4, "materials");
  v6 = sub_100018148(0, (unint64_t *)&qword_10048A110, SCNMaterial_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v19 = v7;
    else
      v19 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = (void *)_CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v8 = *(void **)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = &selRef_renderer_didAddNode_forAnchor_;
  v34 = a1;
  if (v8)
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
    }
    else
    {
      if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_38;
      }
      v10 = *(id *)(v7 + 32);
    }
    v11 = v10;
    v12 = objc_msgSend(v10, "diffuse", swift_bridgeObjectRelease(v7).n128_f64[0]);
    objc_msgSend(v12, "setContents:", a1);

  }
  else
  {
    swift_bridgeObjectRelease(v7);
  }
  v8 = (void *)objc_opt_self(SCNNode);
  v7 = (uint64_t)objc_msgSend(v8, "nodeWithGeometry:", v4);
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend((id)v7, "setName:", v13);

  objc_msgSend((id)v7, "position");
  objc_msgSend((id)v7, "setPosition:");
  v9 = (char **)objc_msgSend((id)objc_opt_self(SCNSphere), "sphereWithRadius:", 0.01);
  v14 = objc_msgSend(v9, "materials");
  a1 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v6);

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v20 = a1;
    else
      v20 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v21 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(a1);
    v32 = v1;
    if (v21)
    {
LABEL_11:
      if ((a1 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_40;
        }
        v15 = *(id *)(a1 + 32);
        goto LABEL_14;
      }
LABEL_38:
      v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
LABEL_14:
      v16 = v15;
      v17 = objc_msgSend(v15, "diffuse", swift_bridgeObjectRelease(a1).n128_f64[0]);

      objc_msgSend(v17, "setContents:", v34);
      goto LABEL_24;
    }
  }
  else
  {
    v32 = v1;
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_11;
  }
  *(_QWORD *)&v18 = swift_bridgeObjectRelease(a1).n128_u64[0];
LABEL_24:
  a1 = (uint64_t)objc_msgSend(v8, "nodeWithGeometry:", v9, v18, v32);
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend((id)a1, "setName:", v22);

  v1 = &off_10046F000;
  objc_msgSend((id)a1, "setHidden:", 1);
  objc_msgSend((id)a1, "setOpacity:", 0.75);
  v3 = objc_msgSend(v3, "boxWithWidth:height:length:chamferRadius:", 0.1, 0.001, 0.1, 0.0);
  v23 = objc_msgSend(v3, "materials");
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v6);

  if (!((unint64_t)v6 >> 62))
  {
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_26;
LABEL_34:
    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v6).n128_u64[0];
    goto LABEL_35;
  }
  if (v6 < 0)
    v28 = v6;
  else
    v28 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v29 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v6);
  if (!v29)
    goto LABEL_34;
LABEL_26:
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_40:
    v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
    goto LABEL_29;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v24 = *(id *)(v6 + 32);
LABEL_29:
    v25 = v24;
    v26 = objc_msgSend(v24, "diffuse", swift_bridgeObjectRelease(v6).n128_f64[0]);
    objc_msgSend(v26, "setContents:", v34);

    objc_msgSend(v25, "setBlendMode:", 4);
LABEL_35:
    v30 = objc_msgSend(v8, "nodeWithGeometry:", v3, v27, v32);
    v31 = String._bridgeToObjectiveC()();
    objc_msgSend(v30, "setName:", v31);

    objc_msgSend(v30, (SEL)v1[328], 1);
    objc_msgSend(v30, "addChildNode:", v7);
    objc_msgSend(v30, "addChildNode:", a1);
    objc_msgSend(v30, "setOpacity:", 0.75);
    objc_msgSend(v33, "addChildNode:", v30);

    return;
  }
  __break(1u);
}

id sub_100179B90(uint64_t *a1, Swift::Float a2, Swift::Float a3, Swift::Float a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v11;
  Class isa;
  void *v13;
  void *v14;
  void *v15;
  id v16;

  v5 = *a1;
  v6 = *(void **)(v4 + *a1);
  if (v6)
  {
    v7 = *(id *)(v4 + *a1);
  }
  else
  {
    v11 = v4;
    sub_100018148(0, &qword_10047D0A0, UIColor_ptr);
    isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(a2, a3, a4, 1.0).super.isa;
    sub_1001795EC((uint64_t)isa);
    v14 = v13;

    v15 = *(void **)(v11 + v5);
    *(_QWORD *)(v11 + v5) = v14;
    v7 = v14;

    v6 = 0;
  }
  v16 = v6;
  return v7;
}

id sub_100179C6C(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  double v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  char *v30;
  objc_class *ObjectType;
  objc_super v33;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  v6 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___rayNode;
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___rayNode] = 0;
  v7 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___arKitNode;
  *(_QWORD *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___arKitNode] = 0;
  v8 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___mlNode;
  *(_QWORD *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___mlNode] = 0;
  v9 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___lpNode;
  *(_QWORD *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___lpNode] = 0;
  v10 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___fallbackNode;
  *(_QWORD *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___fallbackNode] = 0;
  v11 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___previousNode;
  *(_QWORD *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___previousNode] = 0;
  v12 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___patchNode;
  *(_QWORD *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___patchNode] = 0;
  v13 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___adNode;
  *(_QWORD *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___adNode] = 0;
  v14 = objc_opt_self(ARSCNView);
  v15 = swift_dynamicCastObjCClass(a1, v14);
  if (v15)
  {
    *(_QWORD *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger_sceneView] = v15;
    *(_QWORD *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger_planeSelector] = a3;
    v33.receiver = v4;
    v33.super_class = ObjectType;
    v16 = (void *)v15;
    v17 = a1;
    *(_QWORD *)&v18 = swift_retain().n128_u64[0];
    v19 = objc_msgSendSuper2(&v33, "init", v18);
    v20 = String._bridgeToObjectiveC()();
    objc_msgSend(v19, "setName:", v20);

    v21 = v19;
    v22 = PlaneSelector.debugOptions.getter();
    objc_msgSend(v21, "setHidden:", (*(_QWORD *)PlaneSelector.DebugOptions.showHitPoints.unsafeMutableAddressor(v22) & ~v22) != 0);

    v23 = (void *)objc_opt_self(SCNTransaction);
    objc_msgSend(v23, "begin");
    v24 = objc_msgSend(v16, "scene");
    v25 = objc_msgSend(v24, "rootNode");

    objc_msgSend(v25, "addChildNode:", v21);
    objc_msgSend(v23, "commit");
    sub_100018148(0, (unint64_t *)&unk_100481BB0, NSUserDefaults_ptr);
    v26 = v21;
    v27 = *(_QWORD *)PlaneSelector.DebugOptions.keys.unsafeMutableAddressor();
    swift_bridgeObjectRetain(v27);
    static NSUserDefaults.observe(observer:keys:)(v26, v27);
    swift_bridgeObjectRelease(v27);

    swift_release();
  }
  else
  {
    v30 = v4;

    swift_release();
    v28 = *(void **)&v4[v13];

    swift_deallocPartialClassInstance(v30, ObjectType, 88, 7);
    return 0;
  }
  return v26;
}

void sub_10017A06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  NSString v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  id v16;
  NSString v17;
  id v18;
  id v19;
  id v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  id v25;
  NSString v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v49;
  _BYTE v50[104];
  _BYTE v51[104];
  _BYTE v52[104];
  _BYTE v53[104];
  _BYTE v54[104];
  _BYTE v55[16];
  __int128 v56;
  __int128 v57;
  __int128 v58;
  double v59[5];
  uint64_t v60;
  _BYTE v61[16];
  __int128 v62;
  __int128 v63;
  __int128 v64;
  double v65[5];
  uint64_t v66;
  _BYTE v67[16];
  __int128 v68;
  __int128 v69;
  __int128 v70;
  double v71[5];
  uint64_t v72;
  _BYTE v73[16];
  __int128 v74;
  __int128 v75;
  __int128 v76;
  double v77[5];
  uint64_t v78;
  _BYTE v79[16];
  __int128 v80;
  __int128 v81;
  __int128 v82;
  double v83[5];
  uint64_t v84;

  sub_10004402C(a5, (uint64_t)v54);
  sub_10004402C(a4, (uint64_t)v53);
  v43 = a3;
  sub_10004402C(a3, (uint64_t)v52);
  sub_10004402C(a2, (uint64_t)v51);
  sub_10004402C(a1, (uint64_t)v50);
  v9 = sub_100179B90(&OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___lpNode, 0.21961, 0.0078431, 0.8549);
  sub_10004402C(a1, (uint64_t)v79);
  if (v84)
  {
    v32 = *(double *)&v82;
    v35 = v83[0];
    v28 = *(double *)&v80;
    v30 = *(double *)&v81;
    swift_retain();
    objc_msgSend(v9, "setSimdWorldTransform:", v28, v30, v32, v35);
    objc_msgSend(v9, "setHidden:", 0);
    objc_msgSend(v9, "setRenderingOrder:", 1);
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v9, "childNodeWithName:recursively:", v10, 0);

    if (v11)
    {
      objc_msgSend(v11, "setHidden:", 1);
      sub_100047210(a1);

      v9 = v11;
    }
    else
    {
      sub_100047210(a1);
    }
  }
  else
  {
    objc_msgSend(v9, "setHidden:", 1);
    objc_msgSend(v9, "setRenderingOrder:", 1);
  }

  v12 = sub_100179B90(&OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___arKitNode, 0.80784, 0.027451, 0.33333);
  sub_10004402C(a2, (uint64_t)v73);
  if (v78)
  {
    v33 = *(double *)&v76;
    v36 = v77[0];
    v29 = *(double *)&v74;
    v31 = *(double *)&v75;
    swift_retain();
    objc_msgSend(v12, "setSimdWorldTransform:", v29, v31, v33, v36);
    objc_msgSend(v12, "setHidden:", 0);
    objc_msgSend(v12, "setRenderingOrder:", 1);
    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend(v12, "childNodeWithName:recursively:", v13, 0);

    if (v14)
    {
      objc_msgSend(v14, "setHidden:", 1);
      sub_100047210(a2);

      v12 = v14;
    }
    else
    {
      sub_100047210(a2);
    }
  }
  else
  {
    objc_msgSend(v12, "setHidden:", 1);
    objc_msgSend(v12, "setRenderingOrder:", 1);
  }
  v15 = v43;

  v16 = sub_100179B90(&OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___mlNode, 0.46667, 0.76471, 0.26667);
  sub_10004402C(v43, (uint64_t)v67);
  if (v72)
  {
    v44 = v71[0];
    v37 = *(double *)&v69;
    v39 = *(double *)&v70;
    v34 = *(double *)&v68;
    swift_retain();
    objc_msgSend(v16, "setSimdWorldTransform:", v34, v37, v39, v44);
    objc_msgSend(v16, "setHidden:", 0);
    objc_msgSend(v16, "setRenderingOrder:", 1);
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v16, "childNodeWithName:recursively:", v17, 0);

    if (v18)
    {
      objc_msgSend(v18, "setHidden:", 1);
      sub_100047210(v15);

      v16 = v18;
    }
    else
    {
      sub_100047210(v15);
    }
  }
  else
  {
    objc_msgSend(v16, "setHidden:", 1);
    objc_msgSend(v16, "setRenderingOrder:", 1);
  }

  v19 = sub_100179B90(&OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___fallbackNode, 1.0, 1.0, 1.0);
  objc_msgSend(v19, "setHidden:", 1);
  objc_msgSend(v19, "setRenderingOrder:", 1);

  v20 = sub_100179B90(&OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___previousNode, 0.0, 0.0, 0.0);
  objc_msgSend(v20, "setHidden:", 1);
  objc_msgSend(v20, "setRenderingOrder:", 1);

  v21 = sub_100179B90(&OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___patchNode, 1.0, 0.25279, 1.0);
  sub_10004402C(a4, (uint64_t)v61);
  if (v66)
  {
    v45 = v65[0];
    v40 = *(double *)&v63;
    v41 = *(double *)&v64;
    v38 = *(double *)&v62;
    swift_retain();
    objc_msgSend(v21, "setSimdWorldTransform:", v38, v40, v41, v45);
    objc_msgSend(v21, "setHidden:", 0);
    objc_msgSend(v21, "setRenderingOrder:", 1);
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend(v21, "childNodeWithName:recursively:", v22, 0);

    objc_msgSend(v23, "setHidden:", 1);
    sub_100047210(a4);

    v21 = v23;
  }
  else
  {
    objc_msgSend(v21, "setHidden:", 1);
    objc_msgSend(v21, "setRenderingOrder:", 1);
  }
  v24 = a5;

  v25 = sub_100179B90(&OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___adNode, 0.0, 0.99144, 1.0);
  sub_10004402C(a5, (uint64_t)v55);
  if (v60)
  {
    v47 = *(double *)&v58;
    v49 = v59[0];
    v46 = *(double *)&v57;
    v42 = *(double *)&v56;
    swift_retain();
    objc_msgSend(v25, "setSimdWorldTransform:", v42, v46, v47, v49);
    objc_msgSend(v25, "setHidden:", 0);
    objc_msgSend(v25, "setRenderingOrder:", 1);
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v25, "childNodeWithName:recursively:", v26, 0);

    objc_msgSend(v27, "setHidden:", 1);
    sub_100047210(v24);

    v25 = v27;
  }
  else
  {
    objc_msgSend(v25, "setHidden:", 1);
    objc_msgSend(v25, "setRenderingOrder:", 1);
  }

}

uint64_t sub_10017A7CC(uint64_t a1)
{
  uint64_t result;
  _BYTE v3[104];
  _BYTE v4[16];
  uint64_t v5;

  sub_10004402C(a1, (uint64_t)v3);
  result = sub_10004402C(a1, (uint64_t)v4);
  if (v5)
    __asm { BR              X10 }
  return result;
}

uint64_t type metadata accessor for SCNPlaneSelectionDebugger()
{
  return objc_opt_self(_TtC7Measure25SCNPlaneSelectionDebugger);
}

id sub_10017AB74@<X0>(void *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  objc_class *v3;
  id v7;
  uint64_t v8;
  id result;

  v7 = objc_allocWithZone(v3);
  result = sub_100179C6C(a1, v8, a2);
  *a3 = result;
  return result;
}

void sub_10017ABBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10017A06C(a1, a2, a3, a4, a5);
}

uint64_t sub_10017ABDC(uint64_t a1)
{
  return sub_10017A7CC(a1);
}

void sub_10017ABFC(double a1)
{
  __n128 v1;
  id v2;
  id v3;
  double v4;
  id v5;
  __n128 v6;

  v4 = ARFrame.getHitRay(cameraPoint:)(a1);
  v6 = v1;
  v2 = sub_1001792B4();
  objc_msgSend(v2, "setHidden:", 0);

  v3 = sub_1001792B4();
  objc_msgSend(v3, "setSimdWorldPosition:", v4);

  v5 = sub_1001792B4();
  SCNNode.setForwardDirection(direction:)(v5, v6);

}

uint64_t sub_10017AC88(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 104));
  return a1;
}

void sub_10017ACB0()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___rayNode] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___arKitNode] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___mlNode] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___lpNode] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___fallbackNode] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___previousNode] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___patchNode] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___adNode] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003D8190, "Measure/SCNPlaneSelectionDebugger.swift", 39, 2, 30, 0);
  __break(1u);
}

void sub_10017AD6C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  if (a2)
  {
    v3 = v2;
    v6 = (_QWORD *)PlaneSelector.DebugOptions.keyForFeature.unsafeMutableAddressor();
    v7 = *v6;
    if (*(_QWORD *)(*v6 + 16))
    {
      swift_bridgeObjectRetain(*v6);
      swift_bridgeObjectRetain(a2);
      v8 = sub_1000C80A8(a1, a2);
      if ((v9 & 1) != 0)
      {
        v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
        swift_bridgeObjectRelease(a2);
        swift_bridgeObjectRelease(v7);
        sub_100018148(0, (unint64_t *)&unk_100481BB0, NSUserDefaults_ptr);
        v16 = v10;
        v15 = PlaneSelector.debugOptions.getter();
        v11 = sub_10017AEF4();
        v12 = static NSUserDefaults.update<A>(_:key:feature:)(&v15, a1, a2, &v16, &type metadata for PlaneSelector.DebugOptions, v11);
        v13 = PlaneSelector.debugOptions.setter(v15);
        if (*(_QWORD *)PlaneSelector.DebugOptions.showHitPoints.unsafeMutableAddressor(v13) == v10)
        {
          objc_msgSend(v3, "setHidden:", (v12 & 1) == 0);
        }
        else if (*(_QWORD *)PlaneSelector.DebugOptions.showHitRay.unsafeMutableAddressor() == v10)
        {
          v14 = sub_1001792B4();
          objc_msgSend(v14, "setHidden:", (v12 & 1) == 0);

        }
      }
      else
      {
        swift_bridgeObjectRelease(a2);
        swift_bridgeObjectRelease(v7);
      }
    }
  }
}

unint64_t sub_10017AEF4()
{
  unint64_t result;

  result = qword_1004878D8;
  if (!qword_1004878D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaneSelector.DebugOptions, &type metadata for PlaneSelector.DebugOptions);
    atomic_store(result, (unint64_t *)&qword_1004878D8);
  }
  return result;
}

void sub_10017AF38(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __n128 v8;
  char v9;
  id v10;
  id v11;
  uint64_t v12;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  *v7 = static OS_dispatch_queue.main.getter(v8);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_8:
    swift_once(&qword_10047A930, sub_100083368);
    goto LABEL_5;
  }
  if ((a1 & 1) != 0)
    objc_msgSend(*(id *)(v2 + 16), "pause");
  v10 = objc_msgSend(*(id *)(v2 + 32), "layer");
  CALayer.pauseAnimations()();

  if (qword_10047A930 != -1)
    goto LABEL_8;
LABEL_5:
  if (qword_1004AF240)
  {
    v11 = (id)qword_1004AF240;
    sub_100177FDC(0, 0);

  }
  else
  {
    __break(1u);
  }
}

void sub_10017B090(__int16 a1)
{
  void *v2;
  void *v3;
  id v4;
  unsigned __int8 v5;
  unint64_t v6;
  unint64_t v7;
  id v8;

  sub_10017B83C();
  v3 = v2;
  if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
  {
    v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v5 = objc_msgSend(v4, "kPersonSegmentationAlwaysOn");

    if ((v5 & 1) != 0
      || *(unsigned __int8 *)NSUserDefaults.recordReplayOption.unsafeMutableAddressor() - 1 <= 3)
    {
      v6 = (unint64_t)objc_msgSend(v3, "frameSemantics") | 1;
    }
    else
    {
      v7 = (unint64_t)objc_msgSend(v3, "frameSemantics");
      if ((a1 & 0x100) != 0)
        v6 = v7 | 1;
      else
        v6 = v7 & 0xFFFFFFFFFFFFFFFELL;
    }
    objc_msgSend(v3, "setFrameSemantics:", v6);
  }
  v8 = v3;
  sub_10017B1AC(a1 & 1, v8);

}

void sub_10017B1AC(int a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void *object;
  id v23;
  unsigned __int8 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  _BYTE v42[24];
  Swift::String v43;

  v3 = v2;
  v41 = a1;
  v5 = type metadata accessor for URL(0);
  v38 = *(_QWORD *)(v5 - 8);
  v39 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  v9 = __chkstk_darwin(v8);
  v11 = (id *)((char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v13 = (id *)((char *)&v38 - v12);
  v14 = type metadata accessor for DispatchPredicate(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (uint64_t *)((char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  *v17 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  v18 = _dispatchPreconditionTest(_:)(v17);
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) != 0)
  {
    v40 = v3;
    if (qword_10047AA50 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_10047AA50, sub_1000E12A4);
LABEL_3:
  v43._countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v43._object);
  v43._countAndFlagsBits = 0xD000000000000014;
  v43._object = (void *)0x80000001003E3A40;
  if ((v41 & 1) != 0)
    v19 = 1702195828;
  else
    v19 = 0x65736C6166;
  if ((v41 & 1) != 0)
    v20 = 0xE400000000000000;
  else
    v20 = 0xE500000000000000;
  v21 = v20;
  String.append(_:)(*(Swift::String *)&v19);
  swift_bridgeObjectRelease(v20);
  object = v43._object;
  Log.default(_:isPrivate:)(v43, 0);
  swift_bridgeObjectRelease(object);
  v23 = a2;
  v24 = (unsigned __int8 *)NSUserDefaults.recordReplayOption.unsafeMutableAddressor();
  if (*v24 - 1 > 1)
    goto LABEL_15;
  if (qword_10047A930 != -1)
    goto LABEL_37;
  v25 = qword_1004AF240;
  if (!qword_1004AF240)
    goto LABEL_38;
LABEL_12:
  if ((*(_BYTE *)(v25 + qword_1004AF728) & 1) == 0)
  {
    v26 = v25 + qword_100487428;
    swift_beginAccess(v25 + qword_100487428, v42, 0, 0);
    sub_10007F03C(v26, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload(v13, v8) - 1 >= 2)
    {
      sub_10007F080((uint64_t)v13);
      if (qword_1004AF240)
      {
        v37 = *v24;
        v31 = (id)qword_1004AF240;
        RecordReplayOption.recordFile.getter(v37);
        v33 = sub_10017769C(v23, (uint64_t)v7, v37, 0, 0);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v39);
        goto LABEL_25;
      }
      goto LABEL_41;
    }

  }
LABEL_15:
  v27 = qword_10047A930;
  if (*v24 - 3 <= 1)
  {
    if (qword_10047A930 != -1)
      goto LABEL_39;
    v28 = qword_1004AF240;
    if (qword_1004AF240)
      goto LABEL_18;
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  while (1)
  {
    if (v27 != -1)
    {
      swift_once(&qword_10047A930, sub_100083368);
      v30 = (void *)qword_1004AF240;
      if (qword_1004AF240)
        goto LABEL_23;
      goto LABEL_36;
    }
    do
    {
      v30 = (void *)qword_1004AF240;
      if (qword_1004AF240)
      {
LABEL_23:
        v31 = v30;
        sub_100177094((uint64_t)v23);
        goto LABEL_24;
      }
LABEL_36:
      __break(1u);
LABEL_37:
      swift_once(&qword_10047A930, sub_100083368);
      v25 = qword_1004AF240;
      if (qword_1004AF240)
        goto LABEL_12;
LABEL_38:
      __break(1u);
LABEL_39:
      swift_once(&qword_10047A930, sub_100083368);
      v28 = qword_1004AF240;
      if (!qword_1004AF240)
        goto LABEL_40;
LABEL_18:
      ;
    }
    while ((*(_BYTE *)(v28 + qword_1004AF730) & 1) != 0);
    v29 = v28 + qword_100487428;
    swift_beginAccess(v28 + qword_100487428, &v43, 0, 0);
    sub_10007F03C(v29, (uint64_t)v11);
    if (swift_getEnumCaseMultiPayload(v11, v8) != 3)
      break;

    v27 = qword_10047A930;
  }
  sub_10007F080((uint64_t)v11);
  if (!qword_1004AF240)
  {
LABEL_42:
    __break(1u);
    return;
  }
  v31 = (id)qword_1004AF240;
  v32 = sub_1001772F0(v23);
LABEL_24:
  v33 = v32;
LABEL_25:
  v34 = v40;

  v35 = objc_msgSend(*(id *)(v34 + 32), "layer");
  CALayer.resumeAnimations()();

  if ((v41 & 1) != 0)
  {
    *(_BYTE *)(v34 + 24) = 1;
    v36 = 3;
  }
  else
  {
    v36 = 0;
  }
  objc_msgSend(*(id *)(v34 + 16), "runWithConfiguration:options:", v33, v36, v38, v39);

}

uint64_t sub_10017B680()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for Session()
{
  return objc_opt_self(_TtC7Measure7Session);
}

uint64_t getEnumTagSinglePayload for Session.Configuration(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Session.Configuration(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10017B7BC + 4 * byte_1003BA405[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_10017B7F0 + 4 * byte_1003BA400[v4]))();
}

uint64_t sub_10017B7F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_10017B7F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x10017B800);
  return result;
}

uint64_t sub_10017B80C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x10017B814);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10017B818(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_10017B820(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Session.Configuration()
{
  return &type metadata for Session.Configuration;
}

void sub_10017B83C()
{
  id v0;
  NSString v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v0 = objc_msgSend(objc_allocWithZone((Class)ARWorldTrackingConfiguration), "init");
  objc_msgSend(v0, "setPlaneDetection:", 3);
  objc_msgSend(v0, "setLightEstimationEnabled:", 1);
  objc_msgSend(v0, "setMinVergenceAngle:", 1.5);
  objc_msgSend(v0, "setDisableOcclusionForPersonSegmentation:", 1);
  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.hasHWAcceleratedFeatureDetection()() & 1) == 0
    && *(_BYTE *)MeasureCore.isTrackingVGAEnabled.unsafeMutableAddressor() == 1)
  {
    v1 = String._bridgeToObjectiveC()();
    objc_msgSend(v0, "setSlamConfiguration:", v1);

  }
  v2 = (void *)objc_opt_self(Gestalt);
  objc_msgSend(v0, "setMlModelEnabled:", objc_msgSend(v2, "hasAppleNeuralEngine"));
  v3 = (uint64_t)objc_msgSend(v2, "jasperAvailable");
  if ((_DWORD)v3)
  {
    objc_msgSend(v0, "setFrameSemantics:", 8);
    v3 = static UIDevice.isIPhone()(objc_msgSend(v0, "setAllowCameraInMultipleForegroundAppLayout:", 1));
    if ((v3 & 1) != 0)
      v3 = (uint64_t)objc_msgSend(v0, "setLowQosSchedulingEnabled:", 1);
  }
  if ((static UIDevice.shouldLockFramerate()(v3) & 1) == 0)
    return;
  v4 = sub_100018148(0, &qword_100483B10, ARWorldTrackingConfiguration_ptr);
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(v4), "supportedVideoFormats");
  v6 = sub_100018148(0, &qword_100487990, ARVideoFormat_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v12 = v7;
    else
      v12 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v13 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v7);
    if (v13 >= 2)
      goto LABEL_10;
LABEL_18:
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (*(uint64_t *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) < 2)
    goto LABEL_18;
LABEL_10:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v14 = v0;
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v7);
    goto LABEL_13;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    v8 = *(void **)(v7 + 40);
    v9 = v0;
    v10 = v8;
LABEL_13:
    v11 = v10;
    swift_bridgeObjectRelease(v7);
    objc_msgSend(v0, "setVideoFormat:", v11);

    return;
  }
  __break(1u);
}

uint64_t sub_10017BADC(uint64_t a1)
{
  return *(_QWORD *)(a1 + qword_100487998);
}

id sub_10017BAEC(char *a1, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)&a1[qword_100487998] = a3;
  return objc_msgSend(a1, "updateHighlightState");
}

Class sub_10017BB04(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  Class isa;
  _BYTE v5[24];

  v1 = (uint64_t *)(a1 + qword_1004879A0);
  swift_beginAccess(a1 + qword_1004879A0, v5, 0, 0);
  v2 = *v1;
  sub_100018148(0, &qword_100487B50, UIButton_ptr);
  swift_bridgeObjectRetain(v2);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v2);
  return isa;
}

double sub_10017BB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  double result;
  char v10[24];

  v5 = sub_100018148(0, &qword_100487B50, UIButton_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v5);
  v7 = (uint64_t *)(a1 + qword_1004879A0);
  swift_beginAccess(v7, v10, 1, 0);
  v8 = *v7;
  *v7 = v6;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

id sub_10017BC00(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  objc_super v30;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  *(_QWORD *)&v4[qword_100487998] = 0;
  *(_QWORD *)&v4[qword_1004879A0] = _swiftEmptyArrayStorage;
  v10 = qword_1004879A8;
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "whiteColor");
  v13 = qword_1004879B0;
  *(_QWORD *)&v12[v13] = objc_msgSend(v11, "systemYellowColor");
  *(_QWORD *)&v12[qword_1004879B8] = 0x4042000000000000;
  *(_QWORD *)&v12[qword_1004879C0] = 0x4024000000000000;
  v14 = qword_1004879C8;
  v15 = sub_10000EDC8(&qword_10047EA08);
  KeyPath = swift_getKeyPath("ȹ\r");
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v17 = qword_1004AF890;
  v18 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v15 + 272);
  v19 = swift_retain();
  *(_QWORD *)&v12[v14] = v18(KeyPath, v17, v19);
  v20 = qword_1004879D0;
  sub_10000EDC8(&qword_100487B38);
  v21 = swift_getKeyPath(&unk_1003BA478);
  *(_QWORD *)&v12[v20] = MutableStateValue.__allocating_init(_:_:)(v21, ObjectType);

  v30.receiver = v12;
  v30.super_class = ObjectType;
  v22 = objc_msgSendSuper2(&v30, "initWithFrame:", a1, a2, a3, a4);
  v23 = objc_msgSend(v11, "clearColor");
  objc_msgSend(v22, "setBackgroundColor:", v23);

  v24 = objc_msgSend(v22, "layer");
  objc_msgSend(v24, "setCornerRadius:", 20.0);

  v25 = objc_msgSend(v22, "layer");
  objc_msgSend(v25, "setMasksToBounds:", 1);

  v26 = objc_msgSend(v22, "layer");
  objc_msgSend(v26, "setCornerCurve:", kCACornerCurveContinuous);

  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  sub_10017C418();
  sub_10017C068();
  v27 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 17);
  v28 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v27);
  objc_msgSend(v22, "bounds");
  objc_msgSend(v28, "setFrame:");
  objc_msgSend(v28, "setAutoresizingMask:", 18);
  objc_msgSend(v22, "insertSubview:atIndex:", v28, 0);

  objc_msgSend(v22, "layoutIfNeeded");
  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 1);

  return v22;
}

id sub_10017BF84(double a1, double a2, double a3, double a4)
{
  return sub_10017BC00(a1, a2, a3, a4);
}

void sub_10017BFA4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_10017D988();
}

double sub_10017BFC8()
{
  double result;
  uint64_t v1;

  swift_retain();
  StateValue.ifUpdated(_:)(sub_10017D534, &v1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

id sub_10017C01C(unsigned __int8 *a1, char *a2)
{
  id result;
  char v4;

  result = (id)sub_1001CA63C(*a1, (uint64_t)&off_10043C390);
  if ((v4 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)&a2[qword_100487998] = result;
    return objc_msgSend(a2, "updateHighlightState");
  }
  return result;
}

void sub_10017C068()
{
  char *v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  Class isa;
  id v8;
  double v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char v24[24];

  v1 = v0;
  v2 = (uint64_t *)&v0[qword_1004879A0];
  swift_beginAccess(v2, v24, 0, 0);
  v3 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
    if (v3 < 0)
      v22 = *v2;
    else
      v22 = v3 & 0xFFFFFFFFFFFFFF8;
    v23 = sub_100018148(0, (unint64_t *)&qword_100481BC0, UIView_ptr);
    swift_bridgeObjectRetain(v3);
    v5 = _bridgeCocoaArray<A>(_:)(v22, v23);
  }
  else
  {
    v4 = swift_bridgeObjectRetain_n(v3, 2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
    sub_100018148(0, (unint64_t *)&qword_100481BC0, UIView_ptr);
    v5 = v3;
  }
  swift_bridgeObjectRelease(v3);
  v6 = objc_allocWithZone((Class)UIStackView);
  sub_100018148(0, (unint64_t *)&qword_100481BC0, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v6, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  objc_msgSend(v8, "setAxis:", 1);
  objc_msgSend(v8, "setAlignment:", 0);
  objc_msgSend(v8, "setDistribution:", 1);
  v9 = *(double *)&v1[qword_1004879C0];
  objc_msgSend(v8, "setSpacing:", 20.0 - (v9 + v9));
  objc_msgSend(v1, "addSubview:", v8);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v10 = objc_msgSend(v8, "topAnchor");
  v11 = objc_msgSend(v1, "topAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v11, 16.0 - v9);

  objc_msgSend(v12, "setActive:", 1);
  v13 = objc_msgSend(v8, "bottomAnchor");
  v14 = objc_msgSend(v1, "bottomAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v14, v9 + -16.0);

  objc_msgSend(v15, "setActive:", 1);
  v16 = objc_msgSend(v8, "leftAnchor");
  v17 = objc_msgSend(v1, "leftAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v17, 20.0 - v9);

  objc_msgSend(v18, "setActive:", 1);
  v19 = objc_msgSend(v8, "rightAnchor");
  v20 = objc_msgSend(v1, "rightAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:constant:", v20, v9 + -20.0);

  objc_msgSend(v21, "setActive:", 1);
}

void sub_10017C418()
{
  char *v0;
  char *v1;
  char **v2;
  double v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  NSString v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  double v35;
  id v36;
  void *v37;
  id v38;
  char *v39;
  _BYTE v40[24];
  char v41[24];

  v4 = v0;
  v5 = &v0[qword_1004879A0];
  swift_beginAccess(&v0[qword_1004879A0], v41, 1, 0);
  v6 = *(_QWORD *)v5;
  *(_QWORD *)v5 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)v5;
  *(_QWORD *)v5 = _swiftEmptyArrayStorage;
  v39 = v0;
  v8 = objc_msgSend(v0, "subviews", swift_bridgeObjectRelease(v7).n128_f64[0]);
  v9 = sub_100018148(0, (unint64_t *)&qword_100481BC0, UIView_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v14 = v10;
    else
      v14 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v14);
    if (!v11)
      goto LABEL_13;
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v10);
    if (!v11)
      goto LABEL_13;
  }
  if (v11 >= 1)
  {
    v12 = 0;
    v2 = &selRef_renderer_didAddNode_forAnchor_;
    do
    {
      if ((v10 & 0xC000000000000001) != 0)
        v13 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
      else
        v13 = (char *)*(id *)(v10 + 8 * v12 + 32);
      v1 = v13;
      ++v12;
      objc_msgSend(v13, "removeFromSuperview");

    }
    while (v11 != v12);
LABEL_13:
    swift_bridgeObjectRelease_n(v10, 2);
    if (qword_10047AC30 != -1)
      goto LABEL_44;
    goto LABEL_14;
  }
  while (2)
  {
    __break(1u);
    while (2)
    {
      swift_once(&qword_10047AC28, sub_10017D91C);
LABEL_16:
      v16 = 0;
      while (1)
      {
        v17 = v16[v11 + 32];
        if (byte_1004AF758 != 1)
        {
          if (qword_10047AC08 != -1)
            swift_once(&qword_10047AC08, sub_10017D53C);
          v10 = qword_1004AF738;
          if (!*(_QWORD *)(qword_1004AF738 + 16))
            goto LABEL_42;
          v18 = sub_1000C819C(v17);
          if ((v20 & 1) == 0)
            goto LABEL_43;
          goto LABEL_27;
        }
        if (qword_10047AC18 != -1)
          swift_once(&qword_10047AC18, sub_10017D790);
        v10 = qword_1004AF748;
        if (!*(_QWORD *)(qword_1004AF748 + 16))
          break;
        v18 = sub_1000C819C(v17);
        if ((v19 & 1) == 0)
          goto LABEL_41;
LABEL_27:
        v21 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v18 + 8);
        swift_bridgeObjectRetain(v21);
        sub_10017C9B8((id)v17);
        v23 = v22;
        v24 = objc_msgSend(v38, "buttonWithType:", 1);
        objc_msgSend(v24, "setImage:forState:", v23, 0);
        v25 = String._bridgeToObjectiveC()();
        objc_msgSend(v24, "setTitle:forState:", v25, 0, swift_bridgeObjectRelease(v21).n128_f64[0]);

        objc_msgSend(v24, "addTarget:action:forControlEvents:", v39, v1, 64);
        objc_msgSend(v24, "setTitleColor:forState:", v2, 0);
        objc_msgSend(v24, "setTintColor:", v2);
        v26 = objc_msgSend(v24, "titleLabel");
        if (v26)
        {
          v27 = v26;
          v28 = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:maximumContentSizeCategory:", UIFontTextStyleCaption2, UIContentSizeCategoryExtraExtraExtraLarge);
          objc_msgSend(v27, "setFont:", v28);

        }
        sub_10017CB70(2.0, v3);
        swift_beginAccess(v5, v40, 33, 0);
        v29 = v24;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
        v31 = *(_QWORD *)((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v30 = *(_QWORD *)((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v31 >= v30 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
        ++v16;
        v10 = (uint64_t)v5;
        v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
        specialized Array._endMutation()(v32);
        swift_endAccess(v40);

        if (v4 == v16)
        {
          swift_bridgeObjectRelease(v11);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      swift_once(&qword_10047AC30, sub_10017D974);
LABEL_14:
      v11 = qword_1004AF760;
      v4 = *(char **)(qword_1004AF760 + 16);
      if (v4)
      {
        v38 = (id)objc_opt_self(UIButton);
        v1 = "changeSelectionWithSender:";
        v2 = *(char ***)&v39[qword_1004879A8];
        v3 = *(double *)&v39[qword_1004879C0];
        v15 = qword_10047AC28;
        swift_bridgeObjectRetain(v11);
        if (v15 != -1)
          continue;
        goto LABEL_16;
      }
      break;
    }
LABEL_33:
    swift_beginAccess(v5, v40, 32, 0);
    v33 = *(_QWORD *)v5;
    if ((*(_QWORD *)v5 & 0xC000000000000001) != 0)
    {
      v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
LABEL_36:
      v11 = (uint64_t)v34;
      *(_QWORD *)&v35 = swift_endAccess(v40).n128_u64[0];
      v10 = *(_QWORD *)&v39[qword_1004879B0];
      objc_msgSend((id)v11, "setTitleColor:forState:", v10, 0, v35);

      swift_beginAccess(v5, v40, 32, 0);
      v33 = *(_QWORD *)v5;
      if ((*(_QWORD *)v5 & 0xC000000000000001) != 0)
        goto LABEL_47;
      if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        continue;
      }
      v36 = *(id *)(v33 + 32);
    }
    else
    {
      if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v34 = *(id *)(v33 + 32);
        goto LABEL_36;
      }
      __break(1u);
LABEL_47:
      v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
    }
    break;
  }
  v37 = v36;
  objc_msgSend(v36, "setTintColor:", v10, swift_endAccess(v40).n128_f64[0]);

}

void sub_10017C9B8(id a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  NSString v11;
  id v12;

  if (qword_10047AC28 != -1)
    swift_once(&qword_10047AC28, sub_10017D91C);
  if (byte_1004AF758 != 1)
    goto LABEL_10;
  if (qword_10047AC20 != -1)
    swift_once(&qword_10047AC20, sub_10017D8A8);
  v2 = qword_1004AF750;
  if (*(_QWORD *)(qword_1004AF750 + 16))
  {
    v3 = sub_1000C819C(a1);
    if ((v4 & 1) == 0)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v3 + 8);
    swift_bridgeObjectRetain(v5);
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    a1 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v6);

    if (a1)
      return;
    __break(1u);
LABEL_10:
    if (qword_10047AC10 == -1)
      goto LABEL_11;
    goto LABEL_16;
  }
  __break(1u);
LABEL_16:
  swift_once(&qword_10047AC10, sub_10017D774);
LABEL_11:
  v7 = qword_1004AF740;
  if (!*(_QWORD *)(qword_1004AF740 + 16))
  {
    __break(1u);
    goto LABEL_18;
  }
  v8 = sub_1000C819C(a1);
  if ((v9 & 1) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v8 + 8);
  swift_bridgeObjectRetain(v10);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v12 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v11);

  if (!v12)
LABEL_20:
    __break(1u);
}

double sub_10017CB70(double a1, double a2)
{
  void *v2;
  id v5;
  double result;
  void *v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  double v22;
  double v23;
  id v24;
  NSString v25;
  uint64_t v26;
  uint64_t inited;
  NSString *v28;
  id v29;
  unint64_t v30;
  Class isa;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  _BYTE v40[72];

  v5 = objc_msgSend(v2, "imageView");
  if (v5)
  {
    v7 = v5;
    v8 = objc_msgSend(v5, "image");

    if (v8)
    {
      objc_msgSend(v8, "size");
      v10 = v9;
      v12 = v11;

      v13 = objc_msgSend(v2, "titleLabel");
      if (v13)
      {
        v14 = v13;
        v15 = objc_msgSend(v13, "text");

        if (v15)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
          v17 = v16;

          v18 = objc_msgSend(v2, "titleLabel");
          if (v18
            && (v19 = v18, v20 = objc_msgSend(v18, "font"), v19, v20))
          {
            v21 = objc_msgSend(v2, "effectiveUserInterfaceLayoutDirection");
            v22 = -v10;
            if (v21 == (id)1)
              v23 = -v10;
            else
              v23 = 0.0;
            if (v21 == (id)1)
              v22 = 0.0;
            v24 = v21;
            objc_msgSend(v2, "setTitleEdgeInsets:", 0.0, v22, -(v12 + a1), v23);
            v25 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v17);
            v26 = sub_10000EDC8(&qword_100481980);
            inited = swift_initStackObject(v26, v40);
            *(_OWORD *)(inited + 16) = xmmword_1003B0BD0;
            *(_QWORD *)(inited + 32) = NSFontAttributeName;
            *(_QWORD *)(inited + 64) = sub_100018148(0, &qword_10047C110, UIFont_ptr);
            *(_QWORD *)(inited + 40) = v20;
            v28 = NSFontAttributeName;
            v29 = v20;
            v30 = sub_1000C7274(inited);
            type metadata accessor for Key(0);
            sub_100020800();
            isa = Dictionary._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v25, "sizeWithAttributes:", isa, swift_bridgeObjectRelease(v30).n128_f64[0]);
            v33 = v32;
            v35 = v34;

            if (v24 == (id)1)
              v36 = 0.0;
            else
              v36 = -v33;
            if (v24 == (id)1)
              v37 = -v33;
            else
              v37 = 0.0;
            v38 = v35 + a1;
            objc_msgSend(v2, "setImageEdgeInsets:", -v38, v37, 0.0, v36);
            if (v33 >= v10)
              v39 = v10;
            else
              v39 = v33;
            objc_msgSend(v2, "setContentEdgeInsets:", v38 * 0.5 + a2, a2 - v39 * 0.5, v38 * 0.5 + a2, a2 - v39 * 0.5);

          }
          else
          {
            *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
          }
        }
      }
    }
  }
  return result;
}

void sub_10017CE60(uint64_t a1)
{
  char *v1;
  void *v2;
  unint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  double v21;
  uint64_t (*v22)(_BYTE *, __n128);
  __n128 v23;
  void (*v24)(_BYTE *, _QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  char *v29;
  _BYTE v30[32];
  char v31[24];
  char v32[24];

  v4 = v1;
  v6 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v6);
  v8 = (void **)((char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = (uint64_t *)&v1[qword_1004879A0];
  swift_beginAccess(v9, v32, 0, 0);
  v10 = *v9;
  if ((unint64_t)*v9 >> 62)
  {
LABEL_29:
    if (v10 < 0)
      v25 = v10;
    else
      v25 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v25);
    if (!v11)
    {
LABEL_21:
      swift_bridgeObjectRelease(v10);
      return;
    }
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v9);
    if (!v11)
      goto LABEL_21;
  }
  if ((v10 & 0xC000000000000001) != 0)
    goto LABEL_35;
  if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_37:
    swift_once(&qword_10047A930, sub_100083368);
    goto LABEL_23;
  }
  v12 = *(id *)(v10 + 32);
LABEL_6:
  v2 = v12;
  sub_100018148(0, (unint64_t *)&qword_10047C128, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(v2, a1) & 1) == 0)
  {
    v27 = v6;
    v28 = v8;
    v29 = v4;

    if (v11 == 1)
      goto LABEL_21;
    v4 = (char *)(v10 & 0xFFFFFFFFFFFFFF8);
    v6 = 5;
    while (1)
    {
      v3 = v6 - 4;
      if ((v10 & 0xC000000000000001) != 0)
      {
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v10);
      }
      else
      {
        if (v3 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_35:
          v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
          goto LABEL_6;
        }
        v13 = *(id *)(v10 + 8 * v6);
      }
      v2 = v13;
      v8 = (void **)(v6 - 3);
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if ((static NSObject.== infix(_:_:)(v13, a1) & 1) != 0)
      {
        v8 = v28;
        v4 = v29;
        v6 = v27;
        goto LABEL_19;
      }

      ++v6;
      if (v8 == (void **)v11)
        goto LABEL_21;
    }
  }
  v3 = 0;
LABEL_19:
  v14 = sub_10017DB38(v3);
  if (v14 == 3)
  {

    goto LABEL_21;
  }
  LOBYTE(a1) = v14;
  if (qword_10047A930 != -1)
    goto LABEL_37;
LABEL_23:
  if (qword_1004AF240)
  {
    v15 = (char *)(id)qword_1004AF240;
    swift_bridgeObjectRelease(v10);
    v16 = (uint64_t)&v15[qword_100487428];
    swift_beginAccess(&v15[qword_100487428], v31, 0, 0);
    sub_10007F03C(v16, (uint64_t)v8);
    if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
    {
      v17 = *v8;
      v18 = (char *)sub_1000E1D74();

      sub_1000695D4(a1 + 7, 0, 0, 1);
      v15 = v18;
    }
    else
    {
      sub_10007F080((uint64_t)v8);
    }

    v19 = swift_allocObject(&unk_100449C40, 17, 7);
    *(_BYTE *)(v19 + 16) = a1;
    v20 = swift_retain();
    StateValue.mutateImmediatelyNotifyAsync(_:)(sub_10017DBCC, v19, v20);
    swift_release();
    *(_QWORD *)&v21 = swift_release().n128_u64[0];
    *(_QWORD *)&v4[qword_100487998] = v3;
    objc_msgSend(v4, "updateHighlightState", v21);
    v22 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)&v4[qword_1004879D0] + 400);
    v23 = swift_retain();
    v24 = (void (*)(_BYTE *, _QWORD))v22(v30, v23);
    sub_100090D48(a1);
    v24(v30, 0);

    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_10017D1E4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_10017CE60((uint64_t)v4);

}

uint64_t sub_10017D238()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v1 = (uint64_t *)(v0 + qword_1004879A0);
  swift_beginAccess(v0 + qword_1004879A0, v15, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v2);
  }
  if (v2 < 0)
    v14 = v2;
  else
    v14 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  result = _CocoaArrayWrapper.endIndex.getter(v14);
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease(v2);
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = qword_100487998;
    v7 = qword_1004879A8;
    v8 = qword_1004879B0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v9 = *(id *)(v2 + 8 * v5 + 32);
      v10 = v9;
      v11 = v5 + 1;
      if (v5 == *(_QWORD *)(v0 + v6))
        v12 = v8;
      else
        v12 = v7;
      v13 = *(_QWORD *)(v0 + v12);
      objc_msgSend(v9, "setTitleColor:forState:", v13, 0);
      objc_msgSend(v10, "setTintColor:", v13);

      v5 = v11;
    }
    while (v3 != v11);
    return swift_bridgeObjectRelease(v2);
  }
  __break(1u);
  return result;
}

void sub_10017D384(void *a1)
{
  id v1;

  v1 = a1;
  sub_10017D238();

}

uint64_t sub_10017D3B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1004879A0));

  swift_release(*(_QWORD *)(v0 + qword_1004879C8));
  return swift_release(*(_QWORD *)(v0 + qword_1004879D0));
}

