uint64_t sub_10017D414(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1004879A0));

  swift_release(*(_QWORD *)(a1 + qword_1004879C8));
  return swift_release(*(_QWORD *)(a1 + qword_1004879D0));
}

uint64_t type metadata accessor for ModeControl(uint64_t a1)
{
  uint64_t result;

  result = qword_100487A00;
  if (!qword_100487A00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ModeControl);
  return result;
}

uint64_t sub_10017D4B8(uint64_t a1)
{
  _QWORD v2[8];

  v2[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[5] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 256, 8, v2, a1 + 184);
}

uint64_t sub_10017D52C()
{
  return type metadata accessor for ModeControl(0);
}

id sub_10017D534(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_10017C01C(a1, *(char **)(v1 + 16));
}

unint64_t sub_10017D53C()
{
  unint64_t result;

  result = sub_10017D558();
  qword_1004AF738 = result;
  return result;
}

unint64_t sub_10017D558()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE v18[104];
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;

  v0 = sub_10000EDC8(&qword_100487B40);
  inited = swift_initStackObject(v0, v18);
  *(_OWORD *)(inited + 16) = xmmword_1003B0F50;
  *(_BYTE *)(inited + 32) = 0;
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v19._object = (void *)0x80000001003E3B70;
  v4._countAndFlagsBits = 0x5455415F45444F4DLL;
  v4._object = (void *)0xE90000000000004FLL;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0xD000000000000020;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v19);

  *(Swift::String *)(inited + 40) = v6;
  *(_BYTE *)(inited + 56) = 1;
  v7 = objc_msgSend(v2, "mainBundle");
  v20._countAndFlagsBits = 0xD000000000000022;
  v20._object = (void *)0x80000001003E3BA0;
  v8._countAndFlagsBits = 0x4E454C5F45444F4DLL;
  v8._object = (void *)0xEB00000000485447;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v20);

  *(Swift::String *)(inited + 64) = v10;
  *(_BYTE *)(inited + 80) = 2;
  v11 = objc_msgSend(v2, "mainBundle");
  v21._countAndFlagsBits = 0xD000000000000023;
  v21._object = (void *)0x80000001003E3BD0;
  v12._countAndFlagsBits = 0x5255535F45444F4DLL;
  v12._object = (void *)0xEC00000045434146;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v21);

  *(Swift::String *)(inited + 88) = v14;
  v15 = sub_1000C950C(inited);
  swift_setDeallocating(inited);
  v16 = sub_10000EDC8(&qword_100487B48);
  swift_arrayDestroy(inited + 32, 3, v16);
  return v15;
}

uint64_t sub_10017D774(uint64_t a1)
{
  return sub_10017D8C4(a1, (uint64_t)&off_10043C328, (uint64_t)&unk_10043C348, 3, (unint64_t *)&qword_1004AF740);
}

uint64_t sub_10017D790()
{
  uint64_t v0;
  uint64_t inited;
  id v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[56];
  Swift::String v10;

  v0 = sub_10000EDC8(&qword_100487B40);
  inited = swift_initStackObject(v0, v9);
  *(_OWORD *)(inited + 16) = xmmword_1003B0BD0;
  *(_BYTE *)(inited + 32) = 0;
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10._object = (void *)0x80000001003E3B40;
  v3._countAndFlagsBits = 0x41454D5F45444F4DLL;
  v3._object = (void *)0xEC00000045525553;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0xD000000000000023;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v10);

  *(Swift::String *)(inited + 40) = v5;
  v6 = sub_1000C950C(inited);
  swift_setDeallocating(inited);
  v7 = sub_10000EDC8(&qword_100487B48);
  result = swift_arrayDestroy(inited + 32, 1, v7);
  qword_1004AF748 = v6;
  return result;
}

uint64_t sub_10017D8A8(uint64_t a1)
{
  return sub_10017D8C4(a1, (uint64_t)&off_10043C2F0, (uint64_t)&unk_10043C310, 1, (unint64_t *)&qword_1004AF750);
}

uint64_t sub_10017D8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = sub_1000C950C(a2);
  v9 = sub_10000EDC8(&qword_100487B48);
  result = swift_arrayDestroy(a3, a4, v9);
  *a5 = v8;
  return result;
}

void sub_10017D91C()
{
  id v0;
  unsigned __int8 v1;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = objc_msgSend(v0, "showsOnlyYukonEModes");

  byte_1004AF758 = v1;
}

void sub_10017D974()
{
  qword_1004AF760 = (uint64_t)&off_10043C2C8;
}

void sub_10017D988()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  *(_QWORD *)&v0[qword_100487998] = 0;
  *(_QWORD *)&v0[qword_1004879A0] = _swiftEmptyArrayStorage;
  v3 = qword_1004879A8;
  v4 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "whiteColor");
  v5 = qword_1004879B0;
  *(_QWORD *)&v1[v5] = objc_msgSend(v4, "systemYellowColor");
  *(_QWORD *)&v1[qword_1004879B8] = 0x4042000000000000;
  *(_QWORD *)&v1[qword_1004879C0] = 0x4024000000000000;
  v6 = qword_1004879C8;
  v7 = sub_10000EDC8(&qword_10047EA08);
  KeyPath = swift_getKeyPath("È¹\r");
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v9 = qword_1004AF890;
  v10 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v7 + 272);
  v11 = swift_retain();
  *(_QWORD *)&v1[v6] = v10(KeyPath, v9, v11);
  v12 = qword_1004879D0;
  sub_10000EDC8(&qword_100487B38);
  v13 = swift_getKeyPath(&unk_1003BA478);
  *(_QWORD *)&v1[v12] = MutableStateValue.__allocating_init(_:_:)(v13, ObjectType);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003D8190, "Measure/ModeControl.swift", 25, 2, 47, 0);
  __break(1u);
}

uint64_t sub_10017DB38(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;

  if (qword_10047AC30 != -1)
    swift_once(&qword_10047AC30, sub_10017D974);
  v2 = *(_QWORD *)(qword_1004AF760 + 16);
  if (v2)
  {
    result = *(unsigned __int8 *)(qword_1004AF760 + 32);
    if (!a1)
      return result;
    v4 = v2 - 1;
    v5 = a1;
    while (v4 > a1 - 1)
    {
      if (!--v5)
        return *(unsigned __int8 *)(qword_1004AF760 + 32 + a1);
    }
  }
  return 3;
}

uint64_t sub_10017DBBC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_10017DBCC(_BYTE *result)
{
  uint64_t v1;

  *result = *(_BYTE *)(v1 + 16);
  return result;
}

_QWORD *sub_10017DBE0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = *a2;
    if (*a2 >= 4uLL)
      swift_errorRetain(*a2);
    *a1 = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ARCamera.TrackingState.Reason(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 2, v11))
    {
      v13 = type metadata accessor for ARCamera.TrackingState(0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 2, v11);
    }
  }
  return a1;
}

uint64_t sub_10017DCDC(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (*a1 >= 4uLL)
    swift_errorRelease();
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ARCamera.TrackingState.Reason(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 2, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_10017DD60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *a2;
  if (*a2 >= 4uLL)
    swift_errorRetain(*a2);
  *a1 = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ARCamera.TrackingState.Reason(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 2, v10))
  {
    v12 = type metadata accessor for ARCamera.TrackingState(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 2, v10);
  }
  return a1;
}

unint64_t *sub_10017DE30(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *a1;
  v7 = *a2;
  if (v6 >= 4)
  {
    if (v7 >= 4)
    {
      swift_errorRetain(*a2);
      v8 = *a1;
      *a1 = v7;
      swift_errorRelease(v8);
    }
    else
    {
      swift_errorRelease(v6);
      *a1 = *a2;
    }
  }
  else
  {
    if (v7 >= 4)
      swift_errorRetain(*a2);
    *a1 = v7;
  }
  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for ARCamera.TrackingState.Reason(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 2, v12);
  v16 = v14(v11, 2, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_13;
  }
  if (v16)
  {
LABEL_13:
    v17 = type metadata accessor for ARCamera.TrackingState(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
  return a1;
}

_QWORD *sub_10017DF88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for ARCamera.TrackingState.Reason(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7))
  {
    v9 = type metadata accessor for ARCamera.TrackingState(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 2, v7);
  }
  return a1;
}

unint64_t *sub_10017E040(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = *a1;
  v7 = *a2;
  if (v6 < 4)
    goto LABEL_4;
  if (v7 < 4)
  {
    swift_errorRelease(v6);
LABEL_4:
    *a1 = v7;
    goto LABEL_6;
  }
  *a1 = v7;
  swift_errorRelease(v6);
LABEL_6:
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for ARCamera.TrackingState.Reason(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 2, v11);
  v15 = v13(v10, 2, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_11;
  }
  if (v15)
  {
LABEL_11:
    v16 = type metadata accessor for ARCamera.TrackingState(0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 2, v11);
  return a1;
}

uint64_t sub_10017E178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017E184);
}

uint64_t sub_10017E184(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483643)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 4;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ARCamera.TrackingState(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v9);
  }
}

uint64_t sub_10017E210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017E21C);
}

char *sub_10017E21C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483643)
  {
    *(_QWORD *)result = (a2 + 3);
  }
  else
  {
    v7 = type metadata accessor for ARCamera.TrackingState(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SessionState(uint64_t a1)
{
  uint64_t result;

  result = qword_100487BB0;
  if (!qword_100487BB0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SessionState);
  return result;
}

uint64_t sub_10017E2D0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "\b";
  result = type metadata accessor for ARCamera.TrackingState(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10017E344()
{
  uint64_t result;

  result = Contexts.UIKit.init()();
  qword_1004AF768 = result;
  return result;
}

id sub_10017E360@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_10047AC38 != -1)
    swift_once(&qword_10047AC38, sub_10017E344);
  v2 = (void *)qword_1004AF768;
  *a1 = qword_1004AF768;
  return v2;
}

uint64_t sub_10017E3B0(_QWORD *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v3;

  v3 = *a2;
  switch(*a1)
  {
    case 0:
      if (!v3)
        return static ARCamera.TrackingState.== infix(_:_:)((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20));
      return 0;
    case 1:
      if (v3 == 1)
        return static ARCamera.TrackingState.== infix(_:_:)((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20));
      return 0;
    case 2:
      if (v3 == 2)
        return static ARCamera.TrackingState.== infix(_:_:)((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20));
      return 0;
    case 3:
      if (v3 == 3)
        return static ARCamera.TrackingState.== infix(_:_:)((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20));
      return 0;
    default:
      if (v3 < 4)
        return 0;
      else
        return static ARCamera.TrackingState.== infix(_:_:)((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20));
  }
}

unint64_t sub_10017E420(uint64_t a1)
{
  unint64_t result;

  result = sub_10017E444();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10017E444()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100487C10;
  if (!qword_100487C10)
  {
    v1 = type metadata accessor for SessionState(255);
    result = swift_getWitnessTable(&unk_1003BA4D0, v1);
    atomic_store(result, (unint64_t *)&qword_100487C10);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SessionState.State(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = *a2;
  if (*a2 >= 0xFFFFFFFFuLL)
    swift_errorRetain(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for SessionState.State(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_errorRelease(result);
  return result;
}

unint64_t *assignWithCopy for SessionState.State(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
      swift_errorRetain(*a2);
    *a1 = v4;
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_errorRelease(v3);
    *a1 = *a2;
  }
  else
  {
    swift_errorRetain(*a2);
    v5 = *a1;
    *a1 = v4;
    swift_errorRelease(v5);
  }
  return a1;
}

unint64_t *assignWithTake for SessionState.State(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {
    swift_errorRelease(v3);
LABEL_6:
    *a1 = v4;
    return a1;
  }
  *a1 = v4;
  swift_errorRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionState.State(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 3;
  if (v4 >= 5)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SessionState.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 3;
  }
  return result;
}

_QWORD *sub_10017E67C(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for SessionState.State()
{
  return &type metadata for SessionState.State;
}

BOOL sub_10017E6AC(_QWORD *a1, unint64_t *a2)
{
  unint64_t v2;

  v2 = *a2;
  switch(*a1)
  {
    case 0:
      return !v2;
    case 1:
      return v2 == 1;
    case 2:
      return v2 == 2;
    case 3:
      return v2 == 3;
    default:
      return v2 >= 4;
  }
}

uint64_t initializeWithCopy for DoThisLater(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for DoThisLater(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

__n128 initializeWithTake for DoThisLater(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DoThisLater(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for DoThisLater(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 26))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DoThisLater(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 26) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DoThisLater()
{
  return &type metadata for DoThisLater;
}

unint64_t sub_10017E8AC@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100182138(*a1);
  *a2 = result;
  return result;
}

void sub_10017E8D4(_QWORD *a1@<X8>)
{
  *a1 = &off_10043C3B8;
}

void sub_10017E8E4()
{
  off_100487C18 = &_swiftEmptyDictionarySingleton;
}

void sub_10017E8F8()
{
  off_100487C20 = &_swiftEmptyDictionarySingleton;
}

void sub_10017E90C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  void *v23;
  void *v24;
  void *v25;
  NSString *v26;
  NSString *v27;
  void *v28;
  void *v29;
  void *v30;
  NSString *v31;
  id v32;
  uint64_t inited;
  NSString *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Class v39;
  id v40;
  id v41;
  id v42;
  char isUniquelyReferenced_nonNull_native;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  NSString *v50;
  unint64_t v51;
  Class v52;
  char v53;
  id v54;
  uint64_t v55;
  id v56;
  NSString *v57;
  NSString *v58;
  unint64_t v59;
  Class v60;
  id v61;
  char v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  NSString *v67;
  unint64_t v68;
  Class v69;
  id v70;
  char v71;
  id v72;
  uint64_t v73;
  id v74;
  NSString *v75;
  NSString *v76;
  unint64_t v77;
  Class v78;
  id v79;
  char v80;
  void *v81;
  id v82;
  id v83;
  char v84;
  void *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  id v108;
  unsigned int v109;
  uint64_t v110;
  NSString *v111;
  id v112;
  NSString *v113;
  NSString *v114;
  NSString *v115;
  NSString *v116;
  NSString *v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  NSString *v121;
  NSString *v122;
  unint64_t v123;
  Class v124;
  double v125;
  id v126;
  id v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  NSString *v132;
  NSString *v133;
  NSString *v134;
  unint64_t v135;
  uint64_t v136;
  id v137;
  NSString *v138;
  Class v139;
  double v140;
  id v141;
  id v142;
  uint64_t v143;
  id v144;
  unint64_t v145;
  Class v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  NSString *v150;
  unint64_t v151;
  Class v152;
  id v153;
  uint64_t v154;
  NSString *v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  Class v159;
  id v160;
  uint64_t v161;
  id v162;
  id v163;
  id v164;
  uint64_t v165;
  id v166;
  uint64_t v167;
  NSString *v168;
  id v169;
  NSString *v170;
  unint64_t v171;
  Class v172;
  void *v173;
  uint64_t v174;
  char **v175;
  SEL *v176;
  id v177;
  uint64_t isEscapingClosureAtFileLocation;
  double v179;
  NSString *v180;
  id v181;
  id v182;
  id v183;
  id v184;
  id v185;
  id v186;
  uint64_t v187;
  NSString *v188;
  uint64_t v189;
  NSString *v190;
  NSString *v191;
  unint64_t v192;
  Class v193;
  unint64_t v194;
  id v195;
  id v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  NSString *v201;
  NSString *v202;
  unint64_t v203;
  Class v204;
  id v205;
  id v206;
  id v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  NSString *v212;
  NSString *v213;
  unint64_t v214;
  Class v215;
  id v216;
  id v217;
  id v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  NSString *v222;
  unint64_t v223;
  Class v224;
  id v225;
  id v226;
  char *v227;
  void *v228;
  id v229;
  id v230;
  char *v231;
  __n128 v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  char *v238;
  char **v239;
  char *v240;
  void *v241;
  id v242;
  id v243;
  char *v244;
  __n128 v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  NSString *v268;
  id v269;
  id v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  char *v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  id v283;
  NSString *v284;
  id v285;
  id v286;
  id v287;
  id v288;
  id v289;
  void *v290;
  id v291;
  id v292;
  id v293;
  NSString *v294;
  __int128 v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  __int128 v299;
  _QWORD v300[3];
  void *v301;
  void *v302;
  char **v303;
  int v304;
  uint64_t v305;
  int v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  char v317;
  double *v318;
  char v319;

  v290 = a1;
  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v251 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v276 = *(_QWORD *)(v5 - 8);
  v277 = v5;
  __chkstk_darwin(v5);
  v278 = (char *)&v251 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v274 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v274);
  v275 = (char *)&v251 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v281 = *(_QWORD *)(v8 - 8);
  v282 = v8;
  __chkstk_darwin(v8);
  v280 = (char *)&v251 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend((id)objc_opt_self(SKShader), "shaderWithFileNamed:", v10);

  v12 = (void *)qword_1004AF770;
  qword_1004AF770 = (uint64_t)v11;

  v13 = (void *)qword_1004AF770;
  if (qword_1004AF770)
  {
    v14 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
    v15 = swift_allocObject(v14, 40, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1003B0F00;
    v16 = objc_allocWithZone((Class)SKAttribute);
    v17 = v13;
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(v16, "initWithName:type:", v18, 2);

    *(_QWORD *)(v15 + 32) = v19;
    v300[0] = v15;
    specialized Array._endMutation()(v20);
    v21 = v300[0];
    sub_100018148(0, (unint64_t *)&unk_100487CC0, SKAttribute_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v17, "setAttributes:", isa, swift_bridgeObjectRelease(v21).n128_f64[0]);

    v23 = (void *)sub_100182148();
    v25 = v24;
    v293 = (id)sub_100182148();
    v27 = v26;
    v28 = (void *)sub_100182148();
    v286 = v29;
    v287 = v28;
    v30 = (void *)sub_100182148();
    v284 = v31;
    v285 = v30;
    v32 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
    v297 = sub_10000EDC8((uint64_t *)&unk_100487CC8);
    inited = swift_initStackObject(v297, &v319);
    v299 = xmmword_1003B0BD0;
    *(_OWORD *)(inited + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(inited + 32) = SCNShaderModifierEntryPointGeometry;
    *(_QWORD *)(inited + 40) = v23;
    v291 = v23;
    *(_QWORD *)(inited + 48) = v25;
    v34 = SCNShaderModifierEntryPointGeometry;
    v292 = v25;
    swift_bridgeObjectRetain(v25);
    v35 = sub_1000C7C10(inited);
    type metadata accessor for SCNShaderModifierEntryPoint(0);
    v37 = v36;
    v38 = sub_10000C4B0(&qword_10047B620, (uint64_t (*)(uint64_t))type metadata accessor for SCNShaderModifierEntryPoint, (uint64_t)&unk_1003B0758);
    v298 = v37;
    v296 = v38;
    v39 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v32, "setShaderModifiers:", v39, swift_bridgeObjectRelease(v35).n128_f64[0]);

    v40 = objc_msgSend(v32, "diffuse");
    if (qword_10047AF28 != -1)
      swift_once(&qword_10047AF28, sub_10019642C);
    objc_msgSend(v40, "setContents:", qword_1004AFA20);

    v41 = objc_msgSend(v32, "emission");
    if (qword_10047AF50 != -1)
      swift_once(&qword_10047AF50, sub_1001964D0);
    v294 = v27;
    v271 = v4;
    v272 = v2;
    v273 = v1;
    objc_msgSend(v41, "setContents:", qword_1004AFA48);

    if (qword_10047AC40 != -1)
      swift_once(&qword_10047AC40, sub_10017E8E4);
    swift_beginAccess(&off_100487C18, v300, 33, 0);
    v42 = v32;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_100487C18);
    v318 = (double *)off_100487C18;
    off_100487C18 = (_UNKNOWN *)0x8000000000000000;
    v289 = v42;
    sub_1000BD854((uint64_t)v42, 0, isUniquelyReferenced_nonNull_native);
    v44 = off_100487C18;
    off_100487C18 = v318;
    swift_bridgeObjectRelease(v44);
    swift_endAccess(v300);
    v45 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
    v46 = v297;
    v47 = swift_initStackObject(v297, &v317);
    *(_OWORD *)(v47 + 16) = v299;
    v48 = v291;
    *(_QWORD *)(v47 + 32) = v34;
    *(_QWORD *)(v47 + 40) = v48;
    v49 = v292;
    *(_QWORD *)(v47 + 48) = v292;
    swift_bridgeObjectRetain(v49);
    v50 = v34;
    v51 = sub_1000C7C10(v47);
    v52 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v45, "setShaderModifiers:", v52, swift_bridgeObjectRelease(v51).n128_f64[0]);

    v283 = (id)objc_opt_self(Gestalt);
    v53 = objc_msgSend(v283, "jasperAvailable");
    v270 = v45;
    sub_1001822AC(4, v45, v53);
    v54 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
    v55 = swift_initStackObject(v46, &v316);
    *(_OWORD *)(v55 + 16) = v299;
    v56 = v293;
    v57 = v294;
    *(_QWORD *)(v55 + 32) = v50;
    *(_QWORD *)(v55 + 40) = v56;
    *(_QWORD *)(v55 + 48) = v57;
    v58 = v50;
    swift_bridgeObjectRetain(v57);
    v59 = sub_1000C7C10(v55);
    v60 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v54, "setShaderModifiers:", v60, swift_bridgeObjectRelease(v59).n128_f64[0]);

    objc_msgSend(v54, "setLocksAmbientWithDiffuse:", 1);
    swift_beginAccess(&off_100487C18, v300, 33, 0);
    v61 = v54;
    v62 = swift_isUniquelyReferenced_nonNull_native(off_100487C18);
    v318 = (double *)off_100487C18;
    off_100487C18 = (_UNKNOWN *)0x8000000000000000;
    v288 = v61;
    sub_1000BD854((uint64_t)v61, 1, v62);
    v63 = off_100487C18;
    off_100487C18 = v318;
    swift_bridgeObjectRelease(v63);
    swift_endAccess(v300);
    v64 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
    v65 = v297;
    v66 = swift_initStackObject(v297, &v315);
    *(_OWORD *)(v66 + 16) = v299;
    *(_QWORD *)(v66 + 32) = v58;
    *(_QWORD *)(v66 + 40) = v56;
    *(_QWORD *)(v66 + 48) = v57;
    swift_bridgeObjectRetain(v57);
    v67 = v58;
    v68 = sub_1000C7C10(v66);
    v69 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v64, "setShaderModifiers:", v69, swift_bridgeObjectRelease(v68).n128_f64[0]);

    objc_msgSend(v64, "setLocksAmbientWithDiffuse:", 1);
    v70 = v283;
    v71 = objc_msgSend(v283, "jasperAvailable");
    v269 = v64;
    sub_1001822AC(5, v64, v71);
    v72 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
    v73 = swift_initStackObject(v65, &v314);
    v295 = xmmword_1003B0F60;
    *(_OWORD *)(v73 + 16) = xmmword_1003B0F60;
    v74 = v287;
    *(_QWORD *)(v73 + 32) = v67;
    *(_QWORD *)(v73 + 40) = v74;
    *(_QWORD *)(v73 + 48) = v286;
    *(_QWORD *)(v73 + 56) = SCNShaderModifierEntryPointFragment;
    v75 = v284;
    *(_QWORD *)(v73 + 64) = v285;
    *(_QWORD *)(v73 + 72) = v75;
    v284 = v67;
    v76 = SCNShaderModifierEntryPointFragment;
    v77 = sub_1000C7C10(v73);
    v78 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v72, "setShaderModifiers:", v78, swift_bridgeObjectRelease(v77).n128_f64[0]);

    objc_msgSend(v72, "setLocksAmbientWithDiffuse:", 1);
    swift_beginAccess(&off_100487C18, v300, 33, 0);
    v79 = v72;
    v80 = swift_isUniquelyReferenced_nonNull_native(off_100487C18);
    v318 = (double *)off_100487C18;
    off_100487C18 = (_UNKNOWN *)0x8000000000000000;
    v287 = v79;
    sub_1000BD854((uint64_t)v79, 2, v80);
    v81 = off_100487C18;
    off_100487C18 = v318;
    swift_bridgeObjectRelease(v81);
    swift_endAccess(v300);
    v82 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
    objc_msgSend(v82, "setDoubleSided:", 1);
    objc_msgSend(v82, "setWritesToDepthBuffer:", 0);
    swift_beginAccess(&off_100487C18, v300, 33, 0);
    v83 = v82;
    v84 = swift_isUniquelyReferenced_nonNull_native(off_100487C18);
    v318 = (double *)off_100487C18;
    off_100487C18 = (_UNKNOWN *)0x8000000000000000;
    v286 = v83;
    sub_1000BD854((uint64_t)v83, 3, v84);
    v85 = off_100487C18;
    off_100487C18 = v318;
    swift_bridgeObjectRelease(v85);
    if (!objc_msgSend(v70, "jasperAvailable", swift_endAccess(v300).n128_f64[0]))
    {
      swift_bridgeObjectRelease(v294);
      swift_bridgeObjectRelease(v292);
LABEL_25:
      v227 = (char *)objc_msgSend(objc_allocWithZone((Class)SCNScene), "init");
      v228 = v290;
      v229 = objc_msgSend(v290, "device");
      v230 = objc_msgSend((id)objc_opt_self(SCNRenderer), "rendererWithDevice:options:", v229, 0);
      swift_unknownObjectRelease(v229);
      objc_msgSend(v230, "setScene:", v227);
      objc_msgSend(v230, "setAutoenablesDefaultLighting:", objc_msgSend(v228, "autoenablesDefaultLighting"));
      sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
      v231 = v280;
      static DispatchQoS.unspecified.getter(v232);
      v300[0] = _swiftEmptyArrayStorage;
      v233 = sub_10000C4B0((unint64_t *)&qword_10047E690, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
      v234 = sub_10000EDC8(&qword_100486EF0);
      v235 = sub_100043310((unint64_t *)&qword_10047E6A0, &qword_100486EF0, (uint64_t)&protocol conformance descriptor for [A]);
      v236 = v275;
      dispatch thunk of SetAlgebra.init<A>(_:)(v300, v234, v235, v274, v233);
      v237 = v278;
      (*(void (**)(char *, _QWORD, uint64_t))(v276 + 104))(v278, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v277);
      v238 = (char *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0x635F726564616873, 0xEC00000065686361, v231, v236, v237, 0);
      v239 = (char **)swift_allocObject(&unk_100449DB0, 56, 7);
      v240 = v279;
      v239[2] = (char *)v228;
      v239[3] = v240;
      v239[4] = v227;
      v239[5] = (char *)v230;
      v239[6] = v238;
      v302 = sub_100182448;
      v303 = v239;
      v300[0] = _NSConcreteStackBlock;
      v300[1] = 1107296256;
      v300[2] = sub_10003ECA0;
      v301 = &unk_100449DC8;
      v241 = _Block_copy(v300);
      v242 = v228;
      *(_QWORD *)&v299 = v227;
      v243 = v230;
      v244 = v238;
      static DispatchQoS.unspecified.getter(v245);
      v318 = _swiftEmptyArrayStorage;
      v246 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v247 = sub_10000EDC8((uint64_t *)&unk_10047E430);
      v248 = sub_100043310((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430, (uint64_t)&protocol conformance descriptor for [A]);
      v249 = v271;
      v250 = v273;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v318, v247, v248, v273, v246);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v231, v249, v241);
      _Block_release(v241);

      (*(void (**)(char *, uint64_t))(v272 + 8))(v249, v250);
      (*(void (**)(char *, uint64_t))(v281 + 8))(v231, v282);
      swift_release();
      return;
    }
    v268 = v76;
    v255 = sub_100182148();
    v283 = v86;
    v87 = sub_100182148();
    v260 = v88;
    v261 = v87;
    v89 = sub_100182148();
    v253 = v90;
    v254 = v89;
    v91 = sub_100182148();
    v256 = v92;
    v257 = v91;
    v93 = sub_100182148();
    v258 = v94;
    v259 = v93;
    v95 = sub_100182148();
    v262 = v96;
    v97 = sub_100182148();
    v99 = v98;
    v100 = sub_100182148();
    v251 = v101;
    v252 = v100;
    v102 = sub_100182148();
    v263 = v103;
    v264 = v102;
    v104 = sub_100182148();
    v265 = v105;
    v266 = v104;
    v285 = (id)sub_100182148();
    v267 = v106;
    v107 = (void *)objc_opt_self(NSUserDefaults);
    v108 = objc_msgSend(v107, "standardUserDefaults");
    v109 = objc_msgSend(v108, "isLineOcclusionEnabled");

    if (v109)
    {
      v110 = swift_allocObject(v297, 80, 7);
      *(_OWORD *)(v110 + 16) = v295;
      v111 = v284;
      v112 = v293;
      *(_QWORD *)(v110 + 32) = v284;
      *(_QWORD *)(v110 + 40) = v112;
      v113 = v294;
      v114 = v268;
      *(_QWORD *)(v110 + 48) = v294;
      *(_QWORD *)(v110 + 56) = v114;
      *(_QWORD *)(v110 + 64) = v97;
      *(_QWORD *)(v110 + 72) = v99;
      swift_bridgeObjectRetain(v113);
      v115 = v111;
      v116 = v114;
      v117 = v111;
      v118 = v110;
    }
    else
    {
      swift_bridgeObjectRelease(v99);
      v119 = swift_initStackObject(v297, &v313);
      *(_OWORD *)(v119 + 16) = v299;
      v117 = v284;
      v120 = v293;
      *(_QWORD *)(v119 + 32) = v284;
      *(_QWORD *)(v119 + 40) = v120;
      v121 = v294;
      *(_QWORD *)(v119 + 48) = v294;
      swift_bridgeObjectRetain(v121);
      v122 = v117;
      v118 = v119;
    }
    v123 = sub_1000C7C10(v118);
    v124 = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v125 = swift_bridgeObjectRelease(v123).n128_u64[0];
    v126 = v288;
    objc_msgSend(v288, "setShaderModifiers:", v124, v125);

    v127 = objc_msgSend(v107, "standardUserDefaults", sub_1001822AC(1, v126, 1));
    LODWORD(v124) = objc_msgSend(v127, "isPointOcclusionEnabled");

    v128 = v292;
    if ((_DWORD)v124)
    {
      v129 = v297;
      v130 = swift_allocObject(v297, 80, 7);
      *(_OWORD *)(v130 + 16) = v295;
      v131 = v291;
      *(_QWORD *)(v130 + 32) = v117;
      *(_QWORD *)(v130 + 40) = v131;
      *(_QWORD *)(v130 + 48) = v128;
      v132 = v268;
      *(_QWORD *)(v130 + 56) = v268;
      *(_QWORD *)(v130 + 64) = v95;
      *(_QWORD *)(v130 + 72) = v262;
      v133 = v117;
      v134 = v132;
      v135 = sub_1000C7C10(v130);
    }
    else
    {
      swift_bridgeObjectRelease(v262);
      v129 = v297;
      v136 = swift_initStackObject(v297, &v312);
      *(_OWORD *)(v136 + 16) = v299;
      v137 = v291;
      *(_QWORD *)(v136 + 32) = v117;
      *(_QWORD *)(v136 + 40) = v137;
      *(_QWORD *)(v136 + 48) = v128;
      v138 = v117;
      v135 = sub_1000C7C10(v136);
      v132 = v268;
    }
    v139 = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v140 = swift_bridgeObjectRelease(v135).n128_u64[0];
    v141 = v289;
    objc_msgSend(v289, "setShaderModifiers:", v139, v140);

    sub_1001822AC(0, v141, 1);
    v142 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
    v143 = swift_initStackObject(v129, &v311);
    *(_OWORD *)(v143 + 16) = v299;
    v144 = v293;
    *(_QWORD *)(v143 + 32) = v117;
    *(_QWORD *)(v143 + 40) = v144;
    *(_QWORD *)(v143 + 48) = v294;
    v294 = v117;
    v145 = sub_1000C7C10(v143);
    v146 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v142, "setShaderModifiers:", v146, swift_bridgeObjectRelease(v145).n128_f64[0]);

    v293 = v142;
    sub_1001822AC(6, v142, 1);
    v147 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
    v148 = swift_initStackObject(v129, &v310);
    *(_OWORD *)(v148 + 16) = v299;
    v149 = v264;
    *(_QWORD *)(v148 + 32) = v132;
    *(_QWORD *)(v148 + 40) = v149;
    *(_QWORD *)(v148 + 48) = v263;
    v150 = v132;
    v151 = sub_1000C7C10(v148);
    v152 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v147, "setShaderModifiers:", v152, swift_bridgeObjectRelease(v151).n128_f64[0]);

    v292 = v147;
    sub_1001822AC(7, v147, 1);
    v153 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
    v154 = swift_initStackObject(v129, &v309);
    *(_OWORD *)(v154 + 16) = v295;
    v155 = v294;
    v156 = v266;
    v157 = v267;
    *(_QWORD *)(v154 + 32) = v294;
    *(_QWORD *)(v154 + 40) = v156;
    *(_QWORD *)(v154 + 48) = v265;
    *(_QWORD *)(v154 + 56) = v150;
    *(_QWORD *)(v154 + 64) = v285;
    *(_QWORD *)(v154 + 72) = v157;
    v284 = v155;
    v294 = v150;
    swift_bridgeObjectRetain(v157);
    v158 = sub_1000C7C10(v154);
    v159 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v153, "setShaderModifiers:", v159, swift_bridgeObjectRelease(v158).n128_f64[0]);

    v160 = objc_msgSend(v153, "diffuse");
    v161 = sub_10018B4F4(v290);
    objc_msgSend(v160, "setContents:", v161);

    swift_unknownObjectRelease(v161);
    v162 = objc_msgSend(v153, "emission");
    v268 = (NSString *)objc_opt_self(UIColor);
    v163 = -[NSString clearColor](v268, "clearColor");
    objc_msgSend(v162, "setContents:", v163);

    v291 = v153;
    sub_1001822AC(8, v153, 1);
    v164 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
    v165 = v129;
    v166 = v164;
    v167 = swift_initStackObject(v165, &v308);
    *(_OWORD *)(v167 + 16) = v299;
    v168 = v294;
    v169 = v285;
    *(_QWORD *)(v167 + 32) = v294;
    *(_QWORD *)(v167 + 40) = v169;
    *(_QWORD *)(v167 + 48) = v157;
    v170 = v168;
    v171 = sub_1000C7C10(v167);
    v172 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v166, "setShaderModifiers:", v172, swift_bridgeObjectRelease(v171).n128_f64[0]);

    if (qword_10047AD98 != -1)
      swift_once(&qword_10047AD98, sub_10018AA78);
    v173 = (void *)qword_100488410;
    v174 = swift_allocObject(&unk_100449E00, 32, 7);
    *(_QWORD *)(v174 + 16) = 0;
    *(_QWORD *)(v174 + 24) = 0xE000000000000000;
    v175 = (char **)swift_allocObject(&unk_100449E28, 32, 7);
    v175[2] = (char *)sub_100182494;
    v175[3] = (char *)v174;
    v302 = sub_100036118;
    v303 = v175;
    v300[0] = _NSConcreteStackBlock;
    v300[1] = 1107296256;
    v300[2] = sub_1001C35A8;
    v301 = &unk_100449E40;
    v176 = (SEL *)_Block_copy(v300);
    swift_retain();
    v177 = objc_msgSend(v173, "imageWithActions:", v176, swift_release().n128_f64[0]);
    _Block_release(v176);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v175, "", 90, 100, 45, 1);
    swift_release();
    *(_QWORD *)&v179 = swift_release().n128_u64[0];
    v180 = (NSString *)v283;
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v181 = objc_msgSend(v177, "CGImage", v179);

      v175 = &selRef_renderer_didAddNode_forAnchor_;
      if (v181)
      {
        v182 = objc_msgSend(v166, "diffuse");
        objc_msgSend(v182, "setContents:", v181);

        v183 = objc_msgSend(v166, "diffuse");
        LODWORD(v300[0]) = 1065353216;
        *(_QWORD *)((char *)&v300[1] + 4) = 0;
        *(_QWORD *)((char *)v300 + 4) = 0;
        HIDWORD(v300[2]) = 1056964608;
        v302 = 0;
        v303 = 0;
        v301 = 0;
        v304 = 0;
        v305 = 1056964608;
        v306 = 1065353216;
        objc_msgSend(v183, "setContentsTransform:", v300);

      }
      v176 = (SEL *)&selRef_renderer_didAddNode_forAnchor_;
      v184 = objc_msgSend(v166, "emission");
      v185 = -[NSString clearColor](v268, "clearColor");
      objc_msgSend(v184, "setContents:", v185);

      *(_QWORD *)&v299 = v166;
      sub_1001822AC(9, v166, 1);
      v186 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
      v187 = swift_initStackObject(v297, &v307);
      *(_OWORD *)(v187 + 16) = v295;
      v188 = v284;
      v174 = v255;
      *(_QWORD *)(v187 + 32) = v284;
      *(_QWORD *)(v187 + 40) = v174;
      *(_QWORD *)(v187 + 48) = v180;
      *(_QWORD *)(v187 + 56) = v170;
      v189 = v251;
      *(_QWORD *)(v187 + 64) = v252;
      *(_QWORD *)(v187 + 72) = v189;
      v190 = v188;
      v191 = v180;
      v180 = v190;
      swift_bridgeObjectRetain(v191);
      v170 = v170;
      v192 = sub_1000C7C10(v187);
      v193 = Dictionary._bridgeToObjectiveC()().super.isa;
      v194 = v192;
      isEscapingClosureAtFileLocation = (uint64_t)v186;
      objc_msgSend(v186, "setShaderModifiers:", v193, swift_bridgeObjectRelease(v194).n128_f64[0]);

      v166 = objc_msgSend(v186, "diffuse");
      if (qword_10047AEC0 == -1)
        goto LABEL_22;
    }
    swift_once(&qword_10047AEC0, sub_1001962C4);
LABEL_22:
    objc_msgSend(v166, v175[39], qword_1004AF9B8);

    v195 = objc_msgSend((id)isEscapingClosureAtFileLocation, v176[184]);
    if (qword_10047AEF8 != -1)
      swift_once(&qword_10047AEF8, sub_100196380);
    objc_msgSend(v195, v175[39], qword_1004AF9F0);

    sub_1001822AC(10, (void *)isEscapingClosureAtFileLocation, 1);
    v196 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
    v197 = v297;
    v198 = swift_allocObject(v297, 80, 7);
    v294 = (NSString *)isEscapingClosureAtFileLocation;
    v199 = v198;
    *(_OWORD *)(v198 + 16) = v295;
    *(_QWORD *)(v198 + 32) = v180;
    *(_QWORD *)(v198 + 40) = v174;
    *(_QWORD *)(v198 + 48) = v283;
    *(_QWORD *)(v198 + 56) = v170;
    v200 = v253;
    *(_QWORD *)(v198 + 64) = v254;
    *(_QWORD *)(v198 + 72) = v200;
    v201 = v180;
    v202 = v170;
    v203 = sub_1000C7C10(v199);
    v204 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v196, "setShaderModifiers:", v204, swift_bridgeObjectRelease(v203).n128_f64[0]);

    v205 = objc_msgSend(v196, "diffuse");
    objc_msgSend(v205, v175[39], qword_1004AF9B8);

    v285 = v196;
    v206 = objc_msgSend(v196, "emission");
    objc_msgSend(v206, v175[39], qword_1004AF9F0);

    sub_1001822AC(11, v196, 1);
    v207 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
    v208 = swift_allocObject(v197, 80, 7);
    *(_OWORD *)(v208 + 16) = v295;
    v209 = v258;
    v210 = v259;
    *(_QWORD *)(v208 + 32) = v201;
    *(_QWORD *)(v208 + 40) = v210;
    *(_QWORD *)(v208 + 48) = v209;
    *(_QWORD *)(v208 + 56) = v202;
    v211 = v256;
    *(_QWORD *)(v208 + 64) = v257;
    *(_QWORD *)(v208 + 72) = v211;
    v212 = v201;
    swift_bridgeObjectRetain(v209);
    v213 = v202;
    v214 = sub_1000C7C10(v208);
    v215 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v207, "setShaderModifiers:", v215, swift_bridgeObjectRelease(v214).n128_f64[0]);

    v216 = objc_msgSend(v207, "diffuse");
    objc_msgSend(v216, "setContents:", qword_1004AF9B8);

    v217 = objc_msgSend(v207, "emission");
    objc_msgSend(v217, "setContents:", qword_1004AF9F0);

    sub_1001822AC(12, v207, 1);
    v218 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
    v219 = swift_allocObject(v297, 80, 7);
    *(_OWORD *)(v219 + 16) = v295;
    *(_QWORD *)(v219 + 32) = v212;
    *(_QWORD *)(v219 + 40) = v210;
    *(_QWORD *)(v219 + 48) = v209;
    *(_QWORD *)(v219 + 56) = v213;
    v220 = v260;
    *(_QWORD *)(v219 + 64) = v261;
    *(_QWORD *)(v219 + 72) = v220;
    v221 = v212;
    v222 = v213;
    v223 = sub_1000C7C10(v219);
    v224 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v218, "setShaderModifiers:", v224, swift_bridgeObjectRelease(v223).n128_f64[0]);

    v225 = objc_msgSend(v218, "diffuse");
    objc_msgSend(v225, "setContents:", qword_1004AF9B8);

    v226 = objc_msgSend(v218, "emission");
    objc_msgSend(v226, "setContents:", qword_1004AF9F0);

    sub_1001822AC(13, v218, 1);
    goto LABEL_25;
  }
  __break(1u);
}

void sub_1001805AC(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  double *v23;
  void *v24;
  uint64_t v25;
  double *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  double *v31;
  _QWORD v32[4];
  _BYTE v33[24];

  ariadne_trace(_:_:_:_:_:)(727056420, 0, 0, 0, 0);
  v10 = objc_msgSend(objc_allocWithZone((Class)MTLTextureDescriptor), "init");
  objc_msgSend(v10, "setPixelFormat:", 55);
  objc_msgSend(v10, "setWidth:", 1);
  objc_msgSend(v10, "setHeight:", 1);
  v11 = objc_msgSend(a1, "device");
  if (!v11)
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, "newTextureWithDescriptor:", v10);
  swift_unknownObjectRelease(v12);
  if (!v13)
  {
LABEL_9:
    __break(1u);
    return;
  }
  if (qword_10047AC40 != -1)
    swift_once(&qword_10047AC40, sub_10017E8E4);
  v30 = a4;
  swift_beginAccess(&off_100487C18, v33, 0, 0);
  v14 = off_100487C18;
  swift_bridgeObjectRetain(off_100487C18);
  v16 = sub_100180F98(v15);
  swift_bridgeObjectRelease(v14);
  v32[0] = _swiftEmptyArrayStorage;
  swift_retain();
  sub_100181FB0(v17, 0, v32, 1.0);
  swift_release();
  v18 = v32[0];
  v32[0] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v16);
  sub_100181FB0(v19, 0, v32, 0.5);
  swift_release_n(v16, 2);
  v20 = v32[0];
  if (qword_10047AC48 != -1)
    swift_once(&qword_10047AC48, sub_10017E8F8);
  swift_beginAccess(&off_100487C20, v32, 0, 0);
  v21 = off_100487C20;
  v31 = _swiftEmptyArrayStorage;
  swift_unknownObjectRetain(v13);
  swift_bridgeObjectRetain(v21);
  sub_100181FB0(v22, (uint64_t)v13, &v31, 1.0);
  swift_bridgeObjectRelease(v21);
  swift_unknownObjectRelease(v13);
  v23 = v31;
  v24 = off_100487C20;
  v31 = _swiftEmptyArrayStorage;
  swift_unknownObjectRetain(v13);
  swift_bridgeObjectRetain(v24);
  sub_100181FB0(v25, (uint64_t)v13, &v31, 0.5);
  swift_bridgeObjectRelease(v24);
  swift_unknownObjectRelease(v13);
  sub_1001005D4((uint64_t)v23);
  sub_1001005D4(v20);
  sub_1001005D4(v18);
  v26 = v31;
  sub_1001824AC((uint64_t)v31);
  v28 = v27;
  swift_bridgeObjectRelease(v26);
  ariadne_trace(_:_:_:_:_:)(727056428, 0, 0, 0, 0);
  v29 = swift_allocObject(&unk_100449E78, 24, 7);
  *(_QWORD *)(v29 + 16) = 0;
  sub_100180910(v29, v28, a3, v30, a5, a2);

  swift_unknownObjectRelease(v13);
  swift_bridgeObjectRelease(v28);
  swift_release();
  ariadne_trace(_:_:_:_:_:)(727056424, 0, 0, 0, 0);
}

double sub_100180910(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  void *v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  Swift::String v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  char *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  void (*v43)(uint64_t, _QWORD *);
  void *v44;
  char *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  double result;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  void *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double *v63;
  char v64[24];
  _QWORD v65[3];
  void **aBlock;
  uint64_t v67;
  uint64_t (*v68)(uint64_t);
  void *v69;
  void *v70;
  _QWORD *v71;
  char v72[32];

  v54 = a6;
  v57 = a5;
  v55 = a3;
  v9 = (_QWORD *)type metadata accessor for DispatchTime(0);
  v10 = *(v9 - 1);
  v11 = __chkstk_darwin(v9);
  v13 = (uint64_t)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v54 - v14;
  v62 = type metadata accessor for DispatchWorkItemFlags(0);
  v60 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v59 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for DispatchQoS(0);
  v58 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v56 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (unint64_t *)(a1 + 16);
  swift_beginAccess(a1 + 16, v72, 0, 0);
  v19 = *(void **)(a1 + 16);
  if (!((unint64_t)a2 >> 62))
  {
    if ((uint64_t)v19 < *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_20:
    v42 = ariadne_trace(_:_:_:_:_:)(727056432, 0, 0, 0, 0);
    static DispatchTime.now()(v42);
    + infix(_:_:)(v13, 2.0);
    v43 = *(void (**)(uint64_t, _QWORD *))(v10 + 8);
    v43(v13, v9);
    v70 = sub_100181AAC;
    v71 = 0;
    aBlock = _NSConcreteStackBlock;
    v67 = 1107296256;
    v68 = sub_10003ECA0;
    v69 = &unk_100449E90;
    v44 = _Block_copy(&aBlock);
    v45 = v56;
    static DispatchQoS.unspecified.getter(v46);
    v65[0] = _swiftEmptyArrayStorage;
    v47 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v48 = sub_10000EDC8((uint64_t *)&unk_10047E430);
    v49 = sub_100043310((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430, (uint64_t)&protocol conformance descriptor for [A]);
    v50 = v59;
    v51 = v62;
    dispatch thunk of SetAlgebra.init<A>(_:)(v65, v48, v49, v62, v47);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v45, v50, v44);
    _Block_release(v44);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v50, v51);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v45, v61);
    v43((uint64_t)v15, v9);
    goto LABEL_21;
  }
  if (a2 < 0)
    v40 = a2;
  else
    v40 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v41 = _CocoaArrayWrapper.endIndex.getter(v40);
  swift_bridgeObjectRelease(a2);
  if ((uint64_t)v19 >= v41)
    goto LABEL_20;
LABEL_3:
  swift_beginAccess(a1 + 16, v65, 0, 0);
  v20 = *v18;
  if ((a2 & 0xC000000000000001) == 0)
  {
    if ((v20 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v20 < *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v19 = a4;
      v9 = *(id *)(a2 + 8 * v20 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_25;
  }
  v9 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, a2);
  v19 = a4;
LABEL_7:
  v21 = objc_msgSend(v9, "childNodes", v54);
  v22 = sub_100018148(0, &qword_10047BCE8, SCNNode_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

  a4 = v55;
  if (!((unint64_t)v13 >> 62))
  {
    v23 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_9;
  }
LABEL_25:
  if (v13 < 0)
    v53 = v13;
  else
    v53 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v23 = _CocoaArrayWrapper.endIndex.getter(v53);
  swift_bridgeObjectRelease(v13);
LABEL_9:
  *(_QWORD *)&v24 = swift_bridgeObjectRelease(v13).n128_u64[0];
  if (v23 < 1)
    goto LABEL_14;
  v25 = objc_msgSend(a4, "rootNode", v24);
  objc_msgSend(v25, "addChildNode:", v9);

  if ((objc_msgSend(v19, "prepareObject:shouldAbortBlock:", a4, 0) & 1) != 0)
    goto LABEL_13;
  if (qword_10047AAB0 != -1)
    goto LABEL_30;
  while (1)
  {
    v26._object = (void *)0x80000001003E3D70;
    v26._countAndFlagsBits = 0xD000000000000031;
    Log.error(_:isPrivate:)(v26, 0);
LABEL_13:
    objc_msgSend(v9, "removeFromParentNode", v54);
LABEL_14:
    swift_beginAccess(a1 + 16, v64, 1, 0);
    if (!__OFADD__(*v18, 1))
      break;
    __break(1u);
LABEL_30:
    swift_once(&qword_10047AAB0, sub_1000E1830);
  }
  *(_QWORD *)(a1 + 16) = *v18 + 1;
  v27 = (_QWORD *)swift_allocObject(&unk_100449EC8, 64, 7);
  v27[2] = a1;
  v27[3] = a2;
  v27[4] = a4;
  v27[5] = v19;
  v28 = v57;
  v29 = v54;
  v27[6] = v57;
  v27[7] = v29;
  v70 = sub_100182818;
  v71 = v27;
  aBlock = _NSConcreteStackBlock;
  v67 = 1107296256;
  v68 = sub_10003ECA0;
  v69 = &unk_100449EE0;
  v30 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain(a2);
  swift_retain();
  v31 = a4;
  v32 = v19;
  v28;
  v33 = v56;
  static DispatchQoS.unspecified.getter(v34);
  v63 = _swiftEmptyArrayStorage;
  v35 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v36 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v37 = sub_100043310((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430, (uint64_t)&protocol conformance descriptor for [A]);
  v38 = v59;
  v39 = v62;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v63, v36, v37, v62, v35);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v33, v38, v30);
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v33, v61);
LABEL_21:
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t type metadata accessor for ShaderCache()
{
  return objc_opt_self(_TtC7Measure11ShaderCache);
}

uint64_t sub_100180F98(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    sub_1001810E8((unint64_t *)((char *)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v2);
    if (v1)
      swift_willThrow(v8);
    else
      return v8;
  }
  else
  {
    v9 = (void *)swift_slowAlloc(v7, -1);
    bzero(v9, v7);
    sub_1001810E8((unint64_t *)v9, v6, v2);
    v2 = v10;
    swift_slowDealloc(v9, -1, -1);
  }
  return v2;
}

void sub_1001810E8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  id v21;
  uint64_t v24;
  _BYTE v25[24];
  int64_t v26;

  v24 = 0;
  v4 = 0;
  v5 = a3 + 64;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 64);
  v26 = (unint64_t)(v6 + 63) >> 6;
  if (v8)
    goto LABEL_7;
LABEL_8:
  v12 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v12 < v26)
    {
      v13 = *(_QWORD *)(v5 + 8 * v12);
      ++v4;
      if (v13)
        goto LABEL_21;
      v4 = v12 + 1;
      if (v12 + 1 >= v26)
        goto LABEL_28;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (v13)
        goto LABEL_21;
      v4 = v12 + 2;
      if (v12 + 2 >= v26)
        goto LABEL_28;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (v13)
      {
LABEL_21:
        v8 = (v13 - 1) & v13;
        for (i = __clz(__rbit64(v13)) + (v4 << 6); ; i = v10 | (v4 << 6))
        {
          v15 = *(unsigned __int8 *)(*(_QWORD *)(a3 + 48) + i);
          v16 = qword_10047AC48;
          v17 = *(id *)(*(_QWORD *)(a3 + 56) + 8 * i);
          if (v16 != -1)
            swift_once(&qword_10047AC48, sub_10017E8F8);
          swift_beginAccess(&off_100487C20, v25, 32, 0);
          v18 = off_100487C20;
          if (*((_QWORD *)off_100487C20 + 2) && (v19 = sub_1000C819C(v15), (v20 & 1) != 0))
          {
            v21 = *(id *)(v18[7] + 8 * v19);
            swift_endAccess(v25);

            if (!v8)
              goto LABEL_8;
          }
          else
          {
            swift_endAccess(v25);

            *(unint64_t *)((char *)a1 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
            if (__OFADD__(v24++, 1))
              goto LABEL_31;
            if (!v8)
              goto LABEL_8;
          }
LABEL_7:
          v10 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
        }
      }
      v14 = v12 + 3;
      if (v14 < v26)
      {
        v13 = *(_QWORD *)(v5 + 8 * v14);
        if (v13)
        {
          v4 = v14;
          goto LABEL_21;
        }
        while (1)
        {
          v4 = v14 + 1;
          if (__OFADD__(v14, 1))
            goto LABEL_30;
          if (v4 >= v26)
            break;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          ++v14;
          if (v13)
            goto LABEL_21;
        }
      }
    }
LABEL_28:
    sub_10018182C(a1, a2, v24, a3);
    return;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

uint64_t sub_100181328(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v29[40];

  if (!a3)
    return (uint64_t)_swiftEmptyDictionarySingleton;
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10000EDC8(&qword_100481A80);
  result = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = result;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_43;
      if (v15 >= a2)
        return v9;
      v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= a2)
          return v9;
        v16 = a1[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= a2)
            return v9;
          v16 = a1[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= a2)
              return v9;
            v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_44;
                if (v11 >= a2)
                  return v9;
                v16 = a1[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    memcpy(v29, (const void *)(*(_QWORD *)(v4 + 56) + 304 * v14), 0x130uLL);
    v19 = (v18 & 0x7FFFFFFFFFFFFFFFLL) != 0 ? v18 : 0;
    result = static Hasher._hash(seed:_:)(*(_QWORD *)(v9 + 40), v19);
    v20 = -1 << *(_BYTE *)(v9 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v23) = v18;
    result = (uint64_t)memcpy((void *)(*(_QWORD *)(v9 + 56) + 304 * v23), v29, 0x130uLL);
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    result = (uint64_t)sub_1000C2C50(v29);
    if (!v5)
      return v9;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1001815B8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;

  if (!a3)
    return (uint64_t)_swiftEmptyDictionarySingleton;
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10000EDC8(&qword_100481AA0);
  result = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = result;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_43;
      if (v15 >= a2)
        return v9;
      v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= a2)
          return v9;
        v16 = a1[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= a2)
            return v9;
          v16 = a1[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= a2)
              return v9;
            v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_44;
                if (v11 >= a2)
                  return v9;
                v16 = a1[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = 8 * v14;
    v19 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + v18);
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    v21 = (v19 & 0x7FFFFFFFFFFFFFFFLL) != 0 ? v19 : 0;
    result = static Hasher._hash(seed:_:)(*(_QWORD *)(v9 + 40), v21);
    v22 = -1 << *(_BYTE *)(v9 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = 8 * v25;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + v30) = v19;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v30) = v20;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    result = swift_bridgeObjectRetain(v20);
    if (!v5)
      return v9;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

Swift::Int sub_10018182C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  Swift::Int v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::UInt v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31[9];

  if (!a3)
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10000EDC8(&qword_100481A30);
  result = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = result;
  v29 = a1;
  v30 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v30)
        return v9;
      v16 = v29[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v30)
          return v9;
        v16 = v29[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v30)
            return v9;
          v16 = v29[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v30)
              return v9;
            v16 = v29[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v30)
                  return v9;
                v16 = v29[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v14);
    v19 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v14);
    Hasher.init(_seed:)(v31);
    Hasher._combine(_:)(v18);
    result = Hasher._finalize()();
    v20 = -1 << *(_BYTE *)(v9 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_BYTE *)(*(_QWORD *)(v9 + 48) + v23) = v18;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v23) = v19;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    result = v19;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_100181AAC()
{
  byte_1004AF778 = 1;
}

id sub_100181ABC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  char v4;
  void *v5;
  id v6;
  Class isa;
  NSString v8;
  _QWORD v10[46];

  if (qword_10047AC40 != -1)
    swift_once(&qword_10047AC40, sub_10017E8E4);
  swift_beginAccess(&off_100487C18, v10, 32, 0);
  v2 = off_100487C18;
  if (*((_QWORD *)off_100487C18 + 2) && (v3 = sub_1000C819C(a1), (v4 & 1) != 0))
  {
    v5 = *(void **)(v2[7] + 8 * v3);
    swift_endAccess(v10);
    v6 = v5;
    static ComputedCameraProperties.shared.getter(v10);
    isa = Float._bridgeToObjectiveC()().super.super.isa;
    v8 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "setValue:forKeyPath:", isa, v8);

  }
  else
  {
    swift_endAccess(v10);
    return objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
  }
  return v6;
}

id sub_100181BEC(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  double v6;
  int v7;
  id v8;
  id v9;
  void *v11;
  _QWORD v12[4];

  v2 = objc_msgSend((id)objc_opt_self(SCNPlane), "planeWithWidth:height:", 0.01, 0.01);
  v3 = sub_100181ABC(a1);
  v4 = objc_msgSend(v3, "copy");

  _bridgeAnyObjectToAny(_:)(v12, v4);
  swift_unknownObjectRelease(v4);
  v5 = sub_100018148(0, (unint64_t *)&qword_10048A110, SCNMaterial_ptr);
  *(_QWORD *)&v6 = swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, v5, 6).n128_u64[0];
  if (v7)
    v8 = v11;
  else
    v8 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
  objc_msgSend(v2, "setFirstMaterial:", v8, v6);

  v9 = objc_msgSend((id)objc_opt_self(SCNNode), "nodeWithGeometry:", v2);
  return v9;
}

void sub_100181D2C(unsigned __int8 *a1, uint64_t a2, _QWORD *a3, double a4)
{
  uint64_t v7;
  char v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t ObjectType;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v21[4];

  v7 = *a1;
  if (qword_10047AC48 != -1)
    swift_once(&qword_10047AC48, sub_10017E8F8);
  swift_beginAccess(&off_100487C20, v21, 32, 0);
  if (*((_QWORD *)off_100487C20 + 2))
  {
    sub_1000C819C(v7);
    if ((v8 & 1) != 0)
    {
      swift_endAccess(v21);
      if (a2)
        goto LABEL_8;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000020, 0x80000001003E3DD0, "Measure/ShaderCache.swift", 25, 2, 335, 0);
      __break(1u);
    }
  }
  swift_endAccess(v21);
LABEL_8:
  v9 = sub_100181BEC(v7);
  objc_msgSend(v9, "setOpacity:", a4);
  if (a2)
  {
    swift_unknownObjectRetain(a2);
    v10 = objc_msgSend(v9, "geometry");
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, "firstMaterial");

      if (v12)
      {
        ObjectType = swift_getObjectType(a2);
        v21[3] = ObjectType;
        v21[0] = a2;
        swift_unknownObjectRetain(a2);
        v14 = _bridgeAnythingToObjectiveC<A>(_:)(v21, ObjectType);
        v15 = objc_msgSend((id)objc_opt_self(SCNMaterialProperty), "materialPropertyWithContents:", v14);
        swift_unknownObjectRelease(v14);
        sub_10000F690(v21);
        v16 = String._bridgeToObjectiveC()();
        objc_msgSend(v12, "setValue:forKey:", v15, v16);

      }
    }
    swift_unknownObjectRelease(a2);
  }
  v17 = v9;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
  v19 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v18 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v19 >= v18 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
  v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
  specialized Array._endMutation()(v20);

}

void sub_100181FB0(uint64_t a1, uint64_t a2, _QWORD *a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  unsigned __int8 v21;

  v9 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a1 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v14 = 0;
  while (v12)
  {
    v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v16 = v15 | (v14 << 6);
LABEL_5:
    v21 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v16);
    sub_100181D2C(&v21, a2, a3, a4);
    if (v4)
      goto LABEL_24;
  }
  if (__OFADD__(v14++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v14 >= v13)
    goto LABEL_24;
  v18 = *(_QWORD *)(v9 + 8 * v14);
  if (v18)
  {
LABEL_17:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_5;
  }
  v19 = v14 + 1;
  if (v14 + 1 >= v13)
    goto LABEL_24;
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v19 = v14 + 2;
  if (v14 + 2 >= v13)
    goto LABEL_24;
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v19 = v14 + 3;
  if (v14 + 3 >= v13)
    goto LABEL_24;
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
LABEL_16:
    v14 = v19;
    goto LABEL_17;
  }
  v20 = v14 + 4;
  if (v14 + 4 >= v13)
  {
LABEL_24:
    swift_release();
    return;
  }
  v18 = *(_QWORD *)(v9 + 8 * v20);
  v14 += 4;
  if (v18)
    goto LABEL_17;
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v13)
      goto LABEL_24;
    v18 = *(_QWORD *)(v9 + 8 * v14);
    ++v20;
    if (v18)
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
}

unint64_t sub_100182138(unint64_t result)
{
  if (result >= 0xE)
    return 14;
  return result;
}

uint64_t sub_100182148()
{
  uint64_t v0;
  char *v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  type metadata accessor for String.Encoding(0);
  __chkstk_darwin();
  v1 = (char *)&v11 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "pathForResource:ofType:", v3, v4);

  if (v5)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    static String.Encoding.utf8.getter();
    v9 = String.init(contentsOfFile:encoding:)(v6, v8, v1);
    swift_bridgeObjectRelease(v8);
    return v9;
  }
  else
  {
    __break(1u);
    swift_bridgeObjectRelease(v4);
    result = swift_unexpectedError(0, "Measure/ShaderCache.swift", 25, 1, 307);
    __break(1u);
  }
  return result;
}

double sub_1001822AC(uint64_t a1, void *a2, char a3)
{
  id v6;
  char isUniquelyReferenced_nonNull_native;
  void *v8;
  double result;
  id v10;
  char v11;
  void *v12;
  void *v13;
  void *v14;
  _BYTE v15[24];

  if (qword_10047AC40 != -1)
    swift_once(&qword_10047AC40, sub_10017E8E4);
  swift_beginAccess(&off_100487C18, v15, 33, 0);
  v6 = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_100487C18);
  v13 = off_100487C18;
  off_100487C18 = (_UNKNOWN *)0x8000000000000000;
  sub_1000BD854((uint64_t)v6, a1, isUniquelyReferenced_nonNull_native);
  v8 = off_100487C18;
  off_100487C18 = v13;
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)&result = swift_endAccess(v15).n128_u64[0];
  if ((a3 & 1) != 0)
  {
    if (qword_10047AC48 != -1)
      swift_once(&qword_10047AC48, sub_10017E8F8);
    swift_beginAccess(&off_100487C20, v15, 33, 0);
    v10 = v6;
    v11 = swift_isUniquelyReferenced_nonNull_native(off_100487C20);
    v14 = off_100487C20;
    off_100487C20 = (_UNKNOWN *)0x8000000000000000;
    sub_1000BD854((uint64_t)v10, a1, v11);
    v12 = off_100487C20;
    off_100487C20 = v14;
    swift_bridgeObjectRelease(v12);
    *(_QWORD *)&result = swift_endAccess(v15).n128_u64[0];
  }
  return result;
}

uint64_t sub_10018240C()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

void sub_100182448()
{
  uint64_t v0;

  sub_1001805AC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_100182458(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100182468(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100182470()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100182494()
{
  sub_10018AFD8();
}

uint64_t sub_10018249C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001824AC(uint64_t a1)
{
  id v1;
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  float v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v4 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v23 = a1;
    else
      v23 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = roundf((float)v5 / 3.0);
  v7 = LODWORD(v6);
  if ((~LODWORD(v6) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  v7 = 3741319169;
  if (v6 <= -9.2234e18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v6 < 9.2234e18)
  {
    v24 = (unint64_t)_swiftEmptyArrayStorage;
    v1 = objc_msgSend(objc_allocWithZone((Class)SCNNode), "init");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v1);
    v2 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v7 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v2 < v7 >> 1)
      goto LABEL_7;
    goto LABEL_38;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v2 + 1, 1);
LABEL_7:
  v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, v1);
  specialized Array._endMutation()(v8);
  if (v4)
  {
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v9 = _CocoaArrayWrapper.endIndex.getter(v10);
    if (!v9)
      goto LABEL_30;
  }
  else
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v9)
    {
LABEL_30:
      swift_bridgeObjectRelease(a1);

      return;
    }
  }
  if (v9 >= 1)
  {
    for (i = 0; i != v9; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v13 = *(id *)(a1 + 8 * i + 32);
      v14 = v13;
      v15 = objc_msgSend(v1, "childNodes");
      v16 = sub_100018148(0, &qword_10047BCE8, SCNNode_ptr);
      v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

      if ((unint64_t)v17 >> 62)
      {
        if (v17 < 0)
          v22 = v17;
        else
          v22 = v17 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v17);
        v18 = _CocoaArrayWrapper.endIndex.getter(v22);
        swift_bridgeObjectRelease(v17);
      }
      else
      {
        v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease(v17);
      if (v18 == (uint64_t)v6)
      {
        v19 = objc_msgSend(objc_allocWithZone((Class)SCNNode), "init");

        v1 = v19;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v1);
        v21 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v20 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v21 >= v20 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
        v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v1);
        specialized Array._endMutation()(v12);
      }
      objc_msgSend(v1, "addChildNode:", v14);

    }
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t sub_1001827C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001827D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100182818()
{
  _QWORD *v0;

  return sub_100180910(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t getEnumTagSinglePayload for ShaderCache.Material(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ShaderCache.Material(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_100182904 + 4 * byte_1003BA55D[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_100182938 + 4 * byte_1003BA558[v4]))();
}

uint64_t sub_100182938(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100182940(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100182948);
  return result;
}

uint64_t sub_100182954(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10018295CLL);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_100182960(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100182968(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShaderCache.Material()
{
  return &type metadata for ShaderCache.Material;
}

uint64_t sub_100182984()
{
  return sub_100043310(&qword_100487CD0, &qword_100487CD8, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_1001829B4()
{
  unint64_t result;

  result = qword_100487CE0;
  if (!qword_100487CE0)
  {
    result = swift_getWitnessTable(&unk_1003BA628, &type metadata for ShaderCache.Material);
    atomic_store(result, (unint64_t *)&qword_100487CE0);
  }
  return result;
}

uint64_t type metadata accessor for SnappingStateUtil()
{
  return objc_opt_self(_TtC7Measure17SnappingStateUtil);
}

uint64_t sub_100182A30(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  int v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[10];
  _QWORD v41[10];
  _BYTE v42[64];
  char v43;
  _BYTE v44[80];

  sub_1000F3C80(a5, (uint64_t)v41);
  v12 = v41[0];
  v13 = v41[1];
  v14 = v41[2];
  v15 = v41[3];
  v36 = v41[4];
  v37 = v41[6];
  v38 = v41[5];
  v39 = v41[7];
  sub_1000F3C80(a6, (uint64_t)v40);
  if ((a4 & 1) != 0)
  {
    if ((a2 & 1) != 0)
    {
LABEL_23:
      v20 = 0;
      v18 = 0;
      return v20 | v18 & 1u;
    }
    v19 = WorldPointType.isSnappable.getter(a1);
    v18 = 0;
    if ((v19 & 1) != 0)
      v20 = 256;
    else
      v20 = 0;
  }
  else
  {
    if ((a2 & 1) != 0)
      goto LABEL_13;
    v16 = v40[0];
    v17 = v40[2];
    v30 = v40[1];
    v31 = v40[4];
    v32 = v40[3];
    v33 = v40[6];
    v34 = v40[5];
    v35 = v40[7];
    if ((WorldPointType.isSnappable.getter(a1) & 1) == 0)
    {
LABEL_13:
      v18 = WorldPointType.isSnappable.getter(a3);
    }
    else
    {
      if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
      {
        if ((unint64_t)(a3 - 3) < 6 && ((0x2Du >> (a3 - 3)) & 1) != 0)
        {
          v18 = 0;
        }
        else
        {
          v18 = 1;
          if (!a3)
            goto LABEL_16;
        }
      }
      else
      {
        v18 = a3 != 3;
        if (!a3)
        {
LABEL_16:
          v18 = 0;
          v20 = 256;
          return v20 | v18 & 1u;
        }
      }
      sub_1000F3C80(a5, (uint64_t)v44);
      if ((v44[64] & 1) != 0)
      {
        sub_1000F3C80(a6, (uint64_t)v42);
        if ((v43 & 1) != 0)
          goto LABEL_23;
      }
      else
      {
        sub_1000F3C80(a6, (uint64_t)v42);
        if ((v43 & 1) == 0)
        {
          v21.i64[0] = v16;
          v21.i64[1] = v30;
          v22.i64[0] = v17;
          v22.i64[1] = v32;
          v23.i64[0] = v31;
          v23.i64[1] = v34;
          v24.i64[0] = v33;
          v24.i64[1] = v35;
          v25.i64[0] = v12;
          v25.i64[1] = v13;
          v26.i64[0] = v14;
          v26.i64[1] = v15;
          v27.i64[0] = v36;
          v28.i64[0] = v37;
          v27.i64[1] = v38;
          v28.i64[1] = v39;
          if ((vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(v26, v22), (int8x16_t)vceqq_f32(v25, v21)), vandq_s8((int8x16_t)vceqq_f32(v27, v23), (int8x16_t)vceqq_f32(v28, v24)))) & 0x80000000) != 0)goto LABEL_23;
        }
      }
    }
    v20 = 0;
  }
  return v20 | v18 & 1u;
}

void destroy for SnapPointsState(id *a1)
{

}

_QWORD *initializeWithCopy for SnapPointsState(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  return a1;
}

uint64_t assignWithCopy for SnapPointsState(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  v12 = v11;

  v13 = *(void **)(a1 + 24);
  v14 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v14;
  v15 = v14;

  return a1;
}

uint64_t assignWithTake for SnapPointsState(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for SnapPointsState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SnapPointsState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SnapPointsState()
{
  return &type metadata for SnapPointsState;
}

ValueMetadata *type metadata accessor for SnapPoint()
{
  return &type metadata for SnapPoint;
}

id sub_100182E74()
{
  id result;
  id v1;

  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  result = (id)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (*((_QWORD *)&xmmword_1004AF258 + 1))
  {
    v1 = (id)*((_QWORD *)&xmmword_1004AF258 + 1);
    qword_1004AF780 = Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100182ED8@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_10047AC50 != -1)
    swift_once(&qword_10047AC50, sub_100182E74);
  v2 = (void *)qword_1004AF780;
  *a1 = qword_1004AF780;
  return v2;
}

uint64_t sub_100182F28(void **a1, void **a2)
{
  return sub_100182FC0(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_100182F44(void **a1, void **a2)
{
  return sub_100183134(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_100182F58(uint64_t a1)
{
  unint64_t result;

  result = sub_100182F7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100182F7C()
{
  unint64_t result;

  result = qword_100487DA8;
  if (!qword_100487DA8)
  {
    result = swift_getWitnessTable(&unk_1003BA6A8, &type metadata for SnapPointsState);
    atomic_store(result, (unint64_t *)&qword_100487DA8);
  }
  return result;
}

uint64_t sub_100182FC0(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  id v16;
  id v17;
  char v18;
  id v19;
  id v20;
  char v21;
  id v22;
  id v23;
  char v24;
  id v25;
  id v26;
  char v27;

  if (a1)
  {
    if (!a5)
      return 0;
    type metadata accessor for ScreenPoint(0);
    v16 = a5;
    v17 = a1;
    v18 = static NSObject.== infix(_:_:)(v17, v16);

    if ((v18 & 1) == 0)
      return 0;
  }
  else if (a5)
  {
    return 0;
  }
  if (a2)
  {
    if (!a6)
      return 0;
    type metadata accessor for WorldPoint(0);
    v19 = a6;
    v20 = a2;
    v21 = static NSObject.== infix(_:_:)(v20, v19);

    if ((v21 & 1) == 0)
      return 0;
  }
  else if (a6)
  {
    return 0;
  }
  if (a3)
  {
    if (!a7)
      return 0;
    type metadata accessor for ScreenPoint(0);
    v22 = a7;
    v23 = a3;
    v24 = static NSObject.== infix(_:_:)(v23, v22);

    if ((v24 & 1) == 0)
      return 0;
  }
  else if (a7)
  {
    return 0;
  }
  if (a4)
  {
    if (a8)
    {
      type metadata accessor for WorldPoint(0);
      v25 = a8;
      v26 = a4;
      v27 = static NSObject.== infix(_:_:)(v26, v25);

      if ((v27 & 1) != 0)
        return 1;
    }
  }
  else if (!a8)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_100183134(void *a1, void *a2, void *a3, void *a4)
{
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  char v12;

  if (a1)
  {
    if (!a3)
      return 0;
    v7 = a1;
    type metadata accessor for ScreenPoint(0);
    v8 = a3;
    v9 = v7;
    LOBYTE(v7) = static NSObject.== infix(_:_:)(v9, v8);

    if ((v7 & 1) == 0)
      return 0;
  }
  else if (a3)
  {
    return 0;
  }
  if (a2)
  {
    if (a4)
    {
      type metadata accessor for WorldPoint(0);
      v10 = a4;
      v11 = a2;
      v12 = static NSObject.== infix(_:_:)(v11, v10);

      if ((v12 & 1) != 0)
        return 1;
    }
  }
  else if (!a4)
  {
    return 1;
  }
  return 0;
}

ValueMetadata *type metadata accessor for LineDivisions()
{
  return &type metadata for LineDivisions;
}

ValueMetadata *type metadata accessor for LineDivisions.Numbers()
{
  return &type metadata for LineDivisions.Numbers;
}

uint64_t storeEnumTagSinglePayload for LineDivisions.Numbers.Orientation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10018326C + 4 * byte_1003BA6F1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001832A0 + 4 * byte_1003BA6EC[v4]))();
}

uint64_t sub_1001832A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001832A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001832B0);
  return result;
}

uint64_t sub_1001832BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001832C4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1001832C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001832D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LineDivisions.Numbers.Orientation()
{
  return &type metadata for LineDivisions.Numbers.Orientation;
}

unint64_t sub_1001832F0()
{
  unint64_t result;

  result = qword_100487DB0;
  if (!qword_100487DB0)
  {
    result = swift_getWitnessTable(&unk_1003BA75C, &type metadata for LineDivisions.Numbers.Orientation);
    atomic_store(result, (unint64_t *)&qword_100487DB0);
  }
  return result;
}

void sub_100183334(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100183360()
{
  return ((uint64_t (*)(void))SIMD3<>.up.unsafeMutableAddressor)();
}

void sub_1001833E8()
{
  id v0;
  uint64_t v1;
  NSString v2;
  unsigned __int8 v3;

  if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
  {
    v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v1 = *(_QWORD *)(Defaults.divisionsEnabled.unsafeMutableAddressor() + 8);
    swift_bridgeObjectRetain(v1);
    v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v1);
    v3 = objc_msgSend(v0, "BOOLForKey:", v2);

  }
  else
  {
    v3 = 0;
  }
  byte_1004AF790 = v3;
}

id sub_1001834A0()
{
  __n128 v0;
  id result;

  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v0 = swift_retain();
  PublishedValue.wrappedValue.getter(v0);
  swift_release();
  result = sub_10009BF0C();
  byte_1004AF791 = result == (id)1;
  return result;
}

uint64_t sub_100183514()
{
  float v0;
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  v0 = 0.0127;
  if (byte_1004AF791)
    v0 = 0.01;
  dword_1004AF794 = LODWORD(v0);
  return result;
}

float sub_10018357C()
{
  float result;

  if (qword_10047AC68 != -1)
    swift_once(&qword_10047AC68, sub_100183514);
  result = *(float *)&dword_1004AF794 * 0.25;
  *(float *)&dword_1004AF798 = *(float *)&dword_1004AF794 * 0.25;
  return result;
}

uint64_t sub_1001835CC(uint64_t a1)
{
  return sub_1001836A0(a1, (float *)&dword_1004AF79C);
}

uint64_t sub_1001835D8()
{
  uint64_t v0;
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  v0 = 10;
  if (!byte_1004AF791)
    v0 = 1;
  qword_1004AF7A0 = v0;
  return result;
}

uint64_t sub_10018362C()
{
  float v0;
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  v0 = 0.35;
  if (byte_1004AF791)
    v0 = 0.6;
  dword_1004AF7A8 = LODWORD(v0);
  return result;
}

uint64_t sub_100183694(uint64_t a1)
{
  return sub_1001836A0(a1, (float *)&dword_1004AF7AC);
}

uint64_t sub_1001836A0(uint64_t a1, float *a2)
{
  float v3;
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  v3 = 0.3048;
  if (byte_1004AF791)
    v3 = 0.1;
  *a2 = v3;
  return result;
}

uint64_t sub_100183710()
{
  uint64_t v0;
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  v0 = 12;
  if (byte_1004AF791)
    v0 = 5;
  qword_1004AF7B0 = v0;
  return result;
}

uint64_t sub_100183768()
{
  uint64_t v0;
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  v0 = 24;
  if (byte_1004AF791)
    v0 = 10;
  qword_1004AF7B8 = v0;
  return result;
}

id sub_1001837C0()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 100.0, UIFontWeightSemibold);
  qword_1004AF7C0 = (uint64_t)result;
  return result;
}

id sub_10018380C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  qword_1004AF7C8 = (uint64_t)result;
  return result;
}

void sub_100183844()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  int v3;
  int v4;

  SCNVector3.init(_:_:_:)(0.0001, 0.0001, 0.0001);
  * infix(_:_:)(v0);
  if (qword_10047AC60 != -1)
    v1 = swift_once(&qword_10047AC60, sub_1001834A0);
  v2 = * infix(_:_:)(v1);
  dword_1004AF7D0 = LODWORD(v2);
  *(_DWORD *)algn_1004AF7D4 = v3;
  dword_1004AF7D8 = v4;
}

double sub_1001838FC()
{
  double result;

  result = 200.0;
  xmmword_1004AF7E0 = xmmword_1003BA790;
  return result;
}

int64x2_t sub_100183910()
{
  int64x2_t result;

  result = vdupq_n_s64(0x409F400000000000uLL);
  xmmword_1004AF7F0 = (__int128)result;
  return result;
}

double sub_100183928()
{
  double result;

  result = 400.0;
  xmmword_1004AF800 = xmmword_1003BA7A0;
  return result;
}

void sub_10018393C()
{
  qword_1004AF810 = 0x402E000000000000;
}

uint64_t sub_10018394C()
{
  float v0;
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  v0 = 0.1;
  if (byte_1004AF791)
    v0 = 0.5;
  dword_1004AF818 = LODWORD(v0);
  return result;
}

uint64_t sub_1001839AC(uint64_t a1)
{
  return sub_100183B0C(0.0, a1, (float *)&dword_1004AF81C);
}

uint64_t sub_1001839BC(uint64_t a1)
{
  return sub_100183B0C(0.0, a1, (float *)&dword_1004AF820);
}

uint64_t sub_1001839CC()
{
  float v0;
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  v0 = 0.2;
  if (!byte_1004AF791)
    v0 = 0.25;
  dword_1004AF824 = LODWORD(v0);
  return result;
}

uint64_t sub_100183A2C()
{
  float v0;
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  v0 = 0.07;
  if (byte_1004AF791)
    v0 = 0.2;
  dword_1004AF828 = LODWORD(v0);
  return result;
}

uint64_t sub_100183A94()
{
  float v0;
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  v0 = 0.37;
  if (byte_1004AF791)
    v0 = 0.55;
  dword_1004AF82C = LODWORD(v0);
  return result;
}

uint64_t sub_100183AFC(uint64_t a1)
{
  return sub_100183B0C(1.0, a1, (float *)&dword_1004AF830);
}

uint64_t sub_100183B0C(float a1, uint64_t a2, float *a3)
{
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  *a3 = a1;
  return result;
}

uint64_t sub_100183B60()
{
  float v0;
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  v0 = 0.3;
  if (byte_1004AF791)
    v0 = 0.55;
  dword_1004AF834 = LODWORD(v0);
  return result;
}

uint64_t sub_100183BC8()
{
  float v0;
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  v0 = 0.2;
  if (byte_1004AF791)
    v0 = 0.3;
  dword_1004AF838 = LODWORD(v0);
  return result;
}

uint64_t sub_100183C30()
{
  float v0;
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  v0 = 0.85;
  if (byte_1004AF791)
    v0 = 0.55;
  dword_1004AF83C = LODWORD(v0);
  return result;
}

uint64_t sub_100183C98(uint64_t a1)
{
  return sub_100183CB0(a1, (float *)&dword_1004AF840);
}

uint64_t sub_100183CA4(uint64_t a1)
{
  return sub_100183CB0(a1, (float *)&dword_1004AF844);
}

uint64_t sub_100183CB0(uint64_t a1, float *a2)
{
  float v3;
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  v3 = 0.85;
  if (byte_1004AF791)
    v3 = 0.95;
  *a2 = v3;
  return result;
}

uint64_t sub_100183D20()
{
  float v0;
  uint64_t result;

  if (qword_10047AC60 != -1)
    result = swift_once(&qword_10047AC60, sub_1001834A0);
  v0 = 1.2;
  if (byte_1004AF791)
    v0 = 1.3;
  dword_1004AF848 = LODWORD(v0);
  return result;
}

float sub_100183D88()
{
  float result;

  if (qword_10047AD40 != -1)
    swift_once(&qword_10047AD40, sub_100183D20);
  result = *(float *)&dword_1004AF848 * 0.5;
  *(float *)&dword_1004AF84C = *(float *)&dword_1004AF848 * 0.5;
  return result;
}

uint64_t *sub_100183DDC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t *assignWithCopy for Measurements(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

_QWORD *assignWithTake for Measurements(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  v5 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for GuidesState()
{
  return &type metadata for GuidesState;
}

id sub_100183EF8()
{
  id result;
  id v1;

  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  result = (id)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (*((_QWORD *)&xmmword_1004AF258 + 1))
  {
    v1 = (id)*((_QWORD *)&xmmword_1004AF258 + 1);
    qword_1004AF850 = Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100183F5C@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_10047AD50 != -1)
    swift_once(&qword_10047AD50, sub_100183EF8);
  v2 = (void *)qword_1004AF850;
  *a1 = qword_1004AF850;
  return v2;
}

uint64_t sub_100183FAC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a2[1];
  v5 = a2[2];
  if ((sub_10007491C(*a1, *a2) & 1) != 0 && (sub_10007491C(v2, v4) & 1) != 0)
    return sub_10007491C(v3, v5);
  else
    return 0;
}

unint64_t sub_100184018(uint64_t a1)
{
  unint64_t result;

  result = sub_10018403C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10018403C()
{
  unint64_t result;

  result = qword_100487DE0;
  if (!qword_100487DE0)
  {
    result = swift_getWitnessTable(&unk_1003BA7BC, &type metadata for GuidesState);
    atomic_store(result, (unint64_t *)&qword_100487DE0);
  }
  return result;
}

id sub_100184080(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  Class isa;
  id v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  double v22;
  id result;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  double v29;
  double v30;

  v2 = v1;
  v4 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = OBJC_IVAR____TtC7Measure23CardContainerController_containerHeightConstraint;
  v6 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerHeightConstraint);
  if (v6)
  {
    v7 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerTopConstraint);
    if (v7)
    {
      v8 = (void *)objc_opt_self(NSLayoutConstraint);
      v9 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
      v10 = swift_allocObject(v9, 48, 7);
      *(_OWORD *)(v10 + 16) = xmmword_1003B1460;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v7;
      v30 = *(double *)&v10;
      specialized Array._endMutation()(v10);
      sub_100018148(0, (unint64_t *)&qword_100486300, NSLayoutConstraint_ptr);
      v11 = v6;
      v12 = v7;
      v13 = v11;
      v14 = v12;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v8, "deactivateConstraints:", isa, swift_bridgeObjectRelease(*(_QWORD *)&v30).n128_f64[0]);

    }
  }
  v16 = objc_msgSend(*(id *)(v1 + v4), "heightAnchor");
  KeyPath = swift_getKeyPath(&unk_1003BA968);
  v18 = swift_getKeyPath(&unk_1003BA990);
  swift_retain();
  static Published.subscript.getter(&v30, v19, KeyPath, v18);
  swift_release();
  swift_release();
  swift_release();
  v20 = objc_msgSend(v16, "constraintEqualToConstant:", v30);

  v21 = *(void **)(v2 + v5);
  *(_QWORD *)(v2 + v5) = v20;

  result = *(id *)(v2 + v5);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  LODWORD(v22) = 1148682240;
  objc_msgSend(result, "setPriority:", v22);
  result = *(id *)(v2 + v5);
  if (!result)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  objc_msgSend(result, "setActive:", 1);
  v24 = objc_msgSend(*(id *)(v2 + v4), "topAnchor");
  v25 = objc_msgSend(a1, "topAnchor");
  if (qword_10047A770 != -1)
    swift_once(&qword_10047A770, sub_10000EF48);
  v26 = objc_msgSend(v24, "constraintGreaterThanOrEqualToAnchor:constant:", v25, *(double *)&qword_1004AF0A8);

  v27 = OBJC_IVAR____TtC7Measure23CardContainerController_containerTopConstraint;
  v28 = *(void **)(v2 + OBJC_IVAR____TtC7Measure23CardContainerController_containerTopConstraint);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC7Measure23CardContainerController_containerTopConstraint) = v26;

  result = *(id *)(v2 + v27);
  if (!result)
    goto LABEL_13;
  LODWORD(v29) = 1148846080;
  objc_msgSend(result, "setPriority:", v29);
  result = *(id *)(v2 + v27);
  if (result)
    return objc_msgSend(result, "setActive:", 1);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_100184380()
{
  return sub_100184EB8((uint64_t)&unk_1003BA890, (uint64_t)&unk_1003BA8B8);
}

uint64_t sub_100184394(char a1, uint64_t a2, char a3)
{
  char *v3;
  double v6;
  double v7;
  double v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void *Strong;
  void *v19;
  uint64_t result;
  char v21;
  double v22;

  if ((a3 & 1) != 0)
  {
    v6 = dbl_1003BA9B8[a1];
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC7Measure23CardContainerController_containerView], "frame");
    v8 = v7;
    KeyPath = swift_getKeyPath(&unk_1003BA8D8);
    v10 = swift_getKeyPath(&unk_1003BA900);
    swift_retain();
    static Published.subscript.getter(&v22, v11, KeyPath, v10);
    swift_release();
    swift_release();
    swift_release();
    *(double *)&a2 = fabs(v6) * (v8 - v22);
  }
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint], "setConstant:", *(double *)&a2);
  v12 = swift_getKeyPath(&unk_1003BA890);
  v13 = swift_getKeyPath(&unk_1003BA8B8);
  v21 = a1;
  v14 = v3;
  static Published.subscript.setter(&v21, v14, v12, v13);
  sub_100184D4C();
  v15 = &v14[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  v16 = &v14[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v14[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture], v17);
  if (Strong)
  {
    v19 = Strong;
    objc_msgSend(Strong, "setEnabled:", 1);

  }
  result = swift_unknownObjectWeakAssign(v16, 0);
  v14[OBJC_IVAR____TtC7Measure23CardContainerController_isPanningCard] = 0;
  return result;
}

void sub_100184538()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  double v16;
  uint64_t v17;

  v1 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC7Measure23CardContainerController_containerView), "superview"));
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setNeedsLayout");
    objc_msgSend(v3, "layoutIfNeeded");
    KeyPath = swift_getKeyPath(&unk_1003BA890);
    v5 = swift_getKeyPath(&unk_1003BA8B8);
    static Published.subscript.getter((uint64_t *)((char *)&v17 + 1), v0, KeyPath, v5);
    swift_release(KeyPath);
    swift_release(v5);
    if (BYTE1(v17))
    {
      v6 = swift_getKeyPath(&unk_1003BA890);
      v7 = swift_getKeyPath(&unk_1003BA8B8);
      static Published.subscript.getter(&v17, v0, v6, v7);
      swift_release(v6);
      swift_release(v7);
      v8 = dbl_1003BA9B8[(char)v17];
      objc_msgSend(*(id *)(v0 + v1), "frame");
      v10 = v9;
      v11 = *(_QWORD *)(*(_QWORD *)(v0 + v1) + OBJC_IVAR____TtC7Measure17CardContainerView_configuration);
      v12 = swift_getKeyPath(&unk_1003BA8D8);
      v13 = swift_getKeyPath(&unk_1003BA900);
      v14 = swift_retain(v11);
      static Published.subscript.getter(&v16, v14, v12, v13);
      swift_release(v11);
      swift_release(v12);
      swift_release(v13);
      objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint), "setConstant:", fabs(v8) * (v10 - v16));
      objc_msgSend(*(id *)(v0 + v1), "setNeedsLayout");
      v15 = *(id *)(v0 + v1);
      objc_msgSend(v15, "layoutIfNeeded");

    }
  }
}

double sub_100184724@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100184760(a1, (uint64_t)&unk_1003BA968, (uint64_t)&unk_1003BA990, a2);
}

uint64_t sub_100184738(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001847EC(a1, a2, a3, a4, (uint64_t)&unk_1003BA968, (uint64_t)&unk_1003BA990);
}

double sub_10018474C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100184760(a1, (uint64_t)&unk_1003BA8D8, (uint64_t)&unk_1003BA900, a2);
}

double sub_100184760@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, double *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  double result;
  double v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  result = v10;
  *a4 = v10;
  return result;
}

uint64_t sub_1001847D8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001847EC(a1, a2, a3, a4, (uint64_t)&unk_1003BA8D8, (uint64_t)&unk_1003BA900);
}

uint64_t sub_1001847EC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_retain(v8);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

void sub_100184860()
{
  qword_1004AF858 = 0x3FF0000000000000;
}

void sub_100184870()
{
  qword_1004AF860 = 0xC028000000000000;
}

void sub_100184880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t Strong;
  void *v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  id v13;
  id v14;
  double MinY;
  double v16;
  double v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  char v35;
  double v36;
  CGRect v37;

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
  v4 = *(void **)(*(_QWORD *)(v3 + OBJC_IVAR____TtC7Measure17CardContainerView_titleView)
                + OBJC_IVAR____TtC7Measure13CardTitleView_separator);
  Strong = swift_unknownObjectUnownedLoadStrong(v3 + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_21;
  }
  v6 = (void *)Strong;
  v7 = v4;
  objc_msgSend(v6, "contentOffset");
  v9 = v8;
  objc_msgSend(v6, "contentInset");
  v11 = v10;

  sub_10004FAD0(v9 - v11 > 1.0);
  v12 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.isIPhone()(v12) & 1) != 0)
  {
    v13 = objc_msgSend(*(id *)(*(_QWORD *)(v1 + v2) + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView), "layer");
    v14 = objc_msgSend(v13, "presentationLayer");

    if (v14)
    {
      objc_msgSend(v14, "frame");
      MinY = CGRectGetMinY(v37);
      objc_msgSend(*(id *)(v1 + v2), "frame");
      v17 = v16;
      KeyPath = swift_getKeyPath(&unk_1003BA8D8);
      v19 = swift_getKeyPath(&unk_1003BA900);
      swift_retain();
      static Published.subscript.getter(&v36, v20, KeyPath, v19);
      swift_release();
      swift_release();
      swift_release();
      v21 = v36;
      if (qword_10047AD58 != -1)
        swift_once(&qword_10047AD58, sub_100184860);
      if (MinY > *(double *)&qword_1004AF858)
      {
        v22 = v17 - v21 - MinY;
        if (v22 > *(double *)&qword_1004AF858)
          goto LABEL_11;
        if (qword_10047AD60 != -1)
          swift_once(&qword_10047AD60, sub_100184870);
        if (*(double *)&qword_1004AF860 > v22)
        {
LABEL_11:
          v23 = objc_retain(*(id *)(*(_QWORD *)(v1 + v2)
                                  + OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView));
LABEL_15:
          v35 = 1;
LABEL_18:
          sub_10004FAD0(v35);

          return;
        }
      }
      v24 = *(_QWORD *)(v1 + v2);
      if (*(_BYTE *)(v24 + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) != 1)
      {
        v23 = *(id *)(v24 + OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView);
        goto LABEL_17;
      }
      v25 = (void *)swift_unknownObjectUnownedLoadStrong(v24 + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
      if (v25)
      {
        v26 = v25;
        objc_msgSend(v25, "contentSize");
        v28 = v27;
        objc_msgSend(v26, "contentInset");
        v30 = v28 + v29;
        objc_msgSend(v26, "bounds");
        v32 = v30 - v31;
        objc_msgSend(v26, "contentOffset");
        v34 = v33;

        v23 = objc_retain(*(id *)(*(_QWORD *)(v1 + v2)
                                + OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView));
        if (v32 - v34 > 1.0)
          goto LABEL_15;
LABEL_17:
        v35 = 0;
        goto LABEL_18;
      }
LABEL_21:
      __break(1u);
    }
  }
}

void sub_100184C1C(char a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;

  v2 = 0.4;
  if ((a1 & 1) == 0)
    v2 = 0.0;
  *(double *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration + 24) = v2;
  v3 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView), "frame");
  v5 = v4;
  v6 = *(_QWORD *)(*(_QWORD *)(v1 + v3) + OBJC_IVAR____TtC7Measure17CardContainerView_configuration);
  KeyPath = swift_getKeyPath(&unk_1003BA8D8);
  v8 = swift_getKeyPath(&unk_1003BA900);
  v9 = swift_retain(v6);
  static Published.subscript.getter(&v15, v9, KeyPath, v8);
  swift_release(v6);
  swift_release(KeyPath);
  swift_release(v8);
  v10 = v1 + OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration;
  *(double *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration + 8) = v5 - v15;
  v11 = objc_msgSend(*(id *)(v1 + v3), "superview");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, "bounds");
    v14 = v13;

    *(double *)(v10 + 16) = v14 * 0.5;
  }
}

void sub_100184D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) == 1)
  {
    Strong = swift_unknownObjectUnownedLoadStrong(v2 + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
    if (Strong)
    {
      v4 = (void *)Strong;
      KeyPath = swift_getKeyPath(&unk_1003BA890);
      v6 = swift_getKeyPath(&unk_1003BA8B8);
      static Published.subscript.getter((uint64_t *)((char *)&v11 + 1), v0, KeyPath, v6);
      swift_release(KeyPath);
      swift_release(v6);
      objc_msgSend(v4, "setScrollEnabled:", (v11 & 0x700) == 0);

      v7 = swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v0 + v1) + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
      if (v7)
      {
        v8 = (void *)v7;
        v9 = swift_getKeyPath(&unk_1003BA890);
        v10 = swift_getKeyPath(&unk_1003BA8B8);
        static Published.subscript.getter(&v11, v0, v9, v10);
        swift_release(v9);
        swift_release(v10);
        objc_msgSend(v8, "setBounces:", (v11 & 7) == 0);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_100184EA4()
{
  return sub_100184EB8((uint64_t)&unk_1003BA920, (uint64_t)&unk_1003BA948);
}

uint64_t sub_100184EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

void sub_100184F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[5];

  v1 = v0;
  v2 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v3 = static UIDevice.isIPhone()(v2);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint);
  if ((v3 & 1) != 0)
  {
    if (v4)
      objc_msgSend(v4, "constant");
    v5 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
    objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView), "transform");
    objc_msgSend(*(id *)(v1 + v5), "frame");
    KeyPath = swift_getKeyPath(&unk_1003BA8D8);
    v7 = swift_getKeyPath(&unk_1003BA900);
    swift_retain();
    static Published.subscript.getter(v12, v8, KeyPath, v7);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    if (v4)
      objc_msgSend(v4, "constant");
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView), "frame");
    v9 = swift_getKeyPath(&unk_1003BA8D8);
    v10 = swift_getKeyPath(&unk_1003BA900);
    swift_retain();
    static Published.subscript.getter(v12, v11, v9, v10);
    swift_release();
    swift_release();
    swift_release();
  }
}

char *sub_100185108(void *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  char *v12;
  uint64_t v13;
  id v14;
  double v15;
  double v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  id v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double *v27;
  char *v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  char *result;
  uint64_t v36;
  objc_super v37;
  double v38;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = sub_10000EDC8(&qword_100487EB8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded] = 1;
  v1[OBJC_IVAR____TtC7Measure23CardContainerController_isPanningCard] = 0;
  v1[OBJC_IVAR____TtC7Measure23CardContainerController_isDraggingEnabled] = 1;
  v1[OBJC_IVAR____TtC7Measure23CardContainerController_isDraggableFromBottomStack] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure23CardContainerController_containerHeightConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure23CardContainerController_containerTopConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture], 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure23CardContainerController_displayLink] = 0;
  v8 = &v1[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v9 = &v1[OBJC_IVAR____TtC7Measure23CardContainerController__lockingState];
  LOBYTE(v38) = 1;
  v10 = v1;
  Published.init(initialValue:)(&v38, &type metadata for CardContainerLockingState);
  v11 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v11(v9, v7, v4);
  v12 = &v10[OBJC_IVAR____TtC7Measure23CardContainerController__animationLockingState];
  LOBYTE(v38) = 1;
  Published.init(initialValue:)(&v38, &type metadata for CardContainerLockingState);
  v11(v12, v7, v4);
  *(_QWORD *)&v10[OBJC_IVAR____TtC7Measure23CardContainerController_maxHeightSubscription] = 0;
  swift_unknownObjectUnownedInit(&v10[OBJC_IVAR____TtC7Measure23CardContainerController_panGestureRecognizer], 0);
  v13 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  *(_QWORD *)&v10[OBJC_IVAR____TtC7Measure23CardContainerController_containerView] = a1;
  v14 = a1;
  objc_msgSend(v14, "frame");
  v16 = v15;
  KeyPath = swift_getKeyPath(&unk_1003BA8D8);
  v18 = swift_getKeyPath(&unk_1003BA900);
  swift_retain();
  static Published.subscript.getter(&v38, v19, KeyPath, v18);
  swift_release();
  swift_release();
  *(_QWORD *)&v20 = swift_release().n128_u64[0];
  v21 = v38;
  v22 = objc_msgSend(*(id *)&v10[v13], "superview", v20);
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v22, "bounds");
    v25 = v24;

  }
  else
  {
    objc_msgSend(v14, "frame");
    v25 = v26;
  }
  v27 = (double *)&v10[OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration];
  *v27 = 0.0;
  v27[1] = v16 - v21;
  v27[2] = v25 * 0.5;
  v27[3] = 0.4;

  v37.receiver = v10;
  v37.super_class = ObjectType;
  v28 = (char *)objc_msgSendSuper2(&v37, "init");
  sub_1001854A0();
  v29 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  v30 = objc_msgSend(*(id *)(*(_QWORD *)&v28[OBJC_IVAR____TtC7Measure23CardContainerController_containerView]+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView), "topAnchor");
  v31 = objc_msgSend(*(id *)&v28[v29], "topAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  v33 = OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint;
  v34 = *(void **)&v28[OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint];
  *(_QWORD *)&v28[OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint] = v32;

  result = *(char **)&v28[v33];
  if (result)
  {
    objc_msgSend(result, "setActive:", 1);

    return v28;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001854A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __n128 v11;
  uint64_t v12;
  __n128 v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  _BYTE v22[24];

  v1 = v0;
  v2 = sub_10000EDC8((uint64_t *)&unk_100487EC0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PanRecognizerWithInitialTouch()), "initWithTarget:action:", v0, "handlePanGestureWithSender:");
  objc_msgSend(v6, "setMaximumNumberOfTouches:", 1);
  objc_msgSend(v6, "setDelegate:", v0);
  v7 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView), "addGestureRecognizer:", v6);
  swift_unknownObjectUnownedAssign(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_panGestureRecognizer, v6);
  swift_beginAccess(*(_QWORD *)(*(_QWORD *)(v1 + v7) + OBJC_IVAR____TtC7Measure17CardContainerView_configuration)+ OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration__maxHeight, v22, 33, 0);
  swift_retain();
  v8 = sub_10000EDC8(&qword_100486EF8);
  Published.projectedValue.getter(v8);
  swift_endAccess(v22);
  swift_release();
  v9 = swift_allocObject(&unk_10044A330, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v1);
  v10 = sub_100187764();
  v12 = Publisher<>.sink(receiveValue:)(sub_10018775C, v9, v2, v10, v11);
  v13 = swift_release();
  (*(void (**)(_BYTE *, uint64_t, __n128))(v3 + 8))(v5, v2, v13);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_maxHeightSubscription) = v12;
  swift_release();
  v14 = objc_msgSend((id)objc_opt_self(CADisplayLink), "displayLinkWithTarget:selector:", v1, "caDisplayLinkCallback");
  v15 = OBJC_IVAR____TtC7Measure23CardContainerController_displayLink;
  v16 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_displayLink);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_displayLink) = v14;

  v17 = *(void **)(v1 + v15);
  if (v17)
  {
    v18 = (void *)objc_opt_self(NSRunLoop);
    v19 = v17;
    v20 = objc_msgSend(v18, "mainRunLoop");
    objc_msgSend(v19, "addToRunLoop:forMode:", v20, NSRunLoopCommonModes);

  }
  else
  {
    __break(1u);
  }
}

id sub_10018572C()
{
  void *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  sub_100185770();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "dealloc");
}

void sub_100185770()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *Strong;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v1 = OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator);
  if (v2)
  {
    objc_msgSend(v2, "stopAnimation:", 1);
    v3 = *(void **)(v0 + v1);
  }
  else
  {
    v3 = 0;
  }
  *(_QWORD *)(v0 + v1) = 0;

  v4 = v0 + OBJC_IVAR____TtC7Measure23CardContainerController_panGestureRecognizer;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_panGestureRecognizer);
  if (Strong)
  {
    v6 = Strong;
    objc_msgSend(Strong, "removeTarget:action:", v0, "handlePanGestureWithSender:");

    v7 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                  + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
    v9 = (id)swift_unknownObjectUnownedLoadStrong(v4);
    if (v9)
    {
      v8 = v7;
      objc_msgSend(v8, "removeGestureRecognizer:", v9);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1001859A0()
{
  return type metadata accessor for CardContainerController(0);
}

uint64_t type metadata accessor for CardContainerController(uint64_t a1)
{
  uint64_t result;

  result = qword_100487E98;
  if (!qword_100487E98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CardContainerController);
  return result;
}

void sub_1001859E4(double *a1, uint64_t a2)
{
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC7Measure23CardContainerController_containerHeightConstraint), "setConstant:", v2);

  }
}

id sub_100185A58()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  double v8;

  v1 = OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint;
  result = *(id *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  objc_msgSend(result, "setActive:", 0);
  v3 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  v4 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView), "topAnchor");
  v5 = objc_msgSend(*(id *)(v0 + v3), "topAnchor");
  v6 = objc_msgSend(v4, "constraintGreaterThanOrEqualToAnchor:", v5);

  v7 = *(void **)(v0 + v1);
  *(_QWORD *)(v0 + v1) = v6;

  result = *(id *)(v0 + v1);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  LODWORD(v8) = 1148846080;
  objc_msgSend(result, "setPriority:", v8);
  result = *(id *)(v0 + v1);
  if (result)
    return objc_msgSend(result, "setActive:", 1);
LABEL_7:
  __break(1u);
  return result;
}

void sub_100185B58()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  id v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  double v20;
  uint64_t v21;

  v1 = OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint);
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  objc_msgSend(v2, "setActive:", 0);
  v3 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  v4 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView), "topAnchor");
  v5 = objc_msgSend(*(id *)(v0 + v3), "topAnchor");
  v6 = objc_msgSend(v4, "constraintEqualToAnchor:", v5);

  v7 = *(void **)(v0 + v1);
  *(_QWORD *)(v0 + v1) = v6;

  v8 = *(void **)(v0 + v1);
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  KeyPath = swift_getKeyPath(&unk_1003BA890);
  v10 = swift_getKeyPath(&unk_1003BA8B8);
  v11 = v8;
  static Published.subscript.getter(&v21, v0, KeyPath, v10);
  swift_release(KeyPath);
  swift_release(v10);
  v12 = dbl_1003BA9B8[(char)v21];
  objc_msgSend(*(id *)(v0 + v3), "frame");
  v14 = v13;
  v15 = *(_QWORD *)(*(_QWORD *)(v0 + v3) + OBJC_IVAR____TtC7Measure17CardContainerView_configuration);
  v16 = swift_getKeyPath(&unk_1003BA8D8);
  v17 = swift_getKeyPath(&unk_1003BA900);
  v18 = swift_retain(v15);
  static Published.subscript.getter(&v20, v18, v16, v17);
  swift_release(v15);
  swift_release(v16);
  swift_release(v17);
  objc_msgSend(v11, "setConstant:", fabs(v12) * (v14 - v20));

  v19 = *(void **)(v0 + v1);
  if (v19)
  {
    objc_msgSend(v19, "setActive:", 1);
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_100185D58(char a1, uint64_t a2, uint64_t a3, double a4)
{
  char *v4;
  double v9;
  uint64_t v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  char *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  double v40;
  double v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  id v45;
  double v46;
  uint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  _OWORD v52[3];
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _OWORD v56[3];
  __int128 aBlock;
  __int128 v58;
  __int128 v59;

  v9 = dbl_1003BA9B8[a1];
  v10 = OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator;
  v11 = *(void **)&v4[OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator];
  *(_QWORD *)&v4[OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator] = 0;

  v12 = objc_msgSend(objc_allocWithZone((Class)CASpringAnimation), "init");
  objc_msgSend(v12, "setStiffness:", 240.0);
  objc_msgSend(v12, "setDamping:", 30.0);
  objc_msgSend(v12, "setInitialVelocity:", a4);
  objc_msgSend(v12, "damping");
  v14 = v13;
  objc_msgSend(v12, "stiffness");
  v16 = sqrt(v15);
  v45 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithDampingRatio:initialVelocity:", v14 / (v16 + v16), a4, a4);
  objc_msgSend(v12, "settlingDuration");
  v18 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v45, v17);
  v19 = *(void **)&v4[v10];
  *(_QWORD *)&v4[v10] = v18;

  v20 = *(void **)&v4[v10];
  if (!v20)
  {

    return;
  }
  v21 = swift_allocObject(&unk_10044A2E0, 24, 7);
  *(_QWORD *)(v21 + 16) = v4;
  *(_QWORD *)&v59 = sub_1001874CC;
  *((_QWORD *)&v59 + 1) = v21;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v58 = sub_10003ECA0;
  *((_QWORD *)&v58 + 1) = &unk_10044A2F8;
  v22 = _Block_copy(&aBlock);
  v23 = v20;
  v24 = v4;
  objc_msgSend(v23, "addAnimations:", v22, swift_release().n128_f64[0]);
  _Block_release(v22);
  if (a1 == 2)
    goto LABEL_5;
  objc_msgSend(*(id *)(*(_QWORD *)&v24[OBJC_IVAR____TtC7Measure23CardContainerController_containerView]+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView), "transform");
  v56[0] = aBlock;
  v56[1] = v58;
  v56[2] = v59;
  aBlock = 0x3FF0000000000000uLL;
  *(_QWORD *)&v58 = 0;
  *((_QWORD *)&v58 + 1) = 0x3FF0000000000000;
  v59 = 0uLL;
  if ((static CGAffineTransform.== infix(_:_:)(v56, &aBlock) & 1) == 0)
  {
LABEL_5:
    v28 = swift_allocObject(&unk_10044A330, 24, 7);
    swift_unknownObjectWeakInit(v28 + 16, v24);
    *(_QWORD *)&v55 = sub_100187524;
    *((_QWORD *)&v55 + 1) = v28;
    *(_QWORD *)&v53 = _NSConcreteStackBlock;
    *((_QWORD *)&v53 + 1) = 1107296256;
    *(_QWORD *)&v54 = sub_10002E168;
    *((_QWORD *)&v54 + 1) = &unk_10044A348;
    v27 = _Block_copy(&v53);
  }
  else
  {
    v25 = swift_allocObject(&unk_10044A330, 24, 7);
    swift_unknownObjectWeakInit(v25 + 16, v24);
    v26 = swift_allocObject(&unk_10044A470, 48, 7);
    *(_QWORD *)(v26 + 16) = v25;
    *(_BYTE *)(v26 + 24) = a1;
    *(_QWORD *)(v26 + 32) = a2;
    *(_QWORD *)(v26 + 40) = a3;
    *(_QWORD *)&v55 = sub_100187614;
    *((_QWORD *)&v55 + 1) = v26;
    *(_QWORD *)&v53 = _NSConcreteStackBlock;
    *((_QWORD *)&v53 + 1) = 1107296256;
    *(_QWORD *)&v54 = sub_10002E168;
    *((_QWORD *)&v54 + 1) = &unk_10044A488;
    v27 = _Block_copy(&v53);
    sub_100036254(a2, a3);
  }
  objc_msgSend(v23, "addCompletion:", v27, swift_release().n128_f64[0]);
  _Block_release(v27);
  v29 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.isIPhone()(v29) & 1) != 0)
  {
    if (a1 == 2)
    {
      v30 = (void *)objc_opt_self(UIView);
      v31 = swift_allocObject(&unk_10044A330, 24, 7);
      swift_unknownObjectWeakInit(v31 + 16, v24);
      *(_QWORD *)&v55 = sub_100187580;
      *((_QWORD *)&v55 + 1) = v31;
      *(_QWORD *)&v53 = _NSConcreteStackBlock;
      *((_QWORD *)&v53 + 1) = 1107296256;
      *(_QWORD *)&v54 = sub_10003ECA0;
      *((_QWORD *)&v54 + 1) = &unk_10044A3E8;
      v32 = _Block_copy(&v53);
      swift_release();
      v33 = swift_allocObject(&unk_10044A420, 48, 7);
      *(_QWORD *)(v33 + 16) = v24;
      *(_BYTE *)(v33 + 24) = a1;
      *(_QWORD *)(v33 + 32) = a2;
      *(_QWORD *)(v33 + 40) = a3;
      *(_QWORD *)&v55 = sub_1001875C0;
      *((_QWORD *)&v55 + 1) = v33;
      *(_QWORD *)&v53 = _NSConcreteStackBlock;
      *((_QWORD *)&v53 + 1) = 1107296256;
      *(_QWORD *)&v54 = sub_10002E168;
      *((_QWORD *)&v54 + 1) = &unk_10044A438;
      v34 = _Block_copy(&v53);
      v35 = v24;
      sub_100036254(a2, a3);
      swift_release();
      objc_msgSend(v30, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0x10000, v32, v34, 0.4, 0.0, 1.0, fabs(a4));
LABEL_12:
      _Block_release(v34);
      _Block_release(v32);
      goto LABEL_13;
    }
    objc_msgSend(*(id *)(*(_QWORD *)&v24[OBJC_IVAR____TtC7Measure23CardContainerController_containerView]+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView), "transform");
    v52[0] = v53;
    v52[1] = v54;
    v52[2] = v55;
    v53 = 0x3FF0000000000000uLL;
    *(_QWORD *)&v54 = 0;
    *((_QWORD *)&v54 + 1) = 0x3FF0000000000000;
    v55 = 0uLL;
    if ((static CGAffineTransform.== infix(_:_:)(v52, &v53) & 1) == 0)
    {
      v36 = (void *)objc_opt_self(UIView);
      v37 = swift_allocObject(&unk_10044A330, 24, 7);
      swift_unknownObjectWeakInit(v37 + 16, v24);
      v50 = sub_100187574;
      v51 = v37;
      v46 = COERCE_DOUBLE(_NSConcreteStackBlock);
      v47 = 1107296256;
      v48 = sub_10003ECA0;
      v49 = &unk_10044A370;
      v32 = _Block_copy(&v46);
      swift_release();
      v38 = swift_allocObject(&unk_10044A3A8, 48, 7);
      *(_QWORD *)(v38 + 16) = v24;
      *(_BYTE *)(v38 + 24) = a1;
      *(_QWORD *)(v38 + 32) = a2;
      *(_QWORD *)(v38 + 40) = a3;
      v50 = sub_100187BF4;
      v51 = v38;
      v46 = COERCE_DOUBLE(_NSConcreteStackBlock);
      v47 = 1107296256;
      v48 = sub_10002E168;
      v49 = &unk_10044A3C0;
      v34 = _Block_copy(&v46);
      v39 = v24;
      sub_100036254(a2, a3);
      swift_release();
      objc_msgSend(v36, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0x20000, v32, v34, 0.4, 0.0, 1.0, fabs(a4));
      goto LABEL_12;
    }
  }
LABEL_13:
  objc_msgSend(*(id *)&v24[OBJC_IVAR____TtC7Measure23CardContainerController_containerView], "frame");
  v41 = v40;
  KeyPath = swift_getKeyPath(&unk_1003BA8D8);
  v43 = swift_getKeyPath(&unk_1003BA900);
  swift_retain();
  static Published.subscript.getter(&v46, v44, KeyPath, v43);
  swift_release();
  swift_release();
  swift_release();
  objc_msgSend(*(id *)&v24[OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint], "setConstant:", fabs(v9) * (v41 - v46));
  objc_msgSend(v23, "startAnimation");

}

void sub_10018648C(uint64_t a1, uint64_t a2, char a3, void (*a4)(__n128), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t KeyPath;
  uint64_t v13;
  id v14;
  __n128 v15;
  char v16;
  _BYTE v17[24];

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8, v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC7Measure23CardContainerController_isPanningCard) = 0;
    KeyPath = swift_getKeyPath(&unk_1003BA920);
    v13 = swift_getKeyPath(&unk_1003BA948);
    v16 = a3;
    v14 = v11;
    static Published.subscript.setter(&v16, v14, KeyPath, v13);
    if (a4)
    {
      v15 = swift_retain();
      a4(v15);
      sub_1000217BC((uint64_t)a4, a5);
    }

  }
}

void sub_10018655C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *Strong;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC7Measure23CardContainerController_isPanningCard] = 0;

  }
}

void sub_1001865B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  id v10;
  uint64_t v11;
  CGAffineTransform ty;
  _BYTE v13[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
    v6 = *(void **)(v5 + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
    v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC7Measure17CardContainerView_configuration);
    KeyPath = swift_getKeyPath(&unk_1003BA8D8);
    v9 = swift_getKeyPath(&unk_1003BA900);
    v10 = v6;
    v11 = swift_retain(v7);
    static Published.subscript.getter(&ty, v11, KeyPath, v9);
    swift_release(v7);
    swift_release(KeyPath);
    swift_release(v9);
    CGAffineTransformMakeTranslation(&ty, 0.0, ty.a);
    objc_msgSend(v10, "setTransform:", &ty);

  }
}

void sub_1001866C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  _QWORD v6[6];
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void **)(*(_QWORD *)(Strong + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                  + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
    v6[0] = 0x3FF0000000000000;
    v6[1] = 0;
    v6[2] = 0;
    v6[3] = 0x3FF0000000000000;
    v6[4] = 0;
    v6[5] = 0;
    objc_msgSend(v5, "setTransform:", v6);

  }
}

uint64_t sub_100186750(uint64_t a1, void *a2, char a3, void (*a4)(__n128), uint64_t a5)
{
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t result;
  __n128 v12;
  char v13;

  KeyPath = swift_getKeyPath(&unk_1003BA920);
  v10 = swift_getKeyPath(&unk_1003BA948);
  v13 = a3;
  result = static Published.subscript.setter(&v13, a2, KeyPath, v10);
  if (a4)
  {
    v12 = swift_retain();
    a4(v12);
    return sub_1000217BC((uint64_t)a4, a5);
  }
  return result;
}

char *sub_1001867E8(char *result)
{
  uint64_t v1;
  char *v2;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_isDraggingEnabled) == 1)
  {
    v2 = result;
    if (objc_msgSend(result, "state") == (id)1)
      sub_100186898(v2);
    if (objc_msgSend(v2, "state") == (id)2)
      sub_100186D78(v2);
    if (objc_msgSend(v2, "state") == (id)3)
      sub_100186E5C(v2);
    result = (char *)objc_msgSend(v2, "state");
    if (result == (char *)4)
      return (char *)sub_1001877B0();
  }
  return result;
}

void sub_100186898(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(uint64_t, uint64_t);
  char *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  unsigned __int8 v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  uint64_t v35;
  void *v36;
  void *v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  double v47;
  void *v48;
  void *v49;
  double v50;
  double v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  CGPoint v63;
  CGRect v64;

  v2 = v1;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator) = 0;

  v5 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView), "frame");
  v6 = v1 + OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos;
  *(_QWORD *)v6 = v7;
  *(_BYTE *)(v6 + 8) = 0;
  sub_100184C1C(1);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_isPanningCard) = 1;
  v8 = *(char **)(v1 + v5);
  v9 = &v8[OBJC_IVAR____TtC7Measure17CardContainerView_internalSpatialPlatter];
  Strong = swift_unknownObjectWeakLoadStrong(&v8[OBJC_IVAR____TtC7Measure17CardContainerView_internalSpatialPlatter], v10);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = *((_QWORD *)v9 + 1);
    ObjectType = swift_getObjectType(Strong);
    v15 = *(void (**)(uint64_t, uint64_t))(v13 + 112);
    v16 = v8;
    v15(ObjectType, v13);

  }
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC7Measure23CardContainerController_isDraggableFromBottomStack) & 1) == 0
    && (a1[OBJC_IVAR____TtC7Measure29PanRecognizerWithInitialTouch_initialTouchLocation + 16] & 1) == 0)
  {
    objc_msgSend(*(id *)(v2 + v5), "convertPoint:fromCoordinateSpace:", *(_QWORD *)(*(_QWORD *)(v2 + v5) + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView), *(double *)&a1[OBJC_IVAR____TtC7Measure29PanRecognizerWithInitialTouch_initialTouchLocation], *(double *)&a1[OBJC_IVAR____TtC7Measure29PanRecognizerWithInitialTouch_initialTouchLocation + 8]);
    v18 = v17;
    v20 = v19;
    v21 = *(id *)(v2 + v5);
    v22 = sub_10016AAB0(v18, v20);

    if ((v22 & 1) != 0)
    {
      v23 = (void *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v2 + v5) + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
      if (v23)
      {
        v24 = v23;
        objc_msgSend(v23, "setBounces:", 1);

        v25 = (void *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v2 + v5) + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
        if (v25)
        {
          v26 = v25;
          objc_msgSend(v25, "setScrollEnabled:", 1);

          objc_msgSend(a1, "setState:", 4);
          return;
        }
        goto LABEL_33;
      }
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  if (*(_BYTE *)(*(_QWORD *)(v2 + v5)
                + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) == 1)
  {
    KeyPath = swift_getKeyPath(&unk_1003BA890);
    v28 = swift_getKeyPath(&unk_1003BA8B8);
    static Published.subscript.getter(&v62, v2, KeyPath, v28);
    swift_release();
    swift_release();
    if (!(_BYTE)v62)
    {
      v29 = swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v2 + v5) + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
      if (!v29)
      {
        __break(1u);
        goto LABEL_32;
      }
      v30 = (void *)v29;
      objc_msgSend(a1, "locationInView:", v29);
      v32 = v31;
      v34 = v33;

      v35 = *(_QWORD *)(v2 + v5);
      if (*(_BYTE *)(v35 + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) == 1)
      {
        v36 = (void *)swift_unknownObjectUnownedLoadStrong(v35 + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
        if (!v36)
        {
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        v37 = v36;
        objc_msgSend(v36, "frame");
        v39 = v38;
        v41 = v40;
        v43 = v42;
        v45 = v44;

        v64.origin.x = v39;
        v64.origin.y = v41;
        v64.size.width = v43;
        v64.size.height = v45;
        v63.x = v32;
        v63.y = v34;
        if (CGRectContainsPoint(v64, v63))
        {
          objc_msgSend(a1, "velocityInView:", *(_QWORD *)(*(_QWORD *)(v2 + v5) + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView));
          v47 = v46;
          v48 = (void *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v2 + v5) + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
          if (!v48)
          {
LABEL_35:
            __break(1u);
            goto LABEL_36;
          }
          v49 = v48;
          objc_msgSend(v48, "contentOffset");
          v51 = v50;

          if (v51 >= 0.0 && v47 > 0.0)
          {
            v52 = (void *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v2 + v5) + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
            if (v52)
            {
              v53 = v52;
              objc_msgSend(v52, "setBounces:", 0);

              v54 = (void *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v2 + v5) + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
              if (v54)
              {
                v55 = v54;
                objc_msgSend(v54, "setScrollEnabled:", 0);

                return;
              }
              goto LABEL_37;
            }
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
            goto LABEL_38;
          }
          if (v51 < 0.0 && v47 > 0.0)
          {
            v56 = (void *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v2 + v5) + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
            if (!v56)
            {
LABEL_38:
              __break(1u);
              goto LABEL_39;
            }
            v57 = v56;
            objc_msgSend(v56, "setBounces:", 1);

            v58 = (void *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v2 + v5) + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
            if (v58)
            {
LABEL_29:
              v61 = v58;
              objc_msgSend(v58, "setScrollEnabled:", 1);

              objc_msgSend(a1, "setState:", 4);
              return;
            }
            __break(1u);
          }
          if (v47 >= 0.0)
            return;
          v59 = (void *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v2 + v5) + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
          if (!v59)
          {
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          v60 = v59;
          objc_msgSend(v59, "setBounces:", 1);

          v58 = (void *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v2 + v5) + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
          if (!v58)
          {
LABEL_40:
            __break(1u);
            return;
          }
          goto LABEL_29;
        }
      }
    }
  }
}

id sub_100186D78(id result)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double v4;
  double v5;
  void *v6;
  _QWORD v7[6];

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos + 8) & 1) == 0)
  {
    v2 = *(double *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos);
    v3 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
    objc_msgSend(result, "translationInView:", *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView));
    v5 = v2 + v4;
    v6 = *(void **)(*(_QWORD *)(v1 + v3) + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
    v7[0] = 0x3FF0000000000000;
    v7[1] = 0;
    v7[2] = 0;
    v7[3] = 0x3FF0000000000000;
    v7[4] = 0;
    v7[5] = 0;
    objc_msgSend(v6, "setTransform:", v7);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint), "setConstant:", sub_100171FA0(v5, *(double *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration), *(double *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration + 8), *(double *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration + 16), *(double *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration + 24)));
    objc_msgSend(*(id *)(v1 + v3), "setNeedsLayout");
    return objc_msgSend(*(id *)(v1 + v3), "layoutIfNeeded");
  }
  return result;
}

void sub_100186E5C(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  BOOL v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  double v11;
  BOOL v12;
  double v13;
  char v14;
  char v15;
  uint64_t v16;
  unsigned __int8 v17;
  char v18;
  char v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void *Strong;
  void *v41;
  double v42[6];

  v2 = v1;
  v3 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  objc_msgSend(a1, "velocityInView:", *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC7Measure23CardContainerController_containerView]+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView));
  v5 = v4;
  sub_100184F20();
  v7 = v6 > 0.5 || v6 < -100.0;
  v8 = *(_QWORD *)(*(_QWORD *)&v1[v3] + OBJC_IVAR____TtC7Measure17CardContainerView_configuration);
  KeyPath = swift_getKeyPath(&unk_1003BA890);
  v10 = swift_getKeyPath(&unk_1003BA8B8);
  swift_retain();
  static Published.subscript.getter(v42, v2, KeyPath, v10);
  swift_release();
  swift_release();
  if (LOBYTE(v42[0]))
  {
    if (LOBYTE(v42[0]) != 1)
      goto LABEL_16;
    if (!v7)
    {
      v7 = 0;
      goto LABEL_16;
    }
  }
  else if (v7)
  {
    v7 = 1;
    goto LABEL_16;
  }
  v11 = *(double *)(v8 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityThreshold);
  v12 = v5 >= -v11 && v7;
  v7 = v11 < v5 || v12;
LABEL_16:
  v13 = *(double *)(v8 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityUpperThreshold);
  v14 = v5 >= -v13 && v7;
  if (v13 < v5)
    v15 = 1;
  else
    v15 = v14;
  v16 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v17 = static UIDevice.isIPhone()(v16);
  v18 = v15 | ~((v17 ^ 1 | v2[OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded] | v15) & v2[OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded]);
  v19 = v15 & 1 | (((v17 ^ 1 | v2[OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded] | v15) & v2[OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded] & 1) == 0);
  v20 = 0.0;
  if ((v18 & 1) != 0)
    v21 = 1.0;
  else
    v21 = 0.0;
  objc_msgSend(*(id *)&v2[v3], "frame");
  v23 = v22;
  v24 = swift_getKeyPath(&unk_1003BA8D8);
  v25 = swift_getKeyPath(&unk_1003BA900);
  swift_retain();
  static Published.subscript.getter(v42, v26, v24, v25);
  swift_release();
  swift_release();
  swift_release();
  v27 = v21 * (v23 - v42[0]);
  v29 = static UIDevice.isIPhone()(v28);
  v30 = *(void **)&v2[OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint];
  if ((v29 & 1) != 0)
  {
    if (v30)
    {
      objc_msgSend(v30, "constant");
      v20 = v31;
    }
    objc_msgSend(*(id *)(*(_QWORD *)&v2[v3] + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView), "transform");
    v20 = v20 + v42[5];
  }
  else if (v30)
  {
    objc_msgSend(v30, "constant");
    v20 = v32;
  }
  v33 = 0.0;
  if (v27 - v20 != 0.0)
    v33 = v5 / (v27 - v20);
  sub_100185D58(v19, 0, 0, v33);
  v34 = swift_getKeyPath(&unk_1003BA890);
  v35 = swift_getKeyPath(&unk_1003BA8B8);
  LOBYTE(v42[0]) = v19;
  v36 = v2;
  static Published.subscript.setter(v42, v36, v34, v35);
  sub_100184D4C();
  v37 = &v36[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
  *(_QWORD *)v37 = 0;
  v37[8] = 1;
  v38 = &v36[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v36[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture], v39);
  if (Strong)
  {
    v41 = Strong;
    objc_msgSend(Strong, "setEnabled:", 1);

  }
  swift_unknownObjectWeakAssign(v38, 0);
  swift_release();
}

void sub_100187388(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[13];
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v4[0] = &unk_1003BA818;
  v4[1] = &unk_1003BA818;
  v4[2] = &unk_1003BA818;
  v4[3] = &unk_1003BA818;
  v4[4] = &unk_1003BA830;
  v4[5] = &unk_1003BA830;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = &unk_1003BA830;
  v4[8] = &unk_1003BA830;
  v4[9] = &unk_1003BA848;
  v4[10] = &unk_1003BA830;
  v4[11] = &unk_1003BA860;
  v4[12] = &unk_1003BA878;
  sub_10018744C();
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    v7 = &unk_1003BA830;
    v8 = &unk_1003BA848;
    swift_updateClassMetadata2(a1, 256, 17, v4, a1 + 80);
  }
}

void sub_10018744C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_100487EA8)
  {
    v0 = type metadata accessor for Published(0, &type metadata for CardContainerLockingState);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_100487EA8);
  }
}

uint64_t sub_1001874A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1001874CC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC7Measure23CardContainerController_containerView), "layoutIfNeeded");
}

uint64_t sub_1001874E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001874F8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100187500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100187524(uint64_t a1)
{
  uint64_t v1;

  sub_10018655C(a1, v1);
}

double sub_10018752C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100184760(a1, (uint64_t)&unk_1003BA8D8, (uint64_t)&unk_1003BA900, a2);
}

uint64_t sub_100187550(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001847EC(a1, a2, a3, a4, (uint64_t)&unk_1003BA8D8, (uint64_t)&unk_1003BA900);
}

void sub_100187574()
{
  uint64_t v0;

  sub_1001866C8(v0);
}

void sub_100187580()
{
  uint64_t v0;

  sub_1001865B0(v0);
}

uint64_t sub_10018758C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001875C0(uint64_t a1)
{
  uint64_t v1;

  return sub_100186750(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(void (**)(__n128))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1001875E0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[4])
    swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_100187614(uint64_t a1)
{
  uint64_t v1;

  sub_10018648C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(void (**)(__n128))(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_100187624(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003BA920);
  v5 = swift_getKeyPath(&unk_1003BA948);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_1001876A4(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003BA920);
  v5 = swift_getKeyPath(&unk_1003BA948);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

double sub_100187714@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100184760(a1, (uint64_t)&unk_1003BA968, (uint64_t)&unk_1003BA990, a2);
}

uint64_t sub_100187738(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001847EC(a1, a2, a3, a4, (uint64_t)&unk_1003BA968, (uint64_t)&unk_1003BA990);
}

void sub_10018775C(double *a1)
{
  uint64_t v1;

  sub_1001859E4(a1, v1);
}

unint64_t sub_100187764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100487ED0;
  if (!qword_100487ED0)
  {
    v1 = sub_100012B80((uint64_t *)&unk_100487EC0);
    result = swift_getWitnessTable(&protocol conformance descriptor for Published<A>.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_100487ED0);
  }
  return result;
}

uint64_t sub_1001877B0()
{
  void *v0;
  uint64_t KeyPath;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  uint64_t result;
  char v13;
  uint64_t v14;

  KeyPath = swift_getKeyPath(&unk_1003BA890);
  v2 = swift_getKeyPath(&unk_1003BA8B8);
  static Published.subscript.getter(&v14, v0, KeyPath, v2);
  swift_release();
  swift_release();
  v3 = v14;
  v4 = swift_getKeyPath(&unk_1003BA890);
  v5 = swift_getKeyPath(&unk_1003BA8B8);
  v13 = v3;
  v6 = v0;
  static Published.subscript.setter(&v13, v6, v4, v5);
  sub_100184D4C();
  v7 = &v6[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = &v6[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR____TtC7Measure23CardContainerController_otherGesture], v9);
  if (Strong)
  {
    v11 = Strong;
    objc_msgSend(Strong, "setEnabled:", 1);

  }
  result = swift_unknownObjectWeakAssign(v8, 0);
  v6[OBJC_IVAR____TtC7Measure23CardContainerController_isPanningCard] = 0;
  return result;
}

id sub_1001878CC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  id result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(a1);
  v3 = sub_10000EDC8(&qword_100487ED8);
  v4 = String.init<A>(describing:)(&ObjectType, v3);
  v6 = v5;
  if (v4 == 0xD000000000000020 && v5 == 0x80000001003E4050)
  {
    v7 = swift_bridgeObjectRelease(0x80000001003E4050).n128_u64[0];
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000020, 0x80000001003E4050, 0);
    v7 = swift_bridgeObjectRelease(v6).n128_u64[0];
    result = 0;
    if ((v8 & 1) == 0)
      return result;
  }
  result = objc_msgSend(a1, "view", *(double *)&v7);
  if (result)
  {
    v10 = result;
    v11 = objc_opt_self(UIScrollView);
    v12 = swift_dynamicCastObjCClass(v10, v11);
    if (!v12)
      goto LABEL_10;
    v13 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
    v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
    if (*(_BYTE *)(v14 + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) != 1)
      goto LABEL_10;
    v15 = v12;
    result = (id)swift_unknownObjectUnownedLoadStrong(v14 + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
    if (result)
    {
      v16 = result;

      if ((id)v15 != v16)
      {
LABEL_10:

        return 0;
      }
      result = (id)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v1 + v13) + OBJC_IVAR____TtC7Measure17CardContainerView_scrollView);
      if (result)
      {
        v17 = result;
        objc_msgSend(result, "contentOffset");
        v19 = v18;

        return (id)(v19 <= 0.0);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100187A68(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t KeyPath;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  char v19;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(a1);
  v3 = sub_10000EDC8(&qword_100487ED8);
  v4 = String.init<A>(describing:)(&ObjectType, v3);
  v6 = v5;
  if (v4 == 0xD000000000000022 && v5 == 0x80000001003E4020)
  {
    v7 = swift_bridgeObjectRelease(0x80000001003E4020).n128_u64[0];
    v8 = 1;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000022, 0x80000001003E4020, 0);
    v7 = swift_bridgeObjectRelease(v6).n128_u64[0];
  }
  result = (uint64_t)objc_msgSend(a1, "view", *(double *)&v7);
  if (result)
  {
    v10 = (void *)result;
    v11 = objc_opt_self(UIScrollView);
    v12 = swift_dynamicCastObjCClass(v10, v11);
    if (v12 && (v8 & 1) == 0)
    {
      v13 = (void *)v12;
      KeyPath = swift_getKeyPath(&unk_1003BA890);
      v15 = swift_getKeyPath(&unk_1003BA8B8);
      static Published.subscript.getter(&v19, v1, KeyPath, v15);
      swift_release();
      *(_QWORD *)&v16 = swift_release().n128_u64[0];
      if (v19)
      {

        return 1;
      }
      else
      {
        objc_msgSend(v13, "contentOffset", v16);
        v18 = v17;

        return v18 < 0.0;
      }
    }
    else
    {

      return 0;
    }
  }
  return result;
}

double sub_100187C28()
{
  double result;

  if (qword_10047A780 != -1)
    swift_once(&qword_10047A780, sub_10000EF6C);
  result = *(double *)&qword_1004AF0B8;
  qword_1004AF870 = 0x4051000000000000;
  qword_1004AF878 = qword_1004AF0B8;
  return result;
}

__n128 sub_100187C7C()
{
  __n128 result;

  __asm { FMOV            V0.2D, #30.0 }
  xmmword_1004AF880 = (__int128)result;
  return result;
}

id sub_100187C8C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  qword_100487EE0 = (uint64_t)result;
  return result;
}

id sub_100187CC4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0, 0.1875, 0.55859375, 1.0);
  qword_100487EE8 = (uint64_t)result;
  return result;
}

void sub_100187D0C()
{
  char *v0;
  double v1;
  double v2;
  char *v3;
  char *v4;
  double *v5;
  id v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  void (**v11)();
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (**v15)();
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  id v20;
  NSString v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  NSString v26;
  id v27;
  id v28;
  _QWORD v29[6];
  objc_super v30;

  if (qword_10047AD68 != -1)
    swift_once(&qword_10047AD68, sub_100187C28);
  v1 = *(double *)&qword_1004AF870;
  v2 = *(double *)&qword_1004AF878;
  v3 = &v0[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_touchDownCallback];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = &v0[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_touchUpCallback];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_fadeOutAnimator] = 0;
  v5 = (double *)&v0[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_size];
  *v5 = v1;
  v5[1] = v2;
  v30.receiver = v0;
  v30.super_class = (Class)type metadata accessor for SpatialPlatterTitleButton();
  v6 = objc_msgSendSuper2(&v30, "initWithFrame:", 0.0, 0.0, v1, v2);
  objc_msgSend(v6, "addTarget:action:forControlEvents:", v6, "onButtonTouchDown", 1);
  objc_msgSend(v6, "addTarget:action:forControlEvents:", v6, "onButtonTouchUp", 360);
  v7 = swift_allocObject(&unk_10044A4D0, 24, 7);
  *(_QWORD *)(v7 + 16) = v6;
  v29[4] = sub_100188328;
  v29[5] = v7;
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 1107296256;
  v29[2] = sub_1001994A4;
  v29[3] = &unk_10044A4E8;
  v8 = _Block_copy(v29);
  v9 = (char *)v6;
  objc_msgSend(v9, "setPointerStyleProvider:", v8, swift_release().n128_f64[0]);
  _Block_release(v8);

  v10 = swift_allocObject(&unk_10044A520, 24, 7);
  swift_unknownObjectUnownedInit(v10 + 16, v9);
  v11 = (void (**)())&v9[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_touchDownCallback];
  v12 = *(_QWORD *)&v9[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_touchDownCallback];
  v13 = *(_QWORD *)&v9[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_touchDownCallback + 8];
  *v11 = sub_10018836C;
  v11[1] = (void (*)())v10;
  sub_1000217BC(v12, v13);
  v14 = swift_allocObject(&unk_10044A520, 24, 7);
  swift_unknownObjectUnownedInit(v14 + 16, v9);
  v15 = (void (**)())&v9[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_touchUpCallback];
  v16 = *(_QWORD *)&v9[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_touchUpCallback];
  v17 = *(_QWORD *)&v9[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_touchUpCallback + 8];
  *v15 = sub_10018839C;
  v15[1] = (void (*)())v14;
  sub_1000217BC(v16, v17);
  v18 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 4, 3, 17.0);
  v19 = v9;
  v20 = v18;
  v21 = String._bridgeToObjectiveC()();
  v22 = (void *)objc_opt_self(UIImage);
  v23 = objc_msgSend(v22, "systemImageNamed:withConfiguration:", v21, v20);

  if (v23)
  {
    if (qword_10047AD78 != -1)
      swift_once(&qword_10047AD78, sub_100187C8C);
    v24 = objc_msgSend(v23, "imageWithTintColor:", qword_100487EE0);

    objc_msgSend(v19, "setImage:forState:", v24, 0);
    v25 = v20;
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v22, "systemImageNamed:withConfiguration:", v26, v25);

    if (v27)
    {
      v28 = objc_msgSend(v27, "imageWithTintColor:", qword_100487EE0);

      objc_msgSend(v19, "setImage:forState:", v28, 1);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1001880EC(uint64_t a1, int a2, int a3, id a4)
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id v12;
  id v13;
  id v14;

  objc_msgSend(a4, "center");
  v7 = CGRect.init(center:size:)(v5, v6, 51.0, 37.0);
  v11 = objc_msgSend((id)objc_opt_self(UIPointerShape), "shapeWithRoundedRect:", v7, v8, v9, v10);
  v12 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:", a1);
  v13 = objc_msgSend((id)objc_opt_self(UIPointerHighlightEffect), "effectWithPreview:", v12);

  v14 = objc_msgSend((id)objc_opt_self(UIPointerStyle), "styleWithEffect:shape:", v13, v11);
  return v14;
}

void sub_100188214(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4)
{
  void *Strong;
  id v8;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a1 + 16);
  v8 = Strong;
  if (*a2 != -1)
  {
    swift_once(a2, a4);
    Strong = v8;
  }
  objc_msgSend(Strong, "setTintColor:", *a3);

}

uint64_t type metadata accessor for ShareButton()
{
  return objc_opt_self(_TtC7Measure11ShareButton);
}

uint64_t sub_100188304()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100188328(uint64_t a1, int a2, int a3)
{
  uint64_t v3;

  return sub_1001880EC(a1, a2, a3, *(id *)(v3 + 16));
}

uint64_t sub_100188330(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100188340(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100188348()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10018836C()
{
  uint64_t v0;

  sub_100188214(v0, &qword_10047AD80, &qword_100487EE8, (uint64_t)sub_100187CC4);
}

void sub_10018839C()
{
  uint64_t v0;

  sub_100188214(v0, &qword_10047AD78, &qword_100487EE0, (uint64_t)sub_100187C8C);
}

_QWORD *sub_1001883CC()
{
  uint64_t v0;
  _QWORD *result;

  v0 = type metadata accessor for State();
  swift_allocObject(v0, 304, 7);
  result = sub_100188524();
  qword_1004AF890 = (uint64_t)result;
  return result;
}

uint64_t sub_100188404()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10018840C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 24));
}

uint64_t sub_100188414()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 32));
}

uint64_t sub_10018841C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 40));
}

uint64_t sub_100188424()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 48));
}

uint64_t sub_10018842C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 56));
}

uint64_t sub_100188434()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 64));
}

uint64_t sub_10018843C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 72));
}

uint64_t sub_100188444()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 80));
}

uint64_t sub_10018844C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 88));
}

uint64_t sub_100188454()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 96));
}

uint64_t sub_10018845C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 104));
}

uint64_t sub_100188464()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 112));
}

uint64_t sub_10018846C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 120));
}

uint64_t sub_100188474()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 128));
}

uint64_t sub_10018847C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 136));
}

uint64_t sub_100188484()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 144));
}

uint64_t sub_10018848C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 152));
}

uint64_t sub_100188494()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 160));
}

uint64_t sub_10018849C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 168));
}

uint64_t sub_1001884A4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 176));
}

uint64_t sub_1001884AC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 184));
}

uint64_t sub_1001884B4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 192));
}

uint64_t sub_1001884BC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 200));
}

uint64_t sub_1001884C4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 208));
}

uint64_t sub_1001884CC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 216));
}

uint64_t sub_1001884D4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 224));
}

uint64_t sub_1001884DC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 232));
}

uint64_t sub_1001884E4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 240));
}

uint64_t sub_1001884EC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 248));
}

uint64_t sub_1001884F4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 256));
}

uint64_t sub_1001884FC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 264));
}

uint64_t sub_100188504()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 272));
}

uint64_t sub_10018850C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 280));
}

uint64_t sub_100188514()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 288));
}

uint64_t sub_10018851C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 296));
}

_QWORD *sub_100188524()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD v69[33];
  char v70;
  __int16 v71;
  _QWORD v72[60];
  _BYTE v73[493];
  __int16 v74;
  char v75;
  char v76;
  _BYTE v77[15];
  char v78;
  _BYTE v79[144];
  _OWORD v80[8];
  unint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char v84;
  _BYTE v85[7];
  char v86;
  _BYTE v87[7];
  char v88;
  __int16 v89;
  char v90;
  char v91;
  __int16 v92;
  char v93;
  char v94;
  __int16 v95;
  char v96;
  char v97;
  _BYTE v98[7];
  char v99;
  _BYTE v100[7];
  char v101;
  _BYTE v102[15];
  char v103;
  _BYTE v104[15];
  char v105;
  _BYTE v106[7];
  char v107;
  _BYTE v108[7];
  char v109;
  _BYTE v110[7];
  char v111;
  _BYTE v112[7];
  char v113;
  _BYTE v114[7];
  char v115;
  int v116;
  char v117;

  v1 = v0;
  v66 = type metadata accessor for MeasurementsHistory(0);
  v2 = ((uint64_t (*)(void))__chkstk_darwin)();
  v67 = (uint64_t)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v65 = (_QWORD **)((char *)&v65 - v4);
  v5 = type metadata accessor for SessionState(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (_QWORD **)((char *)&v65 - v9);
  v11 = sub_1000914E8();
  *(_QWORD *)&v69[0] = OrderedDictionary.init()(&type metadata for UserInputs.Type, &type metadata for Int, v11);
  *((_QWORD *)&v69[0] + 1) = v12;
  v69[1] = v13;
  LODWORD(v69[2]) = 1106247680;
  *(_OWORD *)((char *)&v69[2] + 8) = 0u;
  v14 = sub_10000EDC8(&qword_1004880D0);
  swift_allocObject(v14, 48, 7);
  v0[2] = PublishedValue.init(wrappedValue:)(v69);
  *(_QWORD *)&v69[0] = sub_1001C7A68();
  *((_QWORD *)&v69[0] + 1) = v15;
  *(_QWORD *)&v69[1] = v16;
  v17 = sub_10000EDC8(&qword_1004880D8);
  swift_allocObject(v17, 48, 7);
  v0[3] = PublishedValue.init(wrappedValue:)(v69);
  *(_QWORD *)&v69[0] = 0xC000000000000000;
  v18 = sub_10000EDC8(&qword_1004880E0);
  swift_allocObject(v18, 48, 7);
  v0[4] = PublishedValue.init(wrappedValue:)(v69);
  *(_QWORD *)&v69[0] = _swiftEmptyArrayStorage;
  v19 = sub_10000EDC8(&qword_1004880E8);
  swift_allocObject(v19, 48, 7);
  v0[5] = PublishedValue.init(wrappedValue:)(v69);
  LOBYTE(v69[0]) = 0;
  v20 = sub_10000EDC8(&qword_1004880F0);
  swift_allocObject(v20, 48, 7);
  v0[6] = PublishedValue.init(wrappedValue:)(v69);
  LOBYTE(v69[0]) = 2;
  *(_DWORD *)((char *)v69 + 1) = 0;
  v21 = sub_10000EDC8(&qword_1004880F8);
  swift_allocObject(v21, 48, 7);
  v0[7] = PublishedValue.init(wrappedValue:)(v69);
  *v10 = 0;
  v22 = (char *)v10 + *(int *)(v5 + 20);
  v23 = type metadata accessor for ARCamera.TrackingState.Reason(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 2, v23);
  sub_100036344((uint64_t)v10, (uint64_t)v8, type metadata accessor for SessionState);
  v24 = sub_10000EDC8(&qword_100488100);
  swift_allocObject(v24, 48, 7);
  v25 = PublishedValue.init(wrappedValue:)(v8);
  sub_1000258F8((uint64_t)v10, type metadata accessor for SessionState);
  v1[8] = v25;
  memset(v69, 0, 32);
  v26 = sub_10000EDC8(&qword_100488108);
  swift_allocObject(v26, 48, 7);
  v1[9] = PublishedValue.init(wrappedValue:)(v69);
  ComputedCameraProperties.init()(v72);
  memcpy(&v73[8], v72, 0x1E0uLL);
  *(_QWORD *)&v69[0] = 0;
  *((_QWORD *)&v69[0] + 1) = 0xBFF0000000000000;
  *(_QWORD *)&v69[1] = 0;
  memcpy((char *)&v69[1] + 8, v73, 0x1E8uLL);
  v27 = sub_10000EDC8(&qword_100488110);
  swift_allocObject(v27, 48, 7);
  v1[10] = PublishedValue.init(wrappedValue:)(v69);
  ComputedCameraProperties.init()(&v69[1]);
  v69[0] = 0u;
  *(_QWORD *)&v69[31] = 0;
  v28 = sub_10000EDC8(&qword_100488118);
  swift_allocObject(v28, 48, 7);
  v1[11] = PublishedValue.init(wrappedValue:)(v69);
  memset(v69, 0, 64);
  LOBYTE(v69[4]) = 1;
  DWORD1(v69[4]) = 0;
  BYTE8(v69[4]) = 1;
  v69[5] = 0u;
  LOBYTE(v69[6]) = 1;
  DWORD1(v69[6]) = 0;
  BYTE8(v69[6]) = 1;
  HIDWORD(v69[6]) = 0;
  LOBYTE(v69[7]) = 1;
  v29 = sub_10000EDC8(&qword_100488120);
  swift_allocObject(v29, 48, 7);
  v1[12] = PublishedValue.init(wrappedValue:)(v69);
  *(_QWORD *)&v69[0] = 0;
  v30 = sub_10000EDC8(&qword_100488128);
  swift_allocObject(v30, 48, 7);
  v1[13] = PublishedValue.init(wrappedValue:)(v69);
  v69[0] = xmmword_1003BA9E0;
  memset(&v69[1], 0, 32);
  v31 = sub_10000EDC8(&qword_100488130);
  swift_allocObject(v31, 48, 7);
  v1[14] = PublishedValue.init(wrappedValue:)(v69);
  LOBYTE(v69[0]) = 0;
  v32 = sub_10000EDC8(&qword_100488138);
  swift_allocObject(v32, 48, 7);
  v1[15] = PublishedValue.init(wrappedValue:)(v69);
  LOBYTE(v69[0]) = 5;
  v33 = sub_10000EDC8(&qword_100488140);
  swift_allocObject(v33, 48, 7);
  v1[16] = PublishedValue.init(wrappedValue:)(v69);
  LOBYTE(v69[0]) = 0;
  v34 = sub_10000EDC8(&qword_100488148);
  swift_allocObject(v34, 48, 7);
  v1[17] = PublishedValue.init(wrappedValue:)(v69);
  LODWORD(v69[0]) = 0;
  v35 = sub_10000EDC8(&qword_100488150);
  swift_allocObject(v35, 48, 7);
  v1[18] = PublishedValue.init(wrappedValue:)(v69);
  LOBYTE(v69[0]) = 2;
  v36 = sub_10000EDC8(&qword_100488158);
  swift_allocObject(v36, 48, 7);
  v1[19] = PublishedValue.init(wrappedValue:)(v69);
  v37 = sub_10000EDC8(&qword_100488160);
  v38 = swift_allocObject(v37, 48, 7);
  v1[20] = PublishedValue.init(wrappedValue:)(v38);
  *(_QWORD *)&v69[0] = 0;
  v39 = sub_10000EDC8(&qword_100488168);
  swift_allocObject(v39, 48, 7);
  v1[21] = PublishedValue.init(wrappedValue:)(v69);
  LOBYTE(v69[0]) = 0;
  *(_OWORD *)((char *)v69 + 8) = 0u;
  *(_OWORD *)((char *)&v69[1] + 8) = 0u;
  BYTE8(v69[2]) = 1;
  v40 = sub_10000EDC8(&qword_100488170);
  swift_allocObject(v40, 48, 7);
  v1[22] = PublishedValue.init(wrappedValue:)(v69);
  v78 = 1;
  v76 = 1;
  v73[488] = 1;
  memset(v69, 0, 64);
  LOBYTE(v69[4]) = 1;
  *(_QWORD *)((char *)&v69[4] + 1) = *(_QWORD *)v77;
  *((_QWORD *)&v69[4] + 1) = *(_QWORD *)&v77[7];
  memset(&v69[5], 0, 64);
  LOBYTE(v69[9]) = 1;
  BYTE3(v69[9]) = v75;
  *(_WORD *)((char *)&v69[9] + 1) = v74;
  DWORD1(v69[9]) = 0;
  BYTE8(v69[9]) = 1;
  v41 = sub_10000EDC8(&qword_100488178);
  swift_allocObject(v41, 48, 7);
  v1[23] = PublishedValue.init(wrappedValue:)(v69);
  v69[0] = 0u;
  v42 = sub_10000EDC8(&qword_100488180);
  swift_allocObject(v42, 48, 7);
  v1[24] = PublishedValue.init(wrappedValue:)(v69);
  *(_QWORD *)&v69[0] = _swiftEmptyArrayStorage;
  *((_QWORD *)&v69[0] + 1) = _swiftEmptyArrayStorage;
  *(_QWORD *)&v69[1] = _swiftEmptyArrayStorage;
  v43 = sub_10000EDC8(&qword_100488188);
  swift_allocObject(v43, 48, 7);
  v1[25] = PublishedValue.init(wrappedValue:)(v69);
  sub_100047238((uint64_t)v79);
  sub_100031ED4((uint64_t)v79, (uint64_t)v80);
  v82 = 0;
  v83 = _swiftEmptyArrayStorage;
  v69[6] = v80[6];
  v69[7] = v80[7];
  v69[8] = v81;
  *(_QWORD *)&v69[9] = _swiftEmptyArrayStorage;
  v69[2] = v80[2];
  v69[3] = v80[3];
  v69[4] = v80[4];
  v69[5] = v80[5];
  v69[0] = v80[0];
  v69[1] = v80[1];
  v44 = sub_10000EDC8(&qword_100488190);
  swift_allocObject(v44, 48, 7);
  v1[26] = PublishedValue.init(wrappedValue:)(v69);
  v115 = 1;
  v113 = 1;
  v111 = 1;
  v109 = 1;
  v107 = 1;
  v105 = 1;
  v103 = 1;
  v101 = 1;
  v99 = 1;
  v97 = 1;
  v94 = 1;
  v91 = 1;
  v88 = 1;
  v86 = 1;
  v84 = 1;
  LOWORD(v69[0]) = 1;
  BYTE2(v69[0]) = 0;
  *(_DWORD *)((char *)v69 + 3) = v116;
  BYTE7(v69[0]) = v117;
  *((_QWORD *)&v69[0] + 1) = 0;
  *(_QWORD *)&v69[1] = 0;
  BYTE8(v69[1]) = 1;
  *(_DWORD *)((char *)&v69[1] + 9) = *(_DWORD *)v114;
  HIDWORD(v69[1]) = *(_DWORD *)&v114[3];
  v69[2] = 0u;
  LOBYTE(v69[3]) = 1;
  DWORD1(v69[3]) = *(_DWORD *)&v112[3];
  *(_DWORD *)((char *)&v69[3] + 1) = *(_DWORD *)v112;
  *(_OWORD *)((char *)&v69[3] + 8) = 0u;
  BYTE8(v69[4]) = 1;
  HIDWORD(v69[4]) = *(_DWORD *)&v110[3];
  *(_DWORD *)((char *)&v69[4] + 9) = *(_DWORD *)v110;
  v69[5] = 0u;
  LOBYTE(v69[6]) = 1;
  DWORD1(v69[6]) = *(_DWORD *)&v108[3];
  *(_DWORD *)((char *)&v69[6] + 1) = *(_DWORD *)v108;
  *(_OWORD *)((char *)&v69[6] + 8) = 0u;
  BYTE8(v69[7]) = 1;
  HIDWORD(v69[7]) = *(_DWORD *)&v106[3];
  *(_DWORD *)((char *)&v69[7] + 9) = *(_DWORD *)v106;
  memset(&v69[8], 0, 64);
  LOBYTE(v69[12]) = 1;
  *((_QWORD *)&v69[12] + 1) = *(_QWORD *)&v104[7];
  *(_QWORD *)((char *)&v69[12] + 1) = *(_QWORD *)v104;
  memset(&v69[13], 0, 64);
  LOBYTE(v69[17]) = 1;
  *(_QWORD *)((char *)&v69[17] + 1) = *(_QWORD *)v102;
  *((_QWORD *)&v69[17] + 1) = *(_QWORD *)&v102[7];
  memset(&v69[18], 0, 64);
  LOBYTE(v69[22]) = 1;
  *(_DWORD *)((char *)&v69[22] + 1) = *(_DWORD *)v100;
  DWORD1(v69[22]) = *(_DWORD *)&v100[3];
  *(_OWORD *)((char *)&v69[22] + 8) = 0u;
  *(_OWORD *)((char *)&v69[23] + 8) = 0u;
  BYTE8(v69[24]) = 1;
  *(_DWORD *)((char *)&v69[24] + 9) = *(_DWORD *)v98;
  HIDWORD(v69[24]) = *(_DWORD *)&v98[3];
  memset(&v69[25], 0, 32);
  LOBYTE(v69[27]) = 1;
  *(_WORD *)((char *)&v69[27] + 1) = v95;
  BYTE3(v69[27]) = v96;
  DWORD1(v69[27]) = 0;
  BYTE8(v69[27]) = 1;
  *(_WORD *)((char *)&v69[27] + 9) = v92;
  BYTE11(v69[27]) = v93;
  HIDWORD(v69[27]) = 0;
  LOBYTE(v69[28]) = 1;
  *(_WORD *)((char *)&v69[28] + 1) = v89;
  BYTE3(v69[28]) = v90;
  DWORD1(v69[28]) = 0;
  BYTE8(v69[28]) = 1;
  *(_DWORD *)((char *)&v69[28] + 9) = *(_DWORD *)v87;
  HIDWORD(v69[28]) = *(_DWORD *)&v87[3];
  v69[29] = 0u;
  LOBYTE(v69[30]) = 1;
  *(_DWORD *)((char *)&v69[30] + 1) = *(_DWORD *)v85;
  DWORD1(v69[30]) = *(_DWORD *)&v85[3];
  *(_OWORD *)((char *)&v69[30] + 8) = 0u;
  v69[32] = 0u;
  v70 = 1;
  v71 = 2;
  v45 = sub_10000EDC8(&qword_100488198);
  swift_allocObject(v45, 48, 7);
  v1[27] = PublishedValue.init(wrappedValue:)(v69);
  LOBYTE(v69[0]) = 0;
  v46 = sub_10000EDC8(&qword_1004881A0);
  swift_allocObject(v46, 48, 7);
  v1[28] = PublishedValue.init(wrappedValue:)(v69);
  sub_10004A394((uint64_t)v69);
  v47 = sub_10000EDC8(&qword_1004881A8);
  swift_allocObject(v47, 48, 7);
  v1[29] = PublishedValue.init(wrappedValue:)(v69);
  v48 = (uint64_t)v65;
  v49 = v66;
  *v65 = _swiftEmptyArrayStorage;
  v50 = v48 + *(int *)(v49 + 20);
  v51 = type metadata accessor for MeasurementHistoryItem(0);
  v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56);
  v52(v50, 1, 1, v51);
  v52(v48 + *(int *)(v49 + 24), 1, 1, v51);
  v53 = v67;
  sub_100036344(v48, v67, type metadata accessor for MeasurementsHistory);
  v54 = sub_10000EDC8(&qword_1004881B0);
  swift_allocObject(v54, 48, 7);
  v55 = PublishedValue.init(wrappedValue:)(v53);
  sub_1000258F8(v48, type metadata accessor for MeasurementsHistory);
  v1[30] = v55;
  *(_QWORD *)&v69[0] = 0;
  v56 = sub_10000EDC8(&qword_1004881B8);
  swift_allocObject(v56, 48, 7);
  v1[31] = PublishedValue.init(wrappedValue:)(v69);
  *(_QWORD *)&v69[0] = 0;
  WORD4(v69[0]) = 0;
  v57 = sub_10000EDC8(&qword_1004881C0);
  swift_allocObject(v57, 48, 7);
  v1[32] = PublishedValue.init(wrappedValue:)(v69);
  *(_QWORD *)&v69[0] = &_swiftEmptySetSingleton;
  v58 = sub_10000EDC8(&qword_1004881C8);
  swift_allocObject(v58, 48, 7);
  v1[33] = PublishedValue.init(wrappedValue:)(v69);
  LOWORD(v69[0]) = 0;
  BYTE2(v69[0]) = 0;
  v59 = sub_10000EDC8(&qword_1004881D0);
  swift_allocObject(v59, 48, 7);
  v1[34] = PublishedValue.init(wrappedValue:)(v69);
  memset(v69, 0, 32);
  LOBYTE(v69[2]) = 1;
  v60 = sub_10000EDC8(&qword_1004881D8);
  swift_allocObject(v60, 48, 7);
  v1[35] = PublishedValue.init(wrappedValue:)(v69);
  *(_QWORD *)&v69[0] = &_swiftEmptySetSingleton;
  v61 = sub_10000EDC8(&qword_1004881E0);
  swift_allocObject(v61, 48, 7);
  v1[36] = PublishedValue.init(wrappedValue:)(v69);
  swift_unknownObjectWeakInit(&v68, 0);
  sub_1001892EC((uint64_t)&v68, (uint64_t)v69);
  sub_100189328((uint64_t)v69, (uint64_t)&v68);
  v62 = sub_10000EDC8(&qword_1004881E8);
  swift_allocObject(v62, 48, 7);
  v63 = PublishedValue.init(wrappedValue:)(&v68);
  sub_100189364((uint64_t)v69);
  v1[37] = v63;
  return v1;
}

_QWORD *sub_100189138()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[8]);
  swift_release(v0[9]);
  swift_release(v0[10]);
  swift_release(v0[11]);
  swift_release(v0[12]);
  swift_release(v0[13]);
  swift_release(v0[14]);
  swift_release(v0[15]);
  swift_release(v0[16]);
  swift_release(v0[17]);
  swift_release(v0[18]);
  swift_release(v0[19]);
  swift_release(v0[20]);
  swift_release(v0[21]);
  swift_release(v0[22]);
  swift_release(v0[23]);
  swift_release(v0[24]);
  swift_release(v0[25]);
  swift_release(v0[26]);
  swift_release(v0[27]);
  swift_release(v0[28]);
  swift_release(v0[29]);
  swift_release(v0[30]);
  swift_release(v0[31]);
  swift_release(v0[32]);
  swift_release(v0[33]);
  swift_release(v0[34]);
  swift_release(v0[35]);
  swift_release(v0[36]);
  swift_release(v0[37]);
  return v0;
}

uint64_t sub_10018926C()
{
  uint64_t v0;

  sub_100189138();
  return swift_deallocClassInstance(v0, 304, 7);
}

uint64_t type metadata accessor for State()
{
  return objc_opt_self(_TtC7Measure5State);
}

double sub_1001892AC()
{
  double result;

  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_1001892EC(uint64_t a1, uint64_t a2)
{
  initializeWithTake for CurrentPlatterOnScreenState(a2, a1);
  return a2;
}

uint64_t sub_100189328(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CurrentPlatterOnScreenState(a2, a1);
  return a2;
}

uint64_t sub_100189364(uint64_t a1)
{
  destroy for CurrentPlatterOnScreenState();
  return a1;
}

uint64_t sub_100189398(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = "(";
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 96);
}

uint64_t sub_1001893E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + qword_1004881F0);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*sub_100189434(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + qword_1004881F0, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_100189478@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + qword_1004881F8;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100026E60(v3, a1);
}

double sub_1001894C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + qword_1004881F8;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100026E18(a1, v3);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_100189520(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + qword_1004881F8, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_100189564()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000012, 0x80000001003D8C90, "Measure/StateObservingView.swift", 32, 2, 62, 0);
  __break(1u);
}

id sub_1001895BC(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  id v16;
  objc_super v18;

  v13 = swift_isaMask & *v8;
  *(_QWORD *)((char *)v8 + qword_1004881F0) = _swiftEmptyArrayStorage;
  v14 = (char *)v8 + qword_1004881F8;
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((_QWORD *)v14 + 4) = 0;
  v15 = (objc_class *)type metadata accessor for StateObservingView(0, *(_QWORD *)(v13 + 80), *(_QWORD *)(v13 + 88), a8);
  v18.receiver = v8;
  v18.super_class = v15;
  v16 = objc_msgSendSuper2(&v18, "initWithFrame:", a1, a2, a3, a4);
  swift_getWitnessTable(&unk_1003BAB88, v15);
  StateObserving.setup()();

  return v16;
}

id sub_10018969C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  return sub_1001895BC(a5, a6, a7, a8, a1, a2, a3, a4);
}

void sub_1001896BC()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[qword_1004881F0] = _swiftEmptyArrayStorage;
  v1 = &v0[qword_1004881F8];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x80000001003D8CB0, "Measure/StateObservingView.swift", 32, 2, 54, 0);
  __break(1u);
}

void sub_100189744()
{
  sub_1001896BC();
}

void sub_100189764(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_100189920();
}

id sub_100189788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for StateObservingView(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t sub_1001897D4(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1004881F0));
  return sub_100026F30(a1 + qword_1004881F8);
}

uint64_t type metadata accessor for StateObservingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100026F70(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateObservingView);
}

void (*sub_100189820(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100189520((uint64_t)v2);
  return sub_100026CF0;
}

double sub_100189864()
{
  uint64_t v0;
  double result;

  v0 = sub_1001898DC();
  *(_QWORD *)&result = swift_bridgeObjectRetain(v0).n128_u64[0];
  return result;
}

void (*sub_10018987C(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100189434((uint64_t)v2);
  return sub_100026CF0;
}

uint64_t sub_1001898C0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB0))();
}

uint64_t sub_1001898DC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + qword_1004881F0;
  swift_beginAccess(v0 + qword_1004881F0, v3, 0, 0);
  return *(_QWORD *)v1;
}

void sub_100189920()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[qword_1004881F0] = _swiftEmptyArrayStorage;
  v1 = &v0[qword_1004881F8];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003D8190, "Measure/StateObservingView.swift", 32, 2, 58, 0);
  __break(1u);
}

_QWORD *sub_1001899A8(double a1, double a2, double a3, double a4)
{
  void *v4;
  _QWORD *v9;
  NSString v10;
  NSString v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  _QWORD v22[6];
  objc_super v23;
  CGRect v24;
  CGRect v25;

  v23.receiver = v4;
  v23.super_class = (Class)swift_getObjectType(v4);
  v9 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setTitle:forState:", v10, 0);

  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setTitle:forState:", v11, 1);

  v12 = objc_msgSend(v9, "titleLabel");
  if (!v12)
    goto LABEL_4;
  v13 = v12;
  if (qword_10047AFD8 != -1)
    goto LABEL_9;
  while (1)
  {
    objc_msgSend(v13, "setFont:", qword_1004AFAF0);

LABEL_4:
    v14 = qword_10047AFE0;
    v15 = v9;
    if (v14 != -1)
      swift_once(&qword_10047AFE0, sub_100196994);
    objc_msgSend(v15, "setTitleColor:forState:", qword_1004AFAF8, 0);

    objc_msgSend(v15, "addTarget:action:forControlEvents:", v15, "stopRecording", 64);
    objc_msgSend(v15, "sizeToFit");
    v16 = v15;
    objc_msgSend(v16, "bounds");
    v25 = CGRectInset(v24, -20.0, -20.0);
    objc_msgSend(v16, "setBounds:", v25.origin.x, v25.origin.y, v25.size.width, v25.size.height);

    v17 = objc_opt_self(UIView);
    v9 = (_QWORD *)swift_allocObject(&unk_10044A688, 24, 7);
    v9[2] = v16;
    v18 = swift_allocObject(&unk_10044A6B0, 32, 7);
    *(_QWORD *)(v18 + 16) = sub_10018A418;
    *(_QWORD *)(v18 + 24) = v9;
    v22[4] = sub_100030C24;
    v22[5] = v18;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 1107296256;
    v22[2] = sub_1000DDB80;
    v22[3] = &unk_10044A6C8;
    v19 = _Block_copy(v22);
    v13 = v16;
    swift_retain();
    objc_msgSend((id)v17, "performWithoutAnimation:", v19, swift_release().n128_f64[0]);
    _Block_release(v19);
    LOBYTE(v17) = swift_isEscapingClosureAtFileLocation(v18, "", 99, 25, 40, 1);
    swift_release();
    if ((v17 & 1) == 0)
      break;
    __break(1u);
LABEL_9:
    swift_once(&qword_10047AFD8, sub_10019694C);
  }
  v20 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v20, "addObserver:selector:name:object:", v13, "updateForCurrentOrientation", UIDeviceOrientationDidChangeNotification, 0);
  swift_release();

  return v13;
}

void sub_100189D08(void *a1)
{
  id v2;
  double Width;
  double v4;
  double v5;
  double Height;
  double v7;
  double v8;
  id v9;
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;

  v2 = objc_msgSend(a1, "superview");
  if (v2)
  {
    v9 = v2;
    objc_msgSend(v2, "bounds");
    Width = CGRectGetWidth(v10);
    objc_msgSend(a1, "bounds");
    v4 = Width - CGRectGetWidth(v11);
    if (qword_10047AFE8 != -1)
      swift_once(&qword_10047AFE8, sub_1001969A8);
    v5 = v4 - (double)qword_1004AFB00;
    objc_msgSend(v9, "bounds");
    Height = CGRectGetHeight(v12);
    objc_msgSend(a1, "bounds");
    v7 = Height - CGRectGetHeight(v13);
    if (qword_10047AFF0 != -1)
      swift_once(&qword_10047AFF0, sub_100196A24);
    v8 = v7 - (double)qword_1004AFB08;
    objc_msgSend(a1, "frame");
    objc_msgSend(a1, "setFrame:", v5, v8);

  }
}

void sub_100189E50()
{
  void *v0;
  id v1;
  double Width;
  double v3;
  double v4;
  double Height;
  double v6;
  double v7;
  id v8;
  CGRect v9;
  CGRect v10;
  CGRect v11;
  CGRect v12;

  v1 = objc_msgSend(v0, "superview");
  if (v1)
  {
    v8 = v1;
    objc_msgSend(v1, "bounds");
    Width = CGRectGetWidth(v9);
    objc_msgSend(v0, "bounds");
    v3 = Width - CGRectGetWidth(v10);
    if (qword_10047AFE8 != -1)
      swift_once(&qword_10047AFE8, sub_1001969A8);
    v4 = v3 - (double)qword_1004AFB00;
    objc_msgSend(v8, "bounds");
    Height = CGRectGetHeight(v11);
    objc_msgSend(v0, "bounds");
    v6 = Height - CGRectGetHeight(v12);
    if (qword_10047AFF0 != -1)
      swift_once(&qword_10047AFF0, sub_100196A24);
    v7 = v6 - (double)qword_1004AFB08;
    objc_msgSend(v0, "frame");
    objc_msgSend(v0, "setFrame:", v4, v7);

  }
}

void sub_10018A044()
{
  void *v0;
  NSString v1;
  void *v2;
  uint64_t v3;
  id v4;

  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setTitle:forState:", v1, 2);

  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v2 = (void *)qword_1004AF240;
  if (qword_1004AF240)
  {
    v3 = swift_allocObject(&unk_10044A638, 24, 7);
    swift_unknownObjectWeakInit(v3 + 16, v0);
    v4 = v2;
    swift_retain();
    sub_100177FDC((uint64_t)sub_10018A3CC, v3);

    swift_release_n(v3, 2);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10018A120(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  void *v11;
  void *v12;
  __n128 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD aBlock[6];

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100049274();
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  aBlock[4] = sub_10018A3D4;
  aBlock[5] = a1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003ECA0;
  aBlock[3] = &unk_10044A650;
  v12 = _Block_copy(aBlock);
  swift_retain();
  v13 = swift_release();
  static DispatchQoS.unspecified.getter(v13);
  aBlock[0] = _swiftEmptyArrayStorage;
  v14 = sub_100030E1C();
  v15 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v16 = sub_100030E64();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v15, v16, v2, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_10018A2D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  NSString v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setTitle:forState:", v5, 2);

  }
}

uint64_t type metadata accessor for RecordingView()
{
  return objc_opt_self(_TtC7Measure13RecordingView);
}

uint64_t sub_10018A3A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_10018A3CC()
{
  uint64_t v0;

  return sub_10018A120(v0);
}

void sub_10018A3D4()
{
  uint64_t v0;

  sub_10018A2D4(v0);
}

uint64_t sub_10018A3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10018A3EC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10018A3F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10018A418()
{
  uint64_t v0;

  sub_100189D08(*(void **)(v0 + 16));
}

uint64_t sub_10018A420()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018A438(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = "(";
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 96);
}

uint64_t sub_10018A484(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + qword_100488310);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*sub_10018A4D4(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + qword_100488310, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10018A518@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + qword_100488318;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100026E60(v3, a1);
}

double sub_10018A568(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + qword_100488318;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100026E18(a1, v3);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_10018A5C0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + qword_100488318, a1, 33, 0);
  return j__swift_endAccess;
}

id sub_10018A604(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;

  v6 = swift_isaMask & *v4;
  *(_QWORD *)((char *)v4 + qword_100488310) = _swiftEmptyArrayStorage;
  v7 = (char *)v4 + qword_100488318;
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  v8 = (objc_class *)type metadata accessor for StateObservingViewController(0, *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), a4);
  v13.receiver = v4;
  v13.super_class = v8;
  v9 = objc_msgSendSuper2(&v13, "initWithCoder:", a1);
  v10 = v9;
  if (v9)
  {
    v11 = v9;
    swift_getWitnessTable(&unk_1003BAC20, v8);
    StateObserving.setup()();

  }
  return v10;
}

id sub_10018A6D0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  return sub_10018A604(v3, v4, v5, v6);
}

void sub_10018A6F4()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[qword_100488310] = _swiftEmptyArrayStorage;
  v1 = &v0[qword_100488318];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x80000001003D8CB0, "Measure/StateObservingViewController.swift", 42, 2, 49, 0);
  __break(1u);
}

void sub_10018A77C()
{
  sub_10018A6F4();
}

void sub_10018A79C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000012, 0x80000001003D8C90, "Measure/StateObservingViewController.swift", 42, 2, 53, 0);
  __break(1u);
}

void sub_10018A7F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  sub_10018A9D4();
}

id sub_10018A830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for StateObservingViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t sub_10018A87C(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100488310));
  return sub_100026F30(a1 + qword_100488318);
}

uint64_t type metadata accessor for StateObservingViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100026F70(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateObservingViewController);
}

uint64_t sub_10018A8C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 112))();
  *a1 = result;
  return result;
}

void (*sub_10018A8F0(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10018A5C0((uint64_t)v2);
  return sub_100026CF0;
}

double sub_10018A934()
{
  uint64_t v0;
  double result;

  v0 = sub_10018A990();
  *(_QWORD *)&result = swift_bridgeObjectRetain(v0).n128_u64[0];
  return result;
}

void (*sub_10018A94C(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10018A4D4((uint64_t)v2);
  return sub_100026CF0;
}

uint64_t sub_10018A990()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + qword_100488310;
  swift_beginAccess(v0 + qword_100488310, v3, 0, 0);
  return *(_QWORD *)v1;
}

void sub_10018A9D4()
{
  _swift_stdlib_reportUnimplementedInitializer("Measure.StateObservingViewController", 36, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_10018AA04()
{
  id result;

  if (qword_10047ACC8 != -1)
    swift_once(&qword_10047ACC8, sub_100183910);
  result = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", xmmword_1004AF7F0);
  qword_100488408 = (uint64_t)result;
  return result;
}

id sub_10018AA78()
{
  id result;

  if (qword_10047ACD0 != -1)
    swift_once(&qword_10047ACD0, sub_100183928);
  result = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", xmmword_1004AF800);
  qword_100488410 = (uint64_t)result;
  return result;
}

uint64_t sub_10018AAEC()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t result;
  _QWORD v4[6];

  if (qword_10047AD90 != -1)
    swift_once(&qword_10047AD90, sub_10018AA04);
  v0 = (void *)qword_100488408;
  v4[4] = sub_10018AA00;
  v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_1001C35A8;
  v4[3] = &unk_10044A7B8;
  v1 = _Block_copy(v4);
  v2 = objc_msgSend(v0, "imageWithActions:", v1, swift_release().n128_f64[0]);
  _Block_release(v1);
  result = swift_isEscapingClosureAtFileLocation(0, "", 90, 62, 52, 1);
  if ((result & 1) != 0)
    __break(1u);
  else
    qword_100488418 = (uint64_t)v2;
  return result;
}

void sub_10018ABE0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  Swift::String v9;
  Swift::String v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  NSString v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  Class isa;
  NSString v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  Class v33;
  id v34;
  uint64_t v35;
  id v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v36 = a1;
  v1 = type metadata accessor for Locale(0);
  __chkstk_darwin(v1);
  v40 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v39 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_10018B1E0(0);
  v41 = sub_10018B1E0(2);
  v8 = 1;
  v37 = v7;
  v38 = (char *)&type metadata for Any + 8;
  while (1)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v9);
    if (qword_10047AC80 != -1)
      swift_once(&qword_10047AC80, sub_1001835D8);
    if ((unsigned __int128)(v8 * (__int128)qword_1004AF7A0) >> 64 != (v8 * qword_1004AF7A0) >> 63)
      break;
    v43 = v8 * qword_1004AF7A0;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v43, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v10._countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v10);
    v11 = v39;
    v12 = String.LocalizationValue.init(stringInterpolation:)(v7);
    v13 = v40;
    static Locale.current.getter(v12);
    String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v13, 0, 0, 256);
    v15 = v14;
    sub_10018B328(v8 - 1, 1);
    v17 = v16;
    v19 = v18;
    sub_10018B328(v8 - 1, 0);
    v21 = v20;
    v23 = v22;
    v24 = String._bridgeToObjectiveC()();
    if (qword_10047ACC0 != -1)
      swift_once(&qword_10047ACC0, sub_1001838FC);
    v25 = xmmword_1004AF7E0;
    sub_10001FDD8(v42);
    v27 = v26;
    type metadata accessor for Key(0);
    sub_10000C4B0((unint64_t *)&qword_10047B698, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1003B0824);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v27);
    objc_msgSend(v24, "drawWithRect:options:attributes:context:", 0, isa, 0, v17, v19, v25);

    v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
    v30 = xmmword_1004AF7E0;
    sub_10001FDD8(v41);
    v32 = v31;
    v33 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v32);
    objc_msgSend(v29, "drawWithRect:options:attributes:context:", 0, v33, 0, v21, v23, v30);

    ++v8;
    v7 = v37;
    if (v8 == 101)
    {
      swift_bridgeObjectRelease(v41);
      swift_bridgeObjectRelease(v42);
      v34 = objc_msgSend((id)objc_opt_self(UIColor), "redColor");
      objc_msgSend(v34, "setStroke");

      objc_msgSend(v36, "strokeRect:", 0.0, 0.0, 1.0, 1.0);
      return;
    }
  }
  __break(1u);
}

void sub_10018AFD8()
{
  __int128 v0;
  NSString v1;
  double v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  double v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class v11;
  id v12;

  if (qword_10047ACD0 != -1)
    swift_once(&qword_10047ACD0, sub_100183928);
  v0 = xmmword_1004AF800;
  v1 = String._bridgeToObjectiveC()();
  if (qword_10047ACD8 != -1)
    swift_once(&qword_10047ACD8, sub_10018393C);
  v2 = *((double *)&v0 + 1) * 0.5 - *(double *)&qword_1004AF810;
  v3 = sub_10018B1E0(0);
  sub_10001FDD8(v3);
  v5 = v4;
  swift_bridgeObjectRelease(v3);
  type metadata accessor for Key(0);
  sub_10000C4B0((unint64_t *)&qword_10047B698, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1003B0824);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v1, "drawWithRect:options:attributes:context:", 0, isa, 0, 0.0, v2, *(double *)&v0, *((double *)&v0 + 1) * 0.5);

  v12 = String._bridgeToObjectiveC()();
  v7 = *((double *)&v0 + 1) * 0.5 + *((double *)&v0 + 1) * 0.5 - *(double *)&qword_1004AF810;
  v8 = sub_10018B1E0(2);
  sub_10001FDD8(v8);
  v10 = v9;
  swift_bridgeObjectRelease(v8);
  v11 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  objc_msgSend(v12, "drawWithRect:options:attributes:context:", 0, v11, 0, 0.0, v7, *(double *)&v0, *((double *)&v0 + 1) * 0.5);

}

unint64_t sub_10018B1E0(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  NSString *v6;
  void *v7;
  uint64_t v8;
  id v9;
  NSString *v10;
  id v11;
  NSString *v12;
  void *v13;
  id v14;
  unint64_t v15;
  uint64_t v17;

  v2 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v2, "setAlignment:", a1);
  v3 = sub_10000EDC8(&qword_100488420);
  inited = swift_initStackObject(v3, &v17);
  *(_OWORD *)(inited + 16) = xmmword_1003B0F50;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v5 = qword_10047ACA8;
  v6 = NSFontAttributeName;
  if (v5 != -1)
    swift_once(&qword_10047ACA8, sub_1001837C0);
  v7 = (void *)qword_1004AF7C0;
  *(_QWORD *)(inited + 40) = qword_1004AF7C0;
  *(_QWORD *)(inited + 48) = NSParagraphStyleAttributeName;
  *(_QWORD *)(inited + 56) = v2;
  *(_QWORD *)(inited + 64) = NSForegroundColorAttributeName;
  v8 = qword_10047ACB0;
  v9 = v7;
  v10 = NSParagraphStyleAttributeName;
  v11 = v2;
  v12 = NSForegroundColorAttributeName;
  if (v8 != -1)
    swift_once(&qword_10047ACB0, sub_10018380C);
  v13 = (void *)qword_1004AF7C8;
  *(_QWORD *)(inited + 72) = qword_1004AF7C8;
  v14 = v13;
  v15 = sub_1000C7D24(inited);

  return v15;
}

uint64_t sub_10018B328(uint64_t result, char a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;

  if (result > 99)
    goto LABEL_29;
  v3 = result % 10;
  v4 = result - result % 10;
  if (__OFSUB__(result, result % 10))
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    if (qword_10047ACC0 == -1)
      goto LABEL_4;
  }
  result = swift_once(&qword_10047ACC0, sub_1001838FC);
LABEL_4:
  if ((~*((_QWORD *)&xmmword_1004AF7E0 + 1) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (*((double *)&xmmword_1004AF7E0 + 1) <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (*((double *)&xmmword_1004AF7E0 + 1) >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((~(_QWORD)xmmword_1004AF7E0 & 0x7FF0000000000000) == 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (*(double *)&xmmword_1004AF7E0 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (*(double *)&xmmword_1004AF7E0 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v5 = (uint64_t)*((double *)&xmmword_1004AF7E0 + 1);
  v6 = 73;
  if ((v2 & 1) != 0)
    v6 = -3;
  v7 = __OFADD__(v5, v6);
  v8 = v5 + v6;
  if (v7)
    goto LABEL_25;
  if ((unsigned __int128)(v3 * (__int128)(uint64_t)*(double *)&xmmword_1004AF7E0) >> 64 != (v3
                                                                                          * (uint64_t)*(double *)&xmmword_1004AF7E0) >> 63)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v9 = 2 * (v4 / 10);
  if ((unsigned __int128)(v9 * (__int128)v5) >> 64 != (v9 * v5) >> 63)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (__OFADD__(v9 * v5, v8))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x80000001003E42E0, "Measure/NumberTexture.swift", 27, 2, 126, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_10018B4F4(void *a1)
{
  CGImage *v2;
  CGImage *v3;
  CGColorSpace *v4;
  CGColorSpaceRef v5;
  CGColorSpaceRef v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  CGColorSpace *v10;
  char v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t result;
  id v19;
  uint64_t v20;
  id v21;

  if (qword_10047ADA0 != -1)
    swift_once(&qword_10047ADA0, sub_10018AAEC);
  v2 = (CGImage *)objc_msgSend((id)qword_100488418, "CGImage");
  if (!v2)
    goto LABEL_17;
  v3 = v2;
  v4 = CGImageGetColorSpace(v2);
  v5 = CGColorSpaceCreateWithName(kCGColorSpaceSRGB);
  v6 = v5;
  if (v4)
  {
    if (!v5)
    {
LABEL_14:
      v6 = v4;
      goto LABEL_15;
    }
    type metadata accessor for CGColorSpace(0);
    v8 = v7;
    v9 = sub_10000C4B0(&qword_100488428, (uint64_t (*)(uint64_t))type metadata accessor for CGColorSpace, (uint64_t)&unk_1003B072C);
    v10 = v4;
    v11 = static _CFObject.== infix(_:_:)(v10, v6, v8, v9);

    if ((v11 & 1) == 0)
      goto LABEL_16;
  }
  else if (v5)
  {
LABEL_15:

    v3 = v6;
LABEL_16:

LABEL_17:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ELL, 0x80000001003E4280, "Measure/NumberTexture.swift", 27, 2, 25, 0);
    goto LABEL_18;
  }
  v12 = objc_msgSend(a1, "device");
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(objc_allocWithZone((Class)MTKTextureLoader), "initWithDevice:", v12);
    v21 = 0;
    v15 = objc_msgSend(v14, "newTextureWithCGImage:options:error:", v3, 0, &v21);
    if (v15)
    {
      v16 = v15;
      v17 = v21;

      swift_unknownObjectRelease(v13);
      return (uint64_t)v16;
    }
    v19 = v21;
    v4 = (CGColorSpace *)v21;
    v3 = (CGImage *)_convertNSErrorToError(_:)(v19);

    swift_willThrow(v20);
    swift_unexpectedError(v3, "Measure/NumberTexture.swift", 27, 1, 28);
    __break(1u);
    goto LABEL_14;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000018, 0x80000001003E42C0, "Measure/NumberTexture.swift", 27, 2, 26, 0);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10018B7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10018B7B0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_10018B7B8(uint64_t a1)
{
  void *v1;
  double v2;
  CGFloat m43;
  CGFloat m44;
  double v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  CGFloat v15;
  void *v16;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  CATransform3D aBlock;
  CGAffineTransform m;

  switch(a1)
  {
    case 2:
      v2 = 3.14159265;
      break;
    case 4:
      v2 = -*(double *)CGFloat.piDiv2.unsafeMutableAddressor(4);
      break;
    case 3:
      v2 = *(double *)CGFloat.piDiv2.unsafeMutableAddressor(3);
      break;
    default:
      v2 = 0.0;
      break;
  }
  CGAffineTransformMakeRotation((CGAffineTransform *)&aBlock, v2);
  *(_OWORD *)&m.a = *(_OWORD *)&aBlock.m11;
  *(_OWORD *)&m.c = *(_OWORD *)&aBlock.m13;
  *(_OWORD *)&m.tx = *(_OWORD *)&aBlock.m21;
  CATransform3DMakeAffineTransform(&aBlock, &m);
  v23 = *(_OWORD *)&aBlock.m13;
  v24 = *(_OWORD *)&aBlock.m11;
  v21 = *(_OWORD *)&aBlock.m23;
  v22 = *(_OWORD *)&aBlock.m21;
  v19 = *(_OWORD *)&aBlock.m33;
  v20 = *(_OWORD *)&aBlock.m31;
  v18 = *(_OWORD *)&aBlock.m41;
  m43 = aBlock.m43;
  m44 = aBlock.m44;
  v5 = sub_10018B9AC();
  v7 = v6;
  v8 = sub_10002735C();
  v10 = v9;
  v11 = sub_10002717C();
  v13 = v12;
  v14 = (void *)objc_opt_self(UIView);
  v15 = COERCE_DOUBLE(swift_allocObject(&unk_10044A818, 200, 7));
  *(_QWORD *)(*(_QWORD *)&v15 + 16) = v1;
  *(_OWORD *)(*(_QWORD *)&v15 + 24) = v24;
  *(_OWORD *)(*(_QWORD *)&v15 + 40) = v23;
  *(_OWORD *)(*(_QWORD *)&v15 + 56) = v22;
  *(_OWORD *)(*(_QWORD *)&v15 + 72) = v21;
  *(_OWORD *)(*(_QWORD *)&v15 + 88) = v20;
  *(_OWORD *)(*(_QWORD *)&v15 + 104) = v19;
  *(_OWORD *)(*(_QWORD *)&v15 + 120) = v18;
  *(CGFloat *)(*(_QWORD *)&v15 + 136) = m43;
  *(CGFloat *)(*(_QWORD *)&v15 + 144) = m44;
  *(double *)(*(_QWORD *)&v15 + 152) = v5;
  *(_QWORD *)(*(_QWORD *)&v15 + 160) = v7;
  *(double *)(*(_QWORD *)&v15 + 168) = v8;
  *(_QWORD *)(*(_QWORD *)&v15 + 176) = v10;
  *(double *)(*(_QWORD *)&v15 + 184) = v11;
  *(_QWORD *)(*(_QWORD *)&v15 + 192) = v13;
  *(_QWORD *)&aBlock.m21 = sub_10018CC84;
  aBlock.m22 = v15;
  *(_QWORD *)&aBlock.m11 = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.m12 = 1107296256;
  *(_QWORD *)&aBlock.m13 = sub_10003ECA0;
  *(_QWORD *)&aBlock.m14 = &unk_10044A830;
  v16 = _Block_copy(&aBlock);
  v17 = v1;
  swift_release();
  objc_msgSend(v14, "animateWithDuration:delay:options:animations:completion:", 0, v16, 0, 0.25, 0.25);
  _Block_release(v16);
}

double sub_10018B9AC()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  CGRect v11;
  CGRect v12;
  CGRect v13;

  v1 = *(void **)&v0[qword_10047F630];
  if (!v1)
    return 0.0;
  v2 = (void *)objc_opt_self(UIApplication);
  v3 = v1;
  v4 = objc_msgSend(v2, "sharedApplication");
  v5 = objc_msgSend(v4, "userInterfaceLayoutDirection");

  if (v5 == (id)1)
  {
    objc_msgSend(v0, "frame");
    v7 = v6;
    objc_msgSend(v3, "frame");
    v8 = v7 - CGRectGetWidth(v11);
    if (qword_10047ADD8 != -1)
      swift_once(&qword_10047ADD8, sub_100195820);
    v9 = v8 - *(double *)&qword_1004AF8C0;
  }
  else
  {
    if (qword_10047ADD8 != -1)
      swift_once(&qword_10047ADD8, sub_100195820);
    v9 = *(double *)&qword_1004AF8C0;
  }
  objc_msgSend(v0, "frame");
  CGRectGetHeight(v12);
  if (qword_10047ADC8 != -1)
    swift_once(&qword_10047ADC8, sub_100195650);
  objc_msgSend(v3, "frame");
  CGRectGetHeight(v13);

  return v9;
}

void sub_10018BB4C(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v45 = a2[2];
  v43 = *a2;
  v44 = a2[3];
  v41 = a2[1];
  v42 = a2[4];
  v39 = a2[6];
  v40 = a2[5];
  v9 = a2[8];
  v38 = a2[7];
  v11 = a2[9];
  v10 = a2[10];
  v12 = a2[11];
  v13 = a2[12];
  v14 = a2[13];
  v15 = a2[14];
  v16 = a2[15];
  v17 = qword_10047F630;
  v18 = *(void **)(a1 + qword_10047F630);
  if (v18)
  {
    v19 = objc_msgSend(v18, "layer");
    v46 = v43;
    v47 = v41;
    v48 = v45;
    v49 = v44;
    v50 = v42;
    v51 = v40;
    v52 = v39;
    v53 = v38;
    v54 = v9;
    v55 = v11;
    v56 = v10;
    v57 = v12;
    v58 = v13;
    v59 = v14;
    v60 = v15;
    v61 = v16;
    objc_msgSend(v19, "setTransform:", &v46);

  }
  v20 = qword_10047F638;
  v21 = *(void **)(a1 + qword_10047F638);
  if (v21)
  {
    v22 = objc_msgSend(v21, "layer");
    v46 = v43;
    v47 = v41;
    v48 = v45;
    v49 = v44;
    v50 = v42;
    v51 = v40;
    v52 = v39;
    v53 = v38;
    v54 = v9;
    v55 = v11;
    v56 = v10;
    v57 = v12;
    v58 = v13;
    v59 = v14;
    v60 = v15;
    v61 = v16;
    objc_msgSend(v22, "setTransform:", &v46);

  }
  v23 = qword_10047F640;
  v24 = *(void **)(a1 + qword_10047F640);
  if (v24)
  {
    v25 = objc_msgSend(v24, "layer");
    v46 = v43;
    v47 = v41;
    v48 = v45;
    v49 = v44;
    v50 = v42;
    v51 = v40;
    v52 = v39;
    v53 = v38;
    v54 = v9;
    v55 = v11;
    v56 = v10;
    v57 = v12;
    v58 = v13;
    v59 = v14;
    v60 = v15;
    v61 = v16;
    objc_msgSend(v25, "setTransform:", &v46);

  }
  v26 = *(void **)(a1 + v17);
  if (v26)
  {
    v27 = v26;
    objc_msgSend(v27, "frame");
    objc_msgSend(v27, "setFrame:", a3, a4);

  }
  v28 = *(void **)(a1 + v20);
  if (v28)
  {
    v29 = v28;
    objc_msgSend(v29, "frame");
    objc_msgSend(v29, "setFrame:", a5, a6);

  }
  v30 = *(void **)(a1 + v23);
  if (v30)
  {
    v31 = v30;
    objc_msgSend(v31, "frame");
    objc_msgSend(v31, "setFrame:", a7, a8);

  }
}

void sub_10018BE14()
{
  uint64_t v0;
  id v1;
  void *v2;
  _OWORD v3[2];
  uint64_t v4;

  v3[0] = xmmword_1003BAC40;
  v3[1] = xmmword_1003BAC50;
  v4 = 0x4000000000000000;
  v1 = objc_msgSend((id)objc_opt_self(CUShutterButton), "shutterButtonWithSpec:", v3);
  v2 = *(void **)(v0 + qword_10047F648);
  *(_QWORD *)(v0 + qword_10047F648) = v1;

}

void sub_10018BE80()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double Height;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  char *v10;
  void *v11;
  CGRect v12;

  objc_msgSend(v0, "bounds");
  v2 = v1;
  if (qword_10047ADD0 != -1)
    swift_once(&qword_10047ADD0, sub_1001956EC);
  v3 = *(double *)&qword_1004AF8B8;
  objc_msgSend(v0, "bounds");
  Height = CGRectGetHeight(v12);
  if (qword_10047ADC8 != -1)
    swift_once(&qword_10047ADC8, sub_100195650);
  v5 = (v2 - v3) * 0.5;
  v6 = Height - *(double *)&qword_1004AF8B0;
  v7 = *(double *)&qword_1004AF8B8;
  v8 = v6 - *(double *)&qword_1004AF8B8 * 0.5;
  v9 = objc_allocWithZone((Class)type metadata accessor for EditButton());
  v10 = sub_10007BE0C(2u, v5, v8, v7, v7);
  v11 = *(void **)&v0[qword_10047F628];
  *(_QWORD *)&v0[qword_10047F628] = v10;

}

void sub_10018BF94()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id v5;
  void *v6;
  uint64_t v7;

  v1 = sub_10018B9AC();
  v3 = v2;
  if (qword_10047ADF0 != -1)
    swift_once(&qword_10047ADF0, sub_100195A24);
  v4 = *(double *)&qword_1004AF8D8;
  v5 = objc_allocWithZone((Class)type metadata accessor for UndoButton());
  sub_1001C92AC(2, v1, v3, v4, v4);
  v6 = *(void **)(v0 + qword_10047F630);
  *(_QWORD *)(v0 + qword_10047F630) = v7;

}

void sub_10018C038()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  uint64_t v4;
  objc_class *v5;
  _BYTE *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  objc_super v13;

  v1 = sub_10002717C();
  v3 = v2;
  v4 = swift_allocObject(&unk_10044A7F0, 24, 7);
  *(_QWORD *)(v4 + 16) = v0;
  v5 = (objc_class *)type metadata accessor for HistoryButton();
  v6 = objc_allocWithZone(v5);
  v7 = (uint64_t *)&v6[OBJC_IVAR____TtC7Measure13HistoryButton_tapHandler];
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Measure13HistoryButton_button] = 0;
  v6[OBJC_IVAR____TtC7Measure13HistoryButton_controlType] = 0;
  v8 = *v7;
  v9 = v7[1];
  *v7 = (uint64_t)sub_10018CC58;
  v7[1] = v4;
  v10 = v0;
  swift_retain();
  sub_1000217BC(v8, v9);
  v13.receiver = v6;
  v13.super_class = v5;
  v11 = objc_msgSendSuper2(&v13, "initWithFrame:", v1, v3, 80.0, 47.0);
  sub_100082470();

  swift_release();
  v12 = *(void **)&v10[qword_10047F640];
  *(_QWORD *)&v10[qword_10047F640] = v11;

}

void sub_10018C16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  swift_retain();
  StateValue.wrappedValue.getter(&v4, v0);
  swift_release();
  v1 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRelease(v4);
  if (!v1)
  {
    v2 = sub_10000EDC8(&qword_100483588);
    v3 = sub_1000EA9F4();
    Subject<>.send()(v2, v3);
  }
}

void sub_10018C1F0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t *__return_ptr);
  char *v4;
  double v5;
  void *v6;
  uint64_t v7;

  v1 = *(void **)(v0 + qword_10047F640);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + qword_100488430);
    v3 = *(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v2 + 144);
    swift_retain(v2);
    v4 = v1;
    v3(&v7);
    *(_QWORD *)&v5 = swift_release(v2).n128_u64[0];
    v6 = *(void **)&v4[OBJC_IVAR____TtC7Measure13HistoryButton_button];
    if (v6)
      objc_msgSend(v6, "setEnabled:", v7 > 0, v5);

  }
}

double sub_10018C290()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t *__return_ptr, __n128);
  __n128 v3;
  uint64_t v4;
  double result;
  uint64_t Strong;
  uint64_t v7;
  uint64_t (*v8)(__n128);
  __n128 v9;
  uint64_t v10;
  void (*v11)(void (*)(), uint64_t, __n128);
  __n128 v12;
  uint64_t (*v13)(uint64_t *, __n128);
  __n128 v14;
  void (*v15)(uint64_t *, _QWORD);
  uint64_t v16;
  uint64_t v17;
  char v18;

  v1 = qword_100488430;
  v2 = *(void (**)(uint64_t *__return_ptr, __n128))(**(_QWORD **)(v0 + qword_100488430) + 144);
  v3 = swift_retain();
  v2(&v17, v3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  if (v18 == 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + qword_10047F620, v4);
    if (Strong)
    {
      v7 = Strong;
      v8 = *(uint64_t (**)(__n128))(**(_QWORD **)(Strong + 80) + 200);
      v9 = swift_retain();
      v10 = v8(v9);
      swift_release();
      v11 = *(void (**)(void (*)(), uint64_t, __n128))(*(_QWORD *)v10 + 280);
      v12 = swift_retain();
      v11(sub_1000814E0, v7, v12);
      swift_release();
      swift_release_n(v7, 2);
    }
    v13 = *(uint64_t (**)(uint64_t *, __n128))(**(_QWORD **)(v0 + v1) + 400);
    v14 = swift_retain();
    v15 = (void (*)(uint64_t *, _QWORD))v13(&v17, v14);
    *(_BYTE *)(v16 + 8) = 0;
    v15(&v17, 0);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10018C3AC()
{
  uint64_t v0;
  uint64_t (*v1)(__n128);
  __n128 v2;
  uint64_t v3;
  __n128 v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[16];
  uint64_t v9;
  _BYTE v10[16];
  uint64_t v11;
  _BYTE v12[16];
  uint64_t v13;
  _BYTE v14[16];
  uint64_t v15;
  _BYTE v16[16];
  uint64_t v17;

  v17 = v0;
  swift_retain();
  StateValue.ifUpdated(_:)(sub_100082438, v16);
  swift_release();
  v15 = v0;
  swift_retain();
  StateValue.ifUpdated(_:)(sub_100082440, v14);
  swift_release();
  v13 = v0;
  swift_retain();
  StateValue.ifUpdated(_:)(sub_100082448, v12);
  swift_release();
  v1 = *(uint64_t (**)(__n128))(**(_QWORD **)(v0 + qword_100488430) + 200);
  v2 = swift_retain();
  v3 = v1(v2);
  v4 = swift_release();
  v11 = v0;
  (*(void (**)(double (*)(), _BYTE *, __n128))(*(_QWORD *)v3 + 296))(sub_10018CC08, v10, v4);
  swift_release();
  v9 = v0;
  swift_retain();
  StateValue.ifUpdated(_:)(sub_10018CC2C, v8);
  swift_release();
  v7 = v0;
  swift_retain();
  StateValue.ifUpdated(_:)(sub_10018CC2C, &v6);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10018C51C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  void (*v4)(uint64_t *__return_ptr);
  char *v5;
  double v6;
  void *v7;
  uint64_t v8;

  v2 = *(void **)(a2 + qword_10047F640);
  if (v2)
  {
    v3 = *(_QWORD *)(a2 + qword_100488430);
    v4 = *(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v3 + 144);
    swift_retain(v3);
    v5 = v2;
    v4(&v8);
    *(_QWORD *)&v6 = swift_release(v3).n128_u64[0];
    v7 = *(void **)&v5[OBJC_IVAR____TtC7Measure13HistoryButton_button];
    if (v7)
      objc_msgSend(v7, "setEnabled:", v8 > 0, v6);

  }
}

id sub_10018C5BC(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, __n128);
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  objc_super v42;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  v10 = qword_100488430;
  sub_10000EDC8(&qword_100483598);
  KeyPath = swift_getKeyPath(&unk_1003BAC78);
  v12 = type metadata accessor for EditViewSpatial(0);
  v13 = v4;
  *(_QWORD *)&v4[v10] = MutableStateBinding.__allocating_init(_:_:)(KeyPath, v12);
  v14 = qword_100488438;
  v15 = sub_10000EDC8(&qword_10047D460);
  v16 = swift_getKeyPath(&unk_1003BACA0);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v17 = qword_1004AF890;
  v18 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v15 + 272);
  v19 = swift_retain();
  *(_QWORD *)&v13[v14] = v18(v16, v17, v19);
  v20 = qword_100488440;
  v21 = sub_10000EDC8(&qword_10047E5E0);
  v22 = swift_getKeyPath(&unk_1003BACC8);
  v23 = qword_1004AF890;
  v24 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v21 + 272);
  v25 = swift_retain();
  *(_QWORD *)&v13[v20] = v24(v22, v23, v25);
  v26 = qword_100488448;
  v27 = sub_10000EDC8(&qword_1004835A0);
  v28 = swift_getKeyPath(&unk_1003BACF0);
  v29 = qword_1004AF890;
  v30 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v27 + 272);
  v31 = swift_retain();
  *(_QWORD *)&v13[v26] = v30(v28, v29, v31);
  v32 = qword_100488450;
  v33 = sub_10000EDC8(&qword_1004835A8);
  v34 = swift_getKeyPath(&unk_1003BAD18);
  v35 = qword_1004AF890;
  v36 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v33 + 272);
  v37 = swift_retain();
  *(_QWORD *)&v13[v32] = v36(v34, v35, v37);
  v38 = qword_100488458;
  v39 = sub_10000EDC8(&qword_100483588);
  swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
  *(_QWORD *)&v13[v38] = PassthroughSubject.init()(v40);

  v42.receiver = v13;
  v42.super_class = ObjectType;
  return objc_msgSendSuper2(&v42, "initWithFrame:", a1, a2, a3, a4);
}

id sub_10018C810(double a1, double a2, double a3, double a4)
{
  return sub_10018C5BC(a1, a2, a3, a4);
}

id sub_10018C830(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  id v35;
  objc_super v37;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = qword_100488430;
  sub_10000EDC8(&qword_100483598);
  KeyPath = swift_getKeyPath(&unk_1003BAC78);
  v6 = type metadata accessor for EditViewSpatial(0);
  v7 = v1;
  *(_QWORD *)&v1[v4] = MutableStateBinding.__allocating_init(_:_:)(KeyPath, v6);
  v8 = qword_100488438;
  v9 = sub_10000EDC8(&qword_10047D460);
  v10 = swift_getKeyPath(&unk_1003BACA0);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v11 = qword_1004AF890;
  v12 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v9 + 272);
  v13 = swift_retain();
  *(_QWORD *)&v7[v8] = v12(v10, v11, v13);
  v14 = qword_100488440;
  v15 = sub_10000EDC8(&qword_10047E5E0);
  v16 = swift_getKeyPath(&unk_1003BACC8);
  v17 = qword_1004AF890;
  v18 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v15 + 272);
  v19 = swift_retain();
  *(_QWORD *)&v7[v14] = v18(v16, v17, v19);
  v20 = qword_100488448;
  v21 = sub_10000EDC8(&qword_1004835A0);
  v22 = swift_getKeyPath(&unk_1003BACF0);
  v23 = qword_1004AF890;
  v24 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v21 + 272);
  v25 = swift_retain();
  *(_QWORD *)&v7[v20] = v24(v22, v23, v25);
  v26 = qword_100488450;
  v27 = sub_10000EDC8(&qword_1004835A8);
  v28 = swift_getKeyPath(&unk_1003BAD18);
  v29 = qword_1004AF890;
  v30 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v27 + 272);
  v31 = swift_retain();
  *(_QWORD *)&v7[v26] = v30(v28, v29, v31);
  v32 = qword_100488458;
  v33 = sub_10000EDC8(&qword_100483588);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  *(_QWORD *)&v7[v32] = PassthroughSubject.init()(v34);

  v37.receiver = v7;
  v37.super_class = ObjectType;
  v35 = objc_msgSendSuper2(&v37, "initWithCoder:", a1);

  return v35;
}

id sub_10018CA70(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10018C830(a3);
}

double sub_10018CA94()
{
  uint64_t v0;
  double result;

  swift_release(*(_QWORD *)(v0 + qword_100488430));
  swift_release(*(_QWORD *)(v0 + qword_100488438));
  swift_release(*(_QWORD *)(v0 + qword_100488440));
  swift_release(*(_QWORD *)(v0 + qword_100488448));
  swift_release(*(_QWORD *)(v0 + qword_100488450));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0 + qword_100488458)).n128_u64[0];
  return result;
}

double sub_10018CB00(uint64_t a1)
{
  double result;

  swift_release(*(_QWORD *)(a1 + qword_100488430));
  swift_release(*(_QWORD *)(a1 + qword_100488438));
  swift_release(*(_QWORD *)(a1 + qword_100488440));
  swift_release(*(_QWORD *)(a1 + qword_100488448));
  swift_release(*(_QWORD *)(a1 + qword_100488450));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + qword_100488458)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for EditViewCompactSpatial(uint64_t a1)
{
  uint64_t result;

  result = qword_100488488;
  if (!qword_100488488)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EditViewCompactSpatial);
  return result;
}

uint64_t sub_10018CBB4(uint64_t a1)
{
  _QWORD v2[6];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 256, 6, v2, a1 + 872);
}

uint64_t sub_10018CC00()
{
  return type metadata accessor for EditViewCompactSpatial(0);
}

double sub_10018CC08()
{
  sub_10018C1F0();
  return sub_10018C290();
}

void sub_10018CC2C(uint64_t a1)
{
  uint64_t v1;

  sub_10018C51C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10018CC34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10018CC58()
{
  sub_10018C16C();
}

uint64_t sub_10018CC60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 200, 7);
}

void sub_10018CC84()
{
  uint64_t v0;

  sub_10018BB4C(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), *(double *)(v0 + 152), *(double *)(v0 + 160), *(double *)(v0 + 168), *(double *)(v0 + 176), *(double *)(v0 + 184), *(double *)(v0 + 192));
}

uint64_t sub_10018CC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10018CCAC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_10018CCC8(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void (*v5)(_QWORD *__return_ptr, __n128);
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t (*v11)(_QWORD *, __n128);
  __n128 v12;
  void (*v13)(_QWORD *, _QWORD, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *, __n128);
  id v18;
  __n128 v19;
  void (*v20)(_QWORD *, _QWORD);
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD v24[4];
  uint64_t v25[2];

  v2 = v1;
  v4 = qword_1004888E8;
  v5 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)&v1[qword_1004888E8] + 144);
  v6 = swift_retain();
  v5(v24, v6);
  swift_release();
  v7 = v24[0];
  v8 = *(_QWORD *)&v2[qword_100488868];
  v9 = *(_QWORD *)&v2[qword_100488868 + 8];
  swift_bridgeObjectRetain(v9);
  v10 = sub_10018D130(v8, v9, v7);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v7);
  if ((v10 & 1) == 0)
  {
    v11 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)&v2[v4] + 400);
    swift_bridgeObjectRetain(v9);
    v12 = swift_retain();
    v13 = (void (*)(_QWORD *, _QWORD, __n128))v11(v24, v12);
    sub_100192928(v25, v8, v9);
    v14 = swift_bridgeObjectRelease(v25[1]);
    v13(v24, 0, v14);
    swift_release();
  }
  v15 = qword_100488870;
  v16 = *(_QWORD *)&v2[qword_100488870];
  if (v16)
  {
    v17 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)&v2[qword_1004888F0] + 400);
    v18 = *(id *)(v16 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
    v19 = swift_retain();
    v20 = (void (*)(_QWORD *, _QWORD))v17(v24, v19);
    swift_unknownObjectWeakAssign(v21, v18);

    v20(v24, 0);
    swift_release();
    v22 = *(void **)&v2[v15];
    if (v22)
    {
      v23 = v22;
      sub_100184394(a1, 0, 1);

      objc_msgSend(v2, "layoutIfNeeded");
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

double sub_10018CE84(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void (*v5)(_QWORD *__return_ptr, __n128);
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t (*v11)(_QWORD *, __n128);
  __n128 v12;
  void (*v13)(_QWORD *, _QWORD, __n128);
  __n128 v14;
  void *Strong;
  void (*v16)(_QWORD *__return_ptr, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD *, __n128);
  __n128 v20;
  void (*v21)(_QWORD *, _QWORD);
  uint64_t v22;
  double result;
  _QWORD v24[4];
  uint64_t v25[2];

  v2 = v1;
  v4 = qword_1004888E8;
  v5 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v1 + qword_1004888E8) + 144);
  v6 = swift_retain();
  v5(v24, v6);
  swift_release();
  v7 = v24[0];
  v8 = *(_QWORD *)(v2 + qword_100488868);
  v9 = *(_QWORD *)(v2 + qword_100488868 + 8);
  swift_bridgeObjectRetain(v9);
  v10 = sub_10018D130(v8, v9, v7);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v7);
  if ((v10 & 1) == 0)
  {
    v11 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)(v2 + v4) + 400);
    swift_bridgeObjectRetain(v9);
    v12 = swift_retain();
    v13 = (void (*)(_QWORD *, _QWORD, __n128))v11(v24, v12);
    sub_100192928(v25, v8, v9);
    v14 = swift_bridgeObjectRelease(v25[1]);
    v13(v24, 0, v14);
    swift_release();
  }
  if ((a1 & 1) != 0)
  {
    Strong = 0;
  }
  else
  {
    v16 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v2 + qword_1004888F0) + 144);
    v17 = swift_retain();
    v16(v24, v17);
    swift_release();
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v24, v18);
    sub_100189364((uint64_t)v24);
  }
  v19 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)(v2 + qword_1004888F0) + 400);
  v20 = swift_retain();
  v21 = (void (*)(_QWORD *, _QWORD))v19(v24, v20);
  swift_unknownObjectWeakAssign(v22, Strong);

  v21(v24, 0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_10018D028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD *__return_ptr, __n128);
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  uint64_t (*v10)(_QWORD *, __n128);
  __n128 v11;
  void (*v12)(_QWORD *, _QWORD, __n128);
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  _QWORD v16[4];

  v1 = v0;
  v2 = qword_1004888E8;
  v3 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v0 + qword_1004888E8) + 144);
  v4 = swift_retain();
  v3(v16, v4);
  swift_release();
  v5 = v16[0];
  v7 = *(_QWORD *)(v1 + qword_100488868);
  v6 = *(_QWORD *)(v1 + qword_100488868 + 8);
  swift_bridgeObjectRetain(v6);
  v8 = sub_10018D130(v7, v6, v5);
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  if ((v8 & 1) != 0)
  {
    v10 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)(v1 + v2) + 400);
    swift_bridgeObjectRetain(v6);
    v11 = swift_retain();
    v12 = (void (*)(_QWORD *, _QWORD, __n128))v10(v16, v11);
    sub_1001933A4(v7, v6);
    v14 = v13;
    swift_bridgeObjectRelease(v6);
    v15 = swift_bridgeObjectRelease(v14);
    v12(v16, 0, v15);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10018D130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20);
    String.hash(into:)(v20, a1, a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = v11[1];
      v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
        return 1;
      v15 = ~v7;
      v16 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
      {
        while (1)
        {
          v17 = (_QWORD *)(v10 + 16 * v16);
          v18 = v17[1];
          v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
            break;
          result = 0;
          v16 = (v16 + 1) & v15;
          if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

void sub_10018D264()
{
  qword_100488860 = 0x406E000000000000;
}

void sub_10018D274(uint64_t a1, uint64_t a2, int a3, char *a4, void *a5, uint64_t a6, void *a7, void *a8, double a9, double a10, double a11, double a12)
{
  char *v12;
  char *v13;
  objc_class *ObjectType;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, __n128);
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, __n128);
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  id v57;
  id v58;
  Swift::String v59;
  Swift::String v60;
  void *object;
  NSString v62;
  id v63;
  id v64;
  char *v65;
  void *v66;
  void *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char *v72;
  id v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t Strong;
  void *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  int v98;
  void *v99;
  void *v100;
  void *v101;
  _BYTE v102[24];
  objc_super v103;
  Swift::String v104;

  v13 = v12;
  v100 = a7;
  v101 = a8;
  v93 = a2;
  v94 = a6;
  v99 = a5;
  v97 = a4;
  v98 = a3;
  v92 = a1;
  ObjectType = (objc_class *)swift_getObjectType(v12);
  v90 = sub_10000EDC8((uint64_t *)&unk_100488B58);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v88 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = qword_100488870;
  *(_QWORD *)&v12[qword_100488870] = 0;
  v20 = &v12[qword_100488878];
  *((_QWORD *)v20 + 1) = 0;
  swift_unknownObjectWeakInit(v20, 0);
  v21 = &v12[qword_100488880];
  *((_QWORD *)v21 + 1) = 0;
  swift_unknownObjectWeakInit(v21, 0);
  v12[qword_100488888] = 0;
  v91 = &v12[qword_100488898];
  swift_unknownObjectWeakInit(&v12[qword_100488898], 0);
  v95 = &v12[qword_1004888A0];
  swift_unknownObjectWeakInit(&v12[qword_1004888A0], 0);
  *(_QWORD *)&v12[qword_1004888A8] = 0;
  swift_unknownObjectWeakInit(&v12[qword_1004888B0], 0);
  swift_unknownObjectWeakInit(&v12[qword_1004888B8], 0);
  v12[qword_1004888C0] = 0;
  v22 = qword_1004888C8;
  v23 = sub_10000EDC8(&qword_100486270);
  KeyPath = swift_getKeyPath(&unk_1003BAE18);
  v25 = qword_10047AD88;
  v26 = v13;
  if (v25 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v27 = qword_1004AF890;
  v28 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v23 + 272);
  v29 = swift_retain();
  *(_QWORD *)&v13[v22] = v28(KeyPath, v27, v29);
  v30 = qword_1004888D0;
  sub_10000EDC8(&qword_100488B68);
  v31 = swift_getKeyPath(&unk_1003BAE40);
  *(_QWORD *)&v26[v30] = MutableStateValue.__allocating_init(_:_:)(v31, ObjectType);
  v32 = qword_1004888D8;
  v33 = sub_10000EDC8((uint64_t *)&unk_1004810D0);
  v34 = swift_getKeyPath(&unk_1003BAE68);
  v35 = qword_1004AF890;
  v36 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v33 + 272);
  v37 = swift_retain();
  *(_QWORD *)&v26[v32] = v36(v34, v35, v37);
  v38 = qword_1004888E0;
  v39 = sub_10000EDC8(&qword_10047E5E0);
  v40 = swift_getKeyPath(&unk_1003BAE90);
  v41 = qword_1004AF890;
  v42 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v39 + 272);
  v43 = swift_retain();
  *(_QWORD *)&v26[v38] = v42(v40, v41, v43);
  v44 = qword_1004888E8;
  sub_10000EDC8((uint64_t *)&unk_100488B70);
  v45 = swift_getKeyPath(&unk_1003BAEB8);
  *(_QWORD *)&v26[v44] = MutableStateValue.__allocating_init(_:_:)(v45, ObjectType);
  v46 = qword_1004888F0;
  sub_10000EDC8(&qword_1004862A0);
  v47 = swift_getKeyPath(&unk_1003BAEE0);
  *(_QWORD *)&v26[v46] = MutableStateValue.__allocating_init(_:_:)(v47, ObjectType);
  *(_QWORD *)&v26[qword_1004888F8] = 0;
  v26[qword_100488900] = 0;
  swift_unknownObjectWeakInit(&v26[qword_100488908], 0);
  v26[qword_100488910] = 1;
  v48 = (double *)&v26[qword_100488890];
  *v48 = a9;
  v48[1] = a10;
  v48[2] = a11;
  v48[3] = a12;
  v49 = &v26[qword_100488868];
  v50 = v91;
  v51 = v93;
  *(_QWORD *)v49 = v92;
  *((_QWORD *)v49 + 1) = v51;
  v52 = v100;
  swift_unknownObjectWeakAssign(v50, v100);
  *((_QWORD *)v20 + 1) = v94;
  v53 = v99;
  swift_unknownObjectWeakAssign(v20, v99);
  v54 = v97;
  v55 = *(void **)(*(_QWORD *)&v97[OBJC_IVAR____TtC7Measure17CardContainerView_titleView]
                 + OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView);
  v56 = (void *)objc_opt_self(NSBundle);
  v57 = v55;
  v58 = objc_msgSend(v56, "mainBundle");
  v104._object = (void *)0xE000000000000000;
  v59._object = (void *)0x80000001003DDDA0;
  v59._countAndFlagsBits = 0xD00000000000001DLL;
  v60._countAndFlagsBits = 0;
  v60._object = (void *)0xE000000000000000;
  v104._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v59, (Swift::String_optional)0, (NSBundle)v58, v60, v104)._object;

  v62 = String._bridgeToObjectiveC()();
  objc_msgSend(v57, "setPlaceholder:", v62, swift_bridgeObjectRelease(object).n128_f64[0]);

  v63 = objc_allocWithZone((Class)type metadata accessor for CardContainerController(0));
  v64 = v54;
  v65 = sub_100185108(v64);
  v66 = *(void **)&v13[v96];
  *(_QWORD *)&v13[v96] = v65;

  v67 = v101;
  swift_unknownObjectWeakAssign(v95, v101);

  v103.receiver = v26;
  v103.super_class = ObjectType;
  v68 = (char *)objc_msgSendSuper2(&v103, "initWithFrame:", a9, a10, a11, a12);
  sub_10018D934(v98 & 1);
  sub_10018DFDC();
  v69 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.isIPhone()(v69) & 1) != 0)
  {
    v70 = *(_QWORD *)&v68[qword_100488870];
    if (!v70)
      goto LABEL_11;
    v71 = *(void **)(v70 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
    v72 = v68;
    v73 = v71;
    sub_100168650(v72);

  }
  v74 = *(char **)&v68[qword_100488870];
  if (v74)
  {
    swift_beginAccess(&v74[OBJC_IVAR____TtC7Measure23CardContainerController__lockingState], v102, 33, 0);
    v75 = v74;
    v76 = sub_10000EDC8(&qword_100487EB8);
    v77 = v88;
    Published.projectedValue.getter(v76);
    swift_endAccess(v102);

    v78 = swift_allocObject(&unk_10044A908, 24, 7);
    swift_unknownObjectWeakInit(v78 + 16, v68);
    v79 = sub_100043310((unint64_t *)&unk_100488B80, (uint64_t *)&unk_100488B58, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v80 = v90;
    v82 = Publisher<>.sink(receiveValue:)(sub_10019373C, v78, v90, v79, v81);
    v83 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v89 + 8))(v77, v80, v83);
    *(_QWORD *)&v68[qword_1004888F8] = v82;
    swift_release();
    Strong = swift_unknownObjectWeakLoadStrong(&v68[qword_100488878], v84);
    if (Strong)
    {
      v86 = (void *)Strong;

      swift_unknownObjectWeakInit(v102, v68);
      swift_unknownObjectWeakDestroy(v102, v87);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_11:
  __break(1u);
}

void sub_10018D934(char a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  char **v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t ObjCClassFromMetadata;
  NSString v34;
  double v35;
  id v36;
  void *v37;
  id v38;
  char v39;
  uint64_t v40;
  char v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  id v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  CGRect v66;

  v2 = qword_100488870;
  v3 = *(_QWORD *)&v1[qword_100488870];
  if (!v3)
  {
    __break(1u);
    goto LABEL_29;
  }
  v4 = v1;
  objc_msgSend(v1, "addSubview:", *(_QWORD *)(v3 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView));
  v7 = *(_QWORD *)&v1[v2];
  if (!v7)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v8 = *(void **)(*(_QWORD *)(*(_QWORD *)(v7 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                            + OBJC_IVAR____TtC7Measure17CardContainerView_titleView)
                + OBJC_IVAR____TtC7Measure13CardTitleView_title);
  v9 = &v1[qword_100488878];
  Strong = swift_unknownObjectWeakLoadStrong(&v1[qword_100488878], v6);
  if (!Strong)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v11 = (void *)Strong;
  v63 = v9;
  v12 = *((_QWORD *)v9 + 1);
  ObjectType = swift_getObjectType(Strong);
  v14 = *(void (**)(uint64_t, uint64_t))(v12 + 64);
  v15 = v8;
  v14(ObjectType, v12);
  v17 = v16;

  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setText:", v18, swift_bridgeObjectRelease(v17).n128_f64[0]);

  v19 = *(_QWORD *)&v4[v2];
  if (!v19)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v19 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_rightItem), "addTarget:action:forControlEvents:", v4, "closePlatter", 64);
  v20 = *(_QWORD *)&v4[v2];
  if (!v20)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  objc_msgSend(*(id *)(*(_QWORD *)(v20 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton), "addTarget:action:forControlEvents:", v4, "copyToPasteboard", 64);
  v21 = *(_QWORD *)&v4[v2];
  if (!v21)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v21 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_leftItem), "addTarget:action:forControlEvents:", v4, "presentShareSheet", 64);
  if ((a1 & 1) != 0)
  {
    v23 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v4, "beginEditingTitleWithSender:");
    v24 = *(_QWORD *)&v4[v2];
    if (!v24)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    v25 = v23;
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v24 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_title), "addGestureRecognizer:", v23);
    swift_unknownObjectWeakAssign(&v4[qword_1004888B0], v25);

  }
  v26 = (void *)swift_unknownObjectWeakLoadStrong(&v4[qword_100488898], v22);
  v27 = &selRef_renderer_didAddNode_forAnchor_;
  if (!v26)
  {
    v45 = *(_QWORD *)&v4[v2];
    if (v45)
    {
      v46 = *(_QWORD *)(*(_QWORD *)(v45 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                      + OBJC_IVAR____TtC7Measure17CardContainerView_configuration);
      KeyPath = swift_getKeyPath(&unk_1003BAF08);
      v48 = swift_getKeyPath(&unk_1003BAF30);
      v50 = swift_retain_n(v46, 2, v49);
      static Published.subscript.getter(&v65, v50, KeyPath, v48);
      swift_release();
      swift_release();
      swift_release();
      v51 = v65;
      v52 = swift_getKeyPath(&unk_1003BAF50);
      v53 = swift_getKeyPath(&unk_1003BAF78);
      v65 = v51;
      static Published.subscript.setter(&v65, v46, v52, v53);
      goto LABEL_25;
    }
LABEL_36:
    __break(1u);
    return;
  }
  v28 = v26;
  objc_msgSend(v26, "setDataSource:", v4);
  objc_msgSend(v28, "setDelegate:", v4);
  objc_msgSend(v28, "setRowHeight:", UITableViewAutomaticDimension);
  objc_msgSend(v28, "setEstimatedRowHeight:", 88.0);
  objc_msgSend(v28, "setScrollEnabled:", 0);
  objc_msgSend(v28, "setSeparatorInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v29 = (void *)objc_opt_self(UIColor);
  v30 = v28;
  v31 = objc_msgSend(v29, "clearColor");
  objc_msgSend(v30, "setBackgroundColor:", v31);

  v32 = type metadata accessor for DetailedPlatterCellTableViewCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v32);
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v34);

  if (qword_10047A7B8 != -1)
    swift_once(&qword_10047A7B8, sub_10000F098);
  v35 = *(double *)&qword_1004AF108;
  objc_msgSend(v4, "bounds", v63);
  v36 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v35, 0.0, CGRectGetWidth(v66) - (v35 + v35), 0.5);
  if (qword_10047B128 != -1)
    swift_once(&qword_10047B128, sub_100197BAC);
  v37 = (void *)qword_1004AFCC8;
  v38 = qword_1004AFCD0;
  if ((byte_1004AFCD8 & 1) != 0)
  {
    v39 = byte_1004AFCE8;
    v40 = qword_1004AFCE0;
    v41 = byte_10048A2A0;
    v42 = (id)qword_1004AFCC8;
    v43 = v40;
    v27 = &selRef_renderer_didAddNode_forAnchor_;
    v44 = sub_100070DBC(v41, v43, v39);
    sub_100021580(v37, v38, 1);
  }
  else
  {
    if ((byte_10048A2A0 & 1) != 0)
      v54 = qword_1004AFCD0;
    else
      v54 = (id)qword_1004AFCC8;
    v44 = v54;
  }
  objc_msgSend(v36, "setBackgroundColor:", v44);

  objc_msgSend(v30, "addSubview:", v36);
  v56 = *(_QWORD *)&v4[v2];
  if (!v56)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v57 = *(void **)(v56 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
  v58 = (void *)swift_unknownObjectWeakLoadStrong(v64, v55);
  v59 = *(_QWORD *)(v64 + 8);
  v60 = v57;

  v61 = &v60[OBJC_IVAR____TtC7Measure17CardContainerView_internalSpatialPlatter];
  *((_QWORD *)v61 + 1) = v59;
  swift_unknownObjectWeakAssign(v61, v58);

LABEL_25:
  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.isIPad()() & 1) == 0)
  {
    v62 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v4, "closePlatter");
    objc_msgSend(v62, v27[256], v4);
    objc_msgSend(v4, "addGestureRecognizer:", v62);

  }
}

void sub_10018DFDC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  double v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  char v11;
  double v12;
  id v13;
  uint64_t v14;
  void *v15;
  double v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  char v27;
  double v28;
  id v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  Class isa;

  v1 = v0;
  if (qword_10047A770 != -1)
    swift_once(&qword_10047A770, sub_10000EF48);
  v2 = qword_100488870;
  v3 = *(void **)&v0[qword_100488870];
  if (!v3)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(double *)&qword_1004AF0A8;
  v5 = v3;
  sub_100184080(v1);

  v6 = *(_QWORD *)&v1[v2];
  if (!v6)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = *(_QWORD *)&v1[v2];
  if (!v7)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v7
                                                             + OBJC_IVAR____TtC7Measure23CardContainerController_containerView), "bottomAnchor"));
  v9 = objc_msgSend(v1, "bottomAnchor");
  v10 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v11 = static UIDevice.isIPhone()(v10);
  v12 = -v4;
  if ((v11 & 1) != 0)
    v12 = 0.0;
  v13 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v9, v12);

  v14 = qword_1004888A8;
  v15 = *(void **)&v1[qword_1004888A8];
  *(_QWORD *)&v1[qword_1004888A8] = v13;

  v17 = *(void **)&v1[v14];
  if (!v17)
    goto LABEL_24;
  LODWORD(v16) = 1148846080;
  objc_msgSend(v17, "setPriority:", v16);
  v18 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
  v19 = swift_allocObject(v18, 56, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1003B5630;
  v20 = *(void **)&v1[v14];
  if (!v20)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v21 = v19;
  *(_QWORD *)(v19 + 32) = v20;
  v22 = *(_QWORD *)&v1[v2];
  if (!v22)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v23 = *(void **)(v22 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
  v24 = v20;
  v25 = objc_msgSend(v23, "leftAnchor");
  v26 = objc_msgSend(v1, "leftAnchor");
  v27 = static UIDevice.isIPhone()(v26);
  v28 = 0.0;
  if ((v27 & 1) == 0)
    v28 = v4;
  v29 = objc_msgSend(v25, "constraintEqualToAnchor:constant:", v26, v28);

  *(_QWORD *)(v21 + 40) = v29;
  v31 = static UIDevice.isIPhone()(v30);
  v32 = *(_QWORD *)&v1[v2];
  if ((v31 & 1) != 0)
  {
    if (v32)
    {
      v33 = objc_msgSend(*(id *)(v32 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView), "widthAnchor");
      v34 = objc_msgSend(v1, "widthAnchor");
      v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

LABEL_20:
      v36 = (void *)objc_opt_self(NSLayoutConstraint);
      *(_QWORD *)(v21 + 48) = v35;
      specialized Array._endMutation()(v36);
      sub_100018148(0, (unint64_t *)&qword_100486300, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v36, "activateConstraints:", isa, swift_bridgeObjectRelease(v21).n128_f64[0]);

      return;
    }
    goto LABEL_27;
  }
  if (v32)
  {
    v34 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v32
                                                                + OBJC_IVAR____TtC7Measure23CardContainerController_containerView), "widthAnchor"));
    if (qword_10047A750 != -1)
      swift_once(&qword_10047A750, sub_10000EF04);
    v35 = objc_msgSend(v34, "constraintEqualToConstant:", *(double *)&qword_1004AF088);
    goto LABEL_20;
  }
LABEL_28:
  __break(1u);
}

void sub_10018E388(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_10018E3E0(v2);

  }
}

void sub_10018E3E0(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  BOOL v4;
  uint64_t (*v5)(_BYTE *, __n128);
  __n128 v6;
  void (*v7)(_BYTE *, _QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  _BYTE v16[32];

  v2 = v1;
  v3 = a1;
  v4 = a1 < 2u;
  v5 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v1 + qword_1004888D0) + 400);
  v6 = swift_retain();
  v7 = (void (*)(_BYTE *, _QWORD))v5(v16, v6);
  *(_BYTE *)(v8 + 1) = v4;
  v7(v16, 0);
  swift_release();
  if (v3 >= 2)
  {
    v10 = v1 + qword_100488880;
    Strong = swift_unknownObjectWeakLoadStrong(v2 + qword_100488880, v9);
    if (Strong)
    {
      v12 = Strong;
      v13 = *(_QWORD *)(v10 + 8);
      v14 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
      if ((static UIDevice.isIPhone()(v14) & 1) != 0)
      {
        ObjectType = swift_getObjectType(v12);
        (*(void (**)(uint64_t, uint64_t))(v13 + 48))(ObjectType, v13);
      }
      swift_unknownObjectRelease(v12);
    }
  }
}

uint64_t sub_10018E4CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100488868 + 8));

  sub_10001ADF4(v0 + qword_100488878);
  sub_10001ADF4(v0 + qword_100488880);
  swift_unknownObjectWeakDestroy(v0 + qword_100488898, v1);
  swift_unknownObjectWeakDestroy(v0 + qword_1004888A0, v2);

  swift_unknownObjectWeakDestroy(v0 + qword_1004888B0, v3);
  swift_unknownObjectWeakDestroy(v0 + qword_1004888B8, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_unknownObjectWeakDestroy(v0 + qword_100488908, v5);
}

id sub_10018E5EC()
{
  void *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  sub_10018E630();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "dealloc");
}

void sub_10018E630()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  char *v5;
  uint64_t v6;
  void *Strong;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(_BYTE *);
  void (*v11)(_BYTE *, _QWORD);
  _BYTE *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  _BYTE v28[32];

  v1 = v0;
  v2 = (void *)objc_opt_self(NSNotificationCenter);
  v3 = objc_msgSend(v2, "defaultCenter");
  objc_msgSend(v3, "removeObserver:name:object:", v1, UIKeyboardWillShowNotification, 0);

  v4 = objc_msgSend(v2, "defaultCenter");
  objc_msgSend(v4, "removeObserver:name:object:", v1, UIKeyboardWillHideNotification, 0);

  v5 = &v1[qword_1004888B8];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[qword_1004888B8], v6);
  if (Strong)
  {
    v8 = Strong;
    objc_msgSend(Strong, "removeTarget:action:", v1, "dismissKeyboard:");
    objc_msgSend(v1, "removeGestureRecognizer:", v8);

  }
  swift_unknownObjectWeakAssign(v5, 0);
  v9 = *(_QWORD *)&v1[qword_1004888D0];
  v10 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)v9 + 400);
  swift_retain(v9);
  v11 = (void (*)(_BYTE *, _QWORD))v10(v28);
  *v12 = 0;
  v11(v28, 0);
  *(_QWORD *)&v13 = swift_release(v9).n128_u64[0];
  v14 = qword_100488870;
  v15 = *(_QWORD *)&v1[qword_100488870];
  if (!v15)
  {
    __break(1u);
    goto LABEL_15;
  }
  *(_BYTE *)(v15 + OBJC_IVAR____TtC7Measure23CardContainerController_isDraggingEnabled) = 1;
  v1[qword_1004888C0] = 0;
  v16 = *(_QWORD *)&v1[v14];
  if (!v16)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v16 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView), "setDelegate:", 0, v13);
  v17 = *(_QWORD *)&v1[v14];
  if (!v17)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v17 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_rightItem), "removeTarget:action:forControlEvents:", v1, "closePlatter", 64);
  v18 = *(_QWORD *)&v1[v14];
  if (!v18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(*(id *)(*(_QWORD *)(v18 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton), "removeTarget:action:forControlEvents:", v1, "copyToPasteboard", 64);
  v19 = *(_QWORD *)&v1[v14];
  if (!v19)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v19 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_leftItem), "removeTarget:action:forControlEvents:", v1, "presentShareSheet", 64);
  v21 = swift_unknownObjectWeakLoadStrong(&v1[qword_1004888B0], v20);
  if (v21)
  {
    v23 = *(_QWORD *)&v1[v14];
    if (v23)
    {
      v24 = (void *)v21;
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v23 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_title), "removeGestureRecognizer:", v21);

      goto LABEL_11;
    }
LABEL_19:
    __break(1u);
    return;
  }
LABEL_11:
  v25 = (void *)swift_unknownObjectWeakLoadStrong(&v1[qword_100488898], v22);
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v25, "setDelegate:", 0);
    objc_msgSend(v26, "setDataSource:", 0);

  }
  v27 = *(void **)&v1[v14];
  *(_QWORD *)&v1[v14] = 0;

}

id sub_10018E96C(void *a1)
{
  objc_class *ObjectType;
  id v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType(a1);
  v3 = a1;
  sub_10018E630();
  v5.receiver = v3;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, "dealloc");
}

uint64_t sub_10018E9C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100488868 + 8));

  sub_10001ADF4(a1 + qword_100488878);
  sub_10001ADF4(a1 + qword_100488880);
  swift_unknownObjectWeakDestroy(a1 + qword_100488898, v2);
  swift_unknownObjectWeakDestroy(a1 + qword_1004888A0, v3);

  swift_unknownObjectWeakDestroy(a1 + qword_1004888B0, v4);
  swift_unknownObjectWeakDestroy(a1 + qword_1004888B8, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_unknownObjectWeakDestroy(a1 + qword_100488908, v6);
}

void sub_10018EAEC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_100193F20();
}

void sub_10018EB10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  void *v13;
  char *v14;
  uint64_t *v15;
  double Height;
  uint64_t v17;
  double v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  void *v42;
  void *v43;
  uint64_t v44;
  double v45;
  double v46;
  CGRect v47;

  v3 = v2;
  v4 = v2 + qword_100488878;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + qword_100488878, a2);
  if (!Strong)
  {
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v6 = (void *)Strong;
  v7 = *(_QWORD *)(v4 + 8);
  ObjectType = swift_getObjectType(Strong);
  v9 = (*(double (**)(uint64_t, uint64_t))(v7 + 88))(ObjectType, v7);

  if (v9 <= 0.0 || (*(_BYTE *)(v3 + qword_100488900) & 1) != 0)
    return;
  if (qword_10047A790 != -1)
    swift_once(&qword_10047A790, sub_10000F000);
  v10 = qword_100488870;
  v11 = *(_QWORD *)(v3 + qword_100488870);
  if (!v11)
    goto LABEL_29;
  v12 = *(double *)&qword_1004AF0C8;
  v13 = *(void **)(v11 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v14 = v13;
  if ((static UIDevice.isIPhone()(v14) & 1) != 0)
    v15 = &OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
  else
    v15 = &OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
  objc_msgSend(*(id *)&v14[*v15], "bounds");
  Height = CGRectGetHeight(v47);

  v17 = *(_QWORD *)(v3 + v10);
  if (!v17)
    goto LABEL_30;
  v18 = v12 + Height;
  v19 = *(id *)(v17 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
  sub_100018BA0((uint64_t)v19);
  v21 = v20;

  v22 = v18 + v21;
  v23 = v9 + v18;
  if (v22 < v23)
  {
    v24 = *(_QWORD *)(v3 + v10);
    if (!v24)
    {
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    *(_BYTE *)(*(_QWORD *)(v24 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
             + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) = 1;
    v23 = v22;
  }
  if (!*(_QWORD *)(v3 + v10))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  KeyPath = swift_getKeyPath(&unk_1003BAF08);
  v26 = swift_getKeyPath(&unk_1003BAF30);
  swift_retain();
  static Published.subscript.getter(&v46, v27, KeyPath, v26);
  swift_release();
  swift_release();
  swift_release();
  if (v46 != v23)
  {
    v28 = *(_QWORD *)(v3 + v10);
    if (!v28)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v29 = *(_QWORD *)(*(_QWORD *)(v28 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                    + OBJC_IVAR____TtC7Measure17CardContainerView_configuration);
    v30 = swift_getKeyPath(&unk_1003BAF08);
    v31 = swift_getKeyPath(&unk_1003BAF30);
    v46 = v23;
    swift_retain();
    static Published.subscript.setter(&v46, v29, v30, v31);
    v32 = *(void **)(v3 + v10);
    if (!v32)
    {
LABEL_35:
      __break(1u);
      return;
    }
    v33 = v32;
    sub_100184538();

  }
  v34 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v35 = objc_msgSend(v34, "preferredContentSizeCategory");

  LOBYTE(v34) = UIContentSizeCategory.isAccessibilityCategory.getter(v35);
  if ((v34 & 1) != 0)
  {
    v37 = swift_unknownObjectWeakLoadStrong(v4, v36);
    if (v37)
    {
      v38 = (void *)v37;
      v39 = *(_QWORD *)(v4 + 8);
      v40 = swift_getObjectType(v37);
      v41 = (*(double (**)(uint64_t, uint64_t))(v39 + 96))(v40, v39);

      if (v41 > 0.0)
      {
        sub_10018EF00(v3, v36, v18, v22, v23);
        return;
      }
      goto LABEL_23;
    }
    goto LABEL_33;
  }
LABEL_23:
  v42 = (void *)swift_unknownObjectWeakLoadStrong(v3 + qword_100488898, v36);
  if (v42)
  {
    v43 = v42;
    objc_msgSend(v42, "frame");
    if (v45 != 0.0)
      sub_10018EF00(v3, v44, v18, v22, v23);

  }
}

void sub_10018EEAC(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  objc_super v4;

  v4.receiver = a1;
  v4.super_class = (Class)swift_getObjectType(a1);
  v1 = v4.receiver;
  v2 = objc_msgSendSuper2(&v4, "layoutSubviews");
  sub_10018EB10((uint64_t)v2, v3);

}

void sub_10018EF00(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t ObjectType;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  double v31;

  v9 = a1 + qword_100488878;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + qword_100488878, a2);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_15;
  }
  v11 = (void *)Strong;
  v12 = *(_QWORD *)(v9 + 8);
  ObjectType = swift_getObjectType(Strong);
  v14 = (*(double (**)(uint64_t, uint64_t))(v12 + 96))(ObjectType, v12);

  v15 = v14 + a3;
  if (v15 > a4)
  {
    v16 = *(_QWORD *)(a1 + qword_100488870);
    if (!v16)
    {
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    *(_BYTE *)(*(_QWORD *)(v16 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
             + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) = 1;
    v15 = a4;
  }
  if (v15 == a5)
  {
    v17 = *(_QWORD *)(a1 + qword_100488870);
    if (!v17)
    {
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    v18 = *(_QWORD *)(*(_QWORD *)(v17 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                    + OBJC_IVAR____TtC7Measure17CardContainerView_configuration);
    KeyPath = swift_getKeyPath(&unk_1003BAF08);
    v20 = swift_getKeyPath(&unk_1003BAF30);
    v31 = v15 * 0.5;
    swift_retain();
    static Published.subscript.setter(&v31, v18, KeyPath, v20);
  }
  v21 = qword_100488870;
  if (!*(_QWORD *)(a1 + qword_100488870))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v22 = swift_getKeyPath(&unk_1003BAF50);
  v23 = swift_getKeyPath(&unk_1003BAF78);
  swift_retain();
  static Published.subscript.getter(&v31, v24, v22, v23);
  swift_release();
  swift_release();
  swift_release();
  if (v31 == v15)
  {
LABEL_13:
    *(_BYTE *)(a1 + qword_100488900) = 1;
    return;
  }
  v25 = *(_QWORD *)(a1 + v21);
  if (!v25)
    goto LABEL_18;
  v26 = *(_QWORD *)(*(_QWORD *)(v25 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                  + OBJC_IVAR____TtC7Measure17CardContainerView_configuration);
  v27 = swift_getKeyPath(&unk_1003BAF50);
  v28 = swift_getKeyPath(&unk_1003BAF78);
  v31 = v15;
  swift_retain();
  static Published.subscript.setter(&v31, v26, v27, v28);
  v29 = *(void **)(a1 + v21);
  if (v29)
  {
    v30 = v29;
    sub_100184538();

    goto LABEL_13;
  }
LABEL_19:
  __break(1u);
}

void sub_10018F158()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  id v20;
  char *v21;
  uint64_t v22;
  void *Strong;
  void *v24;
  uint64_t (*v25)(_QWORD *, __n128);
  __n128 v26;
  void (*v27)(_QWORD *, _QWORD);
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void *v34;
  char *v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  char *v43;
  char v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  _QWORD *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  void *v87;
  uint64_t v88;
  void *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  id v104;
  char *v105;
  char *v106;
  _QWORD v107[106];

  v1 = v0;
  v2 = sub_10000EDC8((uint64_t *)&unk_1004862E0);
  __chkstk_darwin(v2);
  v4 = (char *)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for MeasurementHistoryItem(0);
  v103 = *(_QWORD *)(v98 - 8);
  v5 = *(_QWORD *)(v103 + 64);
  v6 = __chkstk_darwin(v98);
  v96 = (uint64_t)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v101 = (char *)&v91 - v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v91 - v9;
  v11 = type metadata accessor for MeasurementsHistory(0);
  v12 = __chkstk_darwin(v11);
  v97 = (uint64_t *)((char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __chkstk_darwin(v12);
  v100 = (char *)&v91 - v15;
  __chkstk_darwin(v14);
  v17 = (uint64_t *)((char *)&v91 - v16);
  v18 = (void *)objc_opt_self(NSNotificationCenter);
  v19 = objc_msgSend(v18, "defaultCenter");
  objc_msgSend(v19, "removeObserver:name:object:", v1, UIKeyboardWillShowNotification, 0);

  v20 = objc_msgSend(v18, "defaultCenter");
  objc_msgSend(v20, "removeObserver:name:object:", v1, UIKeyboardWillHideNotification, 0);

  v21 = &v1[qword_1004888B8];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[qword_1004888B8], v22);
  if (Strong)
  {
    v24 = Strong;
    objc_msgSend(Strong, "removeTarget:action:", v1, "dismissKeyboard:");
    objc_msgSend(v1, "removeGestureRecognizer:", v24);

  }
  swift_unknownObjectWeakAssign(v21, 0);
  v25 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)&v1[qword_1004888D0] + 400);
  v26 = swift_retain();
  v27 = (void (*)(_QWORD *, _QWORD))v25(v107, v26);
  *v28 = 0;
  v27(v107, 0);
  swift_release();
  v29 = qword_100488870;
  v30 = *(_QWORD *)&v1[qword_100488870];
  if (!v30)
    goto LABEL_39;
  *(_BYTE *)(v30 + OBJC_IVAR____TtC7Measure23CardContainerController_isDraggingEnabled) = 1;
  v1[qword_1004888C0] = 0;
  v99 = v29;
  v31 = *(_QWORD *)&v1[v29];
  if (!v31)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = *(char **)(v31 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
  v33 = *(char **)&v32[OBJC_IVAR____TtC7Measure17CardContainerView_titleView];
  v34 = *(void **)&v33[OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView];
  v106 = v32;
  v35 = v33;
  v36 = v34;
  v37 = objc_msgSend(v36, "text");
  v95 = v10;
  if (v37)
  {
    v38 = v37;
    v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v41 = v40;
    if (v39 || v40 != 0xE000000000000000)
    {
      v42 = v36;
      v43 = v4;
      v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, 0, 0xE000000000000000, 0);
      swift_bridgeObjectRelease(v41);
      if ((v44 & 1) == 0)
      {
LABEL_16:
        v50 = *(id *)&v35[OBJC_IVAR____TtC7Measure13CardTitleView_title];
        objc_msgSend(v50, "setText:", v38);

        goto LABEL_17;
      }

      v4 = v43;
      v36 = v42;
    }
    else
    {

      swift_bridgeObjectRelease(0xE000000000000000);
    }
  }
  v45 = objc_msgSend(v36, "placeholder");
  if (!v45)
    goto LABEL_18;
  v38 = v45;
  v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
  v48 = v47;
  if (!v46 && v47 == 0xE000000000000000)
  {

    swift_bridgeObjectRelease(0xE000000000000000);
    goto LABEL_18;
  }
  v42 = v36;
  v43 = v4;
  v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, v47, 0, 0xE000000000000000, 0);
  swift_bridgeObjectRelease(v48);
  if ((v49 & 1) == 0)
    goto LABEL_16;
LABEL_17:

  v4 = v43;
  v36 = v42;
LABEL_18:
  v104 = v36;
  v105 = v35;
  v94 = v5;
  objc_msgSend(v36, "setDelegate:", 0);
  v51 = qword_1004888C8;
  swift_retain();
  StateValue.wrappedValue.getter(v17, v52);
  swift_release();
  v53 = *v17;
  swift_bridgeObjectRetain(*v17);
  sub_1000258F8((uint64_t)v17, type metadata accessor for MeasurementsHistory);
  v54 = *(_QWORD *)(v53 + 16);
  if (!v54)
  {
LABEL_26:
    swift_bridgeObjectRelease(v53);
LABEL_35:
    v87 = (void *)objc_opt_self(UIView);
    v88 = swift_allocObject(&unk_10044A930, 24, 7);
    *(_QWORD *)(v88 + 16) = v1;
    v107[4] = sub_100193B70;
    v107[5] = v88;
    v107[0] = _NSConcreteStackBlock;
    v107[1] = 1107296256;
    v107[2] = sub_10003ECA0;
    v107[3] = &unk_10044A948;
    v89 = _Block_copy(v107);
    v90 = v1;
    swift_release();
    objc_msgSend(v87, "animateWithDuration:delay:options:animations:completion:", 458754, v89, 0, 0.25, 0.0);
    _Block_release(v89);

    return;
  }
  v102 = v4;
  v55 = 0;
  v56 = *(unsigned __int8 *)(v103 + 80);
  v92 = ~v56;
  v93 = v56;
  v57 = (v56 + 32) & ~v56;
  v59 = *(_QWORD *)&v1[qword_100488868];
  v58 = *(_QWORD *)&v1[qword_100488868 + 8];
  v60 = *(_QWORD *)(v103 + 72);
  while (1)
  {
    v61 = *(_QWORD *)(v53 + v57);
    v62 = *(_QWORD *)(v53 + v57 + 8);
    v63 = v61 == v59 && v62 == v58;
    if (v63 || (_stringCompareWithSmolCheck(_:_:expecting:)(v61, v62, v59, v58, 0) & 1) != 0)
      break;
    ++v55;
    v57 += v60;
    if (v54 == v55)
      goto LABEL_26;
  }
  swift_bridgeObjectRelease(v53);
  v64 = *(_QWORD *)&v1[v99];
  if (v64)
  {
    v65 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v64 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_title), "text", swift_bridgeObjectRetain(v58).n128_f64[0]);
    v67 = v100;
    v66 = (uint64_t)v101;
    if (v65)
    {
      v68 = v65;
      v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
      v91 = v69;

    }
    else
    {
      swift_retain();
      StateValue.wrappedValue.getter(v67, v70);
      swift_release();
      v71 = *v67;
      swift_bridgeObjectRetain(*v67);
      sub_1000258F8((uint64_t)v67, type metadata accessor for MeasurementsHistory);
      if (v55 >= *(_QWORD *)(v71 + 16))
      {
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      sub_1000226FC(v71 + v57, v66);
      swift_bridgeObjectRelease(v71);
      v72 = *(_QWORD *)(v66 + 24);
      v99 = *(_QWORD *)(v66 + 16);
      v91 = v72;
      swift_bridgeObjectRetain(v72);
      sub_1000258F8(v66, type metadata accessor for MeasurementHistoryItem);
    }
    v103 = v51;
    swift_retain();
    StateValue.wrappedValue.getter(v67, v73);
    swift_release();
    v74 = *v67;
    swift_bridgeObjectRetain(*v67);
    sub_1000258F8((uint64_t)v67, type metadata accessor for MeasurementsHistory);
    if (v55 >= *(_QWORD *)(v74 + 16))
    {
      __break(1u);
    }
    else
    {
      sub_1000226FC(v74 + v57, v66);
      swift_bridgeObjectRelease(v74);
      v75 = (int *)v98;
      sub_10008F1C8(v66 + *(int *)(v98 + 24), (uint64_t)v102);
      sub_1000258F8(v66, type metadata accessor for MeasurementHistoryItem);
      swift_retain();
      v76 = v97;
      StateValue.wrappedValue.getter(v97, v77);
      swift_release();
      v78 = *v76;
      swift_bridgeObjectRetain(*v76);
      sub_1000258F8((uint64_t)v76, type metadata accessor for MeasurementsHistory);
      if (v55 < *(_QWORD *)(v78 + 16))
      {
        v79 = v78 + v57;
        v80 = v96;
        sub_1000226FC(v79, v96);
        swift_bridgeObjectRelease(v78);
        sub_10001F970((const void *)(v80 + v75[7]), v107);
        sub_100193978((uint64_t)v107);
        sub_1000258F8(v80, type metadata accessor for MeasurementHistoryItem);
        v81 = v66;
        v82 = v95;
        *v95 = v59;
        v82[1] = v58;
        v83 = v91;
        v82[2] = v99;
        v82[3] = v83;
        sub_100193B90((uint64_t)v102, (uint64_t)v82 + v75[6]);
        sub_10001F970(v107, (char *)v82 + v75[7]);
        *((_BYTE *)v82 + v75[8]) = 1;
        sub_1000226FC((uint64_t)v82, v81);
        v84 = (v93 + 24) & v92;
        v85 = swift_allocObject(&unk_10044A980, v84 + v94, v93 | 7);
        *(_QWORD *)(v85 + 16) = v55;
        sub_10008BF28(v81, v85 + v84);
        v86 = swift_retain();
        StateValue.mutateImmediatelyNotifyAsync(_:)(sub_100193E70, v85, v86);
        swift_release();
        swift_release();
        sub_1000258F8((uint64_t)v82, type metadata accessor for MeasurementHistoryItem);
        goto LABEL_35;
      }
    }
    __break(1u);
    goto LABEL_38;
  }
LABEL_41:
  __break(1u);
}

size_t sub_10018FA1C(size_t *a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  size_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = (_QWORD *)*a1;
  result = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = (size_t)v6;
  if ((result & 1) != 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = sub_100028750(v6);
  v6 = (_QWORD *)result;
  *a1 = result;
  if ((a2 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (v6[2] > a2)
  {
    v8 = type metadata accessor for MeasurementHistoryItem(0);
    v9 = *(_QWORD *)(v8 - 8);
    sub_1000A7ECC(a3, (uint64_t)v6+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * a2);
    v10 = (uint64_t)a1 + *(int *)(type metadata accessor for MeasurementsHistory(0) + 24);
    sub_100036600(v10, (uint64_t *)&unk_100488B90);
    sub_1000226FC(a3, v10);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v10, 0, 1, v8);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_10018FB00(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  void *v3;
  char *v4;

  v1 = *(_QWORD *)(a1 + qword_100488870);
  if (v1)
  {
    v2 = *(char **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                  + OBJC_IVAR____TtC7Measure17CardContainerView_titleView);
    v3 = *(void **)&v2[OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView];
    v4 = v2;
    objc_msgSend(v3, "setAlpha:", 0.0);
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_rightItem], "setAlpha:", 1.0);
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_leftItem], "setAlpha:", 1.0);
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_grabber], "setAlpha:", 1.0);
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_title], "setAlpha:", 1.0);

  }
  else
  {
    __break(1u);
  }
}

void sub_10018FC00(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  void (*v4)(_QWORD *__return_ptr, __n128);
  __n128 v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void *v14;
  char *v15;
  char *v16;
  id v17;
  id v18;
  uint64_t (*v19)(_QWORD *, __n128);
  __n128 v20;
  void (*v21)(_QWORD *, _QWORD);
  _BYTE *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  char *v27;
  _QWORD v28[6];

  v2 = v1;
  if (objc_msgSend(a1, "state") == (id)3)
  {
    v3 = qword_1004888D0;
    v4 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)&v1[qword_1004888D0] + 144);
    v5 = swift_retain();
    v4(v28, v5);
    swift_release();
    if ((v28[0] & 0x10000) == 0)
    {
      v6 = (void *)objc_opt_self(NSNotificationCenter);
      v7 = objc_msgSend(v6, "defaultCenter");
      objc_msgSend(v7, "addObserver:selector:name:object:", v2, "keyboardWillShowWithNotification:", UIKeyboardWillShowNotification, 0);

      v8 = objc_msgSend(v6, "defaultCenter");
      objc_msgSend(v8, "addObserver:selector:name:object:", v2, "keyboardWillHideWithNotification:", UIKeyboardWillHideNotification, 0);

      v9 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v2, "dismissKeyboard:");
      objc_msgSend(v2, "addGestureRecognizer:", v9);
      swift_unknownObjectWeakAssign(&v2[qword_1004888B8], v9);
      v10 = qword_100488870;
      v11 = *(_QWORD *)&v2[qword_100488870];
      if (v11)
      {
        v12 = *(char **)(v11 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
        v13 = *(char **)&v12[OBJC_IVAR____TtC7Measure17CardContainerView_titleView];
        v14 = *(void **)&v13[OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView];
        v15 = v12;
        v16 = v13;
        v17 = v14;
        objc_msgSend(v17, "setDelegate:", v2);
        objc_msgSend(v17, "setUserInteractionEnabled:", 1);
        v18 = objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC7Measure13CardTitleView_title], "text");
        objc_msgSend(v17, "setText:", v18);

        objc_msgSend(v17, "becomeFirstResponder");
        v19 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)&v2[v3] + 400);
        v20 = swift_retain();
        v21 = (void (*)(_QWORD *, _QWORD))v19(v28, v20);
        *v22 = 1;
        v21(v28, 0);
        swift_release();
        v23 = *(_QWORD *)&v2[v10];
        if (v23)
        {
          *(_BYTE *)(v23 + OBJC_IVAR____TtC7Measure23CardContainerController_isDraggingEnabled) = 0;
          v2[qword_1004888C0] = 1;
          v24 = (void *)objc_opt_self(UIView);
          v25 = swift_allocObject(&unk_10044AAE8, 24, 7);
          *(_QWORD *)(v25 + 16) = v2;
          v28[4] = sub_100194620;
          v28[5] = v25;
          v28[0] = _NSConcreteStackBlock;
          v28[1] = 1107296256;
          v28[2] = sub_10003ECA0;
          v28[3] = &unk_10044AB00;
          v26 = _Block_copy(v28);
          v27 = v2;
          swift_release();
          objc_msgSend(v24, "animateWithDuration:delay:options:animations:completion:", 458754, v26, 0, 0.25, 0.0);
          _Block_release(v26);

          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
  }
}

void sub_10018FF64(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  void *v3;
  char *v4;

  v1 = *(_QWORD *)(a1 + qword_100488870);
  if (v1)
  {
    v2 = *(char **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                  + OBJC_IVAR____TtC7Measure17CardContainerView_titleView);
    v3 = *(void **)&v2[OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView];
    v4 = v2;
    objc_msgSend(v3, "setAlpha:", 1.0);
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_rightItem], "setAlpha:", 0.0);
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_leftItem], "setAlpha:", 0.0);
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_grabber], "setAlpha:", 0.0);
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_title], "setAlpha:", 0.0);

  }
  else
  {
    __break(1u);
  }
}

void sub_100190064(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_10018FC00(v4);

}

void sub_1001900B8(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  double v10;
  char v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  char *v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  double v37;
  void *v38;
  CGFloat v39;
  void *v40;
  _BYTE *v41;
  CGAffineTransform v42;
  CGAffineTransform aBlock;
  id v44[2];

  v2 = v1;
  v3 = objc_msgSend(a1, "userInfo");
  if (!v3)
    return;
  v4 = v3;
  v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v44[0] = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
  v44[1] = v6;
  AnyHashable.init<A>(_:)(&aBlock, v44, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v7 = sub_1000C82B0((uint64_t)&aBlock), (v8 & 1) != 0))
    sub_10004F88C(*(_QWORD *)(v5 + 56) + 32 * v7, (uint64_t)&v42);
  else
    memset(&v42, 0, 32);
  sub_1000C9818((uint64_t)&aBlock);
  if (!*(_QWORD *)&v42.d)
  {
    swift_bridgeObjectRelease(v5);
    sub_100036600((uint64_t)&v42, (uint64_t *)&unk_10047ED00);
    return;
  }
  v9 = sub_100018148(0, &qword_100488BA8, NSValue_ptr);
  *(_QWORD *)&v10 = swift_dynamicCast(v44, &v42, (char *)&type metadata for Any + 8, v9, 6).n128_u64[0];
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease(v5);
    return;
  }
  v12 = v44[0];
  objc_msgSend(v44[0], "CGRectValue", v10);
  v14 = v13;
  v16 = v15;

  v17 = sub_100194218(v5);
  v19 = v18;
  swift_bridgeObjectRelease(v5);
  v2[qword_100488888] = 0;
  v20 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.isIPhone()(v20) & 1) == 0)
  {
    v31 = *(void **)&v2[qword_1004888A8];
    if (v31)
    {
      v32 = qword_10047A770;
      v33 = v31;
      if (v32 != -1)
        swift_once(&qword_10047A770, sub_10000EF48);
      objc_msgSend(v33, "setConstant:", -(v16 + *(double *)&qword_1004AF0A8), *(_OWORD *)&v42.a, *(_QWORD *)&v42.c);

      v34 = *(void **)&v2[qword_100488870];
      if (v34)
      {
        v35 = v34;
        sub_100185A58();

        if (v17 <= 0.0)
          v36 = 458754;
        else
          v36 = v19;
        if (v17 <= 0.0)
          v37 = 0.25;
        else
          v37 = v17;
        v38 = (void *)objc_opt_self(UIView);
        v39 = COERCE_DOUBLE(swift_allocObject(&unk_10044AA98, 24, 7));
        *(_QWORD *)(*(_QWORD *)&v39 + 16) = v2;
        *(_QWORD *)&aBlock.tx = sub_10019464C;
        aBlock.ty = v39;
        *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
        *(_QWORD *)&aBlock.b = 1107296256;
        *(_QWORD *)&aBlock.c = sub_10003ECA0;
        *(_QWORD *)&aBlock.d = &unk_10044AAB0;
        v40 = _Block_copy(&aBlock);
        v41 = v2;
        swift_release();
        objc_msgSend(v38, "animateWithDuration:delay:options:animations:completion:", v36, v40, 0, v37, 0.0);
        _Block_release(v40);
        return;
      }
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      return;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v21 = qword_100488870;
  v22 = *(_QWORD *)&v2[qword_100488870];
  if (!v22)
  {
    __break(1u);
    goto LABEL_30;
  }
  v23 = *(char **)(v22 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
  v24 = *(void **)&v23[OBJC_IVAR____TtC7Measure17CardContainerView_draggableView];
  v25 = v23;
  objc_msgSend(v24, "frame");
  objc_msgSend(v25, "convertPoint:toView:", 0);
  v27 = v26;

  if (qword_10047ADA8 != -1)
    swift_once(&qword_10047ADA8, sub_10018D264);
  v28 = v14 - (v27 + *(double *)&qword_100488860);
  if (v28 < 0.0)
  {
    v29 = *(_QWORD *)&v2[v21];
    if (v29)
    {
      v30 = objc_retain(*(id *)(*(_QWORD *)(v29 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                              + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView));
      objc_msgSend(v30, "transform");
      CGAffineTransformTranslate(&v42, &aBlock, 0.0, v28);
      aBlock = v42;
      objc_msgSend(v30, "setTransform:", &aBlock);

      return;
    }
    goto LABEL_32;
  }
}

void sub_1001904EC(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1001900B8(v4);

}

void sub_100190540(void *a1)
{
  char *v1;
  char *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  double v12;
  void *v13;
  double v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  id (*v32)();
  uint64_t v33;

  v2 = v1;
  if ((v1[qword_100488888] & 1) != 0)
  {
    v1[qword_100488888] = 0;
    return;
  }
  if (v1[qword_1004888C0] == 1)
  {
    v3 = objc_msgSend(a1, "userInfo");
    if (v3)
    {
      v4 = v3;
      v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v6 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
      if ((static UIDevice.isIPhone()(v6) & 1) != 0)
      {
        *(_QWORD *)&v7 = swift_bridgeObjectRelease(v5).n128_u64[0];
        v8 = *(_QWORD *)&v2[qword_100488870];
        if (v8)
        {
          v9 = *(void **)(*(_QWORD *)(v8 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                        + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
          v28 = 0x3FF0000000000000;
          v29 = 0;
          v30 = 0;
          v31 = 0x3FF0000000000000;
          v32 = 0;
          v33 = 0;
          objc_msgSend(v9, "setTransform:", &v28, v7);
          return;
        }
        __break(1u);
        goto LABEL_20;
      }
      v10 = qword_1004888A8;
      v11 = *(void **)&v2[qword_1004888A8];
      if (!v11)
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      objc_msgSend(v11, "constant");
      v13 = *(void **)&v2[v10];
      if (!v13)
      {
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      v14 = v12;
      v15 = qword_10047A770;
      v16 = v13;
      if (v15 != -1)
        swift_once(&qword_10047A770, sub_10000EF48);
      objc_msgSend(v16, "setConstant:", -*(double *)&qword_1004AF0A8);

      objc_msgSend(v2, "setNeedsLayout");
      objc_msgSend(v2, "layoutIfNeeded");
      v17 = *(void **)&v2[qword_100488870];
      if (!v17)
        goto LABEL_22;
      v18 = v17;
      sub_100185B58();

      v19 = *(void **)&v2[v10];
      if (!v19)
      {
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      objc_msgSend(v19, "setConstant:", v14);
      objc_msgSend(v2, "setNeedsLayout");
      objc_msgSend(v2, "layoutIfNeeded");
      v20 = *(void **)&v2[v10];
      if (!v20)
      {
LABEL_24:
        __break(1u);
        return;
      }
      objc_msgSend(v20, "setConstant:", -*(double *)&qword_1004AF0A8);
      v21 = sub_100194218(v5);
      v23 = v22;
      swift_bridgeObjectRelease(v5);
      if (v21 <= 0.0)
      {
        v23 = 458754;
        v21 = 0.25;
      }
      v24 = (void *)objc_opt_self(UIView);
      v25 = swift_allocObject(&unk_10044AA48, 24, 7);
      *(_QWORD *)(v25 + 16) = v2;
      v32 = sub_100194610;
      v33 = v25;
      v28 = (uint64_t)_NSConcreteStackBlock;
      v29 = 1107296256;
      v30 = sub_10003ECA0;
      v31 = (uint64_t)&unk_10044AA60;
      v26 = _Block_copy(&v28);
      v27 = v2;
      swift_release();
      objc_msgSend(v24, "animateWithDuration:delay:options:animations:completion:", v23, v26, 0, v21, 0.0);
      _Block_release(v26);
    }
  }
}

void sub_100190860(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_100190540(v4);

}

char *sub_1001908B4(char *result)
{
  uint64_t v1;

  v1 = *(_QWORD *)&result[qword_100488870];
  if (v1)
    return (char *)objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView), "resignFirstResponder");
  __break(1u);
  return result;
}

void sub_100190904(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_100194410();

}

void sub_100190950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t Strong;
  void *v30;
  uint64_t v31;
  uint64_t ObjectType;
  void *v33;
  uint64_t v34;
  id v35;
  double Width;
  double Height;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  CGRect v50;
  CGRect v51;

  v1 = v0;
  v2 = type metadata accessor for MeasurementsHistory(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_10000EDC8((uint64_t *)&unk_100488B90);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MeasurementHistoryItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (uint64_t *)((char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v14 = (char *)&v46 - v13;
  swift_retain();
  StateValue.wrappedValue.getter(v4, v15);
  swift_release();
  v16 = *v4;
  swift_bridgeObjectRetain(*v4);
  sub_1000258F8((uint64_t)v4, type metadata accessor for MeasurementsHistory);
  v18 = *(_QWORD *)(v16 + 16);
  if (v18)
  {
    v47 = v8;
    v48 = v14;
    v19 = v16 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v49 = v1;
    v20 = *(_QWORD *)(v1 + qword_100488868);
    v21 = *(_QWORD *)(v1 + qword_100488868 + 8);
    v22 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain(v16);
    while (1)
    {
      sub_1000226FC(v19, (uint64_t)v12);
      v23 = v12[1];
      v24 = *v12 == v20 && v23 == v21;
      if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v23, v20, v21, 0) & 1) != 0)
        break;
      sub_1000258F8((uint64_t)v12, type metadata accessor for MeasurementHistoryItem);
      v19 += v22;
      if (!--v18)
      {
        v17 = swift_bridgeObjectRelease(v16);
        v25 = 1;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease(v16);
    sub_10008BF28((uint64_t)v12, (uint64_t)v7);
    v25 = 0;
LABEL_11:
    v14 = v48;
    v1 = v49;
    v8 = v47;
  }
  else
  {
    v25 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(v7, v25, 1, v8, v17);
  v26 = swift_bridgeObjectRelease(v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v26) == 1)
  {
    sub_100036600((uint64_t)v7, (uint64_t *)&unk_100488B90);
    return;
  }
  sub_10008BF28((uint64_t)v7, (uint64_t)v14);
  v27 = v1 + qword_100488878;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + qword_100488878, v28);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_22;
  }
  v30 = (void *)Strong;
  v31 = *(_QWORD *)(v27 + 8);
  ObjectType = swift_getObjectType(Strong);
  v33 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 56))(v14, ObjectType, v31);

  if (!v33)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v34 = *(_QWORD *)(v1 + qword_100488870);
  if (!v34)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v35 = objc_retain(*(id *)(*(_QWORD *)(*(_QWORD *)(v34 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                                      + OBJC_IVAR____TtC7Measure17CardContainerView_titleView)
                          + OBJC_IVAR____TtC7Measure13CardTitleView_leftItem));
  objc_msgSend(v35, "frame");
  Width = CGRectGetWidth(v50);
  objc_msgSend(v35, "frame");
  Height = CGRectGetHeight(v51);
  v38 = sub_10000F388(v33, (uint64_t)v35, 0.0, 0.0, Width, Height);

  v39 = v1 + qword_100488908;
  swift_unknownObjectWeakAssign(v1 + qword_100488908, v38);
  v41 = swift_unknownObjectWeakLoadStrong(v1 + qword_1004888A0, v40);
  if (!v41)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v43 = (void *)v41;
  v44 = swift_unknownObjectWeakLoadStrong(v39, v42);
  if (v44)
  {
    v45 = (void *)v44;
    objc_msgSend(v43, "presentViewController:animated:completion:", v44, 1, 0);

    sub_1000258F8((uint64_t)v14, type metadata accessor for MeasurementHistoryItem);
    return;
  }
LABEL_25:
  __break(1u);
}

void sub_100190D24(void *a1)
{
  id v1;

  v1 = a1;
  sub_100190950();

}

void sub_100190D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t Strong;
  void *v30;
  uint64_t v31;
  uint64_t ObjectType;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char v52[24];
  NSAttributedString_optional v53;

  v1 = v0;
  v2 = type metadata accessor for MeasurementsHistory(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_10000EDC8((uint64_t *)&unk_100488B90);
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MeasurementHistoryItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (uint64_t *)((char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v14 = (char *)&v49 - v13;
  swift_retain();
  StateValue.wrappedValue.getter(v4, v15);
  swift_release();
  v16 = *v4;
  swift_bridgeObjectRetain(*v4);
  sub_1000258F8((uint64_t)v4, type metadata accessor for MeasurementsHistory);
  v18 = *(_QWORD *)(v16 + 16);
  if (v18)
  {
    v49 = v8;
    v50 = v1;
    v51 = v14;
    v19 = v16 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v20 = *(_QWORD *)(v1 + qword_100488868);
    v21 = *(_QWORD *)(v1 + qword_100488868 + 8);
    v22 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain(v16);
    while (1)
    {
      sub_1000226FC(v19, (uint64_t)v12);
      v23 = v12[1];
      v24 = *v12 == v20 && v23 == v21;
      if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v23, v20, v21, 0) & 1) != 0)
        break;
      sub_1000258F8((uint64_t)v12, type metadata accessor for MeasurementHistoryItem);
      v19 += v22;
      if (!--v18)
      {
        v17 = swift_bridgeObjectRelease(v16);
        v25 = 1;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease(v16);
    sub_10008BF28((uint64_t)v12, (uint64_t)v7);
    v25 = 0;
LABEL_11:
    v1 = v50;
    v14 = v51;
    v8 = v49;
  }
  else
  {
    v25 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(v7, v25, 1, v8, v17);
  v26 = swift_bridgeObjectRelease(v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v26) == 1)
  {
    sub_100036600((uint64_t)v7, (uint64_t *)&unk_100488B90);
  }
  else
  {
    sub_10008BF28((uint64_t)v7, (uint64_t)v14);
    v27 = v1 + qword_100488878;
    Strong = swift_unknownObjectWeakLoadStrong(v1 + qword_100488878, v28);
    if (Strong)
    {
      v30 = (void *)Strong;
      v31 = *(_QWORD *)(v27 + 8);
      ObjectType = swift_getObjectType(Strong);
      v33 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 56))(v14, ObjectType, v31);

      if (v33)
      {
        v34 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
        v35 = v33;
        v53.value.super.isa = (Class)v33;
        UIPasteboard.set(attributedString:)(v53);

        v36 = v1 + qword_100488880;
        v38 = swift_unknownObjectWeakLoadStrong(v1 + qword_100488880, v37);
        if (v38)
        {
          v40 = v38;
          v41 = *(_QWORD *)(v36 + 8);
          v42 = swift_getObjectType(v38);
          (*(void (**)(uint64_t, uint64_t))(v41 + 32))(v42, v41);
          swift_unknownObjectRelease(v40);
        }
        v43 = swift_unknownObjectWeakLoadStrong(v36, v39);
        if (v43)
        {
          v44 = v43;
          v45 = *(_QWORD *)(v36 + 8);
          v46 = swift_getObjectType(v43);
          (*(void (**)(uint64_t, uint64_t))(v45 + 24))(v46, v45);
          swift_unknownObjectRelease(v44);
        }
        if (qword_10047AB68 != -1)
          swift_once(&qword_10047AB68, sub_10011E814);
        v47 = qword_1004AF6B8;

        sub_1000258F8((uint64_t)v14, type metadata accessor for MeasurementHistoryItem);
        v48 = v47 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
        swift_beginAccess(v48, v52, 1, 0);
        *(double *)(v48 + 56) = *(double *)(v48 + 56) + 1.0;
      }
      else
      {
        sub_1000258F8((uint64_t)v14, type metadata accessor for MeasurementHistoryItem);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100191134(void *a1)
{
  id v1;

  v1 = a1;
  sub_100190D58();

}

uint64_t sub_100191168(char *a1, uint64_t a2)
{
  char *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t);
  char *v9;

  v3 = &a1[qword_100488880];
  result = swift_unknownObjectWeakLoadStrong(&a1[qword_100488880], a2);
  if (result)
  {
    v5 = result;
    v6 = *((_QWORD *)v3 + 1);
    ObjectType = swift_getObjectType(result);
    v8 = *(void (**)(uint64_t, uint64_t))(v6 + 24);
    v9 = a1;
    v8(ObjectType, v6);

    return swift_unknownObjectRelease(v5);
  }
  return result;
}

void sub_1001911F0()
{
  char *v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  char v12;
  id v13;
  _BYTE v14[5];
  unint64_t v15;

  v1 = v0;
  swift_retain();
  StateValue.wrappedValue.getter(&v15, v2);
  swift_release();
  v3 = v15;
  v4 = *(double *)&v0[qword_100488890];
  v5 = *(double *)&v0[qword_100488890 + 8];
  v6 = *(double *)&v0[qword_100488890 + 16];
  v7 = *(double *)&v0[qword_100488890 + 24];
  v8 = qword_100488910;
  if ((v0[qword_100488910] & 1) != 0)
  {
    v9 = 0;
  }
  else
  {
    swift_retain();
    StateValue.wrappedValue.getter(v14, v10);
    swift_release();
    v9 = v14[3] ^ 1;
  }
  v11 = *(void **)&v0[qword_100488870];
  if (v11)
  {
    v12 = v0[v8];
    v13 = v11;
    sub_1000183D4(v3, v1, v9 & 1, (uint64_t)v13, v12, v4, v5, v6, v7);

    *((_BYTE *)v1 + v8) = 0;
  }
  else
  {
    __break(1u);
  }
}

void sub_100191304()
{
  char *v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  uint64_t v8;
  void *v9;
  char v10;
  id v11;
  _BYTE v12[5];
  unint64_t v13;

  v1 = v0;
  v0[qword_100488888] = v0[qword_1004888C0];
  swift_retain();
  StateValue.wrappedValue.getter(&v13, v2);
  swift_release();
  v3 = v13;
  v4 = *(double *)&v0[qword_100488890];
  v5 = *(double *)&v0[qword_100488890 + 8];
  v6 = *(double *)&v0[qword_100488890 + 16];
  v7 = *(double *)&v0[qword_100488890 + 24];
  swift_retain();
  StateValue.wrappedValue.getter(v12, v8);
  swift_release();
  v9 = *(void **)&v0[qword_100488870];
  if (v9)
  {
    v10 = v12[3] ^ 1;
    v11 = v9;
    sub_1000183D4(v3, v1, v10, (uint64_t)v11, 0, v4, v5, v6, v7);

  }
  else
  {
    __break(1u);
  }
}

void sub_100191408()
{
  char *v0;
  void *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  id v9;
  void *v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *Strong;
  void *v15;
  _QWORD v16[6];

  v1 = v0;
  swift_retain();
  StateValue.wrappedValue.getter(v16, v2);
  *(_QWORD *)&v3 = swift_release().n128_u64[0];
  if (BYTE3(v16[0]) == 1)
  {
    v4 = *(_QWORD *)&v0[qword_100488870];
    if (!v4)
    {
      __break(1u);
      return;
    }
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView), "resignFirstResponder", v3);
  }
  swift_retain();
  StateValue.wrappedValue.getter(v16, v5);
  swift_release();
  if (BYTE3(v16[0]))
    v6 = 0.0;
  else
    v6 = 1.0;
  objc_msgSend(v0, "alpha");
  if (v7 != v6)
  {
    v8 = swift_allocObject(&unk_10044A9A8, 32, 7);
    *(_QWORD *)(v8 + 16) = v1;
    *(double *)(v8 + 24) = v6;
    v9 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    v16[4] = sub_10004FC64;
    v16[5] = v8;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_10003ECA0;
    v16[3] = &unk_10044A9C0;
    v10 = _Block_copy(v16);
    v11 = v1;
    swift_release();
    v12 = objc_msgSend(v9, "initWithDuration:dampingRatio:animations:", v10, 0.5, 0.6);
    _Block_release(v10);
    objc_msgSend(v12, "setInterruptible:", 0);
    objc_msgSend(v12, "startAnimation");
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v11[qword_100488908], v13);
    if (Strong)
    {
      v15 = Strong;
      objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

      v12 = v15;
    }

  }
}

void sub_100191620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = v2;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + qword_100488908, a2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = qword_1004888E0;
    v7 = *(_QWORD *)(v2 + qword_1004888E0);
    v8 = swift_retain(*(_QWORD *)(v3 + qword_1004888E0));
    StateValue.wrappedValue.getter((uint64_t *)((char *)&v12 + 5), v8);
    v9 = swift_release(v7).n128_u64[0];
    if (BYTE5(v12) == 2
      || (v10 = *(_QWORD *)(v3 + v6),
          v11 = swift_retain(v10),
          StateValue.wrappedValue.getter(&v12, v11),
          v9 = swift_release(v10).n128_u64[0],
          v12 == 1))
    {
      objc_msgSend(v5, "dismissViewControllerAnimated:completion:", 0, 0, *(double *)&v9);
    }

  }
}

double sub_1001916D8()
{
  uint64_t v0;
  double result;
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[16];
  uint64_t v5;
  _BYTE v6[16];
  uint64_t v7;

  v7 = v0;
  swift_retain();
  StateValue.ifUpdated(_:)(sub_100193EB0, v6);
  swift_release();
  v5 = v0;
  swift_retain();
  StateValue.ifUpdated(_:)(sub_100193EB8, v4);
  swift_release();
  v3 = v0;
  swift_retain();
  StateValue.ifUpdated(_:)(sub_100193EDC, &v2);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10019178C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (*(_BYTE *)(a2 + qword_100488910) == 1)
  {
    sub_1001911F0();
  }
  else
  {
    v2 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
    if ((static UIDevice.isIPhone()(v2) & 1) == 0)
      sub_100191304();
  }
}

void sub_1001917F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char v42;
  Class isa;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  NSString v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  NSString v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  char *v70;
  uint64_t v71;
  _QWORD v72[6];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v3 = v2;
  v4 = type metadata accessor for IndexPath(0, a2);
  v67 = *(_QWORD *)(v4 - 8);
  v68 = v4;
  __chkstk_darwin(v4);
  v70 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MeasurementsHistory(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10000EDC8((uint64_t *)&unk_100488B90);
  __chkstk_darwin(v9);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MeasurementHistoryItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (uint64_t *)((char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v71 = (uint64_t)&v63 - v17;
  v18 = v2 + qword_100488878;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + qword_100488878, v19);
  if (Strong)
  {
    v66 = Strong;
    v22 = *(_QWORD *)(v18 + 8);
    v69 = (id)swift_unknownObjectWeakLoadStrong(v2 + qword_100488898, v21);
    if (!v69)
    {

      return;
    }
    swift_retain();
    StateValue.wrappedValue.getter(v8, v23);
    swift_release();
    v24 = *v8;
    swift_bridgeObjectRetain(*v8);
    sub_1000258F8((uint64_t)v8, type metadata accessor for MeasurementsHistory);
    v26 = *(_QWORD *)(v24 + 16);
    if (v26)
    {
      v63 = v12;
      v64 = v11;
      v65 = v18;
      v27 = v24 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
      v28 = v3 + qword_100488868;
      v30 = *(_QWORD *)(v3 + qword_100488868);
      v29 = *(_QWORD *)(v28 + 8);
      v31 = *(_QWORD *)(v13 + 72);
      swift_bridgeObjectRetain(v24);
      while (1)
      {
        sub_1000226FC(v27, (uint64_t)v16);
        v32 = v16[1];
        v33 = *v16 == v30 && v32 == v29;
        if (v33 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v16, v32, v30, v29, 0) & 1) != 0)
          break;
        sub_1000258F8((uint64_t)v16, type metadata accessor for MeasurementHistoryItem);
        v27 += v31;
        if (!--v26)
        {
          v25 = swift_bridgeObjectRelease(v24);
          v34 = 1;
          v18 = v65;
          v11 = v64;
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRelease(v24);
      v11 = v64;
      sub_10008BF28((uint64_t)v16, (uint64_t)v64);
      v34 = 0;
      v18 = v65;
LABEL_14:
      v12 = v63;
    }
    else
    {
      v34 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56))(v11, v34, 1, v12, v25);
    v35 = swift_bridgeObjectRelease(v24);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48))(v11, 1, v12, v35) == 1)
    {

      sub_100036600((uint64_t)v11, (uint64_t *)&unk_100488B90);
      return;
    }
    v36 = v71;
    sub_10008BF28((uint64_t)v11, v71);
    ObjectType = swift_getObjectType(v66);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 104))(v36, ObjectType, v22);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(ObjectType, v22);
    if ((v38 & 0x8000000000000000) == 0)
    {
      v39 = v38;
      v40 = v70;
      if (!v38)
      {
LABEL_30:
        sub_1000258F8(v71, type metadata accessor for MeasurementHistoryItem);

        return;
      }
      v41 = 0;
      while (v39 != v41)
      {
        IndexPath.init(row:section:)(v41, 0);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v44 = objc_msgSend(v69, "cellForRowAtIndexPath:", isa);

        if (!v44)
          goto LABEL_32;
        v45 = type metadata accessor for DetailedPlatterCellTableViewCell();
        v46 = swift_dynamicCastClass(v44, v45);
        if (!v46)
        {

LABEL_32:
          (*(void (**)(char *, uint64_t))(v67 + 8))(v40, v68);
          sub_1000258F8(v71, type metadata accessor for MeasurementHistoryItem);
          return;
        }
        v48 = v46;
        v49 = swift_unknownObjectWeakLoadStrong(v18, v47);
        if (!v49)
          goto LABEL_36;
        v50 = (void *)v49;
        v51 = v18;
        v52 = *(_QWORD *)(v18 + 8);
        v53 = swift_getObjectType(v49);
        (*(void (**)(_QWORD *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v52 + 8))(v72, v40, v71, v53, v52);

        v54 = *(_QWORD *)(v48 + OBJC_IVAR____TtC7Measure32DetailedPlatterCellTableViewCell_measureContent);
        v55 = *(void **)(v54 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
        v56 = String._bridgeToObjectiveC()();
        objc_msgSend(v55, "setText:", v56);

        v57 = *(void **)(v54 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits);
        v58 = v72[2];
        v59 = v72[3];
        v60 = String._bridgeToObjectiveC()();
        objc_msgSend(v57, "setText:", v60);

        v61 = v73;
        v62 = v74;
        if (v58 == v73 && v59 == v74)
          v42 = 1;
        else
          v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v58, v59, v73, v74, 0);
        ++v41;
        sub_100134B8C(v61, v62, v72[4], (NSString)v72[5], v75, v76, v77, v78, v42 & 1);
        sub_1000793C0(v72);

        v40 = v70;
        (*(void (**)(char *, uint64_t))(v67 + 8))(v70, v68);
        v18 = v51;
        if (v39 == v41)
          goto LABEL_30;
      }
      __break(1u);
    }
    __break(1u);
LABEL_36:
    __break(1u);
  }
}

_QWORD *sub_100191D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *result;
  void *v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  void *v13;
  NSString v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v7 = v3 + qword_100488878;
  result = (_QWORD *)swift_unknownObjectWeakLoadStrong(v3 + qword_100488878, a2);
  if (result)
  {
    v9 = result;
    v10 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(v22, a2, a3, ObjectType, v10);

    v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7Measure32DetailedPlatterCellTableViewCell_measureContent);
    v13 = *(void **)(v12 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setText:", v14);

    v15 = *(void **)(v12 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits);
    v16 = v22[2];
    v17 = v22[3];
    v18 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setText:", v18);

    v19 = v23;
    v20 = v24;
    if (v16 == v23 && v17 == v24)
      v21 = 1;
    else
      v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v23, v24, 0);
    sub_100134B8C(v19, v20, v22[4], (NSString)v22[5], v25, v26, v27, v28, v21 & 1);
    return sub_1000793C0(v22);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100191F04(uint64_t a1, double a2, double a3)
{
  char *v3;
  char *v4;
  char *v8;
  void (*v9)(char *__return_ptr, __n128);
  __n128 v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char v14[3];
  objc_super v15;

  v4 = v3;
  v15.receiver = v4;
  v15.super_class = (Class)swift_getObjectType(v4);
  v8 = (char *)objc_msgSendSuper2(&v15, "hitTest:withEvent:", a1, a2, a3);
  if (!v8)
    return (uint64_t)v8;
  v9 = *(void (**)(char *__return_ptr, __n128))(**(_QWORD **)&v4[qword_1004888D0] + 144);
  v10 = swift_retain();
  v9(v14, v10);
  swift_release();
  if ((v14[0] & 1) != 0)
    return (uint64_t)v8;
  v11 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  result = static UIDevice.isIPhone()(v11);
  if ((result & 1) != 0)
    return (uint64_t)v8;
  if (v8 == v4)
  {
    v8 = v4;
    goto LABEL_9;
  }
  v13 = *(_QWORD *)&v4[qword_100488870];
  if (v13)
  {
    if (v8 != *(char **)(v13 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView))
      return (uint64_t)v8;
LABEL_9:

    return 0;
  }
  __break(1u);
  return result;
}

id sub_10019201C(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v9;
  id v10;
  void *v11;

  v9 = a5;
  v10 = a1;
  v11 = (void *)sub_100191F04((uint64_t)a5, a2, a3);

  return v11;
}

void sub_100192084()
{
  _swift_stdlib_reportUnimplementedInitializer("Measure.SpatialGenericPlatter", 29, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t type metadata accessor for SpatialGenericPlatter(uint64_t a1)
{
  uint64_t result;

  result = qword_100488940;
  if (!qword_100488940)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SpatialGenericPlatter);
  return result;
}

uint64_t sub_1001920EC(uint64_t a1)
{
  _QWORD v2[22];

  v2[0] = &unk_1003BAD88;
  v2[1] = &unk_1003BADA0;
  v2[2] = &unk_1003BADB8;
  v2[3] = &unk_1003BADB8;
  v2[4] = &unk_1003BADD0;
  v2[5] = &unk_1003BADE8;
  v2[6] = &unk_1003BAE00;
  v2[7] = &unk_1003BAE00;
  v2[8] = &unk_1003BADA0;
  v2[9] = &unk_1003BAE00;
  v2[10] = &unk_1003BAE00;
  v2[11] = &unk_1003BADD0;
  v2[12] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[13] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[14] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[15] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[16] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[17] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[18] = &unk_1003BADA0;
  v2[19] = &unk_1003BADD0;
  v2[20] = &unk_1003BAE00;
  v2[21] = &unk_1003BADD0;
  return swift_initClassMetadata2(a1, 256, 22, v2, a1 + 184);
}

uint64_t sub_100192188()
{
  return type metadata accessor for SpatialGenericPlatter(0);
}

uint64_t sub_100192190(void *a1, id a2)
{
  uint64_t v2;
  id v5;
  id v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = objc_msgSend(a2, "view");
  v6 = objc_msgSend(a1, "view");
  v7 = v6;
  if (v5)
  {

    if (v7)
    {

      if (v5 == v7)
        return 1;
    }
  }
  else
  {
    if (!v6)
      return 1;

  }
  result = (uint64_t)objc_msgSend(a2, "view");
  v9 = *(_QWORD *)(v2 + qword_100488870);
  if (v9)
  {
    v10 = result;
    if (result)
    {
      v11 = *(_QWORD *)(v9 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);

      return v10 == v11;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100192370(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  id result;
  void *v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  int v39;
  void *v40;
  void *v41;
  uint64_t v42;
  NSString v43;
  Class isa;
  id v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  id v49;
  uint64_t v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  void *v59;
  uint64_t v60;
  CGRect v61;

  v3 = v2;
  v6 = type metadata accessor for MeasurementsHistory(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10000EDC8((uint64_t *)&unk_100488B90);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for MeasurementHistoryItem(0);
  v12 = *(_QWORD *)(v60 - 8);
  v13 = __chkstk_darwin(v60);
  v15 = (uint64_t *)((char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v17 = (char *)&v55 - v16;
  v18 = &v2[qword_100488878];
  result = (id)swift_unknownObjectWeakLoadStrong(&v2[qword_100488878], v19);
  if (result)
  {
    v21 = result;
    v22 = *((_QWORD *)v18 + 1);
    ObjectType = swift_getObjectType(result);
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(ObjectType, v22);

    if (IndexPath.row.getter(v25) < v24)
    {
      v59 = a1;
      swift_retain();
      StateValue.wrappedValue.getter(v8, v26);
      swift_release();
      v27 = *v8;
      swift_bridgeObjectRetain(*v8);
      sub_1000258F8((uint64_t)v8, type metadata accessor for MeasurementsHistory);
      v29 = *(_QWORD *)(v27 + 16);
      if (v29)
      {
        v55 = v24;
        v56 = a2;
        v57 = v3;
        v58 = v17;
        v30 = v27 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
        v32 = *(_QWORD *)&v3[qword_100488868];
        v31 = *(_QWORD *)&v3[qword_100488868 + 8];
        v33 = *(_QWORD *)(v12 + 72);
        swift_bridgeObjectRetain(v27);
        while (1)
        {
          sub_1000226FC(v30, (uint64_t)v15);
          v34 = v15[1];
          v35 = *v15 == v32 && v34 == v31;
          if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v15, v34, v32, v31, 0) & 1) != 0)
            break;
          sub_1000258F8((uint64_t)v15, type metadata accessor for MeasurementHistoryItem);
          v30 += v33;
          if (!--v29)
          {
            v28 = swift_bridgeObjectRelease(v27);
            v36 = 1;
            goto LABEL_13;
          }
        }
        swift_bridgeObjectRelease(v27);
        sub_10008BF28((uint64_t)v15, (uint64_t)v11);
        v36 = 0;
LABEL_13:
        v3 = v57;
        v17 = v58;
        v24 = v55;
        a2 = v56;
      }
      else
      {
        v36 = 1;
      }
      v37 = v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56))(v11, v36, 1, v60, v28);
      v38 = swift_bridgeObjectRelease(v27);
      v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48))(v11, 1, v37, v38);
      v40 = v59;
      if (v39 != 1)
      {
        sub_10008BF28((uint64_t)v11, (uint64_t)v17);
        v42 = v24;
        v43 = String._bridgeToObjectiveC()();
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v45 = objc_msgSend(v40, "dequeueReusableCellWithIdentifier:forIndexPath:", v43, isa);

        v46 = type metadata accessor for DetailedPlatterCellTableViewCell();
        v47 = a2;
        v41 = (void *)swift_dynamicCastClassUnconditional(v45, v46, 0, 0, 0);
        v48 = sub_100191D94((uint64_t)v41, v47, (uint64_t)v17);
        if (IndexPath.row.getter(v48) == v42 - 1)
        {
          v49 = v45;
          objc_msgSend(v3, "bounds");
          objc_msgSend(v41, "setSeparatorInset:", 0.0, CGRectGetWidth(v61), 0.0, 0.0);
        }
        else
        {
          v50 = qword_10047A798;
          v51 = v45;
          if (v50 != -1)
            swift_once(&qword_10047A798, sub_10000F014);
          objc_msgSend(v41, "setSeparatorInset:", xmmword_1004AF0D0, *(double *)&qword_1004AF0E0, *(double *)&qword_1004AF0E8);
        }

        v52 = (void *)objc_opt_self(UIColor);
        v53 = v45;
        v54 = objc_msgSend(v52, "clearColor");
        objc_msgSend(v41, "setBackgroundColor:", v54);

        objc_msgSend(v41, "setSelectionStyle:", 0);
        sub_1000258F8((uint64_t)v17, type metadata accessor for MeasurementHistoryItem);
        return v41;
      }
      sub_100036600((uint64_t)v11, (uint64_t *)&unk_100488B90);
    }
    return objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
  }
  __break(1u);
  return result;
}

uint64_t sub_100192918@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 240);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_100192928(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  _QWORD v24[9];

  v7 = *v3;
  Hasher.init(_seed:)(v24);
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v24, a2, a3);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease(v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain(a3);
  sub_100192DB0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  v23 = *v3;
  *v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

void sub_100192AD4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10000EDC8(&qword_100488B50);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release();
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v21 = *v20;
      v22 = v20[1];
      Hasher.init(_seed:)(v34);
      String.hash(into:)(v34, v21, v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v21;
      v14[1] = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

void sub_100192DB0(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_100192AD4(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_100192F48();
      goto LABEL_22;
    }
    sub_1001930F8(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29);
  String.hash(into:)(v29, a1, a2);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48);
    v17 = (_QWORD *)(v16 + 16 * a3);
    v18 = v17[1];
    v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + 16 * a3);
        v22 = v21[1];
        v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = (_QWORD *)(*(_QWORD *)(v24 + 48) + 16 * a3);
  *v25 = a1;
  v25[1] = a2;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

void sub_100192F48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_10000EDC8(&qword_100488B50);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain(v18);
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_1001930F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10000EDC8(&qword_100488B50);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v31 = v2;
  v32 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain();
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v32)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v32)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_27:
    v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    Hasher.init(_seed:)(v33);
    swift_bridgeObjectRetain(v22);
    String.hash(into:)(v33, v21, v22);
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
    *v14 = v21;
    v14[1] = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v32)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1001933A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  _QWORD v22[9];

  v5 = *v2;
  Hasher.init(_seed:)(v22);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v22, a1, a2);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = v10[1];
  v12 = *v10 == a1 && v11 == a2;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
  {
    v17 = ~v7;
    do
    {
      v8 = (v8 + 1) & v17;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v18 = (_QWORD *)(v9 + 16 * v8);
      v19 = v18[1];
      v20 = *v18 == a1 && v19 == a2;
    }
    while (!v20 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v18, v19, a1, a2, 0) & 1) == 0);
  }
  swift_bridgeObjectRelease(v5);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v14 = *v2;
  v22[0] = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100192F48();
    v14 = v22[0];
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v8);
  sub_100193530(v8);
  v16 = *v2;
  *v2 = v22[0];
  swift_bridgeObjectRelease(v16);
  return v15;
}

void sub_100193530(unint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD v21[9];

  v2 = a1;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v21);
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v21, v11, v12);
        v13 = Hasher._finalize()();
        swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 < v9)
            goto LABEL_5;
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(v3 + 48);
          v16 = (_OWORD *)(v15 + 16 * v2);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
          {
            *v16 = *v17;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
}

uint64_t sub_1001936F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 240);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_100193718(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_10019373C(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_10018E388(a1, v1);
}

id sub_100193754(uint64_t *a1)
{
  uint64_t v2;
  int v3;
  const void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _UNKNOWN **v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (__cdecl *v21)();
  id v22;
  uint64_t v23;
  id v24;
  __int128 v26[53];
  _BYTE v27[848];
  _BYTE v28[848];

  v2 = type metadata accessor for MeasurementHistoryItem(0);
  sub_10001F970((char *)a1 + *(int *)(v2 + 28), v27);
  sub_10001F970(v27, v28);
  v3 = sub_10001F9AC((uint64_t)v28);
  if (v3)
  {
    if (v3 == 1)
    {
      v4 = (const void *)sub_10001F9B8((uint64_t)v28);
      memcpy(v26, v4, 0x1DEuLL);
      v5 = *a1;
      v6 = a1[1];
      v8 = a1[2];
      v7 = a1[3];
      objc_allocWithZone((Class)type metadata accessor for RectanglePlatterSpatial());
      sub_100193978((uint64_t)v27);
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRetain(v7);
      v9 = sub_10001D908(v5, v6, (uint64_t)v26, v8, v7);
      v10 = &off_10043F078;
    }
    else
    {
      v16 = (const void *)sub_10001F9B8((uint64_t)v28);
      memcpy(v26, v16, 0x346uLL);
      v17 = *a1;
      v18 = a1[1];
      v20 = a1[2];
      v19 = a1[3];
      objc_allocWithZone((Class)type metadata accessor for ObjectPlatterSpatial());
      sub_100193978((uint64_t)v27);
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v19);
      v9 = sub_10019A1D8(v17, v18, v26, v20, v19);
      v10 = &off_10044AD08;
    }
  }
  else
  {
    v11 = (const void *)sub_10001F9B8((uint64_t)v28);
    memcpy(v26, v11, 0x10DuLL);
    v12 = *a1;
    v13 = a1[1];
    v15 = a1[2];
    v14 = a1[3];
    objc_allocWithZone((Class)type metadata accessor for LinePlatterSpatial());
    sub_100193978((uint64_t)v27);
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v14);
    v9 = sub_1000761F8(v12, v13, (uint64_t)v26, v15, v14);
    v10 = &off_1004422B0;
  }
  swift_getObjectType(v9);
  v21 = (uint64_t (__cdecl *)())v10[10];
  v22 = v9;
  v23 = v21();

  v24 = objc_allocWithZone((Class)type metadata accessor for CardContainerView());
  return sub_100168A04(v22, 0, v23);
}

uint64_t sub_100193978(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v17 = *(_OWORD *)(a1 + 464);
  v18 = *(_OWORD *)(a1 + 480);
  v15 = *(_OWORD *)(a1 + 432);
  v16 = *(_OWORD *)(a1 + 448);
  v13 = *(_OWORD *)(a1 + 400);
  v14 = *(_OWORD *)(a1 + 416);
  v11 = *(_OWORD *)(a1 + 368);
  v12 = *(_OWORD *)(a1 + 384);
  v9 = *(_OWORD *)(a1 + 336);
  v10 = *(_OWORD *)(a1 + 352);
  v7 = *(_OWORD *)(a1 + 304);
  v8 = *(_OWORD *)(a1 + 320);
  v6 = *(_OWORD *)(a1 + 288);
  v5 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 256);
  v3 = *(_OWORD *)(a1 + 240);
  sub_100085E0C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    *(_QWORD *)(a1 + 496));
  return a1;
}

uint64_t sub_100193B4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100193B70()
{
  uint64_t v0;

  sub_10018FB00(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100193B78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100193B88(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100193B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000EDC8((uint64_t *)&unk_1004862E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100193BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v1 = type metadata accessor for MeasurementHistoryItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));
  v6 = v0 + v4 + *(int *)(v1 + 24);
  v7 = type metadata accessor for MeasurementCapture(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = type metadata accessor for URL(0);
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v9(v6, v8);
    v9(v6 + *(int *)(v7 + 20), v8);
  }
  v10 = v0 + v4 + *(int *)(v1 + 28);
  v26 = *(_OWORD *)(v10 + 464);
  v27 = *(_OWORD *)(v10 + 480);
  v24 = *(_OWORD *)(v10 + 432);
  v25 = *(_OWORD *)(v10 + 448);
  v22 = *(_OWORD *)(v10 + 400);
  v23 = *(_OWORD *)(v10 + 416);
  v20 = *(_OWORD *)(v10 + 368);
  v21 = *(_OWORD *)(v10 + 384);
  v18 = *(_OWORD *)(v10 + 336);
  v19 = *(_OWORD *)(v10 + 352);
  v16 = *(_OWORD *)(v10 + 304);
  v17 = *(_OWORD *)(v10 + 320);
  v15 = *(_OWORD *)(v10 + 288);
  v14 = *(_OWORD *)(v10 + 272);
  v13 = *(_OWORD *)(v10 + 256);
  v12 = *(_OWORD *)(v10 + 240);
  sub_100020E24(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(_QWORD *)(v10 + 48), *(_QWORD *)(v10 + 56), *(_QWORD *)(v10 + 64), *(_QWORD *)(v10 + 72), *(_QWORD *)(v10 + 80), *(_QWORD *)(v10 + 88), *(_QWORD *)(v10 + 96), *(_QWORD *)(v10 + 104), *(_QWORD *)(v10 + 112), *(_QWORD *)(v10 + 120), *(_QWORD *)(v10 + 128), *(_QWORD *)(v10 + 136), *(_QWORD *)(v10 + 144),
    *(_QWORD *)(v10 + 152),
    *(_QWORD *)(v10 + 160),
    *(_QWORD *)(v10 + 168),
    *(_QWORD *)(v10 + 176),
    *(_QWORD *)(v10 + 184),
    *(_QWORD *)(v10 + 192),
    *(_QWORD *)(v10 + 200),
    *(_QWORD *)(v10 + 208),
    *(_QWORD *)(v10 + 216),
    *(_QWORD *)(v10 + 224),
    *(_QWORD *)(v10 + 232),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    *(_QWORD *)(v10 + 496));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

size_t sub_100193E70(size_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MeasurementHistoryItem(0) - 8) + 80);
  return sub_10018FA1C(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

void sub_100193EB0(uint64_t a1)
{
  uint64_t v1;

  sub_10019178C(a1, *(_QWORD *)(v1 + 16));
}

void sub_100193EB8()
{
  uint64_t v0;
  uint64_t v1;

  sub_100191408();
  sub_100191620(v0, v1);
}

void sub_100193EDC(uint64_t a1, uint64_t a2)
{
  sub_1001917F4(a1, a2);
}

uint64_t sub_100193EFC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100193F20()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t ObjectType;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  *(_QWORD *)&v0[qword_100488870] = 0;
  v3 = &v0[qword_100488878];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v4 = &v0[qword_100488880];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4, 0);
  v0[qword_100488888] = 0;
  swift_unknownObjectWeakInit(&v0[qword_100488898], 0);
  swift_unknownObjectWeakInit(&v0[qword_1004888A0], 0);
  *(_QWORD *)&v0[qword_1004888A8] = 0;
  swift_unknownObjectWeakInit(&v0[qword_1004888B0], 0);
  swift_unknownObjectWeakInit(&v0[qword_1004888B8], 0);
  v0[qword_1004888C0] = 0;
  v5 = qword_1004888C8;
  v6 = sub_10000EDC8(&qword_100486270);
  KeyPath = swift_getKeyPath(&unk_1003BAE18);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v8 = qword_1004AF890;
  v9 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v6 + 272);
  v10 = swift_retain();
  *(_QWORD *)&v1[v5] = v9(KeyPath, v8, v10);
  v11 = qword_1004888D0;
  sub_10000EDC8(&qword_100488B68);
  v12 = swift_getKeyPath(&unk_1003BAE40);
  *(_QWORD *)&v1[v11] = MutableStateValue.__allocating_init(_:_:)(v12, ObjectType);
  v13 = qword_1004888D8;
  v14 = sub_10000EDC8((uint64_t *)&unk_1004810D0);
  v15 = swift_getKeyPath(&unk_1003BAE68);
  v16 = qword_1004AF890;
  v17 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v14 + 272);
  v18 = swift_retain();
  *(_QWORD *)&v1[v13] = v17(v15, v16, v18);
  v19 = qword_1004888E0;
  v20 = sub_10000EDC8(&qword_10047E5E0);
  v21 = swift_getKeyPath(&unk_1003BAE90);
  v22 = qword_1004AF890;
  v23 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v20 + 272);
  v24 = swift_retain();
  *(_QWORD *)&v1[v19] = v23(v21, v22, v24);
  v25 = qword_1004888E8;
  sub_10000EDC8((uint64_t *)&unk_100488B70);
  v26 = swift_getKeyPath(&unk_1003BAEB8);
  *(_QWORD *)&v1[v25] = MutableStateValue.__allocating_init(_:_:)(v26, ObjectType);
  v27 = qword_1004888F0;
  sub_10000EDC8(&qword_1004862A0);
  v28 = swift_getKeyPath(&unk_1003BAEE0);
  *(_QWORD *)&v1[v27] = MutableStateValue.__allocating_init(_:_:)(v28, ObjectType);
  *(_QWORD *)&v1[qword_1004888F8] = 0;
  v1[qword_100488900] = 0;
  swift_unknownObjectWeakInit(&v1[qword_100488908], 0);
  v1[qword_100488910] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003D8190, "Measure/SpatialGenericPlatter.swift", 35, 2, 141, 0);
  __break(1u);
}

double sub_100194218(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  double v6;
  char v7;
  id v8;
  double v9;
  double v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  double v15;
  char v16;
  id v17;
  id v19;
  uint64_t v20;
  _QWORD v21[5];
  __int128 v22;
  __int128 v23;

  v19 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardAnimationDurationUserInfoKey);
  v20 = v2;
  AnyHashable.init<A>(_:)(v21, &v19, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v3 = sub_1000C82B0((uint64_t)v21), (v4 & 1) != 0))
  {
    sub_10004F88C(*(_QWORD *)(a1 + 56) + 32 * v3, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  sub_1000C9818((uint64_t)v21);
  if (!*((_QWORD *)&v23 + 1))
  {
    sub_100036600((uint64_t)&v22, (uint64_t *)&unk_10047ED00);
    goto LABEL_9;
  }
  v5 = sub_100018148(0, &qword_100488BA0, NSNumber_ptr);
  *(_QWORD *)&v6 = swift_dynamicCast(&v19, &v22, (char *)&type metadata for Any + 8, v5, 6).n128_u64[0];
  if ((v7 & 1) == 0)
  {
LABEL_9:
    v10 = 0.0;
    goto LABEL_10;
  }
  v8 = v19;
  objc_msgSend(v19, "doubleValue", v6);
  v10 = v9;

LABEL_10:
  v19 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardAnimationCurveUserInfoKey);
  v20 = v11;
  AnyHashable.init<A>(_:)(v21, &v19, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v12 = sub_1000C82B0((uint64_t)v21), (v13 & 1) != 0))
  {
    sub_10004F88C(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  sub_1000C9818((uint64_t)v21);
  if (*((_QWORD *)&v23 + 1))
  {
    v14 = sub_100018148(0, &qword_100488BA0, NSNumber_ptr);
    *(_QWORD *)&v15 = swift_dynamicCast(&v19, &v22, (char *)&type metadata for Any + 8, v14, 6).n128_u64[0];
    if ((v16 & 1) != 0)
    {
      v17 = v19;
      objc_msgSend(v19, "unsignedIntegerValue", v15);

    }
  }
  else
  {
    sub_100036600((uint64_t)&v22, (uint64_t *)&unk_10047ED00);
  }
  return v10;
}

uint64_t sub_100194410()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  __n128 v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v19 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  v9 = (void *)static OS_dispatch_queue.main.getter(v8);
  v10 = swift_allocObject(&unk_10044A9F8, 24, 7);
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_100194608;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003ECA0;
  aBlock[3] = &unk_10044AA10;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  v13 = swift_release();
  static DispatchQoS.unspecified.getter(v13);
  aBlock[0] = _swiftEmptyArrayStorage;
  v14 = sub_100030E1C();
  v15 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v16 = sub_100043310((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v15, v16, v1, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v3, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

char *sub_100194608()
{
  uint64_t v0;

  return sub_1001908B4(*(char **)(v0 + 16));
}

id sub_100194610()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "layoutIfNeeded");
}

void sub_100194620()
{
  uint64_t v0;

  sub_10018FF64(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100194664()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, __n128);
  __n128 v27;
  _BYTE v29[24];
  void *v30;
  void *v31;

  v1 = v0;
  v0[9] = 0;
  swift_unknownObjectWeakInit(v0 + 8, 0);
  v2 = sub_10000EDC8(&qword_10047D440);
  KeyPath = swift_getKeyPath(&unk_1003BB070);
  v4 = qword_10047AD88;
  swift_retain();
  if (v4 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v5 = qword_1004AF890;
  v6 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v2 + 272);
  v7 = swift_retain();
  v1[10] = v6(KeyPath, v5, v7);
  v8 = sub_10000EDC8(&qword_10047BBB0);
  v9 = swift_getKeyPath(&unk_1003BB098);
  v10 = qword_1004AF890;
  v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v8 + 272);
  v12 = swift_retain();
  v1[11] = v11(v9, v10, v12);
  v13 = swift_getKeyPath(&unk_1003BB0C0);
  v14 = sub_10000EDC8(&qword_100481258);
  v15 = qword_1004AF890;
  v16 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v14 + 272);
  v17 = swift_retain();
  v1[12] = v16(v13, v15, v17);
  v18 = sub_10000EDC8(&qword_10047EA08);
  v19 = swift_getKeyPath(&unk_1003BB0E8);
  v20 = qword_1004AF890;
  v21 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v18 + 272);
  v22 = swift_retain();
  v1[13] = v21(v19, v20, v22);
  v23 = sub_10000EDC8(&qword_100488DA8);
  v24 = swift_getKeyPath(&unk_1003BB110);
  v25 = qword_1004AF890;
  v26 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v23 + 272);
  v27 = swift_retain();
  v1[14] = v26(v24, v25, v27);
  swift_release();
  v30 = &type metadata for Configurations.Default;
  v31 = &protocol witness table for Configurations.Default;
  return StateObserver.init(configuration:)(v29);
}

uint64_t sub_100194848(_QWORD *a1)
{
  uint64_t v1;

  swift_allocObject(v1, 120, 7);
  return sub_100194880(a1);
}

uint64_t sub_100194880(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, __n128);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  _BYTE v32[40];

  v2 = v1;
  v1[9] = 0;
  swift_unknownObjectWeakInit(v1 + 8, 0);
  v4 = sub_10000EDC8(&qword_10047D440);
  KeyPath = swift_getKeyPath(&unk_1003BB070);
  v6 = qword_10047AD88;
  swift_retain();
  if (v6 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v7 = qword_1004AF890;
  v8 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v4 + 272);
  v9 = swift_retain();
  v2[10] = v8(KeyPath, v7, v9);
  v10 = sub_10000EDC8(&qword_10047BBB0);
  v11 = swift_getKeyPath(&unk_1003BB098);
  v12 = qword_1004AF890;
  v13 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v10 + 272);
  v14 = swift_retain();
  v2[11] = v13(v11, v12, v14);
  v15 = swift_getKeyPath(&unk_1003BB0C0);
  v16 = sub_10000EDC8(&qword_100481258);
  v17 = qword_1004AF890;
  v18 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v16 + 272);
  v19 = swift_retain();
  v2[12] = v18(v15, v17, v19);
  v20 = sub_10000EDC8(&qword_10047EA08);
  v21 = swift_getKeyPath(&unk_1003BB0E8);
  v22 = qword_1004AF890;
  v23 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v20 + 272);
  v24 = swift_retain();
  v2[13] = v23(v21, v22, v24);
  v25 = sub_10000EDC8(&qword_100488DA8);
  v26 = swift_getKeyPath(&unk_1003BB110);
  v27 = qword_1004AF890;
  v28 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v25 + 272);
  v29 = swift_retain();
  v2[14] = v28(v26, v27, v29);
  swift_release();
  sub_100068B24((uint64_t)a1, (uint64_t)v32);
  v30 = StateObserver.init(configuration:)(v32);
  sub_10000F690(a1);
  return v30;
}

void *sub_100194A78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *result;
  void *v4;

  result = (void *)swift_unknownObjectWeakLoadStrong(v2 + 64, a2);
  if (result)
  {
    v4 = result;
    objc_msgSend(result, "didUpdate");
    return (void *)swift_unknownObjectRelease(v4);
  }
  return result;
}

double sub_100194ABC()
{
  uint64_t v0;
  double result;

  sub_10001ADF4(v0 + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100194AF8(uint64_t a1)
{
  uint64_t v1;

  v1 = StateObserver.deinit(a1);
  sub_10001ADF4(v1 + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance(v1, 120, 7);
}

uint64_t type metadata accessor for AccessibilityStateObserverBridge(uint64_t a1)
{
  uint64_t result;

  result = qword_100488BD8;
  if (!qword_100488BD8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AccessibilityStateObserverBridge);
  return result;
}

uint64_t sub_100194B90(uint64_t a1)
{
  _QWORD v2[6];

  v2[0] = &unk_1003BB028;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 256, 6, v2, a1 + 208);
}

id sub_100194BE4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AccessibilityStateObserver()), "init");
  qword_1004AF898 = (uint64_t)result;
  return result;
}

uint64_t sub_100194D80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  id v6;
  uint64_t v7;
  _QWORD v9[4];

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure26AccessibilityStateObserver_implementation) + 80);
  v2 = swift_retain(v1);
  StateValue.wrappedValue.getter(v9, v2);
  swift_release(v1);
  v3 = (void *)v9[0];
  v4 = (void *)v9[1];
  v5 = (_QWORD *)v9[3];
  v6 = (id)v9[2];

  if (!v5)
    return 0;
  v7 = (*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x2F0))();

  return v7;
}

uint64_t sub_100194E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t (*v5)(void);
  id v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t v18;
  float v19;
  void (*v20)(__n128);
  __n128 v21;
  id v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  float32x4_t v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __int128 v40;
  char v41;
  __int128 v42;
  _OWORD v43[3];
  __int128 v44;
  __n128 v45;
  __n128 v46;
  __n128 v47;
  __n128 v48;
  __int128 v49;
  char v50;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure26AccessibilityStateObserver_implementation);
  swift_retain();
  StateValue.wrappedValue.getter(&v32, v2);
  swift_release();
  v47 = v38;
  v48 = v39;
  v49 = v40;
  v50 = v41;
  v43[2] = v34;
  v44 = v35;
  v45 = v36;
  v46 = v37;
  v43[0] = v32;
  v43[1] = v33;
  if (qword_10047AC58 != -1)
    swift_once(&qword_10047AC58, sub_1001833E8);
  if (byte_1004AF790 != 1 || BYTE1(v43[0]) != 1 || !(_QWORD)v44 || (v49 & 1) != 0)
  {
    sub_1000D2080(v43);
    return 0;
  }
  v30 = v46;
  v31 = v45;
  v28 = v48;
  v29 = v47;
  v5 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v44) + 0x250);
  v6 = (id)v44;
  result = v5();
  v7 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    v8 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, result);
    goto LABEL_12;
  }
  if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(result + 32);
LABEL_12:
    v9 = v8;
    v10 = swift_bridgeObjectRelease(v7);
    v11.n128_f64[0] = (*(double (**)(__n128))((swift_isaMask & *v9) + 0x2B0))(v10);
    v25 = v12;
    v26 = v11;
    v23 = v14;
    v24 = v13;

    *(double *)v15.i64 = simd_float4x4.position.getter(v26, v25, v24, v23);
    v27 = v15;
    *(double *)v16.i64 = simd_float4x4.position.getter(v31, v30, v29, v28);
    v17 = vsubq_f32(v27, v16);
    v18 = vmulq_f32(v17, v17);
    v19 = sqrtf(v18.f32[2] + vaddv_f32(*(float32x2_t *)v18.f32));
    v20 = *(void (**)(__n128))(**(_QWORD **)(v1 + 96) + 144);
    v21 = swift_retain();
    v20(v21);
    swift_release();
    v22 = sub_10009BF0C();
    sub_100108E28((uint64_t)v22, 0, 0, (uint64_t *)&v32, v19);

    sub_1000D2080(v43);
    v3 = v33;
    v42 = v32;
    sub_1000C22B0((uint64_t)&v42);
    return v3;
  }
  __break(1u);
  return result;
}

id sub_100195094(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

uint64_t sub_1001950FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23;
  _OWORD v24[9];
  char v25;

  swift_retain();
  StateValue.wrappedValue.getter(&v14, v0);
  swift_release();
  v24[6] = v20;
  v24[7] = v21;
  v24[8] = v22;
  v25 = v23;
  v24[2] = v16;
  v24[3] = v17;
  v24[4] = v18;
  v24[5] = v19;
  v24[0] = v14;
  v24[1] = v15;
  sub_1000D2080(v24);
  if (BYTE1(v24[0]) != 1)
    return 0;
  swift_retain();
  StateValue.wrappedValue.getter(&v4, v1);
  swift_release();
  v20 = v10;
  v21 = v11;
  v22 = v12;
  v23 = v13;
  v16 = v6;
  v17 = v7;
  v18 = v8;
  v19 = v9;
  v14 = v4;
  v15 = v5;
  v2 = *((_QWORD *)&v4 + 1);
  swift_bridgeObjectRetain(v5);
  sub_1000D2080(&v14);
  return v2;
}

uint64_t sub_1001953DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_retain();
  StateValue.wrappedValue.getter(&v11, v0);
  swift_release();
  v1 = v11;
  v2 = v12;
  v3 = v13;
  v10 = v12;
  swift_bridgeObjectRetain(v12);
  v4 = sub_10000EDC8(&qword_10047C018);
  v5 = sub_10000EDC8(&qword_10047D030);
  swift_dynamicCast(&v11, &v10, v4, v5, 7);
  v6 = v11;
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  v11 = v6;
  v7 = sub_1001955C8();
  v8 = RangeReplaceableCollection<>.idToObjectMap.getter(v5, v7);
  swift_bridgeObjectRelease(v6);
  return v8;
}

id sub_100195568()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccessibilityStateObserver();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AccessibilityStateObserver()
{
  return objc_opt_self(_TtC7Measure26AccessibilityStateObserver);
}

unint64_t sub_1001955C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100488DA0;
  if (!qword_100488DA0)
  {
    v1 = sub_100012B80(&qword_10047D030);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100488DA0);
  }
  return result;
}

double sub_100195628()
{
  double result;

  result = -4294967300.0;
  qword_1004AF8A0 = 0xC1F0000000000000;
  return result;
}

double sub_10019563C()
{
  double result;

  result = -16777216.0;
  qword_1004AF8A8 = 0xC170000000000000;
  return result;
}

uint64_t sub_100195650()
{
  uint64_t result;
  uint64_t v1;
  double v2;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  result = static UIDevice.isIPad()();
  if ((result & 1) != 0)
  {
    v1 = 0x404A000000000000;
LABEL_8:
    v2 = *(double *)&v1;
    goto LABEL_9;
  }
  result = static UIDevice.isIPhone()(result);
  if ((result & 1) == 0)
  {
    v1 = 0x4053800000000000;
    goto LABEL_8;
  }
  result = (uint64_t)objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable");
  v2 = 78.0;
  if ((_DWORD)result)
    v2 = 77.0;
LABEL_9:
  qword_1004AF8B0 = *(_QWORD *)&v2;
  return result;
}

void sub_1001956EC()
{
  uint64_t v0;
  unsigned int v1;
  double v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v0 = static UIDevice.isIPad()();
  if ((v0 & 1) != 0)
  {
    v1 = objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable");
    v2 = 72.0;
    if (v1)
      v2 = 78.0;
  }
  else if ((static UIDevice.isIPhone()(v0) & 1) != 0)
  {
    v3 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v3, "_peripheryInsets");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    if (v5 == UIEdgeInsetsZero.top && v7 == UIEdgeInsetsZero.left && v9 == UIEdgeInsetsZero.bottom)
    {
      v2 = 78.0;
      if (v11 == UIEdgeInsetsZero.right)
        v2 = 72.0;
    }
    else
    {
      v2 = 78.0;
    }
  }
  else
  {
    v2 = 72.0;
  }
  qword_1004AF8B8 = *(_QWORD *)&v2;
}

void sub_100195820()
{
  uint64_t v0;
  double v1;
  char v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v0 = static UIDevice.isIPad()();
  v1 = 16.0;
  if ((v0 & 1) == 0)
  {
    v2 = static UIDevice.isIPhone()(v0);
    v1 = 6.0;
    if ((v2 & 1) != 0)
    {
      v3 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v3, "_peripheryInsets");
      v5 = v4;
      v7 = v6;
      v9 = v8;
      v11 = v10;

      v1 = 27.0;
      if (v5 == UIEdgeInsetsZero.top && v7 == UIEdgeInsetsZero.left && v9 == UIEdgeInsetsZero.bottom)
      {
        v1 = 27.0;
        if (v11 == UIEdgeInsetsZero.right)
          v1 = 6.0;
      }
    }
  }
  qword_1004AF8C0 = *(_QWORD *)&v1;
}

void sub_100195900()
{
  uint64_t v0;
  double v1;
  char v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v0 = static UIDevice.isIPad()();
  v1 = 16.0;
  if ((v0 & 1) == 0)
  {
    v2 = static UIDevice.isIPhone()(v0);
    v1 = 6.0;
    if ((v2 & 1) != 0)
    {
      v3 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v3, "_peripheryInsets");
      v5 = v4;
      v7 = v6;
      v9 = v8;
      v11 = v10;

      if (v5 == UIEdgeInsetsZero.top && v7 == UIEdgeInsetsZero.left && v9 == UIEdgeInsetsZero.bottom)
      {
        v1 = 44.0;
        if (v11 == UIEdgeInsetsZero.right)
          v1 = 6.0;
      }
      else
      {
        v1 = 44.0;
      }
    }
  }
  qword_1004AF8C8 = *(_QWORD *)&v1;
}

id sub_1001959EC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 1.0);
  qword_1004AF8D0 = (uint64_t)result;
  return result;
}

uint64_t sub_100195A24()
{
  uint64_t result;
  double v1;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  result = static UIDevice.isIPad()();
  if ((result & 1) != 0 || (result = static UIDevice.isIPhone()(result), (result & 1) == 0))
  {
    v1 = 44.0;
  }
  else
  {
    result = (uint64_t)objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable");
    v1 = 44.0;
    if ((_DWORD)result)
      v1 = 52.0;
  }
  qword_1004AF8D8 = *(_QWORD *)&v1;
  return result;
}

void sub_100195AAC()
{
  qword_1004AF8E0 = 0x3FE3333333333333;
}

void sub_100195AC0()
{
  qword_1004AF8E8 = 0x3FF0000000000000;
}

void sub_100195AD0()
{
  qword_1004AF8F0 = 0x4030000000000000;
}

void sub_100195AE0()
{
  qword_1004AF8F8 = 0x4030000000000000;
}

id sub_100195AF0(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_systemBlueColor, &qword_1004AF900);
}

id sub_100195B04(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_systemBlueColor, &qword_1004AF908);
}

id sub_100195B18()
{
  id result;

  if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
    result = objc_msgSend((id)objc_opt_self(UIColor), "tableCellDefaultSelectionTintColor");
  else
    result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.1);
  qword_1004AF910 = (uint64_t)result;
  return result;
}

id sub_100195B90()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.6);
  qword_1004AF918 = (uint64_t)result;
  return result;
}

id sub_100195BD0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithDisplayP3Red:green:blue:alpha:", 1.0, 1.0, 1.0, 0.3);
  qword_1004AF920 = (uint64_t)result;
  return result;
}

void sub_100195C18()
{
  uint64_t v0;

  qword_1004AF928 = CGSize.init(_:_:)(36.0, 32.0);
  qword_1004AF930 = v0;
}

void sub_100195C48()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4._object = (void *)0xE000000000000000;
  v1._object = (void *)0x80000001003DC3B0;
  v1._countAndFlagsBits = 0xD000000000000012;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_1004AF938 = (__int128)v3;
}

UIFontTextStyle sub_100195CE8()
{
  qword_1004AF948 = (uint64_t)UIFontTextStyleCaption2;
  return UIFontTextStyleCaption2;
}

void sub_100195D00(uint64_t a1)
{
  sub_100196C3C(a1, (SEL *)&selRef_labelColor, &qword_1004AF950);
}

id sub_100195D14(uint64_t a1)
{
  return sub_100196CC4(a1, &qword_10047AE58, (void **)&qword_1004AF950, (void **)&qword_1004AF958, (uint64_t)sub_100195D00);
}

id sub_100195D38(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_grayColor, &qword_1004AF960);
}

void sub_100195D4C(uint64_t a1)
{
  sub_100196C3C(a1, (SEL *)&selRef_systemBackgroundColor, &qword_1004AF968);
}

id sub_100195D60()
{
  id result;

  if (qword_10047AE70 != -1)
    swift_once(&qword_10047AE70, sub_100195D4C);
  result = objc_msgSend((id)qword_1004AF968, "colorWithAlphaComponent:", 0.7);
  qword_1004AF970 = (uint64_t)result;
  return result;
}

id sub_100195DC8(uint64_t a1)
{
  return sub_100196CC4(a1, &qword_10047AE78, (void **)&qword_1004AF970, (void **)&qword_1004AF978, (uint64_t)sub_100195D60);
}

double sub_100195DEC()
{
  uint64_t v0;
  UIContentSizeCategory v1;
  char v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double result;

  if (qword_10047AE50 != -1)
    swift_once(&qword_10047AE50, sub_100195CE8);
  v0 = qword_1004AF948;
  if (qword_10047A738 != -1)
    swift_once(&qword_10047A738, sub_10000E4DC);
  v1 = (UIContentSizeCategory)(id)qword_1004AF068;
  v2 = static UIContentSizeCategory.> infix(_:_:)(v1, UIContentSizeCategoryAccessibilityLarge);

  if ((v2 & 1) != 0)
  {

    v1 = UIContentSizeCategoryAccessibilityLarge;
  }
  v3 = (void *)objc_opt_self(UIFont);
  v4 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v1);

  v5 = objc_msgSend(v3, "preferredFontForTextStyle:compatibleWithTraitCollection:", v0, v4);
  objc_msgSend(v5, "pointSize");
  v7 = v6;

  result = fmax(v7 * 0.4, 8.0);
  qword_1004AF980 = *(_QWORD *)&result;
  return result;
}

double sub_100195F44()
{
  double result;

  if (qword_10047AE88 != -1)
    swift_once(&qword_10047AE88, sub_100195DEC);
  result = *(double *)&qword_1004AF980 * 0.25;
  *(double *)&qword_1004AF988 = *(double *)&qword_1004AF980 * 0.25;
  return result;
}

double sub_100195F94()
{
  uint64_t v0;
  UIContentSizeCategory v1;
  char v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double result;

  if (qword_10047AE50 != -1)
    swift_once(&qword_10047AE50, sub_100195CE8);
  v0 = qword_1004AF948;
  if (qword_10047A738 != -1)
    swift_once(&qword_10047A738, sub_10000E4DC);
  v1 = (UIContentSizeCategory)(id)qword_1004AF068;
  v2 = static UIContentSizeCategory.> infix(_:_:)();

  if ((v2 & 1) != 0)
  {

    v1 = UIContentSizeCategoryAccessibilityLarge;
  }
  v3 = (void *)objc_opt_self(UIFont);
  v4 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v1);

  v5 = objc_msgSend(v3, "preferredFontForTextStyle:compatibleWithTraitCollection:", v0, v4);
  objc_msgSend(v5, "pointSize");
  v7 = v6;

  result = fmax(v7 * 0.9 * 1.4, 20.0);
  qword_1004AF990 = *(_QWORD *)&result;
  return result;
}

double sub_1001960FC()
{
  double result;

  if (qword_10047AE98 != -1)
    swift_once(&qword_10047AE98, sub_100195F94);
  result = *(double *)&qword_1004AF990 * 0.8;
  *(double *)&qword_1004AF998 = *(double *)&qword_1004AF990 * 0.8;
  return result;
}

double sub_100196150()
{
  double v0;
  double result;

  if (qword_10047ADC8 != -1)
    swift_once(&qword_10047ADC8, sub_100195650);
  v0 = *(double *)&qword_1004AF8B0;
  if (qword_10047ADD0 != -1)
    swift_once(&qword_10047ADD0, sub_1001956EC);
  result = v0 + *(double *)&qword_1004AF8B8 * 0.5;
  *(double *)&qword_1004AF9A0 = result;
  return result;
}

void sub_1001961DC()
{
  void *v0;
  void *v1;
  char v2;
  uint64_t v3;
  char v4;
  id v5;
  id v6;
  id v7;

  if (qword_10047B100 != -1)
    swift_once(&qword_10047B100, sub_100197A30);
  v0 = (void *)qword_1004AFC00;
  v1 = *(void **)algn_1004AFC08;
  if ((byte_1004AFC10 & 1) != 0)
  {
    v2 = byte_1004AFC20;
    v3 = qword_1004AFC18;
    v4 = byte_10048A2A0;
    v5 = (id)qword_1004AFC00;
    v6 = sub_100070DBC(v4, v3, v2);
    sub_100021580(v0, v1, 1);
  }
  else
  {
    if ((byte_10048A2A0 & 1) != 0)
      v7 = *(id *)algn_1004AFC08;
    else
      v7 = (id)qword_1004AFC00;
    v6 = v7;
  }
  qword_1004AF9A8 = (uint64_t)v6;
}

void sub_1001962B0(uint64_t a1)
{
  sub_100196C3C(a1, (SEL *)&selRef_systemBackgroundColor, &qword_1004AF9B0);
}

void sub_1001962C4(uint64_t a1)
{
  sub_100196C3C(a1, (SEL *)&selRef_systemYellowColor, &qword_1004AF9B8);
}

id sub_1001962D8(uint64_t a1)
{
  return sub_100196CC4(a1, &qword_10047AEB8, (void **)&qword_1004AF9B0, (void **)&qword_1004AF9C0, (uint64_t)sub_1001962B0);
}

id sub_1001962FC(uint64_t a1)
{
  return sub_100196CC4(a1, &qword_10047AEC8, (void **)&qword_1004AF9C0, (void **)&qword_1004AF9C8, (uint64_t)sub_1001962D8);
}

id sub_100196320(uint64_t a1)
{
  return sub_100196CC4(a1, &qword_10047AEB8, (void **)&qword_1004AF9B0, (void **)&qword_1004AF9D0, (uint64_t)sub_1001962B0);
}

id sub_100196344(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_clearColor, &qword_1004AF9D8);
}

id sub_100196358(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_blackColor, &qword_1004AF9E0);
}

id sub_10019636C(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_blackColor, &qword_1004AF9E8);
}

id sub_100196380(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_blackColor, &qword_1004AF9F0);
}

id sub_100196394(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_blackColor, &qword_1004AF9F8);
}

id sub_1001963A8(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_clearColor, &qword_1004AFA00);
}

id sub_1001963BC(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_blackColor, &qword_1004AFA08);
}

UIColor sub_1001963D0()
{
  UIColor result;

  sub_100018148(0, &qword_10047D0A0, UIColor_ptr);
  result.super.isa = UIColor.init(argb:)(0x157D7D7Du).super.isa;
  qword_1004AFA10 = (uint64_t)result.super.isa;
  return result;
}

id sub_100196418(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_clearColor, &qword_1004AFA18);
}

void sub_10019642C(uint64_t a1)
{
  sub_100196C3C(a1, (SEL *)&selRef_systemBackgroundColor, &qword_1004AFA20);
}

id sub_100196440(uint64_t a1)
{
  return sub_100196CC4(a1, &qword_10047AF28, (void **)&qword_1004AFA20, (void **)&qword_1004AFA28, (uint64_t)sub_10019642C);
}

id sub_100196464(uint64_t a1)
{
  return sub_100196CC4(a1, &qword_10047AF28, (void **)&qword_1004AFA20, (void **)&qword_1004AFA30, (uint64_t)sub_10019642C);
}

id sub_100196488(uint64_t a1)
{
  return sub_100196CC4(a1, &qword_10047AF28, (void **)&qword_1004AFA20, (void **)&qword_1004AFA38, (uint64_t)sub_10019642C);
}

id sub_1001964AC(uint64_t a1)
{
  return sub_100196CC4(a1, &qword_10047AF28, (void **)&qword_1004AFA20, (void **)&qword_1004AFA40, (uint64_t)sub_10019642C);
}

id sub_1001964D0(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_blackColor, &qword_1004AFA48);
}

id sub_1001964E4(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_blackColor, &qword_1004AFA50);
}

id sub_1001964F8(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_blackColor, &qword_1004AFA58);
}

id sub_10019650C(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_blackColor, &qword_1004AFA60);
}

id sub_100196520(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_blackColor, &qword_1004AFA68);
}

id sub_100196534(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_blackColor, &qword_1004AFA70);
}

void sub_100196548()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v0 = (void *)objc_opt_self(UIFont);
  v1 = objc_msgSend(v0, "systemFontOfSize:weight:", 20.0, UIFontWeightHeavy);
  v2 = objc_msgSend(v1, "fontDescriptor");
  v3 = sub_1001C6558();
  v4 = objc_msgSend(v0, "fontWithDescriptor:size:", v3, 0.0);

  qword_1004AFA78 = (uint64_t)v4;
}

double sub_1001965F8()
{
  uint64_t v0;
  double v1;
  double result;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v0 = static UIDevice.isIPad()();
  if ((v0 & 1) != 0)
  {
    v1 = 1.4;
  }
  else
  {
    static UIDevice.isIPhone()(v0);
    v1 = 0.95;
  }
  result = v1;
  qword_1004AFA80 = *(_QWORD *)&v1;
  return result;
}

double sub_100196658()
{
  double result;

  if (qword_10047AF88 != -1)
    swift_once(&qword_10047AF88, sub_1001965F8);
  result = *(double *)&qword_1004AFA80;
  qword_1004AFA88 = qword_1004AFA80;
  return result;
}

double sub_1001966A0()
{
  double result;

  if (qword_10047AF88 != -1)
    swift_once(&qword_10047AF88, sub_1001965F8);
  result = *(double *)&qword_1004AFA80 * 1.55;
  *(double *)&qword_1004AFA90 = *(double *)&qword_1004AFA80 * 1.55;
  return result;
}

double sub_1001966F4()
{
  double result;

  if (qword_10047AF98 != -1)
    swift_once(&qword_10047AF98, sub_1001966A0);
  result = *(double *)&qword_1004AFA90 * 0.92;
  *(double *)&qword_1004AFA98 = *(double *)&qword_1004AFA90 * 0.92;
  return result;
}

uint64_t sub_100196748()
{
  uint64_t result;
  __int128 v1;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  result = static UIDevice.isIPad()();
  if ((result & 1) != 0)
  {
    v1 = xmmword_1003BB170;
  }
  else
  {
    result = static UIDevice.isIPhone()(result);
    v1 = xmmword_1003BB180;
  }
  xmmword_1004AFAA0 = v1;
  return result;
}

uint64_t sub_1001967A4()
{
  uint64_t result;
  double v1;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  result = static UIDevice.isIPad()();
  v1 = -18.0;
  if ((result & 1) == 0)
  {
    result = static UIDevice.isIPhone()(result);
    v1 = -12.0;
  }
  qword_1004AFAB0 = 0;
  qword_1004AFAB8 = *(_QWORD *)&v1;
  return result;
}

double sub_1001967FC()
{
  uint64_t v0;
  double v1;
  double result;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v0 = static UIDevice.isIPad()();
  if ((v0 & 1) != 0)
  {
    v1 = 267.0;
  }
  else
  {
    static UIDevice.isIPhone()(v0);
    v1 = 149.0;
  }
  result = v1;
  qword_1004AFAC0 = *(_QWORD *)&v1;
  qword_1004AFAC8 = 0;
  return result;
}

double sub_100196864()
{
  double result;

  result = -35.0;
  xmmword_1004AFAD0 = xmmword_1003BB190;
  return result;
}

double sub_100196878()
{
  double v0;
  double result;

  if (qword_10047AFB8 != -1)
    swift_once(&qword_10047AFB8, sub_1001967FC);
  v0 = *(double *)&qword_1004AFAC0;
  if (qword_10047AFC0 != -1)
    swift_once(&qword_10047AFC0, sub_100196864);
  result = v0 - *(double *)&xmmword_1004AFAD0;
  *(double *)&qword_1004AFAE0 = v0 - *(double *)&xmmword_1004AFAD0;
  return result;
}

uint64_t sub_1001968FC()
{
  uint64_t result;
  double v1;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  result = static UIDevice.isIPad()();
  v1 = 5.0;
  if ((result & 1) == 0)
  {
    result = static UIDevice.isIPhone()(result);
    v1 = 4.0;
  }
  qword_1004AFAE8 = *(_QWORD *)&v1;
  return result;
}

id sub_10019694C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 26.0, UIFontWeightMedium);
  qword_1004AFAF0 = (uint64_t)result;
  return result;
}

id sub_100196994(uint64_t a1)
{
  return sub_100012CD8(a1, (SEL *)&selRef_redColor, &qword_1004AFAF8);
}

uint64_t sub_1001969A8()
{
  uint64_t result;
  uint64_t v1;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  result = static UIDevice.isIPad()();
  if ((result & 1) != 0 || (result = static UIDevice.isIPhone()(result), (result & 1) == 0))
  {
    v1 = 20;
  }
  else
  {
    result = (uint64_t)objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable");
    v1 = 20;
    if ((_DWORD)result)
      v1 = 18;
  }
  qword_1004AFB00 = v1;
  return result;
}

uint64_t sub_100196A24()
{
  uint64_t result;
  uint64_t v1;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  result = static UIDevice.isIPad()();
  v1 = 0;
  if ((result & 1) == 0)
  {
    result = static UIDevice.isIPhone()(result);
    v1 = -15;
    if ((result & 1) != 0)
    {
      result = (uint64_t)objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable");
      if ((_DWORD)result)
        v1 = 70;
    }
  }
  qword_1004AFB08 = v1;
  return result;
}

id sub_100196A9C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.0);
  qword_1004AFB10 = (uint64_t)result;
  return result;
}

id sub_100196AD4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.0);
  qword_1004AFB18 = (uint64_t)result;
  return result;
}

void sub_100196B0C()
{
  id v0;
  id v1;
  uint64_t v2;
  unsigned int v3;
  double v4;
  id v5;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v1 = sub_100070DBC(0, 1, 1);

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v2 = static UIDevice.isIPad()();
  if ((v2 & 1) != 0 || (static UIDevice.isIPhone()(v2) & 1) != 0)
  {
    v3 = objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable");
    v4 = 0.4;
    if (v3)
      v4 = 1.0;
  }
  else
  {
    v4 = 0.4;
  }
  v5 = objc_msgSend(v1, "colorWithAlphaComponent:", v4);

  qword_1004AFB20 = (uint64_t)v5;
}

id sub_100196BF0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.0);
  qword_1004AFB28 = (uint64_t)result;
  return result;
}

void sub_100196C28(uint64_t a1)
{
  sub_100196C3C(a1, (SEL *)&selRef_systemBackgroundColor, &qword_1004AFB30);
}

void sub_100196C3C(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id v4;
  id v5;

  v4 = objc_msgSend((id)objc_opt_self(UIColor), *a2);
  v5 = sub_100070DBC(0, 1, 1);

  *a3 = v5;
}

id sub_100196CA0(uint64_t a1)
{
  return sub_100196CC4(a1, &qword_10047B018, (void **)&qword_1004AFB30, (void **)&qword_1004AFB38, (uint64_t)sub_100196C28);
}

id sub_100196CC4(uint64_t a1, _QWORD *a2, void **a3, void **a4, uint64_t a5)
{
  void *v7;

  if (*a2 != -1)
    swift_once(a2, a5);
  v7 = *a3;
  *a4 = *a3;
  return v7;
}

uint64_t sub_100196D08()
{
  uint64_t v0;
  int v1;
  uint64_t result;
  float v3;
  float v4;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v0 = static UIDevice.isIPad()();
  if ((v0 & 1) != 0)
  {
    v1 = 1066192077;
  }
  else
  {
    result = static UIDevice.isIPhone()(v0);
    if ((result & 1) == 0)
    {
      v4 = 0.55;
      goto LABEL_9;
    }
    v1 = 1060320051;
  }
  v3 = *(float *)&v1;
  result = (uint64_t)objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable");
  v4 = 0.55;
  if ((_DWORD)result)
    v4 = v3;
LABEL_9:
  dword_1004AFB40 = LODWORD(v4);
  return result;
}

uint64_t sub_100196DB0()
{
  uint64_t v0;
  uint64_t result;
  float v2;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v0 = static UIDevice.isIPad()();
  if ((v0 & 1) != 0 || (result = static UIDevice.isIPhone()(v0), (result & 1) != 0))
  {
    result = (uint64_t)objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable");
    v2 = 125.0;
    if ((_DWORD)result)
      v2 = 130.0;
  }
  else
  {
    v2 = 125.0;
  }
  dword_1004AFB44 = LODWORD(v2);
  return result;
}

float sub_100196E38()
{
  float v0;
  float result;

  if (qword_10047B030 != -1)
    swift_once(&qword_10047B030, sub_100196DB0);
  v0 = *(float *)&dword_1004AFB44;
  if (qword_10047B028 != -1)
    swift_once(&qword_10047B028, sub_100196D08);
  result = v0 * *(float *)&dword_1004AFB40;
  *(float *)&dword_1004AFB48 = v0 * *(float *)&dword_1004AFB40;
  return result;
}

float sub_100196EBC()
{
  uint64_t v0;
  float v1;
  float result;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v0 = static UIDevice.isIPad()();
  if ((v0 & 1) != 0 || (v1 = 4.0, (static UIDevice.isIPhone()(v0) & 1) != 0))
  {
    if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
      v1 = 6.0;
    else
      v1 = 4.0;
  }
  if (qword_10047B028 != -1)
    swift_once(&qword_10047B028, sub_100196D08);
  result = v1 * *(float *)&dword_1004AFB40;
  *(float *)&dword_1004AFB4C = v1 * *(float *)&dword_1004AFB40;
  return result;
}

float sub_100196F70(float a1)
{
  BOOL v1;
  float v2;
  float result;

  v1 = a1 < 1.0;
  v2 = 1.0 / a1;
  result = (float)(2.5 - (float)(a1 + a1)) + (float)((float)(a1 * a1) * 0.5);
  if (!v1)
    return v2;
  return result;
}

float sub_100196FA0(float a1)
{
  return 1.0 / a1;
}

id sub_100196FAC()
{
  id result;
  float (*v1)(float);

  result = objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable");
  v1 = sub_100196FA0;
  if ((_DWORD)result)
    v1 = sub_100196F70;
  qword_1004AFB50 = (uint64_t)v1;
  *(_QWORD *)algn_1004AFB58 = 0;
  return result;
}

float sub_100196FF8()
{
  float v0;
  float result;

  if (qword_10047B038 != -1)
    swift_once(&qword_10047B038, sub_100196E38);
  v0 = *(float *)&dword_1004AFB48;
  if (qword_10047B040 != -1)
    swift_once(&qword_10047B040, sub_100196EBC);
  result = (float)(v0 * 0.5) - (float)(*(float *)&dword_1004AFB4C * 0.5);
  *(float *)&dword_1004AFB60 = result;
  return result;
}

uint64_t sub_100197088()
{
  uint64_t v0;
  uint64_t result;
  double v2;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v0 = static UIDevice.isIPad()();
  if ((v0 & 1) != 0 || (result = static UIDevice.isIPhone()(v0), v2 = 7.5, (result & 1) != 0))
  {
    result = (uint64_t)objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable");
    v2 = 7.5;
    if ((_DWORD)result)
      v2 = 13.0;
  }
  qword_1004AFB68 = *(_QWORD *)&v2;
  return result;
}

uint64_t sub_100197100()
{
  float v0;
  uint64_t v1;
  uint64_t result;
  float v3;
  float v4;

  if (qword_10047B028 != -1)
    swift_once(&qword_10047B028, sub_100196D08);
  v0 = *(float *)&dword_1004AFB40;
  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v1 = static UIDevice.isIPad()();
  if ((v1 & 1) != 0 || (result = static UIDevice.isIPhone()(v1), v3 = 2.0, (result & 1) != 0))
  {
    v4 = v0 * 3.0;
    result = (uint64_t)objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable");
    v3 = 2.0;
    if ((_DWORD)result)
      v3 = v4;
  }
  dword_1004AFB70 = LODWORD(v3);
  return result;
}

void sub_1001971B4()
{
  qword_1004AFB78 = (uint64_t)&off_10043C158;
}

void sub_1001971C8()
{
  qword_1004AFB80 = (uint64_t)&off_10043C020;
}

void sub_1001971DC()
{
  qword_1004AFB88 = (uint64_t)&off_10043C290;
}

void sub_1001971F0()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v1 = objc_msgSend(v0, "colorWithAlphaComponent:", 0.7);

  qword_1004AFB90 = (uint64_t)v1;
}

void sub_10019725C()
{
  uint64_t v0;

  sub_100197278();
  qword_1004AFB98 = v0;
}

void sub_100197278()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  double v9;
  id v10;
  id v11;

  v0 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1003B1410;
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "blackColor");
  v4 = (void *)objc_opt_self(UIVisualEffect);
  v5 = objc_msgSend(v4, "effectCompositingColor:withMode:alpha:", v3, 0, 0.55);

  if (!v5)
  {
    __break(1u);
    goto LABEL_6;
  }
  *(_QWORD *)(v1 + 32) = v5;
  v6 = objc_msgSend(v2, "whiteColor");
  v7 = objc_msgSend(v4, "effectCompositingColor:withMode:alpha:", v6, 0, 0.14);

  if (!v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(_QWORD *)(v1 + 40) = v7;
  v8 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v9 = UIRoundToScreenScale(17.5);

  v10 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", v9);
  if (v10)
  {
    *(_QWORD *)(v1 + 48) = v10;
    v11 = objc_msgSend((id)objc_opt_self(UIColorEffect), "colorEffectSaturate:", 1.8);
    *(_QWORD *)(v1 + 56) = v11;
    specialized Array._endMutation()(v11);
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_100197444()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v0 = static UIDevice.isIPad()();
  v1 = 0;
  if ((v0 & 1) == 0)
  {
    if ((static UIDevice.isIPhone()(v0) & 1) != 0)
    {
      v2 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v2, "_peripheryInsets");
      v4 = v3;
      v6 = v5;
      v8 = v7;
      v10 = v9;

      if (v4 == UIEdgeInsetsZero.top && v6 == UIEdgeInsetsZero.left && v8 == UIEdgeInsetsZero.bottom)
      {
        v1 = 83;
        if (v10 == UIEdgeInsetsZero.right)
          v1 = 49;
      }
      else
      {
        v1 = 83;
      }
    }
    else
    {
      v1 = 49;
    }
  }
  qword_100488DB0 = v1;
}

float sub_10019752C()
{
  float result;

  if (qword_10047B090 != -1)
    swift_once(&qword_10047B090, sub_100197444);
  result = ARCoachingResetButtonPortraitVerticalOffset + (float)qword_100488DB0;
  *(float *)&dword_1004AFBA0 = result;
  return result;
}

float sub_100197588()
{
  float result;

  result = ARCoachingResetButtonLandscapeVerticalOffset;
  dword_1004AFBA4 = ARCoachingResetButtonLandscapeVerticalOffset;
  return result;
}

uint64_t sub_1001975A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (qword_10047ADE0 != -1)
    swift_once(&qword_10047ADE0, sub_100195900);
  v0 = qword_1004AF8C8;
  if (qword_10047ADD8 != -1)
    swift_once(&qword_10047ADD8, sub_100195820);
  v1 = qword_1004AF8C0;
  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  result = static UIDevice.isIPad()();
  if ((result & 1) == 0)
  {
    result = static UIDevice.isIPhone()(result);
    v0 = v1;
  }
  qword_1004AFBA8 = v0;
  return result;
}

uint64_t sub_100197654()
{
  double v0;
  uint64_t result;

  if (qword_10047ADE0 != -1)
    swift_once(&qword_10047ADE0, sub_100195900);
  v0 = *(double *)&qword_1004AF8C8;
  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  result = static UIDevice.isIPad()();
  if ((result & 1) == 0)
  {
    v0 = v0 + 47.0 + 18.0;
    result = static UIDevice.isIPhone()(result);
  }
  qword_1004AFBB0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1001976EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (qword_10047B0E8 != -1)
    swift_once(&qword_10047B0E8, sub_100197988);
  v0 = qword_1004AFBE8;
  if (qword_10047B0E0 != -1)
    swift_once(&qword_10047B0E0, sub_100197974);
  v1 = qword_1004AFBE0;
  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  result = static UIDevice.isIPad()();
  if ((result & 1) == 0)
  {
    result = static UIDevice.isIPhone()(result);
    v0 = v1;
  }
  qword_1004AFBB8 = v0;
  return result;
}

uint64_t sub_1001977A0()
{
  uint64_t v0;
  uint64_t result;

  if (qword_10047B0E0 != -1)
    swift_once(&qword_10047B0E0, sub_100197974);
  v0 = qword_1004AFBE0;
  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  result = static UIDevice.isIPad()();
  if ((result & 1) == 0)
    result = static UIDevice.isIPhone()(result);
  qword_1004AFBC0 = v0;
  return result;
}

double sub_100197820()
{
  double result;

  if (qword_10047B0F0 != -1)
    swift_once(&qword_10047B0F0, sub_1001979AC);
  result = *(double *)&qword_1004AFBF0;
  qword_1004AFBC8 = qword_1004AFBF0;
  return result;
}

uint64_t sub_100197868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (qword_10047B0F8 != -1)
    swift_once(&qword_10047B0F8, sub_1001979C0);
  v0 = qword_1004AFBF8;
  if (qword_10047B0F0 != -1)
    swift_once(&qword_10047B0F0, sub_1001979AC);
  v1 = qword_1004AFBF0;
  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  result = static UIDevice.isIPad()();
  if ((result & 1) == 0)
  {
    result = static UIDevice.isIPhone()(result);
    v0 = v1;
  }
  qword_1004AFBD0 = v0;
  return result;
}

double sub_10019791C()
{
  double result;

  if (qword_10047ADD0 != -1)
    swift_once(&qword_10047ADD0, sub_1001956EC);
  result = *(double *)&qword_1004AF8B8 * 0.5 + 6.0;
  *(double *)&qword_1004AFBD8 = result;
  return result;
}

double sub_100197974()
{
  double result;

  result = 0.0078125;
  qword_1004AFBE0 = 0x3F80000000000000;
  return result;
}

float32x2_t sub_100197988(uint64_t a1)
{
  return sub_1001979E4(a1, &qword_10047B0E0, (float32x2_t *)&qword_1004AFBE0, (float32x2_t *)&qword_1004AFBE8, (uint64_t)sub_100197974);
}

double sub_1001979AC()
{
  double result;

  *(_QWORD *)&result = 1065353216;
  qword_1004AFBF0 = 1065353216;
  return result;
}

float32x2_t sub_1001979C0(uint64_t a1)
{
  return sub_1001979E4(a1, &qword_10047B0F0, (float32x2_t *)&qword_1004AFBF0, (float32x2_t *)&qword_1004AFBF8, (uint64_t)sub_1001979AC);
}

float32x2_t sub_1001979E4(uint64_t a1, _QWORD *a2, float32x2_t *a3, float32x2_t *a4, uint64_t a5)
{
  float32x2_t result;

  if (*a2 != -1)
    swift_once(a2, a5);
  result = vsub_f32(0, *a3);
  *a4 = result;
  return result;
}

id sub_100197A30()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  qword_1004AFC00 = (uint64_t)result;
  *(_QWORD *)algn_1004AFC08 = 0;
  byte_1004AFC10 = 1;
  qword_1004AFC18 = 1;
  byte_1004AFC20 = 0;
  return result;
}

id sub_100197A7C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  qword_1004AFC28 = (uint64_t)result;
  unk_1004AFC30 = 0;
  byte_1004AFC38 = 1;
  qword_1004AFC40 = 0;
  byte_1004AFC48 = 1;
  return result;
}

id sub_100197AC8()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  qword_1004AFC50 = (uint64_t)result;
  *(_QWORD *)algn_1004AFC58 = 0;
  byte_1004AFC60 = 1;
  qword_1004AFC68 = 0;
  byte_1004AFC70 = 0;
  return result;
}

id sub_100197B14()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  qword_1004AFC78 = (uint64_t)result;
  unk_1004AFC80 = 0;
  byte_1004AFC88 = 1;
  qword_1004AFC90 = 0;
  byte_1004AFC98 = 1;
  return result;
}

id sub_100197B60()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  qword_1004AFCA0 = (uint64_t)result;
  *(_QWORD *)algn_1004AFCA8 = 0;
  byte_1004AFCB0 = 1;
  qword_1004AFCB8 = 0;
  byte_1004AFCC0 = 1;
  return result;
}

id sub_100197BAC()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
  qword_1004AFCC8 = (uint64_t)result;
  unk_1004AFCD0 = 0;
  byte_1004AFCD8 = 1;
  qword_1004AFCE0 = 0;
  byte_1004AFCE8 = 1;
  return result;
}

void sub_100197BF8()
{
  uint64_t v0;
  UIContentSizeCategory v1;
  char v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  UIContentSizeCategory v10;
  char v11;
  id v12;
  id v13;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;
  id v19;
  id v20;
  id v21;

  if (qword_10047AE50 != -1)
    swift_once(&qword_10047AE50, sub_100195CE8);
  v0 = qword_1004AF948;
  if (qword_10047A738 != -1)
    swift_once(&qword_10047A738, sub_10000E4DC);
  v1 = (UIContentSizeCategory)(id)qword_1004AF068;
  v2 = static UIContentSizeCategory.> infix(_:_:)();

  if ((v2 & 1) != 0)
  {

    v1 = UIContentSizeCategoryAccessibilityLarge;
  }
  v3 = (void *)objc_opt_self(UIFont);
  v4 = (void *)objc_opt_self(UITraitCollection);
  v5 = objc_msgSend(v4, "traitCollectionWithPreferredContentSizeCategory:", v1);

  v6 = objc_msgSend(v3, "preferredFontForTextStyle:compatibleWithTraitCollection:", v0, v5);
  v7 = objc_msgSend(v6, "fontDescriptor");

  v8 = objc_msgSend(v7, "fontDescriptorWithSymbolicTraits:", 2);
  if (v8)
  {
    v9 = qword_1004AF948;
    v10 = (UIContentSizeCategory)(id)qword_1004AF068;
    v11 = static UIContentSizeCategory.> infix(_:_:)();

    if ((v11 & 1) != 0)
    {

      v10 = UIContentSizeCategoryAccessibilityLarge;
    }
    v12 = objc_msgSend(v4, "traitCollectionWithPreferredContentSizeCategory:", v10);

    v13 = objc_msgSend(v3, "preferredFontForTextStyle:compatibleWithTraitCollection:", v9, v12);
    objc_msgSend(v13, "pointSize");
    v15 = v14;

    v16 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v16, "scale");
    v18 = v17;

    v19 = objc_msgSend(v3, "fontWithDescriptor:size:", v8, v15 * v18);
    v20 = objc_msgSend(v19, "fontDescriptor");
    v21 = sub_1001C6558();
    objc_msgSend(v3, "fontWithDescriptor:size:", v21, 0.0);

  }
  else
  {
    __break(1u);
  }
}

void sub_100197EC8()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  NSString *v7;
  NSString *v8;
  unint64_t v9;
  unint64_t v10;
  Class isa;
  _BYTE v12[48];
  _BYTE v13[72];

  v0 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleTitle1);
  v1 = objc_msgSend(v0, "fontDescriptor");

  v2 = objc_msgSend(v1, "fontDescriptorWithSymbolicTraits:", 2);
  if (v2)
  {
    v3 = sub_10000EDC8(&qword_100488DB8);
    inited = swift_initStackObject(v3, v13);
    *(_OWORD *)(inited + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(inited + 32) = UIFontDescriptorTraitsAttribute;
    v5 = sub_10000EDC8(&qword_100488DC0);
    v6 = swift_initStackObject(v5, v12);
    *(_OWORD *)(v6 + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(v6 + 32) = UIFontWeightTrait;
    *(UIFontWeight *)(v6 + 40) = UIFontWeightMedium;
    v7 = UIFontDescriptorTraitsAttribute;
    v8 = UIFontWeightTrait;
    v9 = sub_1000C7290(v6);
    *(_QWORD *)(inited + 64) = sub_10000EDC8(&qword_100488DC8);
    *(_QWORD *)(inited + 40) = v9;
    v10 = sub_1000C7398(inited);
    type metadata accessor for AttributeName(0);
    sub_100198080();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "fontDescriptorByAddingAttributes:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_100198080()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10047B678;
  if (!qword_10047B678)
  {
    type metadata accessor for AttributeName(255);
    result = swift_getWitnessTable(&unk_1003B07E0, v1);
    atomic_store(result, (unint64_t *)&qword_10047B678);
  }
  return result;
}

id sub_1001980C8()
{
  uint64_t v0;
  UIContentSizeCategory v1;
  char v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  NSString *v11;
  NSString *v12;
  unint64_t v13;
  unint64_t v14;
  Class isa;
  id v16;
  double v17;
  double v18;
  id v19;
  double v20;
  double v21;
  id v22;
  _BYTE v24[48];
  _BYTE v25[72];

  if (qword_10047AE50 != -1)
    swift_once(&qword_10047AE50, sub_100195CE8);
  v0 = qword_1004AF948;
  if (qword_10047A738 != -1)
    swift_once(&qword_10047A738, sub_10000E4DC);
  v1 = (UIContentSizeCategory)(id)qword_1004AF068;
  v2 = static UIContentSizeCategory.> infix(_:_:)(v1, UIContentSizeCategoryAccessibilityLarge);

  if ((v2 & 1) != 0)
  {

    v1 = UIContentSizeCategoryAccessibilityLarge;
  }
  v3 = (void *)objc_opt_self(UIFont);
  v4 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v1);

  v5 = objc_msgSend(v3, "preferredFontForTextStyle:compatibleWithTraitCollection:", v0, v4);
  v6 = objc_msgSend(v5, "fontDescriptor");
  v7 = sub_10000EDC8(&qword_100488DB8);
  inited = swift_initStackObject(v7, v25);
  *(_OWORD *)(inited + 16) = xmmword_1003B0BD0;
  *(_QWORD *)(inited + 32) = UIFontDescriptorTraitsAttribute;
  v9 = sub_10000EDC8(&qword_100488DC0);
  v10 = swift_initStackObject(v9, v24);
  *(_OWORD *)(v10 + 16) = xmmword_1003B0BD0;
  *(_QWORD *)(v10 + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(v10 + 40) = UIFontWeightThin;
  v11 = UIFontDescriptorTraitsAttribute;
  v12 = UIFontWeightTrait;
  v13 = sub_1000C7290(v10);
  *(_QWORD *)(inited + 64) = sub_10000EDC8(&qword_100488DC8);
  *(_QWORD *)(inited + 40) = v13;
  v14 = sub_1000C7398(inited);
  type metadata accessor for AttributeName(0);
  sub_100198080();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(v6, "fontDescriptorByAddingAttributes:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  objc_msgSend(v5, "pointSize");
  v18 = v17;
  v19 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v19, "scale");
  v21 = v20;

  v22 = objc_msgSend(v3, "fontWithDescriptor:size:", v16, v18 * v21 + v18 * v21);
  return v22;
}

id sub_1001983AC@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "kPersonHeightCoachingEnabled");
  *a2 = (_BYTE)result;
  return result;
}

id sub_1001983DC(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setKPersonHeightCoachingEnabled:", *a1);
}

double sub_1001983F0()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = *(_QWORD *)(v0 + 112);
  swift_retain(v1);
  StateValue.ifUpdated(_:)(sub_100198FB0, v0);
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

uint64_t sub_10019842C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(unint64_t *__return_ptr, __n128);
  __n128 v21;
  uint64_t v22;
  void (*v23)(unint64_t *__return_ptr, __n128);
  __n128 v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(unint64_t *, __n128);
  __n128 v28;
  void (*v29)(unint64_t *, _QWORD);
  _BYTE *v30;
  uint64_t v32;
  uint64_t (*v33)(_BYTE *, __n128);
  __n128 v34;
  void (*v35)(_BYTE *, _QWORD);
  _BYTE *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  void (*v41)(char *, uint64_t);
  char v42;
  uint64_t (*v43)(unint64_t *, __n128);
  __n128 v44;
  char *v45;
  void (*v46)(unint64_t *, _QWORD);
  char v47;
  uint64_t (*v48)(unint64_t *, __n128);
  __n128 v49;
  unint64_t *v50;
  BOOL v51;
  BOOL v52;
  char *v53;
  uint64_t (*v54)(_QWORD *, __n128);
  __n128 v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  void (*v60)(char *, uint64_t);
  uint64_t (*v61)(_QWORD *, __n128);
  __n128 v62;
  _BYTE *v63;
  uint64_t (*v64)(_QWORD *, __n128);
  __n128 v65;
  _BYTE *v66;
  BOOL v67;
  BOOL v68;
  uint64_t (*v69)(_BYTE *, __n128);
  __n128 v70;
  void (*v71)(_BYTE *, _QWORD);
  _BYTE *v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  _BYTE v75[32];
  _QWORD v76[5];
  uint64_t v77;
  unint64_t v78[68];
  _BYTE v79[531];
  char v80[24];
  _QWORD v81[3];
  uint64_t v82;

  v1 = v0;
  v2 = sub_10000EDC8((uint64_t *)&unk_10047E440);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v73 - v6;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v73 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v73 - v16;
  v18 = v0 + 64;
  swift_beginAccess(v18, v80, 0, 0);
  sub_1000644F8(v18, (uint64_t)v79, &qword_10047E6A8);
  if (!*(_QWORD *)&v79[24])
    return sub_100036600((uint64_t)v79, &qword_10047E6A8);
  sub_10001C01C((__int128 *)v79, (uint64_t)v81);
  if (*(_BYTE *)(v1 + 128) != 1)
  {
    v32 = *(_QWORD *)(v1 + 104);
    v33 = *(uint64_t (**)(_BYTE *, __n128))(*(_QWORD *)v32 + 400);
    v34 = swift_retain(v32);
    v35 = (void (*)(_BYTE *, _QWORD))v33(v79, v34);
    *v36 = 0;
    v35(v79, 0);
LABEL_29:
    swift_release(v32);
    return sub_10000F690(v81);
  }
  v74 = v12;
  v19 = *(_QWORD *)(*sub_10000F66C(v81, v82) + qword_10047DED8);
  v20 = *(void (**)(unint64_t *__return_ptr, __n128))(*(_QWORD *)v19 + 144);
  v21 = swift_retain(v19);
  v20(v78, v21);
  swift_release(v19);
  memcpy(v79, v78, sizeof(v79));
  sub_1000642CC((uint64_t)v79);
  v22 = *(_QWORD *)(v1 + 120);
  v23 = *(void (**)(unint64_t *__return_ptr, __n128))(*(_QWORD *)v22 + 144);
  v24 = swift_retain(v22);
  v23(v78, v24);
  swift_release(v22);
  v25 = v78[0];
  if (v78[0] >> 62 == 2)
  {
    v26 = *(_QWORD *)(v1 + 104);
    v27 = *(uint64_t (**)(unint64_t *, __n128))(*(_QWORD *)v26 + 400);
    v28 = swift_retain(v26);
    v29 = (void (*)(unint64_t *, _QWORD))v27(v78, v28);
    *v30 = 0;
    v29(v78, 0);
    swift_release(v26);
    sub_10001A810(v25);
    return sub_10000F690(v81);
  }
  sub_10001A810(v78[0]);
  v37 = v79[456];
  v38 = *sub_10000F66C(v81, v82) + qword_10047DFA8;
  swift_beginAccess(v38, &v77, 0, 0);
  sub_1000644F8(v38, (uint64_t)v7, (uint64_t *)&unk_10047E440);
  v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v73(v7, 1, v8) == 1)
  {
    sub_100036600((uint64_t)v7, (uint64_t *)&unk_10047E440);
  }
  else
  {
    v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v17, v7, v8);
    Date.init()(v39);
    v40 = Date.timeIntervalSince(_:)(v17);
    v41 = *(void (**)(char *, uint64_t))(v9 + 8);
    v41(v15, v8);
    v41(v17, v8);
    if (v40 < 0.5)
      v42 = v37;
    else
      v42 = 0;
    if ((v42 & 1) != 0)
    {
      v32 = *(_QWORD *)(v1 + 104);
      v43 = *(uint64_t (**)(unint64_t *, __n128))(*(_QWORD *)v32 + 400);
      v44 = swift_retain(v32);
      v46 = (void (*)(unint64_t *, _QWORD))v43(v78, v44);
      v47 = 4;
LABEL_16:
      *v45 = v47;
      v50 = v78;
LABEL_28:
      v46(v50, 0);
      goto LABEL_29;
    }
  }
  sub_10000F66C(v81, v82);
  if ((sub_10005695C() & v37) == 1)
  {
    v32 = *(_QWORD *)(v1 + 104);
    v48 = *(uint64_t (**)(unint64_t *, __n128))(*(_QWORD *)v32 + 400);
    v49 = swift_retain(v32);
    v46 = (void (*)(unint64_t *, _QWORD))v48(v78, v49);
    v47 = 1;
    goto LABEL_16;
  }
  sub_10000F66C(v81, v82);
  v51 = sub_100056824(0);
  sub_100068B24((uint64_t)v81, (uint64_t)v78);
  if (!v51)
  {
    sub_10000F690(v78);
    v53 = v74;
LABEL_22:
    v57 = *sub_10000F66C(v81, v82) + qword_10047DFB0;
    swift_beginAccess(v57, v75, 0, 0);
    sub_1000644F8(v57, (uint64_t)v5, (uint64_t *)&unk_10047E440);
    if (v73(v5, 1, v8) == 1)
    {
      sub_100036600((uint64_t)v5, (uint64_t *)&unk_10047E440);
    }
    else
    {
      v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v53, v5, v8);
      Date.init()(v58);
      v59 = Date.timeIntervalSince(_:)(v53);
      v60 = *(void (**)(char *, uint64_t))(v9 + 8);
      v60(v15, v8);
      v60(v53, v8);
      if (v59 > 0.5)
      {
        v32 = *(_QWORD *)(v1 + 104);
        v61 = *(uint64_t (**)(_QWORD *, __n128))(*(_QWORD *)v32 + 400);
        v62 = swift_retain(v32);
        v46 = (void (*)(unint64_t *, _QWORD))v61(v76, v62);
        *v63 = 3;
        goto LABEL_27;
      }
    }
    v32 = *(_QWORD *)(v1 + 104);
    v64 = *(uint64_t (**)(_QWORD *, __n128))(*(_QWORD *)v32 + 400);
    v65 = swift_retain(v32);
    v46 = (void (*)(unint64_t *, _QWORD))v64(v76, v65);
    *v66 = 0;
    goto LABEL_27;
  }
  sub_10000F66C(v78, v78[3]);
  v52 = sub_100056BDC(0.0);
  sub_10000F690(v78);
  v53 = v74;
  if (((v52 | v37 ^ 1) & 1) != 0)
    goto LABEL_22;
  sub_10000F66C(v81, v82);
  type metadata accessor for PersonHeightInstrument(0);
  if (sub_10005D3F8(0.0))
  {
    v32 = *(_QWORD *)(v1 + 104);
    v54 = *(uint64_t (**)(_QWORD *, __n128))(*(_QWORD *)v32 + 400);
    v55 = swift_retain(v32);
    v46 = (void (*)(unint64_t *, _QWORD))v54(v76, v55);
    *v56 = 1;
LABEL_27:
    v50 = v76;
    goto LABEL_28;
  }
  sub_10000F66C(v81, v82);
  v67 = sub_10005D478(0.0);
  sub_100068B24((uint64_t)v81, (uint64_t)v76);
  if (!v67)
  {
    sub_10000F690(v76);
    return sub_10000F690(v81);
  }
  sub_10000F66C(v76, v76[3]);
  v68 = sub_10005D4F8();
  sub_10000F690(v76);
  if (!v68)
  {
    v32 = *(_QWORD *)(v1 + 104);
    v69 = *(uint64_t (**)(_BYTE *, __n128))(*(_QWORD *)v32 + 400);
    v70 = swift_retain(v32);
    v71 = (void (*)(_BYTE *, _QWORD))v69(v75, v70);
    *v72 = 2;
    v71(v75, 0);
    goto LABEL_29;
  }
  return sub_10000F690(v81);
}

uint64_t sub_100198A98()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, __n128);
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _BYTE v21[24];
  void *v22;
  void *v23;

  v1 = v0;
  v2 = *v0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  v1[12] = 0;
  sub_10000EDC8(&qword_100488F20);
  KeyPath = swift_getKeyPath(&unk_1003BB240);
  swift_retain(v1);
  v1[13] = MutableStateValue.__allocating_init(_:_:)(KeyPath, v2);
  v4 = sub_10000EDC8(&qword_10047ECF0);
  v5 = swift_getKeyPath(&unk_1003BB268);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v6 = qword_1004AF890;
  v7 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v4 + 272);
  v8 = swift_retain(qword_1004AF890);
  v1[14] = v7(v5, v6, v8);
  v9 = swift_getKeyPath(&unk_1003BB290);
  v10 = sub_10000EDC8((uint64_t *)&unk_100486710);
  v11 = qword_1004AF890;
  v12 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v10 + 272);
  v13 = swift_retain(qword_1004AF890);
  v1[15] = v12(v9, v11, v13);
  *((_BYTE *)v1 + 128) = 1;
  swift_release(v1);
  v22 = &type metadata for Configurations.Default;
  v23 = &protocol witness table for Configurations.Default;
  v14 = StateObserver.init(configuration:)(v21);
  v15 = (void *)objc_opt_self(NSUserDefaults);
  v16 = objc_msgSend(v15, "standardUserDefaults", swift_retain(v14).n128_f64[0]);
  v17 = swift_getKeyPath(&unk_1003BB2E0);
  v18 = swift_allocObject(&unk_10044AB90, 24, 7);
  swift_weakInit(v18 + 16, v14);
  sub_100049274();
  v19 = (void *)static OS_dispatch_queue.main.getter();
  NSUserDefaults.performOnChange<A>(to:on:action:)(v17, v19, sub_10019901C, v18);

  swift_release(v17);
  swift_release(v18);

  swift_release(v14);
  return v14;
}

double sub_100198CB8(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    *(_BYTE *)(Strong + 128) = v2;
    sub_10019842C();
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

void sub_100198D1C()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  _BYTE v13[136];

  inited = swift_initStackObject(v0, v13);
  *(_OWORD *)(inited + 64) = 0u;
  *(_OWORD *)(inited + 80) = 0u;
  *(_QWORD *)(inited + 96) = 0;
  sub_10000EDC8(&qword_100488F20);
  KeyPath = swift_getKeyPath(&unk_1003BB240);
  *(_QWORD *)(inited + 104) = MutableStateValue.__allocating_init(_:_:)(KeyPath, v0);
  v3 = sub_10000EDC8(&qword_10047ECF0);
  v4 = swift_getKeyPath(&unk_1003BB268);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v5 = qword_1004AF890;
  v6 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v3 + 272);
  v7 = swift_retain();
  *(_QWORD *)(inited + 112) = v6(v4, v5, v7);
  v8 = swift_getKeyPath(&unk_1003BB290);
  v9 = sub_10000EDC8((uint64_t *)&unk_100486710);
  v10 = qword_1004AF890;
  v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v9 + 272);
  v12 = swift_retain();
  *(_QWORD *)(inited + 120) = v11(v8, v10, v12);
  *(_BYTE *)(inited + 128) = 1;
  swift_release();
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002DLL, 0x80000001003D7D70, "Measure/PersonHeightCoachingController.swift", 44, 2, 56, 0);
  __break(1u);
}

double sub_100198E84()
{
  uint64_t v0;
  double result;

  sub_100036600(v0 + 64, &qword_10047E6A8);
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100198EB8(uint64_t a1)
{
  uint64_t v1;

  v1 = StateObserver.deinit(a1);
  sub_100036600(v1 + 64, &qword_10047E6A8);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance(v1, 129, 7);
}

uint64_t type metadata accessor for PersonHeightCoachingController(uint64_t a1)
{
  uint64_t result;

  result = qword_100488DF8;
  if (!qword_100488DF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PersonHeightCoachingController);
  return result;
}

uint64_t sub_100198F48(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = "(";
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = &unk_1003BB228;
  return swift_initClassMetadata2(a1, 256, 5, v2, a1 + 208);
}

id sub_100198FB4@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "kPersonHeightCoachingEnabled");
  *a2 = (_BYTE)result;
  return result;
}

id sub_100198FE4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setKPersonHeightCoachingEnabled:", *a1);
}

uint64_t sub_100198FF8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_10019901C(char *a1)
{
  uint64_t v1;

  return sub_100198CB8(a1, v1);
}

Swift::Int sub_100199024()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x6C6576656CLL;
  else
    v2 = 0x6572757361656DLL;
  if (v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1001990A0(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x6C6576656CLL;
  else
    v2 = 0x6572757361656DLL;
  if (*v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1001990F8()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x6C6576656CLL;
  else
    v2 = 0x6572757361656DLL;
  if (v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100199170@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043BC48, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1001991CC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6572757361656DLL;
  if (*v1)
    v2 = 0x6C6576656CLL;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100199208(char *a1, char *a2)
{
  return sub_1000F3DE0(*a1, *a2);
}

void sub_100199214(_QWORD *a1@<X8>)
{
  *a1 = &off_10043C3E8;
}

uint64_t sub_100199224(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::Int v17;
  unsigned int v18;

  v1 = objc_msgSend(a1, "type");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v3 = v2;

  v4 = sub_10006C814();
  v5 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(46, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, &type metadata for String, v4);
  swift_bridgeObjectRelease(v3);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = (uint64_t *)(v5 + 32 * v6);
    v8 = *v7;
    v9 = v7[1];
    v10 = v7[2];
    v11 = v7[3];
    swift_bridgeObjectRetain(v11);
    v12 = swift_bridgeObjectRelease(v5);
    v13 = static String._fromSubstring(_:)(v8, v9, v10, v11, v12);
    v15 = v14;
    swift_bridgeObjectRelease(v11);
    v16._countAndFlagsBits = v13;
    v16._object = v15;
    v17 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043BC48, v16);
    swift_bridgeObjectRelease(v15);
    if (v17 == 1)
      v18 = 1;
    else
      v18 = 2;
    if (v17)
      return v18;
    else
      return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v5);
    return 2;
  }
}

uint64_t storeEnumTagSinglePayload for Tab(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10019938C + 4 * byte_1003BB30D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001993C0 + 4 * byte_1003BB308[v4]))();
}

uint64_t sub_1001993C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001993C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001993D0);
  return result;
}

uint64_t sub_1001993DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001993E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001993E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001993F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Tab()
{
  return &type metadata for Tab;
}

unint64_t sub_100199410()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100488F28;
  if (!qword_100488F28)
  {
    v1 = sub_100012B80(&qword_100488F30);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100488F28);
  }
  return result;
}

unint64_t sub_100199460()
{
  unint64_t result;

  result = qword_100488F38;
  if (!qword_100488F38)
  {
    result = swift_getWitnessTable(&unk_1003BB350, &type metadata for Tab);
    atomic_store(result, (unint64_t *)&qword_100488F38);
  }
  return result;
}

id sub_1001994A4(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t (*v8)(id, id, id);
  id v9;
  id v10;
  id v11;
  void *v12;

  v8 = *(uint64_t (**)(id, id, id))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v9 = a2;
  v10 = a3;
  v11 = a4;
  v12 = (void *)v8(v9, v10, v11);
  swift_release(v7);

  return v12;
}

void sub_10019952C()
{
  double v0;
  double v1;
  uint64_t v2;
  char v3;
  void *v4;
  char **v5;
  id v6;
  id v7;
  char v8;
  double v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  void *object;
  NSString v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  char v37;
  uint64_t v38;
  char v39;
  id v40;
  id v41;
  id v42;
  _QWORD aBlock[6];
  Swift::String v44;
  CGRect v45;

  if (qword_10047A750 != -1)
    swift_once(&qword_10047A750, sub_10000EF04);
  v0 = *(double *)&qword_1004AF088;
  if (qword_10047A748 != -1)
    swift_once(&qword_10047A748, sub_10000EE64);
  v1 = *(double *)&qword_1004AF080;
  v2 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v3 = static UIDevice.isIPhone()(v2);
  v4 = (void *)objc_opt_self(UIColor);
  v5 = &selRef_systemBackgroundColor;
  if ((v3 & 1) == 0)
    v5 = &selRef_clearColor;
  v6 = objc_msgSend(v4, *v5);
  if (qword_10047AE28 != -1)
    swift_once(&qword_10047AE28, sub_100195B18);
  v7 = (id)qword_1004AF910;
  v8 = static UIDevice.isIPhone()(v7);
  v9 = 16.0;
  if ((v8 & 1) != 0)
  {
    if (qword_10047A7B0 != -1)
      swift_once(&qword_10047A7B0, sub_10000F088);
    v9 = *(double *)&qword_1004AF100;
  }
  v10 = sub_100038F30(v6, v7, 0.0, 0.0, v0, v1, v9);
  aBlock[4] = sub_100167760;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001994A4;
  aBlock[3] = &unk_10044ACD0;
  v11 = _Block_copy(aBlock);
  v12 = v10;
  objc_msgSend(v12, "setPointerStyleProvider:", v11);
  _Block_release(v11);

  v13 = (void *)objc_opt_self(NSBundle);
  v14 = v12;
  v15 = objc_msgSend(v13, "mainBundle");
  v44._object = (void *)0xE000000000000000;
  v16._object = (void *)0x80000001003DCC70;
  v16._countAndFlagsBits = 0xD000000000000010;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v44._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v44)._object;

  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setTitle:forState:", v19, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

  v20 = qword_10047AE18;
  v21 = v14;
  if (v20 != -1)
    swift_once(&qword_10047AE18, sub_100195AF0);
  objc_msgSend(v21, "setTitleColor:forState:", qword_1004AF900, 0);

  v22 = qword_10047AE20;
  v23 = v21;
  if (v22 != -1)
    swift_once(&qword_10047AE20, sub_100195B04);
  objc_msgSend(v23, "setTitleColor:forState:", qword_1004AF908, 1);

  v24 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleHeadline);
  v25 = objc_msgSend(v23, "titleLabel");
  if (v25)
  {
    v26 = v25;
    v27 = (void *)objc_opt_self(UIFont);
    v28 = objc_msgSend(v27, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
    v29 = objc_msgSend(v28, "fontDescriptor");

    v30 = objc_msgSend(v29, "fontDescriptorWithSymbolicTraits:", 2);
    if (!v30)
    {
      __break(1u);
      return;
    }
    v31 = objc_msgSend(v27, "fontWithDescriptor:size:", v30, 0.0);

    v32 = objc_msgSend(v24, "scaledFontForFont:maximumPointSize:", v31, 28.0);
    objc_msgSend(v26, "setFont:", v32);

  }
  if ((static UIDevice.isIPhone()(v25) & 1) != 0)
  {
    v33 = v24;
    v24 = v23;
  }
  else
  {
    objc_msgSend(v23, "bounds");
    v34 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, CGRectGetWidth(v45), 0.5);
    if (qword_10047B128 != -1)
      swift_once(&qword_10047B128, sub_100197BAC);
    v35 = (void *)qword_1004AFCC8;
    v36 = qword_1004AFCD0;
    if ((byte_1004AFCD8 & 1) != 0)
    {
      v37 = byte_1004AFCE8;
      v38 = qword_1004AFCE0;
      v39 = byte_10048A2A0;
      v40 = (id)qword_1004AFCC8;
      v41 = sub_100070DBC(v39, v38, v37);
      sub_100021580(v35, v36, 1);
    }
    else
    {
      if ((byte_10048A2A0 & 1) != 0)
        v42 = qword_1004AFCD0;
      else
        v42 = (id)qword_1004AFCC8;
      v41 = v42;
    }
    objc_msgSend(v34, "setBackgroundColor:", v41);

    objc_msgSend(v23, "addSubview:", v34);
    v33 = v23;
  }

}

uint64_t type metadata accessor for PlatterCopyButton()
{
  return objc_opt_self(_TtC7Measure17PlatterCopyButton);
}

uint64_t sub_100199C10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100199C20(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_100199C28(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  void *v14;
  void *v15;
  __int128 v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  __int128 v43;
  NSString v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  NSString v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  NSString v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  NSString v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void *v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  _OWORD v93[2];
  _BYTE v94[16];
  __int128 v95;
  _OWORD v96[2];
  _BYTE v97[16];
  __int128 v98;
  _BYTE v99[22];
  _BYTE v100[16];
  _QWORD v101[2];
  _QWORD v102[2];
  _QWORD v103[3];

  v4 = *((_QWORD *)a1 + 5);
  v5 = *((_QWORD *)a1 + 6);
  v6 = *((_QWORD *)a1 + 7);
  v7 = *((_QWORD *)a1 + 8);
  v8 = *((_QWORD *)a1 + 10);
  v9 = *((_QWORD *)a1 + 11);
  v10 = *((_QWORD *)a1 + 12);
  v87 = *((_QWORD *)a1 + 13);
  v90 = *(_QWORD *)(v2 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_labelStrip);
  v11 = v90 + OBJC_IVAR____TtC7Measure16ObjectLabelStrip_lengthLabels;
  Strong = swift_unknownObjectWeakLoadStrong(v90 + OBJC_IVAR____TtC7Measure16ObjectLabelStrip_lengthLabels, a2);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_39;
  }
  v14 = (void *)Strong;
  v83 = v7;
  v85 = v6;
  v15 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC7Measure27SurfaceSideMeasurementStack_mainUnit, v13);

  if (!v15)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v16 = a1[1];
  v98 = *a1;
  *(_OWORD *)v99 = v16;
  *(_QWORD *)&v99[14] = *(_QWORD *)((char *)a1 + 30);
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setText:", v17);

  v19 = swift_unknownObjectWeakLoadStrong(v11, v18);
  if (!v19)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v21 = (void *)v19;
  v22 = (void *)swift_unknownObjectWeakLoadStrong(v19 + OBJC_IVAR____TtC7Measure27SurfaceSideMeasurementStack_mainUnit, v20);

  if (!v22)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  sub_10001F9D8((uint64_t)v99, (uint64_t)v100);
  sub_10001F9D8((uint64_t)v100, (uint64_t)v101);
  if (v101[1])
    v23 = String._bridgeToObjectiveC()();
  else
    v23 = 0;
  objc_msgSend(v22, "setAccessibilityLabel:", v23);

  v25 = swift_unknownObjectWeakLoadStrong(v11, v24);
  if (!v25)
    goto LABEL_42;
  v27 = (void *)v25;
  v28 = (void *)swift_unknownObjectWeakLoadStrong(v25 + OBJC_IVAR____TtC7Measure27SurfaceSideMeasurementStack_secondaryLabelStack, v26);

  if (!v28)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v98 == __PAIR128__(v9, v8))
    v29 = 1;
  else
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v98, *((_QWORD *)&v98 + 1), v8, v9, 0);
  sub_10013495C(v8, v9, v10, v87, v4, v5, v85, v83, v29 & 1);

  v30 = *((_QWORD *)a1 + 20);
  v31 = *((_QWORD *)a1 + 21);
  v32 = *((_QWORD *)a1 + 22);
  v33 = *((_QWORD *)a1 + 23);
  v34 = *((_QWORD *)a1 + 25);
  v35 = *((_QWORD *)a1 + 26);
  v36 = *((_QWORD *)a1 + 27);
  v88 = *((_QWORD *)a1 + 28);
  v37 = v90 + OBJC_IVAR____TtC7Measure16ObjectLabelStrip_widthLabels;
  v39 = swift_unknownObjectWeakLoadStrong(v90 + OBJC_IVAR____TtC7Measure16ObjectLabelStrip_widthLabels, v38);
  if (!v39)
    goto LABEL_44;
  v41 = (void *)v39;
  v84 = v33;
  v86 = v32;
  v42 = (void *)swift_unknownObjectWeakLoadStrong(v39 + OBJC_IVAR____TtC7Measure27SurfaceSideMeasurementStack_mainUnit, v40);

  if (!v42)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v43 = *(__int128 *)((char *)a1 + 136);
  v95 = *(__int128 *)((char *)a1 + 120);
  v96[0] = v43;
  *(_QWORD *)((char *)v96 + 14) = *(_QWORD *)((char *)a1 + 150);
  v44 = String._bridgeToObjectiveC()();
  objc_msgSend(v42, "setText:", v44);

  v46 = swift_unknownObjectWeakLoadStrong(v37, v45);
  if (!v46)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v48 = (void *)v46;
  v49 = (void *)swift_unknownObjectWeakLoadStrong(v46 + OBJC_IVAR____TtC7Measure27SurfaceSideMeasurementStack_mainUnit, v47);

  if (!v49)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  sub_10001F9D8((uint64_t)v96, (uint64_t)v97);
  sub_10001F9D8((uint64_t)v97, (uint64_t)v102);
  if (v102[1])
    v50 = String._bridgeToObjectiveC()();
  else
    v50 = 0;
  objc_msgSend(v49, "setAccessibilityLabel:", v50);

  v52 = swift_unknownObjectWeakLoadStrong(v37, v51);
  if (!v52)
    goto LABEL_48;
  v54 = (void *)v52;
  v55 = (void *)swift_unknownObjectWeakLoadStrong(v52 + OBJC_IVAR____TtC7Measure27SurfaceSideMeasurementStack_secondaryLabelStack, v53);

  if (!v55)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (v95 == __PAIR128__(v35, v34))
    v56 = 1;
  else
    v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v95, *((_QWORD *)&v95 + 1), v34, v35, 0);
  sub_10013495C(v34, v35, v36, v88, v30, v31, v86, v84, v56 & 1);

  v57 = *((_QWORD *)a1 + 35);
  v58 = *((_QWORD *)a1 + 36);
  v60 = *((_QWORD *)a1 + 37);
  v59 = *((_QWORD *)a1 + 38);
  v61 = *((_QWORD *)a1 + 40);
  v62 = *((_QWORD *)a1 + 41);
  v63 = *((_QWORD *)a1 + 42);
  v89 = *((_QWORD *)a1 + 43);
  v64 = v90 + OBJC_IVAR____TtC7Measure16ObjectLabelStrip_heightLabels;
  v66 = swift_unknownObjectWeakLoadStrong(v90 + OBJC_IVAR____TtC7Measure16ObjectLabelStrip_heightLabels, v65);
  if (!v66)
    goto LABEL_50;
  v68 = (void *)v66;
  v91 = v59;
  v69 = (void *)swift_unknownObjectWeakLoadStrong(v66 + OBJC_IVAR____TtC7Measure27SurfaceSideMeasurementStack_mainUnit, v67);

  if (!v69)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v92 = a1[15];
  v93[0] = a1[16];
  *(_QWORD *)((char *)v93 + 14) = *(_QWORD *)((char *)a1 + 270);
  v70 = String._bridgeToObjectiveC()();
  objc_msgSend(v69, "setText:", v70);

  v72 = swift_unknownObjectWeakLoadStrong(v64, v71);
  if (!v72)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v74 = (void *)v72;
  v75 = (void *)swift_unknownObjectWeakLoadStrong(v72 + OBJC_IVAR____TtC7Measure27SurfaceSideMeasurementStack_mainUnit, v73);

  if (!v75)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  sub_10001F9D8((uint64_t)v93, (uint64_t)v94);
  sub_10001F9D8((uint64_t)v94, (uint64_t)v103);
  if (v103[1])
    v76 = String._bridgeToObjectiveC()();
  else
    v76 = 0;
  objc_msgSend(v75, "setAccessibilityLabel:", v76);

  v78 = swift_unknownObjectWeakLoadStrong(v64, v77);
  if (!v78)
    goto LABEL_54;
  v80 = (void *)v78;
  v81 = (void *)swift_unknownObjectWeakLoadStrong(v78 + OBJC_IVAR____TtC7Measure27SurfaceSideMeasurementStack_secondaryLabelStack, v79);

  if (!v81)
  {
LABEL_55:
    __break(1u);
    return;
  }
  if (v92 == __PAIR128__(v62, v61))
    v82 = 1;
  else
    v82 = _stringCompareWithSmolCheck(_:_:expecting:)(v92, *((_QWORD *)&v92 + 1), v61, v62, 0);
  sub_10013495C(v61, v62, v63, v89, v57, v58, v60, v91, v82 & 1);

}

id sub_10019A1D8(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, __n128);
  __n128 v26;
  char *v27;
  char *v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  objc_class *ObjectType;
  objc_super v43;
  double v44;
  _BYTE v45[24];

  v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType(v5);
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_fullContentHeight] = 0;
  v8 = &v5[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_numberOfRowsChangedCallback];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_minContentViewHeight;
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_minContentViewHeight] = 0x407AA00000000000;
  v10 = (void *)objc_opt_self(UITraitCollection);
  v11 = v6;
  v12 = objc_msgSend(v10, "currentTraitCollection");
  v13 = objc_msgSend(v12, "preferredContentSizeCategory");

  LOBYTE(v12) = UIContentSizeCategory.isAccessibilityCategory.getter(v13);
  v14 = 88.0;
  if ((v12 & 1) != 0)
    v14 = 222.0;
  v15 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_tableRowHeight;
  *(double *)&v11[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_tableRowHeight] = v14;
  *(_QWORD *)&v11[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_numberOfRows] = 4;
  v16 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_sketchView;
  v17 = type metadata accessor for SketchObject();
  *(_QWORD *)&v11[v16] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v17)), "init");
  v18 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_labelStrip;
  v19 = type metadata accessor for ObjectLabelStrip();
  *(_QWORD *)&v11[v18] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v19)), "init");
  v20 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_tableView;
  *(_QWORD *)&v11[v20] = objc_msgSend(objc_allocWithZone((Class)UITableView), "init");
  v21 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial__historyState;
  v22 = sub_10000EDC8(&qword_100486270);
  KeyPath = swift_getKeyPath(&unk_1003BB448);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v24 = qword_1004AF890;
  v25 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v22 + 272);
  v26 = swift_retain();
  *(_QWORD *)&v11[v21] = v25(KeyPath, v24, v26);
  v27 = &v11[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_measurementID];
  *(_QWORD *)v27 = a1;
  *((_QWORD *)v27 + 1) = a2;
  v28 = &v11[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_title];
  *(_QWORD *)v28 = a4;
  *((_QWORD *)v28 + 1) = a5;
  v29 = *(double *)&v6[v9];
  v30 = v29 + *(double *)&v11[v15] * 4.0;
  v31 = type metadata accessor for CardContainerView.Configuration(0);
  v32 = swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  swift_beginAccess(v32 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration__maxHeight, v45, 33, 0);
  v44 = v30;
  Published.init(initialValue:)(&v44, &type metadata for CGFloat);
  swift_endAccess(v45);
  swift_beginAccess(v32 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration__minHeight, v45, 33, 0);
  v44 = v29;
  Published.init(initialValue:)(&v44, &type metadata for CGFloat);
  swift_endAccess(v45);
  *(_QWORD *)(v32 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityThreshold) = 0x408F400000000000;
  *(_QWORD *)(v32 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityUpperThreshold) = 0x40A7700000000000;
  *(_QWORD *)&v11[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_containerConfiguration] = v32;

  v43.receiver = v11;
  v43.super_class = ObjectType;
  v33 = objc_msgSendSuper2(&v43, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100199C28(a3, v34);
  v35 = sub_10019BA60(a3);
  sub_10019A554((uint64_t)v35, v36);
  sub_10019A8A8();

  return v33;
}

void sub_10019A554(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  void *object;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  Swift::String v30;
  Swift::String v31;
  void *v32;
  NSString v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;

  v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_labelStrip];
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC7Measure16ObjectLabelStrip_lengthLabels, a2);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_9;
  }
  v6 = (void *)Strong;
  v7 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC7Measure27SurfaceSideMeasurementStack_sideTitle, v5);

  if (!v7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = (void *)objc_opt_self(NSBundle);
  v9 = objc_msgSend(v8, "mainBundle");
  v34._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0x4C5F5443454A424FLL;
  v10._object = (void *)0xED00004854474E45;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v34._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v34)._object;

  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setText:", v13, swift_bridgeObjectRelease(object).n128_f64[0]);

  v15 = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC7Measure16ObjectLabelStrip_widthLabels, v14);
  if (!v15)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v17 = (void *)v15;
  v18 = (void *)swift_unknownObjectWeakLoadStrong(v15 + OBJC_IVAR____TtC7Measure27SurfaceSideMeasurementStack_sideTitle, v16);

  if (!v18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v19 = objc_msgSend(v8, "mainBundle");
  v35._object = (void *)0xE000000000000000;
  v20._countAndFlagsBits = 0x575F5443454A424FLL;
  v20._object = (void *)0xEC00000048544449;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v35._countAndFlagsBits = 0;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v35)._object;

  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setText:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  v25 = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC7Measure16ObjectLabelStrip_heightLabels, v24);
  if (!v25)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v27 = (void *)v25;
  v28 = (void *)swift_unknownObjectWeakLoadStrong(v25 + OBJC_IVAR____TtC7Measure27SurfaceSideMeasurementStack_sideTitle, v26);

  if (v28)
  {
    v29 = objc_msgSend(v8, "mainBundle");
    v36._object = (void *)0xE000000000000000;
    v30._countAndFlagsBits = 0x485F5443454A424FLL;
    v30._object = (void *)0xED00005448474945;
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    v36._countAndFlagsBits = 0;
    v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v36)._object;

    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setText:", v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

    objc_msgSend(v2, "setAxis:", 1);
    objc_msgSend(v2, "addArrangedSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_sketchView]);
    objc_msgSend(v2, "addArrangedSubview:", v3);
    objc_msgSend(v2, "addArrangedSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_tableView]);
    sub_1001CF5F8(0, 2.0, 1.0, 1.0);
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_10019A8A8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  double v5;
  id v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_sketchView);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend(v1, "heightAnchor");
  v3 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  LOBYTE(v3) = UIContentSizeCategory.isAccessibilityCategory.getter(v4);
  v5 = 176.0;
  if ((v3 & 1) != 0)
    v5 = 444.0;
  v6 = objc_msgSend(v2, "constraintEqualToConstant:", v5);

  objc_msgSend(v6, "setActive:", 1);
}

void sub_10019A9D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  Class isa;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;

  v3 = type metadata accessor for IndexPath(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = 0;
  v29 = v2;
  v8 = *(void **)(v2 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_tableView);
  do
  {
    IndexPath.init(row:section:)(v7, 0);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v10 = objc_msgSend(v8, "cellForRowAtIndexPath:", isa);

    if (!v10)
      goto LABEL_10;
    v11 = type metadata accessor for DetailedPlatterCellTableViewCell();
    v12 = swift_dynamicCastClass(v10, v11);
    if (!v12)
    {

LABEL_10:
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return;
    }
    ++v7;
    v13 = *(_QWORD *)(v12 + OBJC_IVAR____TtC7Measure32DetailedPlatterCellTableViewCell_measureContent);
    objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits), "setSelectedRange:", 0, 0);
    v14 = *(_QWORD *)(v13 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
    objc_msgSend(*(id *)(*(_QWORD *)(v14 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label), "setSelectedRange:", 0, 0);
    objc_msgSend(*(id *)(*(_QWORD *)(v14 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label), "setSelectedRange:", 0, 0);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  while (v7 != 4);
  v16 = *(_QWORD *)(v29 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_labelStrip);
  Strong = swift_unknownObjectWeakLoadStrong(v16 + OBJC_IVAR____TtC7Measure16ObjectLabelStrip_lengthLabels, v15);
  if (Strong)
  {
    v19 = (void *)Strong;
    sub_1000D964C(Strong, v18);

    v21 = swift_unknownObjectWeakLoadStrong(v16 + OBJC_IVAR____TtC7Measure16ObjectLabelStrip_widthLabels, v20);
    if (v21)
    {
      v23 = (void *)v21;
      sub_1000D964C(v21, v22);

      v25 = swift_unknownObjectWeakLoadStrong(v16 + OBJC_IVAR____TtC7Measure16ObjectLabelStrip_heightLabels, v24);
      if (v25)
      {
        v27 = (void *)v25;
        sub_1000D964C(v25, v26);

        return;
      }
      goto LABEL_14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_14:
  __break(1u);
}

uint64_t type metadata accessor for ObjectPlatterSpatial()
{
  return objc_opt_self(_TtC7Measure20ObjectPlatterSpatial);
}

__n128 sub_10019AD08@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __n128 result;
  _OWORD v6[7];

  sub_10019B440(a1, (uint64_t *)v6);
  v3 = v6[5];
  *(_OWORD *)(a2 + 64) = v6[4];
  *(_OWORD *)(a2 + 80) = v3;
  *(_OWORD *)(a2 + 96) = v6[6];
  v4 = v6[1];
  *(_OWORD *)a2 = v6[0];
  *(_OWORD *)(a2 + 16) = v4;
  result = (__n128)v6[3];
  *(_OWORD *)(a2 + 32) = v6[2];
  *(__n128 *)(a2 + 48) = result;
  return result;
}

uint64_t sub_10019AD58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_title);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_title + 8));
  return v1;
}

void *sub_10019AD90()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_tableView);
  v2 = v1;
  return v1;
}

uint64_t sub_10019ADBC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_containerConfiguration));
}

double sub_10019ADCC()
{
  uint64_t v0;
  double Height;
  CGRect v3;
  CGRect v4;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_sketchView), "bounds");
  Height = CGRectGetHeight(v3);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_labelStrip), "bounds");
  return Height + CGRectGetHeight(v4);
}

double sub_10019AE28()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_fullContentHeight);
}

void sub_10019AE38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  const void *v8;
  uint64_t v9;
  __int128 __dst[52];
  _BYTE v11[848];
  _BYTE v12[848];

  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_title);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_title + 8);
  *v5 = v4;
  v5[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v6);
  v7 = type metadata accessor for MeasurementHistoryItem(0);
  sub_10001F970((const void *)(a1 + *(int *)(v7 + 28)), v11);
  sub_10001F970(v11, v12);
  if (sub_10001F9AC((uint64_t)v12) == 2)
  {
    v8 = (const void *)sub_10001F9B8((uint64_t)v12);
    memcpy(__dst, v8, 0x346uLL);
    sub_100199C28(__dst, v9);
  }
}

id sub_10019AEE0(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSString *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  Class isa;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Swift::String v59;
  void *object;
  id v61;
  NSString v62;
  id v63;
  _BYTE v65[848];
  _BYTE v66[848];
  Swift::String v67;
  Swift::String v68;
  Swift::String v69;
  Swift::String v70;

  v2 = type metadata accessor for MeasurementHistoryItem(0);
  sub_10001F970((const void *)(a1 + *(int *)(v2 + 28)), v65);
  sub_10001F970(v65, v66);
  v3 = 0;
  if (sub_10001F9AC((uint64_t)v66) == 2)
  {
    v4 = (uint64_t *)sub_10001F9B8((uint64_t)v66);
    v5 = *(_QWORD *)(a1 + 24);
    v6 = sub_10000EDC8(&qword_100486370);
    v7 = swift_allocObject(v6, 48, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(v7 + 32) = NSFontAttributeName;
    v8 = (void *)objc_opt_self(UIFont);
    v9 = NSFontAttributeName;
    objc_msgSend(v8, "systemFontSize");
    *(_QWORD *)(v7 + 40) = objc_msgSend(v8, "systemFontOfSize:weight:");
    v10 = sub_1000C74F4(v7);
    swift_bridgeObjectRetain(v5);
    sub_10001FDC4(v10);
    v12 = v11;
    swift_bridgeObjectRelease(v10);
    v13 = objc_allocWithZone((Class)NSAttributedString);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    type metadata accessor for Key(0);
    sub_100020800();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v16 = objc_msgSend(v13, "initWithString:attributes:", v14, isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

    v3 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v16);
    v17 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v18 = swift_allocObject(v17, 632, 7);
    *(_OWORD *)(v18 + 16) = xmmword_1003BB410;
    v19 = (void *)objc_opt_self(NSBundle);
    v20 = objc_msgSend(v19, "mainBundle");
    v67._object = (void *)0xE000000000000000;
    v21._countAndFlagsBits = 0x4C5F5443454A424FLL;
    v21._object = (void *)0xED00004854474E45;
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v67._countAndFlagsBits = 0;
    v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v67);

    *(_QWORD *)(v18 + 56) = &type metadata for String;
    v24 = sub_100018B34();
    *(_QWORD *)(v18 + 64) = v24;
    *(Swift::String *)(v18 + 32) = v23;
    v26 = *v4;
    v25 = v4[1];
    v27 = v4[5];
    v28 = v4[6];
    v29 = v4[10];
    v30 = v4[11];
    *(_QWORD *)(v18 + 96) = &type metadata for String;
    *(_QWORD *)(v18 + 104) = v24;
    *(_QWORD *)(v18 + 72) = v26;
    *(_QWORD *)(v18 + 80) = v25;
    *(_QWORD *)(v18 + 136) = &type metadata for String;
    *(_QWORD *)(v18 + 144) = v24;
    *(_QWORD *)(v18 + 112) = v27;
    *(_QWORD *)(v18 + 120) = v28;
    *(_QWORD *)(v18 + 176) = &type metadata for String;
    *(_QWORD *)(v18 + 184) = v24;
    *(_QWORD *)(v18 + 152) = v29;
    *(_QWORD *)(v18 + 160) = v30;
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v28);
    v31 = objc_msgSend(v19, "mainBundle", swift_bridgeObjectRetain(v30).n128_f64[0]);
    v68._object = (void *)0xE000000000000000;
    v32._countAndFlagsBits = 0x575F5443454A424FLL;
    v32._object = (void *)0xEC00000048544449;
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    v68._countAndFlagsBits = 0;
    v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, (Swift::String_optional)0, (NSBundle)v31, v33, v68);

    *(_QWORD *)(v18 + 216) = &type metadata for String;
    *(_QWORD *)(v18 + 224) = v24;
    *(Swift::String *)(v18 + 192) = v34;
    v36 = v4[15];
    v35 = v4[16];
    v37 = v4[20];
    v38 = v4[21];
    v39 = v4[25];
    v40 = v4[26];
    *(_QWORD *)(v18 + 256) = &type metadata for String;
    *(_QWORD *)(v18 + 264) = v24;
    *(_QWORD *)(v18 + 232) = v36;
    *(_QWORD *)(v18 + 240) = v35;
    *(_QWORD *)(v18 + 296) = &type metadata for String;
    *(_QWORD *)(v18 + 304) = v24;
    *(_QWORD *)(v18 + 272) = v37;
    *(_QWORD *)(v18 + 280) = v38;
    *(_QWORD *)(v18 + 336) = &type metadata for String;
    *(_QWORD *)(v18 + 344) = v24;
    *(_QWORD *)(v18 + 312) = v39;
    *(_QWORD *)(v18 + 320) = v40;
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v38);
    v41 = objc_msgSend(v19, "mainBundle", swift_bridgeObjectRetain(v40).n128_f64[0]);
    v69._object = (void *)0xE000000000000000;
    v42._countAndFlagsBits = 0x485F5443454A424FLL;
    v42._object = (void *)0xED00005448474945;
    v43._countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    v69._countAndFlagsBits = 0;
    v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, (NSBundle)v41, v43, v69);

    *(_QWORD *)(v18 + 376) = &type metadata for String;
    *(_QWORD *)(v18 + 384) = v24;
    *(Swift::String *)(v18 + 352) = v44;
    v46 = v4[30];
    v45 = v4[31];
    v47 = v4[35];
    v48 = v4[36];
    v49 = v4[40];
    v50 = v4[41];
    *(_QWORD *)(v18 + 416) = &type metadata for String;
    *(_QWORD *)(v18 + 424) = v24;
    *(_QWORD *)(v18 + 392) = v46;
    *(_QWORD *)(v18 + 400) = v45;
    *(_QWORD *)(v18 + 456) = &type metadata for String;
    *(_QWORD *)(v18 + 464) = v24;
    *(_QWORD *)(v18 + 432) = v47;
    *(_QWORD *)(v18 + 440) = v48;
    *(_QWORD *)(v18 + 496) = &type metadata for String;
    *(_QWORD *)(v18 + 504) = v24;
    *(_QWORD *)(v18 + 472) = v49;
    *(_QWORD *)(v18 + 480) = v50;
    swift_bridgeObjectRetain(v45);
    swift_bridgeObjectRetain(v48);
    v51 = objc_msgSend(v19, "mainBundle", swift_bridgeObjectRetain(v50).n128_f64[0]);
    v70._object = (void *)0xE000000000000000;
    v52._countAndFlagsBits = 0x454D554C4F56;
    v52._object = (void *)0xE600000000000000;
    v53._countAndFlagsBits = 0;
    v53._object = (void *)0xE000000000000000;
    v70._countAndFlagsBits = 0;
    v54 = NSLocalizedString(_:tableName:bundle:value:comment:)(v52, (Swift::String_optional)0, (NSBundle)v51, v53, v70);

    *(_QWORD *)(v18 + 536) = &type metadata for String;
    *(_QWORD *)(v18 + 544) = v24;
    *(Swift::String *)(v18 + 512) = v54;
    v56 = v4[45];
    v55 = v4[46];
    v57 = v4[55];
    v58 = v4[56];
    *(_QWORD *)(v18 + 576) = &type metadata for String;
    *(_QWORD *)(v18 + 584) = v24;
    *(_QWORD *)(v18 + 552) = v56;
    *(_QWORD *)(v18 + 560) = v55;
    *(_QWORD *)(v18 + 616) = &type metadata for String;
    *(_QWORD *)(v18 + 624) = v24;
    *(_QWORD *)(v18 + 592) = v57;
    *(_QWORD *)(v18 + 600) = v58;
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRetain(v58);
    v59._countAndFlagsBits = String.init(format:_:)(0xD00000000000003BLL, 0x80000001003E4820, v18);
    object = v59._object;
    String.append(_:)(v59);
    swift_bridgeObjectRelease(object);
    v61 = objc_allocWithZone((Class)NSAttributedString);
    v62 = String._bridgeToObjectiveC()();
    v63 = objc_msgSend(v61, "initWithString:", v62, swift_bridgeObjectRelease(0xE100000000000000).n128_f64[0]);

    objc_msgSend(v3, "appendAttributedString:", v63);
  }
  return v3;
}

uint64_t sub_10019B440@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t countAndFlagsBits;
  void *object;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  id v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  _BYTE v33[848];
  _BYTE v34[848];
  _BYTE v35[848];
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;

  v4 = type metadata accessor for MeasurementHistoryItem(0);
  sub_10001F970((const void *)(a1 + *(int *)(v4 + 28)), v34);
  sub_10001F970(v34, v35);
  result = sub_10001F9AC((uint64_t)v35);
  if ((_DWORD)result == 2)
  {
    v6 = (_QWORD *)sub_10001F9B8((uint64_t)v35);
    sub_10001F970(v34, v33);
    v7 = (_QWORD *)sub_10001F9B8((uint64_t)v33);
    v8 = sub_10019B7E0(v7);
    switch(IndexPath.item.getter(v8))
    {
      case 0:
        v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v36._object = (void *)0xE000000000000000;
        v10._countAndFlagsBits = 0x454D554C4F56;
        v10._object = (void *)0xE600000000000000;
        v11._countAndFlagsBits = 0;
        v11._object = (void *)0xE000000000000000;
        v36._countAndFlagsBits = 0;
        v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v36);
        countAndFlagsBits = v12._countAndFlagsBits;
        object = v12._object;

        v16 = v6[45];
        v15 = v6[46];
        v18 = v6[50];
        v17 = v6[51];
        v20 = v6[55];
        v19 = v6[56];
        goto LABEL_9;
      case 1:
        v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v37._object = (void *)0xE000000000000000;
        v22._object = (void *)0x80000001003E48A0;
        v22._countAndFlagsBits = 0xD000000000000010;
        v23._countAndFlagsBits = 0;
        v23._object = (void *)0xE000000000000000;
        v37._countAndFlagsBits = 0;
        v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v37);
        countAndFlagsBits = v24._countAndFlagsBits;
        object = v24._object;

        v16 = v6[60];
        v15 = v6[61];
        v18 = v6[65];
        v17 = v6[66];
        v20 = v6[70];
        v19 = v6[71];
        goto LABEL_9;
      case 2:
        v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v26._countAndFlagsBits = 0xD000000000000016;
        v38._object = (void *)0xE000000000000000;
        v26._object = (void *)0x80000001003E4880;
        v27._countAndFlagsBits = 0;
        v27._object = (void *)0xE000000000000000;
        v38._countAndFlagsBits = 0;
        v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v38);
        countAndFlagsBits = v28._countAndFlagsBits;
        object = v28._object;

        v16 = v6[75];
        v15 = v6[76];
        v18 = v6[80];
        v17 = v6[81];
        v20 = v6[85];
        v19 = v6[86];
        goto LABEL_9;
      case 3:
        v29 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v30._countAndFlagsBits = 0xD000000000000017;
        v39._object = (void *)0xE000000000000000;
        v30._object = (void *)0x80000001003E4860;
        v31._countAndFlagsBits = 0;
        v31._object = (void *)0xE000000000000000;
        v39._countAndFlagsBits = 0;
        v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v39);
        countAndFlagsBits = v32._countAndFlagsBits;
        object = v32._object;

        v16 = v6[90];
        v15 = v6[91];
        v18 = v6[95];
        v17 = v6[96];
        v20 = v6[100];
        v19 = v6[101];
LABEL_9:
        swift_bridgeObjectRetain(v15);
        swift_bridgeObjectRetain(v17);
        swift_bridgeObjectRetain(v19);
        result = sub_100020C50((uint64_t)v34);
        break;
      default:
        result = sub_100020C50((uint64_t)v34);
        countAndFlagsBits = 0;
        v16 = 0;
        v18 = 0;
        v20 = 0;
        object = (void *)0xE000000000000000;
        v15 = 0xE000000000000000;
        v17 = 0xE000000000000000;
        v19 = 0xE000000000000000;
        break;
    }
  }
  else
  {
    v19 = 0xE800000000000000;
    v20 = 0x7374696E75627573;
    v17 = 0xE700000000000000;
    v18 = 0x65736963657270;
    v15 = 0xEA00000000007374;
    v16 = 0x696E75206E69616DLL;
    object = (void *)0xE500000000000000;
    countAndFlagsBits = 0x656C746954;
  }
  *a2 = countAndFlagsBits;
  a2[1] = (uint64_t)object;
  a2[2] = v16;
  a2[3] = v15;
  a2[4] = 0;
  a2[5] = 0;
  a2[6] = v18;
  a2[7] = v17;
  a2[8] = 0;
  a2[9] = 0;
  a2[10] = v20;
  a2[11] = v19;
  a2[12] = 0;
  a2[13] = 0;
  return result;
}

_QWORD *sub_10019B7E0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[6];
  v5 = a1[8];
  v6 = a1[11];
  v7 = a1[13];
  v8 = a1[16];
  v9 = a1[18];
  v10 = a1[21];
  v12 = a1[23];
  v13 = a1[26];
  v14 = a1[28];
  v15 = a1[31];
  v16 = a1[33];
  v17 = a1[36];
  v18 = a1[38];
  v19 = a1[41];
  v20 = a1[43];
  v21 = a1[46];
  v22 = a1[48];
  v23 = a1[51];
  v24 = a1[53];
  v25 = a1[56];
  v26 = a1[58];
  v27 = a1[61];
  v28 = a1[63];
  v29 = a1[66];
  v30 = a1[68];
  v31 = a1[71];
  v32 = a1[73];
  v33 = a1[76];
  v34 = a1[78];
  v35 = a1[81];
  v36 = a1[83];
  v37 = a1[86];
  v38 = a1[88];
  v39 = a1[91];
  v40 = a1[93];
  v41 = a1[96];
  v42 = a1[98];
  v43 = a1[101];
  swift_bridgeObjectRetain(a1[103]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRetain(v43);
  return a1;
}

_QWORD *sub_10019BA60(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v22 = a1[1];
  v23 = a1[3];
  v20 = a1[11];
  v21 = a1[6];
  v24 = a1[8];
  v25 = a1[13];
  v18 = a1[21];
  v19 = a1[16];
  v26 = a1[18];
  v27 = a1[23];
  v16 = a1[31];
  v17 = a1[26];
  v28 = a1[28];
  v29 = a1[33];
  v14 = a1[41];
  v15 = a1[36];
  v30 = a1[38];
  v31 = a1[43];
  v12 = a1[51];
  v13 = a1[46];
  v32 = a1[48];
  v33 = a1[53];
  v2 = a1[56];
  v3 = a1[61];
  v34 = a1[58];
  v35 = a1[63];
  v4 = a1[66];
  v5 = a1[71];
  v36 = a1[68];
  v37 = a1[73];
  v6 = a1[76];
  v7 = a1[81];
  v38 = a1[78];
  v39 = a1[83];
  v8 = a1[86];
  v9 = a1[91];
  v40 = a1[88];
  v41 = a1[93];
  v10 = a1[96];
  v42 = a1[98];
  v43 = a1[103];
  swift_bridgeObjectRelease(a1[101]);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v43);
  return a1;
}

void sub_10019BCDC()
{
  char *v0;
  char *v1;
  char *v2;
  id v3;
  id v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_fullContentHeight] = 0;
  v2 = &v0[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_numberOfRowsChangedCallback];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_minContentViewHeight] = 0x407AA00000000000;
  v3 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  LOBYTE(v3) = UIContentSizeCategory.isAccessibilityCategory.getter(v4);
  v5 = 88.0;
  if ((v3 & 1) != 0)
    v5 = 222.0;
  *(double *)&v1[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_tableRowHeight] = v5;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_numberOfRows] = 4;
  v6 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_sketchView;
  v7 = type metadata accessor for SketchObject();
  *(_QWORD *)&v1[v6] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7)), "init");
  v8 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_labelStrip;
  v9 = type metadata accessor for ObjectLabelStrip();
  *(_QWORD *)&v1[v8] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)), "init");
  v10 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_tableView;
  *(_QWORD *)&v1[v10] = objc_msgSend(objc_allocWithZone((Class)UITableView), "init");
  v11 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial__historyState;
  v12 = sub_10000EDC8(&qword_100486270);
  KeyPath = swift_getKeyPath(&unk_1003BB448);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v14 = qword_1004AF890;
  v15 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 272);
  v16 = swift_retain();
  *(_QWORD *)&v1[v11] = v15(KeyPath, v14, v16);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003D8190, "Measure/ObjectPlatterSpatial.swift", 34, 2, 141, 0);
  __break(1u);
}

id sub_10019BEDC(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100488FF8, a2);
}

uint64_t sub_10019BEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100488FF8, a3);
}

id sub_10019BF10(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489000, a2);
}

uint64_t sub_10019BF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489000, a3);
}

id sub_10019BF44(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489008, a2);
}

uint64_t sub_10019BF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489008, a3);
}

id sub_10019BF78(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489010, a2);
}

uint64_t sub_10019BF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489010, a3);
}

id sub_10019BFAC(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489018, a2);
}

uint64_t sub_10019BFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489018, a3);
}

id sub_10019BFE0(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489020, a2);
}

uint64_t sub_10019C000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489020, a3);
}

id sub_10019C014(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489028, a2);
}

uint64_t sub_10019C034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489028, a3);
}

id sub_10019C048(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489030, a2);
}

uint64_t sub_10019C068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489030, a3);
}

id sub_10019C07C(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489038, a2);
}

uint64_t sub_10019C09C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489038, a3);
}

id sub_10019C0B0(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489040, a2);
}

uint64_t sub_10019C0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489040, a3);
}

id sub_10019C0E4(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489048, a2);
}

uint64_t sub_10019C104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489048, a3);
}

id sub_10019C118(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489050, a2);
}

uint64_t sub_10019C138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489050, a3);
}

id sub_10019C14C(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489058, a2);
}

uint64_t sub_10019C16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489058, a3);
}

id sub_10019C180(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489060, a2);
}

uint64_t sub_10019C1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489060, a3);
}

uint64_t sub_10019C1B4(uint64_t a1, uint64_t a2)
{
  return swift_unknownObjectWeakLoadStrong(a1 + qword_100489068, a2);
}

uint64_t sub_10019C1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489068, a3);
}

id sub_10019C1D8(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489070, a2);
}

uint64_t sub_10019C1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489070, a3);
}

Class sub_10019C20C(uint64_t a1)
{
  uint64_t v1;
  NSArray v2;

  v1 = *(_QWORD *)(a1 + qword_100489078);
  if (v1)
  {
    sub_100018148(0, (unint64_t *)&qword_100481BC0, UIView_ptr);
    swift_bridgeObjectRetain(v1);
    v2.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v2.super.isa = 0;
  }
  return v2.super.isa;
}

double sub_10019C278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  if (a3)
  {
    v5 = sub_100018148(0, (unint64_t *)&qword_100481BC0, UIView_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v5);
  }
  else
  {
    v6 = 0;
  }
  v7 = *(_QWORD *)(a1 + qword_100489078);
  *(_QWORD *)(a1 + qword_100489078) = v6;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

id sub_10019C2DC(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489088, a2);
}

uint64_t sub_10019C2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489088, a3);
}

id sub_10019C310(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_100489090, a2);
}

uint64_t sub_10019C330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489090, a3);
}

uint64_t sub_10019C344(uint64_t a1, uint64_t a2)
{
  return swift_unknownObjectWeakLoadStrong(a1 + qword_100489098, a2);
}

uint64_t sub_10019C354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_100489098, a3);
}

id sub_10019C368(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_1004890A0, a2);
}

uint64_t sub_10019C388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_1004890A0, a3);
}

id sub_10019C39C(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_1004890A8, a2);
}

uint64_t sub_10019C3BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_1004890A8, a3);
}

id sub_10019C3D0(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_1004890B0, a2);
}

uint64_t sub_10019C3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_1004890B0, a3);
}

id sub_10019C404(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_1004890B8, a2);
}

uint64_t sub_10019C424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_1004890B8, a3);
}

id sub_10019C438(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_1004890C0, a2);
}

uint64_t sub_10019C458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_1004890C0, a3);
}

id sub_10019C46C(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_1004890C8, a2);
}

uint64_t sub_10019C48C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_1004890C8, a3);
}

id sub_10019C4A0(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_1004890D0, a2);
}

uint64_t sub_10019C4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_1004890D0, a3);
}

id sub_10019C4D4(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_1004890D8, a2);
}

uint64_t sub_10019C4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_1004890D8, a3);
}

id sub_10019C508(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_1004890E0, a2);
}

uint64_t sub_10019C528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_1004890E0, a3);
}

id sub_10019C53C(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_1004890E8, a2);
}

uint64_t sub_10019C55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_1004890E8, a3);
}

id sub_10019C570(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_1004890F0, a2);
}

uint64_t sub_10019C590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_1004890F0, a3);
}

void sub_10019C5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t Strong;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSString v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSString v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSString v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  id v82;
  Swift::String v83;
  Swift::String v84;
  Swift::String v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSString v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSString v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  void *v101;
  void *v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  NSString v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  NSString v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  id v119;
  Swift::String v120;
  Swift::String v121;
  Swift::String v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  NSString v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  NSString v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  id v135;
  Swift::String v136;
  Swift::String v137;
  Swift::String v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  NSString v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  void *v148;
  void *v149;
  double v150;
  CGFloat v151;
  double v152;
  CGFloat v153;
  double v154;
  CGFloat v155;
  double v156;
  CGFloat v157;
  double Width;
  uint64_t v159;
  void *v160;
  void *v161;
  double v162;
  CGFloat v163;
  double v164;
  CGFloat v165;
  double v166;
  CGFloat v167;
  double v168;
  CGFloat v169;
  double Height;
  uint64_t v171;
  void *v172;
  void *v173;
  id v174;
  double v175;
  double v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  void *v181;
  void *v182;
  double v183;
  CGFloat v184;
  double v185;
  CGFloat v186;
  double v187;
  CGFloat v188;
  double v189;
  CGFloat v190;
  double v191;
  uint64_t v192;
  void *v193;
  void *v194;
  id v195;
  double v196;
  double v197;
  uint64_t v198;
  uint64_t v199;
  void *v200;
  void *v201;
  void *v202;
  id v203;
  uint64_t v204;
  uint64_t v205;
  void *v206;
  void *v207;
  void *v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void *v213;
  uint64_t v214;
  void *v215;
  void *v216;
  double v217;
  double v218;
  uint64_t v219;
  uint64_t v220;
  void *v221;
  void *v222;
  double v223;
  double v224;
  uint64_t v225;
  void *v226;
  void *v227;
  double v228;
  double v229;
  double v230;
  double v231;
  double v232;
  double v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  void *v237;
  void *v238;
  void *v239;
  double v240;
  double v241;
  uint64_t v242;
  void *v243;
  void *v244;
  double v245;
  double v246;
  uint64_t v247;
  void *v248;
  void *v249;
  double v250;
  double v251;
  double v252;
  double v253;
  double v254;
  double v255;
  void *v256;
  void *v257;
  id v258;
  uint64_t v259;
  void *v260;
  void *v261;
  uint64_t v262;
  void *v263;
  void *v264;
  uint64_t v265;
  void *v266;
  void *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  void *v271;
  void *v272;
  void *v273;
  double v274;
  double v275;
  uint64_t v276;
  void *v277;
  void *v278;
  id v279;
  double v280;
  double v281;
  double v282;
  uint64_t v283;
  uint64_t v284;
  void *v285;
  void *v286;
  double v287;
  double v288;
  uint64_t v289;
  void *v290;
  void *v291;
  id v292;
  double v293;
  double v294;
  double v295;
  uint64_t v304;
  void *v305;
  void *v306;
  uint64_t v307;
  void *v308;
  Swift::String v309;
  Swift::String v310;
  Swift::String v311;
  Swift::String v312;
  CGRect v313;
  CGRect v314;
  CGRect v315;

  v33 = (_QWORD *)(v32 + qword_1004890F8);
  v34 = *(_QWORD *)(v32 + qword_1004890F8 + 8);
  *v33 = a1;
  v33[1] = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v34);
  v35 = (_QWORD *)(v32 + qword_100489100);
  v36 = *(_QWORD *)(v32 + qword_100489100 + 8);
  *v35 = a9;
  v35[1] = a10;
  swift_bridgeObjectRetain(a10);
  swift_bridgeObjectRelease(v36);
  v37 = (_QWORD *)(v32 + qword_100489108);
  v38 = *(_QWORD *)(v32 + qword_100489108 + 8);
  *v37 = a17;
  v37[1] = a18;
  swift_bridgeObjectRetain(a18);
  swift_bridgeObjectRelease(v38);
  v39 = (_QWORD *)(v32 + qword_100489110);
  v40 = *(_QWORD *)(v32 + qword_100489110 + 8);
  *v39 = a25;
  v39[1] = a26;
  swift_bridgeObjectRetain(a26);
  swift_bridgeObjectRelease(v40);
  v41 = v32 + qword_100489020;
  Strong = swift_unknownObjectWeakLoadStrong(v32 + qword_100489020, v42);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_48;
  }
  v44 = (void *)Strong;
  v307 = sub_10000EDC8((uint64_t *)&unk_10048A100);
  v45 = swift_allocObject(v307, 112, 7);
  *(_OWORD *)(v45 + 16) = xmmword_1003B0F60;
  *(_QWORD *)(v45 + 56) = &type metadata for String;
  v46 = sub_100018B34();
  *(_QWORD *)(v45 + 32) = a9;
  *(_QWORD *)(v45 + 40) = a10;
  *(_QWORD *)(v45 + 96) = &type metadata for String;
  *(_QWORD *)(v45 + 104) = v46;
  *(_QWORD *)(v45 + 64) = v46;
  *(_QWORD *)(v45 + 72) = a17;
  *(_QWORD *)(v45 + 80) = a18;
  swift_bridgeObjectRetain(a10);
  swift_bridgeObjectRetain(a18);
  String.init(format:_:)(0x40252097C3204025, 0xA800000000000000, v45);
  v48 = v47;
  v49 = String._bridgeToObjectiveC()();
  objc_msgSend(v44, "setText:", v49, swift_bridgeObjectRelease(v48).n128_f64[0]);

  v50 = v32 + qword_100489028;
  v52 = swift_unknownObjectWeakLoadStrong(v32 + qword_100489028, v51);
  if (!v52)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v53 = (void *)v52;
  v305 = (void *)objc_opt_self(UIFont);
  v54 = objc_msgSend(v305, "systemFontOfSize:weight:", 60.0, UIFontWeightRegular);
  objc_msgSend(v53, "setFont:", v54);

  v56 = swift_unknownObjectWeakLoadStrong(v41, v55);
  if (!v56)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v57 = (void *)v56;
  v306 = (void *)objc_opt_self(NSBundle);
  v58 = objc_msgSend(v306, "mainBundle");
  v309._object = (void *)0x80000001003DFC50;
  v59._countAndFlagsBits = 0x4025207962204025;
  v59._object = (void *)0xE800000000000000;
  v60._countAndFlagsBits = 0;
  v60._object = (void *)0xE000000000000000;
  v309._countAndFlagsBits = 0xD00000000000009DLL;
  v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v59, (Swift::String_optional)0, (NSBundle)v58, v60, v309);

  v62 = swift_allocObject(v307, 112, 7);
  *(_OWORD *)(v62 + 16) = xmmword_1003B0F60;
  *(_QWORD *)(v62 + 56) = &type metadata for String;
  *(_QWORD *)(v62 + 64) = v46;
  *(_QWORD *)(v62 + 32) = a11;
  *(_QWORD *)(v62 + 40) = a12;
  *(_QWORD *)(v62 + 96) = &type metadata for String;
  *(_QWORD *)(v62 + 104) = v46;
  *(_QWORD *)(v62 + 72) = a19;
  *(_QWORD *)(v62 + 80) = a20;
  swift_bridgeObjectRetain(a12);
  swift_bridgeObjectRetain(a20);
  static String.localizedStringWithFormat(_:_:)(v61._countAndFlagsBits, v61._object, v62);
  v64 = v63;
  swift_bridgeObjectRelease(v61._object);
  swift_bridgeObjectRelease(v62);
  v65 = String._bridgeToObjectiveC()();
  objc_msgSend(v57, "setAccessibilityLabel:", v65, swift_bridgeObjectRelease(v64).n128_f64[0]);

  v67 = swift_unknownObjectWeakLoadStrong(v50, v66);
  if (!v67)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v68 = (void *)v67;
  v69 = swift_allocObject(v307, 112, 7);
  *(_OWORD *)(v69 + 16) = xmmword_1003B0F60;
  *(_QWORD *)(v69 + 56) = &type metadata for String;
  *(_QWORD *)(v69 + 64) = v46;
  *(_QWORD *)(v69 + 32) = a13;
  *(_QWORD *)(v69 + 40) = a14;
  *(_QWORD *)(v69 + 96) = &type metadata for String;
  *(_QWORD *)(v69 + 104) = v46;
  *(_QWORD *)(v69 + 72) = a21;
  *(_QWORD *)(v69 + 80) = a22;
  swift_bridgeObjectRetain(a14);
  swift_bridgeObjectRetain(a22);
  String.init(format:_:)(0x40252097C3204025, 0xA800000000000000, v69);
  v71 = v70;
  v72 = String._bridgeToObjectiveC()();
  objc_msgSend(v68, "setText:", v72, swift_bridgeObjectRelease(v71).n128_f64[0]);

  v74 = swift_unknownObjectWeakLoadStrong(v50, v73);
  if (!v74)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v75 = (void *)v74;
  sub_100197EC8();
  v77 = v76;
  v78 = objc_msgSend(v305, "fontWithDescriptor:size:", v76, 0.0);

  objc_msgSend(v75, "setFont:", v78);
  v80 = swift_unknownObjectWeakLoadStrong(v50, v79);
  if (!v80)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v81 = (void *)v80;
  v82 = objc_msgSend(v306, "mainBundle");
  v310._object = (void *)0x80000001003DFC50;
  v83._countAndFlagsBits = 0x4025207962204025;
  v83._object = (void *)0xE800000000000000;
  v84._countAndFlagsBits = 0;
  v84._object = (void *)0xE000000000000000;
  v310._countAndFlagsBits = 0xD00000000000009DLL;
  v85 = NSLocalizedString(_:tableName:bundle:value:comment:)(v83, (Swift::String_optional)0, (NSBundle)v82, v84, v310);

  v86 = swift_allocObject(v307, 112, 7);
  *(_OWORD *)(v86 + 16) = xmmword_1003B0F60;
  *(_QWORD *)(v86 + 56) = &type metadata for String;
  *(_QWORD *)(v86 + 64) = v46;
  *(_QWORD *)(v86 + 32) = a15;
  *(_QWORD *)(v86 + 40) = a16;
  *(_QWORD *)(v86 + 96) = &type metadata for String;
  *(_QWORD *)(v86 + 104) = v46;
  *(_QWORD *)(v86 + 72) = a23;
  *(_QWORD *)(v86 + 80) = a24;
  swift_bridgeObjectRetain(a16);
  swift_bridgeObjectRetain(a24);
  static String.localizedStringWithFormat(_:_:)(v85._countAndFlagsBits, v85._object, v86);
  v88 = v87;
  swift_bridgeObjectRelease(v85._object);
  swift_bridgeObjectRelease(v86);
  v89 = String._bridgeToObjectiveC()();
  objc_msgSend(v81, "setAccessibilityLabel:", v89, swift_bridgeObjectRelease(v88).n128_f64[0]);

  v90 = v32 + qword_100489030;
  v92 = swift_unknownObjectWeakLoadStrong(v32 + qword_100489030, v91);
  if (!v92)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v93 = (void *)v92;
  v94 = swift_allocObject(v307, 112, 7);
  *(_OWORD *)(v94 + 16) = xmmword_1003B0F60;
  *(_QWORD *)(v94 + 56) = &type metadata for String;
  *(_QWORD *)(v94 + 64) = v46;
  *(_QWORD *)(v94 + 32) = a1;
  *(_QWORD *)(v94 + 40) = a2;
  *(_QWORD *)(v94 + 96) = &type metadata for String;
  *(_QWORD *)(v94 + 104) = v46;
  *(_QWORD *)(v94 + 72) = a5;
  *(_QWORD *)(v94 + 80) = a6;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a6);
  String.init(format:_:)(0x40250A4025, 0xE500000000000000, v94);
  v96 = v95;
  v97 = String._bridgeToObjectiveC()();
  objc_msgSend(v93, "setText:", v97, swift_bridgeObjectRelease(v96).n128_f64[0]);

  v99 = swift_unknownObjectWeakLoadStrong(v90, v98);
  if (!v99)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v100 = (void *)v99;
  sub_100197EC8();
  v102 = v101;
  v103 = objc_msgSend(v305, "fontWithDescriptor:size:", v101, 0.0);

  objc_msgSend(v100, "setFont:", v103);
  v105 = swift_unknownObjectWeakLoadStrong(v90, v104);
  if (!v105)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v106 = (void *)v105;
  v107 = swift_allocObject(v307, 112, 7);
  *(_OWORD *)(v107 + 16) = xmmword_1003B0F60;
  *(_QWORD *)(v107 + 56) = &type metadata for String;
  *(_QWORD *)(v107 + 64) = v46;
  *(_QWORD *)(v107 + 32) = a3;
  *(_QWORD *)(v107 + 40) = a4;
  *(_QWORD *)(v107 + 96) = &type metadata for String;
  *(_QWORD *)(v107 + 104) = v46;
  *(_QWORD *)(v107 + 72) = a7;
  *(_QWORD *)(v107 + 80) = a8;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a8);
  String.init(format:_:)(0x40250A4025, 0xE500000000000000, v107);
  v109 = v108;
  v110 = String._bridgeToObjectiveC()();
  objc_msgSend(v106, "setAccessibilityLabel:", v110, swift_bridgeObjectRelease(v109).n128_f64[0]);

  v111 = v32 + qword_100489038;
  v113 = swift_unknownObjectWeakLoadStrong(v32 + qword_100489038, v112);
  if (!v113)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v114 = (void *)v113;
  v304 = v90;
  v115 = String._bridgeToObjectiveC()();
  objc_msgSend(v114, "setText:", v115);

  v117 = swift_unknownObjectWeakLoadStrong(v111, v116);
  if (!v117)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v118 = (void *)v117;
  v119 = objc_msgSend(v306, "mainBundle");
  v311._object = (void *)0x80000001003DFC50;
  v120._object = (void *)0x80000001003E5170;
  v120._countAndFlagsBits = 0xD000000000000013;
  v121._countAndFlagsBits = 0;
  v121._object = (void *)0xE000000000000000;
  v311._countAndFlagsBits = 0xD00000000000009DLL;
  v122 = NSLocalizedString(_:tableName:bundle:value:comment:)(v120, (Swift::String_optional)0, (NSBundle)v119, v121, v311);

  v123 = swift_allocObject(v307, 72, 7);
  *(_OWORD *)(v123 + 16) = xmmword_1003B0BD0;
  *(_QWORD *)(v123 + 56) = &type metadata for String;
  *(_QWORD *)(v123 + 64) = v46;
  *(_QWORD *)(v123 + 32) = a27;
  *(_QWORD *)(v123 + 40) = a28;
  swift_bridgeObjectRetain(a28);
  static String.localizedStringWithFormat(_:_:)(v122._countAndFlagsBits, v122._object, v123);
  v125 = v124;
  swift_bridgeObjectRelease(v122._object);
  swift_bridgeObjectRelease(v123);
  v126 = String._bridgeToObjectiveC()();
  objc_msgSend(v118, "setAccessibilityLabel:", v126, swift_bridgeObjectRelease(v125).n128_f64[0]);

  v127 = v32 + qword_100489048;
  v129 = swift_unknownObjectWeakLoadStrong(v32 + qword_100489048, v128);
  if (!v129)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v130 = (void *)v129;
  v131 = String._bridgeToObjectiveC()();
  objc_msgSend(v130, "setText:", v131);

  v133 = swift_unknownObjectWeakLoadStrong(v127, v132);
  if (!v133)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v134 = (void *)v133;
  v135 = objc_msgSend(v306, "mainBundle");
  v312._object = (void *)0x80000001003DFC50;
  v136._object = (void *)0x80000001003E5170;
  v136._countAndFlagsBits = 0xD000000000000013;
  v137._countAndFlagsBits = 0;
  v137._object = (void *)0xE000000000000000;
  v312._countAndFlagsBits = 0xD00000000000009DLL;
  v138 = NSLocalizedString(_:tableName:bundle:value:comment:)(v136, (Swift::String_optional)0, (NSBundle)v135, v137, v312);

  v139 = swift_allocObject(v307, 72, 7);
  *(_OWORD *)(v139 + 16) = xmmword_1003B0BD0;
  *(_QWORD *)(v139 + 56) = &type metadata for String;
  *(_QWORD *)(v139 + 64) = v46;
  *(_QWORD *)(v139 + 32) = a31;
  *(_QWORD *)(v139 + 40) = a32;
  swift_bridgeObjectRetain(a32);
  static String.localizedStringWithFormat(_:_:)(v138._countAndFlagsBits, v138._object, v139);
  v141 = v140;
  swift_bridgeObjectRelease(v138._object);
  swift_bridgeObjectRelease(v139);
  v142 = String._bridgeToObjectiveC()();
  objc_msgSend(v134, "setAccessibilityLabel:", v142, swift_bridgeObjectRelease(v141).n128_f64[0]);

  v144 = swift_unknownObjectWeakLoadStrong(v32 + qword_100489040, v143);
  if (!v144)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v146 = (void *)v144;
  v147 = v32 + qword_1004890C8;
  v148 = (void *)swift_unknownObjectWeakLoadStrong(v32 + qword_1004890C8, v145);
  if (!v148)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v149 = v148;
  objc_msgSend(v148, "bounds");
  v151 = v150;
  v153 = v152;
  v155 = v154;
  v157 = v156;

  v313.origin.x = v151;
  v313.origin.y = v153;
  v313.size.width = v155;
  v313.size.height = v157;
  Width = CGRectGetWidth(v313);
  v160 = (void *)swift_unknownObjectWeakLoadStrong(v147, v159);
  if (!v160)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  v161 = v160;
  objc_msgSend(v160, "bounds");
  v163 = v162;
  v165 = v164;
  v167 = v166;
  v169 = v168;

  v314.origin.x = v163;
  v314.origin.y = v165;
  v314.size.width = v167;
  v314.size.height = v169;
  Height = CGRectGetHeight(v314);
  v172 = (void *)swift_unknownObjectWeakLoadStrong(v111, v171);
  if (!v172)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v173 = v172;
  v174 = objc_msgSend(v172, "font");

  if (!v174)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  objc_msgSend(v174, "lineHeight");
  v176 = v175;

  objc_msgSend(v146, "setCenter:", Width * 0.5, Height - v176 * 0.5);
  v178 = swift_unknownObjectWeakLoadStrong(v32 + qword_100489050, v177);
  if (!v178)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  v180 = (void *)v178;
  v181 = (void *)swift_unknownObjectWeakLoadStrong(v32 + qword_1004890D0, v179);
  if (!v181)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  v182 = v181;
  objc_msgSend(v181, "bounds");
  v184 = v183;
  v186 = v185;
  v188 = v187;
  v190 = v189;

  v315.origin.x = v184;
  v315.origin.y = v186;
  v315.size.width = v188;
  v315.size.height = v190;
  v191 = CGRectGetWidth(v315);
  v193 = (void *)swift_unknownObjectWeakLoadStrong(v111, v192);
  if (!v193)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v194 = v193;
  v195 = objc_msgSend(v193, "font");

  if (!v195)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  objc_msgSend(v195, "lineHeight");
  v197 = v196;

  objc_msgSend(v180, "setCenter:", v191 * 0.5, v197 * 0.5);
  v199 = swift_unknownObjectWeakLoadStrong(v111, v198);
  if (!v199)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v200 = (void *)v199;
  sub_100197EC8();
  v202 = v201;
  v203 = objc_msgSend(v305, "fontWithDescriptor:size:", v201, 0.0);

  objc_msgSend(v200, "setFont:", v203);
  v205 = swift_unknownObjectWeakLoadStrong(v127, v204);
  if (!v205)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v206 = (void *)v205;
  sub_100197EC8();
  v208 = v207;
  v209 = objc_msgSend(v305, "fontWithDescriptor:size:", v207, 0.0);

  objc_msgSend(v206, "setFont:", v209);
  v211 = swift_unknownObjectWeakLoadStrong(v111, v210);
  if (!v211)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v213 = (void *)v211;
  v214 = v32 + qword_1004890D8;
  v215 = (void *)swift_unknownObjectWeakLoadStrong(v32 + qword_1004890D8, v212);
  if (!v215)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v216 = v215;
  objc_msgSend(v215, "bounds");
  v218 = v217;

  v219 = v32 + qword_1004890E0;
  v221 = (void *)swift_unknownObjectWeakLoadStrong(v32 + qword_1004890E0, v220);
  if (!v221)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v222 = v221;
  objc_msgSend(v221, "bounds");
  v224 = v223;

  v226 = (void *)swift_unknownObjectWeakLoadStrong(v214, v225);
  if (!v226)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v227 = v226;
  v228 = v218 - v224 + -24.0;
  objc_msgSend(v226, "bounds");
  v230 = v229;

  v231 = CGSize.init(_:_:)(v228, v230);
  sub_1001A06B4(v213, v231);
  v233 = v232;

  v235 = swift_unknownObjectWeakLoadStrong(v127, v234);
  if (!v235)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v237 = (void *)v235;
  v238 = (void *)swift_unknownObjectWeakLoadStrong(v214, v236);
  if (!v238)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v239 = v238;
  objc_msgSend(v238, "bounds");
  v241 = v240;

  v243 = (void *)swift_unknownObjectWeakLoadStrong(v219, v242);
  if (!v243)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v244 = v243;
  objc_msgSend(v243, "bounds");
  v246 = v245;

  v248 = (void *)swift_unknownObjectWeakLoadStrong(v214, v247);
  if (!v248)
  {
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  v249 = v248;
  v250 = v241 - v246 + -24.0;
  objc_msgSend(v248, "bounds");
  v252 = v251;

  v253 = CGSize.init(_:_:)(v250, v252);
  sub_1001A06B4(v237, v253);
  v255 = v254;

  if (v255 < v233)
    v233 = v255;
  sub_100197EC8();
  v257 = v256;
  v258 = objc_msgSend(v305, "fontWithDescriptor:size:", v256, v233);
  v260 = (void *)swift_unknownObjectWeakLoadStrong(v111, v259);
  if (!v260)
    goto LABEL_79;
  v261 = v260;
  objc_msgSend(v260, "setFont:", v258);

  v263 = (void *)swift_unknownObjectWeakLoadStrong(v127, v262);
  if (!v263)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  v264 = v263;
  objc_msgSend(v263, "setFont:", v258);

  v266 = (void *)swift_unknownObjectWeakLoadStrong(v304, v265);
  if (!v266)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v267 = v266;
  objc_msgSend(v266, "setFont:", v258);

  v269 = swift_unknownObjectWeakLoadStrong(v32 + qword_1004890A0, v268);
  if (!v269)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  v271 = (void *)v269;
  v272 = (void *)swift_unknownObjectWeakLoadStrong(v214, v270);
  if (!v272)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  v273 = v272;
  objc_msgSend(v272, "bounds");
  v275 = v274;

  v277 = (void *)swift_unknownObjectWeakLoadStrong(v111, v276);
  if (!v277)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  v278 = v277;
  v279 = objc_msgSend(v277, "font");

  if (!v279)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  v280 = v275 * 0.5;
  objc_msgSend(v279, "leading");
  v282 = v281;

  objc_msgSend(v271, "setConstant:", v280 - v282 * 0.5);
  v308 = (void *)swift_unknownObjectWeakLoadStrong(v32 + qword_1004890A8, v283);
  if (!v308)
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  v285 = (void *)swift_unknownObjectWeakLoadStrong(v214, v284);
  if (!v285)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  v286 = v285;
  objc_msgSend(v285, "bounds");
  v288 = v287;

  v290 = (void *)swift_unknownObjectWeakLoadStrong(v111, v289);
  if (!v290)
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  v291 = v290;
  v292 = objc_msgSend(v290, "font");

  if (v292)
  {
    v293 = v288 * 0.5;
    objc_msgSend(v292, "leading");
    v295 = v294;

    objc_msgSend(v308, "setConstant:", v293 - v295 * 0.5);
    return;
  }
LABEL_89:
  __break(1u);
}

uint64_t sub_10019D6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_unknownObjectWeakLoadStrong(v2 + qword_100489060, a2);
  if (!result)
    __break(1u);
  return result;
}

void sub_10019D6CC()
{
  char *v0;
  uint64_t v1;
  void *Strong;
  void *v3;

  objc_msgSend(v0, "setNeedsLayout");
  objc_msgSend(v0, "layoutIfNeeded");
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[qword_100489060], v1);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "bounds");

  }
  else
  {
    __break(1u);
  }
}

void sub_10019D75C()
{
  char *v0;
  void *v1;
  char *v2;
  NSString v3;
  id v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  char *v17;
  void *v18;
  void *v19;
  double v20;
  double v21;
  char *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  double v26;
  double v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  double v37;
  char v38;
  uint64_t v39;
  void *v40;
  void *v41;
  double v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  Swift::String v48;
  Swift::String v49;
  void *v50;
  NSString v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  char v56;
  uint64_t v57;
  void *v58;
  char v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t Strong;
  void *v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  void *v74;
  void *v75;
  id v76;
  double v77;
  double v78;
  uint64_t v79;
  void *v80;
  void *v81;
  uint64_t v82;
  id v83;
  NSString v84;
  id v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  void *v90;
  void *v91;
  void *v92;
  char v93;
  uint64_t v94;
  char v95;
  id v96;
  id v97;
  id v98;
  uint64_t v99;
  void *v100;
  void *v101;
  id v102;
  uint64_t v103;
  void *v104;
  void *v105;
  double v106;
  CGFloat v107;
  double v108;
  CGFloat v109;
  double v110;
  CGFloat v111;
  double v112;
  CGFloat v113;
  double Width;
  uint64_t v115;
  void *v116;
  void *v117;
  double v118;
  CGFloat v119;
  double v120;
  CGFloat v121;
  double v122;
  CGFloat v123;
  double v124;
  CGFloat v125;
  CGFloat Height;
  uint64_t v127;
  void *v128;
  void *v129;
  double v130;
  double v131;
  double v132;
  double v133;
  void *v134;
  id v135;
  uint64_t v136;
  void *v137;
  void *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  id v147;
  void *v148;
  char v149;
  uint64_t v150;
  char v151;
  id v152;
  id v153;
  id v154;
  uint64_t v155;
  void *v156;
  void *v157;
  id v158;
  double v159;
  double v160;
  uint64_t v161;
  void *v162;
  void *v163;
  id v164;
  double v165;
  double v166;
  uint64_t v167;
  void *v168;
  void *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  void *v174;
  void *v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  void *v180;
  void *v181;
  char v182;
  uint64_t v183;
  char v184;
  id v185;
  id v186;
  id v187;
  uint64_t v188;
  void *v189;
  void *v190;
  id v191;
  char *v192;
  double v193;
  double v194;
  uint64_t v195;
  void *v196;
  void *v197;
  id v198;
  double v199;
  double v200;
  uint64_t v201;
  void *v202;
  void *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  void *v207;
  void *v208;
  void *v209;
  id v210;
  uint64_t v211;
  uint64_t v212;
  void *v213;
  void *v214;
  void *v215;
  char v216;
  uint64_t v217;
  char v218;
  id v219;
  id v220;
  id v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  void *v226;
  void *v227;
  id v228;
  uint64_t v229;
  uint64_t v230;
  void *v231;
  void *v232;
  void *v233;
  char v234;
  uint64_t v235;
  char v236;
  id v237;
  id v238;
  id v239;
  uint64_t v240;
  void *v241;
  void *v242;
  uint64_t v243;
  void *v244;
  void *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  void *v249;
  void *v250;
  void *v251;
  id v252;
  uint64_t v253;
  uint64_t v254;
  void *v255;
  void *v256;
  void *v257;
  char v258;
  uint64_t v259;
  char v260;
  id v261;
  id v262;
  id v263;
  uint64_t v264;
  void *v265;
  void *v266;
  uint64_t v267;
  void *v268;
  void *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  void *v273;
  char *v274;
  void *v275;
  void *v276;
  double v277;
  double v278;
  uint64_t v279;
  void *v280;
  void *v281;
  id v282;
  double v283;
  double v284;
  double v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  void *v289;
  void *v290;
  void *v291;
  double v292;
  double v293;
  uint64_t v294;
  void *v295;
  void *v296;
  id v297;
  double v298;
  double v299;
  double v300;
  uint64_t v301;
  uint64_t v302;
  void *v303;
  void *v304;
  double v305;
  double v306;
  double v307;
  double v308;
  double v309;
  double v310;
  double v311;
  double v312;
  id v313;
  void *v314;
  id v315;
  uint64_t *v316;
  void *v317;
  uint64_t v318;
  void *v319;
  id v320;
  id v321;
  Swift::String v322;
  Swift::String v323;
  void *object;
  NSString v325;
  void *v326;
  uint64_t v327;
  id v328;
  void *v329;
  uint64_t v330;
  id v331;
  void *v332;
  id v333;
  void *v334;
  void *v335;
  void *v336;
  id v337;
  void *v338;
  void *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t *v342;
  char v343;
  uint64_t v344;
  uint64_t *v345;
  uint64_t v346;
  uint64_t v347;
  char v348;
  id v349;
  uint64_t v350;
  id v351;
  id v352;
  id v353;
  void *v354;
  id v355;
  id v356;
  void *v357;
  id v358;
  void *v359;
  void *v360;
  char *v361;
  id v362;
  id v363;
  char *v364;
  id v365;
  uint64_t v366;
  _BYTE v367[40];
  Swift::String v368;
  Swift::String v369;
  CGRect v370;
  CGRect v371;
  CGRect v372;

  v2 = v0;
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UINib), "nibWithNibName:bundle:", v3, 0);

  v5 = objc_msgSend(v4, "instantiateWithOwner:options:", v2, 0);
  v6 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, (char *)&type metadata for Any + 8);

  if (!v6[2])
  {
    __break(1u);
LABEL_144:
    swift_once(&qword_10047B120, sub_100197B60);
LABEL_19:
    v54 = (void *)qword_1004AFCA0;
    v55 = *(void **)algn_1004AFCA8;
    if ((byte_1004AFCB0 & 1) != 0)
    {
      v56 = byte_1004AFCC0;
      v57 = qword_1004AFCB8;
      v58 = v1;
      v59 = byte_10048A2A0;
      v60 = (id)qword_1004AFCA0;
      LOBYTE(v60) = v59;
      v1 = v58;
      v61 = sub_100070DBC((char)v60, v57, v56);
      sub_100021580(v54, v55, 1);
    }
    else
    {
      if ((byte_10048A2A0 & 1) != 0)
        v62 = *(id *)algn_1004AFCA8;
      else
        v62 = (id)qword_1004AFCA0;
      v61 = v62;
    }
    objc_msgSend(v6, "setTextColor:", v61);

    v63 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleHeadline);
    Strong = swift_unknownObjectWeakLoadStrong(v364, v64);
    if (Strong)
    {
      v66 = (void *)Strong;
      v67 = (void *)objc_opt_self(UIFont);
      v68 = objc_msgSend(v67, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
      v69 = objc_msgSend(v68, "fontDescriptor");

      v70 = objc_msgSend(v69, "fontDescriptorWithSymbolicTraits:", 2);
      if (v70)
      {
        v71 = objc_msgSend(v67, "fontWithDescriptor:size:", v70, 0.0);

        v72 = objc_msgSend(v63, "scaledFontForFont:maximumPointSize:", v71, 28.0);
        objc_msgSend(v66, "setFont:", v72);

        v74 = (void *)swift_unknownObjectWeakLoadStrong(v364, v73);
        if (v74)
        {
          v75 = v74;
          v76 = objc_msgSend(v74, "font");

          if (v76)
          {
            objc_msgSend(v76, "descender");
            v78 = v77;

            v80 = (void *)swift_unknownObjectWeakLoadStrong(&v2[qword_1004890C0], v79);
            if (v80)
            {
              v81 = v80;
              objc_msgSend(v80, "setConstant:", v78);

              v82 = type metadata accessor for ViewController(0);
              v83 = objc_msgSend(v1, "bundleForClass:", swift_getObjCClassFromMetadata(v82));
              v84 = String._bridgeToObjectiveC()();
              v85 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:compatibleWithTraitCollection:", v84, v83, 0);

              if (v85)
              {
                v87 = objc_msgSend(v85, "imageWithRenderingMode:", 2);

              }
              else
              {
                v87 = 0;
              }
              v356 = v1;
              v88 = &v2[qword_100489008];
              v89 = swift_unknownObjectWeakLoadStrong(&v2[qword_100489008], v86);
              if (v89)
              {
                v90 = (void *)v89;
                v91 = (void *)qword_1004AFCA0;
                v92 = *(void **)algn_1004AFCA8;
                v360 = v63;
                v361 = v2;
                if ((byte_1004AFCB0 & 1) != 0)
                {
                  v93 = byte_1004AFCC0;
                  v94 = qword_1004AFCB8;
                  v95 = byte_10048A2A0;
                  v96 = (id)qword_1004AFCA0;
                  LOBYTE(v96) = v95;
                  v2 = v361;
                  v97 = sub_100070DBC((char)v96, v94, v93);
                  sub_100021580(v91, v92, 1);
                }
                else
                {
                  if ((byte_10048A2A0 & 1) != 0)
                    v98 = *(id *)algn_1004AFCA8;
                  else
                    v98 = (id)qword_1004AFCA0;
                  v97 = v98;
                }
                objc_msgSend(v90, "setTintColor:", v97);

                v100 = (void *)swift_unknownObjectWeakLoadStrong(v88, v99);
                if (v100)
                {
                  v101 = v100;
                  v359 = v87;
                  objc_msgSend(v100, "setImage:", v87);

                  v102 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
                  v104 = (void *)swift_unknownObjectWeakLoadStrong(v88, v103);
                  if (v104)
                  {
                    v105 = v104;
                    objc_msgSend(v104, "bounds");
                    v107 = v106;
                    v109 = v108;
                    v111 = v110;
                    v113 = v112;

                    v371.origin.x = v107;
                    v371.origin.y = v109;
                    v371.size.width = v111;
                    v371.size.height = v113;
                    Width = CGRectGetWidth(v371);
                    v116 = (void *)swift_unknownObjectWeakLoadStrong(v88, v115);
                    if (v116)
                    {
                      v117 = v116;
                      objc_msgSend(v116, "bounds");
                      v119 = v118;
                      v121 = v120;
                      v123 = v122;
                      v125 = v124;

                      v372.origin.x = v119;
                      v372.origin.y = v121;
                      v372.size.width = v123;
                      v372.size.height = v125;
                      Height = CGRectGetHeight(v372);
                      CGSize.init(_:_:)(Width + Width, Height + Height);
                      objc_msgSend(v102, "bounds");
                      objc_msgSend(v102, "setBounds:");
                      v128 = (void *)swift_unknownObjectWeakLoadStrong(v88, v127);
                      if (v128)
                      {
                        v129 = v128;
                        objc_msgSend(v128, "center");
                        v131 = v130;
                        v133 = v132;

                        objc_msgSend(v102, "setCenter:", v131, v133);
                        v134 = (void *)objc_opt_self(UIColor);
                        v135 = objc_msgSend(v134, "clearColor");
                        objc_msgSend(v102, "setBackgroundColor:", v135);

                        objc_msgSend(v102, "setUserInteractionEnabled:", 1);
                        v137 = (void *)swift_unknownObjectWeakLoadStrong(&v2[qword_100489058], v136);
                        if (v137)
                        {
                          v138 = v137;
                          objc_msgSend(v137, "addSubview:", v102);

                          v358 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v2, "close");
                          objc_msgSend(v102, "addGestureRecognizer:");
                          v139 = &v2[qword_100489020];
                          v141 = swift_unknownObjectWeakLoadStrong(&v2[qword_100489020], v140);
                          if (v141)
                          {
                            v142 = (void *)v141;
                            v143 = objc_msgSend(v67, "systemFontOfSize:weight:", 60.0, UIFontWeightRegular);
                            objc_msgSend(v142, "setFont:", v143);

                            v145 = swift_unknownObjectWeakLoadStrong(v139, v144);
                            if (v145)
                            {
                              v146 = (void *)v145;
                              v362 = v134;
                              if (qword_10047B118 != -1)
                                swift_once(&qword_10047B118, sub_100197B14);
                              v148 = (void *)qword_1004AFC78;
                              v147 = qword_1004AFC80;
                              v357 = v102;
                              if ((byte_1004AFC88 & 1) != 0)
                              {
                                v149 = byte_1004AFC98;
                                v150 = qword_1004AFC90;
                                v151 = byte_10048A2A0;
                                v152 = (id)qword_1004AFC78;
                                LOBYTE(v152) = v151;
                                v2 = v361;
                                v153 = sub_100070DBC((char)v152, v150, v149);
                                sub_100021580(v148, v147, 1);
                              }
                              else
                              {
                                if ((byte_10048A2A0 & 1) != 0)
                                  v154 = qword_1004AFC80;
                                else
                                  v154 = (id)qword_1004AFC78;
                                v153 = v154;
                              }
                              objc_msgSend(v146, "setTextColor:", v153);

                              v156 = (void *)swift_unknownObjectWeakLoadStrong(v139, v155);
                              if (v156)
                              {
                                v157 = v156;
                                v158 = objc_msgSend(v156, "font");

                                if (v158)
                                {
                                  objc_msgSend(v158, "descender");
                                  v160 = v159;

                                  v162 = (void *)swift_unknownObjectWeakLoadStrong(v139, v161);
                                  if (v162)
                                  {
                                    v163 = v162;
                                    v164 = objc_msgSend(v162, "font");

                                    if (v164)
                                    {
                                      objc_msgSend(v164, "leading");
                                      v166 = v165;

                                      v168 = (void *)swift_unknownObjectWeakLoadStrong(&v2[qword_1004890B0], v167);
                                      if (v168)
                                      {
                                        v169 = v168;
                                        objc_msgSend(v168, "setConstant:", v160 + v166);

                                        v170 = &v2[qword_100489028];
                                        v172 = swift_unknownObjectWeakLoadStrong(&v2[qword_100489028], v171);
                                        if (v172)
                                        {
                                          v173 = (void *)v172;
                                          sub_100197EC8();
                                          v175 = v174;
                                          v176 = objc_msgSend(v67, "fontWithDescriptor:size:", v174, 0.0);

                                          objc_msgSend(v173, "setFont:", v176);
                                          v178 = swift_unknownObjectWeakLoadStrong(v170, v177);
                                          if (v178)
                                          {
                                            v179 = (void *)v178;
                                            v181 = (void *)qword_1004AFCA0;
                                            v180 = *(void **)algn_1004AFCA8;
                                            if ((byte_1004AFCB0 & 1) != 0)
                                            {
                                              v182 = byte_1004AFCC0;
                                              v183 = qword_1004AFCB8;
                                              v184 = byte_10048A2A0;
                                              v185 = (id)qword_1004AFCA0;
                                              v186 = sub_100070DBC(v184, v183, v182);
                                              sub_100021580(v181, v180, 1);
                                            }
                                            else
                                            {
                                              if ((byte_10048A2A0 & 1) != 0)
                                                v187 = *(id *)algn_1004AFCA8;
                                              else
                                                v187 = (id)qword_1004AFCA0;
                                              v186 = v187;
                                            }
                                            objc_msgSend(v179, "setTextColor:", v186);

                                            v189 = (void *)swift_unknownObjectWeakLoadStrong(v170, v188);
                                            if (v189)
                                            {
                                              v190 = v189;
                                              v191 = objc_msgSend(v189, "font");

                                              v192 = v361;
                                              if (v191)
                                              {
                                                objc_msgSend(v191, "descender");
                                                v194 = v193;

                                                v196 = (void *)swift_unknownObjectWeakLoadStrong(v170, v195);
                                                if (v196)
                                                {
                                                  v197 = v196;
                                                  v198 = objc_msgSend(v196, "font");

                                                  if (v198)
                                                  {
                                                    objc_msgSend(v198, "leading");
                                                    v200 = v199;

                                                    v202 = (void *)swift_unknownObjectWeakLoadStrong(&v361[qword_1004890B8], v201);
                                                    if (v202)
                                                    {
                                                      v203 = v202;
                                                      objc_msgSend(v202, "setConstant:", v194 + v200);

                                                      v204 = &v361[qword_100489030];
                                                      v206 = swift_unknownObjectWeakLoadStrong(&v361[qword_100489030], v205);
                                                      if (v206)
                                                      {
                                                        v207 = (void *)v206;
                                                        sub_100197EC8();
                                                        v209 = v208;
                                                        v210 = objc_msgSend(v67, "fontWithDescriptor:size:", v208, 0.0);

                                                        objc_msgSend(v207, "setFont:", v210);
                                                        v212 = swift_unknownObjectWeakLoadStrong(v204, v211);
                                                        if (v212)
                                                        {
                                                          v213 = (void *)v212;
                                                          v215 = (void *)qword_1004AFCA0;
                                                          v214 = *(void **)algn_1004AFCA8;
                                                          if ((byte_1004AFCB0 & 1) != 0)
                                                          {
                                                            v216 = byte_1004AFCC0;
                                                            v217 = qword_1004AFCB8;
                                                            v218 = byte_10048A2A0;
                                                            v219 = (id)qword_1004AFCA0;
                                                            v220 = sub_100070DBC(v218, v217, v216);
                                                            sub_100021580(v215, v214, 1);
                                                          }
                                                          else
                                                          {
                                                            if ((byte_10048A2A0 & 1) != 0)
                                                              v221 = *(id *)algn_1004AFCA8;
                                                            else
                                                              v221 = (id)qword_1004AFCA0;
                                                            v220 = v221;
                                                          }
                                                          objc_msgSend(v213, "setTextColor:", v220);

                                                          v222 = &v361[qword_100489038];
                                                          v224 = swift_unknownObjectWeakLoadStrong(&v361[qword_100489038], v223);
                                                          if (v224)
                                                          {
                                                            v225 = (void *)v224;
                                                            sub_100197EC8();
                                                            v227 = v226;
                                                            v228 = objc_msgSend(v67, "fontWithDescriptor:size:", v226, 0.0);

                                                            objc_msgSend(v225, "setFont:", v228);
                                                            v230 = swift_unknownObjectWeakLoadStrong(v222, v229);
                                                            if (v230)
                                                            {
                                                              v231 = (void *)v230;
                                                              v233 = (void *)qword_1004AFCA0;
                                                              v232 = *(void **)algn_1004AFCA8;
                                                              if ((byte_1004AFCB0 & 1) != 0)
                                                              {
                                                                v234 = byte_1004AFCC0;
                                                                v235 = qword_1004AFCB8;
                                                                v236 = byte_10048A2A0;
                                                                v237 = (id)qword_1004AFCA0;
                                                                LOBYTE(v237) = v236;
                                                                v192 = v361;
                                                                v238 = sub_100070DBC((char)v237, v235, v234);
                                                                sub_100021580(v233, v232, 1);
                                                              }
                                                              else
                                                              {
                                                                if ((byte_10048A2A0 & 1) != 0)
                                                                  v239 = *(id *)algn_1004AFCA8;
                                                                else
                                                                  v239 = (id)qword_1004AFCA0;
                                                                v238 = v239;
                                                              }
                                                              objc_msgSend(v231, "setTextColor:", v238);

                                                              v241 = (void *)swift_unknownObjectWeakLoadStrong(v222, v240);
                                                              if (v241)
                                                              {
                                                                v242 = v241;
                                                                objc_msgSend(v241, "setAdjustsFontForContentSizeCategory:", 0);

                                                                v244 = (void *)swift_unknownObjectWeakLoadStrong(v222, v243);
                                                                if (v244)
                                                                {
                                                                  v245 = v244;
                                                                  objc_msgSend(v244, "setAdjustsFontSizeToFitWidth:", 0);

                                                                  v246 = &v192[qword_100489048];
                                                                  v248 = swift_unknownObjectWeakLoadStrong(&v192[qword_100489048], v247);
                                                                  if (v248)
                                                                  {
                                                                    v249 = (void *)v248;
                                                                    sub_100197EC8();
                                                                    v251 = v250;
                                                                    v252 = objc_msgSend(v67, "fontWithDescriptor:size:", v250, 0.0);

                                                                    objc_msgSend(v249, "setFont:", v252);
                                                                    v254 = swift_unknownObjectWeakLoadStrong(v246, v253);
                                                                    if (v254)
                                                                    {
                                                                      v255 = (void *)v254;
                                                                      v257 = (void *)qword_1004AFCA0;
                                                                      v256 = *(void **)algn_1004AFCA8;
                                                                      if ((byte_1004AFCB0 & 1) != 0)
                                                                      {
                                                                        v258 = byte_1004AFCC0;
                                                                        v259 = qword_1004AFCB8;
                                                                        v260 = byte_10048A2A0;
                                                                        v261 = (id)qword_1004AFCA0;
                                                                        LOBYTE(v261) = v260;
                                                                        v192 = v361;
                                                                        v262 = sub_100070DBC((char)v261, v259, v258);
                                                                        sub_100021580(v257, v256, 1);
                                                                      }
                                                                      else
                                                                      {
                                                                        if ((byte_10048A2A0 & 1) != 0)
                                                                          v263 = *(id *)algn_1004AFCA8;
                                                                        else
                                                                          v263 = (id)qword_1004AFCA0;
                                                                        v262 = v263;
                                                                      }
                                                                      objc_msgSend(v255, "setTextColor:", v262);

                                                                      v265 = (void *)swift_unknownObjectWeakLoadStrong(v246, v264);
                                                                      if (v265)
                                                                      {
                                                                        v266 = v265;
                                                                        objc_msgSend(v265, "setAdjustsFontForContentSizeCategory:", 0);

                                                                        v268 = (void *)swift_unknownObjectWeakLoadStrong(v246, v267);
                                                                        if (v268)
                                                                        {
                                                                          v269 = v268;
                                                                          objc_msgSend(v268, "setAdjustsFontSizeToFitWidth:", 0);

                                                                          v271 = swift_unknownObjectWeakLoadStrong(&v192[qword_1004890A0], v270);
                                                                          if (v271)
                                                                          {
                                                                            v273 = (void *)v271;
                                                                            v274 = &v192[qword_1004890D8];
                                                                            v275 = (void *)swift_unknownObjectWeakLoadStrong(&v192[qword_1004890D8], v272);
                                                                            if (v275)
                                                                            {
                                                                              v276 = v275;
                                                                              objc_msgSend(v275, "bounds");
                                                                              v278 = v277;

                                                                              v280 = (void *)swift_unknownObjectWeakLoadStrong(v222, v279);
                                                                              if (v280)
                                                                              {
                                                                                v281 = v280;
                                                                                v282 = objc_msgSend(v280, "font");

                                                                                if (v282)
                                                                                {
                                                                                  v283 = v278 * 0.5;
                                                                                  objc_msgSend(v282, "leading");
                                                                                  v285 = v284;

                                                                                  objc_msgSend(v273, "setConstant:", v283 - v285 * 0.5);
                                                                                  v287 = swift_unknownObjectWeakLoadStrong(&v192[qword_1004890A8], v286);
                                                                                  if (v287)
                                                                                  {
                                                                                    v289 = (void *)v287;
                                                                                    v290 = (void *)swift_unknownObjectWeakLoadStrong(v274, v288);
                                                                                    if (v290)
                                                                                    {
                                                                                      v291 = v290;
                                                                                      objc_msgSend(v290, "bounds");
                                                                                      v293 = v292;

                                                                                      v295 = (void *)swift_unknownObjectWeakLoadStrong(v222, v294);
                                                                                      if (v295)
                                                                                      {
                                                                                        v296 = v295;
                                                                                        v297 = objc_msgSend(v295, "font");

                                                                                        if (v297)
                                                                                        {
                                                                                          v298 = v293 * 0.5;
                                                                                          objc_msgSend(v297, "leading");
                                                                                          v300 = v299;

                                                                                          objc_msgSend(v289, "setConstant:", v298 - v300 * 0.5);
                                                                                          v301 = (uint64_t)&v192[qword_100489068];
                                                                                          v303 = (void *)swift_unknownObjectWeakLoadStrong(&v192[qword_100489068], v302);
                                                                                          if (v303)
                                                                                          {
                                                                                            v304 = v303;
                                                                                            objc_msgSend(v303, "bounds");
                                                                                            v306 = v305;
                                                                                            v308 = v307;
                                                                                            v310 = v309;
                                                                                            v312 = v311;

                                                                                            v313 = objc_msgSend(v362, "clearColor");
                                                                                            if (qword_10047AE28 != -1)
                                                                                              swift_once(&qword_10047AE28, sub_100195B18);
                                                                                            v314 = (void *)qword_1004AF910;
                                                                                            objc_allocWithZone((Class)type metadata accessor for ButtonWithCustomBackgroundColor());
                                                                                            v315 = sub_100038F30(v313, v314, v306, v308, v310, v312, 16.0);
                                                                                            v316 = (uint64_t *)qword_100489080;
                                                                                            v317 = *(void **)&v192[qword_100489080];
                                                                                            *(_QWORD *)&v192[qword_100489080] = v315;

                                                                                            v319 = *(void **)((char *)v316 + (_QWORD)v192);
                                                                                            if (!v319)
                                                                                              goto LABEL_124;
                                                                                            v320 = v319;
                                                                                            v321 = objc_msgSend(v356, "mainBundle");
                                                                                            v369._object = (void *)0xE000000000000000;
                                                                                            v322._object = (void *)0x80000001003DCC70;
                                                                                            v322._countAndFlagsBits = 0xD000000000000010;
                                                                                            v323._countAndFlagsBits = 0;
                                                                                            v323._object = (void *)0xE000000000000000;
                                                                                            v369._countAndFlagsBits = 0;
                                                                                            object = NSLocalizedString(_:tableName:bundle:value:comment:)(v322, (Swift::String_optional)0, (NSBundle)v321, v323, v369)._object;

                                                                                            v325 = String._bridgeToObjectiveC()();
                                                                                            objc_msgSend(v320, "setTitle:forState:", v325, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

                                                                                            v326 = *(void **)((char *)v316 + (_QWORD)v192);
                                                                                            if (!v326)
                                                                                              goto LABEL_124;
                                                                                            v327 = qword_10047AE18;
                                                                                            v328 = v326;
                                                                                            if (v327 != -1)
                                                                                              goto LABEL_151;
                                                                                            while (1)
                                                                                            {
                                                                                              objc_msgSend(v328, "setTitleColor:forState:", qword_1004AF900, 0);

                                                                                              v329 = *(void **)((char *)v316 + (_QWORD)v192);
                                                                                              if (v329)
                                                                                              {
                                                                                                v330 = qword_10047AE20;
                                                                                                v331 = v329;
                                                                                                if (v330 != -1)
                                                                                                  swift_once(&qword_10047AE20, sub_100195B04);
                                                                                                objc_msgSend(v331, "setTitleColor:forState:", qword_1004AF908, 1);

                                                                                                v332 = *(void **)((char *)v316 + (_QWORD)v192);
                                                                                                if (v332)
                                                                                                {
                                                                                                  v333 = objc_msgSend(v332, "titleLabel");
                                                                                                  if (v333)
                                                                                                  {
                                                                                                    v334 = v333;
                                                                                                    v335 = (void *)swift_unknownObjectWeakLoadStrong(v364, v318);
                                                                                                    if (!v335)
                                                                                                      goto LABEL_208;
                                                                                                    v336 = v335;
                                                                                                    v337 = objc_msgSend(v335, "font");

                                                                                                    objc_msgSend(v334, "setFont:", v337);
                                                                                                  }
                                                                                                  v338 = *(void **)((char *)v316 + (_QWORD)v192);
                                                                                                  if (v338)
                                                                                                    objc_msgSend(v338, "addTarget:action:forControlEvents:", v192, "copyMeasurement:", 64);
                                                                                                }
                                                                                              }
LABEL_124:
                                                                                              v339 = (void *)swift_unknownObjectWeakLoadStrong(v301, v318);
                                                                                              if (!v339)
                                                                                                goto LABEL_200;
                                                                                              if (!*(uint64_t *)((char *)v316 + (_QWORD)v192))
                                                                                                goto LABEL_201;
                                                                                              v328 = v339;
                                                                                              objc_msgSend(v339, "addSubview:");

                                                                                              v301 = *(_QWORD *)&v192[qword_100489078];
                                                                                              v316 = &OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
                                                                                              if (!v301)
                                                                                                goto LABEL_202;
                                                                                              if ((unint64_t)v301 >> 62)
                                                                                              {
                                                                                                if (v301 >= 0)
                                                                                                  v328 = (id)(v301 & 0xFFFFFFFFFFFFFF8);
                                                                                                else
                                                                                                  v328 = *(id *)&v192[qword_100489078];
                                                                                                swift_bridgeObjectRetain(*(_QWORD *)&v192[qword_100489078]);
                                                                                                v340 = _CocoaArrayWrapper.endIndex.getter(v328);
                                                                                                if (!v340)
                                                                                                  goto LABEL_149;
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                v340 = *(_QWORD *)((v301 & 0xFFFFFFFFFFFFFF8) + 0x10);
                                                                                                swift_bridgeObjectRetain(*(_QWORD *)&v192[qword_100489078]);
                                                                                                if (!v340)
                                                                                                  goto LABEL_149;
                                                                                              }
                                                                                              if (v340 >= 1)
                                                                                              {
                                                                                                v341 = 0;
                                                                                                v363 = (id)(v301 & 0xC000000000000001);
                                                                                                v342 = &qword_10047B000;
                                                                                                do
                                                                                                {
                                                                                                  if (v363)
                                                                                                    v352 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v341, v301);
                                                                                                  else
                                                                                                    v352 = *(id *)(v301 + 8 * v341 + 32);
                                                                                                  v365 = v352;
                                                                                                  if (v342[37] != -1)
                                                                                                    swift_once(&qword_10047B128, sub_100197BAC);
                                                                                                  v354 = (void *)qword_1004AFCC8;
                                                                                                  v353 = qword_1004AFCD0;
                                                                                                  if ((byte_1004AFCD8 & 1) != 0)
                                                                                                  {
                                                                                                    v343 = byte_1004AFCE8;
                                                                                                    v344 = v301;
                                                                                                    v345 = v342;
                                                                                                    v346 = v340;
                                                                                                    v347 = qword_1004AFCE0;
                                                                                                    v348 = byte_10048A2A0;
                                                                                                    v349 = (id)qword_1004AFCC8;
                                                                                                    LOBYTE(v349) = v348;
                                                                                                    v316 = &OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
                                                                                                    v350 = v347;
                                                                                                    v340 = v346;
                                                                                                    v342 = v345;
                                                                                                    v301 = v344;
                                                                                                    v351 = sub_100070DBC((char)v349, v350, v343);
                                                                                                    sub_100021580(v354, v353, 1);
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    if ((v316[84] & 1) != 0)
                                                                                                      v355 = qword_1004AFCD0;
                                                                                                    else
                                                                                                      v355 = (id)qword_1004AFCC8;
                                                                                                    v351 = v355;
                                                                                                  }
                                                                                                  ++v341;
                                                                                                  objc_msgSend(v365, "setBackgroundColor:", v351);

                                                                                                }
                                                                                                while (v340 != v341);
LABEL_149:
                                                                                                swift_bridgeObjectRelease(v301);
                                                                                                objc_msgSend(v361, "setAlpha:", 0.0);
                                                                                                sub_100096214();
                                                                                                sub_1000DCD40();

                                                                                                return;
                                                                                              }
                                                                                              __break(1u);
LABEL_151:
                                                                                              swift_once(&qword_10047AE18, sub_100195AF0);
                                                                                            }
                                                                                          }
LABEL_199:
                                                                                          __break(1u);
LABEL_200:
                                                                                          __break(1u);
LABEL_201:
                                                                                          __break(1u);
LABEL_202:
                                                                                          __break(1u);
                                                                                          goto LABEL_203;
                                                                                        }
LABEL_198:
                                                                                        __break(1u);
                                                                                        goto LABEL_199;
                                                                                      }
LABEL_197:
                                                                                      __break(1u);
                                                                                      goto LABEL_198;
                                                                                    }
LABEL_196:
                                                                                    __break(1u);
                                                                                    goto LABEL_197;
                                                                                  }
LABEL_195:
                                                                                  __break(1u);
                                                                                  goto LABEL_196;
                                                                                }
LABEL_194:
                                                                                __break(1u);
                                                                                goto LABEL_195;
                                                                              }
LABEL_193:
                                                                              __break(1u);
                                                                              goto LABEL_194;
                                                                            }
LABEL_192:
                                                                            __break(1u);
                                                                            goto LABEL_193;
                                                                          }
LABEL_191:
                                                                          __break(1u);
                                                                          goto LABEL_192;
                                                                        }
LABEL_190:
                                                                        __break(1u);
                                                                        goto LABEL_191;
                                                                      }
LABEL_189:
                                                                      __break(1u);
                                                                      goto LABEL_190;
                                                                    }
LABEL_188:
                                                                    __break(1u);
                                                                    goto LABEL_189;
                                                                  }
LABEL_187:
                                                                  __break(1u);
                                                                  goto LABEL_188;
                                                                }
LABEL_186:
                                                                __break(1u);
                                                                goto LABEL_187;
                                                              }
LABEL_185:
                                                              __break(1u);
                                                              goto LABEL_186;
                                                            }
LABEL_184:
                                                            __break(1u);
                                                            goto LABEL_185;
                                                          }
LABEL_183:
                                                          __break(1u);
                                                          goto LABEL_184;
                                                        }
LABEL_182:
                                                        __break(1u);
                                                        goto LABEL_183;
                                                      }
LABEL_181:
                                                      __break(1u);
                                                      goto LABEL_182;
                                                    }
LABEL_180:
                                                    __break(1u);
                                                    goto LABEL_181;
                                                  }
LABEL_179:
                                                  __break(1u);
                                                  goto LABEL_180;
                                                }
LABEL_178:
                                                __break(1u);
                                                goto LABEL_179;
                                              }
LABEL_177:
                                              __break(1u);
                                              goto LABEL_178;
                                            }
LABEL_176:
                                            __break(1u);
                                            goto LABEL_177;
                                          }
LABEL_175:
                                          __break(1u);
                                          goto LABEL_176;
                                        }
LABEL_174:
                                        __break(1u);
                                        goto LABEL_175;
                                      }
LABEL_173:
                                      __break(1u);
                                      goto LABEL_174;
                                    }
LABEL_172:
                                    __break(1u);
                                    goto LABEL_173;
                                  }
LABEL_171:
                                  __break(1u);
                                  goto LABEL_172;
                                }
LABEL_170:
                                __break(1u);
                                goto LABEL_171;
                              }
LABEL_169:
                              __break(1u);
                              goto LABEL_170;
                            }
LABEL_168:
                            __break(1u);
                            goto LABEL_169;
                          }
LABEL_167:
                          __break(1u);
                          goto LABEL_168;
                        }
LABEL_166:
                        __break(1u);
                        goto LABEL_167;
                      }
LABEL_165:
                      __break(1u);
                      goto LABEL_166;
                    }
LABEL_164:
                    __break(1u);
                    goto LABEL_165;
                  }
LABEL_163:
                  __break(1u);
                  goto LABEL_164;
                }
LABEL_162:
                __break(1u);
                goto LABEL_163;
              }
LABEL_161:
              __break(1u);
              goto LABEL_162;
            }
LABEL_160:
            __break(1u);
            goto LABEL_161;
          }
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
LABEL_158:
        __break(1u);
        goto LABEL_159;
      }
LABEL_157:
      __break(1u);
      goto LABEL_158;
    }
LABEL_156:
    __break(1u);
    goto LABEL_157;
  }
  sub_10004F88C((uint64_t)(v6 + 4), (uint64_t)v367);
  swift_bridgeObjectRelease(v6);
  v7 = sub_100018148(0, (unint64_t *)&qword_100481BC0, UIView_ptr);
  swift_dynamicCast(&v366, v367, (char *)&type metadata for Any + 8, v7, 6);
  v8 = v366;
  if (!v9)
    v8 = 0;
  v10 = qword_100488FF0;
  v11 = *(void **)&v2[qword_100488FF0];
  *(_QWORD *)&v2[qword_100488FF0] = v8;

  v12 = *(void **)&v2[v10];
  if (!v12
    || (v13 = v12,
        objc_msgSend(v2, "bounds"),
        objc_msgSend(v13, "setFrame:"),
        v13,
        !*(_QWORD *)&v2[v10]))
  {
    __break(1u);
    goto LABEL_153;
  }
  objc_msgSend(v2, "addSubview:");
  v14 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v15 = objc_msgSend(v14, "preferredContentSizeCategory");

  LOBYTE(v14) = UIContentSizeCategory.isAccessibilityCategory.getter(v15);
  if ((v14 & 1) == 0)
  {
LABEL_13:
    objc_msgSend(v2, "bounds");
    v37 = CGRectGetWidth(v370);
    sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
    v38 = static UIDevice.isIPad()();
    v40 = (void *)swift_unknownObjectWeakLoadStrong(&v2[qword_100489070], v39);
    if (v40)
    {
      v41 = v40;
      v42 = v37 + -48.0;
      if ((v38 & 1) != 0)
        v42 = 375.0;
      objc_msgSend(v40, "setConstant:", v42);

      objc_msgSend(v2, "setNeedsLayout");
      objc_msgSend(v2, "layoutIfNeeded");
      v43 = &v2[qword_100488FF8];
      v45 = swift_unknownObjectWeakLoadStrong(&v2[qword_100488FF8], v44);
      if (v45)
      {
        v46 = (void *)v45;
        v1 = (void *)objc_opt_self(NSBundle);
        v47 = objc_msgSend(v1, "mainBundle");
        v48._countAndFlagsBits = 0xD000000000000022;
        v368._object = (void *)0xE000000000000000;
        v48._object = (void *)0x80000001003E51B0;
        v49._countAndFlagsBits = 0;
        v49._object = (void *)0xE000000000000000;
        v368._countAndFlagsBits = 0;
        v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v47, v49, v368)._object;

        v51 = String._bridgeToObjectiveC()();
        objc_msgSend(v46, "setText:", v51, swift_bridgeObjectRelease(v50).n128_f64[0]);

        v53 = swift_unknownObjectWeakLoadStrong(v43, v52);
        if (v53)
        {
          v6 = (_QWORD *)v53;
          v364 = v43;
          if (qword_10047B120 == -1)
            goto LABEL_19;
          goto LABEL_144;
        }
LABEL_155:
        __break(1u);
        goto LABEL_156;
      }
LABEL_154:
      __break(1u);
      goto LABEL_155;
    }
LABEL_153:
    __break(1u);
    goto LABEL_154;
  }
  v17 = &v2[qword_100489090];
  v18 = (void *)swift_unknownObjectWeakLoadStrong(&v2[qword_100489090], v16);
  if (!v18)
  {
LABEL_203:
    __break(1u);
    goto LABEL_204;
  }
  v19 = v18;
  objc_msgSend(v18, "constant");
  v21 = v20;

  v22 = &v2[qword_100489098];
  v24 = (void *)swift_unknownObjectWeakLoadStrong(&v2[qword_100489098], v23);
  if (!v24)
  {
LABEL_204:
    __break(1u);
    goto LABEL_205;
  }
  v25 = v24;
  objc_msgSend(v24, "constant");
  v27 = v26;

  v29 = (void *)swift_unknownObjectWeakLoadStrong(v17, v28);
  if (!v29)
  {
LABEL_205:
    __break(1u);
    goto LABEL_206;
  }
  v30 = v29;
  objc_msgSend(v29, "setConstant:", 50.0);

  v32 = (void *)swift_unknownObjectWeakLoadStrong(v22, v31);
  if (v32)
  {
    v33 = v32;
    objc_msgSend(v32, "setConstant:", 69.5);

    v35 = (void *)swift_unknownObjectWeakLoadStrong(&v2[qword_100489088], v34);
    if (!v35)
      goto LABEL_207;
    v36 = v35;
    objc_msgSend(v35, "setConstant:", 50.0 - v21 + 69.5 - v27 + 356.0);

    goto LABEL_13;
  }
LABEL_206:
  __break(1u);
LABEL_207:
  __break(1u);
LABEL_208:
  __break(1u);
}

void sub_10019EFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + qword_100489060, a2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "center");
    v6 = v5;
    v8 = v7;

    v9 = (_QWORD *)(v2 + qword_100480290);
    *v9 = v6;
    v9[1] = v8;
  }
  else
  {
    __break(1u);
  }
}

void sub_10019F05C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  uint64_t v9;
  char v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  char v19;
  uint64_t v20;
  char v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  char v30;
  uint64_t v31;
  char v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  char v41;
  uint64_t v42;
  char v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  char v52;
  uint64_t v53;
  char v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  void *v62;
  char v63;
  uint64_t v64;
  char v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  void *v73;
  char v74;
  uint64_t v75;
  char v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t *v85;
  uint64_t **v86;
  char v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  id v94;
  uint64_t v95;
  id v96;
  id v97;
  id v98;
  void *v99;
  void *v100;
  id v101;
  uint64_t v102;
  unint64_t v103;
  id v104;

  v3 = v2;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + qword_100488FF8, a2);
  if (Strong)
  {
    v5 = (void *)Strong;
    if (qword_10047B120 != -1)
      swift_once(&qword_10047B120, sub_100197B60);
    v6 = (void *)qword_1004AFCA0;
    v7 = *(void **)algn_1004AFCA8;
    if ((byte_1004AFCB0 & 1) != 0)
    {
      v8 = byte_1004AFCC0;
      v9 = qword_1004AFCB8;
      v10 = byte_10048A2A0;
      v11 = (id)qword_1004AFCA0;
      v12 = sub_100070DBC(v10, v9, v8);
      sub_100021580(v6, v7, 1);
    }
    else
    {
      if ((byte_10048A2A0 & 1) != 0)
        v13 = *(id *)algn_1004AFCA8;
      else
        v13 = (id)qword_1004AFCA0;
      v12 = v13;
    }
    objc_msgSend(v5, "setTextColor:", v12);

    v15 = swift_unknownObjectWeakLoadStrong(v3 + qword_100489008, v14);
    if (!v15)
      goto LABEL_78;
    v16 = (void *)v15;
    v17 = (void *)qword_1004AFCA0;
    v18 = *(void **)algn_1004AFCA8;
    if ((byte_1004AFCB0 & 1) != 0)
    {
      v19 = byte_1004AFCC0;
      v20 = qword_1004AFCB8;
      v21 = byte_10048A2A0;
      v22 = (id)qword_1004AFCA0;
      v23 = sub_100070DBC(v21, v20, v19);
      sub_100021580(v17, v18, 1);
    }
    else
    {
      if ((byte_10048A2A0 & 1) != 0)
        v24 = *(id *)algn_1004AFCA8;
      else
        v24 = (id)qword_1004AFCA0;
      v23 = v24;
    }
    objc_msgSend(v16, "setTintColor:", v23);

    v26 = swift_unknownObjectWeakLoadStrong(v3 + qword_100489020, v25);
    if (!v26)
      goto LABEL_79;
    v27 = (void *)v26;
    if (qword_10047B118 != -1)
      swift_once(&qword_10047B118, sub_100197B14);
    v28 = (void *)qword_1004AFC78;
    v29 = qword_1004AFC80;
    if ((byte_1004AFC88 & 1) != 0)
    {
      v30 = byte_1004AFC98;
      v31 = qword_1004AFC90;
      v32 = byte_10048A2A0;
      v33 = (id)qword_1004AFC78;
      v34 = sub_100070DBC(v32, v31, v30);
      sub_100021580(v28, v29, 1);
    }
    else
    {
      if ((byte_10048A2A0 & 1) != 0)
        v35 = qword_1004AFC80;
      else
        v35 = (id)qword_1004AFC78;
      v34 = v35;
    }
    objc_msgSend(v27, "setTextColor:", v34);

    v37 = swift_unknownObjectWeakLoadStrong(v3 + qword_100489028, v36);
    if (!v37)
      goto LABEL_80;
    v38 = (void *)v37;
    v39 = (void *)qword_1004AFCA0;
    v40 = *(void **)algn_1004AFCA8;
    if ((byte_1004AFCB0 & 1) != 0)
    {
      v41 = byte_1004AFCC0;
      v42 = qword_1004AFCB8;
      v43 = byte_10048A2A0;
      v44 = (id)qword_1004AFCA0;
      v45 = sub_100070DBC(v43, v42, v41);
      sub_100021580(v39, v40, 1);
    }
    else
    {
      if ((byte_10048A2A0 & 1) != 0)
        v46 = *(id *)algn_1004AFCA8;
      else
        v46 = (id)qword_1004AFCA0;
      v45 = v46;
    }
    objc_msgSend(v38, "setTextColor:", v45);

    v48 = swift_unknownObjectWeakLoadStrong(v3 + qword_100489030, v47);
    if (!v48)
      goto LABEL_81;
    v49 = (void *)v48;
    v50 = (void *)qword_1004AFCA0;
    v51 = *(void **)algn_1004AFCA8;
    if ((byte_1004AFCB0 & 1) != 0)
    {
      v52 = byte_1004AFCC0;
      v53 = qword_1004AFCB8;
      v54 = byte_10048A2A0;
      v55 = (id)qword_1004AFCA0;
      v56 = sub_100070DBC(v54, v53, v52);
      sub_100021580(v50, v51, 1);
    }
    else
    {
      if ((byte_10048A2A0 & 1) != 0)
        v57 = *(id *)algn_1004AFCA8;
      else
        v57 = (id)qword_1004AFCA0;
      v56 = v57;
    }
    objc_msgSend(v49, "setTextColor:", v56);

    v59 = swift_unknownObjectWeakLoadStrong(v3 + qword_100489038, v58);
    if (!v59)
      goto LABEL_82;
    v60 = (void *)v59;
    v61 = (void *)qword_1004AFCA0;
    v62 = *(void **)algn_1004AFCA8;
    if ((byte_1004AFCB0 & 1) != 0)
    {
      v63 = byte_1004AFCC0;
      v64 = qword_1004AFCB8;
      v65 = byte_10048A2A0;
      v66 = (id)qword_1004AFCA0;
      v67 = sub_100070DBC(v65, v64, v63);
      sub_100021580(v61, v62, 1);
    }
    else
    {
      if ((byte_10048A2A0 & 1) != 0)
        v68 = *(id *)algn_1004AFCA8;
      else
        v68 = (id)qword_1004AFCA0;
      v67 = v68;
    }
    objc_msgSend(v60, "setTextColor:", v67);

    v70 = swift_unknownObjectWeakLoadStrong(v3 + qword_100489048, v69);
    if (!v70)
      goto LABEL_83;
    v71 = (void *)v70;
    v72 = (void *)qword_1004AFCA0;
    v73 = *(void **)algn_1004AFCA8;
    if ((byte_1004AFCB0 & 1) != 0)
    {
      v74 = byte_1004AFCC0;
      v75 = qword_1004AFCB8;
      v76 = byte_10048A2A0;
      v77 = (id)qword_1004AFCA0;
      v78 = sub_100070DBC(v76, v75, v74);
      sub_100021580(v72, v73, 1);
    }
    else
    {
      if ((byte_10048A2A0 & 1) != 0)
        v79 = *(id *)algn_1004AFCA8;
      else
        v79 = (id)qword_1004AFCA0;
      v78 = v79;
    }
    objc_msgSend(v71, "setTextColor:", v78);

    v80 = *(_QWORD *)(v3 + qword_100489078);
    if (!v80)
      goto LABEL_84;
    v81 = &OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
    if ((unint64_t)v80 >> 62)
    {
      if (v80 >= 0)
        v102 = v80 & 0xFFFFFFFFFFFFFF8;
      else
        v102 = v80;
      swift_bridgeObjectRetain(v80);
      v82 = _CocoaArrayWrapper.endIndex.getter(v102);
      if (v82)
        goto LABEL_57;
    }
    else
    {
      v82 = *(_QWORD *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v80);
      if (v82)
      {
LABEL_57:
        if (v82 >= 1)
        {
          v83 = 0;
          v103 = v80 & 0xC000000000000001;
          v84 = &qword_1004AFCC8;
          v85 = &qword_10047B000;
          v86 = &off_10046F000;
          do
          {
            if (v103)
              v97 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v83, v80);
            else
              v97 = *(id *)(v80 + 8 * v83 + 32);
            v98 = v97;
            if (v85[37] != -1)
              swift_once(&qword_10047B128, sub_100197BAC);
            v99 = (void *)*v84;
            v100 = (void *)v84[1];
            v104 = v98;
            if ((v84[2] & 1) != 0)
            {
              v87 = byte_1004AFCE8;
              v88 = v84;
              v89 = v80;
              v90 = v85;
              v91 = v82;
              v92 = qword_1004AFCE0;
              v93 = byte_10048A2A0;
              v94 = v99;
              LOBYTE(v94) = v93;
              v81 = &OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
              v95 = v92;
              v82 = v91;
              v85 = v90;
              v80 = v89;
              v84 = v88;
              v86 = &off_10046F000;
              v96 = sub_100070DBC((char)v94, v95, v87);
              sub_100021580(v99, v100, 1);
            }
            else
            {
              if ((v81[84] & 1) != 0)
                v101 = v100;
              else
                v101 = v99;
              v96 = v101;
            }
            ++v83;
            objc_msgSend(v104, (SEL)v86[319], v96, v103);

          }
          while (v82 != v83);
          goto LABEL_75;
        }
        __break(1u);
        goto LABEL_77;
      }
    }
LABEL_75:
    swift_bridgeObjectRelease(v80);
    return;
  }
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
}

_QWORD *sub_10019F730(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;

  *(_QWORD *)(v5 + qword_100488FF0) = 0;
  swift_unknownObjectWeakInit(v5 + qword_100488FF8, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489000, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489008, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489010, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489018, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489020, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489028, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489030, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489038, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489040, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489048, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489050, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489058, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489060, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489068, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489070, 0);
  *(_QWORD *)(v5 + qword_100489078) = 0;
  *(_QWORD *)(v5 + qword_100489080) = 0;
  swift_unknownObjectWeakInit(v5 + qword_100489088, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489090, 0);
  swift_unknownObjectWeakInit(v5 + qword_100489098, 0);
  swift_unknownObjectWeakInit(v5 + qword_1004890A0, 0);
  swift_unknownObjectWeakInit(v5 + qword_1004890A8, 0);
  swift_unknownObjectWeakInit(v5 + qword_1004890B0, 0);
  swift_unknownObjectWeakInit(v5 + qword_1004890B8, 0);
  swift_unknownObjectWeakInit(v5 + qword_1004890C0, 0);
  swift_unknownObjectWeakInit(v5 + qword_1004890C8, 0);
  swift_unknownObjectWeakInit(v5 + qword_1004890D0, 0);
  swift_unknownObjectWeakInit(v5 + qword_1004890D8, 0);
  swift_unknownObjectWeakInit(v5 + qword_1004890E0, 0);
  swift_unknownObjectWeakInit(v5 + qword_1004890E8, 0);
  swift_unknownObjectWeakInit(v5 + qword_1004890F0, 0);
  v11 = (_QWORD *)(v5 + qword_1004890F8);
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  v12 = (_QWORD *)(v5 + qword_100489100);
  *v12 = 0;
  v12[1] = 0xE000000000000000;
  v13 = (_QWORD *)(v5 + qword_100489108);
  *v13 = 0;
  v13[1] = 0xE000000000000000;
  v14 = (_QWORD *)(v5 + qword_100489110);
  *v14 = 0;
  v14[1] = 0xE000000000000000;
  *(_QWORD *)(v5 + qword_100489118) = 0x4038000000000000;
  *(_DWORD *)(v5 + qword_100489120) = 1136361472;
  return sub_100095CE8(a1, a2, a3, a4, a5);
}

id sub_10019FA64(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  double v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  id v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  *(_QWORD *)&v1[qword_100488FF0] = 0;
  swift_unknownObjectWeakInit(&v1[qword_100488FF8], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489000], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489008], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489010], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489018], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489020], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489028], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489030], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489038], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489040], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489048], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489050], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489058], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489060], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489068], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489070], 0);
  *(_QWORD *)&v1[qword_100489078] = 0;
  *(_QWORD *)&v1[qword_100489080] = 0;
  swift_unknownObjectWeakInit(&v1[qword_100489088], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489090], 0);
  swift_unknownObjectWeakInit(&v1[qword_100489098], 0);
  swift_unknownObjectWeakInit(&v1[qword_1004890A0], 0);
  swift_unknownObjectWeakInit(&v1[qword_1004890A8], 0);
  swift_unknownObjectWeakInit(&v1[qword_1004890B0], 0);
  swift_unknownObjectWeakInit(&v1[qword_1004890B8], 0);
  swift_unknownObjectWeakInit(&v1[qword_1004890C0], 0);
  swift_unknownObjectWeakInit(&v1[qword_1004890C8], 0);
  swift_unknownObjectWeakInit(&v1[qword_1004890D0], 0);
  swift_unknownObjectWeakInit(&v1[qword_1004890D8], 0);
  swift_unknownObjectWeakInit(&v1[qword_1004890E0], 0);
  swift_unknownObjectWeakInit(&v1[qword_1004890E8], 0);
  *(_QWORD *)&v4 = swift_unknownObjectWeakInit(&v1[qword_1004890F0], 0).n128_u64[0];
  v5 = &v1[qword_1004890F8];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0xE000000000000000;
  v6 = &v1[qword_100489100];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0xE000000000000000;
  v7 = &v1[qword_100489108];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0xE000000000000000;
  v8 = &v1[qword_100489110];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0xE000000000000000;
  *(_QWORD *)&v1[qword_100489118] = 0x4038000000000000;
  *(_DWORD *)&v1[qword_100489120] = 1136361472;
  v11.receiver = v1;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, "initWithCoder:", a1, v4);

  return v9;
}

id sub_10019FDA4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10019FA64(a3);
}

uint64_t sub_10019FDC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  swift_unknownObjectWeakDestroy(v0 + qword_100488FF8, v1);
  swift_unknownObjectWeakDestroy(v0 + qword_100489000, v2);
  swift_unknownObjectWeakDestroy(v0 + qword_100489008, v3);
  swift_unknownObjectWeakDestroy(v0 + qword_100489010, v4);
  swift_unknownObjectWeakDestroy(v0 + qword_100489018, v5);
  swift_unknownObjectWeakDestroy(v0 + qword_100489020, v6);
  swift_unknownObjectWeakDestroy(v0 + qword_100489028, v7);
  swift_unknownObjectWeakDestroy(v0 + qword_100489030, v8);
  swift_unknownObjectWeakDestroy(v0 + qword_100489038, v9);
  swift_unknownObjectWeakDestroy(v0 + qword_100489040, v10);
  swift_unknownObjectWeakDestroy(v0 + qword_100489048, v11);
  swift_unknownObjectWeakDestroy(v0 + qword_100489050, v12);
  swift_unknownObjectWeakDestroy(v0 + qword_100489058, v13);
  swift_unknownObjectWeakDestroy(v0 + qword_100489060, v14);
  swift_unknownObjectWeakDestroy(v0 + qword_100489068, v15);
  swift_unknownObjectWeakDestroy(v0 + qword_100489070, v16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100489078));

  swift_unknownObjectWeakDestroy(v0 + qword_100489088, v17);
  swift_unknownObjectWeakDestroy(v0 + qword_100489090, v18);
  swift_unknownObjectWeakDestroy(v0 + qword_100489098, v19);
  swift_unknownObjectWeakDestroy(v0 + qword_1004890A0, v20);
  swift_unknownObjectWeakDestroy(v0 + qword_1004890A8, v21);
  swift_unknownObjectWeakDestroy(v0 + qword_1004890B0, v22);
  swift_unknownObjectWeakDestroy(v0 + qword_1004890B8, v23);
  swift_unknownObjectWeakDestroy(v0 + qword_1004890C0, v24);
  swift_unknownObjectWeakDestroy(v0 + qword_1004890C8, v25);
  swift_unknownObjectWeakDestroy(v0 + qword_1004890D0, v26);
  swift_unknownObjectWeakDestroy(v0 + qword_1004890D8, v27);
  swift_unknownObjectWeakDestroy(v0 + qword_1004890E0, v28);
  swift_unknownObjectWeakDestroy(v0 + qword_1004890E8, v29);
  swift_unknownObjectWeakDestroy(v0 + qword_1004890F0, v30);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1004890F8 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100489100 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100489108 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100489110 + 8));
}

uint64_t sub_1001A0034(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  swift_unknownObjectWeakDestroy(a1 + qword_100488FF8, v2);
  swift_unknownObjectWeakDestroy(a1 + qword_100489000, v3);
  swift_unknownObjectWeakDestroy(a1 + qword_100489008, v4);
  swift_unknownObjectWeakDestroy(a1 + qword_100489010, v5);
  swift_unknownObjectWeakDestroy(a1 + qword_100489018, v6);
  swift_unknownObjectWeakDestroy(a1 + qword_100489020, v7);
  swift_unknownObjectWeakDestroy(a1 + qword_100489028, v8);
  swift_unknownObjectWeakDestroy(a1 + qword_100489030, v9);
  swift_unknownObjectWeakDestroy(a1 + qword_100489038, v10);
  swift_unknownObjectWeakDestroy(a1 + qword_100489040, v11);
  swift_unknownObjectWeakDestroy(a1 + qword_100489048, v12);
  swift_unknownObjectWeakDestroy(a1 + qword_100489050, v13);
  swift_unknownObjectWeakDestroy(a1 + qword_100489058, v14);
  swift_unknownObjectWeakDestroy(a1 + qword_100489060, v15);
  swift_unknownObjectWeakDestroy(a1 + qword_100489068, v16);
  swift_unknownObjectWeakDestroy(a1 + qword_100489070, v17);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100489078));

  swift_unknownObjectWeakDestroy(a1 + qword_100489088, v18);
  swift_unknownObjectWeakDestroy(a1 + qword_100489090, v19);
  swift_unknownObjectWeakDestroy(a1 + qword_100489098, v20);
  swift_unknownObjectWeakDestroy(a1 + qword_1004890A0, v21);
  swift_unknownObjectWeakDestroy(a1 + qword_1004890A8, v22);
  swift_unknownObjectWeakDestroy(a1 + qword_1004890B0, v23);
  swift_unknownObjectWeakDestroy(a1 + qword_1004890B8, v24);
  swift_unknownObjectWeakDestroy(a1 + qword_1004890C0, v25);
  swift_unknownObjectWeakDestroy(a1 + qword_1004890C8, v26);
  swift_unknownObjectWeakDestroy(a1 + qword_1004890D0, v27);
  swift_unknownObjectWeakDestroy(a1 + qword_1004890D8, v28);
  swift_unknownObjectWeakDestroy(a1 + qword_1004890E0, v29);
  swift_unknownObjectWeakDestroy(a1 + qword_1004890E8, v30);
  swift_unknownObjectWeakDestroy(a1 + qword_1004890F0, v31);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1004890F8 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100489100 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100489108 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100489110 + 8));
}

uint64_t type metadata accessor for RectangleLabelDetailsPlatter(uint64_t a1)
{
  uint64_t result;

  result = qword_100489150;
  if (!qword_100489150)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RectangleLabelDetailsPlatter);
  return result;
}

uint64_t sub_1001A02E8(uint64_t a1)
{
  _QWORD v2[39];

  v2[0] = "\b";
  v2[1] = &unk_1003BB4B8;
  v2[2] = &unk_1003BB4B8;
  v2[3] = &unk_1003BB4B8;
  v2[4] = &unk_1003BB4B8;
  v2[5] = &unk_1003BB4B8;
  v2[6] = &unk_1003BB4B8;
  v2[7] = &unk_1003BB4B8;
  v2[8] = &unk_1003BB4B8;
  v2[9] = &unk_1003BB4B8;
  v2[10] = &unk_1003BB4B8;
  v2[11] = &unk_1003BB4B8;
  v2[12] = &unk_1003BB4B8;
  v2[13] = &unk_1003BB4B8;
  v2[14] = &unk_1003BB4B8;
  v2[15] = &unk_1003BB4B8;
  v2[16] = &unk_1003BB4B8;
  v2[17] = "\b";
  v2[18] = "\b";
  v2[19] = &unk_1003BB4B8;
  v2[20] = &unk_1003BB4B8;
  v2[21] = &unk_1003BB4B8;
  v2[22] = &unk_1003BB4B8;
  v2[23] = &unk_1003BB4B8;
  v2[24] = &unk_1003BB4B8;
  v2[25] = &unk_1003BB4B8;
  v2[26] = &unk_1003BB4B8;
  v2[27] = &unk_1003BB4B8;
  v2[28] = &unk_1003BB4B8;
  v2[29] = &unk_1003BB4B8;
  v2[30] = &unk_1003BB4B8;
  v2[31] = &unk_1003BB4B8;
  v2[32] = &unk_1003BB4B8;
  v2[33] = &unk_1003BB4D0;
  v2[34] = &unk_1003BB4D0;
  v2[35] = &unk_1003BB4D0;
  v2[36] = &unk_1003BB4D0;
  v2[37] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[38] = (char *)&value witness table for Builtin.Int32 + 64;
  return swift_initClassMetadata2(a1, 256, 39, v2, a1 + 384);
}

uint64_t sub_1001A03A4()
{
  return type metadata accessor for RectangleLabelDetailsPlatter(0);
}

double sub_1001A03AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  id v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double result;
  _BYTE v36[24];
  Swift::String v37;

  v3 = v2;
  v4 = v2 + qword_100480288;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + qword_100480288, a2);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v4 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t))(v7 + 32))(ObjectType, v7);
    swift_unknownObjectRelease(v6);
  }
  v9 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v37._object = (void *)0xE000000000000000;
  v11._countAndFlagsBits = 0x4C414E4F47414944;
  v11._object = (void *)0xE800000000000000;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v37._countAndFlagsBits = 0;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v37);

  v14 = sub_10000EDC8((uint64_t *)&unk_10048A100);
  v15 = swift_allocObject(v14, 232, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1003B0BE0;
  v17 = *(_QWORD *)(v3 + qword_1004890F8);
  v16 = *(_QWORD *)(v3 + qword_1004890F8 + 8);
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  v18 = sub_100018B34();
  *(_QWORD *)(v15 + 32) = v17;
  *(_QWORD *)(v15 + 40) = v16;
  v19 = *(_QWORD *)(v3 + qword_100489100);
  v20 = *(_QWORD *)(v3 + qword_100489100 + 8);
  *(_QWORD *)(v15 + 96) = &type metadata for String;
  *(_QWORD *)(v15 + 104) = v18;
  *(_QWORD *)(v15 + 64) = v18;
  *(_QWORD *)(v15 + 72) = v19;
  *(_QWORD *)(v15 + 80) = v20;
  v21 = *(_QWORD *)(v3 + qword_100489108);
  v22 = *(_QWORD *)(v3 + qword_100489108 + 8);
  *(_QWORD *)(v15 + 136) = &type metadata for String;
  *(_QWORD *)(v15 + 144) = v18;
  *(_QWORD *)(v15 + 112) = v21;
  *(_QWORD *)(v15 + 120) = v22;
  v23 = *(_QWORD *)(v3 + qword_100489110);
  v24 = *(_QWORD *)(v3 + qword_100489110 + 8);
  *(_QWORD *)(v15 + 176) = &type metadata for String;
  *(_QWORD *)(v15 + 184) = v18;
  *(_QWORD *)(v15 + 152) = v23;
  *(_QWORD *)(v15 + 160) = v24;
  *(_QWORD *)(v15 + 216) = &type metadata for String;
  *(_QWORD *)(v15 + 224) = v18;
  *(Swift::String *)(v15 + 192) = v13;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v24);
  String.init(format:_:)(0x1000000000000014, 0x80000001003E5190, v15);
  v26 = v25;
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setString:", v27, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v29 = swift_unknownObjectWeakLoadStrong(v4, v28);
  if (v29)
  {
    v30 = v29;
    v31 = *(_QWORD *)(v4 + 8);
    v32 = swift_getObjectType(v29);
    (*(void (**)(uint64_t, uint64_t))(v31 + 24))(v32, v31);
    swift_unknownObjectRelease(v30);
  }
  if (qword_10047AB68 != -1)
    swift_once(&qword_10047AB68, sub_10011E814);
  v33 = qword_1004AF6B8;

  v34 = v33 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess(v34, v36, 1, 0);
  result = *(double *)(v34 + 56) + 1.0;
  *(double *)(v34 + 56) = result;
  return result;
}

void sub_1001A06B4(void *a1, double a2)
{
  void *v4;
  void *v5;
  void *v6;
  id v7;
  double v8;
  double v9;
  void *v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t inited;
  id v25;
  NSString *v26;
  void *v27;
  void *v28;
  id v29;
  unint64_t v30;
  Class isa;
  double v32;
  double v33;
  double v34;
  void *v35;
  void *v36;
  id v37;
  double v38;
  id v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  NSString *v43;
  id v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  Class v51;
  double v52;
  double v53;
  double v54;
  double v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  _QWORD v61[5];
  _BYTE v62[80];

  sub_100197EC8();
  v5 = v4;
  v6 = (void *)objc_opt_self(UIFont);
  v7 = objc_msgSend(v6, "fontWithDescriptor:size:", v5, 0.0);

  objc_msgSend(v7, "pointSize");
  v9 = v8;

  sub_100197EC8();
  v11 = v10;
  v12 = objc_msgSend(v6, "fontWithDescriptor:size:", v10, 0.0);

  objc_msgSend(v12, "pointSize");
  v14 = v13;

  sub_100197EC8();
  v16 = v15;
  v17 = objc_msgSend(a1, "text");
  if (!v17)
    goto LABEL_7;
  v18 = v17;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v21 = v20;
  v22 = String.count.getter(v19);
  swift_bridgeObjectRelease(v21);
  if (v22 < 1)
  {

LABEL_7:
    sub_100197EC8();
    v36 = v35;
    v37 = objc_msgSend(v6, "fontWithDescriptor:size:", v35, 0.0);

    objc_msgSend(v37, "pointSize");
    return;
  }
  v23 = sub_10000EDC8(&qword_100481980);
  inited = swift_initStackObject(v23, v62);
  *(_OWORD *)(inited + 16) = xmmword_1003B0BD0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v25 = v18;
  v26 = NSFontAttributeName;
  sub_100197EC8();
  v28 = v27;
  v29 = objc_msgSend(v6, "fontWithDescriptor:size:", v27, 0.0);

  v58 = sub_100018148(0, &qword_10047C110, UIFont_ptr);
  *(_QWORD *)(inited + 64) = v58;
  *(_QWORD *)(inited + 40) = v29;
  v30 = sub_1000C7274(inited);
  type metadata accessor for Key(0);
  sub_100020800();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v25, "sizeWithAttributes:", isa, swift_bridgeObjectRelease(v30).n128_f64[0]);
  v33 = v32;

  if (v33 > a2 && (v34 = v9 * 0.2, v9 * 0.2 <= v14))
  {
    v57 = v16;
    sub_10000EDC8(&qword_10047C108);
    while (1)
    {
      v38 = v34 + (v14 - v34) * 0.5;
      v39 = v25;
      v40 = objc_msgSend(v6, "fontWithDescriptor:size:", v57, v38);
      v61[4] = v58;
      v61[0] = v26;
      v61[1] = v40;
      v41 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(1);
      sub_1001A0B54((uint64_t)v61, (uint64_t)&v59);
      v42 = v59;
      v43 = v26;
      v44 = v40;
      v45 = sub_1000C810C(v42);
      if ((v46 & 1) != 0)
        break;
      v41[(v45 >> 6) + 8] |= 1 << v45;
      *(_QWORD *)(v41[6] + 8 * v45) = v42;
      sub_100020848(&v60, (_OWORD *)(v41[7] + 32 * v45));
      v47 = v41[2];
      v48 = __OFADD__(v47, 1);
      v49 = v47 + 1;
      if (v48)
        goto LABEL_23;
      v41[2] = v49;
      v50 = sub_10000EDC8(&qword_100481BE8);
      swift_arrayDestroy(v61, 1, v50);
      v51 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v39, "sizeWithAttributes:", v51, swift_release().n128_f64[0]);
      v53 = v52;

      v54 = a2 - v53;
      if (v38 == v34 || v38 == v14)
      {

        return;
      }
      v56 = v34 + (v14 - v34) * 0.5;
      if (v54 < 0.0 || (v56 = v14, v34 = v34 + (v14 - v34) * 0.5, v54 > 0.0))
      {
        v14 = v56;
        if (v34 <= v56)
          continue;
      }

      return;
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {

  }
}

uint64_t sub_1001A0B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000EDC8(&qword_100481BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for InstrumentationState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001A0BE8 + 4 * byte_1003BB505[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001A0C1C + 4 * byte_1003BB500[v4]))();
}

uint64_t sub_1001A0C1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A0C24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001A0C2CLL);
  return result;
}

uint64_t sub_1001A0C38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001A0C40);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001A0C44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A0C4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InstrumentationState()
{
  return &type metadata for InstrumentationState;
}

uint64_t sub_1001A0C68()
{
  uint64_t result;

  result = Contexts.UIKit.init()();
  qword_1004AFCF0 = result;
  return result;
}

id sub_1001A0C84@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_10047B130 != -1)
    swift_once(&qword_10047B130, sub_1001A0C68);
  v2 = (void *)qword_1004AFCF0;
  *a1 = qword_1004AFCF0;
  return v2;
}

unint64_t sub_1001A0CD4(uint64_t a1)
{
  unint64_t result;

  result = sub_1001A0CF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001A0CF8()
{
  unint64_t result;

  result = qword_100489470;
  if (!qword_100489470)
  {
    result = swift_getWitnessTable(&unk_1003BB528, &type metadata for InstrumentationState);
    atomic_store(result, (unint64_t *)&qword_100489470);
  }
  return result;
}

void sub_1001A0D3C(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  sub_1001A0F98((uint64_t)v7);

}

uint64_t sub_1001A0DA0(_QWORD *a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  char *v6;
  uint64_t v7;
  _BYTE v9[40];

  v3 = (char *)objc_allocWithZone(v1);
  v4 = qword_100489480;
  sub_10000EDC8((uint64_t *)&unk_100489620);
  KeyPath = swift_getKeyPath(&unk_1003BB590);
  v6 = v3;
  *(_QWORD *)&v3[v4] = MutableStateValue.__allocating_init(_:_:)(KeyPath, v1);

  sub_100068B24((uint64_t)a1, (uint64_t)v9);
  v7 = StateObservingNSObject.init(configuration:)(v9);
  sub_10000F690(a1);
  return v7;
}

id sub_1001A0E58(char *a1)
{
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t KeyPath;
  char *v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType(a1);
  v3 = qword_100489480;
  sub_10000EDC8((uint64_t *)&unk_100489620);
  KeyPath = swift_getKeyPath(&unk_1003BB590);
  v5 = a1;
  *(_QWORD *)&a1[v3] = MutableStateValue.__allocating_init(_:_:)(KeyPath, ObjectType);

  v7.receiver = v5;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, "init");
}

double sub_1001A0EEC()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0 + qword_100489480)).n128_u64[0];
  return result;
}

double sub_1001A0EFC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + qword_100489480)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for TabBarControllerDelegate(uint64_t a1)
{
  uint64_t result;

  result = qword_100489510;
  if (!qword_100489510)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TabBarControllerDelegate);
  return result;
}

uint64_t sub_1001A0F48(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 256, 1, &v2, a1 + 200);
}

uint64_t sub_1001A0F8C()
{
  return type metadata accessor for TabBarControllerDelegate(0);
}

void sub_1001A0F98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(_BYTE *, __n128);
  __n128 v5;
  void (*v6)(_BYTE *, _QWORD);
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, __n128);
  __n128 v12;
  void (*v13)(_BYTE *, _QWORD);
  uint64_t v14;
  _BYTE v15[32];

  v3 = objc_opt_self(LevelPageViewController);
  if (swift_dynamicCastObjCClass(a1, v3))
  {
    v4 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v1 + qword_100489480) + 400);
    v5 = swift_retain();
    v6 = (void (*)(_BYTE *, _QWORD))v4(v15, v5);
    *(_BYTE *)(v7 + 1) = 1;
    v6(v15, 0);
    swift_release();
    if (qword_10047AA70 != -1)
      swift_once(&qword_10047AA70, sub_1000E13E4);
    v8 = 0x80000001003E5230;
    v9 = 0xD000000000000018;
  }
  else
  {
    v10 = type metadata accessor for ViewController(0);
    if (!swift_dynamicCastClass(a1, v10))
      return;
    v11 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)(v1 + qword_100489480) + 400);
    v12 = swift_retain();
    v13 = (void (*)(_BYTE *, _QWORD))v11(v15, v12);
    *(_BYTE *)(v14 + 1) = 0;
    v13(v15, 0);
    swift_release();
    if (qword_10047AA70 != -1)
      swift_once(&qword_10047AA70, sub_1000E13E4);
    v9 = 0xD00000000000001ALL;
    v8 = 0x80000001003E5210;
  }
  Log.debug(_:isPrivate:)(*(Swift::String *)&v9, 0);
}

uint64_t sub_1001A1120(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = (uint64_t *)swift_allocObject(v1, 216, 7);
  v4 = a1[3];
  v5 = a1[4];
  v6 = sub_1000A8224((uint64_t)a1, v4);
  __chkstk_darwin(v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v8);
  v10 = sub_1001A6D64((uint64_t)v8, v3, v4, v5);
  sub_10000F690(a1);
  return v10;
}

uint64_t sub_1001A11D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  void *v9;
  void *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[16];
  uint64_t (*v19)();
  uint64_t v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v17 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  StateValue.ifUpdated(_:)(sub_1001A70CC, v0);
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)(sub_1001A70D4, v0);
  swift_release();
  v19 = sub_1001A70DC;
  v20 = v0;
  swift_retain();
  swift_retain();
  StateValue.ifUpdated(_:)(sub_10004185C, v18);
  swift_release();
  swift_release();
  sub_100049274();
  v9 = (void *)static OS_dispatch_queue.main.getter(v8);
  aBlock[4] = sub_1001A70E0;
  v22 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003ECA0;
  aBlock[3] = &unk_10044AE98;
  v10 = _Block_copy(aBlock);
  swift_retain();
  v11 = swift_release();
  static DispatchQoS.unspecified.getter(v11);
  aBlock[0] = _swiftEmptyArrayStorage;
  v12 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v13 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v14 = sub_100043310((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v13, v14, v1, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1001A1450(uint64_t a1, uint64_t a2)
{
  void (*v3)(unint64_t *__return_ptr, __n128);
  __n128 v4;
  unint64_t v5;
  void (*v7)(unint64_t *__return_ptr, __n128);
  __n128 v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  void (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1001A1718();
  sub_1001A1958();
  v3 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(a2 + 120) + 144);
  v4 = swift_retain();
  v3(&v27, v4);
  swift_release();
  v5 = v27;
  if (!(v27 >> 62))
  {
    sub_1001A1B88();
LABEL_20:
    sub_10001A810(v5);
    return;
  }
  if (v27 >> 62 != 3 || (v27 | 8) != 0xC000000000000008)
    goto LABEL_20;
  v7 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(a2 + 112) + 144);
  v8 = swift_retain();
  v7(&v27, v8);
  swift_release();
  v9 = v27;
  v10 = v28;
  v11 = v29;
  v12 = sub_1001C70BC(v27, v28, v29);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v9);
  v27 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v25 = v12;
    else
      v25 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13)
  {
    if (v13 < 1)
    {
      __break(1u);
      goto LABEL_40;
    }
    for (i = 0; i != v13; ++i)
    {
      if ((v12 & 0xC000000000000001) != 0)
        v17 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
      else
        v17 = *(id *)(v12 + 8 * i + 32);
      v18 = v17;
      if ((*(uint64_t (**)(void))((swift_isaMask & *v17) + 0xD0))() == 9)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(9);
        v15 = *(_QWORD *)(v27 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
        v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v18);
        specialized ContiguousArray._endMutation()(v16);
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease(v12);
    v19 = v27;
    if ((v27 & 0x8000000000000000) != 0)
      goto LABEL_36;
  }
  else
  {
    swift_bridgeObjectRelease(v12);
    v19 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_36;
  }
  if ((v19 & 0x4000000000000000) != 0)
  {
LABEL_36:
    swift_retain();
    v20 = _CocoaArrayWrapper.endIndex.getter(v26);
    if (!v20)
      goto LABEL_37;
    goto LABEL_26;
  }
  v20 = *(_QWORD *)(v19 + 16);
  swift_retain();
  if (v20)
  {
LABEL_26:
    if (v20 >= 1)
    {
      v21 = 0;
      do
      {
        if ((v19 & 0xC000000000000001) != 0)
          v22 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v19);
        else
          v22 = *(id *)(v19 + 8 * v21 + 32);
        v23 = v22;
        ++v21;
        v24 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v22) + 0x160))();
        v24();

        swift_release();
      }
      while (v20 != v21);
      goto LABEL_37;
    }
LABEL_40:
    __break(1u);
    return;
  }
LABEL_37:
  swift_release_n(v19, 2);
}

void sub_1001A1718()
{
  uint64_t v0;
  void (*v1)(_OWORD *__return_ptr, __n128);
  __n128 v2;
  double *v3;
  uint64_t v4;
  uint64_t i;
  char *v6;
  void (*v7)(_OWORD *__return_ptr, __n128);
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  void (*v15)(_OWORD *__return_ptr, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[32];
  _OWORD __dst[32];
  _QWORD v22[7];
  _OWORD v23[3];
  uint64_t v24;

  v1 = *(void (**)(_OWORD *__return_ptr, __n128))(**(_QWORD **)(v0 + 104) + 144);
  v2 = swift_retain();
  v1(__dst, v2);
  swift_release();
  v23[0] = __dst[0];
  v23[1] = __dst[1];
  v23[2] = __dst[2];
  v24 = *(_QWORD *)&__dst[3];
  sub_10009183C(v0 + 152, (uint64_t)v22);
  sub_1001A7318(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001A72E0);
  v3 = sub_100090F44((uint64_t)v22);
  sub_1001A7318(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001A3010);
  sub_1001A7350((uint64_t *)v23);
  v4 = *((_QWORD *)v3 + 2);
  if (v4)
  {
    swift_retain();
    swift_bridgeObjectRetain(v3);
    for (i = 0; i != v4; ++i)
    {
      v6 = (char *)v3 + i;
      sub_1001A4454(v6[32]);
    }
    swift_release();
    swift_bridgeObjectRelease_n(v3, 2);
    v7 = *(void (**)(_OWORD *__return_ptr, __n128))(**(_QWORD **)(v0 + 104) + 144);
    v8 = swift_retain();
    v7(__dst, v8);
    swift_release();
    v10 = *((_QWORD *)&__dst[1] + 1);
    v9 = *(_QWORD *)&__dst[1];
    v11 = LODWORD(__dst[2]);
    v12 = *(_OWORD *)((char *)&__dst[2] + 8);
    v13 = __dst[0];
    goto LABEL_9;
  }
  swift_bridgeObjectRelease(v3);
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  if (qword_1004AF278)
  {
    swift_retain();
    swift_retain();
    StateValue.wrappedValue.getter(v20, v14);
    swift_release();
    memcpy(__dst, v20, sizeof(__dst));
    sub_1000F52B0((uint64_t)_swiftEmptyArrayStorage, __dst);
    sub_100012C00((uint64_t)__dst);
    swift_release();
    sub_1001A3048();
    sub_1001A3C44();
    sub_1001A4320();
    v15 = *(void (**)(_OWORD *__return_ptr, __n128))(**(_QWORD **)(v0 + 104) + 144);
    v16 = swift_retain();
    v15(v20, v16);
    swift_release();
    v10 = *((_QWORD *)&v20[1] + 1);
    v9 = *(_QWORD *)&v20[1];
    v11 = LODWORD(v20[2]);
    v12 = *(_OWORD *)((char *)&v20[2] + 8);
    v13 = v20[0];
LABEL_9:
    v17 = *(_QWORD *)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 168);
    *(_OWORD *)(v0 + 152) = v13;
    *(_QWORD *)(v0 + 168) = v9;
    *(_QWORD *)(v0 + 176) = v10;
    *(_QWORD *)(v0 + 184) = v11;
    *(_OWORD *)(v0 + 192) = v12;
    sub_1001A3010(v17, v18, v19);
    return;
  }
  __break(1u);
}

double sub_1001A1958()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(unint64_t *__return_ptr, __n128);
  __n128 v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  char v8;
  void (*v9)(unint64_t *__return_ptr, __n128);
  __n128 v10;
  void *v11;
  void *v12;
  void (*v13)(unint64_t *__return_ptr, __n128);
  __n128 v14;
  unint64_t v15;
  double result;
  void (*v17)(unint64_t *__return_ptr, __n128);
  __n128 v18;
  void *v19;
  void *v20;
  void (*v21)(unint64_t *__return_ptr, __n128);
  __n128 v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(unint64_t *, __n128);
  __n128 v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  id v35;
  id v36;

  v1 = v0;
  v2 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(v0 + 112) + 144);
  v3 = swift_retain();
  v2(&v33, v3);
  swift_release();
  v4 = v33;
  v5 = (uint64_t)v34;
  v6 = v35;
  sub_1001C6B68(v33, (uint64_t)v34, (uint64_t)v35);
  v8 = v7;
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  if ((v8 & 1) != 0)
  {
    v9 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(v1 + 96) + 144);
    v10 = swift_retain();
    v9(&v33, v10);
    swift_release();
    v11 = (void *)v33;
    v12 = v34;

    if (!v12)
    {
      v28 = *(_QWORD *)(v1 + 120);
      v29 = 0xC000000000000000;
      goto LABEL_10;
    }
  }
  v13 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(v1 + 120) + 144);
  v14 = swift_retain();
  v13(&v33, v14);
  swift_release();
  v15 = v33;
  sub_10001A810(v33);
  if (v15 == 0xC000000000000000)
  {
    v17 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(v1 + 96) + 144);
    v18 = swift_retain();
    v17(&v33, v18);
    swift_release();
    v19 = (void *)v33;
    v20 = v34;

    if (v20)
      goto LABEL_8;
    v21 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(v1 + 112) + 144);
    v22 = swift_retain();
    v21(&v33, v22);
    swift_release();
    v23 = v33;
    v24 = (uint64_t)v34;
    v25 = v35;
    v26 = sub_1001C70BC(v33, (uint64_t)v34, (uint64_t)v35);
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v23);
    if ((unint64_t)v26 >> 62)
    {
      v32 = v26 < 0 ? v26 : v26 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v26);
      v27 = _CocoaArrayWrapper.endIndex.getter(v32);
      swift_bridgeObjectRelease(v26);
    }
    else
    {
      v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease(v26).n128_u64[0];
    if (v27)
    {
LABEL_8:
      v28 = *(_QWORD *)(v1 + 120);
      v29 = 0xC000000000000008;
LABEL_10:
      v33 = v29;
      v30 = *(void (**)(unint64_t *, __n128))(*(_QWORD *)v28 + 392);
      v31 = swift_retain();
      v30(&v33, v31);
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_1001A1B88()
{
  uint64_t v0;
  void (*v1)(uint64_t *__return_ptr, __n128);
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  void (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void (**)(uint64_t *__return_ptr, __n128))(**(_QWORD **)(v0 + 112) + 144);
  v2 = swift_retain();
  v1(&v14, v2);
  swift_release();
  v3 = v14;
  v4 = v15;
  v5 = v16;
  v6 = sub_1001C70BC(v14, v15, v16);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  v7 = (uint64_t)sub_1001A7100(v6, (uint64_t)&off_10043C440);
  swift_bridgeObjectRelease(v6);
  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v7);
    if (v8)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v7, 2);
    return;
  }
  if (v7 < 0)
    v13 = v7;
  else
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v8)
    goto LABEL_13;
LABEL_3:
  if (v8 >= 1)
  {
    v9 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
        v10 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
      else
        v10 = *(id *)(v7 + 8 * v9 + 32);
      v11 = v10;
      ++v9;
      v12 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v10) + 0x148))();
      v12();

      swift_release();
    }
    while (v8 != v9);
    goto LABEL_13;
  }
  __break(1u);
}

double sub_1001A1D00(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t *__return_ptr, __n128);
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(void (**)(uint64_t *__return_ptr, __n128))(**(_QWORD **)(a2 + 112) + 144);
  v3 = swift_retain();
  v2(&v9, v3);
  swift_release();
  v4 = v9;
  v5 = v10;
  v6 = v11;
  v7 = sub_1001C70BC(v9, v10, v11);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  sub_1001A1DA0(v7);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

uint64_t sub_1001A1DA0(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  __n128 v10;
  _QWORD *v11;
  void *v12;
  void (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_BYTE *);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  id v33;
  void *v34;
  char v35;
  unint64_t v36;
  int isUniquelyReferenced_nonNull_bridgeObject;
  id v38;
  void *v39;
  char v40;
  id v41;
  void *v42;
  char v43;
  uint64_t v44;
  id v45;
  void *v46;
  char v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t ObjectType;
  Swift::String v52;
  void *object;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  void (*v61)(unint64_t *, _QWORD);
  uint64_t KeyPath;
  void (*v63)(_BYTE *, _QWORD, __n128);
  unint64_t v64;
  unint64_t v65;
  _BYTE v66[40];

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_62:
    if (v1 < 0)
      v50 = v1;
    else
      v50 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v50);
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v1);
  }
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v2)
    return swift_bridgeObjectRelease(v1);
LABEL_3:
  v3 = 0;
  v57 = v2;
  v58 = v1 & 0xC000000000000001;
  v55 = v1 + 32;
  v56 = v1;
  while (1)
  {
    if (v58)
      v11 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v56);
    else
      v11 = *(id *)(v55 + 8 * v3);
    v12 = v11;
    if (__OFADD__(v3++, 1))
    {
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    v14 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v11) + 0x178))();
    v16 = v15;
    v14();
    swift_release(v16);
    v17 = *(_QWORD *)(v59 + 112);
    v18 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)v17 + 400);
    swift_retain(v17);
    v19 = v18(v66);
    v21 = v20;
    v22 = *v20;
    v1 = v20[1];
    v23 = (uint64_t *)v20[2];
    v24 = type metadata accessor for WorldLine(0);
    v25 = swift_dynamicCastClass(v12, v24);
    v26 = &unk_1003BB870;
    if (!v25)
    {
      v27 = type metadata accessor for WorldRectangle(0);
      v28 = swift_dynamicCastClass(v12, v27);
      v26 = &unk_1003BB848;
      if (!v28)
      {
        v29 = type metadata accessor for WorldPerson(0);
        v30 = swift_dynamicCastClass(v12, v29);
        v26 = &unk_1003BB820;
        if (!v30)
          goto LABEL_68;
      }
    }
    v63 = (void (*)(_BYTE *, _QWORD, __n128))v19;
    KeyPath = swift_getKeyPath(v26);
    v61 = (void (*)(unint64_t *, _QWORD))swift_modifyAtWritableKeyPath(&v64, v21);
    v23 = v31;
    v32 = *v31;
    if ((unint64_t)*v31 >> 62)
    {
      if (v32 < 0)
        v48 = *v31;
      else
        v48 = v32 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v31);
      v1 = _CocoaArrayWrapper.endIndex.getter(v48);
      swift_bridgeObjectRelease(v32);
      if (!v1)
        goto LABEL_7;
    }
    else
    {
      v1 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v1)
        goto LABEL_7;
    }
    v60 = v32 & 0xC000000000000001;
    if ((v32 & 0xC000000000000001) != 0)
    {
      v22 = v1;
      v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v32);
    }
    else
    {
      if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_56;
      v22 = v1;
      v33 = *(id *)(v32 + 32);
    }
    v34 = v33;
    v1 = type metadata accessor for MeasureObject(0);
    v35 = static NSObject.== infix(_:_:)(v34, v12);

    v36 = 0;
    if ((v35 & 1) == 0)
      break;
LABEL_21:
    v1 = *v23;
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v23);
    *v23 = v1;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v1 < 0 || (v1 & 0x4000000000000000) != 0)
    {
      v1 = sub_10002874C(v1);
      *v23 = v1;
    }
    v4 = v1 & 0xFFFFFFFFFFFFFF8;
    v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v36 >= v5)
      goto LABEL_57;
    v6 = v5 - 1;
    v7 = v4 + 8 * v36;
    v8 = *(void **)(v7 + 32);
    v9 = memmove((void *)(v7 + 32), (const void *)(v7 + 40), 8 * (v5 - 1 - v36));
    *(_QWORD *)((*v23 & 0xFFFFFFFFFFFFF8) + 0x10) = v6;
    v1 = (uint64_t)v23;
    specialized Array._endMutation()(v9);

LABEL_7:
    v61(&v64, 0);
    v10 = swift_release(KeyPath);
    v63(v66, 0, v10);

    swift_release(v17);
    if (v3 == v57)
      return swift_bridgeObjectRelease(v56);
  }
  if (v22 == 1)
    goto LABEL_7;
  if (v60)
  {
    v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v32);
  }
  else
  {
    if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
      goto LABEL_61;
    v38 = *(id *)(v32 + 40);
  }
  v39 = v38;
  v40 = static NSObject.== infix(_:_:)(v38, v12);

  if ((v40 & 1) != 0)
  {
    v36 = 1;
    goto LABEL_21;
  }
  if (v22 == 2)
    goto LABEL_7;
  v54 = v22;
  if (v60)
  {
    v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2, v32);
LABEL_37:
    v42 = v41;
    v43 = static NSObject.== infix(_:_:)(v41, v12);

    if ((v43 & 1) == 0)
    {
      v44 = 2;
      while (1)
      {
        v36 = v44 + 1;
        if (__OFADD__(v44, 1))
          goto LABEL_58;
        if (v36 == v54)
          goto LABEL_7;
        if (v60)
        {
          v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v44 + 1, v32);
        }
        else
        {
          if ((v36 & 0x8000000000000000) != 0)
            goto LABEL_59;
          if (v36 >= *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_60;
          v45 = *(id *)(v32 + 32 + 8 * v36);
        }
        v46 = v45;
        v47 = static NSObject.== infix(_:_:)(v45, v12);

        ++v44;
        if ((v47 & 1) != 0)
          goto LABEL_21;
      }
    }
    v36 = 2;
    goto LABEL_21;
  }
  if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
  {
    v41 = *(id *)(v32 + 48);
    goto LABEL_37;
  }
  __break(1u);
LABEL_68:
  v64 = 0;
  v65 = 0xE000000000000000;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v23);
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease(v65);
  v64 = 0xD00000000000001CLL;
  v65 = 0x80000001003DB0D0;
  ObjectType = swift_getObjectType(v12);
  v52._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  object = v52._object;
  String.append(_:)(v52);
  swift_bridgeObjectRelease(object);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v64, v65, "Measure/Measurements.swift", 26, 2, 129, 0);
  __break(1u);
  return result;
}

void sub_1001A22EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int64_t i;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void (*v12)(_QWORD *__return_ptr, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  void (*v41)(void);
  uint64_t (*v42)(_QWORD *, __n128);
  __n128 v43;
  void (*v44)(_QWORD *, _QWORD, __n128);
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_QWORD *, _QWORD);
  id v51;
  __n128 v52;
  void (*v53)(_QWORD *__return_ptr, __n128);
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t (*v59)(void);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t (*v73)(_QWORD *, __n128);
  __n128 v74;
  void (*v75)(_QWORD *, _QWORD, __n128);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  __n128 v80;
  void (*v81)(void);
  uint64_t v82;
  void (*v83)(_QWORD *, __n128);
  __n128 v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int64_t v102;
  uint64_t v104;
  uint64_t v105;
  int64_t v106;
  uint64_t v107;
  _QWORD v108[4];
  _QWORD v109[4];

  v101 = a1 + 56;
  v1 = 1 << *(_BYTE *)(a1 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(a1 + 56);
  v102 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  for (i = 0; ; i = v106)
  {
    if (v3)
    {
      v105 = (v3 - 1) & v3;
      v106 = i;
      v5 = __clz(__rbit64(v3)) | (i << 6);
      goto LABEL_23;
    }
    v6 = i + 1;
    if (__OFADD__(i, 1))
      goto LABEL_104;
    if (v6 >= v102)
    {
LABEL_102:
      swift_release();
      return;
    }
    v7 = *(_QWORD *)(v101 + 8 * v6);
    v8 = i + 1;
    if (!v7)
    {
      v8 = i + 2;
      if (i + 2 >= v102)
        goto LABEL_102;
      v7 = *(_QWORD *)(v101 + 8 * v8);
      if (!v7)
      {
        v8 = i + 3;
        if (i + 3 >= v102)
          goto LABEL_102;
        v7 = *(_QWORD *)(v101 + 8 * v8);
        if (!v7)
          break;
      }
    }
LABEL_22:
    v105 = (v7 - 1) & v7;
    v106 = v8;
    v5 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_23:
    v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v5);
    v11 = v10[1];
    v107 = *v10;
    v12 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v104 + 112) + 144);
    swift_bridgeObjectRetain(v11);
    v13 = swift_retain();
    v12(v109, v13);
    swift_release();
    v15 = v109[0];
    v14 = v109[1];
    v16 = v109[2];
    v108[0] = v109[0];
    swift_bridgeObjectRetain(v109[0]);
    v17 = sub_10000EDC8(&qword_10047C018);
    v18 = sub_10000EDC8(&qword_10047C020);
    swift_dynamicCast(v109, v108, v17, v18, 7);
    v19 = v109[0];
    if (v109[0] >> 62)
    {
      if (v109[0] < 0)
        v93 = v109[0];
      else
        v93 = v109[0] & 0xFFFFFFFFFFFFFF8;
      v94 = type metadata accessor for MeasureObject(0);
      swift_bridgeObjectRetain(v19);
      v21 = _bridgeCocoaArray<A>(_:)(v93, v94);
      swift_bridgeObjectRelease(v19);
    }
    else
    {
      swift_bridgeObjectRetain(v109[0]);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v20);
      type metadata accessor for MeasureObject(0);
      v21 = v19;
    }
    swift_bridgeObjectRelease(v19);
    v108[0] = v14;
    swift_bridgeObjectRetain(v14);
    v22 = sub_10000EDC8(&qword_10047D030);
    swift_dynamicCast(v109, v108, v17, v22, 7);
    v23 = v109[0];
    if (v109[0] >> 62)
    {
      if (v109[0] < 0)
        v95 = v109[0];
      else
        v95 = v109[0] & 0xFFFFFFFFFFFFFF8;
      v96 = type metadata accessor for MeasureObject(0);
      swift_bridgeObjectRetain(v23);
      v25 = _bridgeCocoaArray<A>(_:)(v95, v96);
      swift_bridgeObjectRelease(v23);
    }
    else
    {
      swift_bridgeObjectRetain(v109[0]);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v24);
      type metadata accessor for MeasureObject(0);
      v25 = v23;
    }
    swift_bridgeObjectRelease(v23);
    v109[0] = v21;
    sub_1001001A4(v25);
    v26 = v109[0];
    if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
    {
      v108[0] = v16;
      swift_bridgeObjectRetain(v16);
      v27 = sub_10000EDC8(&qword_10047E450);
      swift_dynamicCast(v109, v108, v17, v27, 7);
      v28 = v109[0];
      if (v109[0] >> 62)
      {
        if (v109[0] < 0)
          v97 = v109[0];
        else
          v97 = v109[0] & 0xFFFFFFFFFFFFFF8;
        v98 = type metadata accessor for MeasureObject(0);
        swift_bridgeObjectRetain(v28);
        v30 = _bridgeCocoaArray<A>(_:)(v97, v98);
        swift_bridgeObjectRelease(v28);
      }
      else
      {
        swift_bridgeObjectRetain(v109[0]);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v29);
        type metadata accessor for MeasureObject(0);
        v30 = v28;
      }
      swift_bridgeObjectRelease(v28);
      v109[0] = v26;
      sub_1001001A4(v30);
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v15);
      v26 = v109[0];
      if (!(v109[0] >> 62))
      {
LABEL_36:
        v32 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v26);
        goto LABEL_37;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v15);
      if (!((unint64_t)v26 >> 62))
        goto LABEL_36;
    }
    if (v26 < 0)
      v31 = v26;
    else
      v31 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v26);
    v32 = _CocoaArrayWrapper.endIndex.getter(v31);
LABEL_37:
    if (!v32)
      goto LABEL_4;
    if ((v26 & 0xC000000000000001) != 0)
      v33 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v26);
    else
      v33 = *(id *)(v26 + 32);
    v34 = v33;
    v35 = (*(uint64_t (**)(void))((swift_isaMask & *v33) + 0xB8))();
    v37 = v36;
    if (v35 == v107 && v36 == v11)
    {
LABEL_42:
      swift_bridgeObjectRelease(v26);
      v38 = v11;
    }
    else
    {
      v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, v107, v11, 0);
      swift_bridgeObjectRelease(v37);
      if ((v39 & 1) == 0)
      {

        if (v32 != 1)
        {
          v64 = 5;
          while (1)
          {
            v65 = (v26 & 0xC000000000000001) != 0
                ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v64 - 4, v26)
                : *(id *)(v26 + 8 * v64);
            v34 = v65;
            v66 = v64 - 3;
            if (__OFADD__(v64 - 4, 1))
              break;
            v67 = (*(uint64_t (**)(void))((swift_isaMask & *v65) + 0xB8))();
            if (v67 == v107 && v68 == v11)
              goto LABEL_42;
            v70 = v68;
            v71 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v68, v107, v11, 0);
            swift_bridgeObjectRelease(v70);
            if ((v71 & 1) != 0)
              goto LABEL_44;

            ++v64;
            if (v66 == v32)
              goto LABEL_4;
          }
          __break(1u);
LABEL_104:
          __break(1u);
          goto LABEL_105;
        }
LABEL_4:
        swift_bridgeObjectRelease_n(v26, 2);
LABEL_5:
        swift_bridgeObjectRelease(v11);
        goto LABEL_6;
      }
LABEL_44:
      v38 = v26;
    }
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v38);
    v40 = type metadata accessor for WorldRectangle(0);
    if (!swift_dynamicCastClass(v34, v40))
      goto LABEL_83;
    v41 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v34) + 0x178))();
    v41();
    swift_release();
    v42 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)(v104 + 112) + 400);
    v43 = swift_retain();
    v44 = (void (*)(_QWORD *, _QWORD, __n128))v42(v109, v43);
    v46 = v45;
    v47 = *v45;
    v48 = v45[1];
    v49 = v45[2];
    swift_bridgeObjectRetain(*v45);
    swift_bridgeObjectRetain(v48);
    swift_bridgeObjectRetain(v49);
    sub_1001C7B38((uint64_t)v34);
    swift_bridgeObjectRelease(v49);
    swift_bridgeObjectRelease(v48);
    swift_bridgeObjectRelease(v47);
    v50 = (void (*)(_QWORD *, _QWORD))swift_modifyAtWritableKeyPath(v108, v46);
    sub_10005B8A8((uint64_t)v34);

    v50(v108, 0);
    v52 = swift_release();
    v44(v109, 0, v52);
    swift_release();
    v53 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v104 + 88) + 144);
    v54 = swift_retain();
    v53(v109, v54);
    swift_release();
    v55 = v109[0];
    if (v109[0] >> 62)
    {
      if (v109[0] < 0)
        v99 = v109[0];
      else
        v99 = v109[0] & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v109[0]);
      v56 = _CocoaArrayWrapper.endIndex.getter(v99);
    }
    else
    {
      v56 = *(_QWORD *)((v109[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v109[0]);
    }
    if (!v56)
      goto LABEL_82;
    if ((v55 & 0xC000000000000001) != 0)
      v57 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v55);
    else
      v57 = *(id *)(v55 + 32);
    v58 = v57;
    v59 = *(uint64_t (**)(void))((swift_isaMask & *v57) + 0xB8);
    v60 = v59();
    v62 = v61;
    if (v60 != v107 || v61 != v11)
    {
      v72 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v61, v107, v11, 0);
      swift_bridgeObjectRelease(v62);
      if ((v72 & 1) != 0)
      {
LABEL_68:
        v63 = v55;
        goto LABEL_69;
      }

      if (v56 != 1)
      {
        v85 = 5;
        v100 = v56;
        while (1)
        {
          v86 = (v55 & 0xC000000000000001) != 0
              ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v85 - 4, v55)
              : *(id *)(v55 + 8 * v85);
          v58 = v86;
          v87 = v85 - 3;
          if (__OFADD__(v85 - 4, 1))
            break;
          v59 = *(uint64_t (**)(void))((swift_isaMask & *v86) + 0xB8);
          v88 = v59();
          if (v88 == v107 && v89 == v11)
            goto LABEL_53;
          v91 = v89;
          v92 = _stringCompareWithSmolCheck(_:_:expecting:)(v88, v89, v107, v11, 0);
          swift_bridgeObjectRelease(v91);
          if ((v92 & 1) != 0)
            goto LABEL_68;

          ++v85;
          if (v87 == v100)
            goto LABEL_82;
        }
LABEL_105:
        __break(1u);
        goto LABEL_106;
      }
LABEL_82:
      swift_bridgeObjectRelease_n(v55, 2);
LABEL_83:

      goto LABEL_5;
    }
LABEL_53:
    swift_bridgeObjectRelease(v55);
    v63 = v11;
LABEL_69:
    swift_bridgeObjectRelease(v55);
    swift_bridgeObjectRelease(v63);
    swift_bridgeObjectRelease(v11);
    v73 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)(v104 + 88) + 400);
    v74 = swift_retain();
    v75 = (void (*)(_QWORD *, _QWORD, __n128))v73(v109, v74);
    v76 = v59();
    v78 = v77;
    sub_100028000(v76, v77);
    v79 = swift_bridgeObjectRelease(v78);
    v75(v109, 0, v79);
    v80 = swift_release();
    v81 = (void (*)(void))(*(uint64_t (**)(__n128))((swift_isaMask & *v58) + 0x178))(v80);
    v81();
    swift_release();
    v82 = *(_QWORD *)(v104 + 120);
    v109[0] = 0xC000000000000008;
    v83 = *(void (**)(_QWORD *, __n128))(*(_QWORD *)v82 + 392);
    v84 = swift_retain();
    v83(v109, v84);

    swift_release();
LABEL_6:
    v3 = v105;
  }
  v9 = i + 4;
  if (i + 4 >= v102)
    goto LABEL_102;
  v7 = *(_QWORD *)(v101 + 8 * v9);
  if (v7)
  {
    v8 = i + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v8 >= v102)
      goto LABEL_102;
    v7 = *(_QWORD *)(v101 + 8 * v8);
    ++v9;
    if (v7)
      goto LABEL_22;
  }
LABEL_106:
  __break(1u);
}

uint64_t sub_1001A2C28(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void (*v4)(_QWORD *__return_ptr, __n128);
  id v5;
  __n128 v6;
  _QWORD v7[3];

  v1 = result;
  if (qword_10047A930 != -1)
    result = swift_once(&qword_10047A930, sub_100083368);
  if (!qword_1004AF238)
  {
    __break(1u);
    JUMPOUT(0x1001A2E20);
  }
  v2 = *(_QWORD *)(qword_1004AF238 + 24);
  if (v2)
  {
    v3 = *(void **)(v2 + qword_100484D78);
    v7[1] = 2895028208;
    v7[2] = 0xA400000000000000;
    v4 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v1 + 120) + 144);
    v5 = v3;
    v6 = swift_retain();
    v4(v7, v6);
    swift_release();
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1001A2E40()
{
  uint64_t *v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1001A3010(v0[19], v0[20], v0[21]);
}

uint64_t *sub_1001A2EB8(uint64_t a1)
{
  uint64_t *v1;

  v1 = (uint64_t *)StateObserver.deinit(a1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1001A3010(v1[19], v1[20], v1[21]);
  return v1;
}

uint64_t sub_1001A2F48(uint64_t a1)
{
  uint64_t *v1;

  v1 = sub_1001A2EB8(a1);
  return swift_deallocClassInstance(v1, 216, 7);
}

uint64_t type metadata accessor for MeasurementsStateReducer(uint64_t a1)
{
  uint64_t result;

  result = qword_100489658;
  if (!qword_100489658)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MeasurementsStateReducer);
  return result;
}

uint64_t sub_1001A2FA0(uint64_t a1)
{
  _QWORD v2[13];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[9] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[10] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[11] = "8";
  v2[12] = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_initClassMetadata2(a1, 256, 13, v2, a1 + 208);
}

uint64_t sub_1001A3010(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a3);
  }
  return result;
}

void sub_1001A3048()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD *__return_ptr, uint64_t);
  uint64_t v3;
  _QWORD v4[5];

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v1 + 144);
  v3 = swift_retain(v1);
  v2(v4, v3);
  swift_release(v1);
  __asm { BR              X10 }
}

uint64_t sub_1001A30B0(unint64_t a1)
{
  sub_10001A810(a1);
  return 0;
}

uint64_t sub_1001A3C44()
{
  uint64_t v0;
  void *v1;
  void (*v2)(unint64_t *__return_ptr, __n128);
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t (*v11)(void);
  uint64_t (*v12)(void);
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  void *v25;
  __n128 v26;
  _QWORD *v27;
  void (*v29)(void);
  uint64_t (*v30)(unint64_t *, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  char v47;
  unint64_t v48;
  int isUniquelyReferenced_nonNull_bridgeObject;
  id v50;
  void *v51;
  char v52;
  id v53;
  void *v54;
  char v55;
  id v56;
  void *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t result;
  uint64_t ObjectType;
  Swift::String v65;
  void *object;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  void (*v72)(unint64_t *, _QWORD);
  void (*v73)(unint64_t *, _QWORD, __n128);
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v2 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(v0 + 112) + 144);
  v3 = swift_retain();
  v2(&v76, v3);
  swift_release();
  v4 = v76;
  v5 = v77;
  i = v78;
  v7 = sub_1001C70BC(v76, v77, v78);
  swift_bridgeObjectRelease(i);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  v76 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v7 >> 62)
    goto LABEL_78;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  if (!v8)
  {
    swift_bridgeObjectRelease(v7);
    v7 = (uint64_t)_swiftEmptyArrayStorage;
    v68 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_82;
LABEL_18:
    if ((v7 & 0x4000000000000000) == 0)
    {
      v17 = *(_QWORD *)(v7 + 16);
      swift_retain();
      v69 = v17;
      if (!v17)
        return swift_release_n(v68, 2);
      goto LABEL_20;
    }
LABEL_82:
    swift_retain();
    swift_bridgeObjectRetain(v60);
    v62 = _CocoaArrayWrapper.endIndex.getter(v61);
    swift_release();
    v69 = v62;
    if (!v62)
      return swift_release_n(v68, 2);
LABEL_20:
    v18 = 0;
    while (1)
    {
      if ((v68 & 0xC000000000000001) != 0)
        v27 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v68);
      else
        v27 = *(id *)(v68 + 32 + 8 * v18);
      v1 = v27;
      if (__OFADD__(v18++, 1))
      {
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      v29 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v27) + 0x178))();
      v29();
      swift_release();
      v30 = *(uint64_t (**)(unint64_t *, __n128))(**(_QWORD **)(v70 + 112) + 400);
      v31 = swift_retain();
      v32 = v30(&v76, v31);
      v34 = v33;
      i = *v33;
      v4 = v33[1];
      v7 = v33[2];
      v35 = type metadata accessor for WorldLine(0);
      v36 = swift_dynamicCastClass(v1, v35);
      v37 = &unk_1003BB870;
      if (!v36)
      {
        v38 = type metadata accessor for WorldRectangle(0);
        v39 = swift_dynamicCastClass(v1, v38);
        v37 = &unk_1003BB848;
        if (!v39)
        {
          v40 = type metadata accessor for WorldPerson(0);
          v41 = swift_dynamicCastClass(v1, v40);
          v37 = &unk_1003BB820;
          if (!v41)
            goto LABEL_86;
        }
      }
      v73 = (void (*)(unint64_t *, _QWORD, __n128))v32;
      swift_getKeyPath(v37);
      v72 = (void (*)(unint64_t *, _QWORD))swift_modifyAtWritableKeyPath(&v74, v34);
      v7 = (uint64_t)v42;
      v43 = *v42;
      if ((unint64_t)*v42 >> 62)
      {
        if (v43 < 0)
          v59 = *v42;
        else
          v59 = v43 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v42);
        v44 = _CocoaArrayWrapper.endIndex.getter(v59);
        swift_bridgeObjectRelease(v43);
        if (!v44)
          goto LABEL_24;
      }
      else
      {
        v44 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v44)
          goto LABEL_24;
      }
      v71 = v43 & 0xC000000000000001;
      if ((v43 & 0xC000000000000001) != 0)
      {
        i = v44;
        v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v43);
      }
      else
      {
        if (!*(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_72;
        i = v44;
        v45 = *(id *)(v43 + 32);
      }
      v46 = v45;
      v4 = type metadata accessor for MeasureObject(0);
      v47 = static NSObject.== infix(_:_:)(v46, v1);

      v48 = 0;
      if ((v47 & 1) == 0)
      {
        if (i == 1)
          goto LABEL_24;
        if (v71)
        {
          v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v43);
        }
        else
        {
          if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
            goto LABEL_77;
          v50 = *(id *)(v43 + 40);
        }
        v51 = v50;
        v52 = static NSObject.== infix(_:_:)(v50, v1);

        if ((v52 & 1) != 0)
        {
          v48 = 1;
        }
        else
        {
          if (i == 2)
            goto LABEL_24;
          v67 = i;
          if (v71)
          {
            v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2, v43);
          }
          else
          {
            if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
              goto LABEL_85;
            v53 = *(id *)(v43 + 48);
          }
          v54 = v53;
          v55 = static NSObject.== infix(_:_:)(v53, v1);

          if ((v55 & 1) == 0)
          {
            i = 2;
            while (1)
            {
              v48 = i + 1;
              if (__OFADD__(i, 1))
                break;
              if (v48 == v67)
                goto LABEL_24;
              if (v71)
              {
                v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, v43);
              }
              else
              {
                if ((v48 & 0x8000000000000000) != 0)
                  goto LABEL_75;
                if (v48 >= *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_76;
                v56 = *(id *)(v43 + 32 + 8 * v48);
              }
              v57 = v56;
              v58 = static NSObject.== infix(_:_:)(v56, v1);

              ++i;
              if ((v58 & 1) != 0)
                goto LABEL_38;
            }
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
LABEL_78:
            if (v7 < 0)
              v4 = v7;
            else
              v4 = v7 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v7);
            v8 = _CocoaArrayWrapper.endIndex.getter(v4);
            swift_bridgeObjectRelease(v7);
            goto LABEL_3;
          }
          v48 = 2;
        }
      }
LABEL_38:
      v19 = *(_QWORD *)v7;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*(_QWORD *)v7);
      *(_QWORD *)v7 = v19;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v19 < 0 || (v19 & 0x4000000000000000) != 0)
      {
        v19 = sub_10002874C(v19);
        *(_QWORD *)v7 = v19;
      }
      v20 = v19 & 0xFFFFFFFFFFFFFF8;
      v21 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v48 >= v21)
        goto LABEL_73;
      v22 = v21 - 1;
      v23 = v20 + 8 * v48;
      v24 = *(void **)(v23 + 32);
      v25 = memmove((void *)(v23 + 32), (const void *)(v23 + 40), 8 * (v21 - 1 - v48));
      *(_QWORD *)((*(_QWORD *)v7 & 0xFFFFFFFFFFFFF8) + 0x10) = v22;
      specialized Array._endMutation()(v25);

LABEL_24:
      v72(&v74, 0);
      v26 = swift_release();
      v73(&v76, 0, v26);

      swift_release();
      if (v18 == v69)
        return swift_release_n(v68, 2);
    }
  }
  if (v8 >= 1)
  {
    for (i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
        v9 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
      else
        v9 = *(id *)(v7 + 8 * i + 32);
      v10 = v9;
      v11 = *(uint64_t (**)(void))((swift_isaMask & *v9) + 0xD0);
      if (v11() == 5
        || v11() == 9
        || (v12 = (uint64_t (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v10) + 0x100))(),
            v13 = v12(),
            swift_release(),
            (v13 & 1) != 0))
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
        v15 = *(_QWORD *)(v76 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
        v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v10);
        specialized ContiguousArray._endMutation()(v16);
      }
    }
    swift_bridgeObjectRelease(v7);
    v7 = v76;
    v68 = v76;
    if ((v76 & 0x8000000000000000) != 0)
      goto LABEL_82;
    goto LABEL_18;
  }
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  v74 = 0;
  v75 = 0xE000000000000000;
  swift_bridgeObjectRetain(i);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v7);
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease(v75);
  v74 = 0xD00000000000001CLL;
  v75 = 0x80000001003DB0D0;
  ObjectType = swift_getObjectType(v1);
  v65._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  object = v65._object;
  String.append(_:)(v65);
  swift_bridgeObjectRelease(object);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v74, v75, "Measure/Measurements.swift", 26, 2, 129, 0);
  __break(1u);
  return result;
}

void sub_1001A4320()
{
  uint64_t v0;
  void (*v1)(uint64_t *__return_ptr, __n128);
  __n128 v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t *__return_ptr, __n128))(**(_QWORD **)(v0 + 120) + 144);
  v2 = swift_retain();
  v1(&v3, v2);
  swift_release();
  __asm { BR              X10 }
}

void sub_1001A437C()
{
  unint64_t v0;
  void *v1;
  void *v2;

  sub_1001A6170();
  if (v1)
  {
    v2 = v1;
    type metadata accessor for MeasureObject(0);
    if ((static NSObject.== infix(_:_:)(v2, v0) & 1) == 0)
      sub_1001A6364((uint64_t)v2);

  }
  sub_10001A810(v0);
}

void sub_1001A440C()
{
  uint64_t v0;
  __int128 v1;
  void *v2;
  void *v3;

  *((_QWORD *)&v1 + 1) = v0;
  *(_QWORD *)&v1 = v0 + 0x4000000000000000;
  if ((unint64_t)(v1 >> 3) < 2)
  {
    sub_1001A6170();
    if (v2)
    {
      v3 = v2;
      swift_retain();
      sub_1001A6364((uint64_t)v3);
      swift_release();

    }
  }
  JUMPOUT(0x1001A43F8);
}

void sub_1001A4454(char a1)
{
  _QWORD **v1;
  uint64_t v2;
  void (*v4)(uint64_t *__return_ptr, __n128);
  __n128 v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t (*v9)(void);
  _QWORD *v10;
  uint64_t (*v11)(double, double);
  void (*v12)(uint64_t *__return_ptr, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  __n128 v19;
  void (*v20)(uint64_t *__return_ptr, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  void (*v31)(void);
  uint64_t (*v32)(uint64_t *, __n128);
  __n128 v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_BYTE *, _QWORD);
  id v40;
  __n128 v41;
  void (*v42)(uint64_t *__return_ptr, __n128);
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t i;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  void *v53;
  uint64_t (*v54)(uint64_t *, __n128);
  __n128 v55;
  void (*v56)(uint64_t *, _QWORD);
  void (*v57)(uint64_t *__return_ptr, __n128);
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t (*v63)(uint64_t *, __n128);
  __n128 v64;
  void (*v65)(uint64_t *, _QWORD, __n128);
  uint64_t *v66;
  unint64_t v67;
  __n128 v68;
  uint64_t v69;
  void (*v70)(uint64_t *, __n128);
  __n128 v71;
  uint64_t (*v72)(void);
  void (*v73)(void);
  uint64_t (*v74)(uint64_t *, __n128);
  __n128 v75;
  void (*v76)(uint64_t *, _QWORD, __n128);
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t *, _QWORD);
  id v83;
  __n128 v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(void);
  uint64_t (*v89)(uint64_t *, __n128);
  __n128 v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t *, _QWORD);
  id v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  void *v103;
  void (*v104)(void);
  uint64_t v105;
  void (*v106)(void);
  uint64_t (*v107)(uint64_t *, __n128);
  __n128 v108;
  void (*v109)(uint64_t *, _QWORD, __n128);
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(_BYTE *, _QWORD);
  id v116;
  __n128 v117;
  void (*v118)(uint64_t *, _QWORD, __n128);
  void (*v119)(uint64_t *, _QWORD, __n128);
  uint64_t __src[64];
  _BYTE v121[32];
  uint64_t __dst[66];

  v2 = (uint64_t)v1;
  v4 = *(void (**)(uint64_t *__return_ptr, __n128))(*v1[15] + 144);
  v5 = swift_retain();
  v4(__dst, v5);
  swift_release();
  v6 = __dst[0];
  sub_10000EDC8(&qword_1004897B8);
  switch(a1)
  {
    case 3:
      if (qword_10047A930 != -1)
        swift_once(&qword_10047A930, sub_100083368);
      if (!qword_1004AF278)
      {
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
        JUMPOUT(0x1001A53B4);
      }
      swift_retain();
      swift_retain();
      StateValue.wrappedValue.getter(__src, v7);
      swift_release();
      memcpy(__dst, __src, 0x200uLL);
      sub_1000F52B0((uint64_t)_swiftEmptyArrayStorage, __dst);
      sub_100012C00((uint64_t)__dst);
      swift_release();
      sub_1001A3048();
      sub_1001A3C44();
      sub_1001A4320();
LABEL_64:
      sub_10001A810(v6);
      return;
    case 4:
      __asm { BR              X10 }
      return;
    case 5:
      if (v6 >> 62)
        goto LABEL_64;
      v9 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v6) + 0x118);
      v10 = (id)v6;
      v11 = (uint64_t (*)(double, double))v9();
      v12 = *(void (**)(uint64_t *__return_ptr, __n128))(*v1[13] + 144);
      v13 = swift_retain();
      v12(__dst, v13);
      swift_release();
      v14 = __dst[0];
      v15 = __dst[1];
      v16 = *(double *)&__dst[5];
      v17 = *(double *)&__dst[6];
      swift_bridgeObjectRelease(__dst[2]);
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v14);
      LOBYTE(v14) = v11(v16, v17);
      swift_release();
      if ((v14 & 1) != 0)
        sub_1001A5DC8(v10);
      goto LABEL_40;
    case 6:
      v8 = v6 >> 62;
      if (!(v6 >> 62))
      {
        v72 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v6) + 0x178);
        v10 = (id)v6;
        v73 = (void (*)(void))v72();
        v73();
        swift_release();
        v74 = *(uint64_t (**)(uint64_t *, __n128))(*v1[14] + 400);
        v75 = swift_retain();
        v76 = (void (*)(uint64_t *, _QWORD, __n128))v74(__dst, v75);
        v78 = v77;
        v79 = *v77;
        v80 = v77[1];
        v81 = v77[2];
        swift_bridgeObjectRetain(*v77);
        swift_bridgeObjectRetain(v80);
        swift_bridgeObjectRetain(v81);
        sub_1001C7B38((uint64_t)v10);
        swift_bridgeObjectRelease(v81);
        swift_bridgeObjectRelease(v80);
        swift_bridgeObjectRelease(v79);
        v82 = (void (*)(uint64_t *, _QWORD))swift_modifyAtWritableKeyPath(__src, v78);
        sub_10005B8A8((uint64_t)v10);

        v82(__src, 0);
        v84 = swift_release();
        v76(__dst, 0, v84);
        swift_release();
        sub_1001A53EC(v2, 6);
LABEL_40:
        sub_10001A810(v6);
        sub_10001A810(v6);

        return;
      }
      if ((_DWORD)v8 == 1)
        goto LABEL_64;
      if ((_DWORD)v8 == 3)
      {
LABEL_9:
        if (v6 == 0xC000000000000000)
          return;
      }
      sub_1001A53EC((uint64_t)v1, a1);
      goto LABEL_64;
    case 7:
      goto LABEL_9;
    case 8:
      if (v6 == 0xC000000000000000)
        return;
      v20 = *(void (**)(uint64_t *__return_ptr, __n128))(*v1[14] + 144);
      sub_100068AC4(v6);
      v21 = swift_retain();
      v20(__dst, v21);
      swift_release();
      v22 = __dst[0];
      v23 = __dst[1];
      v24 = __dst[2];
      v25 = sub_1001C6834(1, __dst[0], __dst[1], __dst[2]);
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease(v22);
      if (!v25)
      {
        sub_10001A810(v6);
        goto LABEL_64;
      }
      v26 = type metadata accessor for WorldLine(0);
      if (!swift_dynamicCastClass(v25, v26))
      {
        v86 = type metadata accessor for WorldRectangle(0);
        v87 = swift_dynamicCastClass(v25, v86);
        if (v87)
        {
          v88 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v25) + 0x178))();
          v88();
          swift_release();
          v89 = *(uint64_t (**)(uint64_t *, __n128))(**(_QWORD **)(v2 + 112) + 400);
          v90 = swift_retain();
          v119 = (void (*)(uint64_t *, _QWORD, __n128))v89(__dst, v90);
          v92 = v91;
          v93 = *v91;
          v94 = v91[1];
          v95 = v91[2];
          swift_bridgeObjectRetain(*v91);
          swift_bridgeObjectRetain(v94);
          swift_bridgeObjectRetain(v95);
          sub_1001C7B38((uint64_t)v25);
          swift_bridgeObjectRelease(v95);
          swift_bridgeObjectRelease(v94);
          swift_bridgeObjectRelease(v93);
          v96 = (void (*)(uint64_t *, _QWORD))swift_modifyAtWritableKeyPath(__src, v92);
          sub_10005B8A8((uint64_t)v25);

          v96(__src, 0);
          v98 = swift_release();
          v119(__dst, 0, v98);
          swift_release();
        }
        goto LABEL_60;
      }
      if (qword_10047A930 != -1)
        swift_once(&qword_10047A930, sub_100083368);
      if (!qword_1004AF278)
        goto LABEL_68;
      v27 = sub_10000EDC8(&qword_10047E508);
      v28 = swift_allocObject(v27, 33, 7);
      *(_OWORD *)(v28 + 16) = xmmword_1003B0BD0;
      *(_BYTE *)(v28 + 32) = 8;
      swift_retain();
      swift_retain();
      StateValue.wrappedValue.getter(__src, v29);
      swift_release();
      memcpy(__dst, __src, 0x200uLL);
      sub_1000F52B0(v28, __dst);
      sub_100012C00((uint64_t)__dst);
      swift_setDeallocating(v28);
      swift_deallocClassInstance(v28, 32, 7);
      v30 = swift_release();
      v31 = (void (*)(void))(*(uint64_t (**)(__n128))((swift_isaMask & *v25) + 0x178))(v30);
      v31();
      swift_release();
      v32 = *(uint64_t (**)(uint64_t *, __n128))(**(_QWORD **)(v2 + 112) + 400);
      v33 = swift_retain();
      v118 = (void (*)(uint64_t *, _QWORD, __n128))v32(__src, v33);
      v35 = v34;
      v36 = *v34;
      v37 = v34[1];
      v38 = v34[2];
      swift_bridgeObjectRetain(*v34);
      swift_bridgeObjectRetain(v37);
      swift_bridgeObjectRetain(v38);
      sub_1001C7B38((uint64_t)v25);
      swift_bridgeObjectRelease(v38);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(v36);
      v39 = (void (*)(_BYTE *, _QWORD))swift_modifyAtWritableKeyPath(v121, v35);
      sub_10005B8A8((uint64_t)v25);

      v39(v121, 0);
      v41 = swift_release();
      v118(__src, 0, v41);
      swift_release();
      v42 = *(void (**)(uint64_t *__return_ptr, __n128))(**(_QWORD **)(v2 + 112) + 144);
      v43 = swift_retain();
      v42(__src, v43);
      swift_release();
      v44 = __src[0];
      v45 = __src[1];
      v46 = __src[2];
      v47 = sub_1001C70BC(__src[0], __src[1], __src[2]);
      swift_bridgeObjectRelease(v46);
      swift_bridgeObjectRelease(v45);
      swift_bridgeObjectRelease(v44);
      __src[0] = (uint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)v47 >> 62)
      {
        if (v47 < 0)
          v99 = v47;
        else
          v99 = v47 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v47);
        v48 = _CocoaArrayWrapper.endIndex.getter(v99);
        swift_bridgeObjectRelease(v47);
        if (v48)
          goto LABEL_25;
      }
      else
      {
        v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v48)
        {
LABEL_25:
          if (v48 < 1)
          {
            __break(1u);
            goto LABEL_62;
          }
          for (i = 0; i != v48; ++i)
          {
            if ((v47 & 0xC000000000000001) != 0)
              v52 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v47);
            else
              v52 = *(id *)(v47 + 8 * i + 32);
            v53 = v52;
            if ((*(uint64_t (**)(void))((swift_isaMask & *v52) + 0xD0))() == 9)
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(9);
              v50 = *(_QWORD *)(__src[0] + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v50);
              v51 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v53);
              specialized ContiguousArray._endMutation()(v51);
            }
            else
            {

            }
          }
          swift_bridgeObjectRelease(v47);
          v85 = __src[0];
LABEL_49:
          if ((v85 & 0x8000000000000000) != 0 || (v85 & 0x4000000000000000) != 0)
          {
            swift_retain();
            v100 = _CocoaArrayWrapper.endIndex.getter(v105);
            if (v100)
            {
LABEL_52:
              if (v100 >= 1)
              {
                v101 = 0;
                do
                {
                  if ((v85 & 0xC000000000000001) != 0)
                    v102 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v101, v85);
                  else
                    v102 = *(id *)(v85 + 8 * v101 + 32);
                  v103 = v102;
                  ++v101;
                  v104 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v102) + 0x160))();
                  v104();

                  swift_release();
                }
                while (v100 != v101);
                goto LABEL_59;
              }
LABEL_62:
              __break(1u);
              JUMPOUT(0x1001A5264);
            }
          }
          else
          {
            v100 = *(_QWORD *)(v85 + 16);
            swift_retain();
            if (v100)
              goto LABEL_52;
          }
LABEL_59:
          v87 = swift_release_n(v85, 2);
LABEL_60:
          v106 = (void (*)(void))(*(uint64_t (**)(uint64_t))((swift_isaMask & *v25) + 0x178))(v87);
          v106();
          swift_release();
          v107 = *(uint64_t (**)(uint64_t *, __n128))(**(_QWORD **)(v2 + 112) + 400);
          v108 = swift_retain();
          v109 = (void (*)(uint64_t *, _QWORD, __n128))v107(__src, v108);
          v111 = v110;
          v112 = *v110;
          v113 = v110[1];
          v114 = v110[2];
          swift_bridgeObjectRetain(*v110);
          swift_bridgeObjectRetain(v113);
          swift_bridgeObjectRetain(v114);
          sub_1001C7B38((uint64_t)v25);
          swift_bridgeObjectRelease(v114);
          swift_bridgeObjectRelease(v113);
          swift_bridgeObjectRelease(v112);
          v115 = (void (*)(_BYTE *, _QWORD))swift_modifyAtWritableKeyPath(v121, v111);
          sub_10005B8A8((uint64_t)v25);

          v115(v121, 0);
          v117 = swift_release();
          v109(__src, 0, v117);
          swift_release();
          sub_10001A810(v6);

          goto LABEL_64;
        }
      }
      swift_bridgeObjectRelease(v47);
      v85 = (unint64_t)_swiftEmptyArrayStorage;
      goto LABEL_49;
    case 9:
      v54 = *(uint64_t (**)(uint64_t *, __n128))(*v1[11] + 400);
      v55 = swift_retain();
      v56 = (void (*)(uint64_t *, _QWORD))v54(__dst, v55);
      sub_10002852C();
      v56(__dst, 0);
      swift_release();
      v57 = *(void (**)(uint64_t *__return_ptr, __n128))(*v1[14] + 144);
      v58 = swift_retain();
      v57(__dst, v58);
      swift_release();
      v59 = __dst[0];
      v60 = __dst[1];
      v61 = __dst[2];
      v62 = sub_1001C70BC(__dst[0], __dst[1], __dst[2]);
      swift_bridgeObjectRelease(v61);
      swift_bridgeObjectRelease(v60);
      swift_bridgeObjectRelease(v59);
      sub_1001A1DA0(v62);
      swift_bridgeObjectRelease(v62);
      v63 = *(uint64_t (**)(uint64_t *, __n128))(**(_QWORD **)(v2 + 112) + 400);
      v64 = swift_retain();
      v65 = (void (*)(uint64_t *, _QWORD, __n128))v63(__dst, v64);
      v67 = sub_1001C70BC(*v66, v66[1], v66[2]);
      sub_1001C73B0(v67);
      v68 = swift_bridgeObjectRelease(v67);
      v65(__dst, 0, v68);
      swift_release();
      if (qword_10047A930 != -1)
        swift_once(&qword_10047A930, sub_100083368);
      if (!qword_1004AF248)
        goto LABEL_67;
      swift_retain();
      sub_10010099C();
      swift_release();
      v69 = *(_QWORD *)(v2 + 120);
      __dst[0] = 0xC000000000000000;
      v70 = *(void (**)(uint64_t *, __n128))(*(_QWORD *)v69 + 392);
      v71 = swift_retain();
      v70(__dst, v71);
      sub_10001A810(v6);
LABEL_38:
      swift_release();
      return;
    default:
      v18 = swift_allocObject(&unk_10044AED0, 17, 7);
      *(_BYTE *)(v18 + 16) = a1;
      v19 = swift_retain();
      StateValue.mutateImmediatelyNotifyAsync(_:)(sub_10017DBCC, v18, v19);
      sub_10001A810(v6);
      swift_release();
      goto LABEL_38;
  }
}

void sub_1001A53EC(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[64];
  _QWORD __dst[64];

  swift_retain();
  StateValue.wrappedValue.getter(__dst, v3);
  swift_release();
  if (LOBYTE(__dst[0]) <= 1u)
  {
    if (qword_10047A930 != -1)
      swift_once(&qword_10047A930, sub_100083368);
    if (qword_1004AF278)
    {
      v4 = sub_10000EDC8(&qword_10047E508);
      v5 = swift_allocObject(v4, 33, 7);
      *(_OWORD *)(v5 + 16) = xmmword_1003B0BD0;
      *(_BYTE *)(v5 + 32) = a2;
      swift_retain();
      swift_retain();
      StateValue.wrappedValue.getter(v7, v6);
      swift_release();
      memcpy(__dst, v7, sizeof(__dst));
      sub_1000F52B0(v5, __dst);
      sub_100012C00((uint64_t)__dst);
      swift_setDeallocating(v5);
      swift_deallocClassInstance(v5, 32, 7);
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1001A551C(uint64_t a1)
{
  uint64_t v1;
  void (*v3)(unint64_t *__return_ptr, __n128);
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t j;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  BOOL v24;
  uint64_t (*v25)(__n128);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double *v31;
  void (*v32)(unint64_t *__return_ptr, __n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(unint64_t *__return_ptr, __n128);
  __n128 v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t i;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(unint64_t *, _QWORD);
  void *v53;
  __n128 v54;
  void (*v55)(void);
  uint64_t v56;
  void (*v57)(unint64_t *, __n128);
  __n128 v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t (*v61)(unint64_t *, __n128);
  __n128 v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  char v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  char v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  void (*v96)(unint64_t *, _QWORD);
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v3 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(v1 + 112) + 144);
  v4 = swift_retain();
  v3(&v97, v4);
  swift_release();
  v5 = v97;
  v6 = v98;
  v7 = v99;
  v8 = sub_1001C70BC(v97, v98, v99);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  v97 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v17 = v8;
    else
      v17 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v9 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(v8);
    if (v9)
      goto LABEL_3;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
    {
LABEL_3:
      if (v9 < 1)
      {
        __break(1u);
LABEL_65:
        if (v8 < 0)
          v48 = v8;
        else
          v48 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        v38 = _CocoaArrayWrapper.endIndex.getter(v48);
        swift_bridgeObjectRelease(v8);
        v39 = v94;
        if (!v38)
          goto LABEL_69;
LABEL_50:
        if (v38 >= 1)
        {
          for (i = 0; i != v38; ++i)
          {
            if ((v8 & 0xC000000000000001) != 0)
              v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
            else
              v43 = *(id *)(v8 + 8 * i + 32);
            v44 = v43;
            v45 = type metadata accessor for WorldLine(0);
            if (swift_dynamicCastClass(v44, v45))
            {

            }
            else
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(0);
              v41 = *(_QWORD *)(v97 + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v41);
              v42 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v44);
              specialized ContiguousArray._endMutation()(v42);
            }
          }
          swift_bridgeObjectRelease(v8);
          v46 = v97;
          goto LABEL_70;
        }
        __break(1u);
        return;
      }
      for (j = 0; j != v9; ++j)
      {
        if ((v8 & 0xC000000000000001) != 0)
          v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v8);
        else
          v13 = *(id *)(v8 + 8 * j + 32);
        v14 = v13;
        v15 = type metadata accessor for WorldLine(0);
        if (swift_dynamicCastClass(v14, v15))
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(0);
          v11 = *(_QWORD *)(v97 + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
          v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v14);
          specialized ContiguousArray._endMutation()(v12);
        }
      }
      swift_bridgeObjectRelease(v8);
      v16 = v97;
      v97 = (unint64_t)_swiftEmptyArrayStorage;
      if ((v16 & 0x8000000000000000) != 0)
        goto LABEL_43;
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease(v8);
  v16 = (unint64_t)_swiftEmptyArrayStorage;
  v97 = (unint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_43;
LABEL_19:
  if ((v16 & 0x4000000000000000) != 0)
    goto LABEL_43;
  v18 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain(a1);
  if (!v18)
    goto LABEL_44;
  do
  {
    v19 = 0;
    while (1)
    {
      if ((v16 & 0xC000000000000001) != 0)
      {
        v20 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v16);
      }
      else
      {
        if (v19 >= *(_QWORD *)(v16 + 16))
          goto LABEL_41;
        v20 = *(id *)(v16 + 32 + 8 * v19);
      }
      v23 = v20;
      v24 = __OFADD__(v19++, 1);
      if (v24)
        goto LABEL_42;
      if (!a1)
        goto LABEL_23;
      v25 = *(uint64_t (**)(__n128))((swift_isaMask & *v20) + 0xD0);
      v26 = swift_bridgeObjectRetain(a1);
      v27 = v25(v26);
      v28 = *(_QWORD *)(a1 + 16);
      if (!v28)
        goto LABEL_37;
      if (*(_QWORD *)(a1 + 32) != v27)
        break;
LABEL_22:
      swift_bridgeObjectRelease(a1);
LABEL_23:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
      v21 = *(_QWORD *)(v97 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
      v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v23);
      specialized ContiguousArray._endMutation()(v22);
LABEL_24:
      if (v19 == v18)
      {
        v31 = (double *)v97;
        goto LABEL_45;
      }
    }
    if (v28 == 1)
    {
LABEL_37:

      swift_bridgeObjectRelease(a1);
      goto LABEL_24;
    }
    v29 = 5;
    while (1)
    {
      v30 = v29 - 3;
      if (__OFADD__(v29 - 4, 1))
        break;
      if (*(_QWORD *)(a1 + 8 * v29) == v27)
        goto LABEL_22;
      ++v29;
      if (v30 == v28)
        goto LABEL_37;
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain(a1);
    v18 = _CocoaArrayWrapper.endIndex.getter(v16);
  }
  while (v18);
LABEL_44:
  v31 = _swiftEmptyArrayStorage;
LABEL_45:
  swift_release();
  swift_bridgeObjectRelease(a1);
  sub_1001A1DA0((unint64_t)v31);
  swift_release();
  v32 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(v94 + 88) + 144);
  v33 = swift_retain();
  v32(&v97, v33);
  swift_release();
  v34 = v97;
  if (v97 >> 62)
  {
    if ((v97 & 0x8000000000000000) != 0)
      v47 = v97;
    else
      v47 = v97 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v97);
    v35 = _CocoaArrayWrapper.endIndex.getter(v47);
    swift_bridgeObjectRelease(v34);
  }
  else
  {
    v35 = *(_QWORD *)((v97 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v34);
  if (!v35)
    return;
  v36 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(v94 + 88) + 144);
  v37 = swift_retain();
  v36(&v97, v37);
  swift_release();
  v8 = v97;
  v97 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v8 >> 62)
    goto LABEL_65;
  v38 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  v39 = v94;
  if (v38)
    goto LABEL_50;
LABEL_69:
  swift_bridgeObjectRelease(v8);
  v46 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_70:
  v93 = v46;
  if ((v46 & 0x8000000000000000) != 0 || (v46 & 0x4000000000000000) != 0)
    goto LABEL_127;
  v49 = *(_QWORD *)(v46 + 16);
  swift_retain();
  v95 = v49;
  if (v49)
  {
LABEL_73:
    v50 = 0;
    do
    {
      if ((v93 & 0xC000000000000001) != 0)
        v59 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v50, v93);
      else
        v59 = *(id *)(v93 + 32 + 8 * v50);
      v60 = v59;
      v24 = __OFADD__(v50++, 1);
      if (v24)
      {
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        swift_retain();
        v95 = _CocoaArrayWrapper.endIndex.getter(v89);
        if (!v95)
          break;
        goto LABEL_73;
      }
      v61 = *(uint64_t (**)(unint64_t *, __n128))(**(_QWORD **)(v39 + 88) + 400);
      v62 = swift_retain();
      v96 = (void (*)(unint64_t *, _QWORD))v61(&v97, v62);
      v64 = v63;
      v65 = (*(uint64_t (**)(void))((swift_isaMask & *v60) + 0xB8))();
      v67 = v66;
      v51 = *v64;
      if ((unint64_t)*v64 >> 62)
      {
        if (v51 < 0)
          v88 = *v64;
        else
          v88 = v51 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v64);
        v68 = _CocoaArrayWrapper.endIndex.getter(v88);
        if (!v68)
        {
LABEL_122:
          swift_bridgeObjectRelease(v67);
          swift_bridgeObjectRelease(v51);
          goto LABEL_123;
        }
      }
      else
      {
        v68 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v51);
        if (!v68)
          goto LABEL_122;
      }
      if ((v51 & 0xC000000000000001) != 0)
        v69 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v51);
      else
        v69 = *(id *)(v51 + 32);
      v70 = v69;
      v71 = (*(uint64_t (**)(void))((swift_isaMask & *v69) + 0xB8))();
      if (v71 == v65 && v72 == v67)
      {
        v39 = 0;
      }
      else
      {
        v74 = v72;
        v92 = v51 & 0xC000000000000001;
        v75 = _stringCompareWithSmolCheck(_:_:expecting:)(v71, v72, v65, v67, 0);

        swift_bridgeObjectRelease(v74);
        if ((v75 & 1) != 0)
        {
          v39 = 0;
LABEL_92:
          v52 = v96;
          goto LABEL_76;
        }
        if (v68 == 1)
          goto LABEL_94;
        if (v92)
          v76 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v51);
        else
          v76 = *(id *)(v51 + 40);
        v70 = v76;
        v77 = (*(uint64_t (**)(void))((swift_isaMask & *v76) + 0xB8))();
        if (v77 == v65 && v78 == v67)
        {
          v39 = 1;
        }
        else
        {
          v80 = v78;
          v81 = _stringCompareWithSmolCheck(_:_:expecting:)(v77, v78, v65, v67, 0);

          swift_bridgeObjectRelease(v80);
          if ((v81 & 1) != 0)
          {
            v39 = 1;
            goto LABEL_92;
          }
          if (v68 == 2)
          {
LABEL_94:
            swift_bridgeObjectRelease(v67);
            swift_bridgeObjectRelease(v51);
            v39 = v94;
LABEL_123:
            v96(&v97, 0);
            goto LABEL_77;
          }
          v82 = 6;
          while (1)
          {
            v39 = v82 - 4;
            v91 = v82;
            v83 = v92
                ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v82 - 4, v51)
                : *(id *)(v51 + 8 * v82);
            v70 = v83;
            v84 = (*(uint64_t (**)(void))((swift_isaMask & *v83) + 0xB8))();
            if (v84 == v65 && v85 == v67)
              break;
            v87 = v85;
            v90 = _stringCompareWithSmolCheck(_:_:expecting:)(v84, v85, v65, v67, 0);

            swift_bridgeObjectRelease(v87);
            if ((v90 & 1) != 0)
              goto LABEL_92;
            if (__OFADD__(v39, 1))
              goto LABEL_126;
            v82 = v91 + 1;
            if (v39 + 1 == v68)
              goto LABEL_94;
          }
        }
      }
      swift_bridgeObjectRelease(v51);

      v51 = v67;
      v52 = v96;
LABEL_76:
      swift_bridgeObjectRelease(v51);
      v53 = (void *)sub_1000281FC(v39);
      swift_bridgeObjectRelease(v67);

      v39 = v94;
      v52(&v97, 0);
LABEL_77:
      v54 = swift_release();
      v55 = (void (*)(void))(*(uint64_t (**)(__n128))((swift_isaMask & *v60) + 0x178))(v54);
      v55();
      swift_release();
      v56 = *(_QWORD *)(v39 + 120);
      v97 = 0xC000000000000008;
      v57 = *(void (**)(unint64_t *, __n128))(*(_QWORD *)v56 + 392);
      v58 = swift_retain();
      v57(&v97, v58);

      swift_release();
    }
    while (v50 != v95);
  }
  swift_release_n(v93, 2);
}

void sub_1001A5DC8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  void (*v7)(unint64_t *__return_ptr, __n128);
  __n128 v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void (*v15)(unint64_t *__return_ptr, __n128);
  __n128 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t (*v25)(unint64_t *, __n128);
  __n128 v26;
  void (*v27)(unint64_t *, _QWORD, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  void (*v33)(void);
  uint64_t v34;
  void (*v35)(unint64_t *, __n128);
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t (*v40)(unint64_t *, __n128);
  _QWORD *v41;
  __n128 v42;
  void (*v43)(unint64_t *, _QWORD);
  void **v44;
  void *v45;
  _BYTE v47[24];
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];

  v2 = v1;
  v4 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v4);
  v6 = (void **)&v47[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(v1 + 120) + 144);
  v8 = swift_retain();
  v7(&v48, v8);
  swift_release();
  v9 = v48;
  if (!(v48 >> 62))
  {
    if (qword_10047A930 != -1)
      swift_once(&qword_10047A930, sub_100083368);
    v10 = (void *)qword_1004AF240;
    if (!qword_1004AF240)
    {
      __break(1u);
      return;
    }
    v11 = qword_1004AF240 + qword_100487428;
    swift_beginAccess(qword_1004AF240 + qword_100487428, v47, 0, 0);
    sub_10007F03C(v11, (uint64_t)v6);
    if (swift_getEnumCaseMultiPayload(v6, v4) == 1)
    {
      v12 = *v6;
      v13 = v10;
      v14 = sub_1000E1D74();

      sub_1000695D4(2, 0, 0, 1);
      sub_10001A810(v9);

      goto LABEL_9;
    }
    sub_10007F080((uint64_t)v6);
  }
  sub_10001A810(v9);
LABEL_9:
  v15 = *(void (**)(unint64_t *__return_ptr, __n128))(**(_QWORD **)(v2 + 112) + 144);
  v16 = swift_retain();
  v15(&v48, v16);
  swift_release();
  v17 = v48;
  v18 = v49;
  v19 = v50;
  v20 = sub_1001C70BC(v48, v49, v50);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v17);
  v51[0] = a1;
  v51[1] = v20;
  v21 = sub_10000EDC8(&qword_10047C018);
  v22 = sub_100043310(&qword_1004897C0, &qword_10047C018, (uint64_t)&protocol conformance descriptor for [A]);
  v23 = sub_10000C4B0(&qword_1004897C8, (uint64_t (*)(uint64_t))&type metadata accessor for MeasureObject, (uint64_t)&protocol conformance descriptor for NSObject);
  RangeReplaceableCollection<>.removingFirst(_:)(&v48, v51, v21, v22, v23);
  swift_bridgeObjectRelease(v20);
  v24 = v48;
  sub_1001A1DA0(v48);
  swift_bridgeObjectRelease(v24);
  v25 = *(uint64_t (**)(unint64_t *, __n128))(**(_QWORD **)(v2 + 88) + 400);
  v26 = swift_retain();
  v27 = (void (*)(unint64_t *, _QWORD, __n128))v25(&v48, v26);
  v28 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8))();
  v30 = v29;
  sub_100028000(v28, v29);
  v31 = swift_bridgeObjectRelease(v30);
  v27(&v48, 0, v31);
  v32 = swift_release();
  v33 = (void (*)(void))(*(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0x130))(v32);
  v33();
  swift_release();
  v34 = *(_QWORD *)(v2 + 120);
  v48 = 0xC000000000000008;
  v35 = *(void (**)(unint64_t *, __n128))(*(_QWORD *)v34 + 392);
  v36 = swift_retain();
  v35(&v48, v36);
  swift_release();
  if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
  {
    v37 = type metadata accessor for WorldRectangle(0);
    v38 = swift_dynamicCastClass(a1, v37);
    if (v38)
    {
      v39 = (void *)v38;
      v40 = *(uint64_t (**)(unint64_t *, __n128))(**(_QWORD **)(v2 + 136) + 400);
      v41 = a1;
      v42 = swift_retain();
      v43 = (void (*)(unint64_t *, _QWORD))v40(&v48, v42);
      v45 = *v44;
      *v44 = v39;

      v43(&v48, 0);
      swift_release();
    }
  }
}

void sub_1001A6170()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t *__return_ptr, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v1 + 144);
  v3 = swift_retain(v1);
  v2(&v16, v3);
  swift_release(v1);
  v4 = v16;
  v16 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v12 = v4;
    else
      v12 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v4);
    if (v5)
    {
LABEL_3:
      if (v5 < 1)
      {
        __break(1u);
        goto LABEL_27;
      }
      for (i = 0; i != v5; ++i)
      {
        if ((v4 & 0xC000000000000001) != 0)
          v9 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
        else
          v9 = *(id *)(v4 + 8 * i + 32);
        v10 = v9;
        v11 = (*(uint64_t (**)(void))((swift_isaMask & *v9) + 0xD0))();
        if (v11 == 6)
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
          v7 = *(_QWORD *)(v16 + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
          v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v10);
          specialized ContiguousArray._endMutation()(v8);
        }
      }
      swift_bridgeObjectRelease(v4);
      v4 = v16;
      if (v16 < 0)
        goto LABEL_24;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease(v4);
  v4 = (uint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_24;
LABEL_19:
  if ((v4 & 0x4000000000000000) != 0)
  {
LABEL_24:
    v14 = swift_bridgeObjectRetain(v4);
    v15 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_release(v4);
    if (!v15)
      goto LABEL_25;
    goto LABEL_21;
  }
  if (!*(_QWORD *)(v4 + 16))
  {
LABEL_25:
    swift_release(v4);
    return;
  }
LABEL_21:
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_27:
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
    goto LABEL_25;
  }
  if (*(_QWORD *)(v4 + 16))
  {
    v13 = *(id *)(v4 + 32);
    goto LABEL_25;
  }
  __break(1u);
}

void sub_1001A6364(uint64_t a1)
{
  unint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unsigned int v8;
  void (*v9)(uint64_t *__return_ptr, __n128);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t *__return_ptr, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  __n128 v24;
  __n128 v25;
  void (*v26)(void);
  uint64_t v27;
  __n128 v28;
  _QWORD *v29;
  uint64_t (*v31)(uint64_t *, __n128);
  __n128 v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  char v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  char v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(void);
  _QWORD *v65;
  void (*v66)(void);
  uint64_t (*v67)(uint64_t *, __n128);
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t *, __n128);
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t *, __n128);
  _QWORD *v83;
  __n128 v84;
  uint64_t (*v85)(uint64_t *, __n128);
  _QWORD *v86;
  __n128 v87;
  void (*v88)(uint64_t *, _QWORD, __n128);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  __n128 v99;
  void (*v100)(void);
  uint64_t ObjectType;
  Swift::String v102;
  void *object;
  _QWORD *v104;
  uint64_t v105;
  char v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;

  v6 = v1;
  v8 = objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable");
  v9 = *(void (**)(uint64_t *__return_ptr, __n128))(**(_QWORD **)(v1 + 112) + 144);
  if (v8)
  {
    v10 = swift_retain();
    v9(&v115, v10);
    swift_release();
    v11 = v115;
    v12 = v117;
    swift_bridgeObjectRelease(v116);
    swift_bridgeObjectRelease(v11);
    v13 = *(void (**)(uint64_t *__return_ptr, __n128))(**(_QWORD **)(v1 + 112) + 144);
    v14 = swift_retain();
    v13(&v115, v14);
    swift_release();
    swift_bridgeObjectRelease(v115);
    v15 = v116;
    swift_bridgeObjectRelease(v117);
    v115 = v12;
    sub_1001001A4(v15);
    v16 = v115;
  }
  else
  {
    v17 = swift_retain();
    v9(&v115, v17);
    swift_release();
    swift_bridgeObjectRelease(v115);
    v16 = v116;
    swift_bridgeObjectRelease(v117);
  }
  v115 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v16 >> 62)
    goto LABEL_78;
  v18 = v16 & 0xFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_6:
  v104 = (_QWORD *)a1;
  if (v19)
  {
    if (v19 < 1)
    {
      __break(1u);
      goto LABEL_95;
    }
    a1 = 0;
    do
    {
      if ((v16 & 0xC000000000000001) != 0)
        v22 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v16);
      else
        v22 = *(id *)(v16 + 8 * a1 + 32);
      v2 = v22;
      if ((*(uint64_t (**)(void))((swift_isaMask & *v22) + 0xD0))() == 6)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(6);
        v20 = *(_QWORD *)(v115 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
        v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v2);
        specialized ContiguousArray._endMutation()(v21);
      }
      else
      {

      }
      ++a1;
    }
    while (v19 != a1);
    swift_bridgeObjectRelease(v16);
    v23 = v115;
    v108 = v6;
    v109 = v115;
    if (v115 < 0)
      goto LABEL_82;
  }
  else
  {
    swift_bridgeObjectRelease(v16);
    v23 = (uint64_t)_swiftEmptyArrayStorage;
    v108 = v6;
    v109 = (uint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_82;
  }
  if ((v23 & 0x4000000000000000) == 0)
  {
    v16 = *(_QWORD *)(v23 + 16);
    swift_retain();
    v110 = v16;
    if (!v16)
      goto LABEL_83;
    goto LABEL_21;
  }
LABEL_82:
  swift_retain();
  v110 = _CocoaArrayWrapper.endIndex.getter(v61);
  if (v110)
  {
LABEL_21:
    v3 = 0;
    do
    {
      if ((v109 & 0xC000000000000001) != 0)
        v29 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v109);
      else
        v29 = *(id *)(v109 + 32 + 8 * v3);
      v4 = v29;
      if (__OFADD__(v3++, 1))
      {
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        if (v16 < 0)
          v60 = v16;
        else
          v60 = v16 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v16);
        v19 = _CocoaArrayWrapper.endIndex.getter(v60);
        swift_bridgeObjectRelease(v16);
        goto LABEL_6;
      }
      v5 = *(_QWORD *)(v6 + 88);
      v31 = *(uint64_t (**)(uint64_t *, __n128))(*(_QWORD *)v5 + 400);
      v32 = swift_retain();
      a1 = v31(&v115, v32);
      v34 = v33;
      v111 = (*(uint64_t (**)(void))((swift_isaMask & *v4) + 0xB8))();
      v36 = v35;
      v37 = *v34;
      if ((unint64_t)*v34 >> 62)
      {
        if (v37 < 0)
          v59 = *v34;
        else
          v59 = v37 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v34);
        v2 = (void *)_CocoaArrayWrapper.endIndex.getter(v59);
        if (v2)
        {
LABEL_30:
          v38 = a1;
          if ((v37 & 0xC000000000000001) != 0)
            v39 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v37);
          else
            v39 = *(id *)(v37 + 32);
          v40 = v39;
          v41 = (*(uint64_t (**)(void))((swift_isaMask & *v39) + 0xB8))();
          if (v41 == v111 && v42 == v36)
          {
            v6 = 0;
          }
          else
          {
            v44 = v42;
            v107 = v37 & 0xC000000000000001;
            v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v42, v111, v36, 0);

            swift_bridgeObjectRelease(v44);
            if ((v45 & 1) != 0)
            {
              v6 = 0;
              a1 = v38;
              goto LABEL_41;
            }
            a1 = v38;
            if (v2 == (void *)1)
            {
LABEL_44:
              swift_bridgeObjectRelease(v36);
              v24 = swift_bridgeObjectRelease(v37);
              goto LABEL_42;
            }
            if (v107)
              v47 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v37);
            else
              v47 = *(id *)(v37 + 40);
            v40 = v47;
            v48 = (*(uint64_t (**)(void))((swift_isaMask & *v47) + 0xB8))();
            if (v48 != v111 || v49 != v36)
            {
              v51 = v49;
              v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v49, v111, v36, 0);

              swift_bridgeObjectRelease(v51);
              if ((v52 & 1) != 0)
              {
                v6 = 1;
                a1 = v38;
              }
              else
              {
                a1 = v38;
                if (v2 == (void *)2)
                  goto LABEL_44;
                v53 = 6;
                v105 = v38;
                while (1)
                {
                  v6 = v53 - 4;
                  v16 = v53;
                  if (v107)
                    v54 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v53 - 4, v37);
                  else
                    v54 = *(id *)(v37 + 8 * v53);
                  v40 = v54;
                  v55 = (*(uint64_t (**)(void))((swift_isaMask & *v54) + 0xB8))();
                  if (v55 == v111 && v56 == v36)
                  {
                    a1 = v105;
                    goto LABEL_40;
                  }
                  v58 = v56;
                  v106 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v56, v111, v36, 0);

                  swift_bridgeObjectRelease(v58);
                  if ((v106 & 1) != 0)
                    break;
                  a1 = v105;
                  if (__OFADD__(v6, 1))
                    goto LABEL_77;
                  v53 = v16 + 1;
                  if ((void *)(v6 + 1) == v2)
                    goto LABEL_44;
                }
                a1 = v105;
              }
              goto LABEL_41;
            }
            v6 = 1;
          }
          a1 = v38;
LABEL_40:
          swift_bridgeObjectRelease(v37);

          v37 = v36;
LABEL_41:
          swift_bridgeObjectRelease(v37);
          v46 = (void *)sub_1000281FC(v6);
          swift_bridgeObjectRelease(v36);

LABEL_42:
          v6 = v108;
          goto LABEL_23;
        }
      }
      else
      {
        v2 = *(void **)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(*v34);
        if (v2)
          goto LABEL_30;
      }
      swift_bridgeObjectRelease(v36);
      v24 = swift_bridgeObjectRelease(v37);
LABEL_23:
      ((void (*)(uint64_t *, _QWORD, __n128))a1)(&v115, 0, v24);
      v25 = swift_release();
      v26 = (void (*)(void))(*(uint64_t (**)(__n128))((swift_isaMask & *v4) + 0x178))(v25);
      v26();
      swift_release();
      v27 = *(_QWORD *)(v6 + 120);
      v115 = 0xC000000000000008;
      v16 = *(_QWORD *)(*(_QWORD *)v27 + 392);
      v28 = swift_retain();
      ((void (*)(uint64_t *, __n128))v16)(&v115, v28);

      swift_release();
    }
    while (v3 != v110);
  }
LABEL_83:
  swift_release_n(v109, 2);
  v62 = type metadata accessor for WorldRectangle(0);
  v63 = swift_dynamicCastClass(v104, v62);
  if (v63)
  {
    a1 = v63;
    v64 = *(uint64_t (**)(void))((swift_isaMask & *v104) + 0xE8);
    v65 = v104;
    v66 = (void (*)(void))v64();
    v66();
    swift_release();
    v67 = *(uint64_t (**)(uint64_t *, __n128))(**(_QWORD **)(v6 + 112) + 400);
    v19 = v65;
    v68 = swift_retain();
    v2 = (void *)v67(&v115, v68);
    v3 = v69;
    v113 = *(_QWORD *)(v69 + 8);
    swift_bridgeObjectRetain(v113);
    v4 = (_QWORD *)sub_10000EDC8(&qword_10047C018);
    v5 = sub_10000EDC8(&qword_10047D030);
    swift_dynamicCast(&v114, &v113, v4, v5, 7);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
    v6 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v18 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v6 < v18 >> 1)
    {
LABEL_85:
      v71 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, a1);
      specialized Array._endMutation()(v71);
      v113 = v114;
      swift_dynamicCast(&v112, &v113, v5, v4, 7);
      v72 = v112;
      v73 = swift_bridgeObjectRelease(*(_QWORD *)(v3 + 8));
      *(_QWORD *)(v3 + 8) = v72;
      ((void (*)(uint64_t *, _QWORD, __n128))v2)(&v115, 0, v73);
      swift_release();

LABEL_86:
      v6 = v108;
LABEL_89:
      *(CFTimeInterval *)(v6 + 208) = CACurrentMediaTime();
      return;
    }
LABEL_95:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v6 + 1, 1);
    goto LABEL_85;
  }
  v74 = type metadata accessor for WorldLine(0);
  if (swift_dynamicCastClass(v104, v74))
  {
    v75 = *(_QWORD *)(v6 + 120);
    v115 = 0xC000000000000008;
    v76 = *(void (**)(uint64_t *, __n128))(*(_QWORD *)v75 + 392);
    v77 = swift_retain();
    v76(&v115, v77);
    swift_release();
    goto LABEL_89;
  }
  v78 = type metadata accessor for WorldPerson(0);
  v79 = swift_dynamicCastClass(v104, v78);
  if (v79)
  {
    v80 = v79;
    v81 = *(_QWORD *)(v6 + 120);
    v115 = v79 | 0x4000000000000000;
    v82 = *(void (**)(uint64_t *, __n128))(*(_QWORD *)v81 + 392);
    v83 = v104;
    v84 = swift_retain();
    v82(&v115, v84);
    swift_release();
    v85 = *(uint64_t (**)(uint64_t *, __n128))(**(_QWORD **)(v6 + 112) + 400);
    v86 = v83;
    v87 = swift_retain();
    v88 = (void (*)(uint64_t *, _QWORD, __n128))v85(&v115, v87);
    v90 = v89;
    v113 = *(_QWORD *)(v89 + 16);
    swift_bridgeObjectRetain(v113);
    v91 = sub_10000EDC8(&qword_10047C018);
    v92 = sub_10000EDC8(&qword_10047E450);
    swift_dynamicCast(&v114, &v113, v91, v92, 7);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v93);
    v95 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v94 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v95 >= v94 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v94 > 1, v95 + 1, 1);
    v96 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v95, v80);
    specialized Array._endMutation()(v96);
    v113 = v114;
    swift_dynamicCast(&v112, &v113, v92, v91, 7);
    v97 = v112;
    v98 = swift_bridgeObjectRelease(*(_QWORD *)(v90 + 16));
    *(_QWORD *)(v90 + 16) = v97;
    v88(&v115, 0, v98);
    v99 = swift_release();
    v100 = (void (*)(void))(*(uint64_t (**)(__n128))((swift_isaMask & *v86) + 0xE8))(v99);
    v100();

    swift_release();
    goto LABEL_86;
  }
  v115 = 0;
  v116 = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v116);
  v115 = 0xD000000000000016;
  v116 = 0x80000001003E5310;
  ObjectType = swift_getObjectType(v104);
  v102._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  object = v102._object;
  String.append(_:)(v102);
  swift_bridgeObjectRelease(object);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v115, v116, "Measure/MeasurementsStateReducer.swift", 38, 2, 508, 0);
  __break(1u);
}

uint64_t sub_1001A6D54@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 248);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001A6D64(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, __n128);
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, __n128);
  __n128 v44;
  uint64_t v45;
  _BYTE v47[40];
  _QWORD v48[5];

  v7 = *a2;
  v48[3] = a3;
  v48[4] = a4;
  v8 = sub_100068AE8(v48);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v8, a1, a3);
  v9 = sub_10000EDC8(&qword_10047D010);
  KeyPath = swift_getKeyPath(&unk_1003BB668);
  v11 = qword_10047AD88;
  swift_retain();
  if (v11 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v12 = qword_1004AF890;
  v13 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v9 + 272);
  v14 = swift_retain();
  a2[8] = v13(KeyPath, v12, v14);
  v15 = sub_10000EDC8(&qword_10047ECF0);
  v16 = swift_getKeyPath(&unk_1003BB690);
  v17 = qword_1004AF890;
  v18 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v15 + 272);
  v19 = swift_retain();
  a2[9] = v18(v16, v17, v19);
  v20 = sub_10000EDC8(&qword_10047EA08);
  v21 = swift_getKeyPath(&unk_1003BB6B8);
  v22 = qword_1004AF890;
  v23 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v20 + 272);
  v24 = swift_retain();
  a2[10] = v23(v21, v22, v24);
  sub_10000EDC8(&qword_100483B30);
  v25 = swift_getKeyPath(&unk_1003BB6E0);
  a2[11] = MutableStateValue.__allocating_init(_:_:)(v25, v7);
  v26 = swift_getKeyPath(&unk_1003BB708);
  v27 = sub_10000EDC8(&qword_10047BBA0);
  v28 = qword_1004AF890;
  v29 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v27 + 272);
  v30 = swift_retain();
  a2[12] = v29(v26, v28, v30);
  v31 = swift_getKeyPath(&unk_1003BB730);
  v32 = sub_10000EDC8((uint64_t *)&unk_1004873C0);
  v33 = qword_1004AF890;
  v34 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v32 + 272);
  v35 = swift_retain();
  a2[13] = v34(v31, v33, v35);
  sub_10000EDC8(&qword_100483B38);
  v36 = swift_getKeyPath(&unk_1003BB758);
  a2[14] = MutableStateValue.__allocating_init(_:_:)(v36, v7);
  sub_10000EDC8(&qword_100483B40);
  v37 = swift_getKeyPath(&unk_1003BB780);
  a2[15] = MutableStateValue.__allocating_init(_:_:)(v37, v7);
  sub_10000EDC8(&qword_100483B48);
  v38 = swift_getKeyPath(&unk_1003BB7A8);
  a2[16] = MutableStateValue.__allocating_init(_:_:)(v38, v7);
  sub_10000EDC8(&qword_100483B50);
  v39 = swift_getKeyPath(&unk_1003BB7D0);
  a2[17] = MutableStateValue.__allocating_init(_:_:)(v39, v7);
  v40 = sub_10000EDC8(&qword_100483B58);
  v41 = swift_getKeyPath(&unk_1003BB7F8);
  v42 = qword_1004AF890;
  v43 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v40 + 272);
  v44 = swift_retain();
  a2[18] = v43(v41, v42, v44);
  *(_OWORD *)(a2 + 19) = 0u;
  *(_OWORD *)(a2 + 21) = 0u;
  *(_OWORD *)(a2 + 23) = 0u;
  *(_OWORD *)(a2 + 25) = 0u;
  swift_release();
  sub_100068B24((uint64_t)v48, (uint64_t)v47);
  v45 = StateObserver.init(configuration:)(v47);
  sub_10000F690(v48);
  return v45;
}

uint64_t sub_1001A70B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 248);
  *a2 = v2;
  return swift_retain(v2);
}

void sub_1001A70CC(uint64_t a1)
{
  uint64_t v1;

  sub_1001A1450(a1, v1);
}

double sub_1001A70D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A1D00(a1, v1);
}

uint64_t sub_1001A70E0()
{
  uint64_t v0;

  return sub_1001A2C28(v0);
}

uint64_t sub_1001A70E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001A70F8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

_QWORD *sub_1001A7100(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  v3 = a1;
  v28 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_24;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v25))
  {
    v26 = v3;
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    v8 = v3 + 32;
    v9 = &swift_isaMask;
    v27 = v3 + 32;
    while (1)
    {
      if (v6)
      {
        v10 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v26);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v7 + 16))
          goto LABEL_22;
        v10 = *(id *)(v8 + 8 * v5);
      }
      v11 = v10;
      if (__OFADD__(v5++, 1))
        goto LABEL_23;
      v3 = (uint64_t)v10;
      v13 = (*(uint64_t (**)(void))((*v9 & *v10) + 0xD0))();
      v14 = *(_QWORD *)(a2 + 16);
      if (v14)
      {
        if (*(_QWORD *)(a2 + 32) == v13)
        {
LABEL_12:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          v15 = v7;
          v16 = i;
          v17 = v6;
          v18 = v9;
          v19 = v28[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
          v20 = v19;
          v9 = v18;
          v6 = v17;
          i = v16;
          v7 = v15;
          v8 = v27;
          v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v11);
          v3 = (uint64_t)&v28;
          specialized ContiguousArray._endMutation()(v21);
          goto LABEL_5;
        }
        if (v14 != 1)
          break;
      }
LABEL_4:

LABEL_5:
      if (v5 == i)
        return v28;
    }
    v22 = 5;
    while (1)
    {
      v23 = v22 - 3;
      if (__OFADD__(v22 - 4, 1))
        break;
      if (*(_QWORD *)(a2 + 8 * v22) == v13)
        goto LABEL_12;
      ++v22;
      if (v23 == v14)
        goto LABEL_4;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    if (v3 < 0)
      v25 = v3;
    else
      v25 = v3 & 0xFFFFFFFFFFFFFF8;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001A72E0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRetain(result);
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a3);
  }
  return result;
}

_QWORD *sub_1001A7318(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  return a1;
}

uint64_t *sub_1001A7350(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_1001A7394()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001A73A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v0 = sub_10000EDC8(&qword_10047E500);
  v1 = *(_QWORD *)(type metadata accessor for URLQueryItem(0) - 8);
  v2 = swift_allocObject(v0, ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ 3 * *(_QWORD *)(v1 + 72), *(unsigned __int8 *)(v1 + 80) | 7);
  *(_OWORD *)(v2 + 16) = xmmword_1003B0F50;
  URLQueryItem.init(name:value:)(0x6E656E6F706D6F43, 0xEB00000000444974, 0x303133383539, 0xE600000000000000);
  URLQueryItem.init(name:value:)(0x6E656E6F706D6F43, 0xED0000656D614E74, 0x6572757361654DLL, 0xE700000000000000);
  result = URLQueryItem.init(name:value:)(0xD000000000000010, 0x80000001003E53F0, 0x736775422077654ELL, 0xE800000000000000);
  qword_1004897D0 = v2;
  return result;
}

uint64_t sub_1001A74C8(uint64_t a1)
{
  return sub_1001A7510(a1, qword_1004897D8, 0xD0000000000000FBLL, 0x80000001003E5410);
}

uint64_t sub_1001A74EC(uint64_t a1)
{
  return sub_1001A7510(a1, qword_1004897F0, 0xD000000000000088, 0x80000001003E5590);
}

uint64_t sub_1001A7510(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for URLQueryItem(0);
  sub_1000477C8(v7, a2);
  sub_1000362E8(v7, (uint64_t)a2);
  return URLQueryItem.init(name:value:)(0x7470697263736544, 0xEB000000006E6F69, a3, a4);
}

uint64_t sub_1001A7588(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, __n128);
  __n128 v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];
  void *v16;
  void *v17;

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_1003BB8F0);
  v5 = sub_10000EDC8(&qword_10047BBC8);
  v6 = qword_10047AD88;
  swift_retain();
  if (v6 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v7 = qword_1004AF890;
  v8 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v5 + 272);
  v9 = swift_retain();
  *(_QWORD *)(v2 + 64) = v8(KeyPath, v7, v9);
  *(_QWORD *)(v2 + 72) = a1;
  v10 = a1;
  swift_release();
  v16 = &type metadata for Configurations.Default;
  v17 = &protocol witness table for Configurations.Default;
  v11 = StateObserver.init(configuration:)(v15);
  v12 = *(_QWORD *)(v11 + 72);
  if (v12)
  {
    v13 = v12 + OBJC_IVAR____TtC7Measure14TapToRadarView_delegate;
    *(_QWORD *)(v13 + 8) = &off_10044AF08;
    swift_unknownObjectWeakAssign(v13, v11);
  }
  swift_retain();
  sub_1001A8A9C();
  swift_release();

  return v11;
}

void sub_1001A76B4()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, __n128);
  __n128 v6;
  _BYTE v7[80];

  inited = swift_initStackObject(v0, v7);
  KeyPath = swift_getKeyPath(&unk_1003BB8F0);
  v3 = sub_10000EDC8(&qword_10047BBC8);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v4 = qword_1004AF890;
  v5 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v3 + 272);
  v6 = swift_retain();
  *(_QWORD *)(inited + 64) = v5(KeyPath, v4, v6);
  swift_release();
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002DLL, 0x80000001003D7D70, "Measure/TapToRadarController.swift", 34, 2, 53, 0);
  __break(1u);
}

void sub_1001A779C()
{
  uint64_t v0;
  NSString v1;
  NSString v2;
  id v3;
  NSString v4;
  void *v5;
  void *v6;
  id v7;
  NSString v8;
  void *v9;
  id v10;
  void **v11;
  uint64_t v12;
  void (*v13)(uint64_t, void *);
  void *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;

  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v1, v2, 1);

  swift_retain();
  v4 = String._bridgeToObjectiveC()();
  v15 = sub_1001A89F0;
  v16 = v0;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_10004C834;
  v14 = &unk_10044AF18;
  v5 = _Block_copy(&v11);
  swift_release();
  v6 = (void *)objc_opt_self(UIAlertAction);
  v7 = objc_msgSend(v6, "actionWithTitle:style:handler:", v4, 0, v5);
  _Block_release(v5);

  objc_msgSend(v3, "addAction:", v7);
  swift_retain();
  v8 = String._bridgeToObjectiveC()();
  v15 = sub_1001A8A30;
  v16 = v0;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_10004C834;
  v14 = &unk_10044AF40;
  v9 = _Block_copy(&v11);
  v10 = objc_msgSend(v6, "actionWithTitle:style:handler:", v8, 0, v9, swift_release().n128_f64[0]);
  _Block_release(v9);

  objc_msgSend(v3, "addAction:", v10);
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  if (*((_QWORD *)&xmmword_1004AF228 + 1))
  {
    objc_msgSend(*((id *)&xmmword_1004AF228 + 1), "presentViewController:animated:completion:", v3, 1, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001A7A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  void *v15;
  uint64_t v16;
  void *v17;
  __n128 v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100049274();
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = swift_allocObject(&unk_10044AF78, 24, 7);
  swift_weakInit(v16 + 16, a2);
  aBlock[4] = a3;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003ECA0;
  aBlock[3] = a4;
  v17 = _Block_copy(aBlock);
  v18 = swift_release();
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_100030E1C();
  v20 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v21 = sub_100043310((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v7, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

double sub_1001A7BF0(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    a2();
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001A7C48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  __n128 v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  id v30;
  __n128 v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[6];

  v44 = a3;
  v45 = a4;
  v40 = a2;
  v41 = a1;
  v47 = type metadata accessor for DispatchWorkItemFlags(0);
  v50 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchTime(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v39 - v17;
  sub_100049274();
  v42 = static OS_dispatch_queue.main.getter(v19);
  static DispatchTime.now()();
  + infix(_:_:)(v16, 1.0);
  v43 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20 = v16;
  v21 = v12;
  v43(v20, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v40, v8);
  v22 = *(unsigned __int8 *)(v9 + 80);
  v23 = (v22 + 24) & ~v22;
  v24 = (v10 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject(&unk_10044B040, v24 + 16, v22 | 7);
  v26 = v41;
  *(_QWORD *)(v25 + 16) = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25 + v23, v11, v8);
  v27 = (_QWORD *)(v25 + v24);
  v28 = v45;
  *v27 = v44;
  v27[1] = v28;
  aBlock[4] = sub_1001A9EEC;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003ECA0;
  aBlock[3] = &unk_10044B058;
  v29 = _Block_copy(aBlock);
  v30 = v26;
  swift_bridgeObjectRetain(v28);
  v31 = swift_release();
  static DispatchQoS.unspecified.getter(v31);
  aBlock[0] = _swiftEmptyArrayStorage;
  v32 = sub_100030E1C();
  v33 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v34 = sub_100043310((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430, (uint64_t)&protocol conformance descriptor for [A]);
  v36 = v46;
  v35 = v47;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v33, v34, v47, v32);
  v37 = (void *)v42;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v18, v7, v36, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v35);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v7, v49);
  return ((uint64_t (*)(char *, uint64_t))v43)(v18, v21);
}

uint64_t sub_1001A7F64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  __n128 v25;
  unsigned int v26;
  NSURL *v27;
  char *v28;
  _QWORD *v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t v37;
  void *v38;
  void *v39;
  id v40;
  void *countAndFlagsBits;
  uint64_t v42;
  id v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, unint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double *v55;
  unint64_t v56;
  unint64_t v57;
  double *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  uint64_t v63;
  void *object;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  Swift::String v78;
  char *v80;
  id v81;
  NSURL *v82;
  void *v83;
  void *v84;
  void *v85;
  _QWORD *v86;
  void (*v87)(Swift::String *, _QWORD, __n128);
  _QWORD *v88;
  char *v89;
  _QWORD *v90;
  char v91;
  unint64_t v92;
  unint64_t v93;
  __n128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  unsigned int (*v105)(char *, uint64_t, uint64_t);
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  Swift::String v110[2];

  v106 = a3;
  v6 = type metadata accessor for URLComponents(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v98 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000EDC8((uint64_t *)&unk_100482AF0);
  __chkstk_darwin(v9);
  v103 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v100 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v107 = (char *)&v95 - v15;
  v16 = type metadata accessor for URLQueryItem(0);
  v101 = *(_QWORD *)(v16 - 8);
  v102 = v16;
  v17 = __chkstk_darwin(v16);
  v97 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v20 = (char *)&v95 - v19;
  v21 = sub_10000EDC8(&qword_100489940);
  __chkstk_darwin(v21);
  v23 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(string:)(0xD000000000000012, 0x80000001003E53A0);
  v99 = v7;
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v24(v23, 1, v6))
  {
    if (qword_10047B138 != -1)
      swift_once(&qword_10047B138, sub_1001A73A4);
    v25 = swift_bridgeObjectRetain(qword_1004897D0);
    URLComponents.queryItems.setter(v25);
  }
  v26 = v24(v23, 1, v6);
  v104 = v6;
  v105 = v24;
  if (!v26)
  {
    v28 = (char *)URLComponents.queryItems.modify(v110);
    if (*v29)
    {
      v30 = v29;
      v96 = v28;
      v108 = v12;
      v31 = v23;
      if (qword_10047B148 != -1)
        swift_once(&qword_10047B148, sub_1001A74EC);
      v32 = v102;
      v33 = sub_1000362E8(v102, (uint64_t)qword_1004897F0);
      (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v20, v33, v32);
      v34 = (_QWORD *)*v30;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v30);
      *v30 = v34;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v34 = (_QWORD *)sub_100060B90(0, v34[2] + 1, 1, v34);
        *v30 = v34;
      }
      v37 = v34[2];
      v36 = v34[3];
      if (v37 >= v36 >> 1)
      {
        v34 = (_QWORD *)sub_100060B90(v36 > 1, v37 + 1, 1, v34);
        *v30 = v34;
      }
      v34[2] = v37 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v101 + 32))((unint64_t)v34+ ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80))+ *(_QWORD *)(v101 + 72) * v37, v20, v102);
      ((void (*)(Swift::String *, _QWORD))v96)(v110, 0);
      v23 = v31;
      v12 = v108;
    }
    else
    {
      ((void (*)(Swift::String *, _QWORD))v28)(v110, 0);
    }
  }
  URL._bridgeToObjectiveC()(v27);
  v39 = v38;
  v110[0]._countAndFlagsBits = 0;
  v40 = objc_msgSend(a1, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v38, 0, 0, v110);

  countAndFlagsBits = (void *)v110[0]._countAndFlagsBits;
  if (!v40)
  {
    v59 = (id)v110[0]._countAndFlagsBits;
    v60 = _convertNSErrorToError(_:)(countAndFlagsBits);

    swift_willThrow(v61);
    if (qword_10047AAB8 != -1)
      swift_once(&qword_10047AAB8, sub_1000E1968);
    v110[0]._countAndFlagsBits = 0;
    v110[0]._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(53);
    v62._countAndFlagsBits = 0xD000000000000033;
    v62._object = (void *)0x80000001003E5550;
    String.append(_:)(v62);
    v109 = v60;
    v63 = sub_10000EDC8(&qword_10047ECA8);
    _print_unlocked<A, B>(_:_:)(&v109, v110, v63, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    object = v110[0]._object;
    Log.error(_:isPrivate:)(v110[0], 0);
    swift_bridgeObjectRelease(object);
    swift_errorRelease(v60);
    return sub_100036600((uint64_t)v23, &qword_100489940);
  }
  v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, v11);
  v43 = countAndFlagsBits;

  swift_bridgeObjectRetain(a4);
  v44 = sub_1001A90F4(v42, v106, a4);
  swift_bridgeObjectRelease(a4);
  v45 = *(_QWORD *)(v44 + 16);
  v106 = v11;
  v108 = v12;
  if (v45)
  {
    v96 = v23;
    v110[0]._countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
    sub_1000A5860(0, v45, 0);
    v46 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v95 = v44;
    v47 = v44 + v46;
    v48 = *(_QWORD *)(v12 + 72);
    v49 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v12 + 16);
    do
    {
      v50 = v107;
      v51 = v49(v107, v47, v11);
      v52 = URL.path.getter(v51);
      v54 = v53;
      (*(void (**)(char *, uint64_t))(v108 + 8))(v50, v11);
      v55 = (double *)v110[0]._countAndFlagsBits;
      if ((swift_isUniquelyReferenced_nonNull_native(v110[0]._countAndFlagsBits) & 1) == 0)
      {
        sub_1000A5860(0, *((_QWORD *)v55 + 2) + 1, 1);
        v55 = (double *)v110[0]._countAndFlagsBits;
      }
      v57 = *((_QWORD *)v55 + 2);
      v56 = *((_QWORD *)v55 + 3);
      if (v57 >= v56 >> 1)
      {
        sub_1000A5860((double *)(v56 > 1), v57 + 1, 1);
        v55 = (double *)v110[0]._countAndFlagsBits;
      }
      *((_QWORD *)v55 + 2) = v57 + 1;
      v58 = &v55[2 * v57];
      *((_QWORD *)v58 + 4) = v52;
      *((_QWORD *)v58 + 5) = v54;
      v47 += v48;
      --v45;
      v11 = v106;
    }
    while (v45);
    swift_bridgeObjectRelease(v95);
    v23 = v96;
  }
  else
  {
    swift_bridgeObjectRelease(v44);
    v55 = _swiftEmptyArrayStorage;
  }
  v110[0]._countAndFlagsBits = (uint64_t)v55;
  v65 = sub_10000EDC8(&qword_100489948);
  v66 = sub_100043310(&qword_100489950, &qword_100489948, (uint64_t)&protocol conformance descriptor for [A]);
  v67 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v65, v66);
  v69 = v68;
  swift_bridgeObjectRelease(v55);
  if (v67 || v69 != 0xE000000000000000)
  {
    v74 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v69, 0, 0xE000000000000000, 0);
    v71 = v108;
    v72 = (uint64_t)v103;
    v73 = v104;
    if ((v74 & 1) != 0 || v105(v23, 1, v104))
    {
      v70 = swift_bridgeObjectRelease(v69);
      goto LABEL_35;
    }
    v87 = (void (*)(Swift::String *, _QWORD, __n128))URLComponents.queryItems.modify(v110);
    if (!*v86)
    {
      v94 = swift_bridgeObjectRelease(v69);
      v87(v110, 0, v94);
      v11 = v106;
      goto LABEL_35;
    }
    v88 = v86;
    v89 = v97;
    URLQueryItem.init(name:value:)(0x656D686361747441, 0xEB0000000073746ELL, v67, v69);
    swift_bridgeObjectRelease(v69);
    v90 = (_QWORD *)*v88;
    v91 = swift_isUniquelyReferenced_nonNull_native(*v88);
    *v88 = v90;
    if ((v91 & 1) == 0)
    {
      v90 = (_QWORD *)sub_100060B90(0, v90[2] + 1, 1, v90);
      *v88 = v90;
    }
    v93 = v90[2];
    v92 = v90[3];
    if (v93 >= v92 >> 1)
    {
      v90 = (_QWORD *)sub_100060B90(v92 > 1, v93 + 1, 1, v90);
      *v88 = v90;
    }
    v11 = v106;
    v90[2] = v93 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v101 + 32))((unint64_t)v90+ ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80))+ *(_QWORD *)(v101 + 72) * v93, v89, v102);
    ((void (*)(Swift::String *, _QWORD))v87)(v110, 0);
  }
  else
  {
    v70 = swift_bridgeObjectRelease(0xE000000000000000);
    v71 = v108;
    v72 = (uint64_t)v103;
  }
  v73 = v104;
LABEL_35:
  if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v105)(v23, 1, v73, v70))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56))(v72, 1, 1, v11);
LABEL_38:
    sub_100036600(v72, (uint64_t *)&unk_100482AF0);
    if (qword_10047AAB8 != -1)
      swift_once(&qword_10047AAB8, sub_1000E1968);
    v78._countAndFlagsBits = 0xD000000000000027;
    v78._object = (void *)0x80000001003E53C0;
    Log.error(_:isPrivate:)(v78, 0);
    return sub_100036600((uint64_t)v23, &qword_100489940);
  }
  v75 = v98;
  v76 = v99;
  v77 = (*(uint64_t (**)(char *, char *, uint64_t))(v99 + 16))(v98, v23, v73);
  URLComponents.url.getter(v77);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v73);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v72, 1, v11) == 1)
    goto LABEL_38;
  v80 = v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v100, v72, v11);
  v81 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v81)
  {
    v83 = v81;
    URL._bridgeToObjectiveC()(v82);
    v85 = v84;
    objc_msgSend(v83, "openURL:configuration:completionHandler:", v84, 0, 0);

    v80 = v100;
  }
  (*(void (**)(char *, uint64_t))(v71 + 8))(v80, v11);
  return sub_100036600((uint64_t)v23, &qword_100489940);
}

void sub_1001A8910()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));

}

uint64_t sub_1001A892C(uint64_t a1)
{
  uint64_t v1;

  v1 = StateObserver.deinit(a1);
  swift_release(*(_QWORD *)(v1 + 64));

  return swift_deallocClassInstance(v1, 80, 7);
}

uint64_t type metadata accessor for TapToRadarController(uint64_t a1)
{
  uint64_t result;

  result = qword_100489830;
  if (!qword_100489830)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TapToRadarController);
  return result;
}

uint64_t sub_1001A89A4(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "\b";
  return swift_initClassMetadata2(a1, 256, 2, v2, a1 + 208);
}

uint64_t sub_1001A89F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A7A0C(a1, v1, (uint64_t)sub_1001A9E24, (uint64_t)&unk_10044AFB8);
}

uint64_t sub_1001A8A18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001A8A28(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001A8A30(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A7A0C(a1, v1, (uint64_t)sub_1001A8A7C, (uint64_t)&unk_10044AF90);
}

uint64_t sub_1001A8A58()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1001A8A7C()
{
  uint64_t v0;

  return sub_1001A7BF0(v0, (void (*)(void))sub_1001A997C);
}

void sub_1001A8A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  NSURL *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  void *v35;
  char *v36;
  unint64_t v37;
  char v38;
  __n128 v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  NSURL *v52;
  void *v53;
  void *v54;
  unsigned int v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  __n128 v62;
  char *v63;
  char *v64;
  char *v65;
  id v66;
  char *v67;
  uint64_t v68;
  void *v69;
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  _QWORD v74[2];
  id v75[2];
  _QWORD *v76;

  v0 = sub_10000EDC8((uint64_t *)&unk_100482AF0);
  v1 = __chkstk_darwin(v0);
  v73 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v4 = (char *)&v63 - v3;
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v70 = (char *)&v63 - v11;
  v12 = __chkstk_darwin(v10);
  v67 = (char *)&v63 - v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v63 - v14;
  v16 = (unint64_t)objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  if (qword_10047A988 != -1)
    goto LABEL_31;
  while (1)
  {
    v17 = sub_1000362E8(v5, (uint64_t)qword_1004AF2F8);
    v72 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v18 = v72(v15, v17, v5);
    URL.path.getter(v18);
    v20 = v19;
    v21 = String._bridgeToObjectiveC()();
    LODWORD(v20) = objc_msgSend((id)v16, "fileExistsAtPath:", v21, swift_bridgeObjectRelease(v20).n128_f64[0]);

    if (!(_DWORD)v20)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);

      return;
    }
    URL._bridgeToObjectiveC()(v22);
    v24 = v23;
    v75[0] = 0;
    v25 = objc_msgSend((id)v16, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v23, 0, 0, v75);

    v26 = v75[0];
    if (!v25)
    {
      v43 = v75[0];
      v44 = _convertNSErrorToError(_:)(v26);

      swift_willThrow(v45);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
      v46 = v44;
      goto LABEL_29;
    }
    v66 = (id)v16;
    v63 = v15;
    v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v5);
    v28 = v26;

    v76 = _swiftEmptyArrayStorage;
    v29 = *(void **)(v27 + 16);
    v65 = v9;
    v69 = v29;
    if (!v29)
      break;
    v16 = 0;
    v30 = v73;
    v64 = v4;
    v31 = v67;
    v68 = v27;
    while (v16 < *(_QWORD *)(v27 + 16))
    {
      v9 = (char *)((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v32 = *(_QWORD *)(v6 + 72);
      v72(v4, (uint64_t)&v9[v27 + v32 * v16], v5);
      v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v71(v4, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
        goto LABEL_20;
      v33 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 32);
      v34 = v33(v31, v4, v5);
      v35 = (void *)URL.path.getter(v34);
      v15 = v36;
      v75[0] = v35;
      v75[1] = v36;
      v74[0] = 0x6461726F74706174;
      v74[1] = 0xEA00000000007261;
      v37 = sub_10006C814();
      v38 = StringProtocol.contains<A>(_:)(v74, &type metadata for String, &type metadata for String, v37, v37);
      v39 = swift_bridgeObjectRelease(v15);
      if ((v38 & 1) != 0)
      {
        ((void (*)(char *, char *, uint64_t, __n128))v33)(v70, v31, v5, v39);
        v40 = v76;
        if ((swift_isUniquelyReferenced_nonNull_native(v76) & 1) == 0)
        {
          sub_1000A55E0(0, v40[2] + 1, 1);
          v40 = v76;
        }
        v42 = v40[2];
        v41 = v40[3];
        v15 = (char *)(v42 + 1);
        if (v42 >= v41 >> 1)
        {
          sub_1000A55E0(v41 > 1, v42 + 1, 1);
          v40 = v76;
        }
        v40[2] = v15;
        v33(&v9[(_QWORD)v40 + v42 * v32], v70, v5);
        v76 = v40;
        v4 = v64;
        v31 = v67;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v31, v5);
      }
      ++v16;
      v27 = v68;
      v30 = v73;
      if (v69 == (void *)v16)
        goto LABEL_19;
    }
    __break(1u);
LABEL_31:
    swift_once(&qword_10047A988, sub_100095A18);
  }
  v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v30 = v73;
LABEL_19:
  v71(v4, 1, 1, v5);
LABEL_20:
  swift_bridgeObjectRelease(v27);
  sub_100036600((uint64_t)v4, (uint64_t *)&unk_100482AF0);
  v48 = v76[2];
  if (!v48)
  {
LABEL_27:
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v63, v5, v47);
    swift_release();

    return;
  }
  v49 = (char *)v76 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v50 = *(_QWORD *)(v6 + 72);
  swift_bridgeObjectRetain(v76);
  v51 = v65;
  while (1)
  {
    v72(v30, (uint64_t)v49, v5);
    v71(v30, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v30, 1, v5) == 1)
      goto LABEL_26;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v51, v30, v5);
    URL._bridgeToObjectiveC()(v52);
    v54 = v53;
    v75[0] = 0;
    v55 = objc_msgSend(v66, "removeItemAtURL:error:", v53, v75);

    v56 = v75[0];
    if (!v55)
      break;
    v57 = v75[0];
    (*(void (**)(char *, uint64_t))(v6 + 8))(v51, v5);
    v49 += v50;
    --v48;
    v30 = v73;
    if (!v48)
    {
      v71(v73, 1, 1, v5);
LABEL_26:
      v47 = swift_release();
      goto LABEL_27;
    }
  }
  v58 = v75[0];
  v59 = _convertNSErrorToError(_:)(v56);

  swift_willThrow(v60);
  v61 = *(void (**)(char *, uint64_t))(v6 + 8);
  v61(v51, v5);
  v62 = swift_release();
  ((void (*)(char *, uint64_t, __n128))v61)(v63, v5, v62);
  swift_release();

  v46 = v59;
LABEL_29:
  swift_errorRelease(v46);
}

uint64_t sub_1001A90F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, char *, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  __n128 v24;
  double *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[4];
  double *v38;

  v35 = a2;
  v36 = a3;
  v4 = sub_10000EDC8((uint64_t *)&unk_100482AF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v34 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v9);
  v38 = _swiftEmptyArrayStorage;
  v33 = *(_QWORD *)(a1 + 16);
  if (v33)
  {
    v30 = (char *)&v28 - v12;
    v31 = v6;
    v13 = 0;
    v32 = a1;
    while (v13 < *(_QWORD *)(a1 + 16))
    {
      v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v15 = *(_QWORD *)(v8 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, a1 + v14 + v15 * v13, v7);
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v29(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
        goto LABEL_15;
      v16 = *(uint64_t (**)(char *, char *, uint64_t))(v8 + 32);
      v17 = v30;
      v18 = v16(v30, v6, v7);
      v19 = URL.path.getter(v18);
      v21 = v20;
      v37[2] = v19;
      v37[3] = v20;
      v37[0] = v35;
      v37[1] = v36;
      v22 = sub_10006C814();
      v23 = StringProtocol.contains<A>(_:)(v37, &type metadata for String, &type metadata for String, v22, v22);
      v24 = swift_bridgeObjectRelease(v21);
      if ((v23 & 1) != 0)
      {
        ((void (*)(char *, char *, uint64_t, __n128))v16)(v34, v17, v7, v24);
        v25 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
        {
          sub_1000A55E0(0, *((_QWORD *)v25 + 2) + 1, 1);
          v25 = v38;
        }
        v27 = *((_QWORD *)v25 + 2);
        v26 = *((_QWORD *)v25 + 3);
        if (v27 >= v26 >> 1)
        {
          sub_1000A55E0(v26 > 1, v27 + 1, 1);
          v25 = v38;
        }
        *((_QWORD *)v25 + 2) = v27 + 1;
        result = v16((char *)v25 + v14 + v27 * v15, v34, v7);
        v38 = v25;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v17, v7);
      }
      ++v13;
      a1 = v32;
      v6 = v31;
      if (v33 == v13)
      {
        v29(v31, 1, 1, v7);
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_15:
    swift_bridgeObjectRelease(a1);
    sub_100036600((uint64_t)v6, (uint64_t *)&unk_100482AF0);
    return (uint64_t)v38;
  }
  return result;
}

void sub_1001A93C4()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  NSString v16;
  NSString v17;
  id v18;
  NSString v19;
  void *v20;
  id v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  double v26;
  Swift::String v27;
  void *object;
  Swift::String v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t (**v46)();
  uint64_t v47;
  char *v48;
  id v49;
  uint64_t v50;
  __n128 v51;
  void (*v52)(char *, uint64_t, __n128);
  uint64_t v53;
  char *v54;
  char *v55;
  void (*v56)(char *, char *, uint64_t);
  id v57;
  char *v58;
  uint64_t v59;
  uint64_t aBlock;
  unint64_t v61;
  void (*v62)(uint64_t, void *);
  void *v63;
  uint64_t (*v64)(_QWORD);
  uint64_t v65;
  uint64_t v66;

  v59 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v59);
  v1 = (char *)&v53 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v6);
  v10 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v53 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v53 - v14;
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  if (!qword_1004AF240)
    goto LABEL_17;
  if (*(_BYTE *)(qword_1004AF240 + qword_1004AF728) == 1)
  {
    v16 = String._bridgeToObjectiveC()();
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v16, v17, 1);

    v19 = String._bridgeToObjectiveC()();
    v64 = nullsub_1;
    v65 = 0;
    aBlock = (uint64_t)_NSConcreteStackBlock;
    v61 = 1107296256;
    v62 = sub_10004C834;
    v63 = &unk_10044B008;
    v20 = _Block_copy(&aBlock);
    swift_release();
    v21 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v19, 0, v20);
    _Block_release(v20);

    objc_msgSend(v18, "addAction:", v21);
    if (*((_QWORD *)&xmmword_1004AF228 + 1))
    {
      objc_msgSend(*((id *)&xmmword_1004AF228 + 1), "presentViewController:animated:completion:", v18, 1, 0);

      return;
    }
    goto LABEL_18;
  }
  v57 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  if (qword_10047A988 != -1)
    swift_once(&qword_10047A988, sub_100095A18);
  v22 = sub_1000362E8(v6, (uint64_t)qword_1004AF2F8);
  v23 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v58 = v15;
  v56 = v23;
  v23(v15, (char *)v22, v6);
  aBlock = 0;
  v61 = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(v61);
  aBlock = 0x6461726F74706174;
  v61 = 0xEA00000000007261;
  v25 = Date.init()(v24);
  v26 = Date.timeIntervalSince1970.getter(v25);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((~*(_QWORD *)&v26 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v26 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v54 = v1;
  v66 = (uint64_t)v26;
  v27._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v27._object;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(object);
  v29._countAndFlagsBits = 1987013934;
  v29._object = (void *)0xE400000000000000;
  String.append(_:)(v29);
  v30 = aBlock;
  v31 = v61;
  v55 = v13;
  v32 = v58;
  URL.appendingPathComponent(_:)(aBlock);
  v33 = (char *)qword_1004AF240;
  if (qword_1004AF240)
  {
    v34 = v56;
    v56(v10, v32, v6);
    v35 = *(unsigned __int8 *)(v7 + 80);
    v36 = (v35 + 24) & ~v35;
    v53 = v7;
    v37 = (v8 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
    v38 = swift_allocObject(&unk_10044AFF0, v37 + 16, v35 | 7);
    v39 = v10;
    v40 = v57;
    *(_QWORD *)(v38 + 16) = v57;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v38 + v36, v39, v6);
    v41 = (uint64_t *)(v38 + v37);
    *v41 = v30;
    v41[1] = v31;
    v42 = sub_10000EDC8(&qword_100483AC0);
    v43 = *(int *)(v42 + 48);
    v44 = (uint64_t)v54;
    v45 = v55;
    v46 = (uint64_t (**)())&v54[*(int *)(v42 + 64)];
    v34(v54, v55, v6);
    *(_BYTE *)(v44 + v43) = 1;
    *v46 = sub_1001A9E48;
    v46[1] = (uint64_t (*)())v38;
    swift_storeEnumTagMultiPayload(v44, v59, 0);
    v47 = (uint64_t)&v33[qword_100487428];
    swift_beginAccess(&v33[qword_100487428], &aBlock, 33, 0);
    v48 = v33;
    v49 = v40;
    swift_retain();
    sub_1001791F0(v44, v47);
    swift_endAccess(&aBlock);
    sub_100176820();
    v50 = sub_10007F080(v44);
    (*(void (**)(uint64_t))&v48[qword_100487458])(v50);

    v51 = swift_release();
    v52 = *(void (**)(char *, uint64_t, __n128))(v53 + 8);
    v52(v45, v6, v51);
    ((void (*)(char *, uint64_t))v52)(v58, v6);
    return;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_1001A997C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  __n128 v16;
  void (*v17)(_BYTE *, _QWORD);
  size_t *v18;
  size_t *v19;
  uint64_t v20;
  size_t *v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  char *v33;
  id v34;
  NSURL *v35;
  void *v36;
  void *v37;
  void *v38;
  size_t v39;
  uint64_t v40;
  unint64_t v41;
  size_t *v42;
  void (*v43)(_BYTE *, _QWORD);
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[32];

  v0 = type metadata accessor for URLComponents(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v45 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000EDC8((uint64_t *)&unk_100482AF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  __chkstk_darwin(v6);
  v44 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URLQueryItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000EDC8(&qword_100489940);
  __chkstk_darwin(v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(string:)(0xD000000000000012, 0x80000001003E53A0);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48);
  if (!v15(v14, 1, v0))
  {
    if (qword_10047B138 != -1)
      swift_once(&qword_10047B138, sub_1001A73A4);
    v16 = swift_bridgeObjectRetain(qword_1004897D0);
    URLComponents.queryItems.setter(v16);
  }
  if (!v15(v14, 1, v0))
  {
    v17 = (void (*)(_BYTE *, _QWORD))URLComponents.queryItems.modify(v48);
    if (*v18)
    {
      v19 = v18;
      v43 = v17;
      if (qword_10047B140 != -1)
        swift_once(&qword_10047B140, sub_1001A74C8);
      v20 = sub_1000362E8(v8, (uint64_t)qword_1004897D8);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v20, v8);
      v21 = v19;
      v22 = (_QWORD *)*v19;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v22);
      v42 = v21;
      *v21 = (size_t)v22;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v22 = (_QWORD *)sub_100060B90(0, v22[2] + 1, 1, v22);
        *v42 = (size_t)v22;
      }
      v25 = v22[2];
      v24 = v22[3];
      v26 = v25 + 1;
      if (v25 >= v24 >> 1)
      {
        v41 = v25 + 1;
        v39 = sub_100060B90(v24 > 1, v25 + 1, 1, v22);
        v26 = v41;
        v22 = (_QWORD *)v39;
        *v42 = v39;
      }
      v22[2] = v26;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v22+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v25, v11, v8);
      v43(v48, 0);
    }
    else
    {
      v17(v48, 0);
    }
  }
  if (v15(v14, 1, v0))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v5, 1, 1, v47);
LABEL_18:
    sub_100036600((uint64_t)v5, (uint64_t *)&unk_100482AF0);
    if (qword_10047AAB8 != -1)
      swift_once(&qword_10047AAB8, sub_1000E1968);
    v31._countAndFlagsBits = 0xD000000000000027;
    v31._object = (void *)0x80000001003E53C0;
    Log.error(_:isPrivate:)(v31, 0);
    return sub_100036600((uint64_t)v14, &qword_100489940);
  }
  v27 = v45;
  v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v1 + 16))(v45, v14, v0);
  URLComponents.url.getter(v28);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v27, v0);
  v30 = v46;
  v29 = v47;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v5, 1, v47) == 1)
    goto LABEL_18;
  v33 = v44;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v44, v5, v29);
  v34 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v34)
  {
    v36 = v34;
    URL._bridgeToObjectiveC()(v35);
    v38 = v37;
    objc_msgSend(v36, "openURL:configuration:completionHandler:", v37, 0, 0);

  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v29);
  return sub_100036600((uint64_t)v14, &qword_100489940);
}

double sub_1001A9E24()
{
  uint64_t v0;

  return sub_1001A7BF0(v0, sub_1001A93C4);
}

uint64_t sub_1001A9E48()
{
  return sub_1001A9EF8((uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))sub_1001A7C48);
}

uint64_t sub_1001A9E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1001A9EEC()
{
  return sub_1001A9EF8((uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))sub_1001A7F64);
}

uint64_t sub_1001A9EF8(uint64_t (*a1)(_QWORD, unint64_t, _QWORD, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a1(*(_QWORD *)(v1 + 16), v1 + v3, *v4, v4[1]);
}

_QWORD *sub_1001A9F7C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int16 v59;
  int v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    v18 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for MeasurementCapture(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48);
    swift_bridgeObjectRetain(v7);
    v15 = swift_bridgeObjectRetain(v8);
    if (v14(v11, 1, v12, v15))
    {
      v16 = sub_10000EDC8((uint64_t *)&unk_1004862E0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v19 = type metadata accessor for URL(0);
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      v20(v10, v11, v19);
      v20(&v10[*(int *)(v12 + 20)], &v11[*(int *)(v12 + 20)], v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v21 = *(int *)(a3 + 28);
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v63 = a3;
    v62 = a2;
    v132 = *((_QWORD *)v23 + 10);
    v133 = *((_QWORD *)v23 + 9);
    v130 = *((_QWORD *)v23 + 12);
    v131 = *((_QWORD *)v23 + 11);
    v128 = *((_QWORD *)v23 + 14);
    v129 = *((_QWORD *)v23 + 13);
    v126 = *((_QWORD *)v23 + 16);
    v127 = *((_QWORD *)v23 + 15);
    v124 = *((_QWORD *)v23 + 18);
    v125 = *((_QWORD *)v23 + 17);
    v122 = *((_QWORD *)v23 + 20);
    v123 = *((_QWORD *)v23 + 19);
    v120 = *((_QWORD *)v23 + 22);
    v121 = *((_QWORD *)v23 + 21);
    v118 = *((_QWORD *)v23 + 24);
    v119 = *((_QWORD *)v23 + 23);
    v116 = *((_QWORD *)v23 + 26);
    v117 = *((_QWORD *)v23 + 25);
    v114 = *((_QWORD *)v23 + 28);
    v115 = *((_QWORD *)v23 + 27);
    v113 = *((_QWORD *)v23 + 29);
    v112 = *((_QWORD *)v23 + 30);
    v111 = *((_QWORD *)v23 + 31);
    v110 = *((_QWORD *)v23 + 32);
    v109 = *((_QWORD *)v23 + 33);
    v108 = *((_QWORD *)v23 + 34);
    v107 = *((_QWORD *)v23 + 35);
    v106 = *((_QWORD *)v23 + 36);
    v105 = *((_QWORD *)v23 + 37);
    v104 = *((_QWORD *)v23 + 38);
    v103 = *((_QWORD *)v23 + 39);
    v102 = *((_QWORD *)v23 + 40);
    v101 = *((_QWORD *)v23 + 41);
    v100 = *((_QWORD *)v23 + 42);
    v99 = *((_QWORD *)v23 + 43);
    v98 = *((_QWORD *)v23 + 44);
    v97 = *((_QWORD *)v23 + 45);
    v96 = *((_QWORD *)v23 + 46);
    v95 = *((_QWORD *)v23 + 47);
    v94 = *((_QWORD *)v23 + 48);
    v93 = *((_QWORD *)v23 + 49);
    v92 = *((_QWORD *)v23 + 50);
    v91 = *((_QWORD *)v23 + 51);
    v90 = *((_QWORD *)v23 + 52);
    v89 = *((_QWORD *)v23 + 53);
    v88 = *((_QWORD *)v23 + 54);
    v87 = *((_QWORD *)v23 + 55);
    v86 = *((_QWORD *)v23 + 56);
    v85 = *((_QWORD *)v23 + 57);
    v84 = *((_QWORD *)v23 + 58);
    v83 = *((_QWORD *)v23 + 59);
    v82 = *((_QWORD *)v23 + 60);
    v81 = *((_QWORD *)v23 + 61);
    v80 = *((_QWORD *)v23 + 62);
    v79 = *((_QWORD *)v23 + 63);
    v78 = *((_QWORD *)v23 + 64);
    v77 = *((_QWORD *)v23 + 65);
    v76 = *((_QWORD *)v23 + 66);
    v75 = *((_QWORD *)v23 + 67);
    v74 = *((_QWORD *)v23 + 68);
    v73 = *((_QWORD *)v23 + 69);
    v72 = *((_QWORD *)v23 + 70);
    v61 = a1;
    v71 = *((_QWORD *)v23 + 71);
    v70 = *((_QWORD *)v23 + 72);
    v69 = *((_QWORD *)v23 + 73);
    v68 = *((_QWORD *)v23 + 74);
    v67 = *((_QWORD *)v23 + 75);
    v66 = *((_QWORD *)v23 + 76);
    v65 = *((_QWORD *)v23 + 77);
    v64 = *((_QWORD *)v23 + 78);
    v34 = *((_QWORD *)v23 + 79);
    v35 = *((_QWORD *)v23 + 80);
    v36 = *((_QWORD *)v23 + 81);
    v37 = *((_QWORD *)v23 + 82);
    v38 = *((_QWORD *)v23 + 83);
    v39 = *((_QWORD *)v23 + 84);
    v40 = *((_QWORD *)v23 + 85);
    v41 = *((_QWORD *)v23 + 86);
    v42 = *((_QWORD *)v23 + 87);
    v43 = *((_QWORD *)v23 + 88);
    v44 = *((_QWORD *)v23 + 89);
    v45 = *((_QWORD *)v23 + 90);
    v46 = *((_QWORD *)v23 + 91);
    v47 = *((_QWORD *)v23 + 92);
    v48 = *((_QWORD *)v23 + 93);
    v49 = *((_QWORD *)v23 + 94);
    v50 = *((_QWORD *)v23 + 95);
    v51 = *((_QWORD *)v23 + 96);
    v52 = *((_QWORD *)v23 + 97);
    v53 = *((_QWORD *)v23 + 98);
    v54 = *((_QWORD *)v23 + 99);
    v55 = *((_QWORD *)v23 + 100);
    v56 = *((_QWORD *)v23 + 101);
    v57 = *((_QWORD *)v23 + 102);
    v58 = *((_QWORD *)v23 + 103);
    v59 = *((_WORD *)v23 + 418);
    v60 = *((_DWORD *)v23 + 208);
    v24 = *((_QWORD *)v23 + 8);
    v25 = *(_QWORD *)v23;
    v26 = *((_QWORD *)v23 + 1);
    v27 = *((_QWORD *)v23 + 2);
    v28 = *((_QWORD *)v23 + 3);
    v29 = *((_QWORD *)v23 + 4);
    v30 = *((_QWORD *)v23 + 5);
    v31 = *((_QWORD *)v23 + 6);
    v32 = *((_QWORD *)v23 + 7);
    sub_100085E0C(*(_QWORD *)v23, v26, v27, v28, v29, v30, v31, v32, v24, v133, v132, v131, v130, v129, v128, v127, v126, v125, v124,
      v123,
      v122,
      v121,
      v120,
      v119,
      v118,
      v117,
      v116,
      v115,
      v114,
      v113,
      v112,
      v111,
      v110,
      v109,
      v108,
      v107,
      v106,
      v105,
      v104,
      v103,
      v102,
      v101,
      v100,
      v99,
      v98,
      v97,
      v96,
      v95,
      v94,
      v93,
      v92,
      v91,
      v90,
      v89,
      v88,
      v87,
      v86,
      v85,
      v84,
      v83,
      v82,
      v81,
      v80);
    *(_QWORD *)v22 = v25;
    *((_QWORD *)v22 + 1) = v26;
    *((_QWORD *)v22 + 2) = v27;
    *((_QWORD *)v22 + 3) = v28;
    *((_QWORD *)v22 + 4) = v29;
    *((_QWORD *)v22 + 5) = v30;
    *((_QWORD *)v22 + 6) = v31;
    *((_QWORD *)v22 + 7) = v32;
    *((_QWORD *)v22 + 8) = v24;
    v18 = v61;
    *((_QWORD *)v22 + 9) = v133;
    *((_QWORD *)v22 + 10) = v132;
    *((_QWORD *)v22 + 11) = v131;
    *((_QWORD *)v22 + 12) = v130;
    *((_QWORD *)v22 + 13) = v129;
    *((_QWORD *)v22 + 14) = v128;
    *((_QWORD *)v22 + 15) = v127;
    *((_QWORD *)v22 + 16) = v126;
    *((_QWORD *)v22 + 17) = v125;
    *((_QWORD *)v22 + 18) = v124;
    *((_QWORD *)v22 + 19) = v123;
    *((_QWORD *)v22 + 20) = v122;
    *((_QWORD *)v22 + 21) = v121;
    *((_QWORD *)v22 + 22) = v120;
    *((_QWORD *)v22 + 23) = v119;
    *((_QWORD *)v22 + 24) = v118;
    *((_QWORD *)v22 + 25) = v117;
    *((_QWORD *)v22 + 26) = v116;
    *((_QWORD *)v22 + 27) = v115;
    *((_QWORD *)v22 + 28) = v114;
    *((_QWORD *)v22 + 29) = v113;
    *((_QWORD *)v22 + 30) = v112;
    *((_QWORD *)v22 + 31) = v111;
    *((_QWORD *)v22 + 32) = v110;
    *((_QWORD *)v22 + 33) = v109;
    *((_QWORD *)v22 + 34) = v108;
    *((_QWORD *)v22 + 35) = v107;
    *((_QWORD *)v22 + 36) = v106;
    *((_QWORD *)v22 + 37) = v105;
    *((_QWORD *)v22 + 38) = v104;
    *((_QWORD *)v22 + 39) = v103;
    *((_QWORD *)v22 + 40) = v102;
    *((_QWORD *)v22 + 41) = v101;
    *((_QWORD *)v22 + 42) = v100;
    *((_QWORD *)v22 + 43) = v99;
    *((_QWORD *)v22 + 44) = v98;
    *((_QWORD *)v22 + 45) = v97;
    *((_QWORD *)v22 + 46) = v96;
    *((_QWORD *)v22 + 47) = v95;
    *((_QWORD *)v22 + 48) = v94;
    *((_QWORD *)v22 + 49) = v93;
    *((_QWORD *)v22 + 50) = v92;
    *((_QWORD *)v22 + 51) = v91;
    *((_QWORD *)v22 + 52) = v90;
    *((_QWORD *)v22 + 53) = v89;
    *((_QWORD *)v22 + 54) = v88;
    *((_QWORD *)v22 + 55) = v87;
    *((_QWORD *)v22 + 56) = v86;
    *((_QWORD *)v22 + 57) = v85;
    *((_QWORD *)v22 + 58) = v84;
    *((_QWORD *)v22 + 59) = v83;
    *((_QWORD *)v22 + 60) = v82;
    *((_QWORD *)v22 + 61) = v81;
    *((_QWORD *)v22 + 62) = v80;
    *((_QWORD *)v22 + 63) = v79;
    *((_QWORD *)v22 + 64) = v78;
    *((_QWORD *)v22 + 65) = v77;
    *((_QWORD *)v22 + 66) = v76;
    *((_QWORD *)v22 + 67) = v75;
    *((_QWORD *)v22 + 68) = v74;
    *((_QWORD *)v22 + 69) = v73;
    *((_QWORD *)v22 + 70) = v72;
    *((_QWORD *)v22 + 71) = v71;
    *((_QWORD *)v22 + 72) = v70;
    *((_QWORD *)v22 + 73) = v69;
    *((_QWORD *)v22 + 74) = v68;
    *((_QWORD *)v22 + 75) = v67;
    *((_QWORD *)v22 + 76) = v66;
    *((_QWORD *)v22 + 77) = v65;
    *((_QWORD *)v22 + 78) = v64;
    *((_QWORD *)v22 + 79) = v34;
    *((_QWORD *)v22 + 80) = v35;
    *((_QWORD *)v22 + 81) = v36;
    *((_QWORD *)v22 + 82) = v37;
    *((_QWORD *)v22 + 83) = v38;
    *((_QWORD *)v22 + 84) = v39;
    *((_QWORD *)v22 + 85) = v40;
    *((_QWORD *)v22 + 86) = v41;
    *((_QWORD *)v22 + 87) = v42;
    *((_QWORD *)v22 + 88) = v43;
    *((_QWORD *)v22 + 89) = v44;
    *((_QWORD *)v22 + 90) = v45;
    *((_QWORD *)v22 + 91) = v46;
    *((_QWORD *)v22 + 92) = v47;
    *((_QWORD *)v22 + 93) = v48;
    *((_QWORD *)v22 + 94) = v49;
    *((_QWORD *)v22 + 95) = v50;
    *((_QWORD *)v22 + 96) = v51;
    *((_QWORD *)v22 + 97) = v52;
    *((_QWORD *)v22 + 98) = v53;
    *((_QWORD *)v22 + 99) = v54;
    *((_QWORD *)v22 + 100) = v55;
    *((_QWORD *)v22 + 101) = v56;
    *((_QWORD *)v22 + 102) = v57;
    *((_QWORD *)v22 + 103) = v58;
    *((_WORD *)v22 + 418) = v59;
    *((_DWORD *)v22 + 208) = v60;
    *((_BYTE *)v61 + *(int *)(v63 + 32)) = *((_BYTE *)v62 + *(int *)(v63 + 32));
  }
  return v18;
}

uint64_t sub_1001AA94C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for MeasurementCapture(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = type metadata accessor for URL(0);
    v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
    v7(v4, v6);
    v7(v4 + *(int *)(v5 + 20), v6);
  }
  v8 = a1 + *(int *)(a2 + 28);
  v25 = *(_OWORD *)(v8 + 464);
  v26 = *(_OWORD *)(v8 + 480);
  v23 = *(_OWORD *)(v8 + 432);
  v24 = *(_OWORD *)(v8 + 448);
  v21 = *(_OWORD *)(v8 + 400);
  v22 = *(_OWORD *)(v8 + 416);
  v19 = *(_OWORD *)(v8 + 368);
  v20 = *(_OWORD *)(v8 + 384);
  v17 = *(_OWORD *)(v8 + 336);
  v18 = *(_OWORD *)(v8 + 352);
  v15 = *(_OWORD *)(v8 + 304);
  v16 = *(_OWORD *)(v8 + 320);
  v14 = *(_OWORD *)(v8 + 288);
  v13 = *(_OWORD *)(v8 + 272);
  v12 = *(_OWORD *)(v8 + 256);
  v11 = *(_OWORD *)(v8 + 240);
  v10 = *(_OWORD *)(v8 + 224);
  return sub_100020E24(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 56), *(_QWORD *)(v8 + 64), *(_QWORD *)(v8 + 72), *(_QWORD *)(v8 + 80), *(_QWORD *)(v8 + 88), *(_QWORD *)(v8 + 96), *(_QWORD *)(v8 + 104), *(_QWORD *)(v8 + 112), *(_QWORD *)(v8 + 120), *(_QWORD *)(v8 + 128), *(_QWORD *)(v8 + 136), *(_QWORD *)(v8 + 144),
           *(_QWORD *)(v8 + 152),
           *(_QWORD *)(v8 + 160),
           *(_QWORD *)(v8 + 168),
           *(_QWORD *)(v8 + 176),
           *(_QWORD *)(v8 + 184),
           *(_QWORD *)(v8 + 192),
           *(_QWORD *)(v8 + 200),
           *(_QWORD *)(v8 + 208),
           *(_QWORD *)(v8 + 216),
           v10,
           *((uint64_t *)&v10 + 1),
           v11,
           *((uint64_t *)&v11 + 1),
           v12,
           *((uint64_t *)&v12 + 1),
           v13,
           *((uint64_t *)&v13 + 1),
           v14,
           *((uint64_t *)&v14 + 1),
           v15,
           *((uint64_t *)&v15 + 1),
           v16,
           *((uint64_t *)&v16 + 1),
           v17,
           *((uint64_t *)&v17 + 1),
           v18,
           *((uint64_t *)&v18 + 1),
           v19,
           *((uint64_t *)&v19 + 1),
           v20,
           *((uint64_t *)&v20 + 1),
           v21,
           *((uint64_t *)&v21 + 1),
           v22,
           *((uint64_t *)&v22 + 1),
           v23,
           *((uint64_t *)&v23 + 1),
           v24,
           *((uint64_t *)&v24 + 1),
           v25,
           *((uint64_t *)&v25 + 1),
           v26,
           *((uint64_t *)&v26 + 1),
           *(_QWORD *)(v8 + 496));
}

_QWORD *sub_1001AABAC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *result;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int16 v57;
  int v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v7;
  v10 = (char *)a2 + v7;
  v11 = type metadata accessor for MeasurementCapture(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
  swift_bridgeObjectRetain(v5);
  v14 = swift_bridgeObjectRetain(v6);
  if (v13(v10, 1, v11, v14))
  {
    v15 = sub_10000EDC8((uint64_t *)&unk_1004862E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = type metadata accessor for URL(0);
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v17(v9, v10, v16);
    v17(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v18 = *(int *)(a3 + 28);
  v31 = a1;
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v60 = a3;
  v59 = a2;
  v129 = *((_QWORD *)v20 + 10);
  v130 = *((_QWORD *)v20 + 9);
  v127 = *((_QWORD *)v20 + 12);
  v128 = *((_QWORD *)v20 + 11);
  v125 = *((_QWORD *)v20 + 14);
  v126 = *((_QWORD *)v20 + 13);
  v123 = *((_QWORD *)v20 + 16);
  v124 = *((_QWORD *)v20 + 15);
  v121 = *((_QWORD *)v20 + 18);
  v122 = *((_QWORD *)v20 + 17);
  v119 = *((_QWORD *)v20 + 20);
  v120 = *((_QWORD *)v20 + 19);
  v117 = *((_QWORD *)v20 + 22);
  v118 = *((_QWORD *)v20 + 21);
  v115 = *((_QWORD *)v20 + 24);
  v116 = *((_QWORD *)v20 + 23);
  v113 = *((_QWORD *)v20 + 26);
  v114 = *((_QWORD *)v20 + 25);
  v111 = *((_QWORD *)v20 + 28);
  v112 = *((_QWORD *)v20 + 27);
  v110 = *((_QWORD *)v20 + 29);
  v109 = *((_QWORD *)v20 + 30);
  v108 = *((_QWORD *)v20 + 31);
  v107 = *((_QWORD *)v20 + 32);
  v106 = *((_QWORD *)v20 + 33);
  v105 = *((_QWORD *)v20 + 34);
  v104 = *((_QWORD *)v20 + 35);
  v103 = *((_QWORD *)v20 + 36);
  v102 = *((_QWORD *)v20 + 37);
  v101 = *((_QWORD *)v20 + 38);
  v100 = *((_QWORD *)v20 + 39);
  v99 = *((_QWORD *)v20 + 40);
  v98 = *((_QWORD *)v20 + 41);
  v97 = *((_QWORD *)v20 + 42);
  v96 = *((_QWORD *)v20 + 43);
  v95 = *((_QWORD *)v20 + 44);
  v94 = *((_QWORD *)v20 + 45);
  v93 = *((_QWORD *)v20 + 46);
  v92 = *((_QWORD *)v20 + 47);
  v91 = *((_QWORD *)v20 + 48);
  v90 = *((_QWORD *)v20 + 49);
  v89 = *((_QWORD *)v20 + 50);
  v88 = *((_QWORD *)v20 + 51);
  v87 = *((_QWORD *)v20 + 52);
  v86 = *((_QWORD *)v20 + 53);
  v85 = *((_QWORD *)v20 + 54);
  v84 = *((_QWORD *)v20 + 55);
  v83 = *((_QWORD *)v20 + 56);
  v82 = *((_QWORD *)v20 + 57);
  v81 = *((_QWORD *)v20 + 58);
  v80 = *((_QWORD *)v20 + 59);
  v79 = *((_QWORD *)v20 + 60);
  v78 = *((_QWORD *)v20 + 61);
  v77 = *((_QWORD *)v20 + 62);
  v76 = *((_QWORD *)v20 + 63);
  v75 = *((_QWORD *)v20 + 64);
  v74 = *((_QWORD *)v20 + 65);
  v73 = *((_QWORD *)v20 + 66);
  v72 = *((_QWORD *)v20 + 67);
  v71 = *((_QWORD *)v20 + 68);
  v70 = *((_QWORD *)v20 + 69);
  v69 = *((_QWORD *)v20 + 70);
  v68 = *((_QWORD *)v20 + 71);
  v67 = *((_QWORD *)v20 + 72);
  v66 = *((_QWORD *)v20 + 73);
  v65 = *((_QWORD *)v20 + 74);
  v64 = *((_QWORD *)v20 + 75);
  v63 = *((_QWORD *)v20 + 76);
  v62 = *((_QWORD *)v20 + 77);
  v61 = *((_QWORD *)v20 + 78);
  v32 = *((_QWORD *)v20 + 79);
  v33 = *((_QWORD *)v20 + 80);
  v34 = *((_QWORD *)v20 + 81);
  v35 = *((_QWORD *)v20 + 82);
  v36 = *((_QWORD *)v20 + 83);
  v37 = *((_QWORD *)v20 + 84);
  v38 = *((_QWORD *)v20 + 85);
  v39 = *((_QWORD *)v20 + 86);
  v40 = *((_QWORD *)v20 + 87);
  v41 = *((_QWORD *)v20 + 88);
  v42 = *((_QWORD *)v20 + 89);
  v43 = *((_QWORD *)v20 + 90);
  v44 = *((_QWORD *)v20 + 91);
  v45 = *((_QWORD *)v20 + 92);
  v46 = *((_QWORD *)v20 + 93);
  v47 = *((_QWORD *)v20 + 94);
  v48 = *((_QWORD *)v20 + 95);
  v49 = *((_QWORD *)v20 + 96);
  v50 = *((_QWORD *)v20 + 97);
  v51 = *((_QWORD *)v20 + 98);
  v52 = *((_QWORD *)v20 + 99);
  v53 = *((_QWORD *)v20 + 100);
  v54 = *((_QWORD *)v20 + 101);
  v55 = *((_QWORD *)v20 + 102);
  v56 = *((_QWORD *)v20 + 103);
  v57 = *((_WORD *)v20 + 418);
  v58 = *((_DWORD *)v20 + 208);
  v21 = *((_QWORD *)v20 + 8);
  v22 = *(_QWORD *)v20;
  v23 = *((_QWORD *)v20 + 1);
  v24 = *((_QWORD *)v20 + 2);
  v25 = *((_QWORD *)v20 + 3);
  v26 = *((_QWORD *)v20 + 4);
  v27 = *((_QWORD *)v20 + 5);
  v28 = *((_QWORD *)v20 + 6);
  v29 = *((_QWORD *)v20 + 7);
  sub_100085E0C(*(_QWORD *)v20, v23, v24, v25, v26, v27, v28, v29, v21, v130, v129, v128, v127, v126, v125, v124, v123, v122, v121,
    v120,
    v119,
    v118,
    v117,
    v116,
    v115,
    v114,
    v113,
    v112,
    v111,
    v110,
    v109,
    v108,
    v107,
    v106,
    v105,
    v104,
    v103,
    v102,
    v101,
    v100,
    v99,
    v98,
    v97,
    v96,
    v95,
    v94,
    v93,
    v92,
    v91,
    v90,
    v89,
    v88,
    v87,
    v86,
    v85,
    v84,
    v83,
    v82,
    v81,
    v80,
    v79,
    v78,
    v77);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v23;
  *((_QWORD *)v19 + 2) = v24;
  *((_QWORD *)v19 + 3) = v25;
  *((_QWORD *)v19 + 4) = v26;
  *((_QWORD *)v19 + 5) = v27;
  *((_QWORD *)v19 + 6) = v28;
  *((_QWORD *)v19 + 7) = v29;
  *((_QWORD *)v19 + 8) = v21;
  *((_QWORD *)v19 + 9) = v130;
  *((_QWORD *)v19 + 10) = v129;
  *((_QWORD *)v19 + 11) = v128;
  *((_QWORD *)v19 + 12) = v127;
  *((_QWORD *)v19 + 13) = v126;
  *((_QWORD *)v19 + 14) = v125;
  *((_QWORD *)v19 + 15) = v124;
  *((_QWORD *)v19 + 16) = v123;
  *((_QWORD *)v19 + 17) = v122;
  *((_QWORD *)v19 + 18) = v121;
  *((_QWORD *)v19 + 19) = v120;
  *((_QWORD *)v19 + 20) = v119;
  *((_QWORD *)v19 + 21) = v118;
  *((_QWORD *)v19 + 22) = v117;
  *((_QWORD *)v19 + 23) = v116;
  *((_QWORD *)v19 + 24) = v115;
  *((_QWORD *)v19 + 25) = v114;
  *((_QWORD *)v19 + 26) = v113;
  *((_QWORD *)v19 + 27) = v112;
  *((_QWORD *)v19 + 28) = v111;
  *((_QWORD *)v19 + 29) = v110;
  *((_QWORD *)v19 + 30) = v109;
  *((_QWORD *)v19 + 31) = v108;
  *((_QWORD *)v19 + 32) = v107;
  *((_QWORD *)v19 + 33) = v106;
  *((_QWORD *)v19 + 34) = v105;
  *((_QWORD *)v19 + 35) = v104;
  *((_QWORD *)v19 + 36) = v103;
  *((_QWORD *)v19 + 37) = v102;
  *((_QWORD *)v19 + 38) = v101;
  *((_QWORD *)v19 + 39) = v100;
  *((_QWORD *)v19 + 40) = v99;
  *((_QWORD *)v19 + 41) = v98;
  *((_QWORD *)v19 + 42) = v97;
  *((_QWORD *)v19 + 43) = v96;
  *((_QWORD *)v19 + 44) = v95;
  *((_QWORD *)v19 + 45) = v94;
  *((_QWORD *)v19 + 46) = v93;
  *((_QWORD *)v19 + 47) = v92;
  *((_QWORD *)v19 + 48) = v91;
  *((_QWORD *)v19 + 49) = v90;
  *((_QWORD *)v19 + 50) = v89;
  *((_QWORD *)v19 + 51) = v88;
  *((_QWORD *)v19 + 52) = v87;
  *((_QWORD *)v19 + 53) = v86;
  *((_QWORD *)v19 + 54) = v85;
  *((_QWORD *)v19 + 55) = v84;
  *((_QWORD *)v19 + 56) = v83;
  *((_QWORD *)v19 + 57) = v82;
  *((_QWORD *)v19 + 58) = v81;
  *((_QWORD *)v19 + 59) = v80;
  *((_QWORD *)v19 + 60) = v79;
  *((_QWORD *)v19 + 61) = v78;
  *((_QWORD *)v19 + 62) = v77;
  *((_QWORD *)v19 + 63) = v76;
  *((_QWORD *)v19 + 64) = v75;
  *((_QWORD *)v19 + 65) = v74;
  *((_QWORD *)v19 + 66) = v73;
  *((_QWORD *)v19 + 67) = v72;
  *((_QWORD *)v19 + 68) = v71;
  *((_QWORD *)v19 + 69) = v70;
  *((_QWORD *)v19 + 70) = v69;
  *((_QWORD *)v19 + 71) = v68;
  *((_QWORD *)v19 + 72) = v67;
  *((_QWORD *)v19 + 73) = v66;
  *((_QWORD *)v19 + 74) = v65;
  *((_QWORD *)v19 + 75) = v64;
  *((_QWORD *)v19 + 76) = v63;
  *((_QWORD *)v19 + 77) = v62;
  *((_QWORD *)v19 + 78) = v61;
  *((_QWORD *)v19 + 79) = v32;
  *((_QWORD *)v19 + 80) = v33;
  *((_QWORD *)v19 + 81) = v34;
  *((_QWORD *)v19 + 82) = v35;
  *((_QWORD *)v19 + 83) = v36;
  *((_QWORD *)v19 + 84) = v37;
  *((_QWORD *)v19 + 85) = v38;
  *((_QWORD *)v19 + 86) = v39;
  *((_QWORD *)v19 + 87) = v40;
  *((_QWORD *)v19 + 88) = v41;
  *((_QWORD *)v19 + 89) = v42;
  *((_QWORD *)v19 + 90) = v43;
  *((_QWORD *)v19 + 91) = v44;
  *((_QWORD *)v19 + 92) = v45;
  *((_QWORD *)v19 + 93) = v46;
  *((_QWORD *)v19 + 94) = v47;
  *((_QWORD *)v19 + 95) = v48;
  *((_QWORD *)v19 + 96) = v49;
  *((_QWORD *)v19 + 97) = v50;
  *((_QWORD *)v19 + 98) = v51;
  *((_QWORD *)v19 + 99) = v52;
  *((_QWORD *)v19 + 100) = v53;
  *((_QWORD *)v19 + 101) = v54;
  *((_QWORD *)v19 + 102) = v55;
  *((_QWORD *)v19 + 103) = v56;
  *((_WORD *)v19 + 418) = v57;
  *((_DWORD *)v19 + 208) = v58;
  result = v31;
  *((_BYTE *)v31 + *(int *)(v60 + 32)) = *((_BYTE *)v59 + *(int *)(v60 + 32));
  return result;
}

_QWORD *sub_1001AB554(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int16 v77;
  int v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __int128 v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  __int128 v144;
  uint64_t v145;
  __int128 v146;
  uint64_t v147;
  __int128 v148;
  uint64_t v149;
  __int128 v150;
  uint64_t v151;
  __int128 v152;
  uint64_t v153;
  __int128 v154;
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  __int128 v158;
  uint64_t v159;
  __int128 v160;
  uint64_t v161;
  __int128 v162;
  uint64_t v163;
  __int128 v164;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(int *)(a3 + 24);
  v11 = a1;
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  v14 = type metadata accessor for MeasurementCapture(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      v56 = type metadata accessor for URL(0);
      v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 24);
      v57(v12, v13, v56);
      v57(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v56);
      goto LABEL_7;
    }
    sub_100171F0C((uint64_t)v12);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v21 = sub_10000EDC8((uint64_t *)&unk_1004862E0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v19 = type metadata accessor for URL(0);
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v20(v12, v13, v19);
  v20(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v22 = *(int *)(a3 + 28);
  v23 = (char *)v11 + v22;
  v24 = (char *)a2 + v22;
  v80 = a3;
  v79 = a2;
  v163 = *((_QWORD *)v24 + 8);
  v161 = *((_QWORD *)v24 + 9);
  v159 = *((_QWORD *)v24 + 10);
  v157 = *((_QWORD *)v24 + 11);
  v155 = *((_QWORD *)v24 + 12);
  v153 = *((_QWORD *)v24 + 13);
  v151 = *((_QWORD *)v24 + 14);
  v149 = *((_QWORD *)v24 + 15);
  v147 = *((_QWORD *)v24 + 16);
  v145 = *((_QWORD *)v24 + 17);
  v143 = *((_QWORD *)v24 + 18);
  v141 = *((_QWORD *)v24 + 19);
  v139 = *((_QWORD *)v24 + 20);
  v138 = *((_QWORD *)v24 + 21);
  v137 = *((_QWORD *)v24 + 22);
  v136 = *((_QWORD *)v24 + 23);
  v135 = *((_QWORD *)v24 + 24);
  v134 = *((_QWORD *)v24 + 25);
  v133 = *((_QWORD *)v24 + 26);
  v132 = *((_QWORD *)v24 + 27);
  v131 = *((_QWORD *)v24 + 28);
  v130 = *((_QWORD *)v24 + 29);
  v129 = *((_QWORD *)v24 + 30);
  v128 = *((_QWORD *)v24 + 31);
  v127 = *((_QWORD *)v24 + 32);
  v126 = *((_QWORD *)v24 + 33);
  v125 = *((_QWORD *)v24 + 34);
  v124 = *((_QWORD *)v24 + 35);
  v123 = *((_QWORD *)v24 + 36);
  v122 = *((_QWORD *)v24 + 37);
  v121 = *((_QWORD *)v24 + 38);
  v120 = *((_QWORD *)v24 + 39);
  v119 = *((_QWORD *)v24 + 40);
  v118 = *((_QWORD *)v24 + 41);
  v117 = *((_QWORD *)v24 + 42);
  v116 = *((_QWORD *)v24 + 43);
  v115 = *((_QWORD *)v24 + 44);
  v114 = *((_QWORD *)v24 + 45);
  v113 = *((_QWORD *)v24 + 46);
  v112 = *((_QWORD *)v24 + 47);
  v111 = *((_QWORD *)v24 + 48);
  v110 = *((_QWORD *)v24 + 49);
  v109 = *((_QWORD *)v24 + 50);
  v108 = *((_QWORD *)v24 + 51);
  v107 = *((_QWORD *)v24 + 52);
  v106 = *((_QWORD *)v24 + 53);
  v105 = *((_QWORD *)v24 + 54);
  v104 = *((_QWORD *)v24 + 55);
  v103 = *((_QWORD *)v24 + 56);
  v102 = *((_QWORD *)v24 + 57);
  v101 = *((_QWORD *)v24 + 58);
  v100 = *((_QWORD *)v24 + 59);
  v99 = *((_QWORD *)v24 + 60);
  v98 = *((_QWORD *)v24 + 61);
  v97 = *((_QWORD *)v24 + 62);
  v96 = *((_QWORD *)v24 + 63);
  v95 = *((_QWORD *)v24 + 64);
  v94 = *((_QWORD *)v24 + 65);
  v93 = *((_QWORD *)v24 + 66);
  v92 = *((_QWORD *)v24 + 67);
  v91 = *((_QWORD *)v24 + 68);
  v90 = *((_QWORD *)v24 + 69);
  v89 = *((_QWORD *)v24 + 70);
  v88 = *((_QWORD *)v24 + 71);
  v87 = *((_QWORD *)v24 + 72);
  v86 = *((_QWORD *)v24 + 73);
  v85 = *((_QWORD *)v24 + 74);
  v84 = *((_QWORD *)v24 + 75);
  v83 = *((_QWORD *)v24 + 76);
  v82 = *((_QWORD *)v24 + 77);
  v81 = *((_QWORD *)v24 + 78);
  v60 = *((_QWORD *)v24 + 79);
  v61 = *((_OWORD *)v24 + 40);
  v62 = *((_OWORD *)v24 + 41);
  v63 = *((_OWORD *)v24 + 42);
  v64 = *((_OWORD *)v24 + 43);
  v65 = *((_OWORD *)v24 + 44);
  v66 = *((_OWORD *)v24 + 45);
  v67 = *((_OWORD *)v24 + 46);
  v68 = *((_OWORD *)v24 + 47);
  v69 = *((_QWORD *)v24 + 96);
  v70 = *((_QWORD *)v24 + 97);
  v71 = *((_QWORD *)v24 + 98);
  v72 = *((_QWORD *)v24 + 99);
  v73 = *((_QWORD *)v24 + 100);
  v74 = *((_QWORD *)v24 + 101);
  v75 = *((_QWORD *)v24 + 102);
  v76 = *((_QWORD *)v24 + 103);
  v77 = *((_WORD *)v24 + 418);
  v78 = *((_DWORD *)v24 + 208);
  v25 = v11;
  v26 = *(_QWORD *)v24;
  v27 = *((_QWORD *)v24 + 1);
  v28 = *((_QWORD *)v24 + 2);
  v29 = *((_QWORD *)v24 + 3);
  v30 = *((_QWORD *)v24 + 4);
  v31 = *((_QWORD *)v24 + 5);
  v32 = *((_QWORD *)v24 + 6);
  v33 = *((_QWORD *)v24 + 7);
  sub_100085E0C(*(_QWORD *)v24, v27, v28, v29, v30, v31, v32, v33, v163, v161, v159, v157, v155, v153, v151, v149, v147, v145, v143,
    v141,
    v139,
    v138,
    v137,
    v136,
    v135,
    v134,
    v133,
    v132,
    v131,
    v130,
    v129,
    v128,
    v127,
    v126,
    v125,
    v124,
    v123,
    v122,
    v121,
    v120,
    v119,
    v118,
    v117,
    v116,
    v115,
    v114,
    v113,
    v112,
    v111,
    v110,
    v109,
    v108,
    v107,
    v106,
    v105,
    v104,
    v103,
    v102,
    v101,
    v100,
    v99,
    v98,
    v97);
  v34 = *(_QWORD *)v23;
  v35 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v27;
  v36 = *((_QWORD *)v23 + 2);
  v37 = *((_QWORD *)v23 + 3);
  *((_QWORD *)v23 + 2) = v28;
  *((_QWORD *)v23 + 3) = v29;
  v38 = *((_QWORD *)v23 + 4);
  v39 = *((_QWORD *)v23 + 5);
  *((_QWORD *)v23 + 4) = v30;
  *((_QWORD *)v23 + 5) = v31;
  v40 = *((_QWORD *)v23 + 6);
  v41 = *((_QWORD *)v23 + 7);
  *((_QWORD *)v23 + 6) = v32;
  *((_QWORD *)v23 + 7) = v33;
  v58 = *((_OWORD *)v23 + 5);
  v59 = *((_OWORD *)v23 + 4);
  *((_QWORD *)v23 + 8) = v163;
  *((_QWORD *)v23 + 9) = v161;
  *((_QWORD *)v23 + 10) = v159;
  *((_QWORD *)v23 + 11) = v157;
  v162 = *((_OWORD *)v23 + 7);
  v164 = *((_OWORD *)v23 + 6);
  *((_QWORD *)v23 + 12) = v155;
  *((_QWORD *)v23 + 13) = v153;
  *((_QWORD *)v23 + 14) = v151;
  *((_QWORD *)v23 + 15) = v149;
  v158 = *((_OWORD *)v23 + 9);
  v160 = *((_OWORD *)v23 + 8);
  *((_QWORD *)v23 + 16) = v147;
  *((_QWORD *)v23 + 17) = v145;
  *((_QWORD *)v23 + 18) = v143;
  *((_QWORD *)v23 + 19) = v141;
  v154 = *((_OWORD *)v23 + 11);
  v156 = *((_OWORD *)v23 + 10);
  *((_QWORD *)v23 + 20) = v139;
  *((_QWORD *)v23 + 21) = v138;
  *((_QWORD *)v23 + 22) = v137;
  *((_QWORD *)v23 + 23) = v136;
  v152 = *((_OWORD *)v23 + 12);
  v150 = *((_OWORD *)v23 + 13);
  *((_QWORD *)v23 + 24) = v135;
  *((_QWORD *)v23 + 25) = v134;
  *((_QWORD *)v23 + 26) = v133;
  *((_QWORD *)v23 + 27) = v132;
  v148 = *((_OWORD *)v23 + 14);
  v146 = *((_OWORD *)v23 + 15);
  *((_QWORD *)v23 + 28) = v131;
  *((_QWORD *)v23 + 29) = v130;
  *((_QWORD *)v23 + 30) = v129;
  *((_QWORD *)v23 + 31) = v128;
  v144 = *((_OWORD *)v23 + 16);
  v142 = *((_OWORD *)v23 + 17);
  *((_QWORD *)v23 + 32) = v127;
  *((_QWORD *)v23 + 33) = v126;
  *((_QWORD *)v23 + 34) = v125;
  *((_QWORD *)v23 + 35) = v124;
  v42 = *((_OWORD *)v23 + 19);
  v140 = *((_OWORD *)v23 + 18);
  *((_QWORD *)v23 + 36) = v123;
  *((_QWORD *)v23 + 37) = v122;
  *((_QWORD *)v23 + 38) = v121;
  *((_QWORD *)v23 + 39) = v120;
  v43 = *((_OWORD *)v23 + 20);
  v44 = *((_OWORD *)v23 + 21);
  *((_QWORD *)v23 + 40) = v119;
  *((_QWORD *)v23 + 41) = v118;
  *((_QWORD *)v23 + 42) = v117;
  *((_QWORD *)v23 + 43) = v116;
  v45 = *((_OWORD *)v23 + 22);
  v46 = *((_OWORD *)v23 + 23);
  *((_QWORD *)v23 + 44) = v115;
  *((_QWORD *)v23 + 45) = v114;
  *((_QWORD *)v23 + 46) = v113;
  *((_QWORD *)v23 + 47) = v112;
  v47 = *((_OWORD *)v23 + 24);
  v48 = *((_OWORD *)v23 + 25);
  *((_QWORD *)v23 + 48) = v111;
  *((_QWORD *)v23 + 49) = v110;
  *((_QWORD *)v23 + 50) = v109;
  *((_QWORD *)v23 + 51) = v108;
  v49 = *((_OWORD *)v23 + 26);
  v50 = *((_OWORD *)v23 + 27);
  *((_QWORD *)v23 + 52) = v107;
  *((_QWORD *)v23 + 53) = v106;
  *((_QWORD *)v23 + 54) = v105;
  *((_QWORD *)v23 + 55) = v104;
  v51 = *((_OWORD *)v23 + 28);
  v52 = *((_OWORD *)v23 + 29);
  *((_QWORD *)v23 + 56) = v103;
  *((_QWORD *)v23 + 57) = v102;
  *((_QWORD *)v23 + 58) = v101;
  *((_QWORD *)v23 + 59) = v100;
  v53 = *((_OWORD *)v23 + 30);
  v54 = *((_OWORD *)v23 + 31);
  *((_QWORD *)v23 + 60) = v99;
  *((_QWORD *)v23 + 61) = v98;
  *((_QWORD *)v23 + 62) = v97;
  *((_QWORD *)v23 + 63) = v96;
  *((_QWORD *)v23 + 64) = v95;
  *((_QWORD *)v23 + 65) = v94;
  *((_QWORD *)v23 + 66) = v93;
  *((_QWORD *)v23 + 67) = v92;
  *((_QWORD *)v23 + 68) = v91;
  *((_QWORD *)v23 + 69) = v90;
  *((_QWORD *)v23 + 70) = v89;
  *((_QWORD *)v23 + 71) = v88;
  *((_QWORD *)v23 + 72) = v87;
  *((_QWORD *)v23 + 73) = v86;
  *((_QWORD *)v23 + 74) = v85;
  *((_QWORD *)v23 + 75) = v84;
  *((_QWORD *)v23 + 76) = v83;
  *((_QWORD *)v23 + 77) = v82;
  *((_QWORD *)v23 + 78) = v81;
  *((_QWORD *)v23 + 79) = v60;
  *((_OWORD *)v23 + 40) = v61;
  *((_OWORD *)v23 + 41) = v62;
  *((_OWORD *)v23 + 42) = v63;
  *((_OWORD *)v23 + 43) = v64;
  *((_OWORD *)v23 + 44) = v65;
  *((_OWORD *)v23 + 45) = v66;
  *((_OWORD *)v23 + 46) = v67;
  *((_OWORD *)v23 + 47) = v68;
  *((_QWORD *)v23 + 96) = v69;
  *((_QWORD *)v23 + 97) = v70;
  *((_QWORD *)v23 + 98) = v71;
  *((_QWORD *)v23 + 99) = v72;
  *((_QWORD *)v23 + 100) = v73;
  *((_QWORD *)v23 + 101) = v74;
  *((_QWORD *)v23 + 102) = v75;
  *((_QWORD *)v23 + 103) = v76;
  *((_WORD *)v23 + 418) = v77;
  *((_DWORD *)v23 + 208) = v78;
  sub_100020E24(v34, v35, v36, v37, v38, v39, v40, v41, v59, *((uint64_t *)&v59 + 1), v58, *((uint64_t *)&v58 + 1), v164, *((uint64_t *)&v164 + 1), v162, *((uint64_t *)&v162 + 1), v160, *((uint64_t *)&v160 + 1), v158,
    *((uint64_t *)&v158 + 1),
    v156,
    *((uint64_t *)&v156 + 1),
    v154,
    *((uint64_t *)&v154 + 1),
    v152,
    *((uint64_t *)&v152 + 1),
    v150,
    *((uint64_t *)&v150 + 1),
    v148,
    *((uint64_t *)&v148 + 1),
    v146,
    *((uint64_t *)&v146 + 1),
    v144,
    *((uint64_t *)&v144 + 1),
    v142,
    *((uint64_t *)&v142 + 1),
    v140,
    *((uint64_t *)&v140 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v45,
    *((uint64_t *)&v45 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v47,
    *((uint64_t *)&v47 + 1),
    v48,
    *((uint64_t *)&v48 + 1),
    v49,
    *((uint64_t *)&v49 + 1),
    v50,
    *((uint64_t *)&v50 + 1),
    v51,
    *((uint64_t *)&v51 + 1),
    v52,
    *((uint64_t *)&v52 + 1),
    v53,
    *((uint64_t *)&v53 + 1),
    v54);
  *((_BYTE *)v25 + *(int *)(v80 + 32)) = *((_BYTE *)v79 + *(int *)(v80 + 32));
  return v25;
}

_OWORD *sub_1001AC148(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for MeasurementCapture(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_10000EDC8((uint64_t *)&unk_1004862E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for URL(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
    v14(v8, v9, v13);
    v14(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  memcpy((char *)a1 + a3[7], (char *)a2 + a3[7], 0x346uLL);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_1001AC260(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  int v85;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for MeasurementCapture(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      v87 = type metadata accessor for URL(0);
      v88 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 40);
      v88(v11, v12, v87);
      v88(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v87);
      goto LABEL_7;
    }
    sub_100171F0C((uint64_t)v11);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v20 = sub_10000EDC8((uint64_t *)&unk_1004862E0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v18 = type metadata accessor for URL(0);
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v19(v11, v12, v18);
  v19(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v21 = a3[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)v22;
  v25 = *((_QWORD *)v22 + 1);
  v26 = *((_QWORD *)v22 + 2);
  v27 = *((_QWORD *)v22 + 3);
  v28 = *((_QWORD *)v22 + 4);
  v29 = *((_QWORD *)v22 + 5);
  v30 = *((_QWORD *)v22 + 6);
  v31 = *((_QWORD *)v22 + 7);
  v104 = *((_OWORD *)v22 + 5);
  v105 = *((_OWORD *)v22 + 4);
  v102 = *((_OWORD *)v22 + 7);
  v103 = *((_OWORD *)v22 + 6);
  v100 = *((_OWORD *)v22 + 9);
  v101 = *((_OWORD *)v22 + 8);
  v99 = *((_OWORD *)v22 + 10);
  v97 = *((_OWORD *)v22 + 12);
  v98 = *((_OWORD *)v22 + 11);
  v95 = *((_OWORD *)v22 + 14);
  v96 = *((_OWORD *)v22 + 13);
  v93 = *((_OWORD *)v22 + 16);
  v94 = *((_OWORD *)v22 + 15);
  v91 = *((_OWORD *)v22 + 18);
  v92 = *((_OWORD *)v22 + 17);
  v32 = *((_OWORD *)v22 + 21);
  v89 = *((_OWORD *)v22 + 20);
  v90 = *((_OWORD *)v22 + 19);
  v33 = *((_OWORD *)v22 + 22);
  v34 = *((_OWORD *)v22 + 23);
  v35 = *((_OWORD *)v22 + 24);
  v36 = *((_OWORD *)v22 + 25);
  v37 = *((_OWORD *)v22 + 26);
  v38 = *((_OWORD *)v22 + 27);
  v39 = *((_OWORD *)v23 + 1);
  v40 = *((_OWORD *)v23 + 2);
  v41 = *((_OWORD *)v23 + 3);
  v42 = *((_OWORD *)v23 + 4);
  v43 = *((_OWORD *)v23 + 5);
  v44 = *((_OWORD *)v23 + 6);
  v45 = *((_OWORD *)v23 + 7);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v39;
  v46 = *((_OWORD *)v23 + 8);
  v47 = *((_OWORD *)v23 + 9);
  *((_OWORD *)v22 + 2) = v40;
  *((_OWORD *)v22 + 3) = v41;
  v48 = *((_OWORD *)v23 + 10);
  v49 = *((_OWORD *)v23 + 11);
  *((_OWORD *)v22 + 4) = v42;
  *((_OWORD *)v22 + 5) = v43;
  v50 = *((_OWORD *)v23 + 12);
  v51 = *((_OWORD *)v23 + 13);
  *((_OWORD *)v22 + 6) = v44;
  *((_OWORD *)v22 + 7) = v45;
  v52 = *((_OWORD *)v23 + 14);
  v53 = *((_OWORD *)v23 + 15);
  *((_OWORD *)v22 + 8) = v46;
  *((_OWORD *)v22 + 9) = v47;
  v54 = *((_OWORD *)v23 + 16);
  v55 = *((_OWORD *)v23 + 17);
  *((_OWORD *)v22 + 10) = v48;
  *((_OWORD *)v22 + 11) = v49;
  v56 = *((_OWORD *)v23 + 18);
  v57 = *((_OWORD *)v23 + 19);
  *((_OWORD *)v22 + 12) = v50;
  *((_OWORD *)v22 + 13) = v51;
  v58 = *((_OWORD *)v23 + 20);
  v59 = *((_OWORD *)v23 + 21);
  *((_OWORD *)v22 + 14) = v52;
  *((_OWORD *)v22 + 15) = v53;
  v60 = *((_OWORD *)v23 + 22);
  v61 = *((_OWORD *)v23 + 23);
  *((_OWORD *)v22 + 16) = v54;
  *((_OWORD *)v22 + 17) = v55;
  v62 = *((_OWORD *)v23 + 24);
  v63 = *((_OWORD *)v23 + 25);
  *((_OWORD *)v22 + 18) = v56;
  *((_OWORD *)v22 + 19) = v57;
  v64 = *((_OWORD *)v23 + 26);
  v65 = *((_OWORD *)v23 + 27);
  *((_OWORD *)v22 + 20) = v58;
  *((_OWORD *)v22 + 21) = v59;
  v66 = *((_OWORD *)v23 + 28);
  v67 = *((_OWORD *)v23 + 29);
  *((_OWORD *)v22 + 22) = v60;
  *((_OWORD *)v22 + 23) = v61;
  v68 = *((_OWORD *)v23 + 30);
  v69 = *((_OWORD *)v23 + 31);
  *((_OWORD *)v22 + 24) = v62;
  *((_OWORD *)v22 + 25) = v63;
  v70 = *((_OWORD *)v23 + 32);
  v71 = *((_OWORD *)v23 + 33);
  *((_OWORD *)v22 + 26) = v64;
  *((_OWORD *)v22 + 27) = v65;
  v72 = *((_OWORD *)v22 + 28);
  v73 = *((_OWORD *)v22 + 29);
  *((_OWORD *)v22 + 28) = v66;
  *((_OWORD *)v22 + 29) = v67;
  v74 = *((_OWORD *)v22 + 30);
  v75 = *((_OWORD *)v22 + 31);
  *((_OWORD *)v22 + 30) = v68;
  *((_OWORD *)v22 + 31) = v69;
  *((_OWORD *)v22 + 32) = v70;
  *((_OWORD *)v22 + 33) = v71;
  v76 = *((_OWORD *)v23 + 35);
  *((_OWORD *)v22 + 34) = *((_OWORD *)v23 + 34);
  *((_OWORD *)v22 + 35) = v76;
  v77 = *((_OWORD *)v23 + 37);
  *((_OWORD *)v22 + 36) = *((_OWORD *)v23 + 36);
  *((_OWORD *)v22 + 37) = v77;
  v78 = *((_OWORD *)v23 + 39);
  *((_OWORD *)v22 + 38) = *((_OWORD *)v23 + 38);
  *((_OWORD *)v22 + 39) = v78;
  v79 = *((_OWORD *)v23 + 41);
  *((_OWORD *)v22 + 40) = *((_OWORD *)v23 + 40);
  *((_OWORD *)v22 + 41) = v79;
  v80 = *((_OWORD *)v23 + 43);
  *((_OWORD *)v22 + 42) = *((_OWORD *)v23 + 42);
  *((_OWORD *)v22 + 43) = v80;
  v81 = *((_OWORD *)v23 + 45);
  *((_OWORD *)v22 + 44) = *((_OWORD *)v23 + 44);
  *((_OWORD *)v22 + 45) = v81;
  v82 = *((_OWORD *)v23 + 47);
  *((_OWORD *)v22 + 46) = *((_OWORD *)v23 + 46);
  *((_OWORD *)v22 + 47) = v82;
  v83 = *((_OWORD *)v23 + 49);
  *((_OWORD *)v22 + 48) = *((_OWORD *)v23 + 48);
  *((_OWORD *)v22 + 49) = v83;
  v84 = *((_OWORD *)v23 + 51);
  *((_OWORD *)v22 + 50) = *((_OWORD *)v23 + 50);
  *((_OWORD *)v22 + 51) = v84;
  v85 = *((_DWORD *)v23 + 208);
  *((_WORD *)v22 + 418) = *((_WORD *)v23 + 418);
  *((_DWORD *)v22 + 208) = v85;
  sub_100020E24(v24, v25, v26, v27, v28, v29, v30, v31, v105, *((uint64_t *)&v105 + 1), v104, *((uint64_t *)&v104 + 1), v103, *((uint64_t *)&v103 + 1), v102, *((uint64_t *)&v102 + 1), v101, *((uint64_t *)&v101 + 1), v100,
    *((uint64_t *)&v100 + 1),
    v99,
    *((uint64_t *)&v99 + 1),
    v98,
    *((uint64_t *)&v98 + 1),
    v97,
    *((uint64_t *)&v97 + 1),
    v96,
    *((uint64_t *)&v96 + 1),
    v95,
    *((uint64_t *)&v95 + 1),
    v94,
    *((uint64_t *)&v94 + 1),
    v93,
    *((uint64_t *)&v93 + 1),
    v92,
    *((uint64_t *)&v92 + 1),
    v91,
    *((uint64_t *)&v91 + 1),
    v90,
    *((uint64_t *)&v90 + 1),
    v89,
    *((uint64_t *)&v89 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v72,
    *((uint64_t *)&v72 + 1),
    v73,
    *((uint64_t *)&v73 + 1),
    v74,
    *((uint64_t *)&v74 + 1),
    v75);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1001AC68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AC698);
}

uint64_t sub_1001AC698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10000EDC8((uint64_t *)&unk_1004862E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1001AC718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AC724);
}

uint64_t sub_1001AC724(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_10000EDC8((uint64_t *)&unk_1004862E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MeasurementHistoryItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1004899B0;
  if (!qword_1004899B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MeasurementHistoryItem);
  return result;
}

void sub_1001AC7D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_1003BB938;
  v4[1] = &unk_1003BB938;
  sub_1001AC860(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_1003BB950;
    v4[4] = &unk_1003BB968;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

void sub_1001AC860(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1004899C0)
  {
    v2 = type metadata accessor for MeasurementCapture(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1004899C0);
  }
}

uint64_t sub_1001AC8B4(const void *a1, const void *a2)
{
  _BYTE v4[848];
  _BYTE v5[848];

  sub_10001F970(a1, v4);
  sub_10001F970(a2, v5);
  return sub_1001AD54C(v4, v5) & 1;
}

uint64_t sub_1001AC900(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[6];
  _OWORD v13[2];
  _OWORD v14[6];
  _BYTE v15[22];

  v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v13[0] = *(_OWORD *)(a1 + 96);
  *(_QWORD *)((char *)v13 + 14) = *(_QWORD *)(a1 + 110);
  v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[3];
  v14[2] = a2[2];
  v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  *(_QWORD *)&v15[14] = *(_QWORD *)((char *)a2 + 110);
  v14[5] = v9;
  *(_OWORD *)v15 = v10;
  v14[4] = v8;
  return sub_1001ACA7C((uint64_t *)v12, (uint64_t)v14) & 1;
}

BOOL sub_1001AC980(void *__src, const void *a2)
{
  uint64_t v4[34];
  uint64_t __dst[34];

  memcpy(v4, __src, 0x10DuLL);
  memcpy(__dst, a2, 0x10DuLL);
  return sub_1001ACC14(v4, __dst);
}

uint64_t sub_1001AC9D4(void *__src, const void *a2)
{
  uint64_t v4[60];
  uint64_t __dst[60];

  memcpy(v4, __src, 0x1DEuLL);
  memcpy(__dst, a2, 0x1DEuLL);
  return sub_1001ADBC0(v4, __dst) & 1;
}

uint64_t sub_1001ACA28(void *__src, const void *a2)
{
  uint64_t v4[105];
  uint64_t __dst[105];

  memcpy(v4, __src, 0x346uLL);
  memcpy(__dst, a2, 0x346uLL);
  return sub_1001AD07C(v4, __dst) & 1;
}

uint64_t sub_1001ACA7C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float v14;
  char v15;
  int v16;
  char v17;
  char v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v25;
  _OWORD v26[2];
  __int128 v27;
  _OWORD v28[2];
  __int128 v29;
  _OWORD v30[2];
  __int128 v31;
  _OWORD v32[2];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = *((float *)a1 + 8);
  v9 = *((_BYTE *)a1 + 36);
  v10 = *((unsigned __int8 *)a1 + 37);
  v11 = *(_QWORD *)(a2 + 8);
  v13 = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(a2 + 24);
  v14 = *(float *)(a2 + 32);
  v15 = *(_BYTE *)(a2 + 36);
  v16 = *(unsigned __int8 *)(a2 + 37);
  if (v4 == *(_QWORD *)a2 && v5 == v11
    || (v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v11, 0), v18 = 0, (v17 & 1) != 0))
  {
    if (v7)
    {
      if (!v12)
        goto LABEL_23;
      if (v6 != v13 || v7 != v12)
      {
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v13, v12, 0);
        v18 = 0;
        if ((v19 & 1) == 0)
          return v18 & 1;
      }
    }
    else if (v12)
    {
      goto LABEL_23;
    }
    if ((v9 & 1) != 0)
    {
      if ((v15 & 1) == 0)
        goto LABEL_23;
    }
    else
    {
      v18 = 0;
      if ((v15 & 1) != 0 || v8 != v14)
        return v18 & 1;
    }
    if (v10 == 4)
    {
      if (v16 != 4)
        goto LABEL_23;
    }
    else
    {
      v18 = 0;
      if (v16 == 4 || v10 != v16)
        return v18 & 1;
    }
    v20 = *(_OWORD *)(a1 + 7);
    v31 = *(_OWORD *)(a1 + 5);
    v32[0] = v20;
    *(_QWORD *)((char *)v32 + 14) = *(uint64_t *)((char *)a1 + 70);
    v21 = *(_OWORD *)(a2 + 56);
    v29 = *(_OWORD *)(a2 + 40);
    v30[0] = v21;
    *(_QWORD *)((char *)v30 + 14) = *(_QWORD *)(a2 + 70);
    if ((sub_100108D3C((float *)&v31, (uint64_t)&v29) & 1) != 0)
    {
      v22 = *((_OWORD *)a1 + 6);
      v27 = *((_OWORD *)a1 + 5);
      v28[0] = v22;
      *(_QWORD *)((char *)v28 + 14) = *(uint64_t *)((char *)a1 + 110);
      v23 = *(_OWORD *)(a2 + 96);
      v25 = *(_OWORD *)(a2 + 80);
      v26[0] = v23;
      *(_QWORD *)((char *)v26 + 14) = *(_QWORD *)(a2 + 110);
      v18 = sub_100108D3C((float *)&v27, (uint64_t)&v25);
      return v18 & 1;
    }
LABEL_23:
    v18 = 0;
  }
  return v18 & 1;
}

BOOL sub_1001ACC14(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  char v9;
  int v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  float v18;
  char v19;
  int v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;
  _BOOL8 result;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  __int16 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  __int16 v96;
  _BYTE v97[40];
  _BYTE v98[40];
  __int128 v99;
  _OWORD v100[2];
  __int128 v101;
  _OWORD v102[2];
  _BYTE v103[40];
  _BYTE v104[40];
  __int128 v105;
  _OWORD v106[2];
  __int128 v107;
  _BYTE v108[22];
  uint64_t v109[4];
  int v110;
  char v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  char v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  char v125;
  char v126;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = *((float *)a1 + 8);
  v9 = *((_BYTE *)a1 + 36);
  v10 = *((unsigned __int8 *)a1 + 37);
  v11 = *(_OWORD *)((char *)a1 + 54);
  *(_OWORD *)v104 = *(_OWORD *)((char *)a1 + 38);
  *(_OWORD *)&v104[16] = v11;
  *(_QWORD *)&v104[32] = *(uint64_t *)((char *)a1 + 70);
  v12 = *(_OWORD *)((char *)a1 + 78);
  v13 = *(_OWORD *)((char *)a1 + 94);
  *(_QWORD *)&v103[32] = *(uint64_t *)((char *)a1 + 110);
  *(_OWORD *)v103 = v12;
  *(_OWORD *)&v103[16] = v13;
  v14 = *a2;
  v15 = a2[1];
  v17 = a2[2];
  v16 = a2[3];
  v18 = *((float *)a2 + 8);
  v19 = *((_BYTE *)a2 + 36);
  v20 = *((unsigned __int8 *)a2 + 37);
  v21 = *(_OWORD *)((char *)a2 + 38);
  v22 = *(_OWORD *)((char *)a2 + 54);
  *(_QWORD *)&v98[32] = *(uint64_t *)((char *)a2 + 70);
  *(_OWORD *)v98 = v21;
  *(_OWORD *)&v98[16] = v22;
  v23 = *(_OWORD *)((char *)a2 + 78);
  v24 = *(_OWORD *)((char *)a2 + 94);
  *(_QWORD *)&v97[32] = *(uint64_t *)((char *)a2 + 110);
  *(_OWORD *)v97 = v23;
  *(_OWORD *)&v97[16] = v24;
  if (v4 == v14 && v5 == v15
    || (v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v14, v15, 0), result = 0, (v25 & 1) != 0))
  {
    if (v7)
    {
      if (!v16)
        return 0;
      if (v6 != v17 || v7 != v16)
      {
        v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v17, v16, 0);
        result = 0;
        if ((v27 & 1) == 0)
          return result;
      }
    }
    else if (v16)
    {
      return 0;
    }
    if ((v9 & 1) != 0)
    {
      if ((v19 & 1) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v19 & 1) != 0 || v8 != v18)
        return result;
    }
    if (v10 == 4)
    {
      if (v20 != 4)
        return 0;
    }
    else
    {
      result = 0;
      if (v20 == 4 || v10 != v20)
        return result;
    }
    v107 = *(_OWORD *)&v104[2];
    *(_OWORD *)v108 = *(_OWORD *)&v104[18];
    *(_QWORD *)&v108[14] = *(_QWORD *)&v104[32];
    v101 = *(_OWORD *)&v98[2];
    v102[0] = *(_OWORD *)&v98[18];
    *(_QWORD *)((char *)v102 + 14) = *(_QWORD *)&v98[32];
    if ((sub_100108D3C((float *)&v107, (uint64_t)&v101) & 1) == 0)
      return 0;
    v105 = *(_OWORD *)&v103[2];
    v106[0] = *(_OWORD *)&v103[18];
    *(_QWORD *)((char *)v106 + 14) = *(_QWORD *)&v103[32];
    v99 = *(_OWORD *)&v97[2];
    v100[0] = *(_OWORD *)&v97[18];
    *(_QWORD *)((char *)v100 + 14) = *(_QWORD *)&v97[32];
    if ((sub_100108D3C((float *)&v105, (uint64_t)&v99) & 1) == 0)
      return 0;
    result = 0;
    if (*((float *)a1 + 32) != *((float *)a2 + 32)
      || *((float *)a1 + 33) != *((float *)a2 + 33)
      || *((float *)a1 + 34) != *((float *)a2 + 34))
    {
      return result;
    }
    v28 = a1[18];
    v29 = a1[19];
    v30 = a1[20];
    v31 = a1[21];
    v32 = a1[22];
    v33 = a1[23];
    v34 = a1[24];
    v35 = a1[25];
    v37 = a1[26];
    v36 = a1[27];
    v38 = a1[28];
    v39 = a1[29];
    v40 = a1[30];
    v41 = a1[31];
    v42 = *((unsigned int *)a1 + 64) | ((unint64_t)*((unsigned __int16 *)a1 + 130) << 32);
    v44 = a2[18];
    v43 = a2[19];
    v45 = a2[20];
    v46 = a2[21];
    v47 = a2[22];
    v64 = a2[23];
    v48 = a2[25];
    v60 = a2[24];
    v49 = a2[27];
    v61 = a2[26];
    v63 = a2[28];
    v62 = a2[29];
    v50 = *((unsigned int *)a2 + 64) | ((unint64_t)*((unsigned __int16 *)a2 + 130) << 32);
    v52 = a2[30];
    v51 = a2[31];
    if (v29)
    {
      if (v43)
      {
        v109[0] = a1[18];
        v109[1] = v29;
        v109[2] = v30;
        v109[3] = v31;
        v111 = BYTE4(v32) & 1;
        v110 = v32;
        v112 = BYTE5(v32);
        v113 = v33;
        v114 = v34;
        v115 = v35;
        v116 = v37;
        v118 = BYTE4(v36) & 1;
        v117 = v36;
        v119 = BYTE5(v36);
        v120 = v38;
        v121 = v39;
        v122 = v40;
        v123 = v41;
        v125 = BYTE4(v42) & 1;
        v124 = v42;
        v126 = BYTE5(v42);
        v65 = v44;
        v66 = v43;
        v67 = v45;
        v68 = v46;
        BYTE4(v69) = BYTE4(v47) & 1;
        LODWORD(v69) = v47;
        BYTE5(v69) = BYTE5(v47);
        v70 = v64;
        v71 = v60;
        v72 = v48;
        v73 = v61;
        BYTE4(v74) = BYTE4(v49) & 1;
        LODWORD(v74) = v49;
        BYTE5(v74) = BYTE5(v49);
        v75 = v63;
        v76 = v62;
        v77 = v52;
        v78 = v51;
        LOBYTE(v80) = BYTE4(v50) & 1;
        v79 = v50;
        HIBYTE(v80) = BYTE5(v50);
        if ((sub_1001ACA7C(v109, (uint64_t)&v65) & 1) == 0)
          return 0;
        goto LABEL_34;
      }
    }
    else if (!v43)
    {
LABEL_34:
      v58 = *((_BYTE *)a2 + 268);
      if ((*((_BYTE *)a1 + 268) & 1) == 0)
      {
        if (*((float *)a1 + 66) != *((float *)a2 + 66))
          v58 = 1;
        return (v58 & 1) == 0;
      }
      return (*((_BYTE *)a2 + 268) & 1) != 0;
    }
    v65 = a1[18];
    v66 = v29;
    v67 = v30;
    v68 = v31;
    v69 = v32;
    v70 = v33;
    v71 = v34;
    v72 = v35;
    v73 = v37;
    v74 = v36;
    v75 = v38;
    v76 = v39;
    v77 = v40;
    v78 = v41;
    v79 = v42;
    v53 = v45;
    v59 = v45;
    v54 = v51;
    v80 = WORD2(v42);
    v81 = v44;
    v82 = v43;
    v83 = v53;
    v84 = v46;
    v85 = v47;
    v86 = v64;
    v87 = v60;
    v88 = v48;
    v89 = v61;
    v90 = v49;
    v91 = v63;
    v92 = v62;
    v93 = v52;
    v94 = v51;
    v95 = v50;
    v96 = WORD2(v50);
    v55 = v48;
    v56 = v49;
    v57 = v52;
    sub_1000862A8(v28, v29, v30, v31, v32, v33, v34, v35, v37, v36, v38, v39, v40, v41);
    sub_1000862A8(v44, v43, v59, v46, v47, v64, v60, v55, v61, v56, v63, v62, v57, v54);
    sub_1001AE340((uint64_t)&v65);
    return 0;
  }
  return result;
}

uint64_t sub_1001AD07C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  char v9;
  int v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  char v20;
  int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char v26;
  char v27;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  _OWORD v84[6];
  _BYTE v85[22];
  _OWORD v86[6];
  _OWORD v87[2];
  _OWORD v88[6];
  _OWORD v89[2];
  _OWORD v90[6];
  _OWORD v91[2];
  _OWORD v92[6];
  _OWORD v93[2];
  _OWORD v94[6];
  _OWORD v95[2];
  _OWORD v96[6];
  _OWORD v97[2];
  _OWORD v98[6];
  _OWORD v99[2];
  _OWORD v100[6];
  _OWORD v101[2];
  _OWORD v102[6];
  _OWORD v103[2];
  _OWORD v104[6];
  _OWORD v105[2];
  _OWORD v106[6];
  _OWORD v107[2];
  _BYTE v108[40];
  _BYTE v109[40];
  __int128 v110;
  _OWORD v111[2];
  __int128 v112;
  _OWORD v113[2];
  _BYTE v114[40];
  _BYTE v115[40];
  __int128 v116;
  _OWORD v117[2];
  __int128 v118;
  _OWORD v119[3];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = *((float *)a1 + 8);
  v9 = *((_BYTE *)a1 + 36);
  v10 = *((unsigned __int8 *)a1 + 37);
  v11 = *(_OWORD *)((char *)a1 + 38);
  v12 = *(_OWORD *)((char *)a1 + 54);
  *(_QWORD *)&v115[32] = *(uint64_t *)((char *)a1 + 70);
  *(_OWORD *)v115 = v11;
  *(_OWORD *)&v115[16] = v12;
  v13 = *(_OWORD *)((char *)a1 + 78);
  v14 = *(_OWORD *)((char *)a1 + 94);
  *(_QWORD *)&v114[32] = *(uint64_t *)((char *)a1 + 110);
  *(_OWORD *)&v114[16] = v14;
  *(_OWORD *)v114 = v13;
  v15 = *a2;
  v16 = a2[1];
  v18 = a2[2];
  v17 = a2[3];
  v19 = *((float *)a2 + 8);
  v20 = *((_BYTE *)a2 + 36);
  v21 = *((unsigned __int8 *)a2 + 37);
  v22 = *(_OWORD *)((char *)a2 + 38);
  v23 = *(_OWORD *)((char *)a2 + 54);
  *(_QWORD *)&v109[32] = *(uint64_t *)((char *)a2 + 70);
  *(_OWORD *)&v109[16] = v23;
  *(_OWORD *)v109 = v22;
  v24 = *(_OWORD *)((char *)a2 + 78);
  v25 = *(_OWORD *)((char *)a2 + 94);
  *(_QWORD *)&v108[32] = *(uint64_t *)((char *)a2 + 110);
  *(_OWORD *)&v108[16] = v25;
  *(_OWORD *)v108 = v24;
  if (v4 == v15 && v5 == v16
    || (v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v15, v16, 0), v27 = 0, (v26 & 1) != 0))
  {
    if (v7)
    {
      if (!v17)
        goto LABEL_29;
      if (v6 != v18 || v7 != v17)
      {
        v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v18, v17, 0);
        v27 = 0;
        if ((v28 & 1) == 0)
          return v27 & 1;
      }
    }
    else if (v17)
    {
      goto LABEL_29;
    }
    if ((v9 & 1) != 0)
    {
      if ((v20 & 1) == 0)
        goto LABEL_29;
    }
    else
    {
      v27 = 0;
      if ((v20 & 1) != 0 || v8 != v19)
        return v27 & 1;
    }
    if (v10 == 4)
    {
      if (v21 != 4)
        goto LABEL_29;
    }
    else
    {
      v27 = 0;
      if (v21 == 4 || v10 != v21)
        return v27 & 1;
    }
    v118 = *(_OWORD *)&v115[2];
    v119[0] = *(_OWORD *)&v115[18];
    *(_QWORD *)((char *)v119 + 14) = *(_QWORD *)&v115[32];
    v112 = *(_OWORD *)&v109[2];
    v113[0] = *(_OWORD *)&v109[18];
    *(_QWORD *)((char *)v113 + 14) = *(_QWORD *)&v109[32];
    if ((sub_100108D3C((float *)&v118, (uint64_t)&v112) & 1) != 0)
    {
      v116 = *(_OWORD *)&v114[2];
      v117[0] = *(_OWORD *)&v114[18];
      *(_QWORD *)((char *)v117 + 14) = *(_QWORD *)&v114[32];
      v110 = *(_OWORD *)&v108[2];
      v111[0] = *(_OWORD *)&v108[18];
      *(_QWORD *)((char *)v111 + 14) = *(_QWORD *)&v108[32];
      if ((sub_100108D3C((float *)&v116, (uint64_t)&v110) & 1) != 0)
      {
        v29 = *(_OWORD *)(a1 + 25);
        v106[4] = *(_OWORD *)(a1 + 23);
        v106[5] = v29;
        v107[0] = *(_OWORD *)(a1 + 27);
        *(_QWORD *)((char *)v107 + 14) = *(uint64_t *)((char *)a1 + 230);
        v30 = *(_OWORD *)(a1 + 17);
        v106[0] = *(_OWORD *)(a1 + 15);
        v106[1] = v30;
        v31 = *(_OWORD *)(a1 + 21);
        v106[2] = *(_OWORD *)(a1 + 19);
        v106[3] = v31;
        v32 = *(_OWORD *)(a2 + 15);
        v33 = *(_OWORD *)(a2 + 17);
        v34 = *(_OWORD *)(a2 + 19);
        v104[3] = *(_OWORD *)(a2 + 21);
        v104[2] = v34;
        v104[1] = v33;
        v104[0] = v32;
        v35 = *(_OWORD *)(a2 + 23);
        v36 = *(_OWORD *)(a2 + 25);
        v37 = *(_OWORD *)(a2 + 27);
        *(_QWORD *)((char *)v105 + 14) = *(uint64_t *)((char *)a2 + 230);
        v105[0] = v37;
        v104[5] = v36;
        v104[4] = v35;
        if ((sub_1001ACA7C((uint64_t *)v106, (uint64_t)v104) & 1) != 0)
        {
          v38 = *((_OWORD *)a1 + 20);
          v102[4] = *((_OWORD *)a1 + 19);
          v102[5] = v38;
          v103[0] = *((_OWORD *)a1 + 21);
          v39 = *((_OWORD *)a1 + 16);
          v102[0] = *((_OWORD *)a1 + 15);
          v102[1] = v39;
          v40 = *((_OWORD *)a1 + 18);
          v102[2] = *((_OWORD *)a1 + 17);
          v102[3] = v40;
          *(_QWORD *)((char *)v103 + 14) = *(uint64_t *)((char *)a1 + 350);
          v41 = *((_OWORD *)a2 + 15);
          v42 = *((_OWORD *)a2 + 16);
          v43 = *((_OWORD *)a2 + 17);
          v100[3] = *((_OWORD *)a2 + 18);
          v100[2] = v43;
          v100[1] = v42;
          v100[0] = v41;
          v44 = *((_OWORD *)a2 + 19);
          v45 = *((_OWORD *)a2 + 20);
          v46 = *((_OWORD *)a2 + 21);
          *(_QWORD *)((char *)v101 + 14) = *(uint64_t *)((char *)a2 + 350);
          v101[0] = v46;
          v100[5] = v45;
          v100[4] = v44;
          if ((sub_1001ACA7C((uint64_t *)v102, (uint64_t)v100) & 1) != 0)
          {
            v47 = *(_OWORD *)(a1 + 55);
            v98[4] = *(_OWORD *)(a1 + 53);
            v98[5] = v47;
            v99[0] = *(_OWORD *)(a1 + 57);
            *(_QWORD *)((char *)v99 + 14) = *(uint64_t *)((char *)a1 + 470);
            v48 = *(_OWORD *)(a1 + 47);
            v98[0] = *(_OWORD *)(a1 + 45);
            v98[1] = v48;
            v49 = *(_OWORD *)(a1 + 51);
            v98[2] = *(_OWORD *)(a1 + 49);
            v98[3] = v49;
            v50 = *(_OWORD *)(a2 + 45);
            v51 = *(_OWORD *)(a2 + 47);
            v52 = *(_OWORD *)(a2 + 51);
            v96[2] = *(_OWORD *)(a2 + 49);
            v96[3] = v52;
            v96[0] = v50;
            v96[1] = v51;
            v53 = *(_OWORD *)(a2 + 53);
            v54 = *(_OWORD *)(a2 + 55);
            v55 = *(_OWORD *)(a2 + 57);
            *(_QWORD *)((char *)v97 + 14) = *(uint64_t *)((char *)a2 + 470);
            v96[5] = v54;
            v97[0] = v55;
            v96[4] = v53;
            if ((sub_1001ACA7C((uint64_t *)v98, (uint64_t)v96) & 1) != 0)
            {
              v56 = *((_OWORD *)a1 + 35);
              v94[4] = *((_OWORD *)a1 + 34);
              v94[5] = v56;
              v95[0] = *((_OWORD *)a1 + 36);
              v57 = *((_OWORD *)a1 + 31);
              v94[0] = *((_OWORD *)a1 + 30);
              v94[1] = v57;
              v58 = *((_OWORD *)a1 + 33);
              v94[2] = *((_OWORD *)a1 + 32);
              v94[3] = v58;
              *(_QWORD *)((char *)v95 + 14) = *(uint64_t *)((char *)a1 + 590);
              v59 = *((_OWORD *)a2 + 30);
              v60 = *((_OWORD *)a2 + 31);
              v61 = *((_OWORD *)a2 + 33);
              v92[2] = *((_OWORD *)a2 + 32);
              v92[3] = v61;
              v92[0] = v59;
              v92[1] = v60;
              v62 = *((_OWORD *)a2 + 34);
              v63 = *((_OWORD *)a2 + 35);
              v64 = *((_OWORD *)a2 + 36);
              *(_QWORD *)((char *)v93 + 14) = *(uint64_t *)((char *)a2 + 590);
              v92[5] = v63;
              v93[0] = v64;
              v92[4] = v62;
              if ((sub_1001ACA7C((uint64_t *)v94, (uint64_t)v92) & 1) != 0)
              {
                v65 = *(_OWORD *)(a1 + 85);
                v90[4] = *(_OWORD *)(a1 + 83);
                v90[5] = v65;
                v91[0] = *(_OWORD *)(a1 + 87);
                *(_QWORD *)((char *)v91 + 14) = *(uint64_t *)((char *)a1 + 710);
                v66 = *(_OWORD *)(a1 + 77);
                v90[0] = *(_OWORD *)(a1 + 75);
                v90[1] = v66;
                v67 = *(_OWORD *)(a1 + 81);
                v90[2] = *(_OWORD *)(a1 + 79);
                v90[3] = v67;
                v68 = *(_OWORD *)(a2 + 75);
                v69 = *(_OWORD *)(a2 + 77);
                v70 = *(_OWORD *)(a2 + 81);
                v88[2] = *(_OWORD *)(a2 + 79);
                v88[3] = v70;
                v88[0] = v68;
                v88[1] = v69;
                v71 = *(_OWORD *)(a2 + 83);
                v72 = *(_OWORD *)(a2 + 85);
                v73 = *(_OWORD *)(a2 + 87);
                *(_QWORD *)((char *)v89 + 14) = *(uint64_t *)((char *)a2 + 710);
                v88[5] = v72;
                v89[0] = v73;
                v88[4] = v71;
                if ((sub_1001ACA7C((uint64_t *)v90, (uint64_t)v88) & 1) != 0)
                {
                  v74 = *((_OWORD *)a1 + 50);
                  v86[4] = *((_OWORD *)a1 + 49);
                  v86[5] = v74;
                  v87[0] = *((_OWORD *)a1 + 51);
                  v75 = *((_OWORD *)a1 + 46);
                  v86[0] = *((_OWORD *)a1 + 45);
                  v86[1] = v75;
                  v76 = *((_OWORD *)a1 + 48);
                  v86[2] = *((_OWORD *)a1 + 47);
                  v86[3] = v76;
                  *(_QWORD *)((char *)v87 + 14) = *(uint64_t *)((char *)a1 + 830);
                  v77 = *((_OWORD *)a2 + 45);
                  v78 = *((_OWORD *)a2 + 46);
                  v79 = *((_OWORD *)a2 + 48);
                  v84[2] = *((_OWORD *)a2 + 47);
                  v84[3] = v79;
                  v84[0] = v77;
                  v84[1] = v78;
                  v80 = *((_OWORD *)a2 + 49);
                  v81 = *((_OWORD *)a2 + 50);
                  v82 = *((_OWORD *)a2 + 51);
                  *(_QWORD *)&v85[14] = *(uint64_t *)((char *)a2 + 830);
                  v84[5] = v81;
                  *(_OWORD *)v85 = v82;
                  v84[4] = v80;
                  v27 = sub_1001ACA7C((uint64_t *)v86, (uint64_t)v84);
                  return v27 & 1;
                }
              }
            }
          }
        }
      }
    }
LABEL_29:
    v27 = 0;
  }
  return v27 & 1;
}

uint64_t sub_1001AD54C(const void *a1, const void *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float v9;
  char v10;
  int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  float v34;
  char v35;
  int v36;
  __int128 v37;
  __int128 v38;
  const void *v39;
  const void *v40;
  char v41;
  const void *v42;
  const void *v43;
  _BYTE v45[120];
  _BYTE v46[120];
  _BYTE v47[120];
  _OWORD v48[53];
  _OWORD __dst[53];
  _BYTE v50[848];
  _BYTE v51[120];
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58[106];
  _BYTE v59[40];
  _BYTE v60[40];
  __int128 v61;
  _OWORD v62[2];
  __int128 v63;
  _OWORD v64[2];
  _OWORD v65[6];
  _OWORD v66[2];
  _OWORD v67[6];
  _OWORD v68[2];
  _OWORD v69[6];
  _OWORD v70[2];
  _BYTE v71[40];
  _BYTE v72[40];
  __int128 v73;
  _OWORD v74[2];
  __int128 v75;
  _OWORD v76[2];
  _OWORD v77[6];
  _OWORD v78[2];
  _OWORD v79[6];
  _OWORD v80[2];
  _OWORD v81[6];
  _OWORD v82[3];

  sub_10001F970(a1, v50);
  v3 = sub_10001F9AC((uint64_t)v50);
  if (v3)
  {
    if (v3 == 1)
    {
      v4 = sub_10001F9B8((uint64_t)v50);
      v5 = *(_QWORD *)v4;
      v6 = *(_QWORD *)(v4 + 8);
      v8 = *(_QWORD *)(v4 + 16);
      v7 = *(_QWORD *)(v4 + 24);
      v9 = *(float *)(v4 + 32);
      v10 = *(_BYTE *)(v4 + 36);
      v11 = *(unsigned __int8 *)(v4 + 37);
      v12 = *(_OWORD *)(v4 + 54);
      v55 = *(_OWORD *)(v4 + 38);
      v56 = v12;
      v57 = *(_QWORD *)(v4 + 70);
      v54 = *(_QWORD *)(v4 + 110);
      v13 = *(_OWORD *)(v4 + 78);
      v53 = *(_OWORD *)(v4 + 94);
      v52 = v13;
      *(_QWORD *)&__dst[7] = *(_QWORD *)(v4 + 230);
      __dst[6] = *(_OWORD *)(v4 + 214);
      v14 = *(_OWORD *)(v4 + 182);
      __dst[5] = *(_OWORD *)(v4 + 198);
      __dst[4] = v14;
      v15 = *(_OWORD *)(v4 + 150);
      __dst[3] = *(_OWORD *)(v4 + 166);
      __dst[2] = v15;
      v16 = *(_OWORD *)(v4 + 118);
      __dst[1] = *(_OWORD *)(v4 + 134);
      __dst[0] = v16;
      v17 = *(_OWORD *)(v4 + 238);
      v18 = *(_OWORD *)(v4 + 254);
      v19 = *(_OWORD *)(v4 + 286);
      v48[2] = *(_OWORD *)(v4 + 270);
      v48[3] = v19;
      v48[0] = v17;
      v48[1] = v18;
      v20 = *(_OWORD *)(v4 + 302);
      v21 = *(_OWORD *)(v4 + 318);
      v22 = *(_OWORD *)(v4 + 334);
      *(_QWORD *)&v48[7] = *(_QWORD *)(v4 + 350);
      v48[5] = v21;
      v48[6] = v22;
      v48[4] = v20;
      v23 = *(_OWORD *)(v4 + 358);
      v24 = *(_OWORD *)(v4 + 374);
      v25 = *(_OWORD *)(v4 + 390);
      *(_OWORD *)&v51[48] = *(_OWORD *)(v4 + 406);
      *(_OWORD *)&v51[32] = v25;
      *(_OWORD *)&v51[16] = v24;
      *(_OWORD *)v51 = v23;
      v26 = *(_OWORD *)(v4 + 422);
      v27 = *(_OWORD *)(v4 + 438);
      v28 = *(_OWORD *)(v4 + 454);
      *(_QWORD *)&v51[112] = *(_QWORD *)(v4 + 470);
      *(_OWORD *)&v51[96] = v28;
      *(_OWORD *)&v51[80] = v27;
      *(_OWORD *)&v51[64] = v26;
      sub_10001F970(a2, v58);
      if (sub_10001F9AC((uint64_t)v58) != 1)
        goto LABEL_34;
      v29 = sub_10001F9B8((uint64_t)v58);
      v30 = *(_QWORD *)v29;
      v31 = *(_QWORD *)(v29 + 8);
      v33 = *(_QWORD *)(v29 + 16);
      v32 = *(_QWORD *)(v29 + 24);
      v34 = *(float *)(v29 + 32);
      v35 = *(_BYTE *)(v29 + 36);
      v36 = *(unsigned __int8 *)(v29 + 37);
      v37 = *(_OWORD *)(v29 + 54);
      *(_OWORD *)v72 = *(_OWORD *)(v29 + 38);
      *(_OWORD *)&v72[16] = v37;
      *(_QWORD *)&v72[32] = *(_QWORD *)(v29 + 70);
      *(_QWORD *)&v71[32] = *(_QWORD *)(v29 + 110);
      v38 = *(_OWORD *)(v29 + 78);
      *(_OWORD *)&v71[16] = *(_OWORD *)(v29 + 94);
      *(_OWORD *)v71 = v38;
      *(_QWORD *)&v47[112] = *(_QWORD *)(v29 + 230);
      *(_OWORD *)&v47[80] = *(_OWORD *)(v29 + 198);
      *(_OWORD *)&v47[96] = *(_OWORD *)(v29 + 214);
      *(_OWORD *)&v47[48] = *(_OWORD *)(v29 + 166);
      *(_OWORD *)&v47[64] = *(_OWORD *)(v29 + 182);
      *(_OWORD *)&v47[16] = *(_OWORD *)(v29 + 134);
      *(_OWORD *)&v47[32] = *(_OWORD *)(v29 + 150);
      *(_OWORD *)v47 = *(_OWORD *)(v29 + 118);
      *(_OWORD *)&v46[32] = *(_OWORD *)(v29 + 270);
      *(_OWORD *)&v46[48] = *(_OWORD *)(v29 + 286);
      *(_OWORD *)v46 = *(_OWORD *)(v29 + 238);
      *(_OWORD *)&v46[16] = *(_OWORD *)(v29 + 254);
      *(_QWORD *)&v46[112] = *(_QWORD *)(v29 + 350);
      *(_OWORD *)&v46[80] = *(_OWORD *)(v29 + 318);
      *(_OWORD *)&v46[96] = *(_OWORD *)(v29 + 334);
      *(_OWORD *)&v46[64] = *(_OWORD *)(v29 + 302);
      *(_OWORD *)&v45[32] = *(_OWORD *)(v29 + 390);
      *(_OWORD *)&v45[48] = *(_OWORD *)(v29 + 406);
      *(_OWORD *)v45 = *(_OWORD *)(v29 + 358);
      *(_OWORD *)&v45[16] = *(_OWORD *)(v29 + 374);
      *(_QWORD *)&v45[112] = *(_QWORD *)(v29 + 470);
      *(_OWORD *)&v45[80] = *(_OWORD *)(v29 + 438);
      *(_OWORD *)&v45[96] = *(_OWORD *)(v29 + 454);
      *(_OWORD *)&v45[64] = *(_OWORD *)(v29 + 422);
      *(_QWORD *)&v60[32] = v57;
      *(_OWORD *)&v60[16] = v56;
      *(_OWORD *)v60 = v55;
      *(_QWORD *)&v59[32] = v54;
      *(_OWORD *)&v59[16] = v53;
      *(_OWORD *)v59 = v52;
      if ((v5 != v30 || v6 != v31) && (_stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v30, v31, 0) & 1) == 0)
        goto LABEL_34;
      if (v7)
      {
        if (!v32
          || (v8 != v33 || v7 != v32) && (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v7, v33, v32, 0) & 1) == 0)
        {
          goto LABEL_34;
        }
      }
      else if (v32)
      {
        goto LABEL_34;
      }
      if ((v10 & 1) != 0)
      {
        if ((v35 & 1) == 0)
          goto LABEL_34;
      }
      else if ((v35 & 1) != 0 || v9 != v34)
      {
        goto LABEL_34;
      }
      if (v11 == 4)
      {
        if (v36 != 4)
          goto LABEL_34;
      }
      else if (v36 == 4 || v11 != v36)
      {
        goto LABEL_34;
      }
      v63 = *(_OWORD *)&v60[2];
      v64[0] = *(_OWORD *)&v60[18];
      *(_QWORD *)((char *)v64 + 14) = *(_QWORD *)&v60[32];
      v75 = *(_OWORD *)&v72[2];
      v76[0] = *(_OWORD *)&v72[18];
      *(_QWORD *)((char *)v76 + 14) = *(_QWORD *)&v72[32];
      if ((sub_100108D3C((float *)&v63, (uint64_t)&v75) & 1) != 0)
      {
        v61 = *(_OWORD *)&v59[2];
        v62[0] = *(_OWORD *)&v59[18];
        *(_QWORD *)((char *)v62 + 14) = *(_QWORD *)&v59[32];
        v73 = *(_OWORD *)&v71[2];
        v74[0] = *(_OWORD *)&v71[18];
        *(_QWORD *)((char *)v74 + 14) = *(_QWORD *)&v71[32];
        if ((sub_100108D3C((float *)&v61, (uint64_t)&v73) & 1) != 0)
        {
          v65[4] = *(_OWORD *)((char *)&__dst[4] + 2);
          v65[5] = *(_OWORD *)((char *)&__dst[5] + 2);
          v66[0] = *(_OWORD *)((char *)&__dst[6] + 2);
          *(_QWORD *)((char *)v66 + 14) = *(_QWORD *)&__dst[7];
          v65[0] = *(_OWORD *)((char *)__dst + 2);
          v65[1] = *(_OWORD *)((char *)&__dst[1] + 2);
          v65[2] = *(_OWORD *)((char *)&__dst[2] + 2);
          v65[3] = *(_OWORD *)((char *)&__dst[3] + 2);
          v77[3] = *(_OWORD *)&v47[50];
          v77[2] = *(_OWORD *)&v47[34];
          v77[1] = *(_OWORD *)&v47[18];
          v77[0] = *(_OWORD *)&v47[2];
          *(_QWORD *)((char *)v78 + 14) = *(_QWORD *)&v47[112];
          v78[0] = *(_OWORD *)&v47[98];
          v77[5] = *(_OWORD *)&v47[82];
          v77[4] = *(_OWORD *)&v47[66];
          if ((sub_1001ACA7C((uint64_t *)v65, (uint64_t)v77) & 1) != 0)
          {
            v67[4] = *(_OWORD *)((char *)&v48[4] + 2);
            v67[5] = *(_OWORD *)((char *)&v48[5] + 2);
            v68[0] = *(_OWORD *)((char *)&v48[6] + 2);
            *(_QWORD *)((char *)v68 + 14) = *(_QWORD *)&v48[7];
            v67[0] = *(_OWORD *)((char *)v48 + 2);
            v67[1] = *(_OWORD *)((char *)&v48[1] + 2);
            v67[2] = *(_OWORD *)((char *)&v48[2] + 2);
            v67[3] = *(_OWORD *)((char *)&v48[3] + 2);
            v79[3] = *(_OWORD *)&v46[50];
            v79[2] = *(_OWORD *)&v46[34];
            v79[1] = *(_OWORD *)&v46[18];
            v79[0] = *(_OWORD *)&v46[2];
            *(_QWORD *)((char *)v80 + 14) = *(_QWORD *)&v46[112];
            v80[0] = *(_OWORD *)&v46[98];
            v79[5] = *(_OWORD *)&v46[82];
            v79[4] = *(_OWORD *)&v46[66];
            if ((sub_1001ACA7C((uint64_t *)v67, (uint64_t)v79) & 1) != 0)
            {
              v69[4] = *(_OWORD *)&v51[66];
              v69[5] = *(_OWORD *)&v51[82];
              v70[0] = *(_OWORD *)&v51[98];
              *(_QWORD *)((char *)v70 + 14) = *(_QWORD *)&v51[112];
              v69[0] = *(_OWORD *)&v51[2];
              v69[1] = *(_OWORD *)&v51[18];
              v69[2] = *(_OWORD *)&v51[34];
              v69[3] = *(_OWORD *)&v51[50];
              v81[2] = *(_OWORD *)&v45[34];
              v81[3] = *(_OWORD *)&v45[50];
              v81[0] = *(_OWORD *)&v45[2];
              v81[1] = *(_OWORD *)&v45[18];
              *(_QWORD *)((char *)v82 + 14) = *(_QWORD *)&v45[112];
              v81[5] = *(_OWORD *)&v45[82];
              v82[0] = *(_OWORD *)&v45[98];
              v81[4] = *(_OWORD *)&v45[66];
              if ((sub_1001ACA7C((uint64_t *)v69, (uint64_t)v81) & 1) != 0)
              {
                v41 = 1;
                return v41 & 1;
              }
            }
          }
        }
      }
LABEL_34:
      v41 = 0;
      return v41 & 1;
    }
    v42 = (const void *)sub_10001F9B8((uint64_t)v50);
    memcpy(v58, v42, 0x346uLL);
    sub_10001F970(a2, v48);
    if (sub_10001F9AC((uint64_t)v48) != 2)
      goto LABEL_34;
    v43 = (const void *)sub_10001F9B8((uint64_t)v48);
    memcpy(__dst, v43, 0x346uLL);
    v41 = sub_1001AD07C(v58, (uint64_t *)__dst);
  }
  else
  {
    v39 = (const void *)sub_10001F9B8((uint64_t)v50);
    memcpy(__dst, v39, 0x10DuLL);
    sub_10001F970(a2, v58);
    if (sub_10001F9AC((uint64_t)v58))
      goto LABEL_34;
    v40 = (const void *)sub_10001F9B8((uint64_t)v58);
    memcpy(v48, v40, 0x10DuLL);
    v41 = sub_1001ACC14((uint64_t *)__dst, (uint64_t *)v48);
  }
  return v41 & 1;
}

uint64_t sub_1001ADBC0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  char v9;
  int v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  char v20;
  int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char v26;
  char v27;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _OWORD v57[6];
  _BYTE v58[22];
  _OWORD v59[6];
  _OWORD v60[2];
  _OWORD v61[6];
  _OWORD v62[2];
  _OWORD v63[6];
  _OWORD v64[2];
  _OWORD v65[6];
  _OWORD v66[2];
  _OWORD v67[6];
  _OWORD v68[2];
  _BYTE v69[40];
  _BYTE v70[40];
  __int128 v71;
  _OWORD v72[2];
  __int128 v73;
  _OWORD v74[2];
  _BYTE v75[40];
  _BYTE v76[40];
  __int128 v77;
  _OWORD v78[2];
  __int128 v79;
  _OWORD v80[3];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = *((float *)a1 + 8);
  v9 = *((_BYTE *)a1 + 36);
  v10 = *((unsigned __int8 *)a1 + 37);
  v11 = *(_OWORD *)((char *)a1 + 38);
  v12 = *(_OWORD *)((char *)a1 + 54);
  *(_QWORD *)&v76[32] = *(uint64_t *)((char *)a1 + 70);
  *(_OWORD *)v76 = v11;
  *(_OWORD *)&v76[16] = v12;
  v13 = *(_OWORD *)((char *)a1 + 78);
  v14 = *(_OWORD *)((char *)a1 + 94);
  *(_QWORD *)&v75[32] = *(uint64_t *)((char *)a1 + 110);
  *(_OWORD *)v75 = v13;
  *(_OWORD *)&v75[16] = v14;
  v15 = *a2;
  v16 = a2[1];
  v18 = a2[2];
  v17 = a2[3];
  v19 = *((float *)a2 + 8);
  v20 = *((_BYTE *)a2 + 36);
  v21 = *((unsigned __int8 *)a2 + 37);
  v22 = *(_OWORD *)((char *)a2 + 38);
  v23 = *(_OWORD *)((char *)a2 + 54);
  *(_QWORD *)&v70[32] = *(uint64_t *)((char *)a2 + 70);
  *(_OWORD *)v70 = v22;
  *(_OWORD *)&v70[16] = v23;
  v24 = *(_OWORD *)((char *)a2 + 78);
  v25 = *(_OWORD *)((char *)a2 + 94);
  *(_QWORD *)&v69[32] = *(uint64_t *)((char *)a2 + 110);
  *(_OWORD *)v69 = v24;
  *(_OWORD *)&v69[16] = v25;
  if (v4 == v15 && v5 == v16
    || (v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v15, v16, 0), v27 = 0, (v26 & 1) != 0))
  {
    if (v7)
    {
      if (!v17)
        goto LABEL_26;
      if (v6 != v18 || v7 != v17)
      {
        v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v18, v17, 0);
        v27 = 0;
        if ((v28 & 1) == 0)
          return v27 & 1;
      }
    }
    else if (v17)
    {
      goto LABEL_26;
    }
    if ((v9 & 1) != 0)
    {
      if ((v20 & 1) == 0)
        goto LABEL_26;
    }
    else
    {
      v27 = 0;
      if ((v20 & 1) != 0 || v8 != v19)
        return v27 & 1;
    }
    if (v10 == 4)
    {
      if (v21 != 4)
        goto LABEL_26;
    }
    else
    {
      v27 = 0;
      if (v21 == 4 || v10 != v21)
        return v27 & 1;
    }
    v79 = *(_OWORD *)&v76[2];
    v80[0] = *(_OWORD *)&v76[18];
    *(_QWORD *)((char *)v80 + 14) = *(_QWORD *)&v76[32];
    v73 = *(_OWORD *)&v70[2];
    v74[0] = *(_OWORD *)&v70[18];
    *(_QWORD *)((char *)v74 + 14) = *(_QWORD *)&v70[32];
    if ((sub_100108D3C((float *)&v79, (uint64_t)&v73) & 1) != 0)
    {
      v77 = *(_OWORD *)&v75[2];
      v78[0] = *(_OWORD *)&v75[18];
      *(_QWORD *)((char *)v78 + 14) = *(_QWORD *)&v75[32];
      v71 = *(_OWORD *)&v69[2];
      v72[0] = *(_OWORD *)&v69[18];
      *(_QWORD *)((char *)v72 + 14) = *(_QWORD *)&v69[32];
      if ((sub_100108D3C((float *)&v77, (uint64_t)&v71) & 1) != 0)
      {
        v29 = *(_OWORD *)(a1 + 25);
        v67[4] = *(_OWORD *)(a1 + 23);
        v67[5] = v29;
        v68[0] = *(_OWORD *)(a1 + 27);
        *(_QWORD *)((char *)v68 + 14) = *(uint64_t *)((char *)a1 + 230);
        v30 = *(_OWORD *)(a1 + 17);
        v67[0] = *(_OWORD *)(a1 + 15);
        v67[1] = v30;
        v31 = *(_OWORD *)(a1 + 21);
        v67[2] = *(_OWORD *)(a1 + 19);
        v67[3] = v31;
        v32 = *(_OWORD *)(a2 + 15);
        v33 = *(_OWORD *)(a2 + 17);
        v34 = *(_OWORD *)(a2 + 21);
        v65[2] = *(_OWORD *)(a2 + 19);
        v65[3] = v34;
        v65[0] = v32;
        v65[1] = v33;
        v35 = *(_OWORD *)(a2 + 23);
        v36 = *(_OWORD *)(a2 + 25);
        v37 = *(_OWORD *)(a2 + 27);
        *(_QWORD *)((char *)v66 + 14) = *(uint64_t *)((char *)a2 + 230);
        v65[5] = v36;
        v66[0] = v37;
        v65[4] = v35;
        if ((sub_1001ACA7C((uint64_t *)v67, (uint64_t)v65) & 1) != 0)
        {
          v38 = *((_OWORD *)a1 + 20);
          v63[4] = *((_OWORD *)a1 + 19);
          v63[5] = v38;
          v64[0] = *((_OWORD *)a1 + 21);
          v39 = *((_OWORD *)a1 + 16);
          v63[0] = *((_OWORD *)a1 + 15);
          v63[1] = v39;
          v40 = *((_OWORD *)a1 + 18);
          v63[2] = *((_OWORD *)a1 + 17);
          v63[3] = v40;
          *(_QWORD *)((char *)v64 + 14) = *(uint64_t *)((char *)a1 + 350);
          v41 = *((_OWORD *)a2 + 15);
          v42 = *((_OWORD *)a2 + 16);
          v43 = *((_OWORD *)a2 + 18);
          v61[2] = *((_OWORD *)a2 + 17);
          v61[3] = v43;
          v61[0] = v41;
          v61[1] = v42;
          v44 = *((_OWORD *)a2 + 19);
          v45 = *((_OWORD *)a2 + 20);
          v46 = *((_OWORD *)a2 + 21);
          *(_QWORD *)((char *)v62 + 14) = *(uint64_t *)((char *)a2 + 350);
          v61[5] = v45;
          v62[0] = v46;
          v61[4] = v44;
          if ((sub_1001ACA7C((uint64_t *)v63, (uint64_t)v61) & 1) != 0)
          {
            v47 = *(_OWORD *)(a1 + 55);
            v59[4] = *(_OWORD *)(a1 + 53);
            v59[5] = v47;
            v60[0] = *(_OWORD *)(a1 + 57);
            *(_QWORD *)((char *)v60 + 14) = *(uint64_t *)((char *)a1 + 470);
            v48 = *(_OWORD *)(a1 + 47);
            v59[0] = *(_OWORD *)(a1 + 45);
            v59[1] = v48;
            v49 = *(_OWORD *)(a1 + 51);
            v59[2] = *(_OWORD *)(a1 + 49);
            v59[3] = v49;
            v50 = *(_OWORD *)(a2 + 45);
            v51 = *(_OWORD *)(a2 + 47);
            v52 = *(_OWORD *)(a2 + 51);
            v57[2] = *(_OWORD *)(a2 + 49);
            v57[3] = v52;
            v57[0] = v50;
            v57[1] = v51;
            v53 = *(_OWORD *)(a2 + 53);
            v54 = *(_OWORD *)(a2 + 55);
            v55 = *(_OWORD *)(a2 + 57);
            *(_QWORD *)&v58[14] = *(uint64_t *)((char *)a2 + 470);
            v57[5] = v54;
            *(_OWORD *)v58 = v55;
            v57[4] = v53;
            v27 = sub_1001ACA7C((uint64_t *)v59, (uint64_t)v57);
            return v27 & 1;
          }
        }
      }
    }
LABEL_26:
    v27 = 0;
  }
  return v27 & 1;
}

uint64_t sub_1001ADF08(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  _BYTE v43[4];
  int v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  _BYTE *v49;
  _BYTE v50[848];
  _BYTE v51[848];

  v4 = type metadata accessor for MeasurementCapture(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v47 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __chkstk_darwin(v6);
  v48 = &v43[-v9];
  __chkstk_darwin(v8);
  v49 = &v43[-v10];
  v11 = sub_10000EDC8(&qword_100489A00);
  __chkstk_darwin(v11);
  v13 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_10000EDC8((uint64_t *)&unk_1004862E0);
  v15 = __chkstk_darwin(v14);
  v17 = &v43[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __chkstk_darwin(v15);
  v20 = &v43[-v19];
  __chkstk_darwin(v18);
  v22 = &v43[-v21];
  v23 = a1[1];
  v24 = a2[1];
  if (*a1 == *a2 && v23 == v24
    || (v25 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v23, *a2, v24, 0), v26 = 0, (v25 & 1) != 0))
  {
    if ((v27 = a1[2], v28 = a1[3], v29 = a2[2], v30 = a2[3], v27 == v29) && v28 == v30
      || (v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, v29, v30, 0), v26 = 0, (v31 & 1) != 0))
    {
      v46 = v17;
      v32 = type metadata accessor for MeasurementHistoryItem(0);
      sub_10008F1C8((uint64_t)a1 + *(int *)(v32 + 24), (uint64_t)v22);
      v45 = v32;
      sub_10008F1C8((uint64_t)a2 + *(int *)(v32 + 24), (uint64_t)v20);
      v33 = (uint64_t)&v13[*(int *)(v11 + 48)];
      sub_10008F1C8((uint64_t)v22, (uint64_t)v13);
      sub_10008F1C8((uint64_t)v20, v33);
      v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v34((uint64_t)v13, 1, v4) == 1)
      {
        sub_100036600((uint64_t)v20, (uint64_t *)&unk_1004862E0);
        sub_100036600((uint64_t)v22, (uint64_t *)&unk_1004862E0);
        if (v34(v33, 1, v4) == 1)
        {
          sub_100036600((uint64_t)v13, (uint64_t *)&unk_1004862E0);
LABEL_15:
          v41 = v45;
          sub_10001F970((char *)a1 + *(int *)(v45 + 28), v50);
          sub_10001F970((char *)a2 + *(int *)(v41 + 28), v51);
          if ((sub_1001AD54C(v50, v51) & 1) != 0)
          {
            v26 = *((_BYTE *)a1 + *(int *)(v41 + 32)) ^ *((_BYTE *)a2 + *(int *)(v41 + 32)) ^ 1;
            return v26 & 1;
          }
LABEL_19:
          v26 = 0;
          return v26 & 1;
        }
      }
      else
      {
        v35 = (uint64_t)v46;
        sub_10008F1C8((uint64_t)v13, (uint64_t)v46);
        if (v34(v33, 1, v4) != 1)
        {
          v38 = v49;
          sub_100036388(v33, (uint64_t)v49);
          v44 = static URL.== infix(_:_:)(v35 + *(int *)(v4 + 20), &v38[*(int *)(v4 + 20)]);
          v39 = v48;
          sub_100171EC8(v35, (uint64_t)v48);
          v40 = v47;
          sub_100171EC8((uint64_t)v38, (uint64_t)v47);
          if ((v44 & 1) != 0)
          {
            v44 = static URL.== infix(_:_:)(v39, v40);
            sub_100171F0C((uint64_t)v40);
            sub_100171F0C((uint64_t)v39);
            sub_100171F0C((uint64_t)v38);
            sub_100036600((uint64_t)v20, (uint64_t *)&unk_1004862E0);
            sub_100036600((uint64_t)v22, (uint64_t *)&unk_1004862E0);
            sub_100171F0C(v35);
            sub_100036600((uint64_t)v13, (uint64_t *)&unk_1004862E0);
            if ((v44 & 1) == 0)
              goto LABEL_19;
            goto LABEL_15;
          }
          sub_100171F0C((uint64_t)v40);
          sub_100171F0C((uint64_t)v39);
          sub_100171F0C((uint64_t)v38);
          sub_100036600((uint64_t)v20, (uint64_t *)&unk_1004862E0);
          sub_100036600((uint64_t)v22, (uint64_t *)&unk_1004862E0);
          sub_100171F0C(v35);
          v37 = (uint64_t)v13;
          v36 = (uint64_t *)&unk_1004862E0;
LABEL_18:
          sub_100036600(v37, v36);
          goto LABEL_19;
        }
        sub_100036600((uint64_t)v20, (uint64_t *)&unk_1004862E0);
        sub_100036600((uint64_t)v22, (uint64_t *)&unk_1004862E0);
        sub_100171F0C(v35);
      }
      v36 = &qword_100489A00;
      v37 = (uint64_t)v13;
      goto LABEL_18;
    }
  }
  return v26 & 1;
}

uint64_t sub_1001AE340(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *(_QWORD *)(a1 + 120);
  v2 = *(_QWORD *)(a1 + 136);
  v13 = *(_QWORD *)(a1 + 128);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_QWORD *)(a1 + 168);
  v7 = *(_QWORD *)(a1 + 176);
  v11 = *(_OWORD *)(a1 + 200);
  v12 = *(_OWORD *)(a1 + 184);
  v8 = *(_QWORD *)(a1 + 216);
  v9 = *(_QWORD *)(a1 + 224);
  sub_1000212A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
  sub_1000212A4(v14, v13, v2, v3, v4, v5, v6, v7, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v8, v9);
  return a1;
}

uint64_t destroy for MeasurementFields(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[11]);
  return swift_bridgeObjectRelease(a1[13]);
}

uint64_t initializeWithCopy for MeasurementFields(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 117) = *(_BYTE *)(a2 + 117);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t assignWithCopy for MeasurementFields(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 37) = *(_BYTE *)(a2 + 37);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  v13 = *(_DWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v13;
  *(_BYTE *)(a1 + 77) = *(_BYTE *)(a2 + 77);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v16 = *(_QWORD *)(a2 + 104);
  v17 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = *(_DWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v18;
  *(_BYTE *)(a1 + 117) = *(_BYTE *)(a2 + 117);
  return a1;
}

__n128 initializeWithTake for MeasurementFields(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 110) = *(_QWORD *)((char *)a2 + 110);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for MeasurementFields(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRelease(v11);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v12;
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a2 + 104);
  v15 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v14;
  swift_bridgeObjectRelease(v15);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_WORD *)(a1 + 116) = *(_WORD *)(a2 + 116);
  return a1;
}

uint64_t getEnumTagSinglePayload for MeasurementFields(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 118))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MeasurementFields(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 116) = 0;
    *(_DWORD *)(result + 112) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 118) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 118) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MeasurementFields()
{
  return &type metadata for MeasurementFields;
}

uint64_t destroy for MeasurementDetail(uint64_t a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v17 = *(_OWORD *)(a1 + 464);
  v18 = *(_OWORD *)(a1 + 480);
  v15 = *(_OWORD *)(a1 + 432);
  v16 = *(_OWORD *)(a1 + 448);
  v13 = *(_OWORD *)(a1 + 400);
  v14 = *(_OWORD *)(a1 + 416);
  v11 = *(_OWORD *)(a1 + 368);
  v12 = *(_OWORD *)(a1 + 384);
  v9 = *(_OWORD *)(a1 + 336);
  v10 = *(_OWORD *)(a1 + 352);
  v7 = *(_OWORD *)(a1 + 304);
  v8 = *(_OWORD *)(a1 + 320);
  v6 = *(_OWORD *)(a1 + 288);
  v5 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 256);
  v3 = *(_OWORD *)(a1 + 240);
  v2 = *(_OWORD *)(a1 + 224);
  return sub_100020E24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(_QWORD *)(a1 + 176),
           *(_QWORD *)(a1 + 184),
           *(_QWORD *)(a1 + 192),
           *(_QWORD *)(a1 + 200),
           *(_QWORD *)(a1 + 208),
           *(_QWORD *)(a1 + 216),
           v2,
           *((uint64_t *)&v2 + 1),
           v3,
           *((uint64_t *)&v3 + 1),
           v4,
           *((uint64_t *)&v4 + 1),
           v5,
           *((uint64_t *)&v5 + 1),
           v6,
           *((uint64_t *)&v6 + 1),
           v7,
           *((uint64_t *)&v7 + 1),
           v8,
           *((uint64_t *)&v8 + 1),
           v9,
           *((uint64_t *)&v9 + 1),
           v10,
           *((uint64_t *)&v10 + 1),
           v11,
           *((uint64_t *)&v11 + 1),
           v12,
           *((uint64_t *)&v12 + 1),
           v13,
           *((uint64_t *)&v13 + 1),
           v14,
           *((uint64_t *)&v14 + 1),
           v15,
           *((uint64_t *)&v15 + 1),
           v16,
           *((uint64_t *)&v16 + 1),
           v17,
           *((uint64_t *)&v17 + 1),
           v18,
           *((uint64_t *)&v18 + 1),
           *(_QWORD *)(a1 + 496));
}

uint64_t initializeWithCopy for MeasurementDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int16 v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v108 = *(_QWORD *)(a2 + 80);
  v109 = *(_QWORD *)(a2 + 72);
  v106 = *(_QWORD *)(a2 + 96);
  v107 = *(_QWORD *)(a2 + 88);
  v104 = *(_QWORD *)(a2 + 112);
  v105 = *(_QWORD *)(a2 + 104);
  v102 = *(_QWORD *)(a2 + 128);
  v103 = *(_QWORD *)(a2 + 120);
  v100 = *(_QWORD *)(a2 + 144);
  v101 = *(_QWORD *)(a2 + 136);
  v98 = *(_QWORD *)(a2 + 160);
  v99 = *(_QWORD *)(a2 + 152);
  v96 = *(_QWORD *)(a2 + 176);
  v97 = *(_QWORD *)(a2 + 168);
  v94 = *(_QWORD *)(a2 + 192);
  v95 = *(_QWORD *)(a2 + 184);
  v92 = *(_QWORD *)(a2 + 208);
  v93 = *(_QWORD *)(a2 + 200);
  v90 = *(_QWORD *)(a2 + 224);
  v91 = *(_QWORD *)(a2 + 216);
  v89 = *(_QWORD *)(a2 + 232);
  v88 = *(_QWORD *)(a2 + 240);
  v87 = *(_QWORD *)(a2 + 248);
  v86 = *(_QWORD *)(a2 + 256);
  v85 = *(_QWORD *)(a2 + 264);
  v84 = *(_QWORD *)(a2 + 272);
  v83 = *(_QWORD *)(a2 + 280);
  v82 = *(_QWORD *)(a2 + 288);
  v81 = *(_QWORD *)(a2 + 296);
  v80 = *(_QWORD *)(a2 + 304);
  v79 = *(_QWORD *)(a2 + 312);
  v78 = *(_QWORD *)(a2 + 320);
  v77 = *(_QWORD *)(a2 + 328);
  v76 = *(_QWORD *)(a2 + 336);
  v75 = *(_QWORD *)(a2 + 344);
  v74 = *(_QWORD *)(a2 + 352);
  v73 = *(_QWORD *)(a2 + 360);
  v72 = *(_QWORD *)(a2 + 368);
  v71 = *(_QWORD *)(a2 + 376);
  v70 = *(_QWORD *)(a2 + 384);
  v69 = *(_QWORD *)(a2 + 392);
  v68 = *(_QWORD *)(a2 + 400);
  v67 = *(_QWORD *)(a2 + 408);
  v66 = *(_QWORD *)(a2 + 416);
  v65 = *(_QWORD *)(a2 + 424);
  v64 = *(_QWORD *)(a2 + 432);
  v63 = *(_QWORD *)(a2 + 440);
  v62 = *(_QWORD *)(a2 + 448);
  v61 = *(_QWORD *)(a2 + 456);
  v60 = *(_QWORD *)(a2 + 464);
  v59 = *(_QWORD *)(a2 + 472);
  v58 = *(_QWORD *)(a2 + 480);
  v57 = *(_QWORD *)(a2 + 488);
  v56 = *(_QWORD *)(a2 + 496);
  v55 = *(_QWORD *)(a2 + 504);
  v54 = *(_QWORD *)(a2 + 512);
  v53 = *(_QWORD *)(a2 + 520);
  v52 = *(_QWORD *)(a2 + 528);
  v51 = *(_QWORD *)(a2 + 536);
  v50 = *(_QWORD *)(a2 + 544);
  v49 = *(_QWORD *)(a2 + 552);
  v48 = *(_QWORD *)(a2 + 560);
  v47 = *(_QWORD *)(a2 + 568);
  v46 = *(_QWORD *)(a2 + 576);
  v45 = *(_QWORD *)(a2 + 584);
  v44 = *(_QWORD *)(a2 + 592);
  v43 = *(_QWORD *)(a2 + 600);
  v42 = *(_QWORD *)(a2 + 608);
  v41 = *(_QWORD *)(a2 + 616);
  v40 = *(_QWORD *)(a2 + 624);
  v13 = *(_QWORD *)(a2 + 632);
  v14 = *(_QWORD *)(a2 + 640);
  v15 = *(_QWORD *)(a2 + 648);
  v16 = *(_QWORD *)(a2 + 656);
  v17 = *(_QWORD *)(a2 + 664);
  v18 = *(_QWORD *)(a2 + 672);
  v19 = *(_QWORD *)(a2 + 680);
  v20 = *(_QWORD *)(a2 + 688);
  v21 = *(_QWORD *)(a2 + 696);
  v22 = *(_QWORD *)(a2 + 704);
  v23 = *(_QWORD *)(a2 + 712);
  v24 = *(_QWORD *)(a2 + 720);
  v25 = *(_QWORD *)(a2 + 728);
  v26 = *(_QWORD *)(a2 + 736);
  v27 = *(_QWORD *)(a2 + 744);
  v28 = *(_QWORD *)(a2 + 752);
  v29 = *(_QWORD *)(a2 + 760);
  v30 = *(_QWORD *)(a2 + 768);
  v31 = *(_QWORD *)(a2 + 776);
  v32 = *(_QWORD *)(a2 + 784);
  v33 = *(_QWORD *)(a2 + 792);
  v34 = *(_QWORD *)(a2 + 800);
  v35 = *(_QWORD *)(a2 + 808);
  v36 = *(_QWORD *)(a2 + 816);
  v37 = *(_QWORD *)(a2 + 824);
  v38 = *(_WORD *)(a2 + 836);
  v39 = *(_DWORD *)(a2 + 832);
  v3 = *(_QWORD *)(a2 + 64);
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  sub_100085E0C(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v3, v109, v108, v107, v106, v105, v104, v103, v102, v101, v100,
    v99,
    v98,
    v97,
    v96,
    v95,
    v94,
    v93,
    v92,
    v91,
    v90,
    v89,
    v88,
    v87,
    v86,
    v85,
    v84,
    v83,
    v82,
    v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v66,
    v65,
    v64,
    v63,
    v62,
    v61,
    v60,
    v59,
    v58,
    v57,
    v56);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v3;
  *(_QWORD *)(a1 + 72) = v109;
  *(_QWORD *)(a1 + 80) = v108;
  *(_QWORD *)(a1 + 88) = v107;
  *(_QWORD *)(a1 + 96) = v106;
  *(_QWORD *)(a1 + 104) = v105;
  *(_QWORD *)(a1 + 112) = v104;
  *(_QWORD *)(a1 + 120) = v103;
  *(_QWORD *)(a1 + 128) = v102;
  *(_QWORD *)(a1 + 136) = v101;
  *(_QWORD *)(a1 + 144) = v100;
  *(_QWORD *)(a1 + 152) = v99;
  *(_QWORD *)(a1 + 160) = v98;
  *(_QWORD *)(a1 + 168) = v97;
  *(_QWORD *)(a1 + 176) = v96;
  *(_QWORD *)(a1 + 184) = v95;
  *(_QWORD *)(a1 + 192) = v94;
  *(_QWORD *)(a1 + 200) = v93;
  *(_QWORD *)(a1 + 208) = v92;
  *(_QWORD *)(a1 + 216) = v91;
  *(_QWORD *)(a1 + 224) = v90;
  *(_QWORD *)(a1 + 232) = v89;
  *(_QWORD *)(a1 + 240) = v88;
  *(_QWORD *)(a1 + 248) = v87;
  *(_QWORD *)(a1 + 256) = v86;
  *(_QWORD *)(a1 + 264) = v85;
  *(_QWORD *)(a1 + 272) = v84;
  *(_QWORD *)(a1 + 280) = v83;
  *(_QWORD *)(a1 + 288) = v82;
  *(_QWORD *)(a1 + 296) = v81;
  *(_QWORD *)(a1 + 304) = v80;
  *(_QWORD *)(a1 + 312) = v79;
  *(_QWORD *)(a1 + 320) = v78;
  *(_QWORD *)(a1 + 328) = v77;
  *(_QWORD *)(a1 + 336) = v76;
  *(_QWORD *)(a1 + 344) = v75;
  *(_QWORD *)(a1 + 352) = v74;
  *(_QWORD *)(a1 + 360) = v73;
  *(_QWORD *)(a1 + 368) = v72;
  *(_QWORD *)(a1 + 376) = v71;
  *(_QWORD *)(a1 + 384) = v70;
  *(_QWORD *)(a1 + 392) = v69;
  *(_QWORD *)(a1 + 400) = v68;
  *(_QWORD *)(a1 + 408) = v67;
  *(_QWORD *)(a1 + 416) = v66;
  *(_QWORD *)(a1 + 424) = v65;
  *(_QWORD *)(a1 + 432) = v64;
  *(_QWORD *)(a1 + 440) = v63;
  *(_QWORD *)(a1 + 448) = v62;
  *(_QWORD *)(a1 + 456) = v61;
  *(_QWORD *)(a1 + 464) = v60;
  *(_QWORD *)(a1 + 472) = v59;
  *(_QWORD *)(a1 + 480) = v58;
  *(_QWORD *)(a1 + 488) = v57;
  *(_QWORD *)(a1 + 496) = v56;
  *(_QWORD *)(a1 + 504) = v55;
  *(_QWORD *)(a1 + 512) = v54;
  *(_QWORD *)(a1 + 520) = v53;
  *(_QWORD *)(a1 + 528) = v52;
  *(_QWORD *)(a1 + 536) = v51;
  *(_QWORD *)(a1 + 544) = v50;
  *(_QWORD *)(a1 + 552) = v49;
  *(_QWORD *)(a1 + 560) = v48;
  *(_QWORD *)(a1 + 568) = v47;
  *(_QWORD *)(a1 + 576) = v46;
  *(_QWORD *)(a1 + 584) = v45;
  *(_QWORD *)(a1 + 592) = v44;
  *(_QWORD *)(a1 + 600) = v43;
  *(_QWORD *)(a1 + 608) = v42;
  *(_QWORD *)(a1 + 616) = v41;
  *(_QWORD *)(a1 + 624) = v40;
  *(_QWORD *)(a1 + 632) = v13;
  *(_QWORD *)(a1 + 640) = v14;
  *(_QWORD *)(a1 + 648) = v15;
  *(_QWORD *)(a1 + 656) = v16;
  *(_QWORD *)(a1 + 664) = v17;
  *(_QWORD *)(a1 + 672) = v18;
  *(_QWORD *)(a1 + 680) = v19;
  *(_QWORD *)(a1 + 688) = v20;
  *(_QWORD *)(a1 + 696) = v21;
  *(_QWORD *)(a1 + 704) = v22;
  *(_QWORD *)(a1 + 712) = v23;
  *(_QWORD *)(a1 + 720) = v24;
  *(_QWORD *)(a1 + 728) = v25;
  *(_QWORD *)(a1 + 736) = v26;
  *(_QWORD *)(a1 + 744) = v27;
  *(_QWORD *)(a1 + 752) = v28;
  *(_QWORD *)(a1 + 760) = v29;
  *(_QWORD *)(a1 + 768) = v30;
  *(_QWORD *)(a1 + 776) = v31;
  *(_QWORD *)(a1 + 784) = v32;
  *(_QWORD *)(a1 + 792) = v33;
  *(_QWORD *)(a1 + 800) = v34;
  *(_QWORD *)(a1 + 808) = v35;
  *(_QWORD *)(a1 + 816) = v36;
  *(_QWORD *)(a1 + 824) = v37;
  *(_WORD *)(a1 + 836) = v38;
  *(_DWORD *)(a1 + 832) = v39;
  return a1;
}

uint64_t assignWithCopy for MeasurementDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int16 v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  __int128 v116;
  uint64_t v117;
  __int128 v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  __int128 v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  __int128 v126;
  uint64_t v127;
  __int128 v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  __int128 v132;
  uint64_t v133;
  __int128 v134;
  uint64_t v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138[4];

  v135 = *(_QWORD *)a2;
  v137 = *(_QWORD *)(a2 + 8);
  v133 = *(_QWORD *)(a2 + 16);
  v131 = *(_QWORD *)(a2 + 24);
  v129 = *(_QWORD *)(a2 + 32);
  v127 = *(_QWORD *)(a2 + 40);
  v125 = *(_QWORD *)(a2 + 48);
  v123 = *(_QWORD *)(a2 + 56);
  v121 = *(_QWORD *)(a2 + 64);
  v119 = *(_QWORD *)(a2 + 72);
  v117 = *(_QWORD *)(a2 + 80);
  v115 = *(_QWORD *)(a2 + 88);
  v113 = *(_QWORD *)(a2 + 96);
  v111 = *(_QWORD *)(a2 + 104);
  v109 = *(_QWORD *)(a2 + 112);
  v108 = *(_QWORD *)(a2 + 120);
  v107 = *(_QWORD *)(a2 + 128);
  v106 = *(_QWORD *)(a2 + 136);
  v105 = *(_QWORD *)(a2 + 144);
  v104 = *(_QWORD *)(a2 + 152);
  v103 = *(_QWORD *)(a2 + 160);
  v102 = *(_QWORD *)(a2 + 168);
  v101 = *(_QWORD *)(a2 + 176);
  v100 = *(_QWORD *)(a2 + 184);
  v99 = *(_QWORD *)(a2 + 192);
  v98 = *(_QWORD *)(a2 + 200);
  v97 = *(_QWORD *)(a2 + 208);
  v96 = *(_QWORD *)(a2 + 224);
  v95 = *(_QWORD *)(a2 + 240);
  v94 = *(_QWORD *)(a2 + 248);
  v93 = *(_QWORD *)(a2 + 256);
  v92 = *(_QWORD *)(a2 + 264);
  v91 = *(_QWORD *)(a2 + 272);
  v90 = *(_QWORD *)(a2 + 280);
  v89 = *(_QWORD *)(a2 + 288);
  v88 = *(_QWORD *)(a2 + 296);
  v87 = *(_QWORD *)(a2 + 304);
  v86 = *(_QWORD *)(a2 + 312);
  v85 = *(_QWORD *)(a2 + 320);
  v84 = *(_QWORD *)(a2 + 328);
  v83 = *(_QWORD *)(a2 + 336);
  v82 = *(_QWORD *)(a2 + 344);
  v81 = *(_QWORD *)(a2 + 352);
  v80 = *(_QWORD *)(a2 + 360);
  v79 = *(_QWORD *)(a2 + 368);
  v78 = *(_QWORD *)(a2 + 376);
  v77 = *(_QWORD *)(a2 + 384);
  v76 = *(_QWORD *)(a2 + 392);
  v75 = *(_QWORD *)(a2 + 400);
  v74 = *(_QWORD *)(a2 + 408);
  v73 = *(_QWORD *)(a2 + 416);
  v72 = *(_QWORD *)(a2 + 424);
  v71 = *(_QWORD *)(a2 + 432);
  v70 = *(_QWORD *)(a2 + 440);
  v69 = *(_QWORD *)(a2 + 448);
  v68 = *(_QWORD *)(a2 + 456);
  v67 = *(_QWORD *)(a2 + 464);
  v66 = *(_QWORD *)(a2 + 472);
  v65 = *(_QWORD *)(a2 + 480);
  v64 = *(_QWORD *)(a2 + 488);
  v63 = *(_QWORD *)(a2 + 496);
  v62 = *(_QWORD *)(a2 + 504);
  v61 = *(_QWORD *)(a2 + 512);
  v60 = *(_QWORD *)(a2 + 520);
  v59 = *(_QWORD *)(a2 + 528);
  v58 = *(_QWORD *)(a2 + 536);
  v57 = *(_QWORD *)(a2 + 544);
  v56 = *(_QWORD *)(a2 + 552);
  v55 = *(_QWORD *)(a2 + 560);
  v54 = *(_QWORD *)(a2 + 568);
  v53 = *(_QWORD *)(a2 + 576);
  v52 = *(_QWORD *)(a2 + 584);
  v51 = *(_QWORD *)(a2 + 592);
  v50 = *(_QWORD *)(a2 + 600);
  v49 = *(_QWORD *)(a2 + 608);
  v48 = *(_QWORD *)(a2 + 616);
  v47 = *(_QWORD *)(a2 + 624);
  v34 = *(_QWORD *)(a2 + 632);
  v3 = *(_QWORD *)(a2 + 640);
  v4 = *(_QWORD *)(a2 + 648);
  v5 = *(_QWORD *)(a2 + 656);
  v6 = *(_QWORD *)(a2 + 664);
  v7 = *(_QWORD *)(a2 + 672);
  v8 = *(_QWORD *)(a2 + 680);
  v9 = *(_QWORD *)(a2 + 688);
  v35 = *(_QWORD *)(a2 + 696);
  v36 = *(_OWORD *)(a2 + 704);
  v37 = *(_OWORD *)(a2 + 720);
  v38 = *(_OWORD *)(a2 + 736);
  v39 = *(_OWORD *)(a2 + 752);
  v40 = *(_OWORD *)(a2 + 768);
  v41 = *(_OWORD *)(a2 + 784);
  v42 = *(_OWORD *)(a2 + 800);
  v43 = *(_QWORD *)(a2 + 816);
  v44 = *(_QWORD *)(a2 + 824);
  v45 = *(_WORD *)(a2 + 836);
  v46 = *(_DWORD *)(a2 + 832);
  v10 = *(_QWORD *)(a2 + 232);
  v11 = *(_QWORD *)(a2 + 216);
  sub_100085E0C(*(_QWORD *)a2, v137, v133, v131, v129, v127, v125, v123, v121, v119, v117, v115, v113, v111, v109, v108, v107, v106, v105,
    v104,
    v103,
    v102,
    v101,
    v100,
    v99,
    v98,
    v97,
    v11,
    v96,
    v10,
    v95,
    v94,
    v93,
    v92,
    v91,
    v90,
    v89,
    v88,
    v87,
    v86,
    v85,
    v84,
    v83,
    v82,
    v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v66,
    v65,
    v64,
    v63);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v135;
  *(_QWORD *)(a1 + 8) = v137;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v133;
  *(_QWORD *)(a1 + 24) = v131;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v129;
  *(_QWORD *)(a1 + 40) = v127;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v125;
  *(_QWORD *)(a1 + 56) = v123;
  v136 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)v138 = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v121;
  *(_QWORD *)(a1 + 72) = v119;
  *(_QWORD *)(a1 + 80) = v117;
  *(_QWORD *)(a1 + 88) = v115;
  v132 = *(_OWORD *)(a1 + 112);
  v134 = *(_OWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v113;
  *(_QWORD *)(a1 + 104) = v111;
  *(_QWORD *)(a1 + 112) = v109;
  *(_QWORD *)(a1 + 120) = v108;
  v128 = *(_OWORD *)(a1 + 144);
  v130 = *(_OWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v107;
  *(_QWORD *)(a1 + 136) = v106;
  *(_QWORD *)(a1 + 144) = v105;
  *(_QWORD *)(a1 + 152) = v104;
  v126 = *(_OWORD *)(a1 + 160);
  v124 = *(_OWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 160) = v103;
  *(_QWORD *)(a1 + 168) = v102;
  *(_QWORD *)(a1 + 176) = v101;
  *(_QWORD *)(a1 + 184) = v100;
  v122 = *(_OWORD *)(a1 + 192);
  v120 = *(_OWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 192) = v99;
  *(_QWORD *)(a1 + 200) = v98;
  *(_QWORD *)(a1 + 208) = v97;
  *(_QWORD *)(a1 + 216) = v11;
  v118 = *(_OWORD *)(a1 + 224);
  v116 = *(_OWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 224) = v96;
  *(_QWORD *)(a1 + 232) = v10;
  *(_QWORD *)(a1 + 240) = v95;
  *(_QWORD *)(a1 + 248) = v94;
  v114 = *(_OWORD *)(a1 + 256);
  v112 = *(_OWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 256) = v93;
  *(_QWORD *)(a1 + 264) = v92;
  *(_QWORD *)(a1 + 272) = v91;
  *(_QWORD *)(a1 + 280) = v90;
  v20 = *(_OWORD *)(a1 + 304);
  v110 = *(_OWORD *)(a1 + 288);
  *(_QWORD *)(a1 + 288) = v89;
  *(_QWORD *)(a1 + 296) = v88;
  *(_QWORD *)(a1 + 304) = v87;
  *(_QWORD *)(a1 + 312) = v86;
  v21 = *(_OWORD *)(a1 + 320);
  v22 = *(_OWORD *)(a1 + 336);
  *(_QWORD *)(a1 + 320) = v85;
  *(_QWORD *)(a1 + 328) = v84;
  *(_QWORD *)(a1 + 336) = v83;
  *(_QWORD *)(a1 + 344) = v82;
  v23 = *(_OWORD *)(a1 + 352);
  v24 = *(_OWORD *)(a1 + 368);
  *(_QWORD *)(a1 + 352) = v81;
  *(_QWORD *)(a1 + 360) = v80;
  *(_QWORD *)(a1 + 368) = v79;
  *(_QWORD *)(a1 + 376) = v78;
  v25 = *(_OWORD *)(a1 + 384);
  v26 = *(_OWORD *)(a1 + 400);
  *(_QWORD *)(a1 + 384) = v77;
  *(_QWORD *)(a1 + 392) = v76;
  *(_QWORD *)(a1 + 400) = v75;
  *(_QWORD *)(a1 + 408) = v74;
  v27 = *(_OWORD *)(a1 + 416);
  v28 = *(_OWORD *)(a1 + 432);
  *(_QWORD *)(a1 + 416) = v73;
  *(_QWORD *)(a1 + 424) = v72;
  *(_QWORD *)(a1 + 432) = v71;
  *(_QWORD *)(a1 + 440) = v70;
  v29 = *(_OWORD *)(a1 + 448);
  v30 = *(_OWORD *)(a1 + 464);
  *(_QWORD *)(a1 + 448) = v69;
  *(_QWORD *)(a1 + 456) = v68;
  *(_QWORD *)(a1 + 464) = v67;
  *(_QWORD *)(a1 + 472) = v66;
  v31 = *(_OWORD *)(a1 + 480);
  v32 = *(_OWORD *)(a1 + 496);
  *(_QWORD *)(a1 + 480) = v65;
  *(_QWORD *)(a1 + 488) = v64;
  *(_QWORD *)(a1 + 496) = v63;
  *(_QWORD *)(a1 + 504) = v62;
  *(_QWORD *)(a1 + 512) = v61;
  *(_QWORD *)(a1 + 520) = v60;
  *(_QWORD *)(a1 + 528) = v59;
  *(_QWORD *)(a1 + 536) = v58;
  *(_QWORD *)(a1 + 544) = v57;
  *(_QWORD *)(a1 + 552) = v56;
  *(_QWORD *)(a1 + 560) = v55;
  *(_QWORD *)(a1 + 568) = v54;
  *(_QWORD *)(a1 + 576) = v53;
  *(_QWORD *)(a1 + 584) = v52;
  *(_QWORD *)(a1 + 592) = v51;
  *(_QWORD *)(a1 + 600) = v50;
  *(_QWORD *)(a1 + 608) = v49;
  *(_QWORD *)(a1 + 616) = v48;
  *(_QWORD *)(a1 + 624) = v47;
  *(_QWORD *)(a1 + 632) = v34;
  *(_QWORD *)(a1 + 640) = v3;
  *(_QWORD *)(a1 + 648) = v4;
  *(_QWORD *)(a1 + 656) = v5;
  *(_QWORD *)(a1 + 664) = v6;
  *(_QWORD *)(a1 + 672) = v7;
  *(_QWORD *)(a1 + 680) = v8;
  *(_QWORD *)(a1 + 688) = v9;
  *(_QWORD *)(a1 + 696) = v35;
  *(_OWORD *)(a1 + 704) = v36;
  *(_OWORD *)(a1 + 720) = v37;
  *(_OWORD *)(a1 + 736) = v38;
  *(_OWORD *)(a1 + 752) = v39;
  *(_OWORD *)(a1 + 768) = v40;
  *(_OWORD *)(a1 + 784) = v41;
  *(_OWORD *)(a1 + 800) = v42;
  *(_QWORD *)(a1 + 816) = v43;
  *(_QWORD *)(a1 + 824) = v44;
  *(_WORD *)(a1 + 836) = v45;
  *(_DWORD *)(a1 + 832) = v46;
  sub_100020E24(v12, v13, v14, v15, v16, v17, v18, v19, v138[0], v138[1], v136, *((uint64_t *)&v136 + 1), v134, *((uint64_t *)&v134 + 1), v132, *((uint64_t *)&v132 + 1), v130, *((uint64_t *)&v130 + 1), v128,
    *((uint64_t *)&v128 + 1),
    v126,
    *((uint64_t *)&v126 + 1),
    v124,
    *((uint64_t *)&v124 + 1),
    v122,
    *((uint64_t *)&v122 + 1),
    v120,
    *((uint64_t *)&v120 + 1),
    v118,
    *((uint64_t *)&v118 + 1),
    v116,
    *((uint64_t *)&v116 + 1),
    v114,
    *((uint64_t *)&v114 + 1),
    v112,
    *((uint64_t *)&v112 + 1),
    v110,
    *((uint64_t *)&v110 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32);
  return a1;
}

void *initializeWithTake for MeasurementDetail(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x346uLL);
}

uint64_t assignWithTake for MeasurementDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  int v65;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v82 = *(_OWORD *)(a1 + 80);
  v83 = *(_OWORD *)(a1 + 64);
  v80 = *(_OWORD *)(a1 + 112);
  v81 = *(_OWORD *)(a1 + 96);
  v78 = *(_OWORD *)(a1 + 144);
  v79 = *(_OWORD *)(a1 + 128);
  v76 = *(_OWORD *)(a1 + 176);
  v77 = *(_OWORD *)(a1 + 160);
  v74 = *(_OWORD *)(a1 + 208);
  v75 = *(_OWORD *)(a1 + 192);
  v73 = *(_OWORD *)(a1 + 224);
  v71 = *(_OWORD *)(a1 + 256);
  v72 = *(_OWORD *)(a1 + 240);
  v69 = *(_OWORD *)(a1 + 288);
  v70 = *(_OWORD *)(a1 + 272);
  v12 = *(_OWORD *)(a1 + 336);
  v67 = *(_OWORD *)(a1 + 320);
  v68 = *(_OWORD *)(a1 + 304);
  v13 = *(_OWORD *)(a1 + 352);
  v14 = *(_OWORD *)(a1 + 368);
  v15 = *(_OWORD *)(a1 + 384);
  v16 = *(_OWORD *)(a1 + 400);
  v17 = *(_OWORD *)(a1 + 416);
  v18 = *(_OWORD *)(a1 + 432);
  v19 = *(_OWORD *)(a2 + 16);
  v20 = *(_OWORD *)(a2 + 32);
  v21 = *(_OWORD *)(a2 + 48);
  v22 = *(_OWORD *)(a2 + 64);
  v23 = *(_OWORD *)(a2 + 80);
  v24 = *(_OWORD *)(a2 + 96);
  v25 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v19;
  v26 = *(_OWORD *)(a2 + 128);
  v27 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 32) = v20;
  *(_OWORD *)(a1 + 48) = v21;
  v28 = *(_OWORD *)(a2 + 160);
  v29 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 64) = v22;
  *(_OWORD *)(a1 + 80) = v23;
  v30 = *(_OWORD *)(a2 + 192);
  v31 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 96) = v24;
  *(_OWORD *)(a1 + 112) = v25;
  v32 = *(_OWORD *)(a2 + 224);
  v33 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 128) = v26;
  *(_OWORD *)(a1 + 144) = v27;
  v34 = *(_OWORD *)(a2 + 256);
  v35 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 160) = v28;
  *(_OWORD *)(a1 + 176) = v29;
  v36 = *(_OWORD *)(a2 + 288);
  v37 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 192) = v30;
  *(_OWORD *)(a1 + 208) = v31;
  v38 = *(_OWORD *)(a2 + 320);
  v39 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 224) = v32;
  *(_OWORD *)(a1 + 240) = v33;
  v40 = *(_OWORD *)(a2 + 352);
  v41 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 256) = v34;
  *(_OWORD *)(a1 + 272) = v35;
  v42 = *(_OWORD *)(a2 + 384);
  v43 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 288) = v36;
  *(_OWORD *)(a1 + 304) = v37;
  v44 = *(_OWORD *)(a2 + 416);
  v45 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 320) = v38;
  *(_OWORD *)(a1 + 336) = v39;
  v46 = *(_OWORD *)(a2 + 448);
  v47 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 352) = v40;
  *(_OWORD *)(a1 + 368) = v41;
  v48 = *(_OWORD *)(a2 + 480);
  v49 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 384) = v42;
  *(_OWORD *)(a1 + 400) = v43;
  v50 = *(_OWORD *)(a2 + 512);
  v51 = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 416) = v44;
  *(_OWORD *)(a1 + 432) = v45;
  v52 = *(_OWORD *)(a1 + 448);
  v53 = *(_OWORD *)(a1 + 464);
  *(_OWORD *)(a1 + 448) = v46;
  *(_OWORD *)(a1 + 464) = v47;
  v54 = *(_OWORD *)(a1 + 480);
  v55 = *(_OWORD *)(a1 + 496);
  *(_OWORD *)(a1 + 480) = v48;
  *(_OWORD *)(a1 + 496) = v49;
  *(_OWORD *)(a1 + 512) = v50;
  *(_OWORD *)(a1 + 528) = v51;
  v56 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v56;
  v57 = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 592) = v57;
  v58 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v58;
  v59 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v59;
  v60 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v60;
  v61 = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 720) = v61;
  v62 = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 752) = v62;
  v63 = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 784) = v63;
  v64 = *(_OWORD *)(a2 + 816);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 816) = v64;
  v65 = *(_DWORD *)(a2 + 832);
  *(_WORD *)(a1 + 836) = *(_WORD *)(a2 + 836);
  *(_DWORD *)(a1 + 832) = v65;
  sub_100020E24(v4, v5, v6, v7, v8, v9, v10, v11, v83, *((uint64_t *)&v83 + 1), v82, *((uint64_t *)&v82 + 1), v81, *((uint64_t *)&v81 + 1), v80, *((uint64_t *)&v80 + 1), v79, *((uint64_t *)&v79 + 1), v78,
    *((uint64_t *)&v78 + 1),
    v77,
    *((uint64_t *)&v77 + 1),
    v76,
    *((uint64_t *)&v76 + 1),
    v75,
    *((uint64_t *)&v75 + 1),
    v74,
    *((uint64_t *)&v74 + 1),
    v73,
    *((uint64_t *)&v73 + 1),
    v72,
    *((uint64_t *)&v72 + 1),
    v71,
    *((uint64_t *)&v71 + 1),
    v70,
    *((uint64_t *)&v70 + 1),
    v69,
    *((uint64_t *)&v69 + 1),
    v68,
    *((uint64_t *)&v68 + 1),
    v67,
    *((uint64_t *)&v67 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v52,
    *((uint64_t *)&v52 + 1),
    v53,
    *((uint64_t *)&v53 + 1),
    v54,
    *((uint64_t *)&v54 + 1),
    v55);
  return a1;
}

uint64_t getEnumTagSinglePayload for MeasurementDetail(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 838))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = (*(_QWORD *)(a1 + 32) >> 33) & 0x7F | (*(_QWORD *)(a1 + 32) >> 41) & 0x7FFF80 | (*(_QWORD *)(a1 + 72) >> 18) & 0xC0000000 | (*(_QWORD *)(a1 + 72) >> 10) & 0x3F800000;
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

void storeEnumTagSinglePayload for MeasurementDetail(uint64_t a1, int a2, int a3)
{
  unint64_t v3;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 824) = 0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_WORD *)(a1 + 836) = 0;
    *(_DWORD *)(a1 + 832) = 0;
    *(_OWORD *)(a1 + 808) = 0u;
    *(_OWORD *)(a1 + 792) = 0u;
    *(_OWORD *)(a1 + 776) = 0u;
    *(_OWORD *)(a1 + 760) = 0u;
    *(_OWORD *)(a1 + 744) = 0u;
    *(_OWORD *)(a1 + 728) = 0u;
    *(_OWORD *)(a1 + 712) = 0u;
    *(_OWORD *)(a1 + 696) = 0u;
    *(_OWORD *)(a1 + 680) = 0u;
    *(_OWORD *)(a1 + 664) = 0u;
    *(_OWORD *)(a1 + 648) = 0u;
    *(_OWORD *)(a1 + 632) = 0u;
    *(_OWORD *)(a1 + 616) = 0u;
    *(_OWORD *)(a1 + 600) = 0u;
    *(_OWORD *)(a1 + 584) = 0u;
    *(_OWORD *)(a1 + 568) = 0u;
    *(_OWORD *)(a1 + 552) = 0u;
    *(_OWORD *)(a1 + 536) = 0u;
    *(_OWORD *)(a1 + 520) = 0u;
    *(_OWORD *)(a1 + 504) = 0u;
    *(_OWORD *)(a1 + 488) = 0u;
    *(_OWORD *)(a1 + 472) = 0u;
    *(_OWORD *)(a1 + 456) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 838) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return;
LABEL_8:
      v3 = -a2;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 32) = (v3 << 41) & 0xFFFF000000000000 | ((v3 & 0x7F) << 33);
      *(_OWORD *)(a1 + 40) = 0u;
      *(_OWORD *)(a1 + 56) = 0u;
      *(_QWORD *)(a1 + 72) = (v3 << 18) & 0x3000000000000 | (((v3 >> 23) & 0x7F) << 33);
      bzero((void *)(a1 + 80), 0x2F6uLL);
      return;
    }
    *(_BYTE *)(a1 + 838) = 0;
    if (a2)
      goto LABEL_8;
  }
}

uint64_t sub_1001B0158(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v2 = a2 & 3;
  v3 = *(_QWORD *)(result + 72) & 0xFF01FFFFFFFFLL;
  v4 = *(_QWORD *)(result + 112) & 0xFF01FFFFFFFFLL;
  v5 = *(_QWORD *)(result + 272) & 0xFF01FFFFFFFFLL;
  v6 = *(_QWORD *)(result + 312) & 0xFF01FFFFFFFFLL;
  v7 = *(_QWORD *)(result + 352) & 0xFF01FFFFFFFFLL;
  v8 = *(_QWORD *)(result + 392) & 0xFF01FFFFFFFFLL;
  v9 = *(_QWORD *)(result + 432) & 0xFF01FFFFFFFFLL;
  v10 = *(_QWORD *)(result + 472) & 0xFF01FFFFFFFFLL;
  v11 = *(_QWORD *)(result + 512) & 0xFF01FFFFFFFFLL;
  v12 = *(_QWORD *)(result + 552) & 0xFF01FFFFFFFFLL;
  v13 = *(_QWORD *)(result + 592) & 0xFF01FFFFFFFFLL;
  v14 = *(_QWORD *)(result + 632) & 0xFF01FFFFFFFFLL;
  v15 = *(_QWORD *)(result + 672) & 0xFF01FFFFFFFFLL;
  v16 = *(_QWORD *)(result + 712) & 0xFF01FFFFFFFFLL;
  v17 = *(_QWORD *)(result + 752) & 0xFF01FFFFFFFFLL;
  v18 = *(_QWORD *)(result + 792) & 0xFF01FFFFFFFFLL;
  v19 = (*(unsigned int *)(result + 832) | ((unint64_t)*(unsigned __int16 *)(result + 836) << 32)) & 0xFFFFFF01FFFFFFFFLL;
  *(_QWORD *)(result + 32) &= 0xFF01FFFFFFFFuLL;
  *(_QWORD *)(result + 72) = v3;
  *(_QWORD *)(result + 112) = v4;
  *(_QWORD *)(result + 272) = v5;
  *(_QWORD *)(result + 312) = v6;
  *(_QWORD *)(result + 352) = v7;
  *(_QWORD *)(result + 392) = v8;
  *(_QWORD *)(result + 432) = v9;
  *(_QWORD *)(result + 472) = v10;
  *(_QWORD *)(result + 512) = v11;
  *(_QWORD *)(result + 552) = v12;
  *(_QWORD *)(result + 592) = v13;
  *(_QWORD *)(result + 632) = v14;
  *(_QWORD *)(result + 672) = v15;
  *(_QWORD *)(result + 712) = v16;
  *(_QWORD *)(result + 752) = v17;
  *(_QWORD *)(result + 792) = v18;
  *(_DWORD *)(result + 832) = v19;
  *(_WORD *)(result + 836) = (v19 | (v2 << 38)) >> 32;
  return result;
}

ValueMetadata *type metadata accessor for MeasurementDetail()
{
  return &type metadata for MeasurementDetail;
}

uint64_t destroy for ObjectTypeDetails(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(a1[13]);
  swift_bridgeObjectRelease(a1[16]);
  swift_bridgeObjectRelease(a1[18]);
  swift_bridgeObjectRelease(a1[21]);
  swift_bridgeObjectRelease(a1[23]);
  swift_bridgeObjectRelease(a1[26]);
  swift_bridgeObjectRelease(a1[28]);
  swift_bridgeObjectRelease(a1[31]);
  swift_bridgeObjectRelease(a1[33]);
  swift_bridgeObjectRelease(a1[36]);
  swift_bridgeObjectRelease(a1[38]);
  swift_bridgeObjectRelease(a1[41]);
  swift_bridgeObjectRelease(a1[43]);
  swift_bridgeObjectRelease(a1[46]);
  swift_bridgeObjectRelease(a1[48]);
  swift_bridgeObjectRelease(a1[51]);
  swift_bridgeObjectRelease(a1[53]);
  swift_bridgeObjectRelease(a1[56]);
  swift_bridgeObjectRelease(a1[58]);
  swift_bridgeObjectRelease(a1[61]);
  swift_bridgeObjectRelease(a1[63]);
  swift_bridgeObjectRelease(a1[66]);
  swift_bridgeObjectRelease(a1[68]);
  swift_bridgeObjectRelease(a1[71]);
  swift_bridgeObjectRelease(a1[73]);
  swift_bridgeObjectRelease(a1[76]);
  swift_bridgeObjectRelease(a1[78]);
  swift_bridgeObjectRelease(a1[81]);
  swift_bridgeObjectRelease(a1[83]);
  swift_bridgeObjectRelease(a1[86]);
  swift_bridgeObjectRelease(a1[88]);
  swift_bridgeObjectRelease(a1[91]);
  swift_bridgeObjectRelease(a1[93]);
  swift_bridgeObjectRelease(a1[96]);
  swift_bridgeObjectRelease(a1[98]);
  swift_bridgeObjectRelease(a1[101]);
  return swift_bridgeObjectRelease(a1[103]);
}

uint64_t initializeWithCopy for ObjectTypeDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v54 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v54;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  v53 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v53;
  v52 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v52;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  v51 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v51;
  v50 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v50;
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 117) = *(_BYTE *)(a2 + 117);
  v49 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v49;
  v48 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v48;
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_WORD *)(a1 + 156) = *(_WORD *)(a2 + 156);
  v47 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v47;
  v46 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v46;
  v4 = *(_DWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v4;
  *(_BYTE *)(a1 + 197) = *(_BYTE *)(a2 + 197);
  v45 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v45;
  v44 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v44;
  v5 = *(_DWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 236) = *(_BYTE *)(a2 + 236);
  *(_DWORD *)(a1 + 232) = v5;
  *(_BYTE *)(a1 + 237) = *(_BYTE *)(a2 + 237);
  v43 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v43;
  v42 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v42;
  v6 = *(_DWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 276) = *(_BYTE *)(a2 + 276);
  *(_DWORD *)(a1 + 272) = v6;
  *(_BYTE *)(a1 + 277) = *(_BYTE *)(a2 + 277);
  v41 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v41;
  v40 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v40;
  v7 = *(_DWORD *)(a2 + 312);
  *(_BYTE *)(a1 + 316) = *(_BYTE *)(a2 + 316);
  *(_DWORD *)(a1 + 312) = v7;
  *(_BYTE *)(a1 + 317) = *(_BYTE *)(a2 + 317);
  v39 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v39;
  v38 = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = v38;
  v8 = *(_DWORD *)(a2 + 352);
  *(_BYTE *)(a1 + 356) = *(_BYTE *)(a2 + 356);
  *(_DWORD *)(a1 + 352) = v8;
  *(_BYTE *)(a1 + 357) = *(_BYTE *)(a2 + 357);
  v37 = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v37;
  v36 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v36;
  v9 = *(_DWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 396) = *(_BYTE *)(a2 + 396);
  *(_DWORD *)(a1 + 392) = v9;
  *(_BYTE *)(a1 + 397) = *(_BYTE *)(a2 + 397);
  v35 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v35;
  v34 = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = v34;
  v10 = *(_DWORD *)(a2 + 432);
  *(_BYTE *)(a1 + 436) = *(_BYTE *)(a2 + 436);
  *(_DWORD *)(a1 + 432) = v10;
  *(_BYTE *)(a1 + 437) = *(_BYTE *)(a2 + 437);
  v33 = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = v33;
  v32 = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = v32;
  v11 = *(_DWORD *)(a2 + 472);
  *(_BYTE *)(a1 + 476) = *(_BYTE *)(a2 + 476);
  *(_DWORD *)(a1 + 472) = v11;
  *(_BYTE *)(a1 + 477) = *(_BYTE *)(a2 + 477);
  v31 = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = v31;
  v30 = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = v30;
  v12 = *(_DWORD *)(a2 + 512);
  *(_BYTE *)(a1 + 516) = *(_BYTE *)(a2 + 516);
  *(_DWORD *)(a1 + 512) = v12;
  *(_BYTE *)(a1 + 517) = *(_BYTE *)(a2 + 517);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  v29 = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 528) = v29;
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  v28 = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 544) = v28;
  *(_BYTE *)(a1 + 556) = *(_BYTE *)(a2 + 556);
  *(_DWORD *)(a1 + 552) = *(_DWORD *)(a2 + 552);
  *(_BYTE *)(a1 + 557) = *(_BYTE *)(a2 + 557);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_BYTE *)(a1 + 596) = *(_BYTE *)(a2 + 596);
  *(_DWORD *)(a1 + 592) = *(_DWORD *)(a2 + 592);
  *(_BYTE *)(a1 + 597) = *(_BYTE *)(a2 + 597);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_BYTE *)(a1 + 636) = *(_BYTE *)(a2 + 636);
  *(_DWORD *)(a1 + 632) = *(_DWORD *)(a2 + 632);
  *(_BYTE *)(a1 + 637) = *(_BYTE *)(a2 + 637);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_BYTE *)(a1 + 676) = *(_BYTE *)(a2 + 676);
  *(_DWORD *)(a1 + 672) = *(_DWORD *)(a2 + 672);
  *(_BYTE *)(a1 + 677) = *(_BYTE *)(a2 + 677);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  *(_BYTE *)(a1 + 716) = *(_BYTE *)(a2 + 716);
  *(_DWORD *)(a1 + 712) = *(_DWORD *)(a2 + 712);
  *(_BYTE *)(a1 + 717) = *(_BYTE *)(a2 + 717);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  *(_BYTE *)(a1 + 756) = *(_BYTE *)(a2 + 756);
  *(_DWORD *)(a1 + 752) = *(_DWORD *)(a2 + 752);
  *(_BYTE *)(a1 + 757) = *(_BYTE *)(a2 + 757);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  *(_BYTE *)(a1 + 796) = *(_BYTE *)(a2 + 796);
  *(_DWORD *)(a1 + 792) = *(_DWORD *)(a2 + 792);
  *(_BYTE *)(a1 + 797) = *(_BYTE *)(a2 + 797);
  *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
  *(_QWORD *)(a1 + 816) = *(_QWORD *)(a2 + 816);
  *(_BYTE *)(a1 + 836) = *(_BYTE *)(a2 + 836);
  *(_DWORD *)(a1 + 832) = *(_DWORD *)(a2 + 832);
  *(_BYTE *)(a1 + 837) = *(_BYTE *)(a2 + 837);
  v13 = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 568) = v13;
  v14 = *(_QWORD *)(a2 + 584);
  *(_QWORD *)(a1 + 584) = v14;
  v15 = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 608) = v15;
  v16 = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 624) = v16;
  v17 = *(_QWORD *)(a2 + 648);
  *(_QWORD *)(a1 + 648) = v17;
  v18 = *(_QWORD *)(a2 + 664);
  *(_QWORD *)(a1 + 664) = v18;
  v19 = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 688) = v19;
  v20 = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 704) = v20;
  v21 = *(_QWORD *)(a2 + 728);
  *(_QWORD *)(a1 + 728) = v21;
  v23 = *(_QWORD *)(a2 + 744);
  *(_QWORD *)(a1 + 744) = v23;
  v24 = *(_QWORD *)(a2 + 768);
  *(_QWORD *)(a1 + 768) = v24;
  v25 = *(_QWORD *)(a2 + 784);
  *(_QWORD *)(a1 + 784) = v25;
  v26 = *(_QWORD *)(a2 + 808);
  *(_QWORD *)(a1 + 808) = v26;
  v27 = *(_QWORD *)(a2 + 824);
  *(_QWORD *)(a1 + 824) = v27;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRetain(v53);
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v27);
  return a1;
}

uint64_t assignWithCopy for ObjectTypeDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 37) = *(_BYTE *)(a2 + 37);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  v13 = *(_DWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v13;
  *(_BYTE *)(a1 + 77) = *(_BYTE *)(a2 + 77);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v16 = *(_QWORD *)(a2 + 104);
  v17 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = *(_DWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v18;
  *(_BYTE *)(a1 + 117) = *(_BYTE *)(a2 + 117);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v19 = *(_QWORD *)(a2 + 128);
  v20 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v21 = *(_QWORD *)(a2 + 144);
  v22 = *(_QWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 144) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  v23 = *(_DWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 156) = *(_BYTE *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = v23;
  *(_BYTE *)(a1 + 157) = *(_BYTE *)(a2 + 157);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v24 = *(_QWORD *)(a2 + 168);
  v25 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 168) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v26 = *(_QWORD *)(a2 + 184);
  v27 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 184) = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  v28 = *(_DWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v28;
  *(_BYTE *)(a1 + 197) = *(_BYTE *)(a2 + 197);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v29 = *(_QWORD *)(a2 + 208);
  v30 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 208) = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v30);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  v31 = *(_QWORD *)(a2 + 224);
  v32 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 224) = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease(v32);
  v33 = *(_DWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 236) = *(_BYTE *)(a2 + 236);
  *(_DWORD *)(a1 + 232) = v33;
  *(_BYTE *)(a1 + 237) = *(_BYTE *)(a2 + 237);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  v34 = *(_QWORD *)(a2 + 248);
  v35 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 248) = v34;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v35);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  v36 = *(_QWORD *)(a2 + 264);
  v37 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 264) = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease(v37);
  v38 = *(_DWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 276) = *(_BYTE *)(a2 + 276);
  *(_DWORD *)(a1 + 272) = v38;
  *(_BYTE *)(a1 + 277) = *(_BYTE *)(a2 + 277);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v39 = *(_QWORD *)(a2 + 288);
  v40 = *(_QWORD *)(a1 + 288);
  *(_QWORD *)(a1 + 288) = v39;
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRelease(v40);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  v41 = *(_QWORD *)(a2 + 304);
  v42 = *(_QWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 304) = v41;
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRelease(v42);
  v43 = *(_DWORD *)(a2 + 312);
  *(_BYTE *)(a1 + 316) = *(_BYTE *)(a2 + 316);
  *(_DWORD *)(a1 + 312) = v43;
  *(_BYTE *)(a1 + 317) = *(_BYTE *)(a2 + 317);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v44 = *(_QWORD *)(a2 + 328);
  v45 = *(_QWORD *)(a1 + 328);
  *(_QWORD *)(a1 + 328) = v44;
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRelease(v45);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v46 = *(_QWORD *)(a2 + 344);
  v47 = *(_QWORD *)(a1 + 344);
  *(_QWORD *)(a1 + 344) = v46;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRelease(v47);
  v48 = *(_DWORD *)(a2 + 352);
  *(_BYTE *)(a1 + 356) = *(_BYTE *)(a2 + 356);
  *(_DWORD *)(a1 + 352) = v48;
  *(_BYTE *)(a1 + 357) = *(_BYTE *)(a2 + 357);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  v49 = *(_QWORD *)(a2 + 368);
  v50 = *(_QWORD *)(a1 + 368);
  *(_QWORD *)(a1 + 368) = v49;
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRelease(v50);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  v51 = *(_QWORD *)(a2 + 384);
  v52 = *(_QWORD *)(a1 + 384);
  *(_QWORD *)(a1 + 384) = v51;
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRelease(v52);
  v53 = *(_DWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 396) = *(_BYTE *)(a2 + 396);
  *(_DWORD *)(a1 + 392) = v53;
  *(_BYTE *)(a1 + 397) = *(_BYTE *)(a2 + 397);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  v54 = *(_QWORD *)(a2 + 408);
  v55 = *(_QWORD *)(a1 + 408);
  *(_QWORD *)(a1 + 408) = v54;
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRelease(v55);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  v56 = *(_QWORD *)(a2 + 424);
  v57 = *(_QWORD *)(a1 + 424);
  *(_QWORD *)(a1 + 424) = v56;
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease(v57);
  v58 = *(_DWORD *)(a2 + 432);
  *(_BYTE *)(a1 + 436) = *(_BYTE *)(a2 + 436);
  *(_DWORD *)(a1 + 432) = v58;
  *(_BYTE *)(a1 + 437) = *(_BYTE *)(a2 + 437);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  v59 = *(_QWORD *)(a2 + 448);
  v60 = *(_QWORD *)(a1 + 448);
  *(_QWORD *)(a1 + 448) = v59;
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRelease(v60);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  v61 = *(_QWORD *)(a2 + 464);
  v62 = *(_QWORD *)(a1 + 464);
  *(_QWORD *)(a1 + 464) = v61;
  swift_bridgeObjectRetain(v61);
  swift_bridgeObjectRelease(v62);
  v63 = *(_DWORD *)(a2 + 472);
  *(_BYTE *)(a1 + 476) = *(_BYTE *)(a2 + 476);
  *(_DWORD *)(a1 + 472) = v63;
  *(_BYTE *)(a1 + 477) = *(_BYTE *)(a2 + 477);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  v64 = *(_QWORD *)(a2 + 488);
  v65 = *(_QWORD *)(a1 + 488);
  *(_QWORD *)(a1 + 488) = v64;
  swift_bridgeObjectRetain(v64);
  swift_bridgeObjectRelease(v65);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  v66 = *(_QWORD *)(a2 + 504);
  v67 = *(_QWORD *)(a1 + 504);
  *(_QWORD *)(a1 + 504) = v66;
  swift_bridgeObjectRetain(v66);
  swift_bridgeObjectRelease(v67);
  v68 = *(_DWORD *)(a2 + 512);
  *(_BYTE *)(a1 + 516) = *(_BYTE *)(a2 + 516);
  *(_DWORD *)(a1 + 512) = v68;
  *(_BYTE *)(a1 + 517) = *(_BYTE *)(a2 + 517);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  v69 = *(_QWORD *)(a2 + 528);
  v70 = *(_QWORD *)(a1 + 528);
  *(_QWORD *)(a1 + 528) = v69;
  swift_bridgeObjectRetain(v69);
  swift_bridgeObjectRelease(v70);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  v71 = *(_QWORD *)(a2 + 544);
  v72 = *(_QWORD *)(a1 + 544);
  *(_QWORD *)(a1 + 544) = v71;
  swift_bridgeObjectRetain(v71);
  swift_bridgeObjectRelease(v72);
  v73 = *(_DWORD *)(a2 + 552);
  *(_BYTE *)(a1 + 556) = *(_BYTE *)(a2 + 556);
  *(_DWORD *)(a1 + 552) = v73;
  *(_BYTE *)(a1 + 557) = *(_BYTE *)(a2 + 557);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  v74 = *(_QWORD *)(a2 + 568);
  v75 = *(_QWORD *)(a1 + 568);
  *(_QWORD *)(a1 + 568) = v74;
  swift_bridgeObjectRetain(v74);
  swift_bridgeObjectRelease(v75);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  v76 = *(_QWORD *)(a2 + 584);
  v77 = *(_QWORD *)(a1 + 584);
  *(_QWORD *)(a1 + 584) = v76;
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRelease(v77);
  v78 = *(_DWORD *)(a2 + 592);
  *(_BYTE *)(a1 + 596) = *(_BYTE *)(a2 + 596);
  *(_DWORD *)(a1 + 592) = v78;
  *(_BYTE *)(a1 + 597) = *(_BYTE *)(a2 + 597);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  v79 = *(_QWORD *)(a2 + 608);
  v80 = *(_QWORD *)(a1 + 608);
  *(_QWORD *)(a1 + 608) = v79;
  swift_bridgeObjectRetain(v79);
  swift_bridgeObjectRelease(v80);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  v81 = *(_QWORD *)(a2 + 624);
  v82 = *(_QWORD *)(a1 + 624);
  *(_QWORD *)(a1 + 624) = v81;
  swift_bridgeObjectRetain(v81);
  swift_bridgeObjectRelease(v82);
  v83 = *(_DWORD *)(a2 + 632);
  *(_BYTE *)(a1 + 636) = *(_BYTE *)(a2 + 636);
  *(_DWORD *)(a1 + 632) = v83;
  *(_BYTE *)(a1 + 637) = *(_BYTE *)(a2 + 637);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  v84 = *(_QWORD *)(a2 + 648);
  v85 = *(_QWORD *)(a1 + 648);
  *(_QWORD *)(a1 + 648) = v84;
  swift_bridgeObjectRetain(v84);
  swift_bridgeObjectRelease(v85);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  v86 = *(_QWORD *)(a2 + 664);
  v87 = *(_QWORD *)(a1 + 664);
  *(_QWORD *)(a1 + 664) = v86;
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRelease(v87);
  v88 = *(_DWORD *)(a2 + 672);
  *(_BYTE *)(a1 + 676) = *(_BYTE *)(a2 + 676);
  *(_DWORD *)(a1 + 672) = v88;
  *(_BYTE *)(a1 + 677) = *(_BYTE *)(a2 + 677);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  v89 = *(_QWORD *)(a2 + 688);
  v90 = *(_QWORD *)(a1 + 688);
  *(_QWORD *)(a1 + 688) = v89;
  swift_bridgeObjectRetain(v89);
  swift_bridgeObjectRelease(v90);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  v91 = *(_QWORD *)(a2 + 704);
  v92 = *(_QWORD *)(a1 + 704);
  *(_QWORD *)(a1 + 704) = v91;
  swift_bridgeObjectRetain(v91);
  swift_bridgeObjectRelease(v92);
  v93 = *(_DWORD *)(a2 + 712);
  *(_BYTE *)(a1 + 716) = *(_BYTE *)(a2 + 716);
  *(_DWORD *)(a1 + 712) = v93;
  *(_BYTE *)(a1 + 717) = *(_BYTE *)(a2 + 717);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  v94 = *(_QWORD *)(a2 + 728);
  v95 = *(_QWORD *)(a1 + 728);
  *(_QWORD *)(a1 + 728) = v94;
  swift_bridgeObjectRetain(v94);
  swift_bridgeObjectRelease(v95);
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  v96 = *(_QWORD *)(a2 + 744);
  v97 = *(_QWORD *)(a1 + 744);
  *(_QWORD *)(a1 + 744) = v96;
  swift_bridgeObjectRetain(v96);
  swift_bridgeObjectRelease(v97);
  v98 = *(_DWORD *)(a2 + 752);
  *(_BYTE *)(a1 + 756) = *(_BYTE *)(a2 + 756);
  *(_DWORD *)(a1 + 752) = v98;
  *(_BYTE *)(a1 + 757) = *(_BYTE *)(a2 + 757);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  v99 = *(_QWORD *)(a2 + 768);
  v100 = *(_QWORD *)(a1 + 768);
  *(_QWORD *)(a1 + 768) = v99;
  swift_bridgeObjectRetain(v99);
  swift_bridgeObjectRelease(v100);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  v101 = *(_QWORD *)(a2 + 784);
  v102 = *(_QWORD *)(a1 + 784);
  *(_QWORD *)(a1 + 784) = v101;
  swift_bridgeObjectRetain(v101);
  swift_bridgeObjectRelease(v102);
  v103 = *(_DWORD *)(a2 + 792);
  *(_BYTE *)(a1 + 796) = *(_BYTE *)(a2 + 796);
  *(_DWORD *)(a1 + 792) = v103;
  *(_BYTE *)(a1 + 797) = *(_BYTE *)(a2 + 797);
  *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
  v104 = *(_QWORD *)(a2 + 808);
  v105 = *(_QWORD *)(a1 + 808);
  *(_QWORD *)(a1 + 808) = v104;
  swift_bridgeObjectRetain(v104);
  swift_bridgeObjectRelease(v105);
  *(_QWORD *)(a1 + 816) = *(_QWORD *)(a2 + 816);
  v106 = *(_QWORD *)(a2 + 824);
  v107 = *(_QWORD *)(a1 + 824);
  *(_QWORD *)(a1 + 824) = v106;
  swift_bridgeObjectRetain(v106);
  swift_bridgeObjectRelease(v107);
  v108 = *(_DWORD *)(a2 + 832);
  *(_BYTE *)(a1 + 836) = *(_BYTE *)(a2 + 836);
  *(_DWORD *)(a1 + 832) = v108;
  *(_BYTE *)(a1 + 837) = *(_BYTE *)(a2 + 837);
  return a1;
}

void *initializeWithTake for ObjectTypeDetails(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x346uLL);
}

uint64_t assignWithTake for ObjectTypeDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRelease(v11);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v12;
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a2 + 104);
  v15 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v14;
  swift_bridgeObjectRelease(v15);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_WORD *)(a1 + 116) = *(_WORD *)(a2 + 116);
  v16 = *(_QWORD *)(a2 + 128);
  v17 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v16;
  swift_bridgeObjectRelease(v17);
  v18 = *(_QWORD *)(a2 + 144);
  v19 = *(_QWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v18;
  swift_bridgeObjectRelease(v19);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_WORD *)(a1 + 156) = *(_WORD *)(a2 + 156);
  v20 = *(_QWORD *)(a2 + 168);
  v21 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v20;
  swift_bridgeObjectRelease(v21);
  v22 = *(_QWORD *)(a2 + 184);
  v23 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v22;
  swift_bridgeObjectRelease(v23);
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_WORD *)(a1 + 196) = *(_WORD *)(a2 + 196);
  v24 = *(_QWORD *)(a2 + 208);
  v25 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v24;
  swift_bridgeObjectRelease(v25);
  v26 = *(_QWORD *)(a2 + 224);
  v27 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v26;
  swift_bridgeObjectRelease(v27);
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  *(_WORD *)(a1 + 236) = *(_WORD *)(a2 + 236);
  v28 = *(_QWORD *)(a2 + 248);
  v29 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v28;
  swift_bridgeObjectRelease(v29);
  v30 = *(_QWORD *)(a2 + 264);
  v31 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v30;
  swift_bridgeObjectRelease(v31);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_WORD *)(a1 + 276) = *(_WORD *)(a2 + 276);
  v32 = *(_QWORD *)(a2 + 288);
  v33 = *(_QWORD *)(a1 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v32;
  swift_bridgeObjectRelease(v33);
  v34 = *(_QWORD *)(a2 + 304);
  v35 = *(_QWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v34;
  swift_bridgeObjectRelease(v35);
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  *(_WORD *)(a1 + 316) = *(_WORD *)(a2 + 316);
  v36 = *(_QWORD *)(a2 + 328);
  v37 = *(_QWORD *)(a1 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v36;
  swift_bridgeObjectRelease(v37);
  v38 = *(_QWORD *)(a2 + 344);
  v39 = *(_QWORD *)(a1 + 344);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = v38;
  swift_bridgeObjectRelease(v39);
  *(_DWORD *)(a1 + 352) = *(_DWORD *)(a2 + 352);
  *(_WORD *)(a1 + 356) = *(_WORD *)(a2 + 356);
  v40 = *(_QWORD *)(a2 + 368);
  v41 = *(_QWORD *)(a1 + 368);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v40;
  swift_bridgeObjectRelease(v41);
  v42 = *(_QWORD *)(a2 + 384);
  v43 = *(_QWORD *)(a1 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v42;
  swift_bridgeObjectRelease(v43);
  *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
  *(_WORD *)(a1 + 396) = *(_WORD *)(a2 + 396);
  v44 = *(_QWORD *)(a2 + 408);
  v45 = *(_QWORD *)(a1 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v44;
  swift_bridgeObjectRelease(v45);
  v46 = *(_QWORD *)(a2 + 424);
  v47 = *(_QWORD *)(a1 + 424);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = v46;
  swift_bridgeObjectRelease(v47);
  *(_DWORD *)(a1 + 432) = *(_DWORD *)(a2 + 432);
  *(_WORD *)(a1 + 436) = *(_WORD *)(a2 + 436);
  v48 = *(_QWORD *)(a2 + 448);
  v49 = *(_QWORD *)(a1 + 448);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = v48;
  swift_bridgeObjectRelease(v49);
  v50 = *(_QWORD *)(a2 + 464);
  v51 = *(_QWORD *)(a1 + 464);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = v50;
  swift_bridgeObjectRelease(v51);
  *(_DWORD *)(a1 + 472) = *(_DWORD *)(a2 + 472);
  *(_WORD *)(a1 + 476) = *(_WORD *)(a2 + 476);
  v52 = *(_QWORD *)(a2 + 488);
  v53 = *(_QWORD *)(a1 + 488);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = v52;
  swift_bridgeObjectRelease(v53);
  v54 = *(_QWORD *)(a2 + 504);
  v55 = *(_QWORD *)(a1 + 504);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = v54;
  swift_bridgeObjectRelease(v55);
  *(_DWORD *)(a1 + 512) = *(_DWORD *)(a2 + 512);
  *(_WORD *)(a1 + 516) = *(_WORD *)(a2 + 516);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  v56 = *(_QWORD *)(a1 + 528);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  swift_bridgeObjectRelease(v56);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  v57 = *(_QWORD *)(a1 + 544);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_bridgeObjectRelease(v57);
  *(_DWORD *)(a1 + 552) = *(_DWORD *)(a2 + 552);
  *(_WORD *)(a1 + 556) = *(_WORD *)(a2 + 556);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  v58 = *(_QWORD *)(a1 + 568);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  swift_bridgeObjectRelease(v58);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  v59 = *(_QWORD *)(a1 + 584);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  swift_bridgeObjectRelease(v59);
  *(_DWORD *)(a1 + 592) = *(_DWORD *)(a2 + 592);
  *(_WORD *)(a1 + 596) = *(_WORD *)(a2 + 596);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  v60 = *(_QWORD *)(a1 + 608);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  swift_bridgeObjectRelease(v60);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  v61 = *(_QWORD *)(a1 + 624);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  swift_bridgeObjectRelease(v61);
  *(_DWORD *)(a1 + 632) = *(_DWORD *)(a2 + 632);
  *(_WORD *)(a1 + 636) = *(_WORD *)(a2 + 636);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  v62 = *(_QWORD *)(a1 + 648);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  swift_bridgeObjectRelease(v62);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  v63 = *(_QWORD *)(a1 + 664);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  swift_bridgeObjectRelease(v63);
  *(_DWORD *)(a1 + 672) = *(_DWORD *)(a2 + 672);
  *(_WORD *)(a1 + 676) = *(_WORD *)(a2 + 676);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  v64 = *(_QWORD *)(a1 + 688);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  swift_bridgeObjectRelease(v64);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  v65 = *(_QWORD *)(a1 + 704);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  swift_bridgeObjectRelease(v65);
  *(_DWORD *)(a1 + 712) = *(_DWORD *)(a2 + 712);
  *(_WORD *)(a1 + 716) = *(_WORD *)(a2 + 716);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  v66 = *(_QWORD *)(a1 + 728);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  swift_bridgeObjectRelease(v66);
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  v67 = *(_QWORD *)(a1 + 744);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  swift_bridgeObjectRelease(v67);
  *(_DWORD *)(a1 + 752) = *(_DWORD *)(a2 + 752);
  *(_WORD *)(a1 + 756) = *(_WORD *)(a2 + 756);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  v68 = *(_QWORD *)(a1 + 768);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  swift_bridgeObjectRelease(v68);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  v69 = *(_QWORD *)(a1 + 784);
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  swift_bridgeObjectRelease(v69);
  *(_DWORD *)(a1 + 792) = *(_DWORD *)(a2 + 792);
  *(_WORD *)(a1 + 796) = *(_WORD *)(a2 + 796);
  *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
  v70 = *(_QWORD *)(a1 + 808);
  *(_QWORD *)(a1 + 808) = *(_QWORD *)(a2 + 808);
  swift_bridgeObjectRelease(v70);
  *(_QWORD *)(a1 + 816) = *(_QWORD *)(a2 + 816);
  v71 = *(_QWORD *)(a1 + 824);
  *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
  swift_bridgeObjectRelease(v71);
  *(_DWORD *)(a1 + 832) = *(_DWORD *)(a2 + 832);
  *(_WORD *)(a1 + 836) = *(_WORD *)(a2 + 836);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectTypeDetails(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 838))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectTypeDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 824) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 836) = 0;
    *(_DWORD *)(result + 832) = 0;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 838) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 838) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectTypeDetails()
{
  return &type metadata for ObjectTypeDetails;
}

uint64_t destroy for SurfaceTypeDetails(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(a1[13]);
  swift_bridgeObjectRelease(a1[16]);
  swift_bridgeObjectRelease(a1[18]);
  swift_bridgeObjectRelease(a1[21]);
  swift_bridgeObjectRelease(a1[23]);
  swift_bridgeObjectRelease(a1[26]);
  swift_bridgeObjectRelease(a1[28]);
  swift_bridgeObjectRelease(a1[31]);
  swift_bridgeObjectRelease(a1[33]);
  swift_bridgeObjectRelease(a1[36]);
  swift_bridgeObjectRelease(a1[38]);
  swift_bridgeObjectRelease(a1[41]);
  swift_bridgeObjectRelease(a1[43]);
  swift_bridgeObjectRelease(a1[46]);
  swift_bridgeObjectRelease(a1[48]);
  swift_bridgeObjectRelease(a1[51]);
  swift_bridgeObjectRelease(a1[53]);
  swift_bridgeObjectRelease(a1[56]);
  return swift_bridgeObjectRelease(a1[58]);
}

uint64_t initializeWithCopy for SurfaceTypeDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v35 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v35;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  v34 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v34;
  v33 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v33;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  v32 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v32;
  v31 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v31;
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 117) = *(_BYTE *)(a2 + 117);
  v30 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v30;
  v29 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v29;
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_WORD *)(a1 + 156) = *(_WORD *)(a2 + 156);
  v28 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v28;
  v27 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v27;
  v4 = *(_DWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v4;
  *(_BYTE *)(a1 + 197) = *(_BYTE *)(a2 + 197);
  v26 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v26;
  v25 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v25;
  v5 = *(_DWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 236) = *(_BYTE *)(a2 + 236);
  *(_DWORD *)(a1 + 232) = v5;
  *(_BYTE *)(a1 + 237) = *(_BYTE *)(a2 + 237);
  v24 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v24;
  v23 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v23;
  v6 = *(_DWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 276) = *(_BYTE *)(a2 + 276);
  *(_DWORD *)(a1 + 272) = v6;
  *(_BYTE *)(a1 + 277) = *(_BYTE *)(a2 + 277);
  v22 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v22;
  v7 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v7;
  v8 = *(_DWORD *)(a2 + 312);
  *(_BYTE *)(a1 + 316) = *(_BYTE *)(a2 + 316);
  *(_DWORD *)(a1 + 312) = v8;
  *(_BYTE *)(a1 + 317) = *(_BYTE *)(a2 + 317);
  v9 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v9;
  v10 = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = v10;
  v11 = *(_DWORD *)(a2 + 352);
  *(_BYTE *)(a1 + 356) = *(_BYTE *)(a2 + 356);
  *(_DWORD *)(a1 + 352) = v11;
  *(_BYTE *)(a1 + 357) = *(_BYTE *)(a2 + 357);
  v12 = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v12;
  v13 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v13;
  v14 = *(_DWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 396) = *(_BYTE *)(a2 + 396);
  *(_DWORD *)(a1 + 392) = v14;
  *(_BYTE *)(a1 + 397) = *(_BYTE *)(a2 + 397);
  v15 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v15;
  v16 = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = v16;
  v17 = *(_DWORD *)(a2 + 432);
  *(_BYTE *)(a1 + 436) = *(_BYTE *)(a2 + 436);
  *(_DWORD *)(a1 + 432) = v17;
  *(_BYTE *)(a1 + 437) = *(_BYTE *)(a2 + 437);
  v18 = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = v18;
  v19 = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = v19;
  v20 = *(_DWORD *)(a2 + 472);
  *(_BYTE *)(a1 + 476) = *(_BYTE *)(a2 + 476);
  *(_DWORD *)(a1 + 472) = v20;
  *(_BYTE *)(a1 + 477) = *(_BYTE *)(a2 + 477);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v19);
  return a1;
}

uint64_t assignWithCopy for SurfaceTypeDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 37) = *(_BYTE *)(a2 + 37);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  v13 = *(_DWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v13;
  *(_BYTE *)(a1 + 77) = *(_BYTE *)(a2 + 77);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v16 = *(_QWORD *)(a2 + 104);
  v17 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = *(_DWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v18;
  *(_BYTE *)(a1 + 117) = *(_BYTE *)(a2 + 117);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v19 = *(_QWORD *)(a2 + 128);
  v20 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v21 = *(_QWORD *)(a2 + 144);
  v22 = *(_QWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 144) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  v23 = *(_DWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 156) = *(_BYTE *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = v23;
  *(_BYTE *)(a1 + 157) = *(_BYTE *)(a2 + 157);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v24 = *(_QWORD *)(a2 + 168);
  v25 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 168) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v26 = *(_QWORD *)(a2 + 184);
  v27 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 184) = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  v28 = *(_DWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v28;
  *(_BYTE *)(a1 + 197) = *(_BYTE *)(a2 + 197);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v29 = *(_QWORD *)(a2 + 208);
  v30 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 208) = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v30);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  v31 = *(_QWORD *)(a2 + 224);
  v32 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 224) = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease(v32);
  v33 = *(_DWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 236) = *(_BYTE *)(a2 + 236);
  *(_DWORD *)(a1 + 232) = v33;
  *(_BYTE *)(a1 + 237) = *(_BYTE *)(a2 + 237);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  v34 = *(_QWORD *)(a2 + 248);
  v35 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 248) = v34;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v35);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  v36 = *(_QWORD *)(a2 + 264);
  v37 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 264) = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease(v37);
  v38 = *(_DWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 276) = *(_BYTE *)(a2 + 276);
  *(_DWORD *)(a1 + 272) = v38;
  *(_BYTE *)(a1 + 277) = *(_BYTE *)(a2 + 277);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v39 = *(_QWORD *)(a2 + 288);
  v40 = *(_QWORD *)(a1 + 288);
  *(_QWORD *)(a1 + 288) = v39;
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRelease(v40);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  v41 = *(_QWORD *)(a2 + 304);
  v42 = *(_QWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 304) = v41;
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRelease(v42);
  v43 = *(_DWORD *)(a2 + 312);
  *(_BYTE *)(a1 + 316) = *(_BYTE *)(a2 + 316);
  *(_DWORD *)(a1 + 312) = v43;
  *(_BYTE *)(a1 + 317) = *(_BYTE *)(a2 + 317);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v44 = *(_QWORD *)(a2 + 328);
  v45 = *(_QWORD *)(a1 + 328);
  *(_QWORD *)(a1 + 328) = v44;
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRelease(v45);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v46 = *(_QWORD *)(a2 + 344);
  v47 = *(_QWORD *)(a1 + 344);
  *(_QWORD *)(a1 + 344) = v46;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRelease(v47);
  v48 = *(_DWORD *)(a2 + 352);
  *(_BYTE *)(a1 + 356) = *(_BYTE *)(a2 + 356);
  *(_DWORD *)(a1 + 352) = v48;
  *(_BYTE *)(a1 + 357) = *(_BYTE *)(a2 + 357);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  v49 = *(_QWORD *)(a2 + 368);
  v50 = *(_QWORD *)(a1 + 368);
  *(_QWORD *)(a1 + 368) = v49;
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRelease(v50);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  v51 = *(_QWORD *)(a2 + 384);
  v52 = *(_QWORD *)(a1 + 384);
  *(_QWORD *)(a1 + 384) = v51;
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRelease(v52);
  v53 = *(_DWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 396) = *(_BYTE *)(a2 + 396);
  *(_DWORD *)(a1 + 392) = v53;
  *(_BYTE *)(a1 + 397) = *(_BYTE *)(a2 + 397);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  v54 = *(_QWORD *)(a2 + 408);
  v55 = *(_QWORD *)(a1 + 408);
  *(_QWORD *)(a1 + 408) = v54;
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRelease(v55);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  v56 = *(_QWORD *)(a2 + 424);
  v57 = *(_QWORD *)(a1 + 424);
  *(_QWORD *)(a1 + 424) = v56;
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease(v57);
  v58 = *(_DWORD *)(a2 + 432);
  *(_BYTE *)(a1 + 436) = *(_BYTE *)(a2 + 436);
  *(_DWORD *)(a1 + 432) = v58;
  *(_BYTE *)(a1 + 437) = *(_BYTE *)(a2 + 437);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  v59 = *(_QWORD *)(a2 + 448);
  v60 = *(_QWORD *)(a1 + 448);
  *(_QWORD *)(a1 + 448) = v59;
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRelease(v60);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  v61 = *(_QWORD *)(a2 + 464);
  v62 = *(_QWORD *)(a1 + 464);
  *(_QWORD *)(a1 + 464) = v61;
  swift_bridgeObjectRetain(v61);
  swift_bridgeObjectRelease(v62);
  v63 = *(_DWORD *)(a2 + 472);
  *(_BYTE *)(a1 + 476) = *(_BYTE *)(a2 + 476);
  *(_DWORD *)(a1 + 472) = v63;
  *(_BYTE *)(a1 + 477) = *(_BYTE *)(a2 + 477);
  return a1;
}

void *initializeWithTake for SurfaceTypeDetails(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1DEuLL);
}

uint64_t assignWithTake for SurfaceTypeDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRelease(v11);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v12;
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a2 + 104);
  v15 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v14;
  swift_bridgeObjectRelease(v15);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_WORD *)(a1 + 116) = *(_WORD *)(a2 + 116);
  v16 = *(_QWORD *)(a2 + 128);
  v17 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v16;
  swift_bridgeObjectRelease(v17);
  v18 = *(_QWORD *)(a2 + 144);
  v19 = *(_QWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v18;
  swift_bridgeObjectRelease(v19);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_WORD *)(a1 + 156) = *(_WORD *)(a2 + 156);
  v20 = *(_QWORD *)(a2 + 168);
  v21 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v20;
  swift_bridgeObjectRelease(v21);
  v22 = *(_QWORD *)(a2 + 184);
  v23 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v22;
  swift_bridgeObjectRelease(v23);
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_WORD *)(a1 + 196) = *(_WORD *)(a2 + 196);
  v24 = *(_QWORD *)(a2 + 208);
  v25 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v24;
  swift_bridgeObjectRelease(v25);
  v26 = *(_QWORD *)(a2 + 224);
  v27 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v26;
  swift_bridgeObjectRelease(v27);
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  *(_WORD *)(a1 + 236) = *(_WORD *)(a2 + 236);
  v28 = *(_QWORD *)(a2 + 248);
  v29 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v28;
  swift_bridgeObjectRelease(v29);
  v30 = *(_QWORD *)(a2 + 264);
  v31 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v30;
  swift_bridgeObjectRelease(v31);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_WORD *)(a1 + 276) = *(_WORD *)(a2 + 276);
  v32 = *(_QWORD *)(a2 + 288);
  v33 = *(_QWORD *)(a1 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v32;
  swift_bridgeObjectRelease(v33);
  v34 = *(_QWORD *)(a2 + 304);
  v35 = *(_QWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v34;
  swift_bridgeObjectRelease(v35);
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  *(_WORD *)(a1 + 316) = *(_WORD *)(a2 + 316);
  v36 = *(_QWORD *)(a2 + 328);
  v37 = *(_QWORD *)(a1 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v36;
  swift_bridgeObjectRelease(v37);
  v38 = *(_QWORD *)(a2 + 344);
  v39 = *(_QWORD *)(a1 + 344);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = v38;
  swift_bridgeObjectRelease(v39);
  *(_DWORD *)(a1 + 352) = *(_DWORD *)(a2 + 352);
  *(_WORD *)(a1 + 356) = *(_WORD *)(a2 + 356);
  v40 = *(_QWORD *)(a2 + 368);
  v41 = *(_QWORD *)(a1 + 368);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v40;
  swift_bridgeObjectRelease(v41);
  v42 = *(_QWORD *)(a2 + 384);
  v43 = *(_QWORD *)(a1 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v42;
  swift_bridgeObjectRelease(v43);
  *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
  *(_WORD *)(a1 + 396) = *(_WORD *)(a2 + 396);
  v44 = *(_QWORD *)(a2 + 408);
  v45 = *(_QWORD *)(a1 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v44;
  swift_bridgeObjectRelease(v45);
  v46 = *(_QWORD *)(a2 + 424);
  v47 = *(_QWORD *)(a1 + 424);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = v46;
  swift_bridgeObjectRelease(v47);
  *(_DWORD *)(a1 + 432) = *(_DWORD *)(a2 + 432);
  *(_WORD *)(a1 + 436) = *(_WORD *)(a2 + 436);
  v48 = *(_QWORD *)(a2 + 448);
  v49 = *(_QWORD *)(a1 + 448);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = v48;
  swift_bridgeObjectRelease(v49);
  v50 = *(_QWORD *)(a2 + 464);
  v51 = *(_QWORD *)(a1 + 464);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = v50;
  swift_bridgeObjectRelease(v51);
  *(_DWORD *)(a1 + 472) = *(_DWORD *)(a2 + 472);
  *(_WORD *)(a1 + 476) = *(_WORD *)(a2 + 476);
  return a1;
}

uint64_t getEnumTagSinglePayload for SurfaceTypeDetails(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 478))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SurfaceTypeDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 476) = 0;
    *(_DWORD *)(result + 472) = 0;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 478) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 478) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SurfaceTypeDetails()
{
  return &type metadata for SurfaceTypeDetails;
}

uint64_t destroy for LineTypeDetails(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(a1[13]);
  result = a1[19];
  if (result)
  {
    swift_bridgeObjectRelease(result);
    swift_bridgeObjectRelease(a1[21]);
    swift_bridgeObjectRelease(a1[24]);
    swift_bridgeObjectRelease(a1[26]);
    swift_bridgeObjectRelease(a1[29]);
    return swift_bridgeObjectRelease(a1[31]);
  }
  return result;
}

uint64_t initializeWithCopy for LineTypeDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 117) = *(_BYTE *)(a2 + 117);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  v10 = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  if (v10)
  {
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = v10;
    v11 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = v11;
    *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
    *(_WORD *)(a1 + 180) = *(_WORD *)(a2 + 180);
    v12 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = v12;
    v13 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = v13;
    *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
    *(_WORD *)(a1 + 220) = *(_WORD *)(a2 + 220);
    v14 = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = v14;
    v15 = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = v15;
    *(_BYTE *)(a1 + 260) = *(_BYTE *)(a2 + 260);
    *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
    *(_BYTE *)(a1 + 261) = *(_BYTE *)(a2 + 261);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v15);
  }
  else
  {
    v16 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v16;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 254) = *(_QWORD *)(a2 + 254);
    v17 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v17;
    v18 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v18;
  }
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 268) = *(_BYTE *)(a2 + 268);
  return a1;
}

uint64_t assignWithCopy for LineTypeDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  _OWORD *v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  int v58;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 37) = *(_BYTE *)(a2 + 37);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  v13 = *(_DWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v13;
  *(_BYTE *)(a1 + 77) = *(_BYTE *)(a2 + 77);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v16 = *(_QWORD *)(a2 + 104);
  v17 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = *(_DWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v18;
  *(_BYTE *)(a1 + 117) = *(_BYTE *)(a2 + 117);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  v19 = (_OWORD *)(a1 + 144);
  v20 = (__int128 *)(a2 + 144);
  v21 = *(_QWORD *)(a1 + 152);
  v22 = *(_QWORD *)(a2 + 152);
  if (v21)
  {
    if (v22)
    {
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      v23 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 152) = v23;
      swift_bridgeObjectRetain(v23);
      swift_bridgeObjectRelease(v21);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      v24 = *(_QWORD *)(a2 + 168);
      v25 = *(_QWORD *)(a1 + 168);
      *(_QWORD *)(a1 + 168) = v24;
      swift_bridgeObjectRetain(v24);
      swift_bridgeObjectRelease(v25);
      v26 = *(_DWORD *)(a2 + 176);
      *(_BYTE *)(a1 + 180) = *(_BYTE *)(a2 + 180);
      *(_DWORD *)(a1 + 176) = v26;
      *(_BYTE *)(a1 + 181) = *(_BYTE *)(a2 + 181);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      v27 = *(_QWORD *)(a2 + 192);
      v28 = *(_QWORD *)(a1 + 192);
      *(_QWORD *)(a1 + 192) = v27;
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRelease(v28);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      v29 = *(_QWORD *)(a2 + 208);
      v30 = *(_QWORD *)(a1 + 208);
      *(_QWORD *)(a1 + 208) = v29;
      swift_bridgeObjectRetain(v29);
      swift_bridgeObjectRelease(v30);
      v31 = *(_DWORD *)(a2 + 216);
      *(_BYTE *)(a1 + 220) = *(_BYTE *)(a2 + 220);
      *(_DWORD *)(a1 + 216) = v31;
      *(_BYTE *)(a1 + 221) = *(_BYTE *)(a2 + 221);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      v32 = *(_QWORD *)(a2 + 232);
      v33 = *(_QWORD *)(a1 + 232);
      *(_QWORD *)(a1 + 232) = v32;
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRelease(v33);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      v34 = *(_QWORD *)(a2 + 248);
      v35 = *(_QWORD *)(a1 + 248);
      *(_QWORD *)(a1 + 248) = v34;
      swift_bridgeObjectRetain(v34);
      swift_bridgeObjectRelease(v35);
      v36 = *(_DWORD *)(a2 + 256);
      *(_BYTE *)(a1 + 260) = *(_BYTE *)(a2 + 260);
      *(_DWORD *)(a1 + 256) = v36;
      *(_BYTE *)(a1 + 261) = *(_BYTE *)(a2 + 261);
    }
    else
    {
      sub_1001B28C0((_QWORD *)(a1 + 144));
      v46 = *(_OWORD *)(a2 + 192);
      v48 = *v20;
      v47 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 192) = v46;
      *v19 = v48;
      *(_OWORD *)(a1 + 160) = v47;
      v50 = *(_OWORD *)(a2 + 224);
      v49 = *(_OWORD *)(a2 + 240);
      v51 = *(_OWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 254) = *(_QWORD *)(a2 + 254);
      *(_OWORD *)(a1 + 224) = v50;
      *(_OWORD *)(a1 + 240) = v49;
      *(_OWORD *)(a1 + 208) = v51;
    }
  }
  else if (v22)
  {
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    v37 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 152) = v37;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    v38 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 168) = v38;
    v39 = *(_DWORD *)(a2 + 176);
    *(_BYTE *)(a1 + 180) = *(_BYTE *)(a2 + 180);
    *(_DWORD *)(a1 + 176) = v39;
    *(_BYTE *)(a1 + 181) = *(_BYTE *)(a2 + 181);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    v40 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 192) = v40;
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    v41 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 208) = v41;
    v42 = *(_DWORD *)(a2 + 216);
    *(_BYTE *)(a1 + 220) = *(_BYTE *)(a2 + 220);
    *(_DWORD *)(a1 + 216) = v42;
    *(_BYTE *)(a1 + 221) = *(_BYTE *)(a2 + 221);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    v43 = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 232) = v43;
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    v44 = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 248) = v44;
    v45 = *(_DWORD *)(a2 + 256);
    *(_BYTE *)(a1 + 260) = *(_BYTE *)(a2 + 260);
    *(_DWORD *)(a1 + 256) = v45;
    *(_BYTE *)(a1 + 261) = *(_BYTE *)(a2 + 261);
    swift_bridgeObjectRetain(v37);
    swift_bridgeObjectRetain(v38);
    swift_bridgeObjectRetain(v40);
    swift_bridgeObjectRetain(v41);
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v44);
  }
  else
  {
    v52 = *v20;
    v53 = *(_OWORD *)(a2 + 160);
    v54 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v54;
    *v19 = v52;
    *(_OWORD *)(a1 + 160) = v53;
    v55 = *(_OWORD *)(a2 + 208);
    v56 = *(_OWORD *)(a2 + 224);
    v57 = *(_OWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 254) = *(_QWORD *)(a2 + 254);
    *(_OWORD *)(a1 + 224) = v56;
    *(_OWORD *)(a1 + 240) = v57;
    *(_OWORD *)(a1 + 208) = v55;
  }
  v58 = *(_DWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 268) = *(_BYTE *)(a2 + 268);
  *(_DWORD *)(a1 + 264) = v58;
  return a1;
}

_QWORD *sub_1001B28C0(_QWORD *a1)
{
  destroy for MeasurementFields(a1);
  return a1;
}

void *initializeWithTake for LineTypeDetails(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x10DuLL);
}

uint64_t assignWithTake for LineTypeDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRelease(v11);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v12;
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a2 + 104);
  v15 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v14;
  swift_bridgeObjectRelease(v15);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_WORD *)(a1 + 116) = *(_WORD *)(a2 + 116);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  v16 = *(_QWORD *)(a1 + 152);
  if (!v16)
    goto LABEL_5;
  v17 = *(_QWORD *)(a2 + 152);
  if (!v17)
  {
    sub_1001B28C0((_QWORD *)(a1 + 144));
LABEL_5:
    v28 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v28;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 254) = *(_QWORD *)(a2 + 254);
    v29 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v29;
    v30 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v30;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v17;
  swift_bridgeObjectRelease(v16);
  v18 = *(_QWORD *)(a2 + 168);
  v19 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v18;
  swift_bridgeObjectRelease(v19);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_WORD *)(a1 + 180) = *(_WORD *)(a2 + 180);
  v20 = *(_QWORD *)(a2 + 192);
  v21 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v20;
  swift_bridgeObjectRelease(v21);
  v22 = *(_QWORD *)(a2 + 208);
  v23 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v22;
  swift_bridgeObjectRelease(v23);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_WORD *)(a1 + 220) = *(_WORD *)(a2 + 220);
  v24 = *(_QWORD *)(a2 + 232);
  v25 = *(_QWORD *)(a1 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v24;
  swift_bridgeObjectRelease(v25);
  v26 = *(_QWORD *)(a2 + 248);
  v27 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v26;
  swift_bridgeObjectRelease(v27);
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(_WORD *)(a1 + 260) = *(_WORD *)(a2 + 260);
LABEL_6:
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 268) = *(_BYTE *)(a2 + 268);
  return a1;
}

uint64_t getEnumTagSinglePayload for LineTypeDetails(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 269))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LineTypeDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 268) = 0;
    *(_DWORD *)(result + 264) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 269) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 269) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LineTypeDetails()
{
  return &type metadata for LineTypeDetails;
}

uint64_t storeEnumTagSinglePayload for SessionResetEvent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1001B2BCC + 4 * byte_1003BBB05[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1001B2C00 + 4 * byte_1003BBB00[v4]))();
}

uint64_t sub_1001B2C00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001B2C08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001B2C10);
  return result;
}

uint64_t sub_1001B2C1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001B2C24);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1001B2C28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001B2C30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionResetEvent()
{
  return &type metadata for SessionResetEvent;
}

uint64_t sub_1001B2C4C()
{
  uint64_t result;

  result = Contexts.UIKit.init()();
  qword_1004AFCF8 = result;
  return result;
}

id sub_1001B2C68@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_10047B150 != -1)
    swift_once(&qword_10047B150, sub_1001B2C4C);
  v2 = (void *)qword_1004AFCF8;
  *a1 = qword_1004AFCF8;
  return v2;
}

unint64_t sub_1001B2CB8(uint64_t a1)
{
  unint64_t result;

  result = sub_1001B2CDC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001B2CDC()
{
  unint64_t result;

  result = qword_100489A30;
  if (!qword_100489A30)
  {
    result = swift_getWitnessTable(&unk_1003BBB80, &type metadata for SessionResetEvent);
    atomic_store(result, (unint64_t *)&qword_100489A30);
  }
  return result;
}

void sub_1001B2D24(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  _QWORD v25[6];
  objc_super v26;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  v10 = &v4[OBJC_IVAR____TtC7Measure14TapToRadarView_delegate];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10, 0);
  v11 = OBJC_IVAR____TtC7Measure14TapToRadarView_rtlFormat;
  v12 = (void *)objc_opt_self(UIApplication);
  v13 = v4;
  v14 = objc_msgSend(v12, "sharedApplication");
  v15 = objc_msgSend(v14, "userInterfaceLayoutDirection");

  v4[v11] = v15 == (id)1;
  v26.receiver = v13;
  v26.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v26, "initWithFrame:", a1, a2, a3, a4);
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v17);

  if (v18)
  {
    objc_msgSend(v16, "setImage:forState:", v18, 0);

  }
  objc_msgSend(v16, "addTarget:action:forControlEvents:", v16, "fileRadar", 64);
  objc_msgSend(v16, "sizeToFit");
  v19 = objc_opt_self(UIView);
  v20 = swift_allocObject(&unk_10044B4A0, 24, 7);
  *(_QWORD *)(v20 + 16) = v16;
  v21 = swift_allocObject(&unk_10044B4C8, 32, 7);
  *(_QWORD *)(v21 + 16) = sub_1001B3724;
  *(_QWORD *)(v21 + 24) = v20;
  v25[4] = sub_100030C24;
  v25[5] = v21;
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 1107296256;
  v25[2] = sub_1000DDB80;
  v25[3] = &unk_10044B4E0;
  v22 = _Block_copy(v25);
  v23 = v16;
  swift_retain();
  objc_msgSend((id)v19, "performWithoutAnimation:", v22, swift_release().n128_f64[0]);
  _Block_release(v22);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation(v21, "", 91, 28, 40, 1);
  swift_release();
  if ((v19 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v24 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v24, "addObserver:selector:name:object:", v23, "updateForCurrentOrientation", UIDeviceOrientationDidChangeNotification, 0);
    swift_release();

  }
}

void sub_1001B3020()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  id v14;
  id v15;
  double v16;
  double Height;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  double v24;
  double v25;
  double v26;
  unint64_t v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  _QWORD v35[6];
  CGRect v36;

  v1 = v0;
  v2 = objc_msgSend(v0, "superview");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "frame");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    if (qword_10047ADE0 != -1)
      swift_once(&qword_10047ADE0, sub_100195900);
    v12 = *(double *)&qword_1004AF8C8;
    v13 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v14 = objc_msgSend(v13, "orientation");

    v16 = 0.0;
    switch((unint64_t)v14)
    {
      case 1uLL:
        v36.origin.x = v5;
        v36.origin.y = v7;
        v36.size.width = v9;
        v36.size.height = v11;
        Height = CGRectGetHeight(v36);
        objc_msgSend(v1, "frame");
        v19 = Height + v18 * -0.5 - (v12 + v12);
        if ((*((_BYTE *)v1 + OBJC_IVAR____TtC7Measure14TapToRadarView_rtlFormat) & 1) != 0)
        {
          v20 = v12;
        }
        else
        {
          objc_msgSend(v1, "frame");
          v20 = v9 + v26 * -0.5 - (v12 + v12);
        }
        break;
      case 2uLL:
        v16 = 3.14159265;
        if (*((_BYTE *)v1 + OBJC_IVAR____TtC7Measure14TapToRadarView_rtlFormat) == 1)
        {
          objc_msgSend(v1, "frame");
          v20 = v9 + v21 * -0.5 - (v12 + v12);
        }
        else
        {
          v20 = v12;
        }
        v19 = v12;
        break;
      case 3uLL:
        v19 = v12;
        if ((*((_BYTE *)v1 + OBJC_IVAR____TtC7Measure14TapToRadarView_rtlFormat) & 1) == 0)
        {
          v15 = objc_msgSend(v1, "frame");
          v19 = v11 + v22 * -0.5 - (v12 + v12);
        }
        v16 = *(double *)CGFloat.piDiv2.unsafeMutableAddressor(v15);
        v20 = v12;
        break;
      case 4uLL:
        v23 = objc_msgSend(v1, "frame");
        v20 = v9 + v24 * -0.5 - (v12 + v12);
        v25 = -0.0;
        if (*((_BYTE *)v1 + OBJC_IVAR____TtC7Measure14TapToRadarView_rtlFormat))
          v25 = v9;
        v19 = v12 + v25;
        v16 = -*(double *)CGFloat.piDiv2.unsafeMutableAddressor(v23);
        break;
      default:
        v20 = 0.0;
        v19 = 0.0;
        break;
    }
    v27 = sub_10000F0D8();
    if ((static UIDevice.isIPhone()(v27) & 1) != 0)
    {
      if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
      {
        v28 = *(double *)&qword_1004AF8C8 * 3.0 + 49.0;
        if (qword_10047AE40 != -1)
          swift_once(&qword_10047AE40, sub_100195C18);
        v29 = v28 + *(double *)&qword_1004AF930 + *(double *)&qword_1004AF930;
      }
      else
      {
        v29 = *(double *)&qword_1004AF8C8 + 49.0;
      }
      if (*((_BYTE *)v1 + OBJC_IVAR____TtC7Measure14TapToRadarView_rtlFormat) == 1)
      {
        objc_msgSend(v1, "frame");
        v12 = v9 - v30 - v12;
      }
      objc_msgSend(v1, "frame");
      objc_msgSend(v1, "setFrame:", v12, v11 - v29);
    }
    else
    {
      objc_msgSend(v1, "frame");
      objc_msgSend(v1, "setFrame:", v20, v19);
    }
    v31 = (void *)objc_opt_self(UIView);
    v32 = swift_allocObject(&unk_10044B450, 32, 7);
    *(_QWORD *)(v32 + 16) = v1;
    *(double *)(v32 + 24) = v16;
    v35[4] = sub_1001B36DC;
    v35[5] = v32;
    v35[0] = _NSConcreteStackBlock;
    v35[1] = 1107296256;
    v35[2] = sub_10003ECA0;
    v35[3] = &unk_10044B468;
    v33 = _Block_copy(v35);
    v34 = v1;
    swift_release();
    objc_msgSend(v31, "animateWithDuration:delay:options:animations:completion:", 0, v33, 0, 0.25, 0.25);
    _Block_release(v33);
  }
}

void sub_1001B35B0(void *a1, CGFloat a2)
{
  id v3;
  CATransform3D v4;
  CGAffineTransform m;

  v3 = objc_msgSend(a1, "layer");
  CGAffineTransformMakeRotation((CGAffineTransform *)&v4, a2);
  *(_OWORD *)&m.a = *(_OWORD *)&v4.m11;
  *(_OWORD *)&m.c = *(_OWORD *)&v4.m13;
  *(_OWORD *)&m.tx = *(_OWORD *)&v4.m21;
  CATransform3DMakeAffineTransform(&v4, &m);
  objc_msgSend(v3, "setTransform:", &v4);

}

uint64_t type metadata accessor for TapToRadarView()
{
  return objc_opt_self(_TtC7Measure14TapToRadarView);
}

uint64_t sub_1001B36B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001B36DC()
{
  uint64_t v0;

  sub_1001B35B0(*(void **)(v0 + 16), *(CGFloat *)(v0 + 24));
}

uint64_t sub_1001B36E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001B36F8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001B3700()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001B3724()
{
  sub_1001B3020();
}

uint64_t sub_1001B3744()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001B375C()
{
  qword_100489A70 = 0x404C000000000000;
}

void sub_1001B376C()
{
  qword_100489A78 = 0x4028000000000000;
}

void sub_1001B377C()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  void *v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t i;
  id v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t j;
  id v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t k;
  id v114;
  void *v115;
  uint64_t v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  id v125;
  id v126;
  _BYTE v127[24];
  _BYTE v128[24];
  _BYTE v129[24];

  v1 = *(void **)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_sketchView];
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "lightGrayColor");
  objc_msgSend(v1, "setBackgroundColor:", v3);

  v4 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v5 = objc_msgSend(v4, "preferredContentSizeCategory");

  LOBYTE(v4) = UIContentSizeCategory.isAccessibilityCategory.getter(v5);
  v125 = v1;
  if ((v4 & 1) != 0)
  {
    v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleCellTitle];
    v7 = OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label;
    v8 = *(void **)(v6 + OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label);
    v9 = (void *)objc_opt_self(UIFont);
    v10 = v8;
    v11 = objc_msgSend(v9, "preferredFontForTextStyle:", UIFontTextStyleBody);
    v12 = objc_msgSend(v11, "fontDescriptor");

    v13 = objc_msgSend(v12, "fontDescriptorWithSymbolicTraits:", 2);
    if (v13)
    {
      v14 = objc_msgSend(v9, "fontWithDescriptor:size:", v13, 0.0);

      objc_msgSend(v10, "setFont:", v14);
      v123 = v6;
      v15 = *(id *)(v6 + v7);
      v16 = objc_msgSend(v2, "labelColor");
      objc_msgSend(v15, "setTextColor:", v16);

      v17 = *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleLengthLabel];
      v18 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel;
      v19 = *(id *)(v17 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
      v20 = objc_msgSend(v9, "preferredFontForTextStyle:", UIFontTextStyleBody);
      v21 = objc_msgSend(v20, "fontDescriptor");

      v22 = objc_msgSend(v21, "fontDescriptorWithSymbolicTraits:", 2);
      if (v22)
      {
        v23 = objc_msgSend(v9, "fontWithDescriptor:size:", v22, 0.0);

        objc_msgSend(v19, "setFont:", v23);
        v24 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel;
        v25 = *(id *)(v17 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
        v26 = objc_msgSend(v9, "preferredFontForTextStyle:", UIFontTextStyleLargeTitle);
        objc_msgSend(v25, "setFont:", v26);

        v27 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel;
        v28 = *(id *)(v17 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
        v29 = objc_msgSend(v9, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
        v30 = objc_msgSend(v29, "fontDescriptor");

        v31 = objc_msgSend(v30, "fontDescriptorWithSymbolicTraits:", 2);
        if (v31)
        {
          v32 = objc_msgSend(v9, "fontWithDescriptor:size:", v31, 0.0);

          objc_msgSend(v28, "setFont:", v32);
          v33 = *(id *)(v17 + v18);
          v34 = objc_msgSend(v2, "secondaryLabelColor");
          objc_msgSend(v33, "setTextColor:", v34);

          v35 = *(id *)(v17 + v24);
          v36 = objc_msgSend(v2, "labelColor");
          objc_msgSend(v35, "setTextColor:", v36);

          v122 = v17;
          v37 = *(id *)(v17 + v27);
          v38 = objc_msgSend(v2, "secondaryLabelColor");
          objc_msgSend(v37, "setTextColor:", v38);

          v124 = v0;
          v39 = *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleWidthLabel];
          v40 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel;
          v41 = *(id *)(v39 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
          v42 = objc_msgSend(v9, "preferredFontForTextStyle:", UIFontTextStyleBody);
          v43 = objc_msgSend(v42, "fontDescriptor");

          v44 = objc_msgSend(v43, "fontDescriptorWithSymbolicTraits:", 2);
          if (v44)
          {
            v45 = objc_msgSend(v9, "fontWithDescriptor:size:", v44, 0.0);

            objc_msgSend(v41, "setFont:", v45);
            v46 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel;
            v47 = *(id *)(v39 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
            v48 = objc_msgSend(v9, "preferredFontForTextStyle:", UIFontTextStyleLargeTitle);
            objc_msgSend(v47, "setFont:", v48);

            v49 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel;
            v50 = *(id *)(v39 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
            v51 = objc_msgSend(v9, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
            v52 = objc_msgSend(v51, "fontDescriptor");

            v53 = objc_msgSend(v52, "fontDescriptorWithSymbolicTraits:", 2);
            if (v53)
            {
              v54 = objc_msgSend(v9, "fontWithDescriptor:size:", v53, 0.0);

              objc_msgSend(v50, "setFont:", v54);
              v55 = *(id *)(v39 + v40);
              v56 = objc_msgSend(v2, "secondaryLabelColor");
              objc_msgSend(v55, "setTextColor:", v56);

              v57 = *(id *)(v39 + v46);
              v58 = objc_msgSend(v2, "labelColor");
              objc_msgSend(v57, "setTextColor:", v58);

              v59 = *(id *)(v39 + v49);
              v60 = objc_msgSend(v2, "secondaryLabelColor");
              objc_msgSend(v59, "setTextColor:", v60);

              v61 = *(_QWORD *)&v124[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleHeightLabel];
              v62 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel;
              v63 = *(id *)(v61 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
              v64 = objc_msgSend(v9, "preferredFontForTextStyle:", UIFontTextStyleBody);
              v65 = objc_msgSend(v64, "fontDescriptor");

              v66 = objc_msgSend(v65, "fontDescriptorWithSymbolicTraits:", 2);
              if (v66)
              {
                v67 = objc_msgSend(v9, "fontWithDescriptor:size:", v66, 0.0);

                objc_msgSend(v63, "setFont:", v67);
                v68 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel;
                v69 = *(id *)(v61 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
                v70 = objc_msgSend(v9, "preferredFontForTextStyle:", UIFontTextStyleLargeTitle);
                objc_msgSend(v69, "setFont:", v70);

                v71 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel;
                v72 = *(id *)(v61 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
                v73 = objc_msgSend(v9, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
                v74 = objc_msgSend(v73, "fontDescriptor");

                v75 = objc_msgSend(v74, "fontDescriptorWithSymbolicTraits:", 2);
                if (v75)
                {
                  v76 = objc_msgSend(v9, "fontWithDescriptor:size:", v75, 0.0);

                  objc_msgSend(v72, "setFont:", v76);
                  v77 = *(id *)(v61 + v62);
                  v78 = objc_msgSend(v2, "secondaryLabelColor");
                  objc_msgSend(v77, "setTextColor:", v78);

                  v79 = *(id *)(v61 + v68);
                  v80 = objc_msgSend(v2, "labelColor");
                  objc_msgSend(v79, "setTextColor:", v80);

                  v81 = *(id *)(v61 + v71);
                  v82 = objc_msgSend(v2, "secondaryLabelColor");
                  objc_msgSend(v81, "setTextColor:", v82);

                  v83 = objc_msgSend(v124, "contentView");
                  objc_msgSend(v83, "addSubview:", v125);

                  v84 = objc_msgSend(v124, "contentView");
                  objc_msgSend(v84, "addSubview:", v123);

                  v85 = objc_msgSend(v124, "contentView");
                  objc_msgSend(v85, "addSubview:", v122);

                  v86 = objc_msgSend(v124, "contentView");
                  objc_msgSend(v86, "addSubview:", v39);

                  v126 = objc_msgSend(v124, "contentView");
                  objc_msgSend(v126, "addSubview:", v61);

                  return;
                }
                goto LABEL_57;
              }
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
              goto LABEL_58;
            }
LABEL_55:
            __break(1u);
            goto LABEL_56;
          }
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v87 = *(void **)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_cellTitle];
  v88 = (void *)objc_opt_self(UIFont);
  v89 = objc_msgSend(v88, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v90 = objc_msgSend(v89, "fontDescriptor");

  v91 = objc_msgSend(v90, "fontDescriptorWithSymbolicTraits:", 2);
  if (v91)
  {
    v92 = objc_msgSend(v88, "fontWithDescriptor:size:", v91, 0.0);

    objc_msgSend(v87, "setFont:", v92);
    v93 = *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_lengthLabels];
    v94 = (uint64_t *)(v93 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_marginConstraints);
    swift_beginAccess(v93 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_marginConstraints, v129, 0, 0);
    v95 = *v94;
    if ((unint64_t)*v94 >> 62)
    {
      if (v95 < 0)
        v100 = *v94;
      else
        v100 = v95 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v95, 2);
      v96 = _CocoaArrayWrapper.endIndex.getter(v100);
      if (!v96)
        goto LABEL_23;
    }
    else
    {
      v96 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v95, 2);
      if (!v96)
        goto LABEL_23;
    }
    if (v96 < 1)
    {
      __break(1u);
      goto LABEL_49;
    }
    for (i = 0; i != v96; ++i)
    {
      if ((v95 & 0xC000000000000001) != 0)
        v98 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v95);
      else
        v98 = *(id *)(v95 + 8 * i + 32);
      v99 = v98;
      objc_msgSend(v98, "setConstant:", 0.0);

    }
LABEL_23:
    swift_bridgeObjectRelease_n(v95, 2);
    v101 = *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_widthLabels];
    v102 = (uint64_t *)(v101 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_marginConstraints);
    swift_beginAccess(v101 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_marginConstraints, v128, 0, 0);
    v103 = *v102;
    if ((unint64_t)*v102 >> 62)
    {
      if (v103 < 0)
        v108 = *v102;
      else
        v108 = v103 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v103, 2);
      v104 = _CocoaArrayWrapper.endIndex.getter(v108);
      if (!v104)
        goto LABEL_35;
    }
    else
    {
      v104 = *(_QWORD *)((v103 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v103, 2);
      if (!v104)
        goto LABEL_35;
    }
    if (v104 >= 1)
    {
      for (j = 0; j != v104; ++j)
      {
        if ((v103 & 0xC000000000000001) != 0)
          v106 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v103);
        else
          v106 = *(id *)(v103 + 8 * j + 32);
        v107 = v106;
        objc_msgSend(v106, "setConstant:", 0.0);

      }
LABEL_35:
      swift_bridgeObjectRelease_n(v103, 2);
      v109 = *(_QWORD *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_heightLabels];
      v110 = (uint64_t *)(v109 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_marginConstraints);
      swift_beginAccess(v109 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_marginConstraints, v127, 0, 0);
      v111 = *v110;
      if ((unint64_t)*v110 >> 62)
      {
        if (v111 < 0)
          v116 = *v110;
        else
          v116 = v111 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v111, 2);
        v112 = _CocoaArrayWrapper.endIndex.getter(v116);
        if (v112)
        {
LABEL_37:
          if (v112 >= 1)
          {
            for (k = 0; k != v112; ++k)
            {
              if ((v111 & 0xC000000000000001) != 0)
                v114 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(k, v111);
              else
                v114 = *(id *)(v111 + 8 * k + 32);
              v115 = v114;
              objc_msgSend(v114, "setConstant:", 0.0);

            }
            goto LABEL_47;
          }
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
      }
      else
      {
        v112 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(v111, 2);
        if (v112)
          goto LABEL_37;
      }
LABEL_47:
      swift_bridgeObjectRelease_n(v111, 2);
      v117 = objc_msgSend(v0, "contentView");
      objc_msgSend(v117, "addSubview:", v125);

      v118 = objc_msgSend(v0, "contentView");
      objc_msgSend(v118, "addSubview:", v87);

      v119 = objc_msgSend(v0, "contentView");
      objc_msgSend(v119, "addSubview:", v93);

      v120 = objc_msgSend(v0, "contentView");
      objc_msgSend(v120, "addSubview:", v101);

      v121 = objc_msgSend(v0, "contentView");
      objc_msgSend(v121, "addSubview:", v109);

      return;
    }
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
LABEL_58:
  __break(1u);
}

void sub_1001B46BC()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  void *v69;
  uint64_t v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  uint64_t v126;
  char *v127;
  id v128;
  id v129;
  id v130;
  id v131;
  void *v132;
  id v133;
  Class isa;

  v1 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  if ((v1 & 1) != 0)
  {
    v3 = *(void **)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_sketchView];
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v4 = *(void **)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleCellTitle];
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v128 = *(id *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleLengthLabel];
    objc_msgSend(v128, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v133 = *(id *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleWidthLabel];
    objc_msgSend(v133, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v130 = *(id *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleHeightLabel];
    objc_msgSend(v130, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v132 = (void *)objc_opt_self(NSLayoutConstraint);
    v5 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
    v6 = swift_allocObject(v5, 168, 7);
    *(_OWORD *)(v6 + 16) = xmmword_1003BBBE0;
    v7 = objc_msgSend(v3, "leadingAnchor");
    v8 = objc_msgSend(v0, "contentView");
    v9 = objc_msgSend(v8, "leadingAnchor");

    if (qword_10047A758 != -1)
      swift_once(&qword_10047A758, sub_10000EF18);
    v10 = objc_msgSend(v7, "constraintEqualToAnchor:constant:", v9, *(double *)&qword_1004AF090);

    *(_QWORD *)(v6 + 32) = v10;
    v11 = objc_msgSend(v3, "topAnchor");
    v12 = objc_msgSend(v0, "contentView");
    v13 = objc_msgSend(v12, "topAnchor");

    v14 = objc_msgSend(v11, "constraintEqualToAnchor:constant:", v13, *(double *)&qword_1004AF090);
    *(_QWORD *)(v6 + 40) = v14;
    v15 = objc_msgSend(v3, "widthAnchor");
    if (qword_10047B158 != -1)
      swift_once(&qword_10047B158, sub_1001B375C);
    v16 = objc_msgSend(v15, "constraintEqualToConstant:", *(double *)&qword_100489A70);

    *(_QWORD *)(v6 + 48) = v16;
    v17 = objc_msgSend(v3, "heightAnchor");
    v18 = objc_msgSend(v3, "widthAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

    *(_QWORD *)(v6 + 56) = v19;
    v20 = objc_msgSend(v4, "leadingAnchor");
    v21 = objc_msgSend(v0, "contentView");
    v22 = objc_msgSend(v21, "leadingAnchor");

    v23 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v22, *(double *)&qword_1004AF090);
    *(_QWORD *)(v6 + 64) = v23;
    v24 = objc_msgSend(v4, "topAnchor");
    v25 = objc_msgSend(v3, "bottomAnchor");
    v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, *(double *)&qword_1004AF090);

    *(_QWORD *)(v6 + 72) = v26;
    v27 = objc_msgSend(v4, "trailingAnchor");
    v28 = objc_msgSend(v0, "contentView");
    v29 = objc_msgSend(v28, "trailingAnchor");

    v30 = objc_msgSend(v27, "constraintEqualToAnchor:", v29);
    *(_QWORD *)(v6 + 80) = v30;
    v31 = objc_msgSend(v128, "leadingAnchor");
    v32 = objc_msgSend(v0, "contentView");
    v33 = objc_msgSend(v32, "leadingAnchor");

    v34 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v33, *(double *)&qword_1004AF090);
    *(_QWORD *)(v6 + 88) = v34;
    v35 = objc_msgSend(v128, "topAnchor");
    v36 = objc_msgSend(v4, "bottomAnchor");
    if (qword_10047A760 != -1)
      swift_once(&qword_10047A760, sub_10000EF28);
    v37 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v36, *(double *)&qword_1004AF098);

    *(_QWORD *)(v6 + 96) = v37;
    v38 = objc_msgSend(v128, "trailingAnchor");
    v39 = objc_msgSend(v0, "contentView");
    v40 = objc_msgSend(v39, "trailingAnchor");

    v41 = objc_msgSend(v38, "constraintEqualToAnchor:", v40);
    *(_QWORD *)(v6 + 104) = v41;
    v42 = objc_msgSend(v133, "leadingAnchor");
    v43 = objc_msgSend(v0, "contentView");
    v44 = objc_msgSend(v43, "leadingAnchor");

    v45 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v44, *(double *)&qword_1004AF090);
    *(_QWORD *)(v6 + 112) = v45;
    v46 = objc_msgSend(v133, "topAnchor");
    v47 = objc_msgSend(v128, "bottomAnchor");
    v48 = objc_msgSend(v46, "constraintEqualToAnchor:constant:", v47, *(double *)&qword_1004AF098);

    *(_QWORD *)(v6 + 120) = v48;
    v49 = objc_msgSend(v133, "trailingAnchor");
    v50 = objc_msgSend(v0, "contentView");
    v51 = objc_msgSend(v50, "trailingAnchor");

    v52 = objc_msgSend(v49, "constraintEqualToAnchor:", v51);
    *(_QWORD *)(v6 + 128) = v52;
    v53 = objc_msgSend(v130, "leadingAnchor");
    v54 = objc_msgSend(v0, "contentView");
    v55 = objc_msgSend(v54, "leadingAnchor");

    v56 = objc_msgSend(v53, "constraintEqualToAnchor:constant:", v55, *(double *)&qword_1004AF090);
    *(_QWORD *)(v6 + 136) = v56;
    v57 = objc_msgSend(v130, "topAnchor");
    v58 = objc_msgSend(v133, "bottomAnchor");
    v59 = objc_msgSend(v57, "constraintEqualToAnchor:constant:", v58, *(double *)&qword_1004AF098);

    *(_QWORD *)(v6 + 144) = v59;
    v60 = objc_msgSend(v130, "trailingAnchor");
    v61 = objc_msgSend(v0, "contentView");
    v62 = objc_msgSend(v61, "trailingAnchor");

    v63 = objc_msgSend(v60, "constraintEqualToAnchor:", v62);
    *(_QWORD *)(v6 + 152) = v63;
    v64 = objc_msgSend(v130, "bottomAnchor");
    v65 = objc_msgSend(v0, "contentView");
    v66 = objc_msgSend(v65, "bottomAnchor");

    v67 = objc_msgSend(v64, "constraintEqualToAnchor:constant:", v66, -*(double *)&qword_1004AF090);
  }
  else
  {
    v68 = *(void **)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_cellTitle];
    objc_msgSend(v68, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v69 = *(void **)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_sketchView];
    objc_msgSend(v69, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v127 = *(char **)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_lengthLabels];
    objc_msgSend(v127, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v129 = *(id *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_widthLabels];
    objc_msgSend(v129, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v131 = *(id *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_heightLabels];
    objc_msgSend(v131, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v132 = (void *)objc_opt_self(NSLayoutConstraint);
    v70 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
    v6 = swift_allocObject(v70, 168, 7);
    *(_OWORD *)(v6 + 16) = xmmword_1003BBBE0;
    v71 = objc_msgSend(v69, "leadingAnchor");
    v72 = objc_msgSend(v0, "contentView");
    v73 = objc_msgSend(v72, "leadingAnchor");

    if (qword_10047A758 != -1)
      swift_once(&qword_10047A758, sub_10000EF18);
    v74 = objc_msgSend(v71, "constraintEqualToAnchor:constant:", v73, *(double *)&qword_1004AF090);

    *(_QWORD *)(v6 + 32) = v74;
    v75 = objc_msgSend(v69, "topAnchor");
    v76 = objc_msgSend(v0, "contentView");
    v77 = objc_msgSend(v76, "topAnchor");

    v78 = objc_msgSend(v75, "constraintEqualToAnchor:constant:", v77, *(double *)&qword_1004AF090);
    *(_QWORD *)(v6 + 40) = v78;
    v79 = objc_msgSend(v69, "widthAnchor");
    if (qword_10047B158 != -1)
      swift_once(&qword_10047B158, sub_1001B375C);
    v80 = objc_msgSend(v79, "constraintEqualToConstant:", *(double *)&qword_100489A70);

    *(_QWORD *)(v6 + 48) = v80;
    v81 = objc_msgSend(v69, "heightAnchor");
    v82 = objc_msgSend(v69, "widthAnchor");
    v83 = objc_msgSend(v81, "constraintEqualToAnchor:", v82);

    *(_QWORD *)(v6 + 56) = v83;
    v84 = objc_msgSend(v68, "leadingAnchor");
    v85 = objc_msgSend(v69, "trailingAnchor");
    v86 = objc_msgSend(v84, "constraintEqualToAnchor:constant:", v85, *(double *)&qword_1004AF090);

    *(_QWORD *)(v6 + 64) = v86;
    v87 = objc_msgSend(v68, "topAnchor");
    v88 = objc_msgSend(v0, "contentView");
    v89 = objc_msgSend(v88, "topAnchor");

    if (qword_10047B160 != -1)
      swift_once(&qword_10047B160, sub_1001B376C);
    v90 = objc_msgSend(v87, "constraintEqualToAnchor:constant:", v89, *(double *)&qword_100489A78);

    *(_QWORD *)(v6 + 72) = v90;
    v91 = objc_msgSend(v68, "trailingAnchor");
    v92 = objc_msgSend(*(id *)&v127[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels], "leadingAnchor");
    v93 = objc_msgSend(v91, "constraintEqualToAnchor:constant:", v92, -*(double *)&qword_1004AF090);

    *(_QWORD *)(v6 + 80) = v93;
    v94 = objc_msgSend(v127, "leadingAnchor");
    v95 = objc_msgSend(v69, "trailingAnchor");
    v96 = objc_msgSend(v94, "constraintEqualToAnchor:constant:", v95, *(double *)&qword_1004AF090);

    *(_QWORD *)(v6 + 88) = v96;
    v97 = objc_msgSend(v127, "topAnchor");
    v98 = objc_msgSend(v68, "bottomAnchor");
    v99 = objc_msgSend(v97, "constraintEqualToAnchor:constant:", v98, *(double *)&qword_1004AF090);

    *(_QWORD *)(v6 + 96) = v99;
    v100 = objc_msgSend(v127, "trailingAnchor");
    v101 = objc_msgSend(v0, "contentView");
    v102 = objc_msgSend(v101, "trailingAnchor");

    v103 = objc_msgSend(v100, "constraintEqualToAnchor:", v102);
    *(_QWORD *)(v6 + 104) = v103;
    v104 = objc_msgSend(v129, "leadingAnchor");
    v105 = objc_msgSend(v69, "trailingAnchor");
    v106 = objc_msgSend(v104, "constraintEqualToAnchor:constant:", v105, *(double *)&qword_1004AF090);

    *(_QWORD *)(v6 + 112) = v106;
    v107 = objc_msgSend(v129, "topAnchor");
    v108 = objc_msgSend(v127, "bottomAnchor");
    v109 = objc_msgSend(v107, "constraintEqualToAnchor:constant:", v108, *(double *)&qword_1004AF090);

    *(_QWORD *)(v6 + 120) = v109;
    v110 = objc_msgSend(v129, "trailingAnchor");
    v111 = objc_msgSend(v0, "contentView");
    v112 = objc_msgSend(v111, "trailingAnchor");

    v113 = objc_msgSend(v110, "constraintEqualToAnchor:", v112);
    *(_QWORD *)(v6 + 128) = v113;
    v114 = objc_msgSend(v131, "leadingAnchor");
    v115 = objc_msgSend(v69, "trailingAnchor");
    v116 = objc_msgSend(v114, "constraintEqualToAnchor:constant:", v115, *(double *)&qword_1004AF090);

    *(_QWORD *)(v6 + 136) = v116;
    v117 = objc_msgSend(v131, "topAnchor");
    v118 = objc_msgSend(v129, "bottomAnchor");
    v119 = objc_msgSend(v117, "constraintEqualToAnchor:constant:", v118, *(double *)&qword_1004AF090);

    *(_QWORD *)(v6 + 144) = v119;
    v120 = objc_msgSend(v131, "trailingAnchor");
    v121 = objc_msgSend(v0, "contentView");
    v122 = objc_msgSend(v121, "trailingAnchor");

    v123 = objc_msgSend(v120, "constraintEqualToAnchor:", v122);
    *(_QWORD *)(v6 + 152) = v123;
    v64 = objc_msgSend(v131, "bottomAnchor");
    v124 = objc_msgSend(v0, "contentView");
    v66 = objc_msgSend(v124, "bottomAnchor");

    v67 = objc_msgSend(v64, "constraintEqualToAnchor:constant:", v66, -*(double *)&qword_1004AF090);
  }
  v125 = v67;

  *(_QWORD *)(v6 + 160) = v125;
  specialized Array._endMutation()(v126);
  sub_10002277C();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v132, "activateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

}

id sub_1001B593C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  NSString v23;
  id v24;
  id v25;
  objc_super v27;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  v8 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_sketchView;
  v9 = type metadata accessor for SketchObject();
  v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9));
  v11 = v4;
  *(_QWORD *)&v4[v8] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_cellTitle;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v13 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_lengthLabels;
  v14 = (objc_class *)type metadata accessor for MeasureTableViewCellCommonContentView();
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone(v14), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_widthLabels;
  *(_QWORD *)&v11[v15] = objc_msgSend(objc_allocWithZone(v14), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_heightLabels;
  *(_QWORD *)&v11[v16] = objc_msgSend(objc_allocWithZone(v14), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleCellTitle;
  *(_QWORD *)&v11[v17] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AccessibilitySingleStack()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v18 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleLengthLabel;
  v19 = (objc_class *)type metadata accessor for AccessibilityTripleStack();
  *(_QWORD *)&v11[v18] = objc_msgSend(objc_allocWithZone(v19), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v20 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleWidthLabel;
  *(_QWORD *)&v11[v20] = objc_msgSend(objc_allocWithZone(v19), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v21 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleHeightLabel;
  *(_QWORD *)&v11[v21] = objc_msgSend(objc_allocWithZone(v19), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  if (a3)
  {
    v23 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v22 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v23 = 0;
  }
  v27.receiver = v11;
  v27.super_class = ObjectType;
  v24 = objc_msgSendSuper2(&v27, "initWithStyle:reuseIdentifier:", a1, v23, v22);

  v25 = v24;
  sub_1001B377C();
  sub_1001B46BC();

  return v25;
}

id sub_1001B5BE8(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  objc_super v23;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  v5 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_sketchView;
  v6 = type metadata accessor for SketchObject();
  v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6));
  v8 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_cellTitle;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v10 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_lengthLabels;
  v11 = (objc_class *)type metadata accessor for MeasureTableViewCellCommonContentView();
  *(_QWORD *)&v8[v10] = objc_msgSend(objc_allocWithZone(v11), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_widthLabels;
  *(_QWORD *)&v8[v12] = objc_msgSend(objc_allocWithZone(v11), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_heightLabels;
  *(_QWORD *)&v8[v13] = objc_msgSend(objc_allocWithZone(v11), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleCellTitle;
  *(_QWORD *)&v8[v14] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AccessibilitySingleStack()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleLengthLabel;
  v16 = (objc_class *)type metadata accessor for AccessibilityTripleStack();
  *(_QWORD *)&v8[v15] = objc_msgSend(objc_allocWithZone(v16), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleWidthLabel;
  *(_QWORD *)&v8[v17] = objc_msgSend(objc_allocWithZone(v16), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v18 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleHeightLabel;
  *(_QWORD *)&v8[v18] = objc_msgSend(objc_allocWithZone(v16), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v23.receiver = v8;
  v23.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v23, "initWithCoder:", a1);
  v20 = v19;
  if (v19)
  {
    v21 = v19;
    sub_1001B377C();
    sub_1001B46BC();

  }
  return v20;
}

uint64_t sub_1001B5E3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  id v8;
  id v9;
  char v10;
  void *v11;
  NSString v12;
  NSString v13;
  void *v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  id v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  id v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  id v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  uint64_t v39;
  void *v40;
  NSString v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  Swift::String v47;
  Swift::String v48;
  void *object;
  NSString v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  NSString v59;
  char v60;
  uint64_t v61;
  id v62;
  id v63;
  Swift::String v64;
  Swift::String v65;
  void *v66;
  NSString v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  NSString v76;
  char v77;
  uint64_t v78;
  id v79;
  id v80;
  Swift::String v81;
  Swift::String v82;
  void *v83;
  NSString v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  NSString v94;
  char v95;
  uint64_t result;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  NSString v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  char *v104;
  _BYTE v105[848];
  _BYTE v106[848];
  Swift::String v107;
  Swift::String v108;
  Swift::String v109;
  Swift::String v110;
  Swift::String v111;
  Swift::String v112;
  Swift::String v113;
  Swift::String v114;
  Swift::String v115;

  v2 = v1;
  v4 = type metadata accessor for MeasurementHistoryItem(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000226FC(a1, (uint64_t)v6);
  sub_10001F970(&v6[*(int *)(v4 + 28)], v105);
  sub_10001F970(v105, v106);
  if (sub_10001F9AC((uint64_t)v106) == 2)
  {
    v7 = (uint64_t *)sub_10001F9B8((uint64_t)v106);
    v8 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v9 = objc_msgSend(v8, "preferredContentSizeCategory");

    v10 = UIContentSizeCategory.isAccessibilityCategory.getter(v9);
    v104 = v6;
    if ((v10 & 1) != 0)
    {
      v11 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleCellTitle)
                     + OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label);
      v12 = String._bridgeToObjectiveC()();
      objc_msgSend(v11, "setText:", v12);

      v13 = String._bridgeToObjectiveC()();
      objc_msgSend(v11, "setAccessibilityLabel:", v13);

      v14 = (void *)objc_opt_self(NSBundle);
      v15 = objc_msgSend(v14, "mainBundle");
      v107._object = (void *)0xE000000000000000;
      v16._countAndFlagsBits = 0x4C5F5443454A424FLL;
      v16._object = (void *)0xED00004854474E45;
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      v107._countAndFlagsBits = 0;
      v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v107);

      v19 = objc_msgSend(v14, "mainBundle");
      v108._object = (void *)0xE000000000000000;
      v20._countAndFlagsBits = 0x4C5F5443454A424FLL;
      v20._object = (void *)0xED00004854474E45;
      v21._countAndFlagsBits = 0;
      v21._object = (void *)0xE000000000000000;
      v108._countAndFlagsBits = 0;
      v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v108);

      sub_100125740(v18._countAndFlagsBits, (uint64_t)v18._object, v22._countAndFlagsBits, v22._object, v7[5], v7[6], v7[7], v7[8], v7[10], v7[11], v7[12], v7[13]);
      swift_bridgeObjectRelease(v18._object);
      v23 = objc_msgSend(v14, "mainBundle", swift_bridgeObjectRelease(v22._object).n128_f64[0]);
      v109._object = (void *)0xE000000000000000;
      v24._countAndFlagsBits = 0x575F5443454A424FLL;
      v24._object = (void *)0xEC00000048544449;
      v25._countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      v109._countAndFlagsBits = 0;
      v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v109);

      v27 = objc_msgSend(v14, "mainBundle");
      v110._object = (void *)0xE000000000000000;
      v28._countAndFlagsBits = 0x4C5F5443454A424FLL;
      v28._object = (void *)0xED00004854474E45;
      v29._countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      v110._countAndFlagsBits = 0;
      v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v110);

      sub_100125740(v26._countAndFlagsBits, (uint64_t)v26._object, v30._countAndFlagsBits, v30._object, v7[20], v7[21], v7[22], v7[23], v7[25], v7[26], v7[27], v7[28]);
      swift_bridgeObjectRelease(v26._object);
      v31 = objc_msgSend(v14, "mainBundle", swift_bridgeObjectRelease(v30._object).n128_f64[0]);
      v111._object = (void *)0xE000000000000000;
      v32._countAndFlagsBits = 0x485F5443454A424FLL;
      v32._object = (void *)0xED00005448474945;
      v33._countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      v111._countAndFlagsBits = 0;
      v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, (Swift::String_optional)0, (NSBundle)v31, v33, v111);

      v35 = objc_msgSend(v14, "mainBundle");
      v112._object = (void *)0xE000000000000000;
      v36._countAndFlagsBits = 0x485F5443454A424FLL;
      v36._object = (void *)0xED00005448474945;
      v37._countAndFlagsBits = 0;
      v37._object = (void *)0xE000000000000000;
      v112._countAndFlagsBits = 0;
      v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)v35, v37, v112);

      sub_100125740(v34._countAndFlagsBits, (uint64_t)v34._object, v38._countAndFlagsBits, v38._object, v7[35], v7[36], v7[37], v7[38], v7[40], v7[41], v7[42], v7[43]);
      swift_bridgeObjectRelease(v34._object);
      swift_bridgeObjectRelease(v38._object);
      v39 = (uint64_t)v104;
    }
    else
    {
      v40 = *(void **)(v2 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_cellTitle);
      v41 = String._bridgeToObjectiveC()();
      objc_msgSend(v40, "setText:", v41);

      v103 = v2;
      v42 = *(_QWORD *)(v2 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_lengthLabels);
      v43 = *(void **)(v42 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
      v44 = (void *)objc_opt_self(NSBundle);
      v45 = v43;
      v102 = v44;
      v46 = objc_msgSend(v44, "mainBundle");
      v113._object = (void *)0xE000000000000000;
      v47._countAndFlagsBits = 0x4C5F5443454A424FLL;
      v47._object = (void *)0xED00004854474E45;
      v48._countAndFlagsBits = 0;
      v48._object = (void *)0xE000000000000000;
      v113._countAndFlagsBits = 0;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, (Swift::String_optional)0, (NSBundle)v46, v48, v113)._object;

      v50 = String._bridgeToObjectiveC()();
      objc_msgSend(v45, "setText:", v50, swift_bridgeObjectRelease(object).n128_f64[0]);

      v51 = *v7;
      v52 = v7[1];
      v53 = v7[5];
      v54 = v7[6];
      v55 = v7[7];
      v100 = (NSString)v7[8];
      v101 = v55;
      v56 = v7[10];
      v98 = v7[11];
      v99 = v56;
      v57 = v7[13];
      v97 = v7[12];
      v58 = *(void **)(v42 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits);
      v59 = String._bridgeToObjectiveC()();
      objc_msgSend(v58, "setText:", v59);

      if (v51 == v53 && v52 == v54)
        v60 = 1;
      else
        v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v52, v53, v54, 0);
      sub_100134B8C(v53, v54, v101, v100, v99, v98, v97, v57, v60 & 1);
      v61 = *(_QWORD *)(v103 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_widthLabels);
      v62 = *(id *)(v61 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
      v63 = objc_msgSend(v102, "mainBundle");
      v114._object = (void *)0xE000000000000000;
      v64._countAndFlagsBits = 0x575F5443454A424FLL;
      v64._object = (void *)0xEC00000048544449;
      v65._countAndFlagsBits = 0;
      v65._object = (void *)0xE000000000000000;
      v114._countAndFlagsBits = 0;
      v66 = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)v63, v65, v114)._object;

      v67 = String._bridgeToObjectiveC()();
      objc_msgSend(v62, "setText:", v67, swift_bridgeObjectRelease(v66).n128_f64[0]);

      v69 = v7[15];
      v68 = v7[16];
      v70 = v7[20];
      v71 = v7[21];
      v72 = v7[22];
      v100 = (NSString)v7[23];
      v101 = v72;
      v73 = v7[25];
      v98 = v7[26];
      v99 = v73;
      v74 = v7[28];
      v97 = v7[27];
      v75 = *(void **)(v61 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits);
      v76 = String._bridgeToObjectiveC()();
      objc_msgSend(v75, "setText:", v76);

      if (v69 == v70 && v68 == v71)
        v77 = 1;
      else
        v77 = _stringCompareWithSmolCheck(_:_:expecting:)(v69, v68, v70, v71, 0);
      sub_100134B8C(v70, v71, v101, v100, v99, v98, v97, v74, v77 & 1);
      v78 = *(_QWORD *)(v103 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_heightLabels);
      v79 = *(id *)(v78 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
      v80 = objc_msgSend(v102, "mainBundle");
      v115._object = (void *)0xE000000000000000;
      v81._countAndFlagsBits = 0x485F5443454A424FLL;
      v81._object = (void *)0xED00005448474945;
      v82._countAndFlagsBits = 0;
      v82._object = (void *)0xE000000000000000;
      v115._countAndFlagsBits = 0;
      v83 = NSLocalizedString(_:tableName:bundle:value:comment:)(v81, (Swift::String_optional)0, (NSBundle)v80, v82, v115)._object;

      v84 = String._bridgeToObjectiveC()();
      objc_msgSend(v79, "setText:", v84, swift_bridgeObjectRelease(v83).n128_f64[0]);

      v86 = v7[30];
      v85 = v7[31];
      v87 = v7[35];
      v88 = v7[36];
      v89 = v7[37];
      v102 = (id)v7[38];
      v103 = v89;
      v90 = v7[40];
      v91 = v7[42];
      v100 = (NSString)v7[41];
      v101 = v90;
      v92 = v7[43];
      v93 = *(void **)(v78 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits);
      v94 = String._bridgeToObjectiveC()();
      objc_msgSend(v93, "setText:", v94);

      if (v86 == v87 && v85 == v88)
        v95 = 1;
      else
        v95 = _stringCompareWithSmolCheck(_:_:expecting:)(v86, v85, v87, v88, 0);
      v39 = (uint64_t)v104;
      sub_100134B8C(v87, v88, v103, v102, v101, (uint64_t)v100, v91, v92, v95 & 1);
    }
    return sub_100022740(v39);
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ALL, 0x80000001003D8820, "Measure/ObjectHistoryCell.swift", 31, 2, 223, 0);
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ObjectHistoryCell()
{
  return objc_opt_self(_TtC7Measure17ObjectHistoryCell);
}

id sub_1001B6994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_lengthLabels);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits), "setSelectedRange:", 0, 0);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
  objc_msgSend(*(id *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label), "setSelectedRange:", 0, 0);
  objc_msgSend(*(id *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label), "setSelectedRange:", 0, 0);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_widthLabels);
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits), "setSelectedRange:", 0, 0);
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
  objc_msgSend(*(id *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label), "setSelectedRange:", 0, 0);
  objc_msgSend(*(id *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label), "setSelectedRange:", 0, 0);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_heightLabels);
  objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits), "setSelectedRange:", 0, 0);
  v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
  objc_msgSend(*(id *)(*(_QWORD *)(v6 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label), "setSelectedRange:", 0, 0);
  objc_msgSend(*(id *)(*(_QWORD *)(v6 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label), "setSelectedRange:", 0, 0);
  objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleCellTitle)+ OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label), "setSelectedRange:", 0, 0);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleLengthLabel);
  objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel), "setSelectedRange:", 0, 0);
  objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel), "setSelectedRange:", 0, 0);
  objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel), "setSelectedRange:", 0, 0);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleWidthLabel);
  objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel), "setSelectedRange:", 0, 0);
  objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel), "setSelectedRange:", 0, 0);
  objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel), "setSelectedRange:", 0, 0);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleHeightLabel);
  objc_msgSend(*(id *)(v9 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel), "setSelectedRange:", 0, 0);
  objc_msgSend(*(id *)(v9 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel), "setSelectedRange:", 0, 0);
  return objc_msgSend(*(id *)(v9 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel), "setSelectedRange:", 0, 0);
}

uint64_t storeEnumTagSinglePayload for TelemetryValue.SessionSummary(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1001B6CBC + 4 * byte_1003BBC2D[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1001B6CF0 + 4 * byte_1003BBC28[v4]))();
}

uint64_t sub_1001B6CF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001B6CF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001B6D00);
  return result;
}

uint64_t sub_1001B6D0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001B6D14);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1001B6D18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001B6D20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TelemetryValue.SessionSummary()
{
  return &type metadata for TelemetryValue.SessionSummary;
}

void sub_1001B6D3C(uint64_t a1, char a2)
{
  Hasher._combine(_:)(qword_1003BBCF0[a2]);
}

BOOL sub_1001B6D6C(char *a1, char *a2)
{
  return sub_1000F4020(*a1, *a2);
}

Swift::Int sub_1001B6D78()
{
  char *v0;
  char v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  sub_1001B6D3C((uint64_t)v3, v1);
  return Hasher._finalize()();
}

void sub_1001B6DBC(uint64_t a1)
{
  char *v1;

  sub_1001B6D3C(a1, *v1);
}

Swift::Int sub_1001B6DC4()
{
  char *v0;
  char v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  sub_1001B6D3C((uint64_t)v3, v1);
  return Hasher._finalize()();
}

uint64_t sub_1001B6E04@<X0>(double *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1001B6E8C(*a1);
  *a2 = result;
  return result;
}

double sub_1001B6E2C@<D0>(double *a1@<X8>)
{
  char *v1;
  double result;

  result = dbl_1003BBD60[*v1];
  *a1 = result;
  return result;
}

unint64_t sub_1001B6E48()
{
  unint64_t result;

  result = qword_100489AF0;
  if (!qword_100489AF0)
  {
    result = swift_getWitnessTable(&unk_1003BBCC8, &type metadata for TelemetryValue.SessionSummary);
    atomic_store(result, (unint64_t *)&qword_100489AF0);
  }
  return result;
}

uint64_t sub_1001B6E8C(double a1)
{
  unsigned int v2;

  if (a1 == 1.0)
    return 0;
  if (a1 == 2.0)
    return 1;
  if (a1 == 3.0)
    return 2;
  if (a1 == 4.0)
    return 3;
  if (a1 == 5.0)
    return 4;
  if (a1 == 6.0)
    return 5;
  if (a1 == 7.0)
    return 6;
  if (a1 == 8.0)
    return 7;
  if (a1 == 9.0)
    return 8;
  if (a1 == 10.0)
    return 9;
  if (a1 == 11.0)
    return 10;
  if (a1 == 12.0)
    return 11;
  if (a1 == 14.0)
    v2 = 13;
  else
    v2 = 14;
  if (a1 == 13.0)
    return 12;
  else
    return v2;
}

char *sub_1001B6FA4()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  id v3;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v2 = OBJC_IVAR____TtC7Measure11GrabberView_backgroundView;
  v3 = objc_allocWithZone((Class)_UIGrabber);
  v4 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, "init");

  objc_msgSend(*(id *)&v0[v2], "frame");
  v9.receiver = v4;
  v9.super_class = ObjectType;
  v5 = (char *)objc_msgSendSuper2(&v9, "initWithFrame:");
  v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC7Measure11GrabberView_backgroundView];
  v7 = v5;
  objc_msgSend(v7, "addSubview:", v6);
  sub_1001B7068();

  return v7;
}

void sub_1001B7068()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC7Measure11GrabberView_backgroundView];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1003B1460;
  v5 = objc_msgSend(v1, "bottomAnchor");
  v6 = objc_msgSend(v0, "bottomAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

  *(_QWORD *)(v4 + 32) = v7;
  v8 = objc_msgSend(v1, "centerXAnchor");
  v9 = objc_msgSend(v0, "centerXAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v4 + 40) = v10;
  specialized Array._endMutation()(v11);
  sub_10002277C();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

uint64_t type metadata accessor for GrabberView()
{
  return objc_opt_self(_TtC7Measure11GrabberView);
}

void sub_1001B73A8(uint64_t a1, CGFloat a2, CGFloat a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  CGPoint v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CGAffineTransform v18;
  CGAffineTransform v19;
  CGPoint v20;

  v5 = v4;
  sub_1001B8744(&v19.a);
  v18 = v19;
  v20.x = a2;
  v20.y = a3;
  v10 = CGPointApplyAffineTransform(v20, &v18);
  v11 = objc_msgSend((id)objc_opt_self(SKShapeNode), "shapeNodeWithCircleOfRadius:", a4);
  objc_msgSend(v11, "setFillColor:", a1);
  v12 = *(void **)(v5 + qword_100489C38);
  if (v12)
  {
    objc_msgSend(v12, "addChild:", v11);
    objc_msgSend(v11, "setPosition:", v10.x, v10.y);
    v13 = v11;
    *(_QWORD *)&v18.a = sub_1001B885C();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(*(_QWORD *)&v18.a);
    v15 = *(_QWORD *)((*(_QWORD *)&v18.a & 0xFFFFFFFFFFFFFF8) + 0x10);
    v14 = *(_QWORD *)((*(_QWORD *)&v18.a & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v15 >= v14 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
    v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
    specialized Array._endMutation()(v16);
    v17 = *(_QWORD *)(v5 + qword_100489C30);
    *(CGFloat *)(v5 + qword_100489C30) = v18.a;

    swift_bridgeObjectRelease(v17);
  }
  else
  {
    __break(1u);
  }
}

void sub_1001B751C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0 + qword_100489B58;
  if ((*(_BYTE *)(v0 + qword_100489B58 + 32) & 1) != 0)
  {
    v2 = qword_100489B50;
    objc_msgSend(*(id *)(v0 + qword_100489B50), "position");
    v4 = v3;
    v6 = v5;
    if (qword_10047AFB8 != -1)
      swift_once(&qword_10047AFB8, sub_1001967FC);
    v7 = static CGPoint.+ infix(_:_:)(v4, v6, *(double *)&qword_1004AFAC0, *(double *)&qword_1004AFAC8);
    v9 = v8;
    if (qword_10047AFD0 != -1)
      swift_once(&qword_10047AFD0, sub_1001968FC);
    v10 = static CGPoint.+ infix(_:_:)(v7, v9, 0.0, *(double *)&qword_1004AFAE8 * 0.5);
    v12 = v11;
    objc_msgSend(*(id *)(v0 + v2), "position");
    v14 = v13;
    v16 = v15;
    if (qword_10047AFC0 != -1)
      swift_once(&qword_10047AFC0, sub_100196864);
    v17 = static CGPoint.+ infix(_:_:)(v14, v16, *(double *)&xmmword_1004AFAD0, *((double *)&xmmword_1004AFAD0 + 1));
    v19 = static CGPoint.+ infix(_:_:)(v17, v18, 0.0, -*(double *)&qword_1004AFAE8);
    *(double *)v1 = CGRect.init(p1:p2:)(v10, v12, v19, v20);
    *(_QWORD *)(v1 + 8) = v21;
    *(_QWORD *)(v1 + 16) = v22;
    *(_QWORD *)(v1 + 24) = v23;
    *(_BYTE *)(v1 + 32) = 0;
  }
}

void sub_1001B76B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0 + qword_100489B60;
  if ((*(_BYTE *)(v0 + qword_100489B60 + 32) & 1) != 0)
  {
    v2 = qword_100489B50;
    objc_msgSend(*(id *)(v0 + qword_100489B50), "position");
    v4 = v3;
    v6 = v5;
    if (qword_10047AFB8 != -1)
      swift_once(&qword_10047AFB8, sub_1001967FC);
    v7 = static CGPoint.+ infix(_:_:)(v4, v6, *(double *)&qword_1004AFAC0, *(double *)&qword_1004AFAC8);
    v9 = v8;
    if (qword_10047AFD0 != -1)
      swift_once(&qword_10047AFD0, sub_1001968FC);
    v10 = static CGPoint.+ infix(_:_:)(v7, v9, 0.0, (*(double *)&qword_1004AFAE8 + -1.0) * 0.5);
    v12 = v11;
    objc_msgSend(*(id *)(v0 + v2), "position");
    v14 = v13;
    v16 = v15;
    if (qword_10047AFC0 != -1)
      swift_once(&qword_10047AFC0, sub_100196864);
    v17 = static CGPoint.+ infix(_:_:)(v14, v16, *(double *)&xmmword_1004AFAD0, *((double *)&xmmword_1004AFAD0 + 1));
    v19 = static CGPoint.+ infix(_:_:)(v17, v18, 0.0, -(*(double *)&qword_1004AFAE8 + -1.0));
    *(double *)v1 = CGRect.init(p1:p2:)(v10, v12, v19, v20);
    *(_QWORD *)(v1 + 8) = v21;
    *(_QWORD *)(v1 + 16) = v22;
    *(_QWORD *)(v1 + 24) = v23;
    *(_BYTE *)(v1 + 32) = 0;
  }
}

id sub_1001B7858(uint64_t *a1, double (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  id v14;
  void *v15;
  id v16;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = a2();
    v8 = v7;
    v10 = v9;
    v12 = v11;
    if (qword_10047AFD0 != -1)
      swift_once(&qword_10047AFD0, sub_1001968FC);
    v13 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v6, v8, v10, v12, *(double *)&qword_1004AFAE8 * 0.5);
    v14 = objc_msgSend(v13, "CGPath");

    v15 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v14;
    v5 = v14;

    v4 = 0;
  }
  v16 = v4;
  return v5;
}

id sub_1001B796C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_100489B78;
  v2 = *(void **)(v0 + qword_100489B78);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_100489B78);
  }
  else
  {
    v4 = sub_1001B7BF8(v0, &qword_100489B68, (double (*)(void))sub_1001B751C, &qword_100489B28, &qword_100489B58);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1001B79EC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = qword_100489B80;
  v2 = *(void **)(v0 + qword_100489B80);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_100489B80);
  }
  else
  {
    sub_1001B7A48();
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1001B7A48()
{
  id v0;
  NSString v1;
  id v2;
  id v3;
  Class isa;
  NSString v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)SKEffectNode), "init");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(CIFilter), "filterWithName:", v1);

  if (v2)
  {
    objc_msgSend(v2, "setDefaults");
    v3 = v2;
    isa = Double._bridgeToObjectiveC()().super.super.isa;
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setValue:forKey:", isa, v5);

    objc_msgSend(v0, "setFilter:", v3);
    objc_msgSend(v0, "setShouldEnableEffects:", 1);

  }
  else
  {
    __break(1u);
  }
}

id sub_1001B7B78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_100489B88;
  v2 = *(void **)(v0 + qword_100489B88);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_100489B88);
  }
  else
  {
    v4 = sub_1001B7BF8(v0, &qword_100489B70, (double (*)(void))sub_1001B76B0, &qword_100489B30, &qword_100489B60);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1001B7BF8(uint64_t a1, uint64_t *a2, double (*a3)(void), _QWORD *a4, _QWORD *a5)
{
  id v10;
  id v11;
  void *v12;
  CGFloat Height;
  float64x2_t v14;
  double v15;
  id v16;
  NSString v17;
  id v18;
  id v19;
  CGFloat Width;
  CGRect v22;

  v10 = objc_msgSend(objc_allocWithZone((Class)SKShapeNode), "init");
  objc_msgSend(v10, "setLineWidth:", 0.0);
  v11 = sub_1001B7858(a2, a3);
  objc_msgSend(v10, "setPath:", v11);

  v12 = *(void **)(a1 + *a4);
  v22.origin.x = a3();
  Width = CGRectGetWidth(v22);
  Height = CGRectGetHeight(*(CGRect *)(a1 + *a5));
  v14.f64[0] = Width;
  v14.f64[1] = Height;
  v15 = COERCE_DOUBLE(vcvt_f32_f64(v14));
  v16 = objc_allocWithZone((Class)SKUniform);
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v16, "initWithName:vectorFloat2:", v17, v15);

  objc_msgSend(v12, "addUniform:", v18);
  objc_msgSend(v10, "setFillShader:", v12);
  v19 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v10, "setFillColor:", v19);

  return v10;
}

void sub_1001B7D8C()
{
  id v0;
  NSString v1;
  id v2;
  id v3;
  Class isa;
  NSString v5;
  id v6;
  id v7;
  double v8;
  double v9;

  v0 = objc_msgSend(objc_allocWithZone((Class)SKEffectNode), "init");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(CIFilter), "filterWithName:", v1);

  if (v2)
  {
    objc_msgSend(v2, "setDefaults");
    v3 = v2;
    isa = Int._bridgeToObjectiveC()().super.super.isa;
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setValue:forKey:", isa, v5);

    objc_msgSend(v0, "setFilter:", v3);
    objc_msgSend(v0, "setShouldEnableEffects:", 1);
    v6 = v0;
    v7 = sub_1001B7B78();
    objc_msgSend(v7, "zPosition");
    v9 = v8;

    objc_msgSend(v6, "setZPosition:", v9);
  }
  else
  {
    __break(1u);
  }
}

id sub_1001B7F10()
{
  id v0;
  id v1;
  id v2;
  id v3;
  double v4;
  double v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)SKShapeNode), "init");
  objc_msgSend(v0, "setLineCap:", 1);
  if (qword_10047AFD0 != -1)
    swift_once(&qword_10047AFD0, sub_1001968FC);
  objc_msgSend(v0, "setLineWidth:", *(double *)&qword_1004AFAE8);
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "darkGrayColor");
  objc_msgSend(v0, "setStrokeColor:", v1);

  v2 = sub_1001B7858(&qword_100489B68, (double (*)(void))sub_1001B751C);
  objc_msgSend(v0, "setPath:", v2);

  objc_msgSend(v0, "setBlendMode:", 3);
  v3 = sub_1001B7B78();
  objc_msgSend(v3, "zPosition");
  v5 = v4;

  objc_msgSend(v0, "setZPosition:", v5 + -2.0);
  return v0;
}

id sub_1001B8068()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSString v4;
  id v5;
  id v6;
  id v7;
  NSString v8;
  id v9;
  void *v10;
  id v11;

  v1 = qword_100489BA0;
  v2 = *(void **)(v0 + qword_100489BA0);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_100489BA0);
  }
  else
  {
    v4 = String._bridgeToObjectiveC()();
    v5 = objc_msgSend((id)objc_opt_self(SKLabelNode), "labelNodeWithText:", v4);

    v6 = objc_allocWithZone((Class)NSAttributedString);
    v7 = v5;
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend(v6, "initWithString:", v8);

    objc_msgSend(v7, "setAttributedText:", v9);
    objc_msgSend(v7, "setHorizontalAlignmentMode:", 2);

    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1001B8178()
{
  NSString v0;
  id v1;
  id v2;
  id v3;
  NSString v4;
  id v5;
  id v6;
  id v7;
  double v8;
  double v9;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(SKLabelNode), "labelNodeWithText:", v0);

  v2 = objc_allocWithZone((Class)NSAttributedString);
  v3 = v1;
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "initWithString:", v4);

  objc_msgSend(v3, "setAttributedText:", v5);
  v6 = v3;
  v7 = sub_1001B8068();
  objc_msgSend(v7, "zPosition");
  v9 = v8;

  objc_msgSend(v6, "setZPosition:", v9 + -1.0);
  objc_msgSend(v6, "setHorizontalAlignmentMode:", 2);

  return v6;
}

id sub_1001B8298(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2(v2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

void sub_1001B82F4()
{
  id v0;
  NSString v1;
  id v2;
  id v3;
  Class isa;
  NSString v5;
  id v6;
  id v7;
  double v8;
  double v9;

  v0 = objc_msgSend(objc_allocWithZone((Class)SKEffectNode), "init");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(CIFilter), "filterWithName:", v1);

  if (v2)
  {
    objc_msgSend(v2, "setDefaults");
    v3 = v2;
    isa = Double._bridgeToObjectiveC()().super.super.isa;
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setValue:forKey:", isa, v5);

    objc_msgSend(v0, "setFilter:", v3);
    objc_msgSend(v0, "setShouldEnableEffects:", 1);
    v6 = v0;
    v7 = sub_1001B8068();
    objc_msgSend(v7, "zPosition");
    v9 = v8;

    objc_msgSend(v6, "setZPosition:", v9 + -1.0);
  }
  else
  {
    __break(1u);
  }
}

id sub_1001B8480(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone((Class)SKNode), "init");
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    v4 = v5;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

void sub_1001B84EC(uint64_t a1)
{
  id v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;

  v2 = sub_1001B8068();
  v3 = (uint64_t *)(a1 + qword_100489BC8);
  v4 = *(_QWORD *)(a1 + qword_100489BC8);
  v5 = *(_QWORD *)(a1 + qword_100489BC8 + 8);
  v7 = *(void **)(a1 + qword_100489BC8 + 16);
  v6 = *(void **)(a1 + qword_100489BC8 + 24);
  v8 = *(id *)(a1 + qword_100489BC8 + 32);
  swift_bridgeObjectRetain(v5);
  v9 = v7;
  v10 = v6;
  v11 = sub_1001BDF84(v4, v5, v9, v6);

  objc_msgSend(v2, "setAttributedText:", v11, swift_bridgeObjectRelease(v5).n128_f64[0]);
  v12 = sub_1001B8298(&qword_100489BA8, (uint64_t (*)(uint64_t))sub_1001B8178);
  v13 = *v3;
  v14 = v3[1];
  v15 = (void *)v3[2];
  v16 = (void *)v3[3];
  v17 = (void *)v3[4];
  v18 = v17;
  swift_bridgeObjectRetain(v14);
  v19 = v15;
  v20 = v16;
  v21 = sub_1001BDF84(v13, v14, v19, v17);

  objc_msgSend(v12, "setAttributedText:", v21, swift_bridgeObjectRelease(v14).n128_f64[0]);
}

void sub_1001B8640(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];
  _QWORD v18[6];

  v3 = (uint64_t *)(v1 + qword_100489BE0);
  if ((*(_BYTE *)(v1 + qword_100489BE0 + 48) & 1) == 0)
  {
    v15 = v3[4];
    v14 = v3[5];
    v13 = v3[2];
    v12 = v3[3];
    v11 = *v3;
    v10 = v3[1];
    goto LABEL_6;
  }
  v4 = *(_QWORD *)MeasureCore.shared.unsafeMutableAddressor();
  swift_beginAccess(v4 + 112, v17, 0, 0);
  v5 = *(_QWORD *)(v4 + 112);
  if (v5)
  {
    swift_beginAccess(v5 + 208, &v16, 0, 0);
    v6 = *(_QWORD *)(v5 + 208);
    if (v6)
    {
      v7 = swift_retain(v6);
      v8 = ADProcessor.transformer.getter(v7);
      swift_release(v6);
      ADTransformer.viewToAD.getter(v18, v9);
      v11 = v18[0];
      v10 = v18[1];
      v13 = v18[2];
      v12 = v18[3];
      v15 = v18[4];
      v14 = v18[5];
      swift_release(v8);
      *v3 = v11;
      v3[1] = v10;
      v3[2] = v13;
      v3[3] = v12;
      v3[4] = v15;
      v3[5] = v14;
      *((_BYTE *)v3 + 48) = 0;
LABEL_6:
      *a1 = v11;
      a1[1] = v10;
      a1[2] = v13;
      a1[3] = v12;
      a1[4] = v15;
      a1[5] = v14;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

CGAffineTransform *sub_1001B8744@<X0>(CGFloat *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  CGFloat tx;
  CGFloat ty;
  CGFloat Height;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  CGAffineTransform *result;
  CGFloat b;
  CGFloat a;
  CGFloat d;
  CGFloat c;
  CGFloat v15;
  CGFloat v16;
  __int128 v17;
  __int128 v18;
  CGAffineTransform v19;
  CGAffineTransform t2;
  CGAffineTransform t1;
  CGRect v22;

  v3 = v1 + qword_100489BF0;
  if ((*(_BYTE *)(v1 + qword_100489BF0 + 48) & 1) != 0)
  {
    CGAffineTransformMakeScale(&t1, 1.0, -1.0);
    v17 = *(_OWORD *)&t1.c;
    v18 = *(_OWORD *)&t1.a;
    tx = t1.tx;
    ty = t1.ty;
    objc_msgSend(*(id *)(v1 + qword_100489B40), "frame");
    Height = CGRectGetHeight(v22);
    CGAffineTransformMakeTranslation(&t1, 0.0, Height);
    v7 = *(_OWORD *)&t1.a;
    v8 = *(_OWORD *)&t1.c;
    v9 = *(_OWORD *)&t1.tx;
    *(_OWORD *)&t1.a = v18;
    *(_OWORD *)&t1.c = v17;
    t1.tx = tx;
    t1.ty = ty;
    *(_OWORD *)&t2.a = v7;
    *(_OWORD *)&t2.c = v8;
    *(_OWORD *)&t2.tx = v9;
    CGAffineTransformConcat(&v19, &t1, &t2);
    t1 = v19;
    result = CGAffineTransformInvert(&t2, &t1);
    a = t2.a;
    b = t2.b;
    c = t2.c;
    d = t2.d;
    v16 = t2.tx;
    v15 = t2.ty;
    *(CGFloat *)v3 = t2.a;
    *(CGFloat *)(v3 + 8) = b;
    *(CGFloat *)(v3 + 16) = c;
    *(CGFloat *)(v3 + 24) = d;
    *(CGFloat *)(v3 + 32) = v16;
    *(CGFloat *)(v3 + 40) = v15;
    *(_BYTE *)(v3 + 48) = 0;
  }
  else
  {
    v16 = *(double *)(v3 + 32);
    v15 = *(double *)(v3 + 40);
    c = *(double *)(v3 + 16);
    d = *(double *)(v3 + 24);
    a = *(double *)v3;
    b = *(double *)(v3 + 8);
  }
  *a1 = a;
  a1[1] = b;
  a1[2] = c;
  a1[3] = d;
  a1[4] = v16;
  a1[5] = v15;
  return result;
}

_QWORD *sub_1001B885C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + qword_100489C30);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + qword_100489C30);
  }
  else
  {
    v2 = _swiftEmptyArrayStorage;
    *(_QWORD *)(v0 + qword_100489C30) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(0);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

id sub_1001B88A8(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  void *v11;
  id v12;
  uint64_t v13;
  NSString v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, __n128);
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, __n128);
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t, __n128);
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, __n128);
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, __n128);
  __n128 v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  void *v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  void *v71;
  uint64_t v72;
  void *v73;
  id v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v81;
  void *v82;
  objc_class *ObjectType;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  double *v88;
  _QWORD aBlock[6];
  objc_super v90;

  v82 = a1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v86 = *(_QWORD *)(v2 - 8);
  v87 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v84 = *(_QWORD *)(v5 - 8);
  v85 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = qword_100489B28;
  v9 = v1;
  v10 = String._bridgeToObjectiveC()();
  v11 = (void *)objc_opt_self(SKShader);
  v12 = objc_msgSend(v11, "shaderWithFileNamed:", v10);

  *(_QWORD *)&v1[v8] = v12;
  v13 = qword_100489B30;
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v11, "shaderWithFileNamed:", v14);

  *(_QWORD *)&v9[v13] = v15;
  v16 = &v9[qword_100489B38];
  *(_QWORD *)v16 = 0xD000000000000012;
  *((_QWORD *)v16 + 1) = 0x80000001003E5BE0;
  v17 = qword_100489B48;
  *(_QWORD *)&v9[v17] = objc_msgSend(objc_allocWithZone((Class)SKNode), "init");
  v18 = qword_100489B50;
  *(_QWORD *)&v9[v18] = objc_msgSend(objc_allocWithZone((Class)SKNode), "init");
  v19 = &v9[qword_100489B58];
  *(_OWORD *)v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  v19[32] = 1;
  v20 = &v9[qword_100489B60];
  *(_OWORD *)v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  v20[32] = 1;
  *(_QWORD *)&v9[qword_100489B68] = 0;
  *(_QWORD *)&v9[qword_100489B70] = 0;
  *(_QWORD *)&v9[qword_100489B78] = 0;
  *(_QWORD *)&v9[qword_100489B80] = 0;
  *(_QWORD *)&v9[qword_100489B88] = 0;
  *(_QWORD *)&v9[qword_100489B90] = 0;
  *(_QWORD *)&v9[qword_100489B98] = 0;
  *(_QWORD *)&v9[qword_100489BA0] = 0;
  *(_QWORD *)&v9[qword_100489BA8] = 0;
  *(_QWORD *)&v9[qword_100489BB0] = 0;
  *(_QWORD *)&v9[qword_100489BB8] = 0;
  *(_QWORD *)&v9[qword_100489BC0] = 0;
  v21 = &v9[qword_100489BC8];
  if (qword_10047AF80 != -1)
    swift_once(&qword_10047AF80, sub_100196548);
  v22 = (void *)qword_1004AFA78;
  v23 = (void *)objc_opt_self(UIColor);
  v24 = v22;
  v25 = objc_msgSend(v23, "whiteColor");
  v26 = objc_msgSend(v23, "darkGrayColor");
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0xE000000000000000;
  *((_QWORD *)v21 + 2) = v24;
  *((_QWORD *)v21 + 3) = v25;
  *((_QWORD *)v21 + 4) = v26;
  v9[qword_100489BD0] = 0;
  v27 = qword_100489BD8;
  LOBYTE(aBlock[0]) = 0;
  v28 = sub_10000EDC8(&qword_10047E638);
  swift_allocObject(v28, 32, 7);
  *(_QWORD *)&v9[v27] = Synchronized.init(wrappedValue:)(aBlock);
  v29 = &v9[qword_100489BE0];
  *((_OWORD *)v29 + 1) = 0u;
  *((_OWORD *)v29 + 2) = 0u;
  *(_OWORD *)v29 = 0u;
  v29[48] = 1;
  v30 = &v9[qword_100489BE8];
  *((_OWORD *)v30 + 1) = 0u;
  *((_OWORD *)v30 + 2) = 0u;
  *(_OWORD *)v30 = 0u;
  v30[48] = 1;
  v31 = &v9[qword_100489BF0];
  *(_OWORD *)v31 = 0u;
  *((_OWORD *)v31 + 1) = 0u;
  *((_OWORD *)v31 + 2) = 0u;
  v31[48] = 1;
  v32 = qword_100489BF8;
  KeyPath = swift_getKeyPath(&unk_1003BBF38);
  v34 = sub_10000EDC8(qword_100485760);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v35 = qword_1004AF890;
  v36 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v34 + 272);
  v37 = swift_retain();
  *(_QWORD *)&v9[v32] = v36(KeyPath, v35, v37);
  v38 = qword_100489C00;
  v39 = swift_getKeyPath(&unk_1003BBF60);
  v40 = sub_10000EDC8(&qword_100482F10);
  v41 = qword_1004AF890;
  v42 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v40 + 272);
  v43 = swift_retain();
  *(_QWORD *)&v9[v38] = v42(v39, v41, v43);
  v44 = qword_100489C08;
  v45 = sub_10000EDC8(&qword_10047ECF0);
  v46 = swift_getKeyPath(&unk_1003BBF88);
  v47 = qword_1004AF890;
  v48 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v45 + 272);
  v49 = swift_retain();
  *(_QWORD *)&v9[v44] = v48(v46, v47, v49);
  v50 = qword_100489C10;
  v51 = swift_getKeyPath(&unk_1003BBFB0);
  v52 = sub_10000EDC8(&qword_100481258);
  v53 = qword_1004AF890;
  v54 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v52 + 272);
  v55 = swift_retain();
  *(_QWORD *)&v9[v50] = v54(v51, v53, v55);
  v56 = qword_100489C18;
  v57 = swift_getKeyPath(&unk_1003BBFD8);
  v58 = sub_10000EDC8((uint64_t *)&unk_10047E5D0);
  v59 = qword_1004AF890;
  v60 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v58 + 272);
  v61 = swift_retain();
  *(_QWORD *)&v9[v56] = v60(v57, v59, v61);
  v62 = qword_100489C20;
  LOBYTE(aBlock[0]) = 0;
  swift_allocObject(v28, 32, 7);
  *(_QWORD *)&v9[v62] = Synchronized.init(wrappedValue:)(aBlock);
  v63 = &v9[qword_100489C28];
  *(_QWORD *)v63 = 0;
  *((_QWORD *)v63 + 1) = 0;
  *(_QWORD *)&v9[qword_100489C30] = 0;
  v64 = qword_100489C38;
  *(_QWORD *)&v9[qword_100489C38] = 0;
  v65 = &v9[qword_100489C40];
  *(_QWORD *)v65 = 0;
  *((_QWORD *)v65 + 1) = 0xE000000000000000;
  v66 = v82;
  *(_QWORD *)&v9[qword_100489B40] = v82;
  v67 = v66;
  v68 = objc_msgSend(v67, "overlaySKScene");
  v69 = *(void **)&v9[v64];
  *(_QWORD *)&v9[v64] = v68;

  v90.receiver = v9;
  v90.super_class = ObjectType;
  v70 = objc_msgSendSuper2(&v90, "init");
  v71 = (void *)Contexts.UIKit.init()();
  v72 = swift_allocObject(&unk_10044B6F0, 24, 7);
  *(_QWORD *)(v72 + 16) = v70;
  aBlock[4] = sub_1001BDEF8;
  aBlock[5] = v72;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003ECA0;
  aBlock[3] = &unk_10044B708;
  v73 = _Block_copy(aBlock);
  v74 = v70;
  static DispatchQoS.unspecified.getter(v75);
  v88 = _swiftEmptyArrayStorage;
  v76 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v77 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v78 = sub_100030E64();
  v79 = v87;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v88, v77, v78, v87, v76);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v73);

  _Block_release(v73);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v4, v79);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v7, v85);
  swift_release();
  return v74;
}

void sub_1001B9004()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;

  v1 = *(void **)(v0 + qword_100489C38);
  if (v1)
  {
    v2 = qword_100489B48;
    v3 = *(_QWORD *)(v0 + qword_100489B48);
    v30 = v1;
    objc_msgSend(v30, "addChild:", v3);
    v4 = *(void **)(v0 + v2);
    v5 = qword_100489B50;
    objc_msgSend(v4, "addChild:", *(_QWORD *)(v0 + qword_100489B50));
    v6 = sub_1001B8480(&qword_100489BB8);
    v7 = sub_1001B8068();
    objc_msgSend(v6, "addChild:", v7);

    v8 = *(id *)(v0 + v5);
    v9 = sub_1001B8480(&qword_100489BB8);
    objc_msgSend(v8, "addChild:", v9);

    v10 = sub_1001B8068();
    if (qword_10047AFB0 != -1)
      swift_once(&qword_10047AFB0, sub_1001967A4);
    objc_msgSend(v10, "setPosition:", *(double *)&qword_1004AFAB0, *(double *)&qword_1004AFAB8);

    v11 = sub_1001B8480(&qword_100489BB8);
    if (qword_10047AFA8 != -1)
      swift_once(&qword_10047AFA8, sub_100196748);
    objc_msgSend(v11, "setPosition:", xmmword_1004AFAA0);

    v12 = sub_1001B8298(&qword_100489B90, (uint64_t (*)(uint64_t))sub_1001B7D8C);
    v13 = sub_1001B7B78();
    objc_msgSend(v12, "addChild:", v13);

    v14 = *(id *)(v0 + v5);
    v15 = sub_1001B8298(&qword_100489B90, (uint64_t (*)(uint64_t))sub_1001B7D8C);
    objc_msgSend(v14, "addChild:", v15);

    v16 = *(id *)(v0 + v5);
    v17 = sub_1001B79EC();
    objc_msgSend(v16, "addChild:", v17);

    v18 = sub_1001B79EC();
    v19 = sub_1001B796C();
    objc_msgSend(v18, "addChild:", v19);

    v20 = sub_1001B8480(&qword_100489BC0);
    v21 = sub_1001B8298(&qword_100489BA8, (uint64_t (*)(uint64_t))sub_1001B8178);
    objc_msgSend(v20, "addChild:", v21);

    v22 = sub_1001B8298(&qword_100489BB0, (uint64_t (*)(uint64_t))sub_1001B82F4);
    v23 = sub_1001B8480(&qword_100489BC0);
    objc_msgSend(v22, "addChild:", v23);

    v24 = sub_1001B8298(&qword_100489BB0, (uint64_t (*)(uint64_t))sub_1001B82F4);
    v25 = sub_1001B8298(&qword_100489B98, (uint64_t (*)(uint64_t))sub_1001B7F10);
    objc_msgSend(v24, "addChild:", v25);

    v26 = *(id *)(v0 + v5);
    v27 = sub_1001B8298(&qword_100489BB0, (uint64_t (*)(uint64_t))sub_1001B82F4);
    objc_msgSend(v26, "addChild:", v27);

    v28 = sub_1001B8298(&qword_100489BA8, (uint64_t (*)(uint64_t))sub_1001B8178);
    objc_msgSend(v28, "setPosition:", *(double *)&qword_1004AFAB0, *(double *)&qword_1004AFAB8);

    v29 = sub_1001B8480(&qword_100489BC0);
    objc_msgSend(v29, "setPosition:", xmmword_1004AFAA0);

  }
}

void sub_1001B93DC()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  sub_1001B93F8();
}

void sub_1001B93F8()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  NSString v3;
  void *v4;
  id v5;
  uint64_t v6;
  NSString v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, __n128);
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, __n128);
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, __n128);
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, __n128);
  __n128 v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  char v58;
  char v59;

  v1 = v0;
  v2 = qword_100489B28;
  v3 = String._bridgeToObjectiveC()();
  v4 = (void *)objc_opt_self(SKShader);
  v5 = objc_msgSend(v4, "shaderWithFileNamed:", v3);

  *(_QWORD *)&v1[v2] = v5;
  v6 = qword_100489B30;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v4, "shaderWithFileNamed:", v7);

  *(_QWORD *)&v1[v6] = v8;
  v9 = &v1[qword_100489B38];
  *v9 = 0xD000000000000012;
  v9[1] = 0x80000001003E5BE0;
  v10 = qword_100489B48;
  *(_QWORD *)&v1[v10] = objc_msgSend(objc_allocWithZone((Class)SKNode), "init");
  v11 = qword_100489B50;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone((Class)SKNode), "init");
  v12 = &v1[qword_100489B58];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v12[32] = 1;
  v13 = &v1[qword_100489B60];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  v13[32] = 1;
  *(_QWORD *)&v1[qword_100489B68] = 0;
  *(_QWORD *)&v1[qword_100489B70] = 0;
  *(_QWORD *)&v1[qword_100489B78] = 0;
  *(_QWORD *)&v1[qword_100489B80] = 0;
  *(_QWORD *)&v1[qword_100489B88] = 0;
  *(_QWORD *)&v1[qword_100489B90] = 0;
  *(_QWORD *)&v1[qword_100489B98] = 0;
  *(_QWORD *)&v1[qword_100489BA0] = 0;
  *(_QWORD *)&v1[qword_100489BA8] = 0;
  *(_QWORD *)&v1[qword_100489BB0] = 0;
  *(_QWORD *)&v1[qword_100489BB8] = 0;
  *(_QWORD *)&v1[qword_100489BC0] = 0;
  v14 = &v1[qword_100489BC8];
  if (qword_10047AF80 != -1)
    swift_once(&qword_10047AF80, sub_100196548);
  v15 = (void *)qword_1004AFA78;
  v16 = (void *)objc_opt_self(UIColor);
  v17 = v15;
  v18 = objc_msgSend(v16, "whiteColor");
  v19 = objc_msgSend(v16, "darkGrayColor");
  *v14 = 0;
  v14[1] = 0xE000000000000000;
  v14[2] = v17;
  v14[3] = v18;
  v14[4] = v19;
  v1[qword_100489BD0] = 0;
  v20 = qword_100489BD8;
  v59 = 0;
  v21 = sub_10000EDC8(&qword_10047E638);
  swift_allocObject(v21, 32, 7);
  *(_QWORD *)&v1[v20] = Synchronized.init(wrappedValue:)(&v59);
  v22 = &v1[qword_100489BE0];
  *((_OWORD *)v22 + 1) = 0u;
  *((_OWORD *)v22 + 2) = 0u;
  *(_OWORD *)v22 = 0u;
  v22[48] = 1;
  v23 = &v1[qword_100489BE8];
  *((_OWORD *)v23 + 1) = 0u;
  *((_OWORD *)v23 + 2) = 0u;
  *(_OWORD *)v23 = 0u;
  v23[48] = 1;
  v24 = &v1[qword_100489BF0];
  *(_OWORD *)v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((_OWORD *)v24 + 2) = 0u;
  v24[48] = 1;
  v25 = qword_100489BF8;
  KeyPath = swift_getKeyPath(&unk_1003BBF38);
  v27 = sub_10000EDC8(qword_100485760);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v28 = qword_1004AF890;
  v29 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v27 + 272);
  v30 = swift_retain();
  *(_QWORD *)&v1[v25] = v29(KeyPath, v28, v30);
  v31 = qword_100489C00;
  v32 = swift_getKeyPath(&unk_1003BBF60);
  v33 = sub_10000EDC8(&qword_100482F10);
  v34 = qword_1004AF890;
  v35 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v33 + 272);
  v36 = swift_retain();
  *(_QWORD *)&v1[v31] = v35(v32, v34, v36);
  v37 = qword_100489C08;
  v38 = sub_10000EDC8(&qword_10047ECF0);
  v39 = swift_getKeyPath(&unk_1003BBF88);
  v40 = qword_1004AF890;
  v41 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v38 + 272);
  v42 = swift_retain();
  *(_QWORD *)&v1[v37] = v41(v39, v40, v42);
  v43 = qword_100489C10;
  v44 = swift_getKeyPath(&unk_1003BBFB0);
  v45 = sub_10000EDC8(&qword_100481258);
  v46 = qword_1004AF890;
  v47 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v45 + 272);
  v48 = swift_retain();
  *(_QWORD *)&v1[v43] = v47(v44, v46, v48);
  v49 = qword_100489C18;
  v50 = swift_getKeyPath(&unk_1003BBFD8);
  v51 = sub_10000EDC8((uint64_t *)&unk_10047E5D0);
  v52 = qword_1004AF890;
  v53 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v51 + 272);
  v54 = swift_retain();
  *(_QWORD *)&v1[v49] = v53(v50, v52, v54);
  v55 = qword_100489C20;
  v58 = 0;
  swift_allocObject(v21, 32, 7);
  *(_QWORD *)&v1[v55] = Synchronized.init(wrappedValue:)(&v58);
  v56 = &v1[qword_100489C28];
  *v56 = 0;
  v56[1] = 0;
  *(_QWORD *)&v1[qword_100489C30] = 0;
  *(_QWORD *)&v1[qword_100489C38] = 0;
  v57 = &v1[qword_100489C40];
  *v57 = 0;
  v57[1] = 0xE000000000000000;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002DLL, 0x80000001003D7D70, "Measure/PersonHeightView.swift", 30, 2, 220, 0);
  __break(1u);
}

double sub_1001B9960()
{
  double result;
  uint64_t v1;

  swift_retain();
  StateValue.ifUpdated(_:)(sub_1001BEE5C, &v1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1001B99B4(void *__src, uint64_t a2)
{
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _BYTE v14[513];

  memcpy(&v14[1], __src, 0x200uLL);
  v3 = qword_100489B50;
  v4 = *(id *)(a2 + qword_100489B50);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "actionForKey:", v5);

  swift_retain();
  Synchronized.wrappedValue.getter(v14, v7);
  swift_release();
  if ((((v6 == 0) ^ v14[0]) & 1) == 0)
  {
    v8 = *(id *)(a2 + v3);
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend(v8, "actionForKey:", v9);

    if (v10)
    v14[0] = v10 != 0;
    swift_retain();
    Synchronized.wrappedValue.setter(v14);
    swift_release();
  }
  v11 = sub_10008F8B8();
  if (v11)
  {
    v12 = (void *)v11;
    sub_1001B9B6C();
    sub_1001B9E98();
    swift_retain();
    Synchronized.wrappedValue.getter(v14, v13);
    swift_release();
    if (v14[0] == 1)
      sub_1001BA5B8(v12);

  }
}

void sub_1001B9B6C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD *__return_ptr, __n128);
  __n128 v3;
  uint64_t v4;
  void *v5;
  void (*v6)(_BYTE *__return_ptr, __n128);
  __n128 v7;
  uint64_t v8;
  float v9;
  double v10;
  CGFloat v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  void *v20;
  CGPoint v21;
  id v22;
  uint64_t v23;
  id v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  CGAffineTransform v30;
  _BYTE v31[512];
  _OWORD v32[32];
  _BYTE v33[512];
  _QWORD __src[68];
  _OWORD __dst[34];
  CGPoint v36;
  CGPoint v37;

  v1 = v0;
  v2 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v0 + qword_100489BF8) + 144);
  v3 = swift_retain();
  v2(__src, v3);
  swift_release();
  memcpy(__dst, __src, 0x213uLL);
  sub_1000642CC((uint64_t)__dst);
  if ((__dst[30] & 1) == 0)
  {
    v29 = (__n128)__dst[29];
    swift_retain();
    StateValue.wrappedValue.getter(v33, v4);
    swift_release();
    memcpy(__src, v33, 0x200uLL);
    v5 = (void *)sub_10008F8B8();
    sub_100012C00((uint64_t)__src);
    if (v5)
    {

      v6 = *(void (**)(_BYTE *__return_ptr, __n128))(**(_QWORD **)(v1 + qword_100489C18) + 144);
      v7 = swift_retain();
      v6(v33, v7);
      swift_release();
      if ((v33[96] & 1) == 0)
      {
        v9 = -COERCE_FLOAT(vdupq_n_s64(*(unint64_t *)(v33 + 88)).i32[2]);
        v10 = (float)(v9 - *(float *)Float.piDiv2.unsafeMutableAddressor(v8));
        if (qword_10047AFD0 != -1)
          swift_once(&qword_10047AFD0, sub_1001968FC);
        v11 = *(double *)&qword_1004AFAE8 + 1.0;
        CGAffineTransformMakeRotation((CGAffineTransform *)v33, v10);
        v36.x = 0.0;
        v36.y = v11;
        CGPointApplyAffineTransform(v36, (CGAffineTransform *)v33);
        type metadata accessor for MeasureCamera(0);
        swift_retain();
        StateValue.wrappedValue.getter(v33, v12);
        swift_release();
        memcpy(v32, v33, sizeof(v32));
        sub_100012C00((uint64_t)v32);
        v27 = (__n128)v32[12];
        v28 = (__n128)v32[11];
        v25 = (__n128)v32[14];
        v26 = (__n128)v32[13];
        swift_retain();
        StateValue.wrappedValue.getter(v31, v13);
        swift_release();
        memcpy(v33, v31, sizeof(v33));
        v14 = sub_100012C00((uint64_t)v33);
        v15 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v14, v29, v28, v27, v26, v25, *(double *)&v33[32]);
        v16 = CGPoint.init(_:)(v15);
        v17 = static CGPoint.- infix(_:_:)(v16);
        v19 = v18;
        v20 = (void *)objc_opt_self(SKAction);
        sub_1001B8744((CGFloat *)v31);
        v30 = *(CGAffineTransform *)v31;
        v37.x = v17;
        v37.y = v19;
        v21 = CGPointApplyAffineTransform(v37, &v30);
        v22 = objc_msgSend(v20, "moveTo:duration:", v21.x, v21.y, 0.0);
        v23 = qword_100489B48;
        objc_msgSend(*(id *)(v1 + qword_100489B48), "runAction:", v22);
        v24 = objc_msgSend(v20, "rotateToAngle:duration:", v10, 0.0);
        objc_msgSend(*(id *)(v1 + v23), "runAction:", v24);

      }
    }
  }
}

void sub_1001B9E98()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(__n128 *__return_ptr, __n128);
  __n128 v12;
  float v13;
  void (*v14)(__n128 *__return_ptr, __n128);
  __n128 v15;
  uint64_t v16;
  void (*v17)(__n128 *__return_ptr, __n128);
  __n128 v18;
  float v19;
  float v20;
  void (*v21)(__n128 *__return_ptr, __n128);
  __n128 v22;
  double v23;
  void (*v24)(__n128 *__return_ptr, __n128);
  __n128 v25;
  void (*v26)(__n128 *__return_ptr, __n128);
  __n128 v27;
  void (*v28)(__n128);
  __n128 v29;
  id v30;
  unint64_t v31;
  NSString v32;
  uint64_t v33;
  id v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double *v50;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v52;
  unint64_t v53;
  double *v54;
  uint64_t v55;
  id v56;
  NSString v57;
  void *v58;
  unint64_t *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  __n128 v74[34];
  _DWORD v75[136];

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = sub_10000EDC8(&qword_100483F90);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin(v3);
  v7 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v66 - v8;
  v10 = qword_100489BF8;
  v11 = *(void (**)(__n128 *__return_ptr, __n128))(**(_QWORD **)&v0[qword_100489BF8] + 144);
  v12 = swift_retain();
  v11(v74, v12);
  swift_release();
  memcpy(v75, v74, 0x213uLL);
  sub_1000642CC((uint64_t)v75);
  if ((v75[114] & 1) == 0)
  {
    v13 = *(float *)&v75[113];
    v14 = *(void (**)(__n128 *__return_ptr, __n128))(**(_QWORD **)&v0[v10] + 144);
    v15 = swift_retain();
    v14(v74, v15);
    swift_release();
    if (v74[31].n128_u64[0])
    {
      v73 = v74[31].n128_u64[0];
      v72 = v74[30].n128_u64[1];
      v16 = qword_100489C00;
      v17 = *(void (**)(__n128 *__return_ptr, __n128))(**(_QWORD **)&v0[qword_100489C00] + 144);
      v18 = swift_retain();
      v17(v74, v18);
      swift_release();
      v19 = 0.0;
      v20 = 0.0;
      if ((v74[4].n128_u8[0] & 1) == 0)
      {
        v21 = *(void (**)(__n128 *__return_ptr, __n128))(**(_QWORD **)&v0[v16] + 144);
        v22 = swift_retain();
        v21(v74, v22);
        swift_release();
        if ((v74[4].n128_u8[0] & 1) != 0)
        {
          __break(1u);
          goto LABEL_32;
        }
        v23 = simd_float4x4.position.getter(v74[0], v74[1], v74[2], v74[3]);
        v20 = *((float *)&v23 + 1);
      }
      v24 = *(void (**)(__n128 *__return_ptr, __n128))(**(_QWORD **)&v0[v16] + 144);
      v25 = swift_retain();
      v24(v74, v25);
      swift_release();
      if ((v74[9].n128_u8[8] & 1) != 0)
        goto LABEL_9;
      v26 = *(void (**)(__n128 *__return_ptr, __n128))(**(_QWORD **)&v0[v16] + 144);
      v27 = swift_retain();
      v26(v74, v27);
      swift_release();
      if ((v74[9].n128_u8[8] & 1) == 0)
      {
        v19 = v74[9].n128_f32[1];
LABEL_9:
        v28 = *(void (**)(__n128))(**(_QWORD **)&v0[qword_100489C10] + 144);
        v29 = swift_retain();
        v28(v29);
        swift_release();
        v30 = sub_10009BF0C();
        sub_1001BE15C((uint64_t)v30, (uint64_t *)v74, v13, v13);
        v31 = v74[1].n128_u64[1];
        swift_bridgeObjectRelease(v74[0].n128_u64[1]);
        v32 = String._bridgeToObjectiveC()();
        objc_msgSend(v1, "set_accessibilitySpeakableHeight:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

        v33 = qword_100489BD0;
        if ((v1[qword_100489BD0] & 1) != 0 || (v34 = sub_1001BAEC0()) == 0)
        {
          v60 = v73;
LABEL_29:
          swift_bridgeObjectRelease(v60);
          return;
        }
        v71 = ObjectType;
        v66 = v34;
        v67 = v33;
        if (qword_10047AA78 != -1)
          swift_once(&qword_10047AA78, sub_1000E1430);
        v69 = qword_1004AF548;
        v70 = qword_1004AF540;
        v68 = qword_1004AF550;
        v74[0].n128_u64[0] = 0;
        v74[0].n128_u64[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(71);
        v35._object = (void *)0x80000001003E5C00;
        v35._countAndFlagsBits = 0xD000000000000013;
        String.append(_:)(v35);
        Float.write<A>(to:)(v74, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v13);
        v36._countAndFlagsBits = 0xD000000000000016;
        v36._object = (void *)0x80000001003E5C20;
        String.append(_:)(v36);
        Float.write<A>(to:)(v74, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v20);
        v37._countAndFlagsBits = 0xD000000000000017;
        v37._object = (void *)0x80000001003E5C40;
        String.append(_:)(v37);
        Float.write<A>(to:)(v74, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v19);
        v38._countAndFlagsBits = 46;
        v38._object = (void *)0xE100000000000000;
        String.append(_:)(v38);
        v39 = v74[0].n128_u64[1];
        Log.default(_:isPrivate:)((Swift::String)v74[0], 0);
        swift_bridgeObjectRelease(v39);
        v40 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
        v41 = swift_allocObject(v40, 40, 7);
        *(_OWORD *)(v41 + 16) = xmmword_1003B0F00;
        *(_QWORD *)(v41 + 32) = v1;
        v74[0].n128_u64[0] = v41;
        specialized Array._endMutation()(v41);
        v42 = v74[0].n128_u64[0];
        v43 = sub_10000C4B0(&qword_100489ED8, type metadata accessor for PersonHeightView, (uint64_t)&unk_1003BBEF0);
        v44 = v1;
        MeasurementEvent.init(name:results:)(0xD00000000000001ALL, 0x80000001003E5C60, v42, v71, v43);
        if (qword_10047A930 != -1)
          swift_once(&qword_10047A930, sub_100083368);
        if (qword_1004AF240)
        {
          v45 = *(_QWORD *)(qword_1004AF240 + qword_1004AF720);
          if (v45)
          {
            sub_1001BEEA4((uint64_t)v9, (uint64_t)v7);
            v46 = *(unsigned __int8 *)(v4 + 80);
            v47 = (v46 + 16) & ~v46;
            v71 = swift_allocObject(&unk_10044B740, v47 + v5, v46 | 7);
            sub_1001BEFAC((uint64_t)v7, v71 + v47);
            v48 = v45 + OBJC_IVAR____TtC7Measure15ResultsReporter_report;
            v49 = *(int *)(type metadata accessor for Report(0) + 20);
            v50 = *(double **)(v48 + v49);
            swift_retain();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v50);
            *(_QWORD *)(v48 + v49) = v50;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v50 = sub_10005FEE4(0, *((_QWORD *)v50 + 2) + 1, 1, v50);
              *(_QWORD *)(v48 + v49) = v50;
            }
            v53 = *((_QWORD *)v50 + 2);
            v52 = *((_QWORD *)v50 + 3);
            if (v53 >= v52 >> 1)
            {
              v50 = sub_10005FEE4((double *)(v52 > 1), v53 + 1, 1, v50);
              *(_QWORD *)(v48 + v49) = v50;
            }
            *((_QWORD *)v50 + 2) = v53 + 1;
            v54 = &v50[2 * v53];
            v55 = v71;
            *((_QWORD *)v54 + 4) = sub_1001BEFF4;
            *((_QWORD *)v54 + 5) = v55;
            sub_1000CE180();
            swift_release();
          }
          v56 = *(id *)&v44[qword_100489B50];
          v57 = String._bridgeToObjectiveC()();
          v58 = v66;
          objc_msgSend(v56, "runAction:withKey:", v66, v57);

          objc_msgSend(v44, "toggleViewVisibilityWithIsVisible:", 1);
          sub_1001BEE64((uint64_t)v9);
          v1[v67] = 1;
          v59 = (unint64_t *)&v44[qword_100489C28];
          v60 = *(_QWORD *)&v44[qword_100489C28 + 8];
          v61 = v73;
          *v59 = v72;
          v59[1] = v61;
          goto LABEL_29;
        }
LABEL_33:
        __break(1u);
        return;
      }
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
  }
  v62 = qword_100489BD0;
  if (v1[qword_100489BD0] == 1)
  {
    v63 = (uint64_t *)&v1[qword_100489C28];
    v64 = *(_QWORD *)&v1[qword_100489C28 + 8];
    if (v64)
    {
      v65 = *v63;
      objc_msgSend(v1, "toggleViewVisibilityWithIsVisible:", 0, swift_bridgeObjectRetain(*(_QWORD *)&v1[qword_100489C28 + 8]).n128_f64[0]);
      v1[v62] = 0;
      if (qword_10047AB68 != -1)
        swift_once(&qword_10047AB68, sub_10011E814);
      sub_10011F8DC(v65, v64);
      swift_bridgeObjectRelease(v64);
      v60 = v63[1];
      *v63 = 0;
      v63[1] = 0;
      goto LABEL_29;
    }
  }
}

void sub_1001BA5B8(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void (*v8)(_BYTE *__return_ptr);
  id v9;
  void *v10;
  unint64_t v11;
  int64_t Width;
  float *v13;
  id v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  CGPoint v19;
  id v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  __int128 v25;
  CGPoint v26;
  double v27;
  double v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  uint64_t v33;
  float *v34;
  CGPoint v35;
  float Height;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  float v47;
  float v48;
  uint64_t v50;
  double v51;
  double v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  double *v56;
  CGPoint v57;
  double v58;
  char *v61;
  float v62;
  double *v63;
  double x;
  double y;
  double *v66;
  uint64_t v67;
  CGFloat *v68;
  CGFloat v69;
  CGFloat v70;
  __int128 v71;
  CGFloat v72;
  CGPoint v73;
  double v74;
  float v75;
  float v76;
  double v77;
  id v78;
  id v79;
  uint64_t v80;
  double v81;
  double v82;
  id v83;
  double v84;
  uint64_t v85;
  double v86;
  id v87;
  void *v88;
  __n128 v89;
  __n128 v90;
  __n128 v91;
  __n128 v92;
  uint64_t v93;
  __n128 v94;
  double *v95;
  unsigned __int8 *BaseAddress;
  id v97;
  id v98;
  float v99;
  CGAffineTransform v100;
  _BYTE v101[512];
  _BYTE v102[512];
  _BYTE __src[531];
  _OWORD __dst[34];
  _OWORD v105[4];
  CGPoint v106;
  CGPoint v107;
  CGPoint v108;
  CGPoint v109;
  CGPoint v110;

  v2 = v1;
  v4 = objc_msgSend(a1, "segmentationBuffer");
  if (!v4)
    return;
  v98 = v4;
  v5 = objc_msgSend(a1, "sceneDepth");
  if (!v5 || (v6 = v5, v97 = objc_msgSend(v5, "depthMap"), v6, !v97))
  {
    v10 = v98;
LABEL_8:

    return;
  }
  v7 = *(void **)&v1[qword_100489C38];
  if (!v7)
  {

    v10 = v97;
    goto LABEL_8;
  }
  v8 = *(void (**)(_BYTE *__return_ptr))(**(_QWORD **)&v1[qword_100489BF8] + 144);
  swift_retain();
  v9 = v7;
  v8(__src);
  swift_release();
  memcpy(__dst, __src, 0x213uLL);
  sub_1000642CC((uint64_t)__dst);
  if ((__dst[30] & 1) != 0)
  {

  }
  else
  {
    LODWORD(v11) = __dst[29];
    v94 = (__n128)__dst[29];
    CVPixelBufferLockBaseAddress((CVPixelBufferRef)v98, 1uLL);
    Width = CVPixelBufferGetWidth((CVPixelBufferRef)v98);
    BaseAddress = (unsigned __int8 *)CVPixelBufferGetBaseAddress((CVPixelBufferRef)v98);
    CVPixelBufferLockBaseAddress((CVPixelBufferRef)v97, 1uLL);
    v13 = (float *)CVPixelBufferGetBaseAddress((CVPixelBufferRef)v97);
    v14 = sub_1001B796C();
    if (qword_10047AFC0 != -1)
LABEL_62:
      swift_once(&qword_10047AFC0, sub_100196864);
    objc_msgSend(v14, "convertPoint:toNode:", v9, xmmword_1004AFAD0);
    v16 = v15;
    v18 = v17;

    sub_1001B8744((CGFloat *)v105);
    *(_OWORD *)__src = v105[0];
    *(_OWORD *)&__src[16] = v105[1];
    *(_OWORD *)&__src[32] = v105[2];
    CGAffineTransformInvert((CGAffineTransform *)v102, (CGAffineTransform *)__src);
    *(_OWORD *)__src = *(_OWORD *)v102;
    *(_OWORD *)&__src[16] = *(_OWORD *)&v102[16];
    *(_OWORD *)&__src[32] = *(_OWORD *)&v102[32];
    v106.x = v16;
    v106.y = v18;
    v19 = CGPointApplyAffineTransform(v106, (CGAffineTransform *)__src);
    v20 = sub_1001B796C();
    if (qword_10047AFB8 != -1)
      swift_once(&qword_10047AFB8, sub_1001967FC);
    objc_msgSend(v20, "convertPoint:toNode:", v9, *(double *)&qword_1004AFAC0, *(double *)&qword_1004AFAC8);
    v22 = v21;
    v24 = v23;

    v25 = *(_OWORD *)&v2[qword_100489BF0 + 16];
    *(_OWORD *)__src = *(_OWORD *)&v2[qword_100489BF0];
    *(_OWORD *)&__src[16] = v25;
    *(_OWORD *)&__src[32] = *(_OWORD *)&v2[qword_100489BF0 + 32];
    CGAffineTransformInvert((CGAffineTransform *)v102, (CGAffineTransform *)__src);
    *(_OWORD *)__src = *(_OWORD *)v102;
    *(_OWORD *)&__src[16] = *(_OWORD *)&v102[16];
    *(_OWORD *)&__src[32] = *(_OWORD *)&v102[32];
    v107.x = v22;
    v107.y = v24;
    v26 = CGPointApplyAffineTransform(v107, (CGAffineTransform *)__src);
    v27 = static CGPoint.- infix(_:_:)(v26.x);
    v29 = v28;
    v30 = CGPoint.normalized()(v27, v28);
    v32 = v31;
    v34 = (float *)Float.piDiv2.unsafeMutableAddressor(v33);
    CGAffineTransformMakeRotation((CGAffineTransform *)__src, *v34);
    v108.x = v30;
    v108.y = v32;
    v35 = CGPointApplyAffineTransform(v108, (CGAffineTransform *)__src);
    if (qword_10047B190 != -1)
      swift_once(&qword_10047B190, sub_1001C81CC);
    v88 = v9;
    if ((*(_BYTE *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80) & 1) == 0)
    {
      Height = CGRectGetHeight(*(CGRect *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 48));
      v99 = (float)Width / Height;
      v95 = sub_1001BEBA8(v27, v29);
      v37.n128_u32[0] = v11;
      v37.n128_f32[1] = v94.n128_f32[1] + -0.175;
      v37.n128_u64[1] = v94.n128_u32[2];
      v94 = v37;
      type metadata accessor for MeasureCamera(0);
      swift_retain();
      StateValue.wrappedValue.getter(__src, v38);
      swift_release();
      memcpy(v102, __src, sizeof(v102));
      sub_100012C00((uint64_t)v102);
      v91 = *(__n128 *)&v102[192];
      v92 = *(__n128 *)&v102[176];
      v89 = *(__n128 *)&v102[224];
      v90 = *(__n128 *)&v102[208];
      swift_retain();
      StateValue.wrappedValue.getter(v101, v39);
      swift_release();
      memcpy(__src, v101, 0x200uLL);
      v40 = sub_100012C00((uint64_t)__src);
      v41 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v40, v94, v92, v91, v90, v89, *(double *)&__src[32]);
      v42 = CGPoint.init(_:)(v41);
      v44 = v43;
      v45 = (double)Width;
      v46 = -1;
      v47 = 0.0;
      Width = 0xC3E0000000000001;
      v48 = 0.0;
LABEL_18:
      v50 = -1;
      while (1)
      {
        v51 = CGPoint.divide(by:)(v99, (double)v46, (double)v50);
        v53 = static CGPoint.+ infix(_:_:)(v42, v44, v51, v52);
        v55 = v54;
        v14 = v2;
        sub_1001B8640(v101);
        v100 = *(CGAffineTransform *)v101;
        v109.x = v53;
        v109.y = v55;
        v57 = CGPointApplyAffineTransform(v109, &v100);
        v58 = round(v57.x) + round(v57.y) * v45;
        if ((~*(_QWORD *)&v58 & 0x7FF0000000000000) == 0)
          break;
        if (v58 <= -9.22337204e18)
          goto LABEL_51;
        if (v58 >= 9.22337204e18)
          goto LABEL_52;
        if (v57.x >= 0.0 && v57.x < 256.0 && v57.y >= 0.0 && v57.y < 192.0)
        {
          v48 = v48 + v13[(uint64_t)v58];
          v47 = v47 + 1.0;
        }
        if (++v50 == 2)
        {
          if (v46++ != 1)
            goto LABEL_18;
          v56 = v95;
          v93 = *((_QWORD *)v95 + 2);
          if (v93)
          {
            v11 = 0;
            v61 = &v2[qword_100489BE0];
            v94.n128_u64[0] = (unint64_t)(v95 + 4);
            v9 = (id)0xC3E0000000000001;
            v62 = v48 / v47;
            while (1)
            {
              if (v11 >= *((_QWORD *)v56 + 2))
              {
LABEL_61:
                __break(1u);
                goto LABEL_62;
              }
              v63 = (double *)(v94.n128_u64[0] + 16 * v11);
              x = *v63;
              y = v63[1];
              v66 = sub_1001BCB74(v35.x, v35.y, v99, *v63, y);
              v14 = v66;
              v67 = *((_QWORD *)v66 + 2);
              if (v67)
                break;
LABEL_36:
              ++v11;
              swift_bridgeObjectRelease(v14);
              v56 = v95;
              if (v11 == v93)
              {
LABEL_49:
                swift_bridgeObjectRelease(v56);
                goto LABEL_54;
              }
            }
            Width = qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits;
            v68 = v66 + 5;
            while ((*(_BYTE *)(Width + 80) & 1) == 0)
            {
              v70 = *(v68 - 1);
              v69 = *v68;
              v110.x = v70;
              v110.y = *v68;
              if (!CGRectContainsPoint(*(CGRect *)(Width + 48), v110))
                goto LABEL_36;
              v71 = *((_OWORD *)v61 + 1);
              *(_OWORD *)&v100.a = *(_OWORD *)v61;
              *(_OWORD *)&v100.c = v71;
              *(_OWORD *)&v100.tx = *((_OWORD *)v61 + 2);
              v72 = v70;
              *(CGFloat *)&v71 = v69;
              v73 = CGPointApplyAffineTransform(*(CGPoint *)((char *)&v71 - 8), &v100);
              v74 = round(v73.x) + round(v73.y) * v45;
              if ((~*(_QWORD *)&v74 & 0x7FF0000000000000) == 0)
              {
                __break(1u);
LABEL_59:
                __break(1u);
LABEL_60:
                __break(1u);
                goto LABEL_61;
              }
              if (v74 <= -9.22337204e18)
                goto LABEL_59;
              if (v74 >= 9.22337204e18)
                goto LABEL_60;
              if (BaseAddress[(uint64_t)v74] >= 2u && vabds_f32(v13[(uint64_t)v74], v62) < 0.2)
              {
                swift_bridgeObjectRelease(v95);
                v56 = (double *)v14;
                goto LABEL_49;
              }
              v68 += 2;
              if (!--v67)
                goto LABEL_36;
            }
            __break(1u);
            goto LABEL_64;
          }
LABEL_53:
          swift_bridgeObjectRelease(v56);
          y = v26.y;
          x = v26.x;
LABEL_54:
          v75 = static CGPoint.distance(_:_:)(x, y, v19.x, v19.y);
          if (qword_10047AFC8 != -1)
            swift_once(&qword_10047AFC8, sub_100196878);
          v76 = *(double *)&qword_1004AFAE0;
          v77 = (float)(v75 / v76);
          v78 = sub_1001B796C();
          v79 = objc_msgSend(v78, "fillColor");

          UIColor.rgba.getter(v80);
          v82 = v81;
          v83 = sub_1001B796C();
          v84 = UIColor.rgba.getter(v83);
          UIColor.rgba.getter(v85);
          v87 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", v84, (v82 + v77) * 0.5, v86, 1.0);
          objc_msgSend(v83, "setFillColor:", v87);

          CVPixelBufferUnlockBaseAddress((CVPixelBufferRef)v97, 1uLL);
          CVPixelBufferUnlockBaseAddress((CVPixelBufferRef)v98, 1uLL);

          return;
        }
      }
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
LABEL_64:
    __break(1u);
  }
}

id sub_1001BAEC0()
{
  char *v0;
  uint64_t v1;
  void (*v2)(_QWORD *__return_ptr, __n128);
  __n128 v3;
  unint64_t v4;
  unint64_t v5;
  void (*v6)(_QWORD *__return_ptr, __n128);
  __n128 v7;
  id v8;
  float v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  void *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  void *v40;
  char *v41;
  id v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  void *v47;
  char *v48;
  void *v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  void *v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  Class isa;
  uint64_t v64;
  uint64_t v65;
  Class v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  Class v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  Class v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  Class v78;
  uint64_t v79;
  uint64_t v80;
  Class v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  Class v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  Class v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  Class v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  Class v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  id v104;
  id v105;
  id v106;
  Class v107;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  __n128 v143;
  __n128 v144;
  __n128 v145;
  __n128 v146;
  __n128 v147;
  __n128 v148;
  __n128 v149;
  __n128 v150;
  __n128 v151;
  __n128 v152;
  _QWORD aBlock[64];
  _OWORD v154[32];
  double v155[64];
  _OWORD v156[32];
  double v157[68];
  _QWORD __src[68];
  _QWORD __dst[68];

  v1 = qword_100489BF8;
  v2 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)&v0[qword_100489BF8] + 144);
  v3 = swift_retain();
  v2(__src, v3);
  swift_release();
  memcpy(__dst, __src, 0x213uLL);
  sub_1000642CC((uint64_t)__dst);
  if ((__dst[60] & 1) != 0)
    return 0;
  v4 = __dst[59];
  v5 = __dst[58];
  v6 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)&v0[v1] + 144);
  v7 = swift_retain();
  v6(v157, v7);
  swift_release();
  memcpy(__src, v157, 0x213uLL);
  sub_1000642CC((uint64_t)__src);
  if ((__src[57] & 1) != 0)
    return 0;
  v9 = *((float *)&__src[56] + 1);
  v10.n128_u64[0] = v5;
  v10.n128_u64[1] = v4;
  v151 = v10;
  type metadata accessor for MeasureCamera(0);
  swift_retain();
  StateValue.wrappedValue.getter(v157, v11);
  swift_release();
  memcpy(v154, v157, sizeof(v154));
  sub_100012C00((uint64_t)v154);
  v147 = (__n128)v154[12];
  v149 = (__n128)v154[11];
  v143 = (__n128)v154[14];
  v145 = (__n128)v154[13];
  swift_retain();
  StateValue.wrappedValue.getter(v157, v12);
  swift_release();
  memcpy(v155, v157, sizeof(v155));
  v13 = sub_100012C00((uint64_t)v155);
  v14 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v13, v151, v149, v147, v145, v143, v155[4]);
  v15 = CGPoint.init(_:)(v14);
  v16.n128_u32[0] = v5;
  v16.n128_f32[1] = v151.n128_f32[1] + (float)(v9 * -0.5);
  v16.n128_u64[1] = v151.n128_u32[2];
  v152 = v16;
  swift_retain();
  StateValue.wrappedValue.getter(v157, v17);
  swift_release();
  memcpy(v156, v157, sizeof(v156));
  sub_100012C00((uint64_t)v156);
  v148 = (__n128)v156[12];
  v150 = (__n128)v156[11];
  v144 = (__n128)v156[14];
  v146 = (__n128)v156[13];
  swift_retain();
  StateValue.wrappedValue.getter(aBlock, v18);
  swift_release();
  memcpy(v157, aBlock, 0x200uLL);
  v19 = sub_100012C00((uint64_t)v157);
  v20 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v19, v152, v150, v148, v146, v144, v157[4]);
  CGPoint.init(_:)(v20);
  static CGPoint.- infix(_:_:)(v15);
  v21 = -CGPoint.length()();
  v22 = (void *)objc_opt_self(SKAction);
  v23 = swift_allocObject(&unk_10044B768, 24, 7);
  *(_QWORD *)(v23 + 16) = v0;
  aBlock[4] = sub_1001BF050;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D28CC;
  aBlock[3] = &unk_10044B780;
  v24 = _Block_copy(aBlock);
  v25 = v0;
  swift_release();
  v152.n128_u64[0] = (unint64_t)objc_msgSend(v22, "customActionWithDuration:actionBlock:", v24, 0.0);
  _Block_release(v24);
  v148.n128_u64[0] = (unint64_t)objc_msgSend(v22, "moveTo:duration:", 0.0, v21, 0.0);
  v134 = objc_msgSend(v22, "fadeAlphaTo:duration:", 0.0, 0.0);
  v141 = objc_msgSend(v22, "moveTo:duration:", 0.0, 0.0, 1.4);
  aBlock[4] = sub_1001BBFEC;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BC008;
  aBlock[3] = &unk_10044B7A8;
  v26 = _Block_copy(aBlock);
  objc_msgSend(v141, "setTimingFunction:", v26);
  _Block_release(v26);
  v27 = swift_allocObject(&unk_10044B7E0, 24, 7);
  *(_QWORD *)(v27 + 16) = v25;
  aBlock[4] = sub_1001BF058;
  aBlock[5] = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D28CC;
  aBlock[3] = &unk_10044B7F8;
  v28 = _Block_copy(aBlock);
  v29 = v25;
  swift_release();
  v150.n128_u64[0] = (unint64_t)objc_msgSend(v22, "customActionWithDuration:actionBlock:", v28, 0.0);
  _Block_release(v28);
  v30 = swift_allocObject(&unk_10044B830, 32, 7);
  *(float *)(v30 + 16) = v9;
  *(_QWORD *)(v30 + 24) = v29;
  aBlock[4] = sub_1001BF084;
  aBlock[5] = v30;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D28CC;
  aBlock[3] = &unk_10044B848;
  v31 = _Block_copy(aBlock);
  v32 = v29;
  swift_release();
  v129 = objc_msgSend(v22, "customActionWithDuration:actionBlock:", v31, 1.4);
  _Block_release(v31);
  v33 = swift_allocObject(&unk_10044B880, 24, 7);
  *(_QWORD *)(v33 + 16) = v32;
  aBlock[4] = sub_1001BF090;
  aBlock[5] = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D28CC;
  aBlock[3] = &unk_10044B898;
  v34 = _Block_copy(aBlock);
  v35 = v32;
  swift_release();
  v138 = objc_msgSend(v22, "customActionWithDuration:actionBlock:", v34, 0.0);
  _Block_release(v34);
  v36 = swift_allocObject(&unk_10044B8D0, 24, 7);
  *(_QWORD *)(v36 + 16) = v35;
  aBlock[4] = sub_1001BF098;
  aBlock[5] = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D28CC;
  aBlock[3] = &unk_10044B8E8;
  v37 = _Block_copy(aBlock);
  v38 = v35;
  swift_release();
  v144.n128_u64[0] = (unint64_t)objc_msgSend(v22, "customActionWithDuration:actionBlock:", v37, 0.0);
  _Block_release(v37);
  v39 = swift_allocObject(&unk_10044B920, 24, 7);
  *(_QWORD *)(v39 + 16) = v38;
  aBlock[4] = sub_1001BF0A0;
  aBlock[5] = v39;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D28CC;
  aBlock[3] = &unk_10044B938;
  v40 = _Block_copy(aBlock);
  v41 = v38;
  swift_release();
  v42 = objc_msgSend(v22, "customActionWithDuration:actionBlock:", v40, 0.0);
  _Block_release(v40);
  v126 = objc_msgSend(v22, "waitForDuration:", 0.05);
  v124 = objc_msgSend(v22, "fadeInWithDuration:", 0.4);
  v43 = swift_allocObject(&unk_10044B970, 24, 7);
  *(_QWORD *)(v43 + 16) = v41;
  aBlock[4] = sub_1001BF0A8;
  aBlock[5] = v43;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D28CC;
  aBlock[3] = &unk_10044B988;
  v44 = _Block_copy(aBlock);
  v45 = v41;
  swift_release();
  v146.n128_u64[0] = (unint64_t)objc_msgSend(v22, "customActionWithDuration:actionBlock:", v44, 0.4);
  _Block_release(v44);
  v46 = swift_allocObject(&unk_10044B9C0, 24, 7);
  *(_QWORD *)(v46 + 16) = v45;
  aBlock[4] = sub_1001BF0B0;
  aBlock[5] = v46;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D28CC;
  aBlock[3] = &unk_10044B9D8;
  v47 = _Block_copy(aBlock);
  v48 = v45;
  swift_release();
  v136 = objc_msgSend(v22, "customActionWithDuration:actionBlock:", v47, 0.4);
  _Block_release(v47);
  aBlock[4] = sub_1001BC800;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BC008;
  aBlock[3] = &unk_10044BA00;
  v49 = _Block_copy(aBlock);
  objc_msgSend(v136, "setTimingFunction:", v49);
  _Block_release(v49);
  v131 = objc_msgSend(v22, "waitForDuration:", 0.37);
  v50 = swift_allocObject(&unk_10044BA38, 24, 7);
  *(_QWORD *)(v50 + 16) = v48;
  aBlock[4] = sub_1001BF0B8;
  aBlock[5] = v50;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D28CC;
  aBlock[3] = &unk_10044BA50;
  v51 = _Block_copy(aBlock);
  v52 = v48;
  swift_release();
  v122 = objc_msgSend(v22, "customActionWithDuration:actionBlock:", v51, 0.25);
  _Block_release(v51);
  v117 = objc_msgSend(v22, "waitForDuration:", 0.1);
  v53 = swift_allocObject(&unk_10044BA88, 24, 7);
  *(_QWORD *)(v53 + 16) = v52;
  aBlock[4] = sub_1001BF0C0;
  aBlock[5] = v53;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D28CC;
  aBlock[3] = &unk_10044BAA0;
  v54 = _Block_copy(aBlock);
  v55 = v52;
  swift_release();
  v115 = objc_msgSend(v22, "customActionWithDuration:actionBlock:", v54, 0.11);
  _Block_release(v54);
  v113 = objc_msgSend(v22, "waitForDuration:", 0.07);
  v56 = swift_allocObject(&unk_10044BAD8, 24, 7);
  *(_QWORD *)(v56 + 16) = v55;
  aBlock[4] = sub_1001BF0C8;
  aBlock[5] = v56;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D28CC;
  aBlock[3] = &unk_10044BAF0;
  v57 = _Block_copy(aBlock);
  v58 = v55;
  swift_release();
  v59 = objc_msgSend(v22, "customActionWithDuration:actionBlock:", v57, 0.08);
  _Block_release(v57);
  v60 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
  v61 = swift_allocObject(v60, 72, 7);
  *(_OWORD *)(v61 + 16) = xmmword_1003B2960;
  *(_QWORD *)(v61 + 32) = v144.n128_u64[0];
  *(_QWORD *)(v61 + 40) = v42;
  *(_QWORD *)(v61 + 48) = v138;
  *(_QWORD *)(v61 + 56) = v134;
  *(_QWORD *)(v61 + 64) = v152.n128_u64[0];
  aBlock[0] = v61;
  specialized Array._endMutation()(v61);
  v62 = aBlock[0];
  sub_100018148(0, (unint64_t *)&unk_100489EE0, SKAction_ptr);
  v144.n128_u64[0] = (unint64_t)(id)v144.n128_u64[0];
  v140 = v42;
  v139 = v138;
  v135 = v134;
  v133 = (id)v152.n128_u64[0];
  isa = Array._bridgeToObjectiveC()().super.isa;
  v121 = objc_msgSend(v22, "group:", isa, swift_bridgeObjectRelease(v62).n128_f64[0]);

  v64 = swift_allocObject(v60, 48, 7);
  *(_OWORD *)(v64 + 16) = xmmword_1003B1460;
  *(_QWORD *)(v64 + 32) = v141;
  *(_QWORD *)(v64 + 40) = v129;
  aBlock[0] = v64;
  specialized Array._endMutation()(v64);
  v65 = aBlock[0];
  v142 = v141;
  v130 = v129;
  v66 = Array._bridgeToObjectiveC()().super.isa;
  v67 = objc_msgSend(v22, "group:", v66, swift_bridgeObjectRelease(v65).n128_f64[0]);

  v68 = swift_allocObject(v60, 48, 7);
  *(_OWORD *)(v68 + 16) = xmmword_1003B1460;
  *(_QWORD *)(v68 + 32) = v148.n128_u64[0];
  *(_QWORD *)(v68 + 40) = v67;
  aBlock[0] = v68;
  specialized Array._endMutation()(v68);
  v69 = aBlock[0];
  v148.n128_u64[0] = (unint64_t)(id)v148.n128_u64[0];
  v128 = v67;
  v70 = Array._bridgeToObjectiveC()().super.isa;
  v71 = objc_msgSend(v22, "sequence:", v70, swift_bridgeObjectRelease(v69).n128_f64[0]);

  v72 = swift_allocObject(v60, 48, 7);
  *(_OWORD *)(v72 + 16) = xmmword_1003B1460;
  *(_QWORD *)(v72 + 32) = v126;
  *(_QWORD *)(v72 + 40) = v124;
  aBlock[0] = v72;
  specialized Array._endMutation()(v72);
  v73 = aBlock[0];
  v127 = v126;
  v125 = v124;
  v74 = Array._bridgeToObjectiveC()().super.isa;
  v75 = objc_msgSend(v22, "sequence:", v74, swift_bridgeObjectRelease(v73).n128_f64[0]);

  v76 = swift_allocObject(v60, 48, 7);
  *(_OWORD *)(v76 + 16) = xmmword_1003B1460;
  *(_QWORD *)(v76 + 32) = v71;
  *(_QWORD *)(v76 + 40) = v75;
  aBlock[0] = v76;
  specialized Array._endMutation()(v76);
  v77 = aBlock[0];
  v120 = v71;
  v119 = v75;
  v78 = Array._bridgeToObjectiveC()().super.isa;
  v111 = objc_msgSend(v22, "group:", v78, swift_bridgeObjectRelease(v77).n128_f64[0]);

  v79 = swift_allocObject(v60, 64, 7);
  *(_OWORD *)(v79 + 16) = xmmword_1003B1410;
  *(_QWORD *)(v79 + 32) = v117;
  *(_QWORD *)(v79 + 40) = v115;
  *(_QWORD *)(v79 + 48) = v113;
  *(_QWORD *)(v79 + 56) = v59;
  aBlock[0] = v79;
  specialized Array._endMutation()(v79);
  v80 = aBlock[0];
  v118 = v117;
  v116 = v115;
  v114 = v113;
  v112 = v59;
  v81 = Array._bridgeToObjectiveC()().super.isa;
  v82 = objc_msgSend(v22, "sequence:", v81, swift_bridgeObjectRelease(v80).n128_f64[0]);

  v83 = swift_allocObject(v60, 48, 7);
  *(_OWORD *)(v83 + 16) = xmmword_1003B1460;
  *(_QWORD *)(v83 + 32) = v122;
  *(_QWORD *)(v83 + 40) = v82;
  aBlock[0] = v83;
  specialized Array._endMutation()(v83);
  v84 = aBlock[0];
  v123 = v122;
  v110 = v82;
  v85 = Array._bridgeToObjectiveC()().super.isa;
  v86 = objc_msgSend(v22, "group:", v85, swift_bridgeObjectRelease(v84).n128_f64[0]);

  v87 = swift_allocObject(v60, 48, 7);
  *(_OWORD *)(v87 + 16) = xmmword_1003B1460;
  *(_QWORD *)(v87 + 32) = v131;
  *(_QWORD *)(v87 + 40) = v86;
  aBlock[0] = v87;
  specialized Array._endMutation()(v87);
  v88 = aBlock[0];
  v132 = v131;
  v109 = v86;
  v89 = Array._bridgeToObjectiveC()().super.isa;
  v90 = objc_msgSend(v22, "sequence:", v89, swift_bridgeObjectRelease(v88).n128_f64[0]);

  v91 = swift_allocObject(v60, 48, 7);
  *(_OWORD *)(v91 + 16) = xmmword_1003B1460;
  *(_QWORD *)(v91 + 32) = v136;
  *(_QWORD *)(v91 + 40) = v146.n128_u64[0];
  aBlock[0] = v91;
  specialized Array._endMutation()(v91);
  v92 = aBlock[0];
  v137 = v136;
  v146.n128_u64[0] = (unint64_t)(id)v146.n128_u64[0];
  v93 = Array._bridgeToObjectiveC()().super.isa;
  v94 = objc_msgSend(v22, "group:", v93, swift_bridgeObjectRelease(v92).n128_f64[0]);

  v95 = swift_allocObject(v60, 48, 7);
  *(_OWORD *)(v95 + 16) = xmmword_1003B1460;
  *(_QWORD *)(v95 + 32) = v94;
  *(_QWORD *)(v95 + 40) = v90;
  aBlock[0] = v95;
  specialized Array._endMutation()(v95);
  v96 = aBlock[0];
  v97 = v94;
  v98 = v90;
  v99 = Array._bridgeToObjectiveC()().super.isa;
  v100 = objc_msgSend(v22, "group:", v99, swift_bridgeObjectRelease(v96).n128_f64[0]);

  v101 = swift_allocObject(v60, 64, 7);
  *(_OWORD *)(v101 + 16) = xmmword_1003B1410;
  *(_QWORD *)(v101 + 32) = v121;
  *(_QWORD *)(v101 + 40) = v111;
  *(_QWORD *)(v101 + 48) = v100;
  *(_QWORD *)(v101 + 56) = v150.n128_u64[0];
  aBlock[0] = v101;
  specialized Array._endMutation()(v101);
  v102 = aBlock[0];
  v103 = v121;
  v104 = v111;
  v105 = v100;
  v106 = (id)v150.n128_u64[0];
  v107 = Array._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v22, "sequence:", v107, swift_bridgeObjectRelease(v102).n128_f64[0]);

  return v8;
}

double sub_1001BBFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  char v4;

  v2 = *(_QWORD *)(a2 + qword_100489BD8);
  v4 = 1;
  swift_retain(v2);
  Synchronized.wrappedValue.setter(&v4);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

float sub_1001BBFEC(float a1)
{
  return sqrtf(1.0 - (float)((float)(a1 + -1.0) * (float)(a1 + -1.0)));
}

float sub_1001BC008(uint64_t a1, float a2)
{
  float (*v3)(uint64_t, float);
  uint64_t v4;
  uint64_t v5;
  float v6;

  v3 = *(float (**)(uint64_t, float))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = swift_retain(v4);
  v6 = v3(v5, a2);
  swift_release(v4);
  return v6;
}

void sub_1001BC050(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  id v5;
  double v6;
  double v7;
  id v8;
  uint64_t (*v9)(__n128);
  __n128 v10;
  uint64_t v11;
  __n128 v12;
  char v13;

  v13 = 0;
  swift_retain();
  Synchronized.wrappedValue.setter(&v13);
  swift_release();
  v3 = sub_1001B796C();
  v4 = objc_msgSend(v3, "fillColor");

  v5 = sub_1001B796C();
  v6 = ((double (*)(void))UIColor.rgba.getter)();
  UIColor.rgba.getter();
  v8 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", v6, 0.0, v7, 1.0);
  objc_msgSend(v5, "setFillColor:", v8);

  v9 = *(uint64_t (**)(__n128))(**(_QWORD **)(a2 + qword_100489BF8) + 200);
  v10 = swift_retain();
  v11 = v9(v10);
  v12 = swift_release();
  (*(void (**)(uint64_t (*)(uint64_t), _QWORD, __n128))(*(_QWORD *)v11 + 280))(sub_1001BF370, 0, v12);

  swift_release();
}

void sub_1001BC190(double a1, float a2, uint64_t a3, char *a4)
{
  float v6;
  float v7;
  void (*v8)(__n128);
  __n128 v9;
  id v10;
  void **v11;
  uint64_t v12;
  void ***v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  id v19;
  id v20;
  void **v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  void *v24;
  void (*v25)();
  uint64_t v26;

  v6 = a1;
  v7 = (float)((float)((float)(v6 * 0.5) / 1.4) + 0.5) * a2;
  v8 = *(void (**)(__n128))(**(_QWORD **)&a4[qword_100489C10] + 144);
  v9 = swift_retain();
  v8(v9);
  swift_release();
  v10 = sub_10009BF0C();
  sub_1001BE15C((uint64_t)v10, (uint64_t *)&v21, v7, a2);
  v11 = v21;
  v12 = v22;
  swift_bridgeObjectRelease(v24);
  v13 = (void ***)&a4[qword_100489BC8];
  v14 = *(_QWORD *)&a4[qword_100489BC8 + 8];
  *v13 = v11;
  v13[1] = (void **)v12;
  swift_bridgeObjectRelease(v14);
  v15 = (void *)objc_opt_self(SKAction);
  v16 = swift_allocObject(&unk_10044BB28, 24, 7);
  *(_QWORD *)(v16 + 16) = a4;
  v25 = sub_1001BF0D0;
  v26 = v16;
  v21 = _NSConcreteStackBlock;
  v22 = 1107296256;
  v23 = sub_10003ECA0;
  v24 = &unk_10044BB40;
  v17 = _Block_copy(&v21);
  v18 = a4;
  v19 = objc_msgSend(v15, "runBlock:", v17, swift_release().n128_f64[0]);
  _Block_release(v17);
  v20 = sub_1001B8068();
  objc_msgSend(v20, "runAction:", v19);

}

void sub_1001BC318()
{
  id v0;
  id v1;

  v0 = sub_1001B8480(&qword_100489BB8);
  if (qword_10047AF90 != -1)
    swift_once(&qword_10047AF90, sub_100196658);
  objc_msgSend(v0, "setScale:", *(double *)&qword_1004AFA88);

  v1 = sub_1001B8480(&qword_100489BC0);
  objc_msgSend(v1, "setScale:", *(double *)&qword_1004AFA88);

}

void sub_1001BC3B8()
{
  id v0;
  id v1;
  Class isa;
  NSString v3;
  id v4;
  id v5;
  Class v6;
  id v7;

  v0 = sub_1001B79EC();
  v1 = objc_msgSend(v0, "filter");

  if (v1)
  {
    isa = Int._bridgeToObjectiveC()().super.super.isa;
    v3 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setValue:forKey:", isa, v3);

    v4 = sub_1001B8298(&qword_100489B90, (uint64_t (*)(uint64_t))sub_1001B7D8C);
    v5 = objc_msgSend(v4, "filter");

    if (v5)
    {
      v6 = Int._bridgeToObjectiveC()().super.super.isa;
      v7 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "setValue:forKey:", v6, v7);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1001BC4F4()
{
  id v0;
  id v1;
  id v2;
  double v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  id v12;

  v0 = sub_1001B796C();
  v1 = objc_msgSend(v0, "fillColor");

  v2 = sub_1001B796C();
  ((void (*)(void))UIColor.rgba.getter)();
  v4 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 1.0, 1.0, v3, 1.0);
  objc_msgSend(v2, "setFillColor:", v4);

  v5 = sub_1001B7B78();
  v6 = objc_msgSend(v5, "fillColor");

  v7 = sub_1001B7B78();
  v8 = ((uint64_t (*)(void))UIColor.rgba.getter)();
  v10 = v9;
  UIColor.rgba.getter(v8);
  v12 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0, v10, v11, 1.0);
  objc_msgSend(v7, "setFillColor:", v12);

}

void sub_1001BC64C()
{
  id v0;
  id v1;
  Class isa;
  id v3;

  v0 = sub_1001B79EC();
  v1 = objc_msgSend(v0, "filter");

  if (v1)
  {
    isa = Float._bridgeToObjectiveC()().super.super.isa;
    v3 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setValue:forKey:", isa, v3);

  }
  else
  {
    __break(1u);
  }
}

void sub_1001BC718(double a1)
{
  float v1;
  float v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  id v10;

  v1 = a1;
  v2 = (float)(v1 / -0.4) + 1.0;
  v3 = sub_1001B796C();
  v4 = objc_msgSend(v3, "fillColor");

  v5 = sub_1001B796C();
  v6 = UIColor.rgba.getter(v5);
  v8 = v7;
  UIColor.rgba.getter(v6);
  v10 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", v2, v8, v9, 1.0);
  objc_msgSend(v5, "setFillColor:", v10);

}

float sub_1001BC800(float a1)
{
  return powf(a1, 4.0);
}

void sub_1001BC808(double a1)
{
  float v1;
  float v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  id v10;
  id v11;
  id v12;
  Class isa;
  id v14;

  v1 = a1;
  v2 = v1 * 4.0;
  v3 = sub_1001B7B78();
  v4 = objc_msgSend(v3, "fillColor");

  v5 = sub_1001B7B78();
  v6 = UIColor.rgba.getter(v5);
  v8 = v7;
  UIColor.rgba.getter(v6);
  v10 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", v2, v8, v9, 1.0);
  objc_msgSend(v5, "setFillColor:", v10);

  v11 = sub_1001B8298(&qword_100489B90, (uint64_t (*)(uint64_t))sub_1001B7D8C);
  v12 = objc_msgSend(v11, "filter");

  if (v12)
  {
    isa = Float._bridgeToObjectiveC()().super.super.isa;
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setValue:forKey:", isa, v14);

  }
  else
  {
    __break(1u);
  }
}

void sub_1001BC984(double a1)
{
  double v2;
  double v3;
  double v4;
  id v5;
  id v6;

  if (qword_10047AF90 != -1)
    swift_once(&qword_10047AF90, sub_100196658);
  v2 = *(double *)&qword_1004AFA88;
  v3 = *(double *)&qword_1004AFA88;
  if (qword_10047AF98 != -1)
  {
    swift_once(&qword_10047AF98, sub_1001966A0);
    v3 = *(double *)&qword_1004AFA88;
  }
  v4 = v2 + (*(double *)&qword_1004AFA90 - v3) * a1 / 0.11;
  v5 = sub_1001B8480(&qword_100489BB8);
  objc_msgSend(v5, "setScale:", v4);

  v6 = sub_1001B8480(&qword_100489BC0);
  objc_msgSend(v6, "setScale:", v4);

}

void sub_1001BCA80(double a1)
{
  double v2;
  double v3;
  id v4;
  id v5;

  if (qword_10047AF98 != -1)
    swift_once(&qword_10047AF98, sub_1001966A0);
  v2 = *(double *)&qword_1004AFA90;
  if (qword_10047AFA0 != -1)
    swift_once(&qword_10047AFA0, sub_1001966F4);
  v3 = v2 + (v2 - *(double *)&qword_1004AFA98) * a1 / -0.08;
  v4 = sub_1001B8480(&qword_100489BB8);
  objc_msgSend(v4, "setScale:", v3);

  v5 = sub_1001B8480(&qword_100489BC0);
  objc_msgSend(v5, "setScale:", v3);

}

double *sub_1001BCB74(double a1, double a2, float a3, double a4, double a5)
{
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  double *v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  double *v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  double *v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  double *v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  double v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  double *v65;

  v10 = CGPoint.multiply(by:)(-2.0, a1, a2);
  v12 = CGPoint.divide(by:)(a3, v10, v11);
  v15 = CGPoint.add(_:)(v13, v12, v14, a4, a5);
  v17 = v16;
  v18 = sub_10005F7B4(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
  v20 = *((_QWORD *)v18 + 2);
  v19 = *((_QWORD *)v18 + 3);
  v21 = v20 + 1;
  if (v20 >= v19 >> 1)
    v18 = sub_10005F7B4((double *)(v19 > 1), v20 + 1, 1, (uint64_t)v18);
  *((_QWORD *)v18 + 2) = v21;
  v22 = &v18[2 * v20];
  v22[4] = v15;
  *((_QWORD *)v22 + 5) = v17;
  v23 = CGPoint.multiply(by:)(-1.0, a1, a2);
  v25 = CGPoint.divide(by:)(a3, v23, v24);
  v28 = CGPoint.add(_:)(v26, v25, v27, a4, a5);
  v30 = v29;
  v31 = *((_QWORD *)v18 + 3);
  v32 = v20 + 2;
  if ((uint64_t)(v20 + 2) > (uint64_t)(v31 >> 1))
    v18 = sub_10005F7B4((double *)(v31 > 1), v20 + 2, 1, (uint64_t)v18);
  *((_QWORD *)v18 + 2) = v32;
  v33 = &v18[2 * v21];
  v33[4] = v28;
  *((_QWORD *)v33 + 5) = v30;
  v34 = CGPoint.multiply(by:)(0.0, a1, a2);
  v36 = CGPoint.divide(by:)(a3, v34, v35);
  v39 = CGPoint.add(_:)(v37, v36, v38, a4, a5);
  v41 = v40;
  v42 = *((_QWORD *)v18 + 3);
  v43 = v20 + 3;
  if ((uint64_t)(v20 + 3) > (uint64_t)(v42 >> 1))
    v18 = sub_10005F7B4((double *)(v42 > 1), v20 + 3, 1, (uint64_t)v18);
  *((_QWORD *)v18 + 2) = v43;
  v44 = &v18[2 * v32];
  v44[4] = v39;
  *((_QWORD *)v44 + 5) = v41;
  v45 = CGPoint.multiply(by:)(1.0, a1, a2);
  v47 = CGPoint.divide(by:)(a3, v45, v46);
  v50 = CGPoint.add(_:)(v48, v47, v49, a4, a5);
  v52 = v51;
  v53 = *((_QWORD *)v18 + 3);
  v54 = v20 + 4;
  if ((uint64_t)(v20 + 4) > (uint64_t)(v53 >> 1))
    v18 = sub_10005F7B4((double *)(v53 > 1), v20 + 4, 1, (uint64_t)v18);
  *((_QWORD *)v18 + 2) = v54;
  v55 = &v18[2 * v43];
  v55[4] = v50;
  *((_QWORD *)v55 + 5) = v52;
  v56 = CGPoint.multiply(by:)(2.0, a1, a2);
  v58 = CGPoint.divide(by:)(a3, v56, v57);
  v61 = CGPoint.add(_:)(v59, v58, v60, a4, a5);
  v63 = v62;
  v64 = *((_QWORD *)v18 + 3);
  if ((uint64_t)(v20 + 5) > (uint64_t)(v64 >> 1))
    v18 = sub_10005F7B4((double *)(v64 > 1), v20 + 5, 1, (uint64_t)v18);
  *((_QWORD *)v18 + 2) = v20 + 5;
  v65 = &v18[2 * v54];
  v65[4] = v61;
  *((_QWORD *)v65 + 5) = v63;
  return v18;
}

id sub_1001BCE40(uint64_t a1)
{
  uint64_t v1;
  NSString v2;

  v1 = *(_QWORD *)(a1 + qword_100489C40 + 8);
  swift_bridgeObjectRetain(v1);
  v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  return v2;
}

uint64_t sub_1001BCE8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v5 = (uint64_t *)(a1 + qword_100489C40);
  v6 = *(_QWORD *)(a1 + qword_100489C40 + 8);
  *v5 = v4;
  v5[1] = v7;
  return swift_bridgeObjectRelease(v6);
}

id sub_1001BCEC8(char a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(__n128);
  __n128 v7;
  uint64_t v8;
  __n128 v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v3 = *(void **)(v1 + qword_100489B48);
  if ((a1 & 1) != 0)
    return objc_msgSend(v3, "setHidden:", 0);
  v5 = v1;
  objc_msgSend(v3, "setHidden:", 1);
  v6 = *(uint64_t (**)(__n128))(**(_QWORD **)(v1 + qword_100489BF8) + 200);
  v7 = swift_retain();
  v8 = v6(v7);
  v9 = swift_release();
  (*(void (**)(uint64_t (*)(uint64_t), _QWORD, __n128))(*(_QWORD *)v8 + 280))(sub_1001BCFF4, 0, v9);
  swift_release();
  v10 = sub_1001B8480(&qword_100489BB8);
  objc_msgSend(v10, "removeAllActions");

  v11 = sub_1001B8068();
  objc_msgSend(v11, "removeAllActions");

  v12 = sub_1001B7B78();
  objc_msgSend(v12, "removeAllActions");

  v13 = sub_1001B796C();
  objc_msgSend(v13, "removeAllActions");

  return objc_msgSend(*(id *)(v5 + qword_100489B50), "removeAllActions", v4);
}

uint64_t sub_1001BCFF4(uint64_t result)
{
  *(_BYTE *)(result + 530) = 0;
  return result;
}

void sub_1001BCFFC(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1001BCEC8(a3);

}

void sub_1001BD03C()
{
  _swift_stdlib_reportUnimplementedInitializer("Measure.PersonHeightView", 24, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_1001BD068()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100489B38 + 8));
  v1 = *(_QWORD *)(v0 + qword_100489BC8 + 8);
  v2 = *(void **)(v0 + qword_100489BC8 + 24);
  v3 = *(void **)(v0 + qword_100489BC8 + 32);

  swift_bridgeObjectRelease(v1);
  swift_release(*(_QWORD *)(v0 + qword_100489BD8));
  swift_release(*(_QWORD *)(v0 + qword_100489BF8));
  swift_release(*(_QWORD *)(v0 + qword_100489C00));
  swift_release(*(_QWORD *)(v0 + qword_100489C08));
  swift_release(*(_QWORD *)(v0 + qword_100489C10));
  swift_release(*(_QWORD *)(v0 + qword_100489C18));
  swift_release(*(_QWORD *)(v0 + qword_100489C20));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100489C28 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100489C30));

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100489C40 + 8));
}

uint64_t sub_1001BD288(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100489B38 + 8));
  v2 = *(_QWORD *)(a1 + qword_100489BC8 + 8);
  v3 = *(void **)(a1 + qword_100489BC8 + 24);
  v4 = *(void **)(a1 + qword_100489BC8 + 32);

  swift_bridgeObjectRelease(v2);
  swift_release(*(_QWORD *)(a1 + qword_100489BD8));
  swift_release(*(_QWORD *)(a1 + qword_100489BF8));
  swift_release(*(_QWORD *)(a1 + qword_100489C00));
  swift_release(*(_QWORD *)(a1 + qword_100489C08));
  swift_release(*(_QWORD *)(a1 + qword_100489C10));
  swift_release(*(_QWORD *)(a1 + qword_100489C18));
  swift_release(*(_QWORD *)(a1 + qword_100489C20));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100489C28 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100489C30));

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100489C40 + 8));
}

uint64_t type metadata accessor for PersonHeightView(uint64_t a1)
{
  uint64_t result;

  result = qword_100489C70;
  if (!qword_100489C70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PersonHeightView);
  return result;
}

uint64_t sub_1001BD4E8(uint64_t a1)
{
  _QWORD v2[36];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = &unk_1003BBE28;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[6] = &unk_1003BBE40;
  v2[7] = &unk_1003BBE40;
  v2[8] = &unk_1003BBE58;
  v2[9] = &unk_1003BBE58;
  v2[10] = &unk_1003BBE58;
  v2[11] = &unk_1003BBE58;
  v2[12] = &unk_1003BBE58;
  v2[13] = &unk_1003BBE58;
  v2[14] = &unk_1003BBE58;
  v2[15] = &unk_1003BBE58;
  v2[16] = &unk_1003BBE58;
  v2[17] = &unk_1003BBE58;
  v2[18] = &unk_1003BBE58;
  v2[19] = &unk_1003BBE58;
  v2[20] = &unk_1003BBE70;
  v2[21] = &unk_1003BBE88;
  v2[22] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[23] = &unk_1003BBEA0;
  v2[24] = &unk_1003BBEA0;
  v2[25] = &unk_1003BBEA0;
  v2[26] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[27] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[28] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[29] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[30] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[31] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[32] = &unk_1003BBEB8;
  v2[33] = &unk_1003BBE58;
  v2[34] = &unk_1003BBE58;
  v2[35] = &unk_1003BBE28;
  return swift_initClassMetadata2(a1, 256, 36, v2, a1 + 200);
}

uint64_t sub_1001BD5BC()
{
  return type metadata accessor for PersonHeightView(0);
}

void destroy for PersonHeightView.AttributedText(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

}

_QWORD *initializeWithCopy for PersonHeightView.AttributedText(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  v6 = (void *)a2[4];
  a1[4] = v6;
  swift_bridgeObjectRetain(v3);
  v7 = v4;
  v8 = v5;
  v9 = v6;
  return a1;
}

_QWORD *assignWithCopy for PersonHeightView.AttributedText(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  v9 = (void *)a1[3];
  v10 = (void *)a2[3];
  a1[3] = v10;
  v11 = v10;

  v12 = (void *)a1[4];
  v13 = (void *)a2[4];
  a1[4] = v13;
  v14 = v13;

  return a1;
}

uint64_t assignWithTake for PersonHeightView.AttributedText(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for PersonHeightView.AttributedText(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonHeightView.AttributedText(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonHeightView.AttributedText()
{
  return &type metadata for PersonHeightView.AttributedText;
}

uint64_t sub_1001BD7D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000F3F18(*a1, *a2);
}

Swift::Int sub_1001BD7DC()
{
  char *v0;

  return sub_100131A34(*v0);
}

uint64_t sub_1001BD7E4(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0x80000001003D68A0;
  v3 = 0xD000000000000010;
  if (*v1 != 1)
  {
    v3 = 0xD000000000000011;
    v2 = 0x80000001003D68C0;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x65486E6F73726550;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xEC00000074686769;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1001BD86C(uint64_t a1)
{
  char *v1;

  return sub_100131B38(a1, *v1);
}

unint64_t sub_1001BD874@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1001BF28C(*a1);
  *a2 = result;
  return result;
}

void sub_1001BD8A0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEC00000074686769;
  v4 = 0x80000001003D68A0;
  v5 = 0xD000000000000010;
  if (v2 != 1)
  {
    v5 = 0xD000000000000011;
    v4 = 0x80000001003D68C0;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x65486E6F73726550;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1001BD90C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x65486E6F73726550;
}

unint64_t sub_1001BD974@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1001BF28C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001BD998(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001BDF40();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001BD9C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001BDF40();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BD9E8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;

  v17 = a4;
  v8 = sub_10000EDC8(&qword_100489EC8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v13 = a1[4];
  sub_10000F66C(a1, v12);
  v14 = sub_1001BDF40();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for PersonHeightView.ResultRepresentation.CodingKeys, &type metadata for PersonHeightView.ResultRepresentation.CodingKeys, v14, v12, v13);
  if ((a2 & 0x100000000) != 0 || (v18 = 0, KeyedEncodingContainer.encode(_:forKey:)(&v18, v8, *(float *)&a2), !v4))
  {
    if ((a3 & 0x100000000) != 0 || (v19 = 1, KeyedEncodingContainer.encode(_:forKey:)(&v19, v8, *(float *)&a3), !v4))
    {
      if ((v17 & 0x100000000) == 0)
      {
        v20 = 2;
        KeyedEncodingContainer.encode(_:forKey:)(&v20, v8, *(float *)&v17);
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1001BDB44(_QWORD *a1)
{
  unsigned int *v1;

  return sub_1001BD9E8(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32), v1[2] | ((unint64_t)*((unsigned __int8 *)v1 + 12) << 32), v1[4] | ((unint64_t)*((unsigned __int8 *)v1 + 20) << 32));
}

void sub_1001BDB9C(uint64_t a1@<X8>)
{
  id *v1;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  v4 = sub_1001BED24((uint64_t)v3);
  v6 = v5;
  v8 = v7;

  *(_DWORD *)a1 = v4;
  *(_BYTE *)(a1 + 4) = BYTE4(v4) & 1;
  *(_DWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 12) = BYTE4(v6) & 1;
  *(_DWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 20) = BYTE4(v8) & 1;
}

uint64_t sub_1001BDC0C(float a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  double v13;
  void (*v14)(char *, uint64_t);
  uint64_t result;
  float v16;
  float v17;
  uint64_t v18;
  float v19;
  uint64_t v20;

  v2 = sub_10000EDC8(&qword_1004843D8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v20 - v7;
  v9 = (void *)objc_opt_self(NSUnitLength);
  v10 = objc_msgSend(v9, "meters");
  v11 = sub_100018148(0, &qword_1004843E0, NSUnitLength_ptr);
  Measurement.init(value:unit:)(v10, v11, a1);
  v12 = objc_msgSend(v9, "inches");
  Measurement<>.converted(to:)(v12, v2);

  v13 = Measurement.value.getter(v2);
  v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v6, v2);
  *(float *)&v13 = v13;
  result = ((uint64_t (*)(char *, uint64_t))v14)(v8, v2);
  v16 = ceilf(*(float *)&v13);
  v17 = v16 / 12.0;
  if ((~COERCE_INT(v16 / 12.0) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v17 <= -9.2234e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v17 >= 9.2234e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v18 = 12 * (uint64_t)v17;
  if ((unsigned __int128)((uint64_t)v17 * (__int128)12) >> 64 != v18 >> 63)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v19 = roundf(v16 - (float)v18);
  if (v19 == 12.0)
    v19 = 0.0;
  return v19 < 10.0;
}

unint64_t sub_1001BDDF0()
{
  unint64_t result;

  result = qword_100489EA0;
  if (!qword_100489EA0)
  {
    result = swift_getWitnessTable(&unk_1003BBF0C, &type metadata for PersonHeightView.ResultRepresentation);
    atomic_store(result, (unint64_t *)&qword_100489EA0);
  }
  return result;
}

uint64_t sub_1001BDE34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001BDE44@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 96);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001BDE54@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 216);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001BDE64@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 216);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001BDE74@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 184);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001BDE84@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 184);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001BDE94@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001BDEA4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 160);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001BDEB4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 160);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001BDEC4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 96);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001BDED4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1001BDEF8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  sub_1001B9004();
  return objc_msgSend(v1, "toggleViewVisibilityWithIsVisible:", 0);
}

uint64_t sub_1001BDF28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001BDF38(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_1001BDF40()
{
  unint64_t result;

  result = qword_100489ED0;
  if (!qword_100489ED0)
  {
    result = swift_getWitnessTable(&unk_1003BC118, &type metadata for PersonHeightView.ResultRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100489ED0);
  }
  return result;
}

id sub_1001BDF84(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t inited;
  NSString *v9;
  id v10;
  unint64_t v11;
  NSString *v12;
  id v13;
  char isUniquelyReferenced_nonNull_native;
  id v15;
  NSString v16;
  Class isa;
  id v18;
  _OWORD v20[2];
  __int128 v21;
  uint64_t v22;
  _BYTE v23[72];

  v7 = sub_10000EDC8(&qword_100481980);
  inited = swift_initStackObject(v7, v23);
  *(_OWORD *)(inited + 16) = xmmword_1003B0BD0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 64) = sub_100018148(0, &qword_10047C110, UIFont_ptr);
  *(_QWORD *)(inited + 40) = a3;
  v9 = NSFontAttributeName;
  v10 = a3;
  v11 = sub_1000C7274(inited);
  if (a4)
  {
    v22 = sub_100018148(0, &qword_10047D0A0, UIColor_ptr);
    *(_QWORD *)&v21 = a4;
    sub_100020848(&v21, v20);
    v12 = NSForegroundColorAttributeName;
    v13 = a4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    sub_1000BC57C(v20, v12, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease(0x8000000000000000);
  }
  v15 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(v11);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  type metadata accessor for Key(0);
  sub_10000C4B0((unint64_t *)&qword_10047B698, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1003B0824);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v18 = objc_msgSend(v15, "initWithString:attributes:", v16, isa, swift_bridgeObjectRelease(v11).n128_f64[0]);
  swift_bridgeObjectRelease(v11);

  return v18;
}

void sub_1001BE15C(uint64_t a1@<X0>, uint64_t *a2@<X8>, float a3@<S0>, float a4@<S1>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  float v15;
  id v16;
  uint64_t v17;
  NSString v18;
  float v19;
  float v20;
  float v21;
  double v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  double v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  float v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  double v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSString v59;
  float v60;
  float v61;
  char v62;
  double v63;
  void *v64;
  id v65;
  uint64_t v66;
  id v67;
  double v68;
  void (*v69)(char *, uint64_t);
  float v70;
  float v71;
  float v72;
  uint64_t v73;
  float v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  float v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  id v86;
  double v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  id v94;
  Swift::String_optional v95;
  Swift::String v96;
  Swift::String v97;
  Swift::String v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  Swift::String v104;
  Swift::String v105;
  Swift::String v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  NSString v111;
  float v112;
  float v113;
  float v114;
  uint64_t v115;
  NSString v116;
  float v117;
  float v118;
  uint64_t *v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  uint64_t *v129;
  Swift::String v130;
  Swift::String v131;
  Swift::String v132;
  Swift::String v133;

  v8 = sub_10000EDC8(&qword_1004843D8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v120 - v13;
  v15 = fmaxf(fabsf(a3), 0.0);
  v16 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v17 = *(_QWORD *)(Defaults.measurementBias.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain(v17);
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "floatForKey:", v18, swift_bridgeObjectRelease(v17).n128_f64[0]);
  v20 = v19;

  v21 = v15 * (float)(v20 + 1.0);
  v129 = a2;
  if (a1 == 1)
  {
    v22 = v21;
    v23 = (void *)objc_opt_self(NSUnitLength);
    v24 = objc_msgSend(v23, "meters");
    v25 = sub_100018148(0, &qword_1004843E0, NSUnitLength_ptr);
    Measurement.init(value:unit:)(v24, v25, v22);
    v26 = objc_msgSend(v23, "centimeters");
    Measurement<>.converted(to:)(v26, v8);

    v27 = Measurement.value.getter(v8);
    v28 = *(void (**)(char *, uint64_t))(v9 + 8);
    v28(v12, v8);
    v29 = ((uint64_t (*)(char *, uint64_t))v28)(v14, v8);
    *(float *)&v27 = v27;
    v30 = ceilf(*(float *)&v27);
    *(_QWORD *)&v128 = Float.description.getter(v29, v30);
    v32 = v31;
    if (qword_10047AAF8 != -1)
      swift_once(&qword_10047AAF8, sub_100108AD8);
    v33 = (void *)qword_1004AF658;
    v34 = objc_allocWithZone((Class)NSDecimalNumber);
    *(float *)&v35 = v30;
    v36 = objc_msgSend(v34, "initWithFloat:", v35);
    v37 = objc_msgSend(v33, "stringFromNumber:", v36);

    if (v37)
    {
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      v40 = v39;

      v41 = (void *)objc_opt_self(NSBundle);
      v42 = objc_msgSend(v41, "mainBundle");
      v130._object = (void *)0xE000000000000000;
      v43._countAndFlagsBits = 0x6D63204025;
      v43._object = (void *)0xE500000000000000;
      v44._countAndFlagsBits = 0;
      v44._object = (void *)0xE000000000000000;
      v130._countAndFlagsBits = 0;
      v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, (Swift::String_optional)0, (NSBundle)v42, v44, v130);

      v46 = sub_10000EDC8((uint64_t *)&unk_10048A100);
      v47 = swift_allocObject(v46, 72, 7);
      v127 = xmmword_1003B0BD0;
      *(_OWORD *)(v47 + 16) = xmmword_1003B0BD0;
      *(_QWORD *)(v47 + 56) = &type metadata for String;
      *(_QWORD *)(v47 + 64) = sub_100018B34();
      *(_QWORD *)(v47 + 32) = v38;
      *(_QWORD *)(v47 + 40) = v40;
      v48 = String.init(format:_:)(v45._countAndFlagsBits, v45._object, v47);
      v50 = v49;
      v51 = objc_msgSend(v41, "mainBundle", swift_bridgeObjectRelease(v45._object).n128_f64[0]);
      v131._object = (void *)0xE000000000000000;
      v52._countAndFlagsBits = 0x69746E6563204025;
      v52._object = (void *)0xEE0073726574656DLL;
      v53._countAndFlagsBits = 0;
      v53._object = (void *)0xE000000000000000;
      v131._countAndFlagsBits = 0;
      v54 = NSLocalizedString(_:tableName:bundle:value:comment:)(v52, (Swift::String_optional)0, (NSBundle)v51, v53, v131);

      v55 = swift_allocObject(v46, 72, 7);
      *(_OWORD *)(v55 + 16) = v127;
      *(_QWORD *)(v55 + 56) = &type metadata for Float;
      *(_QWORD *)(v55 + 64) = &protocol witness table for Float;
      *(float *)(v55 + 32) = v30;
      v56 = static String.localizedStringWithFormat(_:_:)(v54._countAndFlagsBits, v54._object, v55);
      v58 = v57;
      swift_bridgeObjectRelease(v54._object);
      swift_bridgeObjectRelease(v55);
      v59 = String._bridgeToObjectiveC()();
      objc_msgSend(v59, "floatValue", swift_bridgeObjectRelease(v32).n128_f64[0]);
      v61 = v60;

      v62 = 1;
LABEL_27:
      v119 = v129;
      *v129 = v48;
      v119[1] = v50;
      v119[2] = v56;
      v119[3] = v58;
      *((float *)v119 + 8) = v61;
      *((_BYTE *)v119 + 36) = v62;
      return;
    }
    goto LABEL_36;
  }
  if (!a1)
  {
    v63 = v21;
    v64 = (void *)objc_opt_self(NSUnitLength);
    v65 = objc_msgSend(v64, "meters");
    v66 = sub_100018148(0, &qword_1004843E0, NSUnitLength_ptr);
    Measurement.init(value:unit:)(v65, v66, v63);
    v67 = objc_msgSend(v64, "inches");
    Measurement<>.converted(to:)(v67, v8);

    v68 = Measurement.value.getter(v8);
    v69 = *(void (**)(char *, uint64_t))(v9 + 8);
    v69(v12, v8);
    v70 = v68;
    v69(v14, v8);
    v71 = ceilf(v70);
    v72 = v71 / 12.0;
    if ((~COERCE_INT(v71 / 12.0) & 0x7F800000) != 0)
    {
      if (v72 > -9.2234e18)
      {
        if (v72 < 9.2234e18)
        {
          v73 = 12 * (uint64_t)v72;
          if ((unsigned __int128)((uint64_t)v72 * (__int128)12) >> 64 == v73 >> 63)
          {
            v74 = roundf(v71 - (float)v73);
            if (v74 == 12.0)
              v70 = 0.0;
            else
              v70 = v74;
            if (v74 == 12.0)
              v69 = (void (*)(char *, uint64_t))((uint64_t)v72 + 1);
            else
              v69 = (void (*)(char *, uint64_t))(uint64_t)v72;
            LOBYTE(v67) = sub_1001BDC0C(a4);
            v12 = (char *)sub_10000EDC8((uint64_t *)&unk_10048A100);
            v75 = swift_allocObject(v12, 72, 7);
            v128 = xmmword_1003B0BD0;
            *(_OWORD *)(v75 + 16) = xmmword_1003B0BD0;
            *(_QWORD *)(v75 + 56) = &type metadata for Int;
            *(_QWORD *)(v75 + 64) = &protocol witness table for Int;
            *(_QWORD *)(v75 + 32) = v69;
            v9 = String.init(format:_:)(25637, 0xE200000000000000, v75);
            v17 = v76;
            if (qword_10047AAF8 == -1)
            {
LABEL_18:
              v77 = (void *)qword_1004AF658;
              v78 = objc_msgSend(objc_allocWithZone((Class)NSDecimalNumber), "initWithInteger:", v69);
              v79 = objc_msgSend(v77, "stringFromNumber:", v78);

              if (!v79)
              {
LABEL_37:
                __break(1u);
LABEL_38:
                __break(1u);
                goto LABEL_39;
              }
              v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
              *(_QWORD *)&v127 = v81;

              if (((v70 >= 10.0) & v67) != 0)
                v82 = v70 + -10.0;
              else
                v82 = v70;
              v83 = swift_allocObject(v12, 72, 7);
              *(_OWORD *)(v83 + 16) = v128;
              if ((~LODWORD(v82) & 0x7F800000) != 0)
              {
                if (v82 > -9.2234e18)
                {
                  if (v82 < 9.2234e18)
                  {
                    v121 = v80;
                    v125 = v9;
                    v126 = v17;
                    *(_QWORD *)&v128 = v69;
                    *(_QWORD *)(v83 + 56) = &type metadata for Int;
                    *(_QWORD *)(v83 + 64) = &protocol witness table for Int;
                    v122 = (uint64_t)v82;
                    *(_QWORD *)(v83 + 32) = (uint64_t)v82;
                    v123 = String.init(format:_:)(25637, 0xE200000000000000, v83);
                    v124 = v84;
                    v85 = (void *)qword_1004AF658;
                    v86 = objc_allocWithZone((Class)NSDecimalNumber);
                    *(float *)&v87 = v82;
                    v88 = objc_msgSend(v86, "initWithFloat:", v87);
                    v89 = objc_msgSend(v85, "stringFromNumber:", v88);

                    if (v89)
                    {
                      v90 = static String._unconditionallyBridgeFromObjectiveC(_:)(v89);
                      v92 = v91;

                      v93 = (void *)objc_opt_self(NSBundle);
                      v94 = objc_msgSend(v93, "mainBundle");
                      v95.value._countAndFlagsBits = 0xD000000000000014;
                      v132._object = (void *)0xE000000000000000;
                      v95.value._object = (void *)0x80000001003DFD80;
                      v96._countAndFlagsBits = 0x20B280E240243125;
                      v96._object = (void *)0xAFB380E240243225;
                      v97._countAndFlagsBits = 0;
                      v97._object = (void *)0xE000000000000000;
                      v132._countAndFlagsBits = 0;
                      v98 = NSLocalizedString(_:tableName:bundle:value:comment:)(v96, v95, (NSBundle)v94, v97, v132);

                      v99 = swift_allocObject(v12, 112, 7);
                      v120 = xmmword_1003B0F60;
                      *(_OWORD *)(v99 + 16) = xmmword_1003B0F60;
                      *(_QWORD *)(v99 + 56) = &type metadata for String;
                      v100 = sub_100018B34();
                      v101 = v127;
                      *(_QWORD *)(v99 + 32) = v121;
                      *(_QWORD *)(v99 + 40) = v101;
                      *(_QWORD *)(v99 + 96) = &type metadata for String;
                      *(_QWORD *)(v99 + 104) = v100;
                      *(_QWORD *)(v99 + 64) = v100;
                      *(_QWORD *)(v99 + 72) = v90;
                      *(_QWORD *)(v99 + 80) = v92;
                      v48 = String.init(format:_:)(v98._countAndFlagsBits, v98._object, v99);
                      v50 = v102;
                      v103 = objc_msgSend(v93, "mainBundle", swift_bridgeObjectRelease(v98._object).n128_f64[0]);
                      v133._object = (void *)0xE000000000000000;
                      v104._object = (void *)0x80000001003DFDA0;
                      v104._countAndFlagsBits = 0xD000000000000011;
                      v105._countAndFlagsBits = 0;
                      v105._object = (void *)0xE000000000000000;
                      v133._countAndFlagsBits = 0;
                      v106 = NSLocalizedString(_:tableName:bundle:value:comment:)(v104, (Swift::String_optional)0, (NSBundle)v103, v105, v133);

                      v107 = swift_allocObject(v12, 112, 7);
                      *(_OWORD *)(v107 + 16) = v120;
                      *(_QWORD *)(v107 + 56) = &type metadata for Int;
                      *(_QWORD *)(v107 + 32) = v128;
                      *(_QWORD *)(v107 + 96) = &type metadata for Int;
                      *(_QWORD *)(v107 + 104) = &protocol witness table for Int;
                      v108 = v122;
                      *(_QWORD *)(v107 + 64) = &protocol witness table for Int;
                      *(_QWORD *)(v107 + 72) = v108;
                      v56 = static String.localizedStringWithFormat(_:_:)(v106._countAndFlagsBits, v106._object, v107);
                      v58 = v109;
                      swift_bridgeObjectRelease(v106._object);
                      swift_bridgeObjectRelease(v107);
                      v110 = v126;
                      v111 = String._bridgeToObjectiveC()();
                      objc_msgSend(v111, "floatValue", swift_bridgeObjectRelease(v110).n128_f64[0]);
                      v113 = v112;

                      v114 = v113 * 12.0;
                      v115 = v124;
                      v116 = String._bridgeToObjectiveC()();
                      objc_msgSend(v116, "floatValue", swift_bridgeObjectRelease(v115).n128_f64[0]);
                      v118 = v117;

                      v61 = v114 + v118;
                      v62 = 2;
                      goto LABEL_27;
                    }
                    goto LABEL_38;
                  }
                  goto LABEL_35;
                }
              }
              else
              {
                __break(1u);
              }
              __break(1u);
LABEL_35:
              __break(1u);
LABEL_36:
              __break(1u);
              goto LABEL_37;
            }
LABEL_32:
            swift_once(&qword_10047AAF8, sub_100108AD8);
            goto LABEL_18;
          }
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_30;
  }
LABEL_39:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Measure/PersonHeightView.swift", 30, 2, 765, 0);
  __break(1u);
}

double *sub_1001BEBA8(double a1, double a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  unint64_t v11;
  unint64_t v12;
  double *v13;
  uint64_t i;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  double *v23;

  v4 = CGPoint.multiply(by:)(0.0, a1, a2);
  v6 = CGPoint.divide(by:)(100.0, v4, v5);
  v7 = CGPoint.subtract(_:)(v6);
  v9 = v8;
  v10 = sub_10005F7B4(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
  v12 = *((_QWORD *)v10 + 2);
  v11 = *((_QWORD *)v10 + 3);
  if (v12 >= v11 >> 1)
    v10 = sub_10005F7B4((double *)(v11 > 1), v12 + 1, 1, (uint64_t)v10);
  *((_QWORD *)v10 + 2) = v12 + 1;
  v13 = &v10[2 * v12];
  v13[4] = v7;
  *((_QWORD *)v13 + 5) = v9;
  for (i = 1; i != 101; ++i)
  {
    v15 = CGPoint.multiply(by:)((float)i, a1, a2);
    v17 = CGPoint.divide(by:)(100.0, v15, v16);
    v18 = CGPoint.subtract(_:)(v17);
    v20 = v19;
    v22 = *((_QWORD *)v10 + 2);
    v21 = *((_QWORD *)v10 + 3);
    if (v22 >= v21 >> 1)
      v10 = sub_10005F7B4((double *)(v21 > 1), v22 + 1, 1, (uint64_t)v10);
    *((_QWORD *)v10 + 2) = v22 + 1;
    v23 = &v10[2 * v22];
    v23[4] = v18;
    *((_QWORD *)v23 + 5) = v20;
  }
  return v10;
}

unint64_t sub_1001BED24(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(_QWORD *__return_ptr, __n128);
  __n128 v4;
  uint64_t v5;
  unsigned __int8 v6;
  void (*v7)(_QWORD *__return_ptr, __n128);
  __n128 v8;
  void (*v9)(_QWORD *__return_ptr, __n128);
  __n128 v10;
  _QWORD v12[68];
  _DWORD __dst[136];
  _QWORD __src[68];

  v2 = qword_100489BF8;
  v3 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(a1 + qword_100489BF8) + 144);
  v4 = swift_retain();
  v3(__src, v4);
  swift_release();
  memcpy(__dst, __src, 0x213uLL);
  sub_1000642CC((uint64_t)__dst);
  v5 = __dst[113];
  v6 = __dst[114];
  v7 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(a1 + v2) + 144);
  v8 = swift_retain();
  v7(v12, v8);
  swift_release();
  memcpy(__src, v12, 0x213uLL);
  sub_1000642CC((uint64_t)__src);
  v9 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(a1 + qword_100489C00) + 144);
  v10 = swift_retain();
  v9(v12, v10);
  swift_release();
  return v5 | ((unint64_t)v6 << 32);
}

void sub_1001BEE5C(void *a1)
{
  uint64_t v1;

  sub_1001B99B4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001BEE64(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000EDC8(&qword_100483F90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001BEEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000EDC8(&qword_100483F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001BEEEC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)sub_10000EDC8(&qword_100483F90);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v7 + v1[9];
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[11]));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001BEFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000EDC8(&qword_100483F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001BEFF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000EDC8(&qword_100483F90) - 8) + 80);
  return sub_1000F433C(a1, v1 + ((v3 + 16) & ~v3));
}

double sub_1001BF050(uint64_t a1)
{
  uint64_t v1;

  return sub_1001BBFA0(a1, *(_QWORD *)(v1 + 16));
}

void sub_1001BF058(uint64_t a1)
{
  uint64_t v1;

  sub_1001BC050(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001BF060()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001BF084(uint64_t a1, double a2)
{
  uint64_t v2;

  sub_1001BC190(a2, *(float *)(v2 + 16), a1, *(char **)(v2 + 24));
}

void sub_1001BF090()
{
  sub_1001BC318();
}

void sub_1001BF098()
{
  sub_1001BC3B8();
}

void sub_1001BF0A0()
{
  sub_1001BC4F4();
}

void sub_1001BF0A8()
{
  sub_1001BC64C();
}

void sub_1001BF0B0(double a1)
{
  sub_1001BC718(a1);
}

void sub_1001BF0B8(double a1)
{
  sub_1001BC808(a1);
}

void sub_1001BF0C0(double a1)
{
  sub_1001BC984(a1);
}

void sub_1001BF0C8(double a1)
{
  sub_1001BCA80(a1);
}

void sub_1001BF0D0()
{
  uint64_t v0;

  sub_1001B84EC(*(_QWORD *)(v0 + 16));
}

uint64_t storeEnumTagSinglePayload for PersonHeightView.ResultRepresentation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001BF124 + 4 * byte_1003BBE05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001BF158 + 4 * byte_1003BBE00[v4]))();
}

uint64_t sub_1001BF158(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001BF160(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001BF168);
  return result;
}

uint64_t sub_1001BF174(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001BF17CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001BF180(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001BF188(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonHeightView.ResultRepresentation.CodingKeys()
{
  return &type metadata for PersonHeightView.ResultRepresentation.CodingKeys;
}

ValueMetadata *type metadata accessor for PersonHeightView.ResultRepresentation()
{
  return &type metadata for PersonHeightView.ResultRepresentation;
}

unint64_t sub_1001BF1B8()
{
  unint64_t result;

  result = qword_100489EE8;
  if (!qword_100489EE8)
  {
    result = swift_getWitnessTable(&unk_1003BC0F0, &type metadata for PersonHeightView.ResultRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100489EE8);
  }
  return result;
}

unint64_t sub_1001BF200()
{
  unint64_t result;

  result = qword_100489EF0;
  if (!qword_100489EF0)
  {
    result = swift_getWitnessTable(&unk_1003BC028, &type metadata for PersonHeightView.ResultRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100489EF0);
  }
  return result;
}

unint64_t sub_1001BF248()
{
  unint64_t result;

  result = qword_100489EF8;
  if (!qword_100489EF8)
  {
    result = swift_getWitnessTable(&unk_1003BC050, &type metadata for PersonHeightView.ResultRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100489EF8);
  }
  return result;
}

unint64_t sub_1001BF28C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043C478, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t type metadata accessor for TouchableSpriteNode()
{
  return objc_opt_self(_TtC7Measure19TouchableSpriteNode);
}

void sub_1001BF464()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  char *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t i;
  id v71;
  void *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t j;
  id v82;
  void *v83;
  uint64_t v84;
  char *v85;
  id v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  id v91;
  char *v92;
  char v93[24];
  char v94[24];

  v1 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  if ((v1 & 1) != 0)
  {
    v3 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle;
    v4 = *(void **)(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle)
                  + OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label);
    v5 = (void *)objc_opt_self(UIFont);
    v6 = v4;
    v7 = objc_msgSend(v5, "preferredFontForTextStyle:", UIFontTextStyleBody);
    v8 = objc_msgSend(v7, "fontDescriptor");

    v9 = objc_msgSend(v8, "fontDescriptorWithSymbolicTraits:", 2);
    if (v9)
    {
      v10 = objc_msgSend(v5, "fontWithDescriptor:size:", v9, 0.0);

      objc_msgSend(v6, "setFont:", v10);
      v90 = v3;
      v11 = *(void **)(*(_QWORD *)((char *)v0 + v3) + OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label);
      v12 = (void *)objc_opt_self(UIColor);
      v13 = v11;
      v14 = objc_msgSend(v12, "labelColor");
      objc_msgSend(v13, "setTextColor:", v14);

      v15 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel;
      v16 = objc_retain(*(id *)(*(_QWORD *)((char *)v0
                                          + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel)
                              + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel));
      v17 = objc_msgSend(v5, "preferredFontForTextStyle:", UIFontTextStyleBody);
      v18 = objc_msgSend(v17, "fontDescriptor");

      v19 = objc_msgSend(v18, "fontDescriptorWithSymbolicTraits:", 2);
      if (v19)
      {
        v20 = objc_msgSend(v5, "fontWithDescriptor:size:", v19, 0.0);

        objc_msgSend(v16, "setFont:", v20);
        v21 = objc_retain(*(id *)(*(_QWORD *)((char *)v0 + v15)
                                + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel));
        v22 = objc_msgSend(v5, "preferredFontForTextStyle:", UIFontTextStyleLargeTitle);
        objc_msgSend(v21, "setFont:", v22);

        v23 = objc_retain(*(id *)(*(_QWORD *)((char *)v0 + v15)
                                + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel));
        v24 = objc_msgSend(v5, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
        v25 = objc_msgSend(v24, "fontDescriptor");

        v26 = objc_msgSend(v25, "fontDescriptorWithSymbolicTraits:", 2);
        if (v26)
        {
          v27 = objc_msgSend(v5, "fontWithDescriptor:size:", v26, 0.0);

          objc_msgSend(v23, "setFont:", v27);
          v28 = objc_retain(*(id *)(*(_QWORD *)((char *)v0 + v15)
                                  + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel));
          v29 = objc_msgSend(v12, "secondaryLabelColor");
          objc_msgSend(v28, "setTextColor:", v29);

          v30 = objc_retain(*(id *)(*(_QWORD *)((char *)v0 + v15)
                                  + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel));
          v31 = objc_msgSend(v12, "labelColor");
          objc_msgSend(v30, "setTextColor:", v31);

          v32 = objc_retain(*(id *)(*(_QWORD *)((char *)v0 + v15)
                                  + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel));
          v33 = objc_msgSend(v12, "secondaryLabelColor");
          objc_msgSend(v32, "setTextColor:", v33);

          v34 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel;
          v35 = objc_retain(*(id *)(*(_QWORD *)((char *)v0
                                              + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel)
                                  + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel));
          v36 = objc_msgSend(v5, "preferredFontForTextStyle:", UIFontTextStyleBody);
          v37 = objc_msgSend(v36, "fontDescriptor");

          v38 = objc_msgSend(v37, "fontDescriptorWithSymbolicTraits:", 2);
          if (v38)
          {
            v39 = objc_msgSend(v5, "fontWithDescriptor:size:", v38, 0.0);

            objc_msgSend(v35, "setFont:", v39);
            v40 = objc_retain(*(id *)(*(_QWORD *)((char *)v0 + v34)
                                    + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel));
            v41 = objc_msgSend(v5, "preferredFontForTextStyle:", UIFontTextStyleLargeTitle);
            objc_msgSend(v40, "setFont:", v41);

            v42 = objc_retain(*(id *)(*(_QWORD *)((char *)v0 + v34)
                                    + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel));
            v43 = objc_msgSend(v5, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
            v44 = objc_msgSend(v43, "fontDescriptor");

            v45 = objc_msgSend(v44, "fontDescriptorWithSymbolicTraits:", 2);
            if (v45)
            {
              v46 = objc_msgSend(v5, "fontWithDescriptor:size:", v45, 0.0);

              objc_msgSend(v42, "setFont:", v46);
              v47 = objc_retain(*(id *)(*(_QWORD *)((char *)v0 + v34)
                                      + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel));
              v48 = objc_msgSend(v12, "secondaryLabelColor");
              objc_msgSend(v47, "setTextColor:", v48);

              v49 = objc_retain(*(id *)(*(_QWORD *)((char *)v0 + v34)
                                      + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel));
              v50 = objc_msgSend(v12, "labelColor");
              objc_msgSend(v49, "setTextColor:", v50);

              v51 = objc_retain(*(id *)(*(_QWORD *)((char *)v0 + v34)
                                      + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel));
              v52 = objc_msgSend(v12, "secondaryLabelColor");
              objc_msgSend(v51, "setTextColor:", v52);

              v53 = objc_msgSend(v0, "contentView");
              objc_msgSend(v53, "addSubview:", *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView));

              v54 = objc_msgSend(v0, "contentView");
              objc_msgSend(v54, "addSubview:", *(_QWORD *)((char *)v0 + v90));

              v55 = objc_msgSend(v0, "contentView");
              objc_msgSend(v55, "addSubview:", *(_QWORD *)((char *)v0 + v15));

              v91 = objc_msgSend(v0, "contentView");
              objc_msgSend(v91, "addSubview:", *(_QWORD *)((char *)v0 + v34));

              return;
            }
            goto LABEL_40;
          }
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v56 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle;
  v57 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle);
  v58 = (void *)objc_opt_self(UIFont);
  v59 = v57;
  v60 = objc_msgSend(v58, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v61 = objc_msgSend(v60, "fontDescriptor");

  v62 = objc_msgSend(v61, "fontDescriptorWithSymbolicTraits:", 2);
  if (v62)
  {
    v63 = objc_msgSend(v58, "fontWithDescriptor:size:", v62, 0.0);

    objc_msgSend(v59, "setFont:", v63);
    v64 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels;
    v65 = *(char **)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels);
    v66 = (uint64_t *)&v65[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_marginConstraints];
    swift_beginAccess(&v65[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_marginConstraints], v94, 0, 0);
    v67 = *v66;
    v92 = (char *)v56;
    if ((unint64_t)v67 >> 62)
    {
      if (v67 < 0)
        v73 = v67;
      else
        v73 = v67 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v67, 2);
      v74 = v65;
      v68 = _CocoaArrayWrapper.endIndex.getter(v73);
      if (!v68)
        goto LABEL_21;
    }
    else
    {
      v68 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v67, 2);
      v69 = v65;
      if (!v68)
        goto LABEL_21;
    }
    if (v68 < 1)
    {
      __break(1u);
      goto LABEL_35;
    }
    for (i = 0; i != v68; ++i)
    {
      if ((v67 & 0xC000000000000001) != 0)
        v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v67);
      else
        v71 = *(id *)(v67 + 8 * i + 32);
      v72 = v71;
      objc_msgSend(v71, "setConstant:", 0.0);

    }
LABEL_21:
    swift_bridgeObjectRelease_n(v67, 2);

    v75 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels;
    v76 = *(char **)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels);
    v77 = (uint64_t *)&v76[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_marginConstraints];
    swift_beginAccess(&v76[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_marginConstraints], v93, 0, 0);
    v78 = *v77;
    if ((unint64_t)v78 >> 62)
    {
      if (v78 < 0)
        v84 = v78;
      else
        v84 = v78 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v78, 2);
      v85 = v76;
      v79 = _CocoaArrayWrapper.endIndex.getter(v84);
      if (v79)
      {
LABEL_23:
        if (v79 >= 1)
        {
          for (j = 0; j != v79; ++j)
          {
            if ((v78 & 0xC000000000000001) != 0)
              v82 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v78);
            else
              v82 = *(id *)(v78 + 8 * j + 32);
            v83 = v82;
            objc_msgSend(v82, "setConstant:", 0.0);

          }
          goto LABEL_33;
        }
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
    else
    {
      v79 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v78, 2);
      v80 = v76;
      if (v79)
        goto LABEL_23;
    }
LABEL_33:
    swift_bridgeObjectRelease_n(v78, 2);

    v86 = objc_msgSend(v0, "contentView");
    objc_msgSend(v86, "addSubview:", *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView));

    v87 = objc_msgSend(v0, "contentView");
    objc_msgSend(v87, "addSubview:", *(_QWORD *)&v92[(_QWORD)v0]);

    v88 = objc_msgSend(v0, "contentView");
    objc_msgSend(v88, "addSubview:", *(_QWORD *)((char *)v0 + v64));

    v89 = objc_msgSend(v0, "contentView");
    objc_msgSend(v89, "addSubview:", *(_QWORD *)((char *)v0 + v75));

    return;
  }
LABEL_41:
  __break(1u);
}

void sub_1001C0040()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  double v69;
  id v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  void *v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  void *v118;
  void *v119;
  id v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  Class isa;
  char *v128;

  v1 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  if ((v1 & 1) != 0)
  {
    v3 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView;
    objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v4 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle;
    objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v122 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel;
    objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel;
    objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v124 = v5;
    v6 = objc_msgSend(*(id *)((char *)v0 + v5), "bottomAnchor");
    v7 = objc_msgSend(v0, "contentView");
    v8 = objc_msgSend(v7, "bottomAnchor");

    if (qword_10047A758 != -1)
      swift_once(&qword_10047A758, sub_10000EF18);
    v9 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v8, -*(double *)&qword_1004AF090);

    v10 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor);
    v126 = (char *)OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor;
    *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor) = v9;

    v11 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
    v12 = swift_allocObject(v11, 144, 7);
    *(_OWORD *)(v12 + 16) = xmmword_1003BC1B0;
    v13 = objc_msgSend(*(id *)((char *)v0 + v3), "leadingAnchor");
    v14 = objc_msgSend(v0, "contentView");
    v15 = objc_msgSend(v14, "leadingAnchor");

    v16 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v15, *(double *)&qword_1004AF090);
    *(_QWORD *)(v12 + 32) = v16;
    v17 = objc_msgSend(*(id *)((char *)v0 + v3), "topAnchor");
    v18 = objc_msgSend(v0, "contentView");
    v19 = objc_msgSend(v18, "topAnchor");

    v20 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v19, *(double *)&qword_1004AF090);
    *(_QWORD *)(v12 + 40) = v20;
    v21 = objc_msgSend(*(id *)((char *)v0 + v3), "widthAnchor");
    if (qword_10047B168 != -1)
      swift_once(&qword_10047B168, sub_1001C12EC);
    v22 = objc_msgSend(v21, "constraintEqualToConstant:", *(double *)&qword_100489F30);

    *(_QWORD *)(v12 + 48) = v22;
    v23 = objc_msgSend(*(id *)((char *)v0 + v3), "heightAnchor");
    v24 = objc_msgSend(*(id *)((char *)v0 + v3), "widthAnchor");
    v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

    *(_QWORD *)(v12 + 56) = v25;
    v26 = objc_msgSend(*(id *)((char *)v0 + v4), "leadingAnchor");
    v27 = objc_msgSend(v0, "contentView");
    v28 = objc_msgSend(v27, "leadingAnchor");

    v29 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v28, *(double *)&qword_1004AF090);
    *(_QWORD *)(v12 + 64) = v29;
    v30 = objc_msgSend(*(id *)((char *)v0 + v4), "topAnchor");
    v31 = objc_msgSend(*(id *)((char *)v0 + v3), "bottomAnchor");
    v32 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v31, *(double *)&qword_1004AF090);

    *(_QWORD *)(v12 + 72) = v32;
    v33 = objc_msgSend(*(id *)((char *)v0 + v4), "trailingAnchor");
    v34 = objc_msgSend(v0, "contentView");
    v35 = objc_msgSend(v34, "trailingAnchor");

    v36 = objc_msgSend(v33, "constraintEqualToAnchor:", v35);
    *(_QWORD *)(v12 + 80) = v36;
    v37 = objc_msgSend(*(id *)((char *)v0 + v122), "leadingAnchor");
    v38 = objc_msgSend(v0, "contentView");
    v39 = objc_msgSend(v38, "leadingAnchor");

    v40 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v39, *(double *)&qword_1004AF090);
    *(_QWORD *)(v12 + 88) = v40;
    v41 = objc_msgSend(*(id *)((char *)v0 + v122), "topAnchor");
    v42 = objc_msgSend(*(id *)((char *)v0 + v4), "bottomAnchor");
    if (qword_10047A760 != -1)
      swift_once(&qword_10047A760, sub_10000EF28);
    v43 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v42, *(double *)&qword_1004AF098);

    *(_QWORD *)(v12 + 96) = v43;
    v44 = objc_msgSend(*(id *)((char *)v0 + v122), "trailingAnchor");
    v45 = objc_msgSend(v0, "contentView");
    v46 = objc_msgSend(v45, "trailingAnchor");

    v47 = objc_msgSend(v44, "constraintEqualToAnchor:", v46);
    *(_QWORD *)(v12 + 104) = v47;
    v48 = objc_msgSend(*(id *)((char *)v0 + v124), "leadingAnchor");
    v49 = objc_msgSend(v0, "contentView");
    v50 = objc_msgSend(v49, "leadingAnchor");

    v51 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v50, *(double *)&qword_1004AF090);
    *(_QWORD *)(v12 + 112) = v51;
    v52 = objc_msgSend(*(id *)((char *)v0 + v124), "topAnchor");
    v53 = objc_msgSend(*(id *)((char *)v0 + v122), "bottomAnchor");
    v54 = objc_msgSend(v52, "constraintEqualToAnchor:constant:", v53, *(double *)&qword_1004AF098);

    *(_QWORD *)(v12 + 120) = v54;
    v55 = objc_msgSend(*(id *)((char *)v0 + v124), "trailingAnchor");
    v56 = objc_msgSend(v0, "contentView");
    v57 = objc_msgSend(v56, "trailingAnchor");

    v58 = objc_msgSend(v55, "constraintEqualToAnchor:", v57);
    *(_QWORD *)(v12 + 128) = v58;
    v59 = *(void **)&v126[(_QWORD)v0];
    if (v59)
    {
      v60 = (void *)objc_opt_self(NSLayoutConstraint);
      *(_QWORD *)(v12 + 136) = v59;
      specialized Array._endMutation()(v60);
      sub_10002277C();
      v61 = v59;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v60, "activateConstraints:", isa, swift_bridgeObjectRelease(v12).n128_f64[0]);
LABEL_18:

      return;
    }
    __break(1u);
  }
  else
  {
    v62 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle;
    objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v63 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView;
    objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v64 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels;
    objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v65 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels;
    objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v125 = v64;
    v66 = objc_msgSend(*(id *)((char *)v0 + v64), "topAnchor");
    v67 = objc_msgSend(*(id *)((char *)v0 + v62), "bottomAnchor");
    if (qword_10047A758 != -1)
      swift_once(&qword_10047A758, sub_10000EF18);
    v68 = objc_msgSend(v66, "constraintEqualToAnchor:constant:", v67, *(double *)&qword_1004AF090);

    LODWORD(v69) = 1148813312;
    objc_msgSend(v68, "setPriority:", v69);
    v128 = (char *)v65;
    v70 = objc_msgSend(*(id *)((char *)v0 + v65), "bottomAnchor");
    v71 = objc_msgSend(v0, "contentView");
    v72 = objc_msgSend(v71, "bottomAnchor");

    v73 = objc_msgSend(v70, "constraintEqualToAnchor:constant:", v72, -*(double *)&qword_1004AF090);
    v74 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor);
    v123 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor;
    *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor) = v73;

    v75 = sub_10000EDC8((uint64_t *)&unk_1004866D0);
    v76 = swift_allocObject(v75, 144, 7);
    *(_OWORD *)(v76 + 16) = xmmword_1003BC1B0;
    v77 = objc_msgSend(*(id *)((char *)v0 + v63), "leadingAnchor");
    v78 = objc_msgSend(v0, "contentView");
    v79 = objc_msgSend(v78, "leadingAnchor");

    v80 = objc_msgSend(v77, "constraintEqualToAnchor:constant:", v79, *(double *)&qword_1004AF090);
    *(_QWORD *)(v76 + 32) = v80;
    v81 = objc_msgSend(*(id *)((char *)v0 + v63), "topAnchor");
    v82 = objc_msgSend(v0, "contentView");
    v83 = objc_msgSend(v82, "topAnchor");

    v84 = objc_msgSend(v81, "constraintEqualToAnchor:constant:", v83, *(double *)&qword_1004AF090);
    *(_QWORD *)(v76 + 40) = v84;
    v85 = objc_msgSend(*(id *)((char *)v0 + v63), "widthAnchor");
    if (qword_10047B168 != -1)
      swift_once(&qword_10047B168, sub_1001C12EC);
    v86 = objc_msgSend(v85, "constraintEqualToConstant:", *(double *)&qword_100489F30);

    *(_QWORD *)(v76 + 48) = v86;
    v87 = objc_msgSend(*(id *)((char *)v0 + v63), "heightAnchor");
    v88 = objc_msgSend(*(id *)((char *)v0 + v63), "widthAnchor");
    v89 = objc_msgSend(v87, "constraintEqualToAnchor:", v88);

    *(_QWORD *)(v76 + 56) = v89;
    v90 = objc_msgSend(*(id *)((char *)v0 + v62), "leadingAnchor");
    v91 = objc_msgSend(*(id *)((char *)v0 + v63), "trailingAnchor");
    v92 = objc_msgSend(v90, "constraintEqualToAnchor:constant:", v91, *(double *)&qword_1004AF090);

    *(_QWORD *)(v76 + 64) = v92;
    v93 = objc_msgSend(*(id *)((char *)v0 + v62), "topAnchor");
    v94 = objc_msgSend(v0, "contentView");
    v95 = objc_msgSend(v94, "topAnchor");

    if (qword_10047B170 != -1)
      swift_once(&qword_10047B170, sub_1001C12FC);
    v96 = objc_msgSend(v93, "constraintEqualToAnchor:constant:", v95, *(double *)&qword_100489F38);

    *(_QWORD *)(v76 + 72) = v96;
    v97 = objc_msgSend(*(id *)((char *)v0 + v62), "trailingAnchor");
    v98 = objc_msgSend(*(id *)(*(_QWORD *)((char *)v0 + v125)+ OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels), "leadingAnchor");
    v99 = objc_msgSend(v97, "constraintEqualToAnchor:constant:", v98, -*(double *)&qword_1004AF090);

    *(_QWORD *)(v76 + 80) = v99;
    v100 = objc_msgSend(*(id *)((char *)v0 + v125), "leadingAnchor");
    v101 = objc_msgSend(*(id *)((char *)v0 + v63), "trailingAnchor");
    v102 = objc_msgSend(v100, "constraintEqualToAnchor:constant:", v101, *(double *)&qword_1004AF090);

    *(_QWORD *)(v76 + 88) = v102;
    *(_QWORD *)(v76 + 96) = v68;
    v103 = *(void **)((char *)v0 + v125);
    v121 = v68;
    v104 = objc_msgSend(v103, "trailingAnchor");
    v105 = objc_msgSend(v0, "contentView");
    v106 = objc_msgSend(v105, "trailingAnchor");

    v107 = objc_msgSend(v104, "constraintEqualToAnchor:", v106);
    *(_QWORD *)(v76 + 104) = v107;
    v108 = objc_msgSend(*(id *)&v128[(_QWORD)v0], "leadingAnchor");
    v109 = objc_msgSend(*(id *)((char *)v0 + v63), "trailingAnchor");
    v110 = objc_msgSend(v108, "constraintEqualToAnchor:constant:", v109, *(double *)&qword_1004AF090);

    *(_QWORD *)(v76 + 112) = v110;
    v111 = objc_msgSend(*(id *)&v128[(_QWORD)v0], "topAnchor");
    v112 = objc_msgSend(*(id *)((char *)v0 + v125), "bottomAnchor");
    v113 = objc_msgSend(v111, "constraintEqualToAnchor:constant:", v112, *(double *)&qword_1004AF090);

    *(_QWORD *)(v76 + 120) = v113;
    v114 = objc_msgSend(*(id *)&v128[(_QWORD)v0], "trailingAnchor");
    v115 = objc_msgSend(v0, "contentView");
    v116 = objc_msgSend(v115, "trailingAnchor");

    v117 = objc_msgSend(v114, "constraintEqualToAnchor:", v116);
    *(_QWORD *)(v76 + 128) = v117;
    v118 = *(void **)((char *)v0 + v123);
    if (v118)
    {
      v119 = (void *)objc_opt_self(NSLayoutConstraint);
      *(_QWORD *)(v76 + 136) = v118;
      specialized Array._endMutation()(v119);
      sub_10002277C();
      v120 = v118;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v119, "activateConstraints:", isa, swift_bridgeObjectRelease(v76).n128_f64[0]);

      goto LABEL_18;
    }
  }
  __break(1u);
}

void sub_1001C1074()
{
  uint64_t v0;
  char *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  void *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  char *v11;
  char *v12;
  void *v13;
  char *v14;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels);
  v2 = *(void **)&v1[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits];
  v3 = v1;
  objc_msgSend(v2, "setSelectedRange:", 0, 0);
  v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels];
  objc_msgSend(*(id *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label), "setSelectedRange:", 0, 0);
  objc_msgSend(*(id *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label), "setSelectedRange:", 0, 0);

  v5 = *(char **)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels);
  v6 = *(void **)&v5[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits];
  v7 = v5;
  objc_msgSend(v6, "setSelectedRange:", 0, 0);
  v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels];
  objc_msgSend(*(id *)(*(_QWORD *)(v8 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label), "setSelectedRange:", 0, 0);
  objc_msgSend(*(id *)(*(_QWORD *)(v8 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label), "setSelectedRange:", 0, 0);

  objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle)+ OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label), "setSelectedRange:", 0, 0);
  v9 = *(char **)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel);
  v10 = *(void **)&v9[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel];
  v11 = v9;
  objc_msgSend(v10, "setSelectedRange:", 0, 0);
  objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel], "setSelectedRange:", 0, 0);
  objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel], "setSelectedRange:", 0, 0);

  v12 = *(char **)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel);
  v13 = *(void **)&v12[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel];
  v14 = v12;
  objc_msgSend(v13, "setSelectedRange:", 0, 0);
  objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel], "setSelectedRange:", 0, 0);
  objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel], "setSelectedRange:", 0, 0);

}

void sub_1001C12EC()
{
  qword_100489F30 = 0x404C000000000000;
}

void sub_1001C12FC()
{
  qword_100489F38 = 0x4028000000000000;
}

id sub_1001C130C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  uint64_t v17;
  NSString v18;
  id v19;
  id v20;
  objc_super v22;

  v6 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView;
  v7 = type metadata accessor for SketchSurfaceHistory();
  v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7));
  v9 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v8, "init");
  v10 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle;
  *(_QWORD *)&v9[v10] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v11 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels;
  v12 = (objc_class *)type metadata accessor for MeasureTableViewCellCommonContentView();
  *(_QWORD *)&v9[v11] = objc_msgSend(objc_allocWithZone(v12), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels;
  *(_QWORD *)&v9[v13] = objc_msgSend(objc_allocWithZone(v12), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle;
  *(_QWORD *)&v9[v14] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AccessibilitySingleStack()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel;
  v16 = (objc_class *)type metadata accessor for AccessibilityTripleStack();
  *(_QWORD *)&v9[v15] = objc_msgSend(objc_allocWithZone(v16), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel;
  *(_QWORD *)&v9[v17] = objc_msgSend(objc_allocWithZone(v16), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v9[OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor] = 0;

  if (a3)
  {
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v18 = 0;
  }
  v22.receiver = v9;
  v22.super_class = (Class)type metadata accessor for BaseRectangleHistoryCell();
  v19 = objc_msgSendSuper2(&v22, "initWithStyle:reuseIdentifier:", a1, v18);

  v20 = v19;
  sub_1001BF464();
  sub_1001C0040();

  return v20;
}

id sub_1001C1558(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  objc_super v19;

  v3 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView;
  v4 = type metadata accessor for SketchSurfaceHistory();
  v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4));
  v6 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels;
  v9 = (objc_class *)type metadata accessor for MeasureTableViewCellCommonContentView();
  *(_QWORD *)&v6[v8] = objc_msgSend(objc_allocWithZone(v9), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels;
  *(_QWORD *)&v6[v10] = objc_msgSend(objc_allocWithZone(v9), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v11 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle;
  *(_QWORD *)&v6[v11] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AccessibilitySingleStack()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel;
  v13 = (objc_class *)type metadata accessor for AccessibilityTripleStack();
  *(_QWORD *)&v6[v12] = objc_msgSend(objc_allocWithZone(v13), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel;
  *(_QWORD *)&v6[v14] = objc_msgSend(objc_allocWithZone(v13), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor] = 0;

  v19.receiver = v6;
  v19.super_class = (Class)type metadata accessor for BaseRectangleHistoryCell();
  v15 = objc_msgSendSuper2(&v19, "initWithCoder:", a1);
  v16 = v15;
  if (v15)
  {
    v17 = v15;
    sub_1001BF464();
    sub_1001C0040();

  }
  return v16;
}

void sub_1001C174C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  objc_class *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  objc_class *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;

  v1 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView), "removeFromSuperview");
  v2 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle), "removeFromSuperview");
  v3 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels), "removeFromSuperview");
  v4 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels), "removeFromSuperview");
  v5 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle), "removeFromSuperview");
  v6 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel), "removeFromSuperview");
  v7 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel), "removeFromSuperview");
  v8 = type metadata accessor for SketchSurfaceHistory();
  v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8)), "init");
  v10 = *(void **)(v0 + v1);
  *(_QWORD *)(v0 + v1) = v9;

  v11 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v12 = *(void **)(v0 + v2);
  *(_QWORD *)(v0 + v2) = v11;

  v13 = (objc_class *)type metadata accessor for MeasureTableViewCellCommonContentView();
  v14 = objc_msgSend(objc_allocWithZone(v13), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = *(void **)(v0 + v3);
  *(_QWORD *)(v0 + v3) = v14;

  v16 = objc_msgSend(objc_allocWithZone(v13), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = *(void **)(v0 + v4);
  *(_QWORD *)(v0 + v4) = v16;

  v18 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AccessibilitySingleStack()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v19 = *(void **)(v0 + v5);
  *(_QWORD *)(v0 + v5) = v18;

  v20 = (objc_class *)type metadata accessor for AccessibilityTripleStack();
  v21 = objc_msgSend(objc_allocWithZone(v20), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v22 = *(void **)(v0 + v6);
  *(_QWORD *)(v0 + v6) = v21;

  v23 = objc_msgSend(objc_allocWithZone(v20), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v24 = *(void **)(v0 + v7);
  *(_QWORD *)(v0 + v7) = v23;

  sub_1001BF464();
  sub_1001C0040();
}

id sub_1001C1988()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseRectangleHistoryCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BaseRectangleHistoryCell()
{
  return objc_opt_self(_TtC7Measure24BaseRectangleHistoryCell);
}

id sub_1001C1B38()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TransformLayerView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TransformLayerView()
{
  return objc_opt_self(_TtC7Measure18TransformLayerView);
}

unint64_t sub_1001C1B88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100489FD0;
  if (!qword_100489FD0)
  {
    v1 = objc_opt_self(CATransformLayer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100489FD0);
  }
  return result;
}

void sub_1001C1BC4(uint64_t *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  Swift::String v5;
  void *object;
  Swift::String v7;
  NSString v8;
  void *v9;
  uint64_t v10;
  Swift::String v11;
  void *v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  Swift::String v20;
  NSString v21;
  void *v22;
  uint64_t v23;
  Swift::String v24;
  void *v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  Swift::String v33;
  NSString v34;
  void *v35;
  uint64_t v36;
  Swift::String v37;
  void *v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  Swift::String v46;
  NSString v47;
  void *v48;
  uint64_t v49;
  Swift::String v50;
  void *v51;
  Swift::String v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  Swift::String v60;
  NSString v61;
  void *v62;
  uint64_t v63;
  Swift::String v64;
  void *v65;
  Swift::String v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  Swift::String v72;
  NSString v73;
  void *v74;
  unint64_t v75;
  uint64_t v76;
  Swift::String v77;
  void *v78;
  Swift::String v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  Swift::String v86;
  NSString v87;
  void *v88;
  uint64_t v89;
  Swift::String v90;
  void *v91;
  Swift::String v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  Swift::String v98;
  NSString v99;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_totalCountLabel);
  v4 = a1[7];
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 0x203A6C61746F54;
  v7._object = (void *)0xE700000000000000;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(0xE700000000000000);
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setText:", v8, swift_bridgeObjectRelease(0xE200000000000000).n128_f64[0]);

  v9 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel);
  v10 = *a1;
  v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v12 = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v12);
  v13._countAndFlagsBits = 2128928;
  v13._object = (void *)0xE300000000000000;
  String.append(_:)(v13);
  if (v4)
  {
    v14 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v15 = swift_allocObject(v14, 72, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(v15 + 56) = &type metadata for Float;
    *(_QWORD *)(v15 + 64) = &protocol witness table for Float;
    *(float *)(v15 + 32) = (float)((float)v10 * 100.0) / (float)v4;
    v16 = String.init(format:_:)(0x252566312E25, 0xE600000000000000, v15);
    v18 = v17;
  }
  else
  {
    v16 = 0;
    v18 = 0xE000000000000000;
  }
  v19 = v18;
  String.append(_:)(*(Swift::String *)&v16);
  swift_bridgeObjectRelease(v18);
  v20._countAndFlagsBits = 540689473;
  v20._object = (void *)0xE400000000000000;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(0xE400000000000000);
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setText:", v21, swift_bridgeObjectRelease(0xE200000000000000).n128_f64[0]);

  v22 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_arkitCountLabel);
  v23 = a1[1];
  v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v25 = v24._object;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v25);
  v26._countAndFlagsBits = 2128928;
  v26._object = (void *)0xE300000000000000;
  String.append(_:)(v26);
  if (v4)
  {
    v27 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v28 = swift_allocObject(v27, 72, 7);
    *(_OWORD *)(v28 + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(v28 + 56) = &type metadata for Float;
    *(_QWORD *)(v28 + 64) = &protocol witness table for Float;
    *(float *)(v28 + 32) = (float)((float)v23 * 100.0) / (float)v4;
    v29 = String.init(format:_:)(0x252566312E25, 0xE600000000000000, v28);
    v31 = v30;
  }
  else
  {
    v29 = 0;
    v31 = 0xE000000000000000;
  }
  v32 = v31;
  String.append(_:)(*(Swift::String *)&v29);
  swift_bridgeObjectRelease(v31);
  v33._countAndFlagsBits = 0x203A74694B5241;
  v33._object = (void *)0xE700000000000000;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(0xE700000000000000);
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setText:", v34, swift_bridgeObjectRelease(0xE200000000000000).n128_f64[0]);

  v35 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_localCountLabel);
  v36 = a1[2];
  v37._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v38 = v37._object;
  String.append(_:)(v37);
  swift_bridgeObjectRelease(v38);
  v39._countAndFlagsBits = 2128928;
  v39._object = (void *)0xE300000000000000;
  String.append(_:)(v39);
  if (v4)
  {
    v40 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v41 = swift_allocObject(v40, 72, 7);
    *(_OWORD *)(v41 + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(v41 + 56) = &type metadata for Float;
    *(_QWORD *)(v41 + 64) = &protocol witness table for Float;
    *(float *)(v41 + 32) = (float)((float)v36 * 100.0) / (float)v4;
    v42 = String.init(format:_:)(0x252566312E25, 0xE600000000000000, v41);
    v44 = v43;
  }
  else
  {
    v42 = 0;
    v44 = 0xE000000000000000;
  }
  v45 = v44;
  String.append(_:)(*(Swift::String *)&v42);
  swift_bridgeObjectRelease(v44);
  v46._countAndFlagsBits = 0x203A6C61636F4CLL;
  v46._object = (void *)0xE700000000000000;
  String.append(_:)(v46);
  swift_bridgeObjectRelease(0xE700000000000000);
  v47 = String._bridgeToObjectiveC()();
  objc_msgSend(v35, "setText:", v47, swift_bridgeObjectRelease(0xE200000000000000).n128_f64[0]);

  v48 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_patchCountLabel);
  v49 = a1[3];
  v50._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v51 = v50._object;
  String.append(_:)(v50);
  swift_bridgeObjectRelease(v51);
  v52._countAndFlagsBits = 2128928;
  v52._object = (void *)0xE300000000000000;
  String.append(_:)(v52);
  v53 = 0xE000000000000000;
  if (v4)
  {
    v54 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v55 = swift_allocObject(v54, 72, 7);
    *(_OWORD *)(v55 + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(v55 + 56) = &type metadata for Float;
    *(_QWORD *)(v55 + 64) = &protocol witness table for Float;
    *(float *)(v55 + 32) = (float)((float)v49 * 100.0) / (float)v4;
    v56 = String.init(format:_:)(0x252566312E25, 0xE600000000000000, v55);
    v58 = v57;
  }
  else
  {
    v56 = 0;
    v58 = 0xE000000000000000;
  }
  v59 = v58;
  String.append(_:)(*(Swift::String *)&v56);
  swift_bridgeObjectRelease(v58);
  v60._countAndFlagsBits = 0x203A6863746150;
  v60._object = (void *)0xE700000000000000;
  String.append(_:)(v60);
  swift_bridgeObjectRelease(0xE700000000000000);
  v61 = String._bridgeToObjectiveC()();
  objc_msgSend(v48, "setText:", v61, swift_bridgeObjectRelease(0xE200000000000000).n128_f64[0]);

  v62 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_fallbackCountLabel);
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(0xE000000000000000);
  v63 = a1[5];
  v64._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v65 = v64._object;
  String.append(_:)(v64);
  swift_bridgeObjectRelease(v65);
  v66._countAndFlagsBits = 2128928;
  v66._object = (void *)0xE300000000000000;
  String.append(_:)(v66);
  if (v4)
  {
    v67 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v68 = swift_allocObject(v67, 72, 7);
    *(_OWORD *)(v68 + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(v68 + 56) = &type metadata for Float;
    *(_QWORD *)(v68 + 64) = &protocol witness table for Float;
    *(float *)(v68 + 32) = (float)((float)v63 * 100.0) / (float)v4;
    v69 = String.init(format:_:)(0x252566312E25, 0xE600000000000000, v68);
    v53 = v70;
  }
  else
  {
    v69 = 0;
  }
  v71 = v53;
  String.append(_:)(*(Swift::String *)&v69);
  swift_bridgeObjectRelease(v53);
  v72._countAndFlagsBits = 0x6B6361626C6C6146;
  v72._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v72);
  swift_bridgeObjectRelease(0xEA0000000000203ALL);
  v73 = String._bridgeToObjectiveC()();
  objc_msgSend(v62, "setText:", v73, swift_bridgeObjectRelease(0xE200000000000000).n128_f64[0]);

  v74 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_inferredCountLabel);
  v75 = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(0xE000000000000000);
  v76 = a1[4];
  v77._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v78 = v77._object;
  String.append(_:)(v77);
  swift_bridgeObjectRelease(v78);
  v79._countAndFlagsBits = 2128928;
  v79._object = (void *)0xE300000000000000;
  String.append(_:)(v79);
  if (v4)
  {
    v80 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v81 = swift_allocObject(v80, 72, 7);
    *(_OWORD *)(v81 + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(v81 + 56) = &type metadata for Float;
    *(_QWORD *)(v81 + 64) = &protocol witness table for Float;
    *(float *)(v81 + 32) = (float)((float)v76 * 100.0) / (float)v4;
    v82 = String.init(format:_:)(0x252566312E25, 0xE600000000000000, v81);
    v84 = v83;
  }
  else
  {
    v82 = 0;
    v84 = 0xE000000000000000;
  }
  v85 = v84;
  String.append(_:)(*(Swift::String *)&v82);
  swift_bridgeObjectRelease(v84);
  v86._countAndFlagsBits = 0x6465727265666E49;
  v86._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v86);
  swift_bridgeObjectRelease(0xEA0000000000203ALL);
  v87 = String._bridgeToObjectiveC()();
  objc_msgSend(v74, "setText:", v87, swift_bridgeObjectRelease(0xE200000000000000).n128_f64[0]);

  v88 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_prevCountLabel);
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(0xE000000000000000);
  v89 = a1[6];
  v90._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v91 = v90._object;
  String.append(_:)(v90);
  swift_bridgeObjectRelease(v91);
  v92._countAndFlagsBits = 2128928;
  v92._object = (void *)0xE300000000000000;
  String.append(_:)(v92);
  if (v4)
  {
    v93 = sub_10000EDC8((uint64_t *)&unk_10048A100);
    v94 = swift_allocObject(v93, 72, 7);
    *(_OWORD *)(v94 + 16) = xmmword_1003B0BD0;
    *(_QWORD *)(v94 + 56) = &type metadata for Float;
    *(_QWORD *)(v94 + 64) = &protocol witness table for Float;
    *(float *)(v94 + 32) = (float)((float)v89 * 100.0) / (float)v4;
    v95 = String.init(format:_:)(0x252566312E25, 0xE600000000000000, v94);
    v75 = v96;
  }
  else
  {
    v95 = 0;
  }
  v97 = v75;
  String.append(_:)(*(Swift::String *)&v95);
  swift_bridgeObjectRelease(v75);
  v98._countAndFlagsBits = 0x73756F6976657250;
  v98._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v98);
  swift_bridgeObjectRelease(0xEA0000000000203ALL);
  v99 = String._bridgeToObjectiveC()();
  objc_msgSend(v88, "setText:", v99, swift_bridgeObjectRelease(0xE200000000000000).n128_f64[0]);

  sub_1001C2DDC();
}

UIColor sub_1001C2630()
{
  UIColor result;

  sub_100018148(0, &qword_10047D0A0, UIColor_ptr);
  result.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 1.0).super.isa;
  qword_100489FD8 = (uint64_t)result.super.isa;
  return result;
}

void sub_1001C2680()
{
  qword_100489FE0 = 0x4028000000000000;
}

char *sub_1001C2690(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  char *v28;
  uint64_t v29;
  char *v30;
  id v31;
  double v32;
  id v33;
  objc_class *ObjectType;
  objc_super v36;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  *(_QWORD *)&v4[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_maxWidth] = 0;
  v9 = objc_allocWithZone((Class)UILabel);
  v10 = v4;
  v11 = objc_msgSend(v9, "initWithFrame:", a1, a2, a3, a4);
  if (qword_10047B178 != -1)
    swift_once(&qword_10047B178, sub_1001C2630);
  objc_msgSend(v11, "setTextColor:", qword_100489FD8);
  objc_msgSend(v11, "setTextAlignment:", 0);
  v12 = (void *)objc_opt_self(UIFont);
  if (qword_10047B180 != -1)
    swift_once(&qword_10047B180, sub_1001C2680);
  v13 = objc_msgSend(v12, "systemFontOfSize:", *(double *)&qword_100489FE0);
  objc_msgSend(v11, "setFont:", v13);

  *(_QWORD *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_totalCountLabel] = v11;
  v14 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v14, "setTextColor:", qword_100489FD8);
  objc_msgSend(v14, "setTextAlignment:", 0);
  v15 = objc_msgSend(v12, "systemFontOfSize:", *(double *)&qword_100489FE0);
  objc_msgSend(v14, "setFont:", v15);

  *(_QWORD *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel] = v14;
  v16 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v16, "setTextColor:", qword_100489FD8);
  objc_msgSend(v16, "setTextAlignment:", 0);
  v17 = objc_msgSend(v12, "systemFontOfSize:", *(double *)&qword_100489FE0);
  objc_msgSend(v16, "setFont:", v17);

  *(_QWORD *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_arkitCountLabel] = v16;
  v18 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v18, "setTextColor:", qword_100489FD8);
  objc_msgSend(v18, "setTextAlignment:", 0);
  v19 = objc_msgSend(v12, "systemFontOfSize:", *(double *)&qword_100489FE0);
  objc_msgSend(v18, "setFont:", v19);

  *(_QWORD *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_localCountLabel] = v18;
  v20 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v20, "setTextColor:", qword_100489FD8);
  objc_msgSend(v20, "setTextAlignment:", 0);
  v21 = objc_msgSend(v12, "systemFontOfSize:", *(double *)&qword_100489FE0);
  objc_msgSend(v20, "setFont:", v21);

  *(_QWORD *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_patchCountLabel] = v20;
  v22 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v22, "setTextColor:", qword_100489FD8);
  objc_msgSend(v22, "setTextAlignment:", 0);
  v23 = objc_msgSend(v12, "systemFontOfSize:", *(double *)&qword_100489FE0);
  objc_msgSend(v22, "setFont:", v23);

  *(_QWORD *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_fallbackCountLabel] = v22;
  v24 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v24, "setTextColor:", qword_100489FD8);
  objc_msgSend(v24, "setTextAlignment:", 0);
  v25 = objc_msgSend(v12, "systemFontOfSize:", *(double *)&qword_100489FE0);
  objc_msgSend(v24, "setFont:", v25);

  *(_QWORD *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_inferredCountLabel] = v24;
  v26 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v26, "setTextColor:", qword_100489FD8);
  objc_msgSend(v26, "setTextAlignment:", 0);
  v27 = objc_msgSend(v12, "systemFontOfSize:", *(double *)&qword_100489FE0);
  objc_msgSend(v26, "setFont:", v27);

  *(_QWORD *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_prevCountLabel] = v26;
  v36.receiver = v10;
  v36.super_class = ObjectType;
  v28 = (char *)objc_msgSendSuper2(&v36, "initWithFrame:", a1, a2, a3, a4);
  v29 = *(_QWORD *)&v28[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_totalCountLabel];
  v30 = v28;
  objc_msgSend(v30, "addSubview:", v29);
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel]);
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_localCountLabel]);
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_arkitCountLabel]);
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_patchCountLabel]);
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_inferredCountLabel]);
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_fallbackCountLabel]);
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_prevCountLabel]);
  v31 = objc_msgSend(v30, "layer");
  LODWORD(v32) = 1.0;
  objc_msgSend(v31, "setShadowOpacity:", v32);

  v33 = objc_msgSend(v30, "layer");
  objc_msgSend(v33, "setShadowOffset:", 0.0, 0.0);

  objc_msgSend(v30, "setUserInteractionEnabled:", 0);
  return v30;
}

void sub_1001C2DDC()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  id v16;
  void *v17;
  uint64_t v18;
  char **v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  id v26;
  void *v27;
  double v28;
  double v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  double v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t j;
  id v38;
  void *v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  double v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  id v54;
  void *v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  CGRect v60;

  v1 = v0;
  v2 = objc_msgSend(v0, "superview");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "frame");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    v12 = objc_msgSend(v1, "subviews");
    v59 = sub_100018148(0, (unint64_t *)&qword_100481BC0, UIView_ptr);
    v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v59);

    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0)
        v18 = v13;
      else
        v18 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
      v14 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (!v14)
        goto LABEL_15;
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v13);
      if (!v14)
        goto LABEL_15;
    }
    if (v14 < 1)
    {
      __break(1u);
      goto LABEL_66;
    }
    for (i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v13);
      else
        v16 = *(id *)(v13 + 8 * i + 32);
      v17 = v16;
      objc_msgSend(v16, "sizeToFit", v59);

    }
LABEL_15:
    v19 = &selRef_renderer_didAddNode_forAnchor_;
    v20 = objc_msgSend(v1, "subviews", swift_bridgeObjectRelease_n(v13, 2).n128_f64[0]);
    v21 = v59;
    v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v59);

    if ((unint64_t)v22 >> 62)
    {
      if (v22 < 0)
        v30 = v22;
      else
        v30 = v22 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v22);
      v23 = _CocoaArrayWrapper.endIndex.getter(v30);
      if (v23)
      {
LABEL_17:
        if (v23 >= 1)
        {
          v24 = 0;
          v25 = 0.0;
          do
          {
            if ((v22 & 0xC000000000000001) != 0)
              v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v22);
            else
              v26 = *(id *)(v22 + 8 * v24 + 32);
            v27 = v26;
            ++v24;
            objc_msgSend(v26, "frame", v59);
            v29 = v28;

            v25 = v25 + v29;
          }
          while (v23 != v24);
LABEL_28:
          *(_QWORD *)&v31 = swift_bridgeObjectRelease_n(v22, 2).n128_u64[0];
          v32 = OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_maxWidth;
          v33 = *(double *)&v1[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_maxWidth];
          v34 = objc_msgSend(v1, "subviews", v31);
          v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v34, v21);

          if ((unint64_t)v35 >> 62)
          {
            if (v35 < 0)
              v44 = v35;
            else
              v44 = v35 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v35);
            v36 = _CocoaArrayWrapper.endIndex.getter(v44);
            swift_bridgeObjectRelease(v35);
            if (v36)
            {
LABEL_30:
              sub_1000A5660(0, v36 & ~(v36 >> 63), 0);
              if ((v36 & 0x8000000000000000) == 0)
              {
                for (j = 0; j != v36; ++j)
                {
                  if ((v35 & 0xC000000000000001) != 0)
                    v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v35);
                  else
                    v38 = *(id *)(v35 + 8 * j + 32);
                  v39 = v38;
                  objc_msgSend(v38, "frame", v59);
                  v41 = v40;

                  v43 = _swiftEmptyArrayStorage[2];
                  v42 = _swiftEmptyArrayStorage[3];
                  if (*(_QWORD *)&v43 >= *(_QWORD *)&v42 >> 1)
                    sub_1000A5660((char *)(*(_QWORD *)&v42 > 1uLL), *(_QWORD *)&v43 + 1, 1);
                  *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v43 + 1;
                  _swiftEmptyArrayStorage[*(_QWORD *)&v43 + 4] = v41;
                }
                swift_bridgeObjectRelease(v35);
                v19 = &selRef_renderer_didAddNode_forAnchor_;
                v21 = v59;
LABEL_44:
                *(double *)&v45 = COERCE_DOUBLE(sub_10004BE74((uint64_t)_swiftEmptyArrayStorage));
                v47 = v46;
                swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
                v48 = *(double *)&v45;
                if ((v47 & 1) != 0)
                  v48 = 0.0;
                if (v48 >= v33)
                {
                  if ((~*(_QWORD *)&v48 & 0x7FF0000000000000) != 0)
                  {
                    v33 = v48;
                  }
                  else if ((*(_QWORD *)&v48 & 0xFFFFFFFFFFFFFLL) == 0)
                  {
                    v33 = v48;
                  }
                }
                *(double *)&v1[v32] = v33;
                v60.origin.x = v5;
                v60.origin.y = v7;
                v60.size.width = v9;
                v60.size.height = v11;
                objc_msgSend(v1, "setFrame:", 0.0, CGRectGetMidY(v60) + v25 * -0.5, *(double *)&v1[v32], v25);
                v49 = objc_msgSend(v1, v19[203]);
                v50 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v49, v21);

                if ((unint64_t)v50 >> 62)
                {
                  if (v50 < 0)
                    v58 = v50;
                  else
                    v58 = v50 & 0xFFFFFFFFFFFFFF8;
                  swift_bridgeObjectRetain(v50);
                  v51 = _CocoaArrayWrapper.endIndex.getter(v58);
                  swift_bridgeObjectRelease(v50);
                  if (v51)
                  {
LABEL_54:
                    if (v51 >= 1)
                    {
                      v52 = 0;
                      v53 = 0.0;
                      do
                      {
                        if ((v50 & 0xC000000000000001) != 0)
                          v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v52, v50);
                        else
                          v54 = *(id *)(v50 + 8 * v52 + 32);
                        v55 = v54;
                        ++v52;
                        objc_msgSend(v54, "frame", v59);
                        objc_msgSend(v55, "setFrame:");
                        objc_msgSend(v55, "frame");
                        v57 = v56;

                        v53 = v53 + v57;
                      }
                      while (v51 != v52);
                      goto LABEL_64;
                    }
                    goto LABEL_68;
                  }
                }
                else
                {
                  v51 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
                  if (v51)
                    goto LABEL_54;
                }
LABEL_64:
                swift_bridgeObjectRelease(v50);
                return;
              }
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
              return;
            }
          }
          else
          {
            v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v36)
              goto LABEL_30;
          }
          swift_bridgeObjectRelease(v35);
          goto LABEL_44;
        }
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
    }
    else
    {
      v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v22);
      if (v23)
        goto LABEL_17;
    }
    v25 = 0.0;
    goto LABEL_28;
  }
}

uint64_t type metadata accessor for PlaneSelectionStatsView()
{
  return objc_opt_self(_TtC7Measure23PlaneSelectionStatsView);
}

void sub_1001C3434(__n128 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8)
{
  _BYTE *v8;
  __n128 *v9;
  double v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  int v20;
  int v21;
  int v22;
  char v23;
  __n128 v25;
  __n128 v27;
  __n128 v29;
  __n128 v31;
  int v36;
  int v37;
  int v38;
  uint64_t v39;

  v9 = (__n128 *)&v8[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms];
  *v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = a5;
  v9[5] = a6;
  v9[6] = a7;
  v9[7] = a8;
  v10 = simd_float4x4.position.getter(a1, a2, a3, a4);
  SCNVector3.init(_:)(v10);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  type metadata accessor for SCNVector3(0);
  v18 = v17;
  v39 = v17;
  v36 = v12;
  v37 = v14;
  v38 = v16;
  sub_1001C5010((uint64_t)&v36, 0x3050656E696CLL, 0xE600000000000000, (SEL *)&selRef_setValue_forKeyPath_);
  sub_100018180((uint64_t)&v36);
  v19 = simd_float4x4.position.getter(a5, a6, a7, a8);
  SCNVector3.init(_:)(v19);
  v39 = v18;
  v36 = v20;
  v37 = v21;
  v38 = v22;
  sub_1001C5010((uint64_t)&v36, 0x3150656E696CLL, 0xE600000000000000, (SEL *)&selRef_setValue_forKeyPath_);
  sub_100018180((uint64_t)&v36);
  if (v8[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldRenderNumbers] == 1)
  {
    if ((v8[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldHide] & 1) != 0)
      v23 = 1;
    else
      sub_1001C5520();
    objc_msgSend(v8, "setHidden:", v23 & 1, *(_OWORD *)&a1, *(_OWORD *)&a2, *(_OWORD *)&a3, *(_OWORD *)&a4);
    sub_1001C4208(v25, v27, v29, v31, a5, a6, a7, a8);
  }
}

uint64_t sub_1001C3588(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_1001C35A8(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

double sub_1001C35DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double result;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v42 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v41 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v12);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v39 = *(_QWORD *)(v15 - 8);
  v40 = v15;
  __chkstk_darwin(v15);
  v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v3 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString);
  v20 = *(_QWORD *)(v3 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString + 8);
  v21 = v19 == a1 && v20 == a2;
  if (!v21 && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v19, v20, 0) & 1) == 0)
  {
    v37[1] = sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
    static DispatchQoS.unspecified.getter(v22);
    aBlock[0] = _swiftEmptyArrayStorage;
    v23 = sub_10000C4B0((unint64_t *)&qword_10047E690, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
    v24 = sub_10000EDC8(&qword_100486EF0);
    v38 = v6;
    v25 = v24;
    v26 = sub_100036038((unint64_t *)&qword_10047E6A0, &qword_100486EF0);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v12, v23);
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v8);
    v27 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0x65626D754E646E65, 0xE900000000000072, v18, v14, v11, 0);
    v28 = swift_allocObject(&unk_10044BD98, 24, 7);
    swift_unknownObjectWeakInit(v28 + 16, v3);
    aBlock[4] = sub_1001C61BC;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003ECA0;
    aBlock[3] = &unk_10044BDB0;
    v29 = _Block_copy(aBlock);
    v30 = swift_retain();
    static DispatchQoS.unspecified.getter(v30);
    v43 = _swiftEmptyArrayStorage;
    v31 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v32 = sub_10000EDC8((uint64_t *)&unk_10047E430);
    v33 = sub_100036038((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430);
    v34 = v41;
    v35 = v32;
    v36 = v38;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v43, v35, v33, v38, v31);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v18, v34, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v36);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v40);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_1001C3970(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t isEscapingClosureAtFileLocation;
  double v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  char v33;
  double v34;
  id v35;
  uint64_t v36;
  void *v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void **aBlock;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  char v54[24];

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v54, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1, v10);
  if (Strong)
  {
    v12 = (char *)Strong;
    v46 = v6;
    v47 = v3;
    v44 = OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_isMaterialAActive;
    v45 = v7;
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_isMaterialAActive) == 1)
    {
      v43 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(Strong
                                                                  + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialB), "diffuse"));
      v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString];
      v14 = *(_QWORD *)&v12[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString + 8];
      v15 = qword_10047AD98;
      swift_bridgeObjectRetain(v14);
      if (v15 != -1)
        swift_once(&qword_10047AD98, sub_10018AA78);
      v16 = (void *)qword_100488410;
      v17 = swift_allocObject(&unk_10044BEB0, 32, 7);
      *(_QWORD *)(v17 + 16) = v13;
      *(_QWORD *)(v17 + 24) = v14;
      v18 = swift_allocObject(&unk_10044BED8, 32, 7);
      *(_QWORD *)(v18 + 16) = sub_1001C6550;
      *(_QWORD *)(v18 + 24) = v17;
      v52 = sub_1001C6554;
      v53 = v18;
      aBlock = _NSConcreteStackBlock;
      v49 = 1107296256;
      v50 = sub_1001C35A8;
      v51 = &unk_10044BEF0;
      v19 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain(v14);
      swift_retain();
      v20 = objc_msgSend(v16, "imageWithActions:", v19, swift_release().n128_f64[0]);
      _Block_release(v19);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v18, "", 90, 100, 45, 1);
      swift_bridgeObjectRelease(v14);
      swift_release();
      *(_QWORD *)&v22 = swift_release().n128_u64[0];
      if ((isEscapingClosureAtFileLocation & 1) == 0)
      {
        v23 = v43;
        objc_msgSend(v43, "setContents:", v20, v22);

        sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
        v24 = (void *)static OS_dispatch_queue.main.getter();
        v25 = swift_allocObject(&unk_10044BF28, 24, 7);
        *(_QWORD *)(v25 + 16) = v12;
        v52 = sub_1001C6250;
        v53 = v25;
        aBlock = _NSConcreteStackBlock;
        v49 = 1107296256;
        v26 = &unk_10044BF40;
LABEL_10:
        v50 = sub_10003ECA0;
        v51 = v26;
        v37 = _Block_copy(&aBlock);
        v38 = v12;
        v39 = swift_release();
        static DispatchQoS.unspecified.getter(v39);
        aBlock = (void **)_swiftEmptyArrayStorage;
        v40 = sub_10000C4B0((unint64_t *)&qword_10047D7F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v41 = sub_10000EDC8((uint64_t *)&unk_10047E430);
        v42 = sub_100036038((unint64_t *)&qword_10047D800, (uint64_t *)&unk_10047E430);
        dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v41, v42, v2, v40);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v37);
        _Block_release(v37);

        (*(void (**)(char *, uint64_t))(v47 + 8))(v5, v2);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v46);
        v12[v44] = (v12[v44] & 1) == 0;

        return;
      }
      __break(1u);
    }
    else
    {
      v43 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(Strong
                                                                  + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialA), "diffuse"));
      isEscapingClosureAtFileLocation = *(_QWORD *)&v12[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString];
      v14 = *(_QWORD *)&v12[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString + 8];
      v27 = qword_10047AD98;
      swift_bridgeObjectRetain(v14);
      if (v27 == -1)
      {
LABEL_8:
        v28 = (void *)qword_100488410;
        v29 = swift_allocObject(&unk_10044BDE8, 32, 7);
        *(_QWORD *)(v29 + 16) = isEscapingClosureAtFileLocation;
        *(_QWORD *)(v29 + 24) = v14;
        v30 = swift_allocObject(&unk_10044BE10, 32, 7);
        *(_QWORD *)(v30 + 16) = sub_100182494;
        *(_QWORD *)(v30 + 24) = v29;
        v52 = sub_10009036C;
        v53 = v30;
        aBlock = _NSConcreteStackBlock;
        v49 = 1107296256;
        v50 = sub_1001C35A8;
        v51 = &unk_10044BE28;
        v31 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain(v14);
        swift_retain();
        v32 = objc_msgSend(v28, "imageWithActions:", v31, swift_release().n128_f64[0]);
        _Block_release(v31);
        v33 = swift_isEscapingClosureAtFileLocation(v30, "", 90, 100, 45, 1);
        swift_bridgeObjectRelease(v14);
        swift_release();
        *(_QWORD *)&v34 = swift_release().n128_u64[0];
        if ((v33 & 1) != 0)
        {
          __break(1u);
          return;
        }
        v35 = v43;
        objc_msgSend(v43, "setContents:", v32, v34);

        sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
        v24 = (void *)static OS_dispatch_queue.main.getter();
        v36 = swift_allocObject(&unk_10044BE60, 24, 7);
        *(_QWORD *)(v36 + 16) = v12;
        v52 = sub_1001C6210;
        v53 = v36;
        aBlock = _NSConcreteStackBlock;
        v49 = 1107296256;
        v26 = &unk_10044BE78;
        goto LABEL_10;
      }
    }
    swift_once(&qword_10047AD98, sub_10018AA78);
    goto LABEL_8;
  }
}

uint64_t sub_1001C3F68(uint64_t result)
{
  char *v1;
  char v2;
  int8x16_t v3;
  int8x16_t v4;
  __n128 v5;
  float32x4_t v6;
  float32x4_t v7;
  int32x4_t v8;
  int8x16_t v9;
  float32x4_t v10;
  uint64_t v11;
  float *v12;
  __float2 v13;
  float32x4_t v14;
  int32x4_t v15;
  int8x16_t v16;
  float32x4_t v17;
  uint64_t v18;
  float32x4_t v19;
  float32x4_t v20;
  uint64_t v21;

  if (v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_lastNumbersOrientation] != result)
  {
    v2 = result;
    objc_msgSend(v1, "simdTransform");
    *(double *)v6.i64 = sub_100070244(v3, v4, v5);
    v19 = v6;
    sub_100183334(v2);
    v8 = (int32x4_t)vnegq_f32(v7);
    v9 = (int8x16_t)vtrn2q_s32((int32x4_t)v7, vtrn1q_s32((int32x4_t)v7, v8));
    v10 = (float32x4_t)vrev64q_s32((int32x4_t)v7);
    v10.i32[0] = v8.i32[1];
    v10.i32[3] = v8.i32[2];
    v20 = vaddq_f32(vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v7, (int8x16_t)v8, 8uLL), *(float32x2_t *)v19.f32, 1), (float32x4_t)vextq_s8(v9, v9, 8uLL), v19.f32[0]), vmlaq_laneq_f32(vmulq_laneq_f32(v7, v19, 3), v10, v19, 2));
    v12 = (float *)Float.piDiv2.unsafeMutableAddressor(v11);
    v13 = __sincosf_stret(*v12 * -0.5);
    v14 = vmulq_n_f32((float32x4_t)xmmword_1003B3540, v13.__sinval);
    v14.i32[3] = LODWORD(v13.__cosval);
    v15 = (int32x4_t)vnegq_f32(v14);
    v16 = (int8x16_t)vtrn2q_s32((int32x4_t)v14, vtrn1q_s32((int32x4_t)v14, v15));
    v17 = (float32x4_t)vrev64q_s32((int32x4_t)v14);
    v17.i32[0] = v15.i32[1];
    v17.i32[3] = v15.i32[2];
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_number], "setSimdOrientation:", *(double *)vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v14, v20, 3), v17, v20, 2), vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v14, (int8x16_t)v15, 8uLL), *(float32x2_t *)v20.f32, 1), (float32x4_t)vextq_s8(v16, v16, 8uLL), v20.f32[0])).i64);
    v18 = sub_100018148(0, &qword_10047BCE8, SCNNode_ptr);
    SCNBoundingVolume.boundingBox.getter(&v21, v18);
    __asm { BR              X10 }
  }
  return result;
}

void sub_1001C4208(__n128 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8)
{
  char *v8;
  char *v9;
  float32x4_t v10;
  float32x4_t v11;
  float32x4_t v12;
  float32x4_t v13;
  float v14;
  uint64_t v15;
  uint64_t v16;
  __n128 *v17;
  float32x4_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float v22;
  void (*v23)(__n128);
  __n128 v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  float32x4_t v34;
  float32x4_t v35;
  uint64_t v40;

  v9 = v8;
  *(double *)v10.i64 = simd_float4x4.position.getter(a1, a2, a3, a4);
  v35 = v10;
  *(double *)v11.i64 = simd_float4x4.position.getter(a5, a6, a7, a8);
  v12 = vsubq_f32(v35, v11);
  v13 = vmulq_f32(v12, v12);
  v14 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v13, 2), vaddq_f32(v13, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v13.f32, 1))).f32[0]);
  if (qword_10047AC60 != -1)
    swift_once(&qword_10047AC60, sub_1001834A0);
  objc_msgSend(v8, "simdTransform");
  v15 = OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_lastNumbersOrientation;
  sub_100183334(v8[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_lastNumbersOrientation]);
  Float.piDiv2.unsafeMutableAddressor(v16);
  v17 = (__n128 *)&v8[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms];
  *(double *)v18.i64 = simd_float4x4.position.getter(*(__n128 *)&v9[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms], *(__n128 *)&v9[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms + 16], *(__n128 *)&v9[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms + 32], *(__n128 *)&v9[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms + 48]);
  v34 = v18;
  *(double *)v19.i64 = simd_float4x4.position.getter(v17[4], v17[5], v17[6], v17[7]);
  v20 = vsubq_f32(v34, v19);
  v21 = vmulq_f32(v20, v20);
  v22 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v21, 2), vaddq_f32(v21, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v21.f32, 1))).f32[0]);
  v23 = *(void (**)(__n128))(**(_QWORD **)&v9[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber__unitState]
                                      + 144);
  v24 = swift_retain();
  v23(v24);
  swift_release();
  v25 = sub_10009BF0C();
  v27 = sub_1001C5770((uint64_t)v25, v22);
  v28 = v26;
  if (v14 > 0.00000011921)
  {
    v29 = (uint64_t *)&v9[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString];
    v30 = *(_QWORD *)&v9[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString];
    v31 = *(_QWORD *)&v9[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString + 8];
    *v29 = v27;
    v29[1] = v26;
    sub_1001C35DC(v30, v31);
    v28 = v31;
  }
  swift_bridgeObjectRelease(v28);
  v32 = v9[v15];
  v33 = sub_100018148(0, &qword_10047BCE8, SCNNode_ptr);
  SCNBoundingVolume.boundingBox.getter(&v40, v33);
  __asm { BR              X9 }
}

char *sub_1001C454C(__n128 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8)
{
  _BYTE *v8;
  objc_class *ObjectType;
  _BYTE *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, __n128);
  __n128 v31;
  __n128 *v32;
  id v33;
  id v34;
  char *v35;
  float v36;
  id v37;
  id v38;
  _BYTE v48[12];
  uint64_t v49;
  int v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  float v55;
  uint64_t v56;
  objc_super v57;
  _QWORD v58[2];

  ObjectType = (objc_class *)swift_getObjectType(v8);
  v8[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_isMaterialAActive] = 1;
  v10 = v8;
  v11 = sub_100181ABC(9);
  v12 = objc_msgSend(v11, "copy");

  _bridgeAnyObjectToAny(_:)(v48, v12);
  swift_unknownObjectRelease(v12);
  v13 = sub_100018148(0, (unint64_t *)&qword_10048A110, SCNMaterial_ptr);
  if (swift_dynamicCast(v58, v48, (char *)&type metadata for Any + 8, v13, 6))
    v14 = (id)v58[0];
  else
    v14 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
  v15 = OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialA;
  *(_QWORD *)&v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialA] = v14;
  v16 = sub_100181ABC(9);
  v17 = objc_msgSend(v16, "copy");

  _bridgeAnyObjectToAny(_:)(v48, v17);
  swift_unknownObjectRelease(v17);
  if (swift_dynamicCast(v58, v48, (char *)&type metadata for Any + 8, v13, 6))
    v18 = (id)v58[0];
  else
    v18 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
  *(_QWORD *)&v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialB] = v18;
  v19 = &v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString];
  *v19 = 0;
  v19[1] = 0xE000000000000000;
  v20 = OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber__unitState;
  KeyPath = swift_getKeyPath(&unk_1003BC258);
  v22 = sub_10000EDC8(&qword_100481258);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v23 = qword_1004AF890;
  v24 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v22 + 272);
  v25 = swift_retain();
  *(_QWORD *)&v10[v20] = v24(KeyPath, v23, v25);
  v26 = OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber__orientationState;
  v27 = swift_getKeyPath(&unk_1003BC280);
  v28 = sub_10000EDC8((uint64_t *)&unk_10047EFD0);
  v29 = qword_1004AF890;
  v30 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v28 + 272);
  v31 = swift_retain();
  *(_QWORD *)&v10[v26] = v30(v27, v29, v31);
  v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_lastNumbersOrientation] = 2;
  v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldHide] = 1;
  v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_isOcclusionInitialized] = 0;
  v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldRenderNumbers] = 0;
  v32 = (__n128 *)&v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms];
  *v32 = a1;
  v32[1] = a2;
  v32[2] = a3;
  v32[3] = a4;
  v32[4] = a5;
  v32[5] = a6;
  v32[6] = a7;
  v32[7] = a8;
  v33 = objc_msgSend((id)objc_opt_self(SCNPlane), "planeWithWidth:height:", 400.0, 100.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_plane] = v33;
  objc_msgSend(v33, "setFirstMaterial:", *(_QWORD *)&v10[v15]);
  v34 = objc_msgSend((id)objc_opt_self(SCNNode), "nodeWithGeometry:", v33);
  *(_QWORD *)&v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_number] = v34;

  v57.receiver = v10;
  v57.super_class = ObjectType;
  v35 = (char *)objc_msgSendSuper2(&v57, "init");
  objc_msgSend(v35, "setHidden:", 1);
  objc_msgSend(v35, "addChildNode:", *(_QWORD *)&v35[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_number]);
  sub_1001C4208(a1, a2, a3, a4, a5, a6, a7, a8);
  if (((v35[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_lastNumbersOrientation] - 1) & 0xFD) != 0)
    v36 = 0.5;
  else
    v36 = 0.0;
  v37 = objc_msgSend(*(id *)&v35[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialA], "diffuse", *(_OWORD *)&a1, *(_OWORD *)&a2, *(_OWORD *)&a3, *(_OWORD *)&a4, *(_OWORD *)&a5, *(_OWORD *)&a6, *(_OWORD *)&a7, *(_OWORD *)&a8);
  *(_DWORD *)v48 = 1065353216;
  v49 = 0;
  *(_QWORD *)&v48[4] = 0;
  v50 = 1056964608;
  v52 = 0;
  v53 = 0;
  v51 = 0;
  v54 = 0;
  v55 = v36;
  v56 = 0x3F80000000000000;
  objc_msgSend(v37, "setContentsTransform:", v48);

  v38 = objc_msgSend(*(id *)&v35[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialB], "diffuse");
  *(_DWORD *)v48 = 1065353216;
  v49 = 0;
  *(_QWORD *)&v48[4] = 0;
  v50 = 1056964608;
  v52 = 0;
  v53 = 0;
  v51 = 0;
  v54 = 0;
  v55 = v36;
  v56 = 0x3F80000000000000;
  objc_msgSend(v38, "setContentsTransform:", v48);

  v51 = &type metadata for CGFloat;
  *(_QWORD *)v48 = 0x3FF0000000000000;
  sub_1001C5010((uint64_t)v48, 0x6D754E646E457369, 0xEB00000000726562, (SEL *)&selRef_setValue_forKeyPath_);
  sub_100018180((uint64_t)v48);
  if (qword_10047AC78 != -1)
    swift_once(&qword_10047AC78, sub_1001835CC);
  v51 = &type metadata for Float;
  *(_DWORD *)v48 = dword_1004AF79C;
  sub_1001C5010((uint64_t)v48, 0xD000000000000012, 0x80000001003D8F00, (SEL *)&selRef_setValue_forKeyPath_);

  sub_100018180((uint64_t)v48);
  return v35;
}

void sub_1001C4A9C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t *v16;
  uint64_t v17;
  __n128 v18;
  __n128 v19;
  id v20;
  unsigned int v21;
  double v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  void *v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  void *v38;
  void *v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  double v52;
  double v53;
  double v54;
  _BYTE v55[24];
  _BYTE v56[24];
  unint64_t v57;
  int v58;
  int v59;
  void *v60;
  _BYTE v61[24];
  float32x4_t v62;
  float32x4_t v63;
  float32x4_t v64;
  _BYTE v65[24];
  _QWORD v66[6];

  v1 = v0;
  if (!objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable")
    || (v2 = (void *)objc_opt_self(NSUserDefaults),
        v3 = objc_msgSend(v2, "standardUserDefaults"),
        v4 = objc_msgSend(v3, "isLineOcclusionEnabled"),
        v3,
        !v4)
    || (v6 = *(_QWORD *)MeasureCore.shared.unsafeMutableAddressor(v5),
        swift_beginAccess(v6 + 112, v65, 0, 0),
        (v7 = *(_QWORD *)(v6 + 112)) == 0))
  {
    v66[3] = &type metadata for CGFloat;
    v66[0] = 0;
    sub_1001C5010((uint64_t)v66, 0xD000000000000010, 0x80000001003D9040, (SEL *)&selRef_setValue_forKeyPath_);
    sub_100018180((uint64_t)v66);
    return;
  }
  v8 = qword_10047AF18;
  swift_retain();
  if (v8 != -1)
    swift_once(&qword_10047AF18, sub_1001963D0);
  v9 = UIColor.rgba.getter();
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v64 = 0u;
  v16 = (uint64_t *)(v7 + 208);
  v62 = 0u;
  v63 = 0u;
  swift_beginAccess(v7 + 208, v61, 0, 0);
  if (!*(_QWORD *)(v7 + 208))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  swift_retain();
  ADProcessor.transformer.getter(v17);
  v18 = swift_release();
  Transformer.clipToCameraNormalized.getter(v66, v18);
  v19 = swift_release();
  simd_float3x3.copy(from:)(v66, v19);
  *(_QWORD *)&v52 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1003B19E0, v62.f32[0]), (float32x4_t)xmmword_1003B19F0, *(float32x2_t *)v62.f32, 1), (float32x4_t)xmmword_1003B1A00, v62, 2).u64[0];
  *(_QWORD *)&v53 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1003B19E0, v63.f32[0]), (float32x4_t)xmmword_1003B19F0, *(float32x2_t *)v63.f32, 1), (float32x4_t)xmmword_1003B1A00, v63, 2).u64[0];
  *(_QWORD *)&v54 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1003B19E0, v64.f32[0]), (float32x4_t)xmmword_1003B19F0, *(float32x2_t *)v64.f32, 1), (float32x4_t)xmmword_1003B1A00, v64, 2).u64[0];
  v20 = objc_msgSend(v2, "standardUserDefaults");
  v21 = objc_msgSend(v20, "isLineOcclusionEnabled");

  v22 = 0.0;
  if (v21)
    v22 = 1.0;
  v60 = &type metadata for CGFloat;
  v57 = *(_QWORD *)&v22;
  sub_1001C5010((uint64_t)&v57, 0xD000000000000010, 0x80000001003D9040, (SEL *)&selRef_setValue_forKeyPath_);
  sub_100018180((uint64_t)&v57);
  SCNVector4.init(_:_:_:_:)(v9, v11, v13, v15);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  type metadata accessor for SCNVector4(0);
  v60 = v31;
  v57 = __PAIR64__(v26, v24);
  v58 = v28;
  v59 = v30;
  sub_1001C5010((uint64_t)&v57, 0x646564756C63636FLL, 0xED0000726F6C6F43, (SEL *)&selRef_setValue_forKeyPath_);
  sub_100018180((uint64_t)&v57);
  v60 = &type metadata for CGFloat;
  v57 = 0x3FB99999A0000000;
  sub_1001C5010((uint64_t)&v57, 0x636E6172656C6F74, 0xE900000000000065, (SEL *)&selRef_setValue_forKeyPath_);
  sub_100018180((uint64_t)&v57);
  SCNVector3.init(_:)(v52);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  type metadata accessor for SCNVector3(0);
  v39 = v38;
  v60 = v38;
  v57 = __PAIR64__(v35, v33);
  v58 = v37;
  sub_1001C5010((uint64_t)&v57, 0xD000000000000012, 0x80000001003D9060, (SEL *)&selRef_setValue_forKey_);
  sub_100018180((uint64_t)&v57);
  SCNVector3.init(_:)(v53);
  v60 = v39;
  v57 = __PAIR64__(v41, v40);
  v58 = v42;
  sub_1001C5010((uint64_t)&v57, 0xD000000000000012, 0x80000001003D9080, (SEL *)&selRef_setValue_forKey_);
  sub_100018180((uint64_t)&v57);
  SCNVector3.init(_:)(v54);
  v60 = v39;
  v57 = __PAIR64__(v44, v43);
  v58 = v45;
  sub_1001C5010((uint64_t)&v57, 0xD000000000000012, 0x80000001003D90A0, (SEL *)&selRef_setValue_forKey_);
  sub_100018180((uint64_t)&v57);
  v46 = *v16;
  if (!*v16)
    goto LABEL_16;
  swift_beginAccess(v46 + 242, v56, 0, 0);
  if (*(_BYTE *)(v46 + 242) == 1)
  {
    swift_beginAccess(v46 + 256, v55, 0, 0);
    v47 = *(_QWORD *)(v46 + 256);
    swift_unknownObjectRetain(v47);
  }
  else
  {
    v48 = swift_retain();
    v47 = ADProcessor.outputDepthTexture.getter(v48);
    swift_release();
  }
  v57 = v47;
  swift_unknownObjectRetain_n(v47, 2);
  v49 = sub_10000EDC8((uint64_t *)&unk_10047F040);
  v50 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v57, v49);
  v51 = objc_msgSend((id)objc_opt_self(SCNMaterialProperty), "materialPropertyWithContents:", v50);
  swift_unknownObjectRelease(v47);
  swift_unknownObjectRelease(v50);
  v60 = (void *)sub_100018148(0, (unint64_t *)&unk_10048A120, SCNMaterialProperty_ptr);
  v57 = (unint64_t)v51;
  sub_1001C5010((uint64_t)&v57, 0x7275747865546461, 0xE900000000000065, (SEL *)&selRef_setValue_forKey_);
  swift_release();
  swift_unknownObjectRelease(v47);
  sub_100018180((uint64_t)&v57);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_isOcclusionInitialized) = 1;
}

void sub_1001C5010(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  SEL *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  NSString v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  NSString v24;
  _QWORD v25[2];
  _QWORD v26[3];
  uint64_t v27;

  v7 = *(void **)(v4 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialA);
  sub_10002C9F4(a1, (uint64_t)v26);
  v8 = v27;
  if (v27)
  {
    v9 = sub_10000F66C(v26, v27);
    v25[1] = v25;
    v10 = *(_QWORD *)(v8 - 8);
    __chkstk_darwin(v9);
    v12 = a4;
    v13 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v13);
    v14 = _bridgeAnythingToObjectiveC<A>(_:)(v13, v8);
    v15 = v13;
    a4 = v12;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v8);
    sub_10000F690(v26);
  }
  else
  {
    v14 = 0;
  }
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, *a4, v14, v16);
  swift_unknownObjectRelease(v14);

  v17 = *(void **)(v4 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialB);
  sub_10002C9F4(a1, (uint64_t)v26);
  v18 = v27;
  if (v27)
  {
    v19 = sub_10000F66C(v26, v27);
    v20 = *(_QWORD *)(v18 - 8);
    __chkstk_darwin(v19);
    v22 = (char *)v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v20 + 16))(v22);
    v23 = _bridgeAnythingToObjectiveC<A>(_:)(v22, v18);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v18);
    sub_10000F690(v26);
  }
  else
  {
    v23 = 0;
  }
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, *a4, v23, v24);
  swift_unknownObjectRelease(v23);

}

void sub_1001C5248()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t *__return_ptr, uint64_t);
  uint64_t v3;
  uint64_t v4;
  float *v5;
  float v6;
  float v7;
  float *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber__orientationState);
  v2 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v1 + 144);
  v3 = swift_retain(v1);
  v2(&v9, v3);
  swift_release(v1);
  switch(v9)
  {
    case 2:
      SIMD3<>.forward.unsafeMutableAddressor(v4);
      break;
    case 3:
      v5 = (float *)Float.piDiv2.unsafeMutableAddressor(v4);
      v6 = *v5;
      SIMD3<>.forward.unsafeMutableAddressor(v5);
      v7 = 0.5;
      goto LABEL_6;
    case 4:
      v8 = (float *)Float.piDiv2.unsafeMutableAddressor(v4);
      v6 = *v8;
      SIMD3<>.forward.unsafeMutableAddressor(v8);
      v7 = -0.5;
LABEL_6:
      __sincosf_stret(v6 * v7);
      break;
    default:
      vmulq_f32(*(float32x4_t *)SIMD3<>.forward.unsafeMutableAddressor(v4), (float32x4_t)0);
      break;
  }
}

uint64_t sub_1001C5338()
{
  uint64_t v0;
  __n128 *v1;
  float32x4_t v2;
  float32x4_t v3;
  float32x4_t v4;
  int32x4_t v5;
  int8x16_t v6;
  float32x4_t v7;
  float32x4_t v8;
  int32x4_t v9;
  int8x16_t v10;
  float32x4_t v11;
  float32x4_t v12;
  float32x4_t v13;
  int32x4_t v14;
  int8x16_t v15;
  float32x4_t v16;
  float32x4_t v17;
  uint64_t v18;
  uint64_t result;
  __n128 v20;
  float32x4_t v21;
  __n128 v22;
  float32x4_t v23;
  __n128 v24;
  float32x4_t v25;
  __n128 v26;
  float32x4_t v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  float32x4_t v32;
  uint64_t v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  uint64_t v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;

  v1 = (__n128 *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms);
  sub_1001C4208(*(__n128 *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms), *(__n128 *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms + 16), *(__n128 *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms + 32), *(__n128 *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms + 48), *(__n128 *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms + 64), *(__n128 *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms + 80), *(__n128 *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms + 96), *(__n128 *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms + 112));
  v26 = *v1;
  v24 = v1[1];
  v22 = v1[2];
  v20 = v1[3];
  v31 = v1[4];
  v30 = v1[5];
  v29 = v1[6];
  v28 = v1[7];
  sub_1001C5248();
  v32 = v2;
  type metadata accessor for MeasureCamera(0);
  v26.n128_u64[0] = simd_float4x4.position.getter(v26, v24, v22, v20);
  static ComputedCameraProperties.shared.getter(&v33);
  v3 = (float32x4_t)static MeasureCamera.viewSpacePoint(fromWorldSpace:view:)(v26.n128_f64[0], v34, v35, v36, v37);
  v4 = vmulq_f32(v32, (float32x4_t)xmmword_1003B1A10);
  v5 = (int32x4_t)vnegq_f32(v4);
  v6 = (int8x16_t)vtrn2q_s32((int32x4_t)v4, vtrn1q_s32((int32x4_t)v4, v5));
  v25 = (float32x4_t)vextq_s8((int8x16_t)v4, (int8x16_t)v5, 8uLL);
  v27 = (float32x4_t)vextq_s8(v6, v6, 8uLL);
  v7 = (float32x4_t)vrev64q_s32((int32x4_t)v4);
  v7.i32[0] = v5.i32[1];
  v7.i32[3] = v5.i32[2];
  v21 = v7;
  v8 = vmlaq_laneq_f32(vmlaq_n_f32(vmulq_lane_f32(v25, *(float32x2_t *)v3.f32, 1), v27, v3.f32[0]), v7, v3, 2);
  v9 = (int32x4_t)vnegq_f32(v8);
  v10 = (int8x16_t)vtrn2q_s32((int32x4_t)v8, vtrn1q_s32((int32x4_t)v8, v9));
  v11 = (float32x4_t)vrev64q_s32((int32x4_t)v8);
  v11.i32[0] = v9.i32[1];
  v11.i32[3] = v9.i32[2];
  v23 = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v8, v32, 3), v11, v32, 2), vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v8, (int8x16_t)v9, 8uLL), *(float32x2_t *)v32.f32, 1), (float32x4_t)vextq_s8(v10, v10, 8uLL), v32.f32[0]));
  v31.n128_u64[0] = simd_float4x4.position.getter(v31, v30, v29, v28);
  static ComputedCameraProperties.shared.getter(&v38);
  v12 = (float32x4_t)static MeasureCamera.viewSpacePoint(fromWorldSpace:view:)(v31.n128_f64[0], v39, v40, v41, v42);
  v13 = vmlaq_laneq_f32(vmlaq_n_f32(vmulq_lane_f32(v25, *(float32x2_t *)v12.f32, 1), v27, v12.f32[0]), v21, v12, 2);
  v14 = (int32x4_t)vnegq_f32(v13);
  v15 = (int8x16_t)vtrn2q_s32((int32x4_t)v13, vtrn1q_s32((int32x4_t)v13, v14));
  v16 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v13, (int8x16_t)v14, 8uLL), *(float32x2_t *)v32.f32, 1), (float32x4_t)vextq_s8(v15, v15, 8uLL), v32.f32[0]);
  v17 = (float32x4_t)vrev64q_s32((int32x4_t)v13);
  v17.i32[0] = v14.i32[1];
  v17.i32[3] = v14.i32[2];
  if (vsubq_f32(vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v13, v32, 3), v17, v32, 2), v16), v23).f32[0] <= 0.0)
    v18 = 2;
  else
    v18 = 3;
  result = sub_1001C3F68(v18);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_lastNumbersOrientation) = v18;
  return result;
}

void sub_1001C5520()
{
  uint64_t v0;
  __n128 *v1;
  float32x4_t v2;
  float32x4_t v3;
  float32x4_t v4;
  float32x4_t v5;
  float v6;
  float v7;
  float v8;
  float32x4_t v10;

  v1 = (__n128 *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms);
  *(double *)v2.i64 = simd_float4x4.position.getter(*(__n128 *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms), *(__n128 *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms + 16), *(__n128 *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms + 32), *(__n128 *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms + 48));
  v10 = v2;
  *(double *)v3.i64 = simd_float4x4.position.getter(v1[4], v1[5], v1[6], v1[7]);
  v4 = vsubq_f32(v10, v3);
  v5 = vmulq_f32(v4, v4);
  v6 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v5, 2), vaddq_f32(v5, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v5.f32, 1))).f32[0]);
  if (qword_10047AC70 != -1)
    swift_once(&qword_10047AC70, sub_10018357C);
  v7 = v6 - *(float *)&dword_1004AF798;
  if (qword_10047AC68 != -1)
    swift_once(&qword_10047AC68, sub_100183514);
  v8 = floorf(v7 / *(float *)&dword_1004AF794);
  if ((~LODWORD(v8) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v8 <= -9.2234e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v8 < 9.2234e18)
  {
    if (qword_10047ACA0 == -1)
      goto LABEL_9;
    goto LABEL_18;
  }
LABEL_17:
  __break(1u);
LABEL_18:
  swift_once(&qword_10047ACA0, sub_100183768);
LABEL_9:
  if (!qword_1004AF7B8)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    return;
  }
  if ((uint64_t)v8 == 0x8000000000000000 && qword_1004AF7B8 == -1)
    goto LABEL_20;
}

uint64_t type metadata accessor for LineDivisionsEndNumber()
{
  return objc_opt_self(_TtC7Measure22LineDivisionsEndNumber);
}

uint64_t sub_1001C5770(uint64_t a1, float a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  float v12;
  id v13;
  uint64_t v14;
  NSString v15;
  float v16;
  float v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  double v22;
  void (*v23)(char *, uint64_t);
  float v24;
  float v26;
  uint64_t v27;
  uint64_t countAndFlagsBits;
  uint64_t result;
  float v30;
  float v31;
  float v32;
  uint64_t v33;
  float v34;
  void *v35;
  id v36;
  double v37;
  id v38;
  id v39;
  float v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  double v46;
  id v47;
  id v48;
  float v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  float v53;
  id v54;
  Swift::String v55;
  Swift::String v56;
  Swift::String v57;
  uint64_t v58;
  void *object;
  uint64_t v60;
  uint64_t v61;
  id v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  Swift::String_optional v86;
  Swift::String v87;
  Swift::String v88;
  Swift::String v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  double v96;
  id v97;
  Swift::String_optional v98;
  Swift::String v99;
  Swift::String v100;
  Swift::String v101;
  uint64_t v102;
  double v103;
  id v104;
  Swift::String v105;
  Swift::String v106;
  Swift::String v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  Swift::String v111;
  uint64_t v112;
  _BYTE v113[16];
  Swift::String v114;
  Swift::String v115;
  Swift::String v116;
  Swift::String v117;
  Swift::String v118;
  Swift::String v119;

  v5 = sub_10000EDC8(&qword_1004843D8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v108 - v10;
  v12 = 0.0;
  if (a2 != 0.0)
  {
    v12 = fabsf(a2);
    if (v12 > 5000.0)
      v12 = 5000.0;
  }
  v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v14 = *(_QWORD *)(Defaults.measurementBias.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain(v14);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "floatForKey:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);
  v17 = v16;

  if (!a1)
  {
    v18 = (void *)objc_opt_self(NSUnitLength);
    v19 = objc_msgSend(v18, "meters");
    v20 = sub_100018148(0, &qword_1004843E0, NSUnitLength_ptr);
    Measurement.init(value:unit:)(v19, v20, (float)(v12 * (float)(v17 + 1.0)));
    v21 = objc_msgSend(v18, "inches");
    Measurement<>.converted(to:)();

    v22 = Measurement.value.getter(v5);
    v23 = *(void (**)(char *, uint64_t))(v6 + 8);
    v23(v9, v5);
    v24 = v22;
    v23(v11, v5);
    if (v24 <= 12.0 || v24 >= 36.0)
    {
      v26 = a2;
      v27 = 0;
LABEL_12:
      sub_100108E28(v27, 0, 0, &v111._countAndFlagsBits, v26);
      countAndFlagsBits = v111._countAndFlagsBits;
      sub_10001F9D8((uint64_t)&v112, (uint64_t)v113);
      sub_1000C22B0((uint64_t)v113);
      return countAndFlagsBits;
    }
    v30 = roundf(v24 + v24) * 0.5;
    v31 = floorf(v30);
    if ((~LODWORD(v31) & 0x7F800000) != 0)
    {
      if (v31 > -9.2234e18)
      {
        if (v31 < 9.2234e18)
        {
          v32 = floorf(v24 / 12.0);
          if ((~LODWORD(v32) & 0x7F800000) != 0)
          {
            if (v32 > -9.2234e18)
            {
              if (v32 < 9.2234e18)
              {
                v2 = (uint64_t)v32;
                v33 = 12 * (uint64_t)v32;
                if ((unsigned __int128)((uint64_t)v32 * (__int128)12) >> 64 == v33 >> 63)
                {
                  v24 = v24 - (float)v33;
                  v34 = roundf(v24);
                  if (v34 == 12.0)
                    a2 = 0.0;
                  else
                    a2 = v34;
                  if (qword_10047AAF8 == -1)
                  {
LABEL_25:
                    v35 = (void *)qword_1004AF658;
                    v36 = objc_allocWithZone((Class)NSDecimalNumber);
                    *(float *)&v37 = a2;
                    v38 = objc_msgSend(v36, "initWithFloat:", v37);
                    v39 = objc_msgSend(v35, "stringFromNumber:", v38);

                    if (v39)
                    {
                      v40 = floorf(v24);
                      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
                      v43 = v42;

                      v44 = (void *)qword_1004AF658;
                      v45 = objc_allocWithZone((Class)NSDecimalNumber);
                      *(float *)&v46 = v40;
                      v47 = objc_msgSend(v45, "initWithFloat:", v46);
                      v48 = objc_msgSend(v44, "stringFromNumber:", v47);

                      if (v48)
                      {
                        v49 = v30 - (float)(uint64_t)v31;
                        v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
                        v52 = v51;

                        v53 = roundf(v30);
                        if (v49 <= 0.00000011921 || v53 >= 36.0)
                        {
                          swift_bridgeObjectRelease(v52);
                          v62 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                          v115._object = (void *)0xE000000000000000;
                          v63._countAndFlagsBits = 0x9D80E24025;
                          v63._object = (void *)0xA500000000000000;
                          v64._countAndFlagsBits = 0;
                          v64._object = (void *)0xE000000000000000;
                          v115._countAndFlagsBits = 0;
                          v65 = NSLocalizedString(_:tableName:bundle:value:comment:)(v63, (Swift::String_optional)0, (NSBundle)v62, v64, v115);
                          object = v65._object;

                          v66 = sub_10000EDC8((uint64_t *)&unk_10048A100);
                          v67 = swift_allocObject(v66, 72, 7);
                          *(_OWORD *)(v67 + 16) = xmmword_1003B0BD0;
                          *(_QWORD *)(v67 + 56) = &type metadata for String;
                          *(_QWORD *)(v67 + 64) = sub_100018B34();
                          *(_QWORD *)(v67 + 32) = v41;
                          *(_QWORD *)(v67 + 40) = v43;
                          v68 = v65._countAndFlagsBits;
                          v69 = v65._object;
                          v70 = v67;
                        }
                        else
                        {
                          swift_bridgeObjectRelease(v43);
                          if (v40 <= 0.0)
                          {
                            swift_bridgeObjectRelease(v52);
                            v71 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                            v52 = 0xE000000000000000;
                            v116._object = (void *)0xE000000000000000;
                            v72._countAndFlagsBits = 0x9D80E2BDC24025;
                            v72._object = (void *)0xA700000000000000;
                            v73._countAndFlagsBits = 0;
                            v73._object = (void *)0xE000000000000000;
                            v116._countAndFlagsBits = 0;
                            v74 = NSLocalizedString(_:tableName:bundle:value:comment:)(v72, (Swift::String_optional)0, (NSBundle)v71, v73, v116);
                            v58 = v74._countAndFlagsBits;
                            object = v74._object;

                            v75 = sub_10000EDC8((uint64_t *)&unk_10048A100);
                            v61 = swift_allocObject(v75, 72, 7);
                            *(_OWORD *)(v61 + 16) = xmmword_1003B0BD0;
                            *(_QWORD *)(v61 + 56) = &type metadata for String;
                            *(_QWORD *)(v61 + 64) = sub_100018B34();
                            *(_QWORD *)(v61 + 32) = 0;
                          }
                          else
                          {
                            v54 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                            v114._object = (void *)0xE000000000000000;
                            v55._countAndFlagsBits = 0x9D80E2BDC24025;
                            v55._object = (void *)0xA700000000000000;
                            v56._countAndFlagsBits = 0;
                            v56._object = (void *)0xE000000000000000;
                            v114._countAndFlagsBits = 0;
                            v57 = NSLocalizedString(_:tableName:bundle:value:comment:)(v55, (Swift::String_optional)0, (NSBundle)v54, v56, v114);
                            v58 = v57._countAndFlagsBits;
                            object = v57._object;

                            v60 = sub_10000EDC8((uint64_t *)&unk_10048A100);
                            v61 = swift_allocObject(v60, 72, 7);
                            *(_OWORD *)(v61 + 16) = xmmword_1003B0BD0;
                            *(_QWORD *)(v61 + 56) = &type metadata for String;
                            *(_QWORD *)(v61 + 64) = sub_100018B34();
                            *(_QWORD *)(v61 + 32) = v50;
                          }
                          *(_QWORD *)(v61 + 40) = v52;
                          v68 = v58;
                          v69 = object;
                          v70 = v61;
                        }
                        countAndFlagsBits = String.init(format:_:)(v68, v69, v70);
                        v77 = v76;
                        swift_bridgeObjectRelease(object);
                        v78 = (void *)qword_1004AF658;
                        v79 = objc_allocWithZone((Class)NSDecimalNumber);
                        v110 = v2;
                        v80 = objc_msgSend(v79, "initWithInteger:", v2);
                        v81 = objc_msgSend(v78, "stringFromNumber:", v80);

                        if (v81)
                        {
                          v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
                          v84 = v83;

                          v109 = (id)objc_opt_self(NSBundle);
                          v85 = objc_msgSend(v109, "mainBundle");
                          v117._object = (void *)0xE000000000000000;
                          v86.value._object = (void *)0x80000001003DFD80;
                          v87._countAndFlagsBits = 0xB280E240243125;
                          v87._object = (void *)0xA700000000000000;
                          v86.value._countAndFlagsBits = 0xD000000000000014;
                          v88._countAndFlagsBits = 0;
                          v88._object = (void *)0xE000000000000000;
                          v117._countAndFlagsBits = 0;
                          v89 = NSLocalizedString(_:tableName:bundle:value:comment:)(v87, v86, (NSBundle)v85, v88, v117);

                          v90 = sub_10000EDC8((uint64_t *)&unk_10048A100);
                          v91 = swift_allocObject(v90, 72, 7);
                          *(_OWORD *)(v91 + 16) = xmmword_1003B0BD0;
                          *(_QWORD *)(v91 + 56) = &type metadata for String;
                          v92 = sub_100018B34();
                          *(_QWORD *)(v91 + 64) = v92;
                          *(_QWORD *)(v91 + 32) = v82;
                          *(_QWORD *)(v91 + 40) = v84;
                          v93 = String.init(format:_:)(v89._countAndFlagsBits, v89._object, v91);
                          v95 = v94;
                          *(_QWORD *)&v96 = swift_bridgeObjectRelease(v89._object).n128_u64[0];
                          if (a2 <= 0.0)
                          {
                            if (v110 < 1)
                            {
                              swift_bridgeObjectRelease(v95);
                              if (v49 <= 0.00000011921)
                              {
                                *(_QWORD *)&v103 = swift_bridgeObjectRelease(v77).n128_u64[0];
                                v104 = objc_msgSend(v109, "mainBundle", v103);
                                v119._object = (void *)0xE000000000000000;
                                v105._countAndFlagsBits = 0x9D80E2BDC2203CLL;
                                v105._object = (void *)0xA700000000000000;
                                v106._countAndFlagsBits = 0;
                                v106._object = (void *)0xE000000000000000;
                                v119._countAndFlagsBits = 0;
                                v107 = NSLocalizedString(_:tableName:bundle:value:comment:)(v105, (Swift::String_optional)0, (NSBundle)v104, v106, v119);

                                v111 = v107;
                                return String.init<A>(_:)(&v111, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
                              }
                              return countAndFlagsBits;
                            }
                            v96 = 3.18618444e-58;
                            if (v49 <= 0.00000011921)
                            {
                              swift_bridgeObjectRelease(v77);
                              return v93;
                            }
                          }
                          else if (v110 <= 0)
                          {
                            swift_bridgeObjectRelease(v95);
                            return countAndFlagsBits;
                          }
                          v97 = objc_msgSend(v109, "mainBundle", v96);
                          v118._object = (void *)0xE000000000000000;
                          v98.value._object = (void *)0x80000001003DFD80;
                          v99._countAndFlagsBits = 0x2432252040243125;
                          v99._object = (void *)0xE900000000000040;
                          v98.value._countAndFlagsBits = 0xD000000000000014;
                          v100._countAndFlagsBits = 0;
                          v100._object = (void *)0xE000000000000000;
                          v118._countAndFlagsBits = 0;
                          v101 = NSLocalizedString(_:tableName:bundle:value:comment:)(v99, v98, (NSBundle)v97, v100, v118);

                          v102 = swift_allocObject(v90, 112, 7);
                          *(_OWORD *)(v102 + 16) = xmmword_1003B0F60;
                          *(_QWORD *)(v102 + 56) = &type metadata for String;
                          *(_QWORD *)(v102 + 64) = v92;
                          *(_QWORD *)(v102 + 32) = v93;
                          *(_QWORD *)(v102 + 40) = v95;
                          *(_QWORD *)(v102 + 96) = &type metadata for String;
                          *(_QWORD *)(v102 + 104) = v92;
                          *(_QWORD *)(v102 + 72) = countAndFlagsBits;
                          *(_QWORD *)(v102 + 80) = v77;
                          countAndFlagsBits = String.init(format:_:)(v101._countAndFlagsBits, v101._object, v102);
                          swift_bridgeObjectRelease(v101._object);
                          return countAndFlagsBits;
                        }
                        goto LABEL_54;
                      }
                    }
                    else
                    {
                      __break(1u);
                    }
                    __break(1u);
LABEL_54:
                    __break(1u);
                    goto LABEL_55;
                  }
LABEL_51:
                  swift_once(&qword_10047AAF8, sub_100108AD8);
                  goto LABEL_25;
                }
LABEL_50:
                __break(1u);
                goto LABEL_51;
              }
LABEL_49:
              __break(1u);
              goto LABEL_50;
            }
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_46;
  }
  if (a1 == 1)
  {
    v26 = a2;
    v27 = 1;
    goto LABEL_12;
  }
LABEL_55:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Measure/LineDivisionsEndNumber.swift", 36, 2, 291, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001C6198(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1001C61BC()
{
  uint64_t v0;

  sub_1001C3970(v0);
}

uint64_t sub_1001C61C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001C61D4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001C61DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001C61EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1001C6210()
{
  return sub_1001C625C(&OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialA);
}

uint64_t sub_1001C621C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001C6240()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1001C6250()
{
  return sub_1001C625C(&OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialB);
}

id sub_1001C625C(_QWORD *a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_plane), "setFirstMaterial:", *(_QWORD *)(*(_QWORD *)(v1 + 16) + *a1));
}

void sub_1001C628C()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  id v3;
  uint64_t v4;
  int v5;
  id v6;
  id v7;
  id v8;
  int v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, __n128);
  __n128 v23;
  void *v24;
  _QWORD v25[4];

  v1 = v0;
  v0[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_isMaterialAActive] = 1;
  v2 = sub_100181ABC(9);
  v3 = objc_msgSend(v2, "copy");

  _bridgeAnyObjectToAny(_:)(v25, v3);
  swift_unknownObjectRelease(v3);
  v4 = sub_100018148(0, (unint64_t *)&qword_10048A110, SCNMaterial_ptr);
  swift_dynamicCast(&v24, v25, (char *)&type metadata for Any + 8, v4, 6);
  if (v5)
    v6 = v24;
  else
    v6 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialA] = v6;
  v7 = sub_100181ABC(9);
  v8 = objc_msgSend(v7, "copy");

  _bridgeAnyObjectToAny(_:)(v25, v8);
  swift_unknownObjectRelease(v8);
  swift_dynamicCast(&v24, v25, (char *)&type metadata for Any + 8, v4, 6);
  if (v9)
    v10 = v24;
  else
    v10 = objc_msgSend(objc_allocWithZone((Class)SCNMaterial), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialB] = v10;
  v11 = &v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString];
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  v12 = OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber__unitState;
  KeyPath = swift_getKeyPath(&unk_1003BC258);
  v14 = sub_10000EDC8(&qword_100481258);
  if (qword_10047AD88 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v15 = qword_1004AF890;
  v16 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v14 + 272);
  v17 = swift_retain();
  *(_QWORD *)&v1[v12] = v16(KeyPath, v15, v17);
  v18 = OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber__orientationState;
  v19 = swift_getKeyPath(&unk_1003BC280);
  v20 = sub_10000EDC8((uint64_t *)&unk_10047EFD0);
  v21 = qword_1004AF890;
  v22 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v20 + 272);
  v23 = swift_retain();
  *(_QWORD *)&v1[v18] = v22(v19, v21, v23);
  v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_lastNumbersOrientation] = 2;
  v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldHide] = 1;
  v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_isOcclusionInitialized] = 0;
  v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldRenderNumbers] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003D8190, "Measure/LineDivisionsEndNumber.swift", 36, 2, 176, 0);
  __break(1u);
}

id sub_1001C6558()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  NSString *v5;
  NSString *v6;
  uint64_t v7;
  uint64_t v8;
  NSString *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  uint64_t v14;
  uint64_t v15;
  Class v16;
  id v17;
  _BYTE v19[48];
  _BYTE v20[64];

  v1 = sub_10000EDC8(&qword_10048A130);
  v2 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v2 + 16) = xmmword_1003B0BD0;
  v3 = sub_10000EDC8(&qword_10048A138);
  inited = swift_initStackObject(v3, v20);
  *(_OWORD *)(inited + 16) = xmmword_1003B0F60;
  *(_QWORD *)(inited + 32) = UIFontFeatureTypeIdentifierKey;
  *(_QWORD *)(inited + 40) = 6;
  *(_QWORD *)(inited + 48) = UIFontFeatureSelectorIdentifierKey;
  *(_QWORD *)(inited + 56) = 0;
  v5 = UIFontFeatureTypeIdentifierKey;
  v6 = UIFontFeatureSelectorIdentifierKey;
  *(_QWORD *)(v2 + 32) = sub_1000C7070(inited);
  v7 = sub_10000EDC8(&qword_10048A140);
  v8 = swift_initStackObject(v7, v19);
  *(_OWORD *)(v8 + 16) = xmmword_1003B0BD0;
  *(_QWORD *)(v8 + 32) = UIFontDescriptorFeatureSettingsAttribute;
  *(_QWORD *)(v8 + 40) = v2;
  v9 = UIFontDescriptorFeatureSettingsAttribute;
  v10 = sub_1000C716C(v8);
  sub_10001FA20(v10);
  v12 = v11;
  type metadata accessor for AttributeName(0);
  sub_100198080();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;

  sub_10001FA20(v10);
  v15 = v14;
  swift_bridgeObjectRelease(v10);
  v16 = Dictionary._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(v0, "fontDescriptorByAddingAttributes:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  return v17;
}

ValueMetadata *type metadata accessor for Measurements()
{
  return &type metadata for Measurements;
}

uint64_t sub_1001C672C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_bridgeObjectRetain(a3);
}

BOOL sub_1001C6734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1001C70BC(a1, a2, a3);
  v7 = (uint64_t)sub_1001A7100(v6, (uint64_t)&off_10043BD88);
  swift_bridgeObjectRelease(v6);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v13 = v7;
    else
      v13 = v7 & 0xFFFFFFFFFFFFFF8;
    v8 = _CocoaArrayWrapper.endIndex.getter(v13);
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v7);
  if (v8)
    return 0;
  v10 = sub_1001C70BC(a1, a2, a3);
  v11 = (uint64_t)sub_1001A7100(v10, (uint64_t)&off_10043BDB0);
  swift_bridgeObjectRelease(v10);
  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0)
      v14 = v11;
    else
      v14 = v11 & 0xFFFFFFFFFFFFFF8;
    v12 = _CocoaArrayWrapper.endIndex.getter(v14);
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v11);
  return v12 != 0;
}

_QWORD *sub_1001C6834(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = a4;
  v6 = a3;
  v7 = a2;
  v9 = sub_1001C70BC(a2, a3, a4);
  v10 = v9;
  v11 = (unint64_t)v9 >> 62;
  if ((a1 & 1) != 0)
  {
    if (v11)
      goto LABEL_50;
    v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v9);
    while (1)
    {
      v4 = &swift_isaMask;
      if (!v12)
        goto LABEL_26;
      if ((v10 & 0xC000000000000001) != 0)
        v13 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
      else
        v13 = *(id *)(v10 + 32);
      v14 = v13;
      if ((*(uint64_t (**)(void))((swift_isaMask & *v13) + 0xD0))() == 3)
      {
LABEL_8:
        swift_bridgeObjectRelease_n(v10, 2);
        return v14;
      }

      if (v12 == 1)
      {
LABEL_26:
        swift_bridgeObjectRelease_n(v10, 2);
        v10 = sub_1001C70BC(v7, v6, v5);
        if ((unint64_t)v10 >> 62)
        {
LABEL_63:
          if (v10 < 0)
            v28 = v10;
          else
            v28 = v10 & 0xFFFFFFFFFFFFFF8;
          v5 = _CocoaArrayWrapper.endIndex.getter(v28);
          if (!v5)
            goto LABEL_67;
        }
        else
        {
          v5 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v5)
            goto LABEL_67;
        }
        v6 = v10 & 0xC000000000000001;
        v7 = v10 & 0xFFFFFFFFFFFFFF8;
        while (1)
        {
          v16 = __OFSUB__(v5--, 1);
          if (v16)
            break;
          if (v6)
          {
            v22 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v10);
          }
          else
          {
            if ((v5 & 0x8000000000000000) != 0)
              goto LABEL_48;
            if (v5 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_49;
            v22 = *(id *)(v10 + 32 + 8 * v5);
          }
          v14 = v22;
          v23 = type metadata accessor for WorldLine(0);
          if (swift_dynamicCastClass(v14, v23))
          {
            v24 = (*(uint64_t (**)(void))((*v4 & *v14) + 0xD0))();
            if (!v24 || v24 == 2 || v24 == 9 || v24 == 7)
              goto LABEL_17;
          }
          else
          {
            v25 = type metadata accessor for WorldRectangle(0);
            if (swift_dynamicCastClass(v14, v25))
            {
              v26 = (*(uint64_t (**)(void))((*v4 & *v14) + 0xD0))();
              if (v26 == 9 || v26 == 5)
                goto LABEL_17;
            }
          }

          if (!v5)
            goto LABEL_67;
        }
        __break(1u);
      }
      else
      {
        v19 = 5;
        while (1)
        {
          v20 = (v10 & 0xC000000000000001) != 0
              ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v19 - 4, v10)
              : *(id *)(v10 + 8 * v19);
          v14 = v20;
          v21 = v19 - 3;
          if (__OFADD__(v19 - 4, 1))
            break;
          if ((*(uint64_t (**)(void))((swift_isaMask & *v20) + 0xD0))() == 3)
            goto LABEL_8;

          ++v19;
          if (v21 == v12)
            goto LABEL_26;
        }
      }
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      if (v10 < 0)
        v27 = v10;
      else
        v27 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v12 = _CocoaArrayWrapper.endIndex.getter(v27);
    }
  }
  if (!v11)
  {
    v15 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
      goto LABEL_11;
LABEL_67:
    swift_bridgeObjectRelease(v10);
    return 0;
  }
  if (v9 >= 0)
    v9 &= 0xFFFFFFFFFFFFFF8uLL;
  v15 = _CocoaArrayWrapper.endIndex.getter(v9);
  if (!v15)
    goto LABEL_67;
LABEL_11:
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else if ((v10 & 0xC000000000000001) == 0)
  {
    if ((v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v17 < *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v18 = *(id *)(v10 + 8 * v17 + 32);
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_63;
  }
  v18 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v10);
LABEL_16:
  v14 = v18;
LABEL_17:
  swift_bridgeObjectRelease(v10);
  return v14;
}

void sub_1001C6B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t j;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t k;
  _QWORD *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v45 = a1;
  swift_bridgeObjectRetain_n(a1, 2);
  v6 = sub_10000EDC8(&qword_10047C018);
  v7 = sub_10000EDC8(&qword_10047C020);
  swift_dynamicCast(&v46, &v45, v6, v7, 7);
  v8 = v46;
  swift_bridgeObjectRelease(a1);
  v46 = (uint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(v8);
    v16 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_36;
    goto LABEL_19;
  }
  if (v8 < 0)
    v17 = v8;
  else
    v17 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v9 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v8);
  if (!v9)
    goto LABEL_18;
LABEL_3:
  if (v9 < 1)
  {
    __break(1u);
    goto LABEL_38;
  }
  for (i = 0; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0)
      v13 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
    else
      v13 = *(id *)(v8 + 8 * i + 32);
    v14 = v13;
    v15 = (*(uint64_t (**)(void))((swift_isaMask & *v13) + 0xD0))();
    if (v15 == 1)
    {

    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v11 = *(_QWORD *)(v46 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
      v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v14);
      specialized ContiguousArray._endMutation()(v12);
    }
  }
  swift_bridgeObjectRelease(v8);
  v16 = v46;
  if (v46 < 0)
    goto LABEL_36;
LABEL_19:
  if ((v16 & 0x4000000000000000) == 0)
  {
    v18 = *(_QWORD *)(v16 + 16);
    goto LABEL_21;
  }
LABEL_36:
  v29 = swift_bridgeObjectRetain(v16);
  v18 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_release();
LABEL_21:
  swift_release();
  if (!v18)
  {
    v45 = a2;
    swift_bridgeObjectRetain_n(a2, 2);
    v20 = sub_10000EDC8(&qword_10047D030);
    swift_dynamicCast(&v46, &v45, v6, v20, 7);
    v8 = v46;
    swift_bridgeObjectRelease(a2);
    v46 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)v8 >> 62))
    {
      v21 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v21)
        goto LABEL_25;
      goto LABEL_42;
    }
LABEL_38:
    if (v8 < 0)
      v30 = v8;
    else
      v30 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v21 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v8);
    if (v21)
    {
LABEL_25:
      if (v21 < 1)
        goto LABEL_72;
      for (j = 0; j != v21; ++j)
      {
        if ((v8 & 0xC000000000000001) != 0)
          v25 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v8);
        else
          v25 = *(id *)(v8 + 8 * j + 32);
        v26 = v25;
        v27 = (*(uint64_t (**)(void))((swift_isaMask & *v25) + 0xD0))();
        if (v27 == 1)
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v27);
          v23 = *(_QWORD *)(v46 + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v23);
          v24 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v26);
          specialized ContiguousArray._endMutation()(v24);
        }
      }
      swift_bridgeObjectRelease(v8);
      v28 = v46;
      if (v46 < 0)
        goto LABEL_70;
LABEL_43:
      if ((v28 & 0x4000000000000000) == 0)
      {
        v31 = *(_QWORD *)(v28 + 16);
LABEL_45:
        swift_release();
        v19 = v31 == 0;
        goto LABEL_46;
      }
LABEL_70:
      v44 = swift_bridgeObjectRetain(v28);
      v31 = _CocoaArrayWrapper.endIndex.getter(v44);
      swift_release();
      goto LABEL_45;
    }
LABEL_42:
    swift_bridgeObjectRelease(v8);
    v28 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_70;
    goto LABEL_43;
  }
  v19 = 0;
LABEL_46:
  if (((objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable") ^ 1) & 1) == 0 && v19)
  {
    v45 = a3;
    swift_bridgeObjectRetain_n(a3, 2);
    v32 = sub_10000EDC8(&qword_10047E450);
    swift_dynamicCast(&v46, &v45, v6, v32, 7);
    v33 = v46;
    swift_bridgeObjectRelease(a3);
    v46 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v33 >> 62)
    {
      if (v33 < 0)
        v42 = v33;
      else
        v42 = v33 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v33);
      v34 = _CocoaArrayWrapper.endIndex.getter(v42);
      swift_bridgeObjectRelease(v33);
      if (v34)
        goto LABEL_50;
    }
    else
    {
      v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v34)
      {
LABEL_50:
        if (v34 >= 1)
        {
          for (k = 0; k != v34; ++k)
          {
            if ((v33 & 0xC000000000000001) != 0)
              v36 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(k, v33);
            else
              v36 = *(id *)(v33 + 8 * k + 32);
            v37 = v36;
            v38 = (*(uint64_t (**)(void))((swift_isaMask & *v36) + 0xD0))();
            if (v38)
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v38);
              v39 = *(_QWORD *)(v46 + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v39);
              v40 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v37);
              specialized ContiguousArray._endMutation()(v40);
            }
            else
            {

            }
          }
          swift_bridgeObjectRelease(v33);
          v41 = v46;
          if (v46 < 0)
            goto LABEL_69;
LABEL_66:
          if ((v41 & 0x4000000000000000) == 0)
          {
LABEL_67:
            swift_release();
            return;
          }
LABEL_69:
          v43 = swift_bridgeObjectRetain(v41);
          _CocoaArrayWrapper.endIndex.getter(v43);
          swift_release();
          goto LABEL_67;
        }
        __break(1u);
LABEL_72:
        __break(1u);
        return;
      }
    }
    swift_bridgeObjectRelease(v33);
    v41 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_69;
    goto LABEL_66;
  }
}

uint64_t sub_1001C70BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a1;
  swift_bridgeObjectRetain_n(a1, 2);
  v6 = sub_10000EDC8(&qword_10047C018);
  v7 = sub_10000EDC8(&qword_10047C020);
  swift_dynamicCast(&v28, &v27, v6, v7, 7);
  v8 = v28;
  swift_bridgeObjectRelease(a1);
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v21 = v8;
    else
      v21 = v8 & 0xFFFFFFFFFFFFFF8;
    v22 = type metadata accessor for MeasureObject(0);
    swift_bridgeObjectRetain(v8);
    v10 = _bridgeCocoaArray<A>(_:)(v21, v22);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = swift_bridgeObjectRetain(v8);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v9);
    type metadata accessor for MeasureObject(0);
    v10 = v8;
  }
  swift_bridgeObjectRelease(v8);
  v27 = a2;
  swift_bridgeObjectRetain_n(a2, 2);
  v11 = sub_10000EDC8(&qword_10047D030);
  swift_dynamicCast(&v28, &v27, v6, v11, 7);
  v12 = v28;
  swift_bridgeObjectRelease(a2);
  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v23 = v12;
    else
      v23 = v12 & 0xFFFFFFFFFFFFFF8;
    v24 = type metadata accessor for MeasureObject(0);
    swift_bridgeObjectRetain(v12);
    v14 = _bridgeCocoaArray<A>(_:)(v23, v24);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v13 = swift_bridgeObjectRetain(v12);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v13);
    type metadata accessor for MeasureObject(0);
    v14 = v12;
  }
  swift_bridgeObjectRelease(v12);
  v28 = v10;
  sub_1001001A4(v14);
  v15 = v28;
  if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
  {
    v27 = a3;
    swift_bridgeObjectRetain_n(a3, 2);
    v16 = sub_10000EDC8(&qword_10047E450);
    swift_dynamicCast(&v28, &v27, v6, v16, 7);
    v17 = v28;
    swift_bridgeObjectRelease(a3);
    if ((unint64_t)v17 >> 62)
    {
      if (v17 < 0)
        v25 = v17;
      else
        v25 = v17 & 0xFFFFFFFFFFFFFF8;
      v26 = type metadata accessor for MeasureObject(0);
      swift_bridgeObjectRetain(v17);
      v19 = _bridgeCocoaArray<A>(_:)(v25, v26);
      swift_bridgeObjectRelease(v17);
    }
    else
    {
      v18 = swift_bridgeObjectRetain(v17);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v18);
      type metadata accessor for MeasureObject(0);
      v19 = v17;
    }
    swift_bridgeObjectRelease(v17);
    v28 = v15;
    sub_1001001A4(v19);
    return v28;
  }
  return v15;
}

uint64_t sub_1001C7344(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRetain(a2);
}

id sub_1001C734C()
{
  id result;
  id v1;

  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  result = (id)*((_QWORD *)&xmmword_1004AF258 + 1);
  if (*((_QWORD *)&xmmword_1004AF258 + 1))
  {
    v1 = (id)*((_QWORD *)&xmmword_1004AF258 + 1);
    qword_1004AFD00 = Contexts.PrivateQueue.init(_:)(*((_QWORD *)&xmmword_1004AF258 + 1));
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001C73B0(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  id v28;
  void *v29;
  char v30;
  unint64_t v31;
  int isUniquelyReferenced_nonNull_bridgeObject;
  id v33;
  char v34;
  id v35;
  void *v36;
  char v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t ObjectType;
  Swift::String v45;
  void *object;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  void (*v53)(unint64_t *, _QWORD);
  uint64_t KeyPath;
  unint64_t v55;
  unint64_t v56;

  v2 = v1;
  v3 = a1;
  if (a1 >> 62)
  {
LABEL_62:
    if (v3 < 0)
      v43 = v3;
    else
      v43 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v43);
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v3);
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v4)
    return swift_bridgeObjectRelease(v3);
LABEL_3:
  v5 = 0;
  v50 = v2;
  v51 = v3 & 0xC000000000000001;
  v47 = v3 + 32;
  v48 = v3;
  v49 = v4;
  while (1)
  {
    if (v51)
      v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v48);
    else
      v13 = *(id *)(v47 + 8 * v5);
    v14 = v13;
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    v16 = *(void **)v2;
    v3 = *(_QWORD *)(v2 + 8);
    v17 = *(_QWORD *)(v2 + 16);
    v18 = type metadata accessor for WorldLine(0);
    v19 = swift_dynamicCastClass(v14, v18);
    v20 = &unk_1003BC398;
    if (!v19)
    {
      v21 = type metadata accessor for WorldRectangle(0);
      v22 = swift_dynamicCastClass(v14, v21);
      v20 = &unk_1003BC370;
      if (!v22)
      {
        v23 = type metadata accessor for WorldPerson(0);
        v24 = swift_dynamicCastClass(v14, v23);
        v20 = &unk_1003BC348;
        if (!v24)
          goto LABEL_68;
      }
    }
    KeyPath = swift_getKeyPath(v20);
    v53 = (void (*)(unint64_t *, _QWORD))swift_modifyAtWritableKeyPath(&v55, v2);
    v26 = v25;
    v27 = *v25;
    if ((unint64_t)*v25 >> 62)
    {
      if (v27 < 0)
        v41 = *v25;
      else
        v41 = v27 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v25);
      v17 = _CocoaArrayWrapper.endIndex.getter(v41);
      swift_bridgeObjectRelease(v27);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v17 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v17)
        goto LABEL_7;
    }
    v52 = v27 & 0xC000000000000001;
    if ((v27 & 0xC000000000000001) != 0)
    {
      v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v27);
    }
    else
    {
      if (!*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_56;
      v28 = *(id *)(v27 + 32);
    }
    v29 = v28;
    v3 = type metadata accessor for MeasureObject(0);
    v30 = static NSObject.== infix(_:_:)(v29, v14);

    v31 = 0;
    if ((v30 & 1) == 0)
      break;
LABEL_21:
    v6 = *v26;
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v26);
    *v26 = v6;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v6 < 0 || (v6 & 0x4000000000000000) != 0)
    {
      v6 = sub_10002874C(v6);
      *v26 = v6;
    }
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v31 >= v8)
      goto LABEL_57;
    v9 = v8 - 1;
    v10 = v7 + 8 * v31;
    v11 = *(void **)(v10 + 32);
    v12 = memmove((void *)(v10 + 32), (const void *)(v10 + 40), 8 * (v8 - 1 - v31));
    *(_QWORD *)((*v26 & 0xFFFFFFFFFFFFF8) + 0x10) = v9;
    v3 = (uint64_t)v26;
    specialized Array._endMutation()(v12);

LABEL_7:
    v53(&v55, 0);

    swift_release(KeyPath);
    v2 = v50;
    if (v5 == v49)
      return swift_bridgeObjectRelease(v48);
  }
  if (v17 == 1)
    goto LABEL_7;
  if (v52)
  {
    v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v27);
  }
  else
  {
    if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
      goto LABEL_61;
    v33 = *(id *)(v27 + 40);
  }
  v16 = v33;
  v34 = static NSObject.== infix(_:_:)(v33, v14);

  if ((v34 & 1) != 0)
  {
    v31 = 1;
    goto LABEL_21;
  }
  if (v17 == 2)
    goto LABEL_7;
  if (v52)
  {
    v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2, v27);
LABEL_37:
    v36 = v35;
    v37 = static NSObject.== infix(_:_:)(v35, v14);

    if ((v37 & 1) == 0)
    {
      v38 = 2;
      while (1)
      {
        v31 = v38 + 1;
        if (__OFADD__(v38, 1))
          goto LABEL_58;
        if (v31 == v17)
          goto LABEL_7;
        if (v52)
        {
          v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v38 + 1, v27);
        }
        else
        {
          if ((v31 & 0x8000000000000000) != 0)
            goto LABEL_59;
          if (v31 >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_60;
          v39 = *(id *)(v27 + 32 + 8 * v31);
        }
        v40 = v39;
        v2 = static NSObject.== infix(_:_:)(v39, v14);

        ++v38;
        if ((v2 & 1) != 0)
          goto LABEL_21;
      }
    }
    v31 = 2;
    goto LABEL_21;
  }
  if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
  {
    v35 = *(id *)(v27 + 48);
    goto LABEL_37;
  }
  __break(1u);
LABEL_68:
  v55 = 0;
  v56 = 0xE000000000000000;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v17);
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease(v56);
  v55 = 0xD00000000000001CLL;
  v56 = 0x80000001003DB0D0;
  ObjectType = swift_getObjectType(v14);
  v45._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  object = v45._object;
  String.append(_:)(v45);
  swift_bridgeObjectRelease(object);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v55, v56, "Measure/Measurements.swift", 26, 2, 129, 0);
  __break(1u);
  return result;
}

id sub_1001C7878@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_10047B188 != -1)
    swift_once(&qword_10047B188, sub_1001C734C);
  v2 = (void *)qword_1004AFD00;
  *a1 = qword_1004AFD00;
  return v2;
}

uint64_t sub_1001C78C8(uint64_t *a1, uint64_t *a2)
{
  return sub_1001C7980(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

unint64_t sub_1001C78E4(uint64_t a1)
{
  unint64_t result;

  result = sub_1001C7908();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001C7908()
{
  unint64_t result;

  result = qword_10048A170[0];
  if (!qword_10048A170[0])
  {
    result = swift_getWitnessTable(&unk_1003BC2C4, &type metadata for Measurements);
    atomic_store(result, qword_10048A170);
  }
  return result;
}

uint64_t sub_1001C794C()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_1001C7974()
{
  return sub_1001C794C();
}

uint64_t sub_1001C7980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v12;
  char v13;
  char v14;

  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a4);
  v12 = sub_100074910(a1, a4);
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(a4);
  if ((v12 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a5);
  v13 = sub_100074910(a2, a5);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a5);
  if ((v13 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a6);
  v14 = sub_100074910(a3, a6);
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a6);
  return v14 & 1;
}

uint64_t sub_1001C7A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;

  v7 = _swiftEmptyArrayStorage;
  v0 = sub_10000EDC8(&qword_10047C020);
  v1 = sub_10000EDC8(&qword_10047C018);
  swift_dynamicCast(&v6, &v7, v0, v1, 7);
  v2 = v6;
  v7 = _swiftEmptyArrayStorage;
  v3 = sub_10000EDC8(&qword_10047D030);
  swift_dynamicCast(&v6, &v7, v3, v1, 7);
  v7 = _swiftEmptyArrayStorage;
  v4 = sub_10000EDC8(&qword_10047E450);
  swift_dynamicCast(&v6, &v7, v4, v1, 7);
  return v2;
}

uint64_t sub_1001C7B38(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  Swift::String v7;
  void *object;

  v2 = type metadata accessor for WorldLine(0);
  if (swift_dynamicCastClass(a1, v2))
    return swift_getKeyPath(&unk_1003BC398);
  v4 = type metadata accessor for WorldRectangle(0);
  if (swift_dynamicCastClass(a1, v4))
    return swift_getKeyPath(&unk_1003BC370);
  v5 = type metadata accessor for WorldPerson(0);
  if (swift_dynamicCastClass(a1, v5))
    return swift_getKeyPath(&unk_1003BC348);
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease(0xE000000000000000);
  ObjectType = swift_getObjectType(a1);
  v7._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001CLL, 0x80000001003DB0D0, "Measure/Measurements.swift", 26, 2, 129, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001C7C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_1001C7C70(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_1001C7CDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain(v8);
  }
  return v3;
}

uint64_t sub_1001C7D4C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1001C7D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_1001C7D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1001C7DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1001C7DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1001C7E1C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1001C7ECC + 4 * byte_1003BC2A8[(v7 - 1)]))();
}

void sub_1001C7F1C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = &dword_100000004;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for Lifted(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100026F70(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Lifted);
}

uint64_t UIInterfaceOrientation.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x70616373646E616CLL;
  switch(a1)
  {
    case 0:
      result = 0x6E776F6E6B6E75;
      break;
    case 1:
      result = 0x7469617274726F70;
      break;
    case 2:
      result = 0xD000000000000012;
      break;
    case 3:
    case 4:
      return result;
    default:
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Measure/UIInterfaceOrientation.swift", 36, 2, 25, 0);
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1001C81C4()
{
  uint64_t *v0;

  return UIInterfaceOrientation.description.getter(*v0);
}

id sub_1001C81CC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIKitContext()), "init");
  qword_1004AFD08 = (uint64_t)result;
  return result;
}

void sub_1001C81F8()
{
  char *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = 0;
  v1 = *(NSObject **)&v0[OBJC_IVAR____TtC7Measure12UIKitContext_contextQueue];
  v2 = swift_allocObject(&unk_10044C2A0, 32, 7);
  *(_QWORD *)(v2 + 16) = &v8;
  *(_QWORD *)(v2 + 24) = v0;
  v3 = swift_allocObject(&unk_10044C2C8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1001C9114;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_100082450;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DDB80;
  aBlock[3] = &unk_10044C2E0;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 95, 42, 31, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else if (v8)
  {
    swift_release();
    return;
  }
  __break(1u);
}

double sub_1001C8338(uint64_t a1)
{
  return sub_1001C84B0(a1, (uint64_t)&unk_10044C188, (uint64_t)sub_1001C9040, (uint64_t)&unk_10044C1A0);
}

void sub_1001C8354()
{
  char *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = 0;
  v1 = *(NSObject **)&v0[OBJC_IVAR____TtC7Measure12UIKitContext_contextQueue];
  v2 = swift_allocObject(&unk_10044C228, 32, 7);
  *(_QWORD *)(v2 + 16) = &v8;
  *(_QWORD *)(v2 + 24) = v0;
  v3 = swift_allocObject(&unk_10044C250, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1001C90D4;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_100030C24;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DDB80;
  aBlock[3] = &unk_10044C268;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 95, 55, 31, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else if (v8)
  {
    swift_release();
    return;
  }
  __break(1u);
}

double sub_1001C8494(uint64_t a1)
{
  return sub_1001C84B0(a1, (uint64_t)&unk_10044C1D8, (uint64_t)sub_1001C9094, (uint64_t)&unk_10044C1F0);
}

double sub_1001C84B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  __n128 v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v21 = a3;
  v22 = a4;
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchWorkItemFlags.barrier.getter(v13);
  v16 = swift_allocObject(a2, 32, 7);
  *(_QWORD *)(v16 + 16) = v4;
  *(_QWORD *)(v16 + 24) = a1;
  aBlock[4] = v21;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003ECA0;
  aBlock[3] = v22;
  v17 = _Block_copy(aBlock);
  v18 = v4;
  static DispatchQoS.unspecified.getter(v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v15, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

id sub_1001C8624()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  objc_class *ObjectType;
  objc_super v24;
  uint64_t v25;
  unint64_t v26;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v1 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v0[OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_OWORD *)v11 + 2) = 0u;
  *((_OWORD *)v11 + 3) = 0u;
  *((_OWORD *)v11 + 4) = 0u;
  v11[80] = 1;
  v22 = OBJC_IVAR____TtC7Measure12UIKitContext_contextQueue;
  sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  v25 = 0;
  v26 = 0xE000000000000000;
  v12 = v0;
  _StringGuts.grow(_:)(19);
  v13 = v26;
  if (qword_10047A970 != -1)
    swift_once(&qword_10047A970, sub_10009581C);
  v14 = qword_1004AF2C8;
  v15 = unk_1004AF2D0;
  swift_bridgeObjectRetain(unk_1004AF2D0);
  swift_bridgeObjectRelease(v13);
  v25 = v14;
  v26 = v15;
  v16._object = (void *)0x80000001003E5FB0;
  v16._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v16);
  v17 = v25;
  v18 = v26;
  v19 = static DispatchQoS.userInitiated.getter();
  static OS_dispatch_queue.Attributes.concurrent.getter(v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v1);
  v20 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v17, v18, v10, v7, v4, 0);
  *(_QWORD *)&v12[v22] = v20;
  *(_QWORD *)&v12[OBJC_IVAR____TtC7Measure12UIKitContext__observationMap] = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v12[OBJC_IVAR____TtC7Measure12UIKitContext__valueMap] = _swiftEmptyDictionarySingleton;

  v24.receiver = v12;
  v24.super_class = ObjectType;
  return objc_msgSendSuper2(&v24, "init");
}

Swift::Int sub_1001C88E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD v5[9];

  v1 = *(void **)(v0 + 8);
  Hasher.init(_seed:)(v5);
  v2 = type metadata accessor for AnyKeyPath(0);
  dispatch thunk of Hashable.hash(into:)(v5, v2, &protocol witness table for AnyKeyPath);
  v3 = v1;
  NSObject.hash(into:)(v5);

  return Hasher._finalize()();
}

void sub_1001C8958(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)(v1 + 8);
  v4 = type metadata accessor for AnyKeyPath(0);
  dispatch thunk of Hashable.hash(into:)(a1, v4, &protocol witness table for AnyKeyPath);
  v5 = v3;
  NSObject.hash(into:)(a1);

}

Swift::Int sub_1001C89C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD v5[9];

  v1 = *(void **)(v0 + 8);
  Hasher.init(_seed:)(v5);
  v2 = type metadata accessor for AnyKeyPath(0);
  dispatch thunk of Hashable.hash(into:)(v5, v2, &protocol witness table for AnyKeyPath);
  v3 = v1;
  NSObject.hash(into:)(v5);

  return Hasher._finalize()();
}

uint64_t sub_1001C8A34(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v2 = a1[1];
  v5 = *a2;
  v4 = a2[1];
  type metadata accessor for AnyKeyPath(0);
  if ((static AnyKeyPath.== infix(_:_:)(v3, v5) & 1) == 0)
    return 0;
  sub_100018148(0, (unint64_t *)&qword_10047C128, NSObject_ptr);
  return static NSObject.== infix(_:_:)(v2, v4) & 1;
}

uint64_t sub_1001C8AB0(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  __n128 v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_10044C318, 32, 7);
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_1001C9190;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003ECA0;
  aBlock[3] = &unk_10044C330;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  v15 = a1;
  v16 = swift_release();
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_100030E1C();
  v18 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v19 = sub_100030E64();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v3, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id sub_1001C8C98(uint64_t a1, id a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  objc_msgSend(a2, "center");
  v5 = v4;
  v7 = v6;
  objc_msgSend(a2, "frame");
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  result = objc_msgSend(a2, "bounds");
  v17 = a1 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits;
  *(_QWORD *)v17 = v5;
  *(_QWORD *)(v17 + 8) = v7;
  *(_QWORD *)(v17 + 16) = v9;
  *(_QWORD *)(v17 + 24) = v11;
  *(_QWORD *)(v17 + 32) = v13;
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v18;
  *(_QWORD *)(v17 + 56) = v19;
  *(_QWORD *)(v17 + 64) = v20;
  *(_QWORD *)(v17 + 72) = v21;
  *(_BYTE *)(v17 + 80) = 0;
  return result;
}

uint64_t KeyPath.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v0 = dispatch thunk of AnyKeyPath._kvcKeyPathString.getter();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    v16 = dispatch thunk of static AnyKeyPath._rootAndValueType.getter(v0);
    v4 = sub_10000EDC8((uint64_t *)&unk_10048A640);
    v16 = String.init<A>(describing:)(&v16, v4);
    v17 = v5;
    v6._countAndFlagsBits = 15917;
    v6._object = (void *)0xE200000000000000;
    String.append(_:)(v6);
    v7 = v2;
    v8 = v3;
  }
  else
  {
    v16 = dispatch thunk of static AnyKeyPath._rootAndValueType.getter(v0);
    v9 = sub_10000EDC8((uint64_t *)&unk_10048A640);
    v16 = String.init<A>(describing:)(&v16, v9);
    v17 = v10;
    v11._countAndFlagsBits = 15917;
    v11._object = (void *)0xE200000000000000;
    String.append(_:)(v11);
    dispatch thunk of static AnyKeyPath._rootAndValueType.getter(v12);
    v15 = v13;
    v7 = String.init<A>(describing:)(&v15, v9);
    v3 = v8;
  }
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease(v3);
  return v16;
}

uint64_t sub_1001C8E2C()
{
  return KeyPath.description.getter();
}

uint64_t type metadata accessor for UIKitContext()
{
  return objc_opt_self(_TtC7Measure12UIKitContext);
}

uint64_t *initializeBufferWithCopyOfBuffer for UIKitContext.InstanceKeyPath(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = (uint64_t)v4;
  swift_retain(v3);
  v5 = v4;
  return a1;
}

void destroy for UIKitContext.InstanceKeyPath(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);

}

uint64_t *assignWithCopy for UIKitContext.InstanceKeyPath(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = (uint64_t)v6;
  v8 = v6;

  return a1;
}

_QWORD *assignWithTake for UIKitContext.InstanceKeyPath(_QWORD *a1, _OWORD *a2)
{
  void *v4;

  swift_release(*a1);
  v4 = (void *)a1[1];
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for UIKitContext.InstanceKeyPath()
{
  return &type metadata for UIKitContext.InstanceKeyPath;
}

__n128 initializeWithCopy for UIKitContext.SceneViewTraits(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for UIKitContext.SceneViewTraits(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UIKitContext.SceneViewTraits(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 80) = v3;
  return result;
}

ValueMetadata *type metadata accessor for UIKitContext.SceneViewTraits()
{
  return &type metadata for UIKitContext.SceneViewTraits;
}

unint64_t sub_1001C8FF8()
{
  unint64_t result;

  result = qword_10048A240;
  if (!qword_10048A240)
  {
    result = swift_getWitnessTable(&unk_1003BC470, &type metadata for UIKitContext.InstanceKeyPath);
    atomic_store(result, (unint64_t *)&qword_10048A240);
  }
  return result;
}

uint64_t sub_1001C9040()
{
  return sub_1001C90A0(&OBJC_IVAR____TtC7Measure12UIKitContext__observationMap);
}

uint64_t sub_1001C904C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001C905C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001C9068()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001C9094()
{
  return sub_1001C90A0(&OBJC_IVAR____TtC7Measure12UIKitContext__valueMap);
}

uint64_t sub_1001C90A0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v3 + *a1);
  *(_QWORD *)(v3 + *a1) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_1001C90D4()
{
  return sub_1001C9120(&OBJC_IVAR____TtC7Measure12UIKitContext__valueMap);
}

uint64_t sub_1001C90E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001C90F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001C9114()
{
  return sub_1001C9120(&OBJC_IVAR____TtC7Measure12UIKitContext__observationMap);
}

uint64_t sub_1001C9120(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(uint64_t **)(v1 + 16);
  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + *a1);
  v4 = *v2;
  *v2 = v3;
  swift_bridgeObjectRetain(v3);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_1001C9154()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001C9164()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1001C9190()
{
  uint64_t v0;

  return sub_1001C8C98(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24));
}

void sub_1001C92AC(char a1, double a2, double a3, double a4, double a5)
{
  _BYTE *v5;
  objc_class *ObjectType;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  void *v17;
  char *v18;
  id v19;
  NSString v20;
  id v21;
  id v22;
  void *v23;
  double v24;
  double v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  char *v34;
  id v35;
  char *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  objc_class *v48;
  NSString *v49;
  id v50;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  uint64_t v55;
  void *v56;
  void *v57;
  void *v58;
  objc_super v59;
  objc_super v60;

  ObjectType = (objc_class *)swift_getObjectType(v5);
  v12 = &v5[OBJC_IVAR____TtC7Measure10UndoButton_delegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12, 0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Measure10UndoButton_undoButton] = 0;
  v5[OBJC_IVAR____TtC7Measure10UndoButton_isEnabled] = 0;
  v5[OBJC_IVAR____TtC7Measure10UndoButton_controlType] = 0;
  v60.receiver = v5;
  v60.super_class = ObjectType;
  v13 = (char *)objc_msgSendSuper2(&v60, "initWithFrame:", a2, a3, a4, a5);
  v14 = v13;
  v13[OBJC_IVAR____TtC7Measure10UndoButton_controlType] = a1;
  if (a1 == 1)
  {
    v33 = objc_allocWithZone((Class)UIPointerInteraction);
    v34 = v14;
    v35 = objc_msgSend(v33, "initWithDelegate:", v34);
    objc_msgSend(v34, "addInteraction:", v35);

LABEL_13:
    v37 = sub_1001C9DDC();
    if ((v37 & 1) != 0)
      v38 = 0xD000000000000011;
    else
      v38 = 0xD000000000000010;
    if ((v37 & 1) != 0)
      v39 = 0x80000001003E6090;
    else
      v39 = 0x80000001003E6070;
    objc_msgSend(v14, "bounds");
    v41 = v40;
    v43 = v42;
    v45 = v44;
    v47 = v46;
    CGSize.init(_:_:)(36.0, 32.0);
    v48 = (objc_class *)type metadata accessor for BlurredButton();
    v59.receiver = objc_allocWithZone(v48);
    v59.super_class = v48;
    v49 = UIFontTextStyleSubheadline;
    v50 = objc_msgSendSuper2(&v59, "initWithFrame:", v41, v43, v45, v47);
    objc_msgSend(v50, "bounds", v59.receiver, v59.super_class);
    sub_100039B08((uint64_t)v50, v51, v52, v53, v54, v38, v39, (uint64_t)v49, 0);
    swift_bridgeObjectRelease(v39);

    v55 = OBJC_IVAR____TtC7Measure10UndoButton_undoButton;
    v56 = *(void **)&v14[OBJC_IVAR____TtC7Measure10UndoButton_undoButton];
    *(_QWORD *)&v14[OBJC_IVAR____TtC7Measure10UndoButton_undoButton] = v50;

    if (*(_QWORD *)&v14[v55])
    {
      objc_msgSend(v14, "addSubview:");
      v57 = *(void **)&v14[v55];
      if (v57)
        objc_msgSend(v57, "addTarget:action:forControlEvents:", v14, "undoFrom:", 64);
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_26;
  }
  if (a1)
  {
    v36 = v13;
    goto LABEL_13;
  }
  v15 = type metadata accessor for ViewController(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v17 = (void *)objc_opt_self(NSBundle);
  v18 = v14;
  v19 = objc_msgSend(v17, "bundleForClass:", ObjCClassFromMetadata);
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:compatibleWithTraitCollection:", v20, v19, 0);

  if (!v21)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v22 = objc_msgSend(v21, "CGImage");
  if (!v22)
  {
LABEL_28:
    __break(1u);
    return;
  }
  v23 = v22;
  objc_msgSend(v21, "scale");
  v25 = v24;
  if ((sub_1001C9DDC() & 1) != 0)
    v26 = 4;
  else
    v26 = 0;
  v27 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v23, v26, v25);

  v28 = objc_msgSend(v27, "imageWithRenderingMode:", 2);
  v29 = objc_msgSend(objc_allocWithZone((Class)ASVRoundedButton), "initWithImage:buttonStyle:textStyle:controlStyle:", v28, 0, 0, 1);
  v30 = OBJC_IVAR____TtC7Measure10UndoButton_undoButton;
  v31 = *(void **)&v18[OBJC_IVAR____TtC7Measure10UndoButton_undoButton];
  *(_QWORD *)&v18[OBJC_IVAR____TtC7Measure10UndoButton_undoButton] = v29;

  v32 = *(void **)&v18[v30];
  if (!v32 || (objc_msgSend(v32, "addTarget:action:forControlEvents:", v18, "undoFrom:", 64), !*(_QWORD *)&v18[v30]))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  objc_msgSend(v18, "addSubview:");
  sub_1001C9724();
  sub_1001C9854();

LABEL_22:
  v58 = *(void **)&v14[OBJC_IVAR____TtC7Measure10UndoButton_undoButton];
  if (v58)
    objc_msgSend(v58, "setEnabled:", v14[OBJC_IVAR____TtC7Measure10UndoButton_isEnabled]);

}

void sub_1001C9724()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  _QWORD v7[6];

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_10047B198 != -1)
    swift_once(&qword_10047B198, sub_1001CA024);
  v2 = qword_1004AFD10;
  v3 = swift_allocObject(&unk_10044C440, 24, 7);
  *(_QWORD *)(v3 + 16) = v0;
  v7[4] = sub_1001C9FD8;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1000DCC48;
  v7[3] = &unk_10044C458;
  v4 = _Block_copy(v7);
  v5 = v0;
  v6 = objc_msgSend(v1, "addObserverForName:object:queue:usingBlock:", v2, 0, 0, v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  swift_unknownObjectRelease(v6);

}

void sub_1001C9854()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  char v8;
  uint64_t v9;
  char v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Measure10UndoButton_undoButton);
  if (v1)
  {
    v2 = objc_opt_self(ASVRoundedButton);
    v3 = swift_dynamicCastObjCClass(v1, v2);
    if (v3)
    {
      v4 = (void *)v3;
      v5 = qword_10047B110;
      v15 = v1;
      if (v5 != -1)
        swift_once(&qword_10047B110, sub_100197AC8);
      v6 = (void *)qword_1004AFC50;
      v7 = *(void **)algn_1004AFC58;
      if ((byte_1004AFC60 & 1) != 0)
      {
        v8 = byte_1004AFC70;
        v9 = qword_1004AFC68;
        v10 = byte_10048A2A0;
        v11 = (id)qword_1004AFC50;
        v12 = sub_100070DBC(v10, v9, v8);
        sub_100021580(v6, v7, 1);
      }
      else
      {
        if ((byte_10048A2A0 & 1) != 0)
          v13 = *(id *)algn_1004AFC58;
        else
          v13 = (id)qword_1004AFC50;
        v12 = v13;
      }
      objc_msgSend(v4, "setTintColor:", v12);

      if (byte_10048A2A0)
        v14 = 2;
      else
        v14 = 1;
      objc_msgSend(v4, "setControlStyle:", v14);

    }
  }
}

uint64_t type metadata accessor for UndoButton()
{
  return objc_opt_self(_TtC7Measure10UndoButton);
}

uint64_t sub_1001C9A4C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  __n128 v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD aBlock[6];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter();
  v12 = swift_allocObject(&unk_10044C490, 24, 7);
  *(_QWORD *)(v12 + 16) = a2;
  aBlock[4] = sub_1001C9FF8;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003ECA0;
  aBlock[3] = &unk_10044C4A8;
  v13 = _Block_copy(aBlock);
  v14 = a2;
  v15 = swift_release();
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_100030E1C();
  v17 = sub_10000EDC8((uint64_t *)&unk_10047E430);
  v18 = sub_100030E64();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v3, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t storeEnumTagSinglePayload for ControlUIType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001C9D14 + 4 * byte_1003BC4E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001C9D48 + 4 * byte_1003BC4E0[v4]))();
}

uint64_t sub_1001C9D48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001C9D50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001C9D58);
  return result;
}

uint64_t sub_1001C9D64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001C9D6CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001C9D70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001C9D78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlUIType()
{
  return &type metadata for ControlUIType;
}

unint64_t sub_1001C9D98()
{
  unint64_t result;

  result = qword_10048A298;
  if (!qword_10048A298)
  {
    result = swift_getWitnessTable(&unk_1003BC56C, &type metadata for ControlUIType);
    atomic_store(result, (unint64_t *)&qword_10048A298);
  }
  return result;
}

uint64_t sub_1001C9DDC()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  id v5;

  v0 = (void *)objc_opt_self(NSLocale);
  v1 = objc_msgSend(v0, "preferredLanguages");
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(_QWORD *)(v2 + 16))
  {
    v3 = *(_QWORD *)(v2 + 40);
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v2);
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v3);
    v5 = objc_msgSend(v0, "characterDirectionForLanguage:", v4);

    if (v5 == (id)2)
      return 1;
  }
  else
  {
    swift_bridgeObjectRelease(v2);
  }
  return 0;
}

double sub_1001C9EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  Swift::String v8;
  uint64_t v9;
  double result;
  _BYTE v11[24];

  v3 = v2 + OBJC_IVAR____TtC7Measure10UndoButton_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC7Measure10UndoButton_delegate, a2);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(ObjectType, v6);
    swift_unknownObjectRelease(v5);
  }
  if (qword_10047AA98 != -1)
    swift_once(&qword_10047AA98, sub_1000E15B4);
  v8._object = (void *)0x80000001003E6010;
  v8._countAndFlagsBits = 0xD000000000000013;
  Log.default(_:isPrivate:)(v8, 0);
  if (qword_10047AB68 != -1)
    swift_once(&qword_10047AB68, sub_10011E814);
  v9 = qword_1004AF6B8 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess(qword_1004AF6B8 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState, v11, 1, 0);
  result = *(double *)(v9 + 8) + 1.0;
  *(double *)(v9 + 8) = result;
  return result;
}

uint64_t sub_1001C9FB4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001C9FD8(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C9A4C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1001C9FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001C9FF0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_1001C9FF8()
{
  sub_1001C9854();
}

void sub_1001CA024()
{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  NSString v3;

  _StringGuts.grow(_:)(40);
  if (qword_10047A970 != -1)
    swift_once(&qword_10047A970, sub_10009581C);
  v0 = unk_1004AF2D0;
  swift_bridgeObjectRetain(unk_1004AF2D0);
  swift_bridgeObjectRelease(0xE000000000000000);
  v1._object = (void *)0x80000001003E60B0;
  v1._countAndFlagsBits = 0xD000000000000026;
  String.append(_:)(v1);
  v2 = v0;
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  qword_1004AFD10 = (uint64_t)v3;
}

void sub_1001CA0EC(void *a1)
{
  void *v1;
  id v2;
  id v3;
  char v4;
  id v5;
  id v6;

  v1 = (void *)qword_10048A2A8;
  qword_10048A2A8 = (uint64_t)a1;
  v2 = a1;

  if (!qword_10048A2A8)
  {
    __break(1u);
    goto LABEL_13;
  }
  v3 = objc_msgSend((id)qword_10048A2A8, "userInterfaceStyle");
  if ((unint64_t)v3 < 2)
  {
    if ((byte_10048A2A0 & 1) == 0)
      return;
    v4 = 0;
    goto LABEL_9;
  }
  if (v3 != (id)2)
  {
LABEL_13:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Measure/UserInterfaceStyle.swift", 32, 2, 25, 0);
    __break(1u);
    return;
  }
  if ((byte_10048A2A0 & 1) != 0)
    return;
  v4 = 1;
LABEL_9:
  byte_10048A2A0 = v4;
  v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v6 = v5;
  if (qword_10047B198 != -1)
  {
    swift_once(&qword_10047B198, sub_1001CA024);
    v5 = v6;
  }
  objc_msgSend(v5, "postNotificationName:object:", qword_1004AFD10, 0);

}

uint64_t type metadata accessor for UserInterfaceStyleObserverView()
{
  return objc_opt_self(_TtC7MeasureP33_EDD96BC629EA7EBD01211224C3FF48E430UserInterfaceStyleObserverView);
}

void sub_1001CA3E8(char a1, double a2)
{
  char *v2;
  double v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char *v11;
  id v12;
  _QWORD v13[5];
  uint64_t v14;

  v5 = 1.0;
  if ((a1 & 1) == 0)
  {
    v6 = *(void **)&v2[qword_10048A370];
    v5 = 0.0;
    if (v6)
      objc_msgSend(v6, "setAlpha:", 0.0);
  }
  v7 = swift_allocObject(&unk_10044C630, 33, 7);
  *(_QWORD *)(v7 + 16) = v2;
  *(double *)(v7 + 24) = v5;
  *(_BYTE *)(v7 + 32) = a1 & 1;
  v8 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  v13[4] = sub_10001A8AC;
  v14 = v7;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10003ECA0;
  v13[3] = &unk_10044C648;
  v9 = _Block_copy(v13);
  v10 = v14;
  v11 = v2;
  swift_release(v10);
  v12 = objc_msgSend(v8, "initWithDuration:dampingRatio:animations:", v9, a2, 1.0);
  _Block_release(v9);
  objc_msgSend(v12, "setInterruptible:", 0);
  objc_msgSend(v12, "startAnimation");

}

uint64_t sub_1001CA530(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v10;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = 0;
  v4 = a2 + 32;
  if ((a1 & 1) != 0)
    v5 = 0x6C6576656CLL;
  else
    v5 = 0x6572757361656DLL;
  if ((a1 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE700000000000000;
  while (1)
  {
    v7 = *(_BYTE *)(v4 + v3) ? 0x6C6576656CLL : 0x6572757361656DLL;
    v8 = *(_BYTE *)(v4 + v3) ? 0xE500000000000000 : 0xE700000000000000;
    if (v7 == v5 && v8 == v6)
      break;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v5, v6, 0);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v6);
    if ((v10 & 1) != 0)
      return v3;
    if (v2 == ++v3)
      return 0;
  }
  swift_bridgeObjectRelease_n(v6, 2);
  return v3;
}

uint64_t sub_1001CA63C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = a1;
  if (*(unsigned __int8 *)(a2 + 32) == a1)
    return 0;
  result = 0;
  v5 = v2 - 1;
  while (v5 != result)
  {
    v6 = *(unsigned __int8 *)(a2 + 33 + result++);
    if (v6 == v3)
      return result;
  }
  return 0;
}

uint64_t sub_1001CA6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t i;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v26;
  char v28;
  int v29;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v38;

  v33 = *(_QWORD *)(a4 + 16);
  if (!v33)
    return 0;
  v4 = 0;
  v34 = a4 + 32;
  while (1)
  {
    v36 = v4;
    v5 = (_QWORD *)(v34 + 24 * v4);
    v6 = v5[1];
    v7 = v5[2];
    v38 = v7;
    if (v6)
      break;
    if (!a2)
      goto LABEL_12;
LABEL_4:
    v4 = v36 + 1;
    if (v36 + 1 == v33)
      return 0;
  }
  if (!a2)
    goto LABEL_4;
  if (*v5 != a1 || v6 != a2)
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(*v5, v6, a1, a2, 0);
    v7 = v38;
    if ((v9 & 1) == 0)
      goto LABEL_4;
  }
LABEL_12:
  v10 = *(_QWORD *)(v7 + 16);
  if (v10 != *(_QWORD *)(a3 + 16))
    goto LABEL_4;
  if (v10 && v7 != a3)
  {
    for (i = 0; ; i += 48)
    {
      v13 = *(_QWORD *)(v7 + i + 32);
      v14 = *(_QWORD *)(v7 + i + 40);
      v16 = *(_QWORD *)(v7 + i + 48);
      v15 = *(_QWORD *)(v7 + i + 56);
      v17 = *(_QWORD *)(v7 + i + 64);
      v18 = *(unsigned __int8 *)(v7 + i + 72);
      v19 = *(_QWORD *)(a3 + i + 32);
      v20 = *(_QWORD *)(a3 + i + 40);
      v22 = *(_QWORD *)(a3 + i + 48);
      v21 = *(_QWORD *)(a3 + i + 56);
      v23 = *(_QWORD *)(a3 + i + 64);
      v24 = *(unsigned __int8 *)(a3 + i + 72);
      if (v13 != v19 || v14 != v20)
      {
        v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, v19, v20, 0);
        v7 = v38;
        if ((v26 & 1) == 0)
          break;
      }
      if (v15)
      {
        if (!v21)
          goto LABEL_4;
        if (v16 != v22 || v15 != v21)
        {
          v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v15, v22, v21, 0);
          v7 = v38;
          if ((v28 & 1) == 0)
            goto LABEL_4;
        }
      }
      else if (v21)
      {
        goto LABEL_4;
      }
      if (v18)
      {
        if (v17)
        {
          if (v23)
            v29 = v24;
          else
            v29 = 0;
          if (v29 != 1)
            goto LABEL_4;
        }
        else
        {
          if (v23)
            v12 = 0;
          else
            v12 = v24;
          if ((v12 & 1) == 0)
            goto LABEL_4;
        }
      }
      else
      {
        if ((v24 & 1) != 0)
          goto LABEL_4;
        if (*(float *)&v17 != *(float *)&v23 || *((float *)&v17 + 1) != *((float *)&v23 + 1))
          goto LABEL_4;
      }
      if (!--v10)
        return v36;
    }
    goto LABEL_4;
  }
  return v36;
}

id sub_1001CA894()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = qword_10048A2E0;
  v2 = *(void **)(v0 + qword_10048A2E0);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_10048A2E0);
  }
  else
  {
    v4 = type metadata accessor for OverlayMetalView(0);
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1001CA908()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;

  v1 = qword_10048A2E8;
  v2 = *(void **)(v0 + qword_10048A2E8);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_10048A2E8);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone((Class)NonRotatingARSCNView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v5, "setLockedOrientation:", *(_QWORD *)effectiveStatusBarOrientation.unsafeMutableAddressor(objc_msgSend(v5, "setAutoresizingMask:", 36)));
    objc_msgSend(v5, "setAutomaticallyOccludesVirtualContent:", 0);
    v6 = objc_allocWithZone((Class)SCNScene);
    v7 = v5;
    v8 = objc_msgSend(v6, "init");
    objc_msgSend(v7, "setScene:", v8);

    if (qword_10047A930 != -1)
      swift_once(&qword_10047A930, sub_100083368);
    v9 = objc_msgSend(v7, "sceneRenderingQueue");
    v10 = (void *)*((_QWORD *)&xmmword_1004AF258 + 1);
    *((_QWORD *)&xmmword_1004AF258 + 1) = v9;

    if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
    {
      v11 = sub_1001CA894();
      objc_msgSend(v7, "addSubview:", v11);

      v12 = sub_1001CA894();
      objc_msgSend(v7, "sendSubviewToBack:", v12);

    }
    sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
    if ((static UIDevice.isIPad()() & 1) != 0
      && (static UIDevice.isDeviceQualified(family:minVersion:)(1, 7, 1) & 1) == 0)
    {
      objc_msgSend(v7, "setPreferredFramesPerSecond:", 30);
    }
    v13 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v14 = v2;
  return v3;
}

void sub_1001CAB1C()
{
  char *v0;
  void *v1;
  char *v2;
  void (*v3)(uint64_t *__return_ptr);
  id v4;
  char v5;
  double v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  unsigned __int8 v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;

  v1 = *(void **)&v0[qword_10048A378];
  if (v1)
  {
    v2 = v0;
    v3 = *(void (**)(uint64_t *__return_ptr))(**(_QWORD **)&v0[qword_10048A3A8] + 144);
    swift_retain();
    v4 = v1;
    v3(&v18);
    swift_release();
    if ((v18 & 0x100) != 0)
    {
      v5 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C6576656CLL, 0xE500000000000000, 0x6572757361656DLL, 0xE700000000000000, 0);
      *(_QWORD *)&v6 = swift_bridgeObjectRelease(0xE500000000000000).n128_u64[0];
      if ((v5 & 1) == 0)
      {
        v7 = qword_10048A398;
        if (*(_QWORD *)&v2[qword_10048A398])
        {
          if ((objc_msgSend(v4, "isDescendantOfView:", v6) & 1) == 0)
          {
            v8 = *(void **)&v2[v7];
            if (v8)
            {
              objc_msgSend(v8, "addSubview:", v4);
              v9 = objc_msgSend(v2, "view");
              if (v9)
              {
                v10 = *(_QWORD *)&v2[v7];
                if (v10)
                {
                  v11 = v9;
                  objc_msgSend(v9, "bringSubviewToFront:", v10);
                  goto LABEL_21;
                }
LABEL_34:
                __break(1u);
                return;
              }
LABEL_33:
              __break(1u);
              goto LABEL_34;
            }
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
LABEL_23:

          return;
        }
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    else
    {
      swift_bridgeObjectRelease(0xE700000000000000);
    }
    if (qword_10047A930 != -1)
      swift_once(&qword_10047A930, sub_100083368);
    if ((_QWORD)xmmword_1004AF258)
    {
      v12 = objc_msgSend((id)xmmword_1004AF258, "view");
      if (v12)
      {
        v13 = v12;
        v14 = objc_msgSend(v4, "isDescendantOfView:", v12);

        if ((v14 & 1) != 0)
          goto LABEL_23;
        if ((_QWORD)xmmword_1004AF258)
        {
          v15 = objc_msgSend((id)xmmword_1004AF258, "view");
          if (v15)
          {
            v16 = v15;
            objc_msgSend(v15, "addSubview:", v4);

            if ((_QWORD)xmmword_1004AF258)
            {
              v17 = objc_msgSend((id)xmmword_1004AF258, "view");
              if (v17)
              {
                v11 = v17;
                objc_msgSend(v17, "bringSubviewToFront:", v4);
LABEL_21:

                if (*(_QWORD *)&v2[qword_10048A348])
                {
                  swift_retain();
                  sub_1001307B8(1, 0, (uint64_t)nullsub_1, 0);
                  swift_release();
                }
                goto LABEL_23;
              }
              goto LABEL_30;
            }
LABEL_29:
            __break(1u);
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_27;
  }
}

void sub_1001CAD8C(uint64_t a1, id a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  Swift::String v15;
  void *object;
  Swift::String v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  void *v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  void *v27;
  Swift::String v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  Swift::String v33;
  Swift::String v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v44;
  _QWORD *v45;
  __n128 v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t countAndFlagsBits;
  uint64_t v55;
  uint64_t v56;
  _OWORD v57[2];
  uint64_t v58;
  Swift::String v59;
  uint64_t v60;
  id v61;

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100018148(0, (unint64_t *)&qword_10047FB70, OS_dispatch_queue_ptr);
  *v9 = static OS_dispatch_queue.main.getter(v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v11 = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once(&qword_10047AA30, sub_1000E115C);
    goto LABEL_6;
  }
  swift_retain();
  a2 = a2;
  sub_1001C81F8();
  v13 = v12;
  if (*(_QWORD *)(v12 + 16))
  {
    sub_1000C8530(a1, a2);
    if ((v14 & 1) != 0)
    {

      swift_release();
      swift_bridgeObjectRelease(v13);
      return;
    }
  }
  swift_release();
  swift_bridgeObjectRelease(v13);

  if (qword_10047AA30 != -1)
    goto LABEL_11;
LABEL_6:
  v59._countAndFlagsBits = 0;
  v59._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(v59._object);
  v59._countAndFlagsBits = 0x6E6976726573624FLL;
  v59._object = (void *)0xEA00000000002067;
  v15._countAndFlagsBits = KeyPath.description.getter();
  object = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(object);
  v17._countAndFlagsBits = 544108320;
  v17._object = (void *)0xE400000000000000;
  String.append(_:)(v17);
  v18 = objc_msgSend(a2, "description");
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22._countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v21);
  v23 = v59._object;
  Log.debug(_:isPrivate:)(v59, 0);
  swift_bridgeObjectRelease(v23);
  v59._countAndFlagsBits = (uint64_t)a2;
  swift_retain();
  v24 = a2;
  swift_getAtKeyPath(&v61, &v59, a1);
  v59._countAndFlagsBits = 0;
  v59._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(29);
  v25._object = (void *)0x80000001003E6450;
  v25._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v25);
  v26._countAndFlagsBits = KeyPath.description.getter();
  v27 = v26._object;
  String.append(_:)(v26);
  swift_bridgeObjectRelease(v27);
  v28._countAndFlagsBits = 544108320;
  v28._object = (void *)0xE400000000000000;
  String.append(_:)(v28);
  v29 = objc_msgSend(v24, "description");
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  v33._countAndFlagsBits = v30;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v32);
  v34._countAndFlagsBits = 8250;
  v34._object = (void *)0xE200000000000000;
  String.append(_:)(v34);
  v35 = v61;
  *(_QWORD *)&v57[0] = v61;
  type metadata accessor for UIContentSizeCategory(0);
  v37 = v36;
  _print_unlocked<A, B>(_:_:)(v57, &v59, v36, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v38 = v59._object;
  Log.debug(_:isPrivate:)(v59, 0);
  swift_bridgeObjectRelease(v38);
  v60 = v37;
  v59._countAndFlagsBits = (uint64_t)v35;
  swift_retain();
  v39 = v24;
  v40 = v35;
  sub_1001C8354();
  v58 = v41;
  if (v37)
  {
    v42 = v41;
    sub_100020848(&v59, v57);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v42);
    v56 = v42;
    sub_1000BDAFC(v57, a1, v39, isUniquelyReferenced_nonNull_native);
    v44 = v56;

    swift_release();
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_100036600((uint64_t)&v59, (uint64_t *)&unk_10047ED00);
    sub_100094098(a1, v39, v57);

    swift_release();
    sub_100036600((uint64_t)v57, (uint64_t *)&unk_10047ED00);
    v44 = v58;
  }
  sub_1001C8494(v44);
  v59._countAndFlagsBits = (uint64_t)v39;
  v45 = (_QWORD *)swift_allocObject(&unk_10044C608, 48, 7);
  v45[2] = a1;
  v45[3] = v3;
  v45[4] = a1;
  v45[5] = v39;
  swift_retain_n(a1, 2, v46);
  v47 = v39;
  v3;
  v48 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(a1, 1, sub_1001CF5B8, v45, &protocol witness table for NSObject);
  swift_release();
  swift_retain();
  v49 = v47;
  v50 = v48;
  sub_1001C81F8();
  v52 = v51;
  v53 = swift_isUniquelyReferenced_nonNull_native(v51);
  v59._countAndFlagsBits = v52;
  sub_1000BD988((uint64_t)v50, a1, v49, v53);
  countAndFlagsBits = v59._countAndFlagsBits;

  swift_release();
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_1001C8338(countAndFlagsBits);

  swift_release();
}

id sub_1001CB2CC(uint64_t a1)
{
  return *(id *)(a1 + qword_10048A350);
}

void sub_1001CB2DC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  id v4;

  v4 = *(id *)(a1 + qword_10048A350);
  *(_QWORD *)(a1 + qword_10048A350) = a3;
  v3 = a3;

}

id sub_1001CB310(uint64_t a1)
{
  return *(id *)(a1 + qword_10048A358);
}

void sub_1001CB320(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  id v4;

  v4 = *(id *)(a1 + qword_10048A358);
  *(_QWORD *)(a1 + qword_10048A358) = a3;
  v3 = a3;

}

id sub_1001CB354(uint64_t a1)
{
  return *(id *)(a1 + qword_10048A368);
}

double sub_1001CB364()
{
  uint64_t v0;
  double result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = v0;
  swift_retain();
  StateValue.ifUpdated(_:)(nullsub_1, &v3);
  swift_release();
  if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
  {
    v2 = swift_allocObject(&unk_10044C518, 24, 7);
    swift_unknownObjectWeakInit(v2 + 16, v0);
    swift_retain();
    StateValue.ifUpdated(_:)(sub_1001CE978, v2);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_1001CB434(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *);
  void (*v12)(_BYTE *, _QWORD);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  char *v21;
  _BYTE v22[32];
  char v23[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = qword_10048A308;
    v8 = *(void **)(Strong + qword_10048A308);
    if (v8)
    {
      objc_msgSend(v8, "invalidate");
      v9 = *(void **)&v6[v7];
      *(_QWORD *)&v6[v7] = 0;

    }
    v10 = *(_QWORD *)&v6[qword_10048A300];
    v11 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)v10 + 400);
    swift_retain(v10);
    v12 = (void (*)(_BYTE *, _QWORD))v11(v22);
    *(_OWORD *)v13 = 0u;
    *(_OWORD *)(v13 + 16) = 0u;
    *(_BYTE *)(v13 + 32) = 1;
    v12(v22, 0);
    swift_release(v10);
    v15 = (void *)swift_unknownObjectWeakLoadStrong(a1, v14);

    if (v15)
    {
      v16 = objc_msgSend((id)objc_opt_self(CADisplayLink), "displayLinkWithTarget:selector:", v6, "caDisplayLinkCallback");
      v17 = *(void **)&v6[v7];
      *(_QWORD *)&v6[v7] = v16;

      v18 = *(void **)&v6[v7];
      if (!v18)
      {
        __break(1u);
        return;
      }
      v19 = (void *)objc_opt_self(NSRunLoop);
      v20 = v18;
      v21 = (char *)objc_msgSend(v19, "mainRunLoop");
      objc_msgSend(v20, "addToRunLoop:forMode:", v21, NSDefaultRunLoopMode);

      v6 = v21;
    }

  }
}

uint64_t sub_1001CB5C4()
{
  return 1;
}

void sub_1001CB5CC(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;

  v1 = qword_10048A390;
  if ((*((_BYTE *)a1 + qword_10048A390) & 1) == 0)
  {
    v4 = a1;
    v3 = sub_1001CA908();
    objc_msgSend(v4, "setView:", v3);

    *((_BYTE *)a1 + v1) = 1;
  }
}

void sub_1001CB654(void *a1)
{
  uint64_t v1;
  char v3;
  _UNKNOWN **v4;
  uint64_t *v5;
  uint64_t v6;
  BOOL v7;
  _UNKNOWN **v8;
  _QWORD *v9;
  uint64_t (*v10)(_QWORD *, __n128);
  __n128 v11;
  void (*v12)(_QWORD *, _QWORD);
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD *__return_ptr, __n128);
  __n128 v18;
  uint64_t (*v19)(_QWORD *, __n128);
  __n128 v20;
  void (*v21)(_QWORD *, _QWORD);
  _QWORD *v22;
  _QWORD v23[4];

  sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  v3 = static UIDevice.isIPad()();
  if ((v3 & 1) != 0)
    v4 = &off_10043C4E0;
  else
    v4 = &off_10043C520;
  v5 = (uint64_t *)&unk_10043C4F0;
  if ((v3 & 1) == 0)
    v5 = (uint64_t *)&unk_10043C530;
  v6 = *v5;
  if (!v6)
    goto LABEL_20;
  v7 = (v3 & 1) == 0;
  if ((v3 & 1) != 0)
    v8 = &off_10043C4E0;
  else
    v8 = &off_10043C520;
  v9 = &unk_10043C540;
  if (!v7)
    v9 = &unk_10043C500;
  if (v8[4] == a1)
  {
LABEL_13:
    swift_bridgeObjectRelease(v4);
    v10 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)(v1 + qword_10048A3B0) + 400);
    v11 = swift_retain();
    v12 = (void (*)(_QWORD *, _QWORD))v10(v23, v11);
    *v13 = a1;
    v12(v23, 0);
LABEL_14:
    swift_release();
    return;
  }
  if (v6 == 1)
  {
LABEL_20:
    swift_bridgeObjectRelease(v4);
    if (!a1)
    {
      v16 = qword_10048A3B0;
      v17 = *(void (**)(_QWORD *__return_ptr, __n128))(**(_QWORD **)(v1 + qword_10048A3B0) + 144);
      v18 = swift_retain();
      v17(v23, v18);
      swift_release();
      if (!v23[0])
      {
        v19 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)(v1 + v16) + 400);
        v20 = swift_retain();
        v21 = (void (*)(_QWORD *, _QWORD))v19(v23, v20);
        *v22 = 1;
        v21(v23, 0);
        goto LABEL_14;
      }
    }
  }
  else
  {
    v14 = 1;
    while (1)
    {
      v15 = v14 + 1;
      if (__OFADD__(v14, 1))
        break;
      if ((void *)v9[v14] == a1)
        goto LABEL_13;
      ++v14;
      if (v15 == v6)
        goto LABEL_20;
    }
    __break(1u);
  }
}

void sub_1001CB7D4(void *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;

  v2 = (void *)objc_opt_self(UIDevice);
  v5 = a1;
  v3 = objc_msgSend(v2, "currentDevice");
  v4 = objc_msgSend(v3, "orientation");

  sub_1001CB654(v4);
}

double sub_1001CB850()
{
  uint64_t v0;
  double result;

  swift_release(*(_QWORD *)(v0 + qword_10048A2F8));
  swift_release(*(_QWORD *)(v0 + qword_10048A300));

  swift_release(*(_QWORD *)(v0 + qword_10048A310));
  swift_release(*(_QWORD *)(v0 + qword_10048A318));
  swift_release(*(_QWORD *)(v0 + qword_10048A320));
  swift_release(*(_QWORD *)(v0 + qword_10048A328));
  swift_release(*(_QWORD *)(v0 + qword_10048A330));
  swift_release(*(_QWORD *)(v0 + qword_10048A338));
  swift_release(*(_QWORD *)(v0 + qword_10048A340));
  swift_release(*(_QWORD *)(v0 + qword_10048A348));

  swift_release(*(_QWORD *)(v0 + qword_10048A388));
  swift_release(*(_QWORD *)(v0 + qword_10048A3A0));
  swift_release(*(_QWORD *)(v0 + qword_10048A3A8));
  swift_release(*(_QWORD *)(v0 + qword_10048A3B0));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0 + qword_10048A3B8)).n128_u64[0];
  return result;
}

id sub_1001CBA0C()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  void *v3;
  void *v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
  {
    v2 = qword_10048A308;
    v3 = *(void **)&v0[qword_10048A308];
    if (v3)
    {
      objc_msgSend(v3, "invalidate");
      v4 = *(void **)&v0[v2];
      *(_QWORD *)&v0[v2] = 0;

    }
  }
  v6.receiver = v0;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, "dealloc");
}

id sub_1001CBA98(void *a1)
{
  id v1;

  v1 = a1;
  return sub_1001CBA0C();
}

double sub_1001CBABC(uint64_t a1)
{
  double result;

  swift_release(*(_QWORD *)(a1 + qword_10048A2F8));
  swift_release(*(_QWORD *)(a1 + qword_10048A300));

  swift_release(*(_QWORD *)(a1 + qword_10048A310));
  swift_release(*(_QWORD *)(a1 + qword_10048A318));
  swift_release(*(_QWORD *)(a1 + qword_10048A320));
  swift_release(*(_QWORD *)(a1 + qword_10048A328));
  swift_release(*(_QWORD *)(a1 + qword_10048A330));
  swift_release(*(_QWORD *)(a1 + qword_10048A338));
  swift_release(*(_QWORD *)(a1 + qword_10048A340));
  swift_release(*(_QWORD *)(a1 + qword_10048A348));

  swift_release(*(_QWORD *)(a1 + qword_10048A388));
  swift_release(*(_QWORD *)(a1 + qword_10048A3A0));
  swift_release(*(_QWORD *)(a1 + qword_10048A3A8));
  swift_release(*(_QWORD *)(a1 + qword_10048A3B0));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + qword_10048A3B8)).n128_u64[0];
  return result;
}

void sub_1001CBC84(char a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v6, "viewWillDisappear:", a1 & 1);
  if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
  {
    v3 = qword_10048A308;
    v4 = *(void **)&v1[qword_10048A308];
    if (v4)
    {
      objc_msgSend(v4, "invalidate");
      v5 = *(void **)&v1[v3];
      *(_QWORD *)&v1[v3] = 0;

    }
  }
}

void sub_1001CBD0C(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1001CBC84(a3);

}

void sub_1001CBD4C()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t KeyPath;
  id v4;
  void *v5;
  id v6;
  id v7;
  BOOL v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double Width;
  CGFloat Height;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t (*v34)(__n128);
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  objc_class *v40;
  char *v41;
  char *v42;
  uint64_t (**v43)(double, double);
  char *v44;
  id v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  id v59;
  uint64_t v60;
  void *v61;
  void *v62;
  id v63;
  uint64_t v64;
  char v65;
  void *v66;
  double v67;
  double v68;
  void *v69;
  double v70;
  double v71;
  double v72;
  void *v73;
  double v74;
  double v75;
  id v76;
  void *v77;
  id v78;
  double v79;
  CGFloat v80;
  double v81;
  CGFloat v82;
  double v83;
  CGFloat v84;
  double v85;
  CGFloat v86;
  double v87;
  id v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  void *v96;
  unsigned int v97;
  void *v98;
  id v99;
  id v100;
  id v101;
  char *v102;
  char *v103;
  void *v104;
  void *v105;
  id v106;
  id v107;
  id v108;
  id v109;
  void *v110;
  id v111;
  id v112;
  id v113;
  char *v114;
  uint64_t v115;
  void *v116;
  void *v117;
  double v118;
  double v119;
  double v120;
  double v121;
  id v122;
  uint64_t v123;
  void *v124;
  unsigned int v125;
  char v126;
  id v127;
  void *v128;
  char *v129;
  void *v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  id v134;
  double v135;
  double v136;
  double v137;
  double v138;
  double v139;
  double v140;
  double v141;
  double v142;
  uint64_t v143;
  objc_class *v144;
  id v145;
  void *v146;
  void *v147;
  char *v148;
  uint64_t v149;
  unint64_t v150;
  id v151;
  double v152;
  double v153;
  double v154;
  double v155;
  uint64_t v156;
  unint64_t v157;
  void **v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  id v163;
  id v164;
  id v165;
  id v166;
  uint64_t v167;
  void *v168;
  uint64_t v169;
  void *v170;
  void *v171;
  id v172;
  id v173;
  uint64_t v174;
  NSString v175;
  id v176;
  uint64_t v177;
  void *v178;
  id v179;
  id v180;
  double v181;
  double v182;
  double v183;
  double v184;
  double v185;
  double v186;
  double v187;
  double v188;
  id v189;
  uint64_t v190;
  void *v191;
  void *v192;
  void *v193;
  void *v194;
  void *v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  uint64_t v199;
  id v200;
  uint64_t v201;
  id v202;
  void *v203;
  void *v204;
  uint64_t v205;
  char *v206;
  id v207;
  uint64_t v208;
  void *v209;
  uint64_t v210;
  id v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  void *v216;
  uint64_t v217;
  char *v218;
  id v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  uint64_t v223;
  id v224;
  uint64_t v225;
  uint64_t v226;
  void *v227;
  uint64_t v228;
  void *v229;
  uint64_t v230;
  id v231;
  id v232;
  uint64_t v233;
  uint64_t v234;
  void *v235;
  uint64_t v236;
  uint64_t v237;
  void *v238;
  uint64_t v239;
  uint64_t v240;
  id v241;
  uint64_t v242;
  uint64_t v243;
  id v244;
  void *v245;
  void *v246;
  uint64_t v247;
  id v248;
  uint64_t v249;
  uint64_t v250;
  void *v251;
  id v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  void *v256;
  void *v257;
  uint64_t v258;
  id v259;
  id v260;
  uint64_t v261;
  id v262;
  id v263;
  id v264;
  uint64_t v265;
  void *v266;
  char *v267;
  id v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  id v274;
  uint64_t v275;
  _QWORD aBlock[6];
  objc_super v277;
  objc_super v278;
  CGRect v279;
  CGRect v280;
  CGRect v281;
  CGRect v282;
  CGRect v283;

  v1 = v0;
  v278.receiver = v0;
  v278.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v278, "viewDidLoad");
  if (qword_10047B190 != -1)
    swift_once(&qword_10047B190, sub_1001C81CC);
  v2 = sub_1001CA908();
  sub_1001C8AB0(v2);

  KeyPath = swift_getKeyPath(&unk_1003BC740);
  v4 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_1001CAD8C(KeyPath, v4);
  swift_release();

  v5 = (void *)objc_opt_self(NSNotificationCenter);
  v6 = objc_msgSend(v5, "defaultCenter");
  objc_msgSend(v6, "addObserver:selector:name:object:", v1, "updateForCurrentOrientation", UIDeviceOrientationDidChangeNotification, 0);

  v7 = sub_1001CA908();
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v8 = sub_1001CF494(qword_1004AF250);
  v9 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v9, "_referenceBounds");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  Width = v16;

  if (!v8)
  {
    v279.origin.x = v11;
    v279.origin.y = v13;
    v279.size.width = v15;
    v279.size.height = Width;
    Height = CGRectGetHeight(v279);
    v280.origin.x = v11;
    v280.origin.y = v13;
    v280.size.width = v15;
    v280.size.height = Width;
    Width = CGRectGetWidth(v280);
    v11 = 0.0;
    v13 = 0.0;
    v15 = Height;
  }
  objc_msgSend(v7, "setFrame:", v11, v13, v15, Width);

  v19 = sub_1001CA908();
  objc_msgSend(v19, "setAutoenablesDefaultLighting:", 0);

  v20 = sub_1001CA908();
  objc_msgSend(v20, "setAntialiasingMode:", 2);

  v21 = sub_100018148(0, (unint64_t *)&qword_10047E560, UIDevice_ptr);
  if ((static UIDevice.shouldLockFramerate()(v21) & 1) != 0)
  {
    v22 = sub_1001CA908();
    objc_msgSend(v22, "setPreferredFramesPerSecond:", 30);

  }
  v23 = objc_msgSend(v1, "view");
  if (!v23)
  {
    __break(1u);
    goto LABEL_77;
  }
  v24 = v23;
  v25 = sub_1001CA908();
  v26 = type metadata accessor for DebugVisualizer();
  swift_allocObject(v26, 128, 7);
  sub_1000665A0(v24, v25);
  qword_1004AF238 = v27;
  swift_release();
  v28 = sub_1001CA908();
  objc_msgSend(v28, "center");
  v30 = v29;
  v32 = v31;

  v33 = SIMD2<>.init(_:)(v30, v32);
  v34 = *(uint64_t (**)(__n128))(**(_QWORD **)&v1[qword_10048A3A0] + 200);
  v35 = swift_retain();
  v36 = v34(v35);
  swift_release();
  v37 = swift_allocObject(&unk_10044C568, 28, 7);
  *(double *)(v37 + 16) = v33;
  *(_DWORD *)(v37 + 24) = 1106247680;
  (*(void (**)(double (*)(uint64_t), uint64_t))(*(_QWORD *)v36 + 280))(sub_1001CF4B4, v37);
  swift_release();
  swift_release();
  type metadata accessor for ShaderCache();
  v38 = sub_1001CA908();
  sub_10017E90C(v38);

  v39 = swift_allocObject(&unk_10044C590, 24, 7);
  *(_QWORD *)(v39 + 16) = v1;
  v40 = (objc_class *)type metadata accessor for ActionView();
  v41 = (char *)objc_allocWithZone(v40);
  v42 = &v41[OBJC_IVAR____TtC7Measure10ActionView_delegate];
  *((_QWORD *)v42 + 1) = 0;
  swift_unknownObjectWeakInit(v42, 0);
  v43 = (uint64_t (**)(double, double))&v41[OBJC_IVAR____TtC7Measure10ActionView_shouldPreventManipulatingPoint];
  *v43 = sub_1001CF4EC;
  v43[1] = (uint64_t (*)(double, double))v39;
  v277.receiver = v41;
  v277.super_class = v40;
  v44 = v1;
  swift_retain();
  v45 = objc_msgSendSuper2(&v277, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v45, "setAutoresizingMask:", 18);

  swift_release();
  v46 = qword_10048A398;
  v47 = *(void **)&v44[qword_10048A398];
  *(_QWORD *)&v44[qword_10048A398] = v45;

  v275 = v46;
  v48 = *(void **)&v44[v46];
  if (!v48)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v49 = v48;
  v50 = sub_1001CA908();
  objc_msgSend(v50, "bounds");
  v52 = v51;
  v54 = v53;
  v56 = v55;
  v58 = v57;

  objc_msgSend(v49, "setFrame:", v52, v54, v56, v58);
  v59 = objc_msgSend(v44, "view");
  if (!v59)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v60 = v46;
  if (!*(_QWORD *)&v44[v46])
  {
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  v61 = v59;
  objc_msgSend(v59, "addSubview:");

  v62 = (void *)qword_1004AF280;
  qword_1004AF280 = *(_QWORD *)&v44[v46];
  v63 = (id)qword_1004AF280;

  v65 = static UIDevice.isIPhone()(v64);
  v66 = *(void **)&v44[v46];
  if ((v65 & 1) != 0)
  {
    if (!v66)
    {
LABEL_106:
      __break(1u);
      goto LABEL_107;
    }
    objc_msgSend(v66, "bounds");
    v69 = *(void **)&v44[v46];
    if (!v69)
    {
LABEL_107:
      __break(1u);
      goto LABEL_108;
    }
    v70 = v67;
    v71 = v68;
    objc_msgSend(v69, "bounds");
    v72 = CGRectGetWidth(v281);
    v73 = *(void **)&v44[v46];
    if (!v73)
    {
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    v74 = v72;
    objc_msgSend(v73, "bounds");
    v75 = CGRectGetHeight(v282);
    v76 = objc_msgSend(v44, "tabBarController");
    if (!v76)
    {
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
    v77 = v76;
    v78 = objc_msgSend(v76, "tabBar");

    objc_msgSend(v78, "frame");
    v80 = v79;
    v82 = v81;
    v84 = v83;
    v86 = v85;

    v283.origin.x = v80;
    v283.origin.y = v82;
    v283.size.width = v84;
    v283.size.height = v86;
    v87 = v75 - CGRectGetHeight(v283);
    v88 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v88, "_peripheryInsets");
    v90 = v89;

    v91 = v87 - v90;
  }
  else
  {
    if (!v66)
    {
LABEL_110:
      __break(1u);
      goto LABEL_111;
    }
    objc_msgSend(v66, "bounds");
    v70 = v92;
    v71 = v93;
    v74 = v94;
    v91 = v95;
  }
  v96 = (void *)objc_opt_self(Gestalt);
  v97 = objc_msgSend(v96, "jasperAvailable");
  v98 = *(void **)&v44[v46];
  if (v97)
  {
    if (!v98)
    {
LABEL_111:
      __break(1u);
      goto LABEL_112;
    }
    v99 = v98;
    v100 = sub_1001CA908();
    v101 = objc_allocWithZone((Class)type metadata accessor for LabelView());
    v102 = v44;
    v103 = (char *)sub_1000C5448(v99, v100, v74, v91);
    v104 = *(void **)&v103[OBJC_IVAR____TtC7Measure9LabelView_activityPresentingViewController];
    *(_QWORD *)&v103[OBJC_IVAR____TtC7Measure9LabelView_activityPresentingViewController] = v102;

    v105 = *(void **)&v102[qword_10048A358];
    *(_QWORD *)&v102[qword_10048A358] = v103;
    v60 = v46;
  }
  else
  {
    if (!v98)
    {
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
    v106 = v98;
    v107 = sub_1001CA908();
    v108 = objc_allocWithZone((Class)type metadata accessor for LabelView());
    v109 = sub_1000C5448(v106, v107, v74, v91);
    v105 = *(void **)&v44[qword_10048A358];
    *(_QWORD *)&v44[qword_10048A358] = v109;
  }

  v110 = *(void **)&v44[v60];
  if (!v110)
    goto LABEL_80;
  objc_msgSend(v110, "frame");
  v111 = sub_1001CA908();
  v112 = objc_msgSend(v111, "scene");

  v113 = objc_allocWithZone((Class)type metadata accessor for LineView());
  v114 = sub_1000DCA74(v112);
  v115 = qword_10048A360;
  v116 = *(void **)&v44[qword_10048A360];
  *(_QWORD *)&v44[qword_10048A360] = v114;

  v117 = *(void **)&v44[v60];
  if (!v117)
  {
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  objc_msgSend(v117, "frame");
  v122 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ReticleView(0)), "initWithFrame:", v118, v119, v120, v121);
  v123 = qword_10048A350;
  v124 = *(void **)&v44[qword_10048A350];
  *(_QWORD *)&v44[qword_10048A350] = v122;

  v125 = objc_msgSend(v96, "jasperAvailable");
  v126 = static UIDevice.isIPad()();
  v274 = v96;
  if (v125)
  {
    if ((v126 & 1) != 0)
    {
      v127 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EditViewSpatial(0)), "initWithFrame:", v70, v71, v74, v91);
      v128 = *(void **)&v44[qword_10048A368];
      *(_QWORD *)&v44[qword_10048A368] = v127;
      v129 = (char *)v127;

      v130 = *(void **)&v44[qword_10048A358];
      if (v130)
      {
        aBlock[0] = *(_QWORD *)&v129[qword_100483158];
        v131 = v130;
        v132 = sub_10000EDC8(&qword_100483588);
        v133 = sub_1001CF530();
        *(_QWORD *)&v131[OBJC_IVAR____TtC7Measure9LabelView_historyPressedPublisher] = Publisher.eraseToAnyPublisher()(v132, v133);

        swift_release();
      }
      v134 = sub_1001CA908();
      objc_msgSend(v134, "bounds");
      v136 = v135;
      v138 = v137;
      v140 = v139;
      v142 = v141;

      v143 = qword_100483158;
    }
    else
    {
      v145 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EditViewCompactSpatial(0)), "initWithFrame:", v70, v71, v74, v91);
      v146 = *(void **)&v44[qword_10048A368];
      *(_QWORD *)&v44[qword_10048A368] = v145;
      v129 = (char *)v145;

      v147 = *(void **)&v44[qword_10048A358];
      if (v147)
      {
        aBlock[0] = *(_QWORD *)&v129[qword_100488458];
        v148 = v147;
        v149 = sub_10000EDC8(&qword_100483588);
        v150 = sub_1001CF530();
        *(_QWORD *)&v148[OBJC_IVAR____TtC7Measure9LabelView_historyPressedPublisher] = Publisher.eraseToAnyPublisher()(v149, v150);

        swift_release();
      }
      v151 = sub_1001CA908();
      objc_msgSend(v151, "bounds");
      v136 = v152;
      v138 = v153;
      v140 = v154;
      v142 = v155;

      v143 = qword_100488458;
    }
    aBlock[0] = *(_QWORD *)&v129[v143];
    v156 = sub_10000EDC8(&qword_100483588);
    v157 = sub_1001CF530();
    v158 = (void **)Publisher.eraseToAnyPublisher()(v156, v157);
    objc_allocWithZone((Class)type metadata accessor for HistoryViewCoordinator(0));
    v159 = v44;
    sub_100143148(v159, v158, 0, v136, v138, v140, v142);
    v161 = v160;

    v162 = *(void **)&v159[qword_10048A2F0];
    *(_QWORD *)&v159[qword_10048A2F0] = v161;
  }
  else
  {
    if ((v126 & 1) != 0)
      v144 = (objc_class *)type metadata accessor for EditViewRegular(0);
    else
      v144 = (objc_class *)type metadata accessor for EditViewCompact(0);
    v163 = objc_msgSend(objc_allocWithZone(v144), "initWithFrame:", v70, v71, v74, v91);
    v162 = *(void **)&v44[qword_10048A368];
    *(_QWORD *)&v44[qword_10048A368] = v163;
  }

  v164 = sub_1001CA908();
  v165 = objc_msgSend(v164, "session");

  v166 = objc_allocWithZone((Class)type metadata accessor for CoachingView(0));
  sub_10003EDB4(v165, v70, v71, v74, v91);
  v167 = qword_10048A370;
  v168 = *(void **)&v44[qword_10048A370];
  *(_QWORD *)&v44[qword_10048A370] = v169;

  v273 = v167;
  v170 = *(void **)&v44[v167];
  if (!v170)
    goto LABEL_82;
  v171 = (void *)objc_opt_self(NSUserDefaults);
  v172 = v170;
  v173 = objc_msgSend(v171, "standardUserDefaults");
  v174 = *(_QWORD *)(Defaults.disableAllCoaching.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain(v174);
  v175 = String._bridgeToObjectiveC()();
  v176 = objc_msgSend(v173, "BOOLForKey:", v175, swift_bridgeObjectRelease(v174).n128_f64[0]);

  objc_msgSend(v172, "setHidden:", v176);
  v177 = qword_10048A368;
  v178 = (void *)qword_1004AF288;
  qword_1004AF288 = *(_QWORD *)&v44[qword_10048A368];
  v179 = (id)qword_1004AF288;

  v180 = sub_1001CA908();
  objc_msgSend(v180, "frame");
  v182 = v181;
  v184 = v183;
  v186 = v185;
  v188 = v187;

  v189 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PrivacyView()), "initWithFrame:", v182, v184, v186, v188);
  v190 = qword_10048A378;
  v191 = *(void **)&v44[qword_10048A378];
  *(_QWORD *)&v44[qword_10048A378] = v189;

  v192 = *(void **)&v44[v275];
  if (!v192)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  if (!*(_QWORD *)&v44[v123])
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  objc_msgSend(v192, "addSubview:");
  v193 = *(void **)&v44[v275];
  if (!v193)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  if (!*(_QWORD *)&v44[v177])
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  objc_msgSend(v193, "addSubview:");
  v194 = *(void **)&v44[v275];
  if (!v194)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  if (!*(_QWORD *)&v44[v167])
  {
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  objc_msgSend(v194, "addSubview:");
  if (objc_msgSend(v96, "jasperAvailable"))
  {
    v195 = *(void **)&v44[v275];
    if (!v195)
    {
LABEL_113:
      __break(1u);
      goto LABEL_114;
    }
    v196 = *(_QWORD *)&v44[qword_10048A2F0];
    if (!v196)
    {
LABEL_114:
      __break(1u);
      goto LABEL_115;
    }
    objc_msgSend(v195, "addSubview:", *(_QWORD *)(v196 + qword_100485C80));
  }
  v197 = qword_1004AF248;
  if (!qword_1004AF248)
    goto LABEL_89;
  v198 = *(void **)&v44[v123];
  if (!v198)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  v271 = v177;
  v269 = v190;
  v199 = type metadata accessor for ReticleController(0);
  swift_allocObject(v199, *(unsigned int *)(v199 + 48), *(unsigned __int16 *)(v199 + 52));
  swift_retain();
  v200 = v198;
  v201 = sub_100170218(v200);

  v270 = qword_10048A310;
  *(_QWORD *)&v44[qword_10048A310] = v201;
  swift_release();
  v202 = sub_1001CA908();
  v203 = *(void **)&v44[v275];
  if (!v203)
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v204 = v202;
  v205 = type metadata accessor for ActionController(0);
  swift_allocObject(v205, 184, 7);
  v206 = v44;
  v207 = v203;
  v208 = sub_10001A47C(v204, v207, v206);

  *(_QWORD *)&v206[qword_10048A318] = v208;
  swift_release();
  v209 = *(void **)&v44[v115];
  if (!v209)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  v210 = type metadata accessor for LineController(0);
  swift_allocObject(v210, *(unsigned int *)(v210 + 48), *(unsigned __int16 *)(v210 + 52));
  v211 = v209;
  v212 = sub_1000D1D6C(v211);

  v213 = qword_10048A320;
  *(_QWORD *)&v206[qword_10048A320] = v212;
  swift_release();
  if (!*(_QWORD *)&v206[v213])
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  swift_retain();
  v272 = v197;
  sub_1001CEBCC(v214, v197);
  swift_release();
  qword_1004AF270 = *(_QWORD *)&v206[v213];
  swift_retain();
  swift_release();
  v215 = qword_10048A358;
  v216 = *(void **)&v206[qword_10048A358];
  if (!v216)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v217 = type metadata accessor for LabelController(0);
  swift_allocObject(v217, 112, 7);
  v218 = v206;
  v219 = v216;
  v220 = sub_100095588(v219, v218);

  v221 = qword_10048A328;
  *(_QWORD *)&v218[qword_10048A328] = v220;
  swift_release();
  if (!*(_QWORD *)&v218[v221])
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  v222 = v5;
  swift_retain();
  sub_1001CEC98(v223, v272);
  swift_release();
  qword_1004AF268 = *(_QWORD *)&v218[v221];
  swift_retain();
  swift_release();
  v224 = sub_1001CA908();
  v225 = sub_10000EDC8((uint64_t *)&unk_10048A610);
  v226 = swift_allocObject(v225, 64, 7);
  *(_OWORD *)(v226 + 16) = xmmword_1003B0F60;
  v227 = *(void **)&v206[v215];
  if (!v227)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  v228 = v226;
  *(_QWORD *)(v226 + 32) = v227;
  *(_QWORD *)(v226 + 40) = &off_100444890;
  v229 = *(void **)&v44[v115];
  if (!v229)
  {
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  *(_QWORD *)(v226 + 48) = v229;
  *(_QWORD *)(v226 + 56) = &off_100445340;
  v230 = type metadata accessor for CaptureController(0);
  swift_allocObject(v230, 176, 7);
  v231 = v227;
  v232 = v229;
  v233 = sub_100035C58(v224, v228);

  v234 = qword_10048A330;
  *(_QWORD *)&v218[qword_10048A330] = v233;
  v235 = v222;
  if (objc_msgSend(v274, "jasperAvailable", swift_release().n128_f64[0]))
  {
    v236 = *(_QWORD *)&v218[v234];
    if (!v236)
    {
LABEL_115:
      __break(1u);
      goto LABEL_116;
    }
    v237 = *(_QWORD *)&v206[v215];
    if (!v237)
    {
LABEL_116:
      __break(1u);
      return;
    }
    swift_unknownObjectUnownedAssign(v236 + 136, v237);
  }
  v238 = *(void **)&v44[v271];
  if (!v238)
    goto LABEL_98;
  v239 = *(_QWORD *)&v218[v234];
  if (!v239)
  {
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  v240 = type metadata accessor for EditController(0);
  swift_allocObject(v240, 145, 7);
  v241 = v238;
  swift_retain();
  v242 = sub_10007D31C(v241, v239);
  v243 = qword_10048A338;
  *(_QWORD *)&v218[qword_10048A338] = v242;
  swift_release();
  v244 = sub_1001CA908();
  v245 = *(void **)&v44[v273];
  if (!v245)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  v246 = v244;
  v247 = type metadata accessor for CoachingController(0);
  swift_allocObject(v247, *(unsigned int *)(v247 + 48), *(unsigned __int16 *)(v247 + 52));
  v248 = v245;
  sub_10003DFC4(v246, v248);
  v250 = v249;

  v251 = *(void **)&v44[v273];
  if (!v251)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  v252 = v251;
  sub_1001CEE30((uint64_t)v252, v250);

  if (!*(_QWORD *)&v44[v270])
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  swift_retain();
  sub_1001CEEFC(v253, v250);
  swift_release();
  if (!*(_QWORD *)&v218[v243])
  {
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  swift_retain();
  sub_1001CEFC8(v254, v250);
  swift_release();
  swift_retain();
  sub_1001CED64(v255, v272);
  *(_QWORD *)&v218[qword_10048A340] = v250;
  swift_release();
  v256 = *(void **)&v44[v269];
  if (!v256)
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  v257 = *(void **)&v44[v275];
  if (!v257)
  {
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  v258 = type metadata accessor for PrivacyController(0);
  swift_allocObject(v258, 128, 7);
  v259 = v257;
  v260 = v256;
  v261 = sub_100130C24(v260);

  *(_QWORD *)&v218[qword_10048A348] = v261;
  swift_release();
  v262 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v218, "onTapOnSceneViewFrom:");
  objc_msgSend(v262, "setDelegate:", v218);
  v263 = sub_1001CA908();
  objc_msgSend(v263, "addGestureRecognizer:", v262);

  if (objc_msgSend(v274, "internalInstall"))
    sub_1001CD2B0();
  v264 = objc_msgSend(v235, "defaultCenter", v269);
  v265 = swift_allocObject(&unk_10044C5B8, 24, 7);
  *(_QWORD *)(v265 + 16) = v218;
  aBlock[4] = sub_1001CF510;
  aBlock[5] = v265;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DCC48;
  aBlock[3] = &unk_10044C5D0;
  v266 = _Block_copy(aBlock);
  v267 = v218;
  v268 = objc_msgSend(v264, "addObserverForName:object:queue:usingBlock:", UIContentSizeCategoryDidChangeNotification, 0, 0, v266, swift_release().n128_f64[0]);
  _Block_release(v266);
  swift_release();
  swift_release();

  swift_unknownObjectRelease(v268);
}

uint64_t sub_1001CD11C(double a1, double a2)
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = sub_1001CA908();
  v5 = objc_msgSend(v4, "overlaySKScene");

  if (v5)
  {
    objc_msgSend(v5, "convertPointFromView:", a1, a2);
    v6 = objc_msgSend(v5, "nodesAtPoint:");
    v7 = sub_100018148(0, (unint64_t *)&unk_10048A600, SKNode_ptr);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

    if ((unint64_t)v8 >> 62)
      goto LABEL_15;
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v9)
    {
      v10 = 4;
      while (1)
      {
        v11 = (v8 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v8)
            : *(id *)(v8 + 8 * v10);
        v12 = v11;
        v13 = v10 - 3;
        if (__OFADD__(v10 - 4, 1))
          break;
        v14 = type metadata accessor for TouchableSpriteNode();
        if (swift_dynamicCastClass(v12, v14))
        {
          swift_bridgeObjectRelease(v8);

          return 1;
        }

        ++v10;
        if (v13 == v9)
          goto LABEL_11;
      }
      __break(1u);
LABEL_15:
      if (v8 < 0)
        v16 = v8;
      else
        v16 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v9 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease(v8);
    }
LABEL_11:

    swift_bridgeObjectRelease(v8);
  }
  return 0;
}

void sub_1001CD2B0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  double v13;
  id v14;
  NSString v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double Width;
  id v29;
  void *v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  CGFloat v39;
  id v40;
  void *v41;
  id v42;
  objc_super v43;
  uint64_t v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  v1 = v0;
  if (qword_10047B1A0 != -1)
    swift_once(&qword_10047B1A0, sub_1001D3758);
  v2 = qword_1004AFD20;
  v44 = qword_1004AFD20;
  v3 = qword_10047B1A8;
  swift_bridgeObjectRetain_n(qword_1004AFD20, 2);
  if (v3 != -1)
    swift_once(&qword_10047B1A8, sub_1001D3D48);
  v4 = sub_1001CA6A0(xmmword_1004AFD30, *((uint64_t *)&xmmword_1004AFD30 + 1), qword_1004AFD40, v2);
  v6 = v5;
  swift_bridgeObjectRelease(v2);
  if ((v6 & 1) != 0)
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_10002848C(v4);
  v8 = v7;
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v8);
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v10 = v44;
  v11 = (objc_class *)type metadata accessor for DefaultsViewController();
  v12 = (char *)objc_allocWithZone(v11);
  *(_QWORD *)&v12[OBJC_IVAR____TtC7Measure22DefaultsViewController_cancellables] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC7Measure22DefaultsViewController_groups] = v10;
  v43.receiver = v12;
  v43.super_class = v11;
  *(_QWORD *)&v13 = swift_bridgeObjectRetain(v10).n128_u64[0];
  v14 = objc_msgSendSuper2(&v43, "initWithStyle:", 2, v13);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setTitle:", v15);

  v16 = (void *)xmmword_1004AF228;
  *(_QWORD *)&xmmword_1004AF228 = v14;

  v17 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v18 = objc_msgSend(v1, "view");
  if (!v18)
    goto LABEL_15;
  v19 = v18;
  objc_msgSend(v18, "bounds");
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  v45.origin.x = v21;
  v45.origin.y = v23;
  v45.size.width = v25;
  v45.size.height = v27;
  Width = CGRectGetWidth(v45);
  if (qword_10047ADD8 != -1)
    swift_once(&qword_10047ADD8, sub_100195820);
  objc_msgSend(v17, "setFrame:", 0.0, 0.0, Width - (*(double *)&qword_1004AF8C0 + *(double *)&qword_1004AF8C0) + -160.0, 44.0);
  v29 = objc_msgSend(v1, "view");
  if (!v29)
    goto LABEL_16;
  v30 = v29;
  objc_msgSend(v29, "bounds");
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;

  v46.origin.x = v32;
  v46.origin.y = v34;
  v46.size.width = v36;
  v46.size.height = v38;
  v39 = CGRectGetWidth(v46) * 0.5;
  objc_msgSend(v17, "bounds");
  objc_msgSend(v17, "setCenter:", v39, CGRectGetHeight(v47) * 0.5);
  v40 = objc_msgSend(v1, "view");
  if (v40)
  {
    v41 = v40;
    objc_msgSend(v40, "addSubview:", v17, swift_bridgeObjectRelease(v10).n128_f64[0]);

    v42 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v1, "showDebugController");
    objc_msgSend(v42, "setNumberOfTouchesRequired:", 2);
    objc_msgSend(v17, "addGestureRecognizer:", v42);

    return;
  }
LABEL_17:
  __break(1u);
}

void sub_1001CD678(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  char *v9;
  double *v10;
  id v11;
  uint64_t v12;
  char v13;
  void *v14;
  void *v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  void *v30;
  _QWORD v31[4];

  v3 = sub_10000EDC8((uint64_t *)&unk_100488B90);
  __chkstk_darwin(v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = qword_10048A2F0;
  v7 = *(void **)(a2 + qword_10048A2F0);
  if (v7)
  {
    v8 = (void *)objc_opt_self(Gestalt);
    v9 = v7;
    if (objc_msgSend(v8, "jasperAvailable"))
      objc_msgSend(*(id *)&v9[qword_100485C80], "removeFromSuperview");
    v10 = sub_100142F50();
    v11 = objc_msgSend(v9, "copy");
    _bridgeAnyObjectToAny(_:)(v31, v11);
    swift_unknownObjectRelease(v11);
    v12 = type metadata accessor for HistoryViewCoordinator(0);
    swift_dynamicCast(&v30, v31, (char *)&type metadata for Any + 8, v12, 6);
    if ((v13 & 1) != 0)
    {
      v14 = v30;
      v29 = qword_100485D78;
      *((_BYTE *)v30 + qword_100485D78) = 1;
      v15 = *(void **)(a2 + v6);
      *(_QWORD *)(a2 + v6) = v14;
      v16 = v14;

      if (objc_msgSend(v8, "jasperAvailable"))
      {
        v17 = *(void **)(a2 + qword_10048A398);
        if (!v17)
        {
          __break(1u);
          return;
        }
        objc_msgSend(v17, "addSubview:", *(_QWORD *)&v16[qword_100485C80]);
      }
      v28 = v14;
      v18 = *((_QWORD *)v10 + 2);
      if (v18)
      {
        v19 = type metadata accessor for MeasurementHistoryItem(0);
        v20 = v10;
        v21 = *(_QWORD *)(v19 - 8);
        v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
        v23 = *(_QWORD *)(v21 + 72);
        swift_bridgeObjectRetain(v20);
        v27 = v24;
        v25 = v24 + v22 + v23 * (v18 - 1);
        do
        {
          --v18;
          sub_100036344(v25, (uint64_t)v5, type metadata accessor for MeasurementHistoryItem);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v5, 0, 1, v19);
          sub_100148100((uint64_t)v5, v26);
          sub_100036600((uint64_t)v5, (uint64_t *)&unk_100488B90);
          v25 -= v23;
        }
        while (v18);

        swift_bridgeObjectRelease_n(v27, 2);
      }
      else
      {

        swift_bridgeObjectRelease(v10);
      }
      v28[v29] = 0;

    }
    else
    {

      swift_bridgeObjectRelease(v10);
    }
  }
}

void sub_1001CD8F4(void *a1)
{
  id v1;

  v1 = a1;
  sub_1001CBD4C();

}

double sub_1001CD928(char a1)
{
  char *v1;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t (*v8)(_BYTE *, __n128);
  __n128 v9;
  void (*v10)(_BYTE *, _QWORD);
  uint64_t v11;
  double result;
  _BYTE v13[32];
  objc_super v14;

  v14.receiver = v1;
  v14.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v14, "viewDidAppear:", a1 & 1);
  v3 = sub_1001CA908();
  v4 = objc_opt_self(NonRotatingARSCNView);
  v5 = (void *)swift_dynamicCastObjCClass(v3, v4);
  if (v5)
    objc_msgSend(v5, "lockRendererOrientation");

  v6 = sub_1001CA908();
  objc_msgSend(v6, "setNeedsLayout");

  v7 = sub_1001CA908();
  objc_msgSend(v7, "layoutIfNeeded");

  v8 = *(uint64_t (**)(_BYTE *, __n128))(**(_QWORD **)&v1[qword_10048A3A8] + 400);
  v9 = swift_retain();
  v10 = (void (*)(_BYTE *, _QWORD))v8(v13, v9);
  *(_BYTE *)(v11 + 2) = 1;
  v10(v13, 0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1001CDA14(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1001CD928(a3);

}

double sub_1001CDA54(void *a1, uint64_t a2, uint64_t a3)
{
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(_BYTE *);
  void (*v7)(_BYTE *, _QWORD);
  uint64_t v8;
  double result;
  _BYTE v10[32];
  objc_super v11;

  v11.receiver = a1;
  v11.super_class = (Class)swift_getObjectType(a1);
  v4 = (char *)v11.receiver;
  objc_msgSendSuper2(&v11, "viewDidDisappear:", a3);
  v5 = *(_QWORD *)&v4[qword_10048A3A8];
  v6 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)v5 + 400);
  swift_retain(v5);
  v7 = (void (*)(_BYTE *, _QWORD))v6(v10);
  *(_BYTE *)(v8 + 2) = 0;
  v7(v10, 0);

  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

id sub_1001CDAF0(uint64_t a1)
{
  id result;

  result = *(id *)(a1 + qword_10048A378);
  if (result)
    return objc_msgSend(result, "removeFromSuperview");
  return result;
}

id sub_1001CDB10(void *a1)
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType(a1);
  return objc_msgSendSuper2(&v2, "didReceiveMemoryWarning");
}

void sub_1001CDB4C(char *a1, char a2, double a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;

  v6 = *(void **)&a1[qword_10048A350];
  if (v6)
    objc_msgSend(v6, "setAlpha:", a3);
  v7 = *(void **)&a1[qword_10048A368];
  if (v7)
    objc_msgSend(v7, "setAlpha:", a3);
  if (!objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
    goto LABEL_22;
  v8 = *(_QWORD *)&a1[qword_10048A2F0];
  if (v8)
    objc_msgSend(*(id *)(v8 + qword_100485C80), "setAlpha:", a3);
  v9 = objc_msgSend(a1, "view");
  if (!v9)
    goto LABEL_27;
  v10 = v9;
  sub_100149870();
  v12 = v11;

  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v17 = v12;
    else
      v17 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(v12);
    if (v13)
      goto LABEL_11;
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v13)
    {
LABEL_11:
      if (v13 >= 1)
      {
        for (i = 0; i != v13; ++i)
        {
          if ((v12 & 0xC000000000000001) != 0)
            v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
          else
            v15 = *(id *)(v12 + 8 * i + 32);
          v16 = v15;
          objc_msgSend(v15, "setAlpha:", a3);

        }
        goto LABEL_21;
      }
      __break(1u);
LABEL_27:
      __break(1u);
      return;
    }
  }
LABEL_21:
  swift_bridgeObjectRelease(v12);
LABEL_22:
  if ((a2 & 1) != 0)
  {
    v18 = *(void **)&a1[qword_10048A370];
    if (v18)
      objc_msgSend(v18, "setAlpha:", a3);
  }
}

void sub_1001CDD20(void *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *Strong;
  id v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(__n128);
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  uint64_t *v49;
  void *v50;
  uint64_t v51;
  _QWORD v52[3];

  v2 = v1;
  v4 = (void *)type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1001CA908();
  objc_msgSend(a1, "locationInView:", v7);
  v9 = v8;
  v11 = v10;

  if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable"))
  {
    swift_retain();
    StateValue.wrappedValue.getter(v52, v12);
    swift_release();
    Strong = (char *)swift_unknownObjectWeakLoadStrong(v52, v13);
    sub_100189364((uint64_t)v52);
    if (Strong)
    {
      v15 = *(id *)&Strong[OBJC_IVAR____TtC7Measure17CardContainerView_draggableView];

      v16 = sub_1001CA908();
      objc_msgSend(v16, "convertPoint:toCoordinateSpace:", v15, *(double *)&v9, *(double *)&v11);
      v18 = v17;
      v20 = v19;

      LOBYTE(v16) = objc_msgSend(v15, "pointInside:withEvent:", 0, v18, v20);
      if ((v16 & 1) != 0)
        return;
    }
  }
  v21 = sub_1001CA908();
  v22 = objc_msgSend(v21, "overlaySKScene");

  if (v22)
  {
    objc_msgSend(v22, "convertPointFromView:", *(double *)&v9, *(double *)&v11);
    v23 = objc_msgSend(v22, "nodesAtPoint:");
    v24 = sub_100018148(0, (unint64_t *)&unk_10048A600, SKNode_ptr);
    v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

    if ((unint64_t)v25 >> 62)
    {
LABEL_22:
      if (v25 < 0)
        v39 = v25;
      else
        v39 = v25 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v25);
      v26 = _CocoaArrayWrapper.endIndex.getter(v39);
      swift_bridgeObjectRelease(v25);
      if (v26)
      {
LABEL_7:
        v49 = v2;
        v50 = v4;
        v51 = v6;
        v27 = 0;
        v6 = 4;
        v2 = &OBJC_IVAR____TtC7Measure19TouchableSpriteNode_delegate;
        do
        {
          if ((v25 & 0xC000000000000001) != 0)
            v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v25);
          else
            v28 = *(id *)(v25 + 8 * v6);
          v4 = v28;
          v29 = v6 - 3;
          if (__OFADD__(v6 - 4, 1))
          {
            __break(1u);
            goto LABEL_22;
          }
          v30 = type metadata accessor for TouchableSpriteNode();
          v31 = swift_dynamicCastClass(v4, v30);
          if (v31)
          {
            v33 = v31 + OBJC_IVAR____TtC7Measure19TouchableSpriteNode_delegate;
            v34 = swift_unknownObjectWeakLoadStrong(v31 + OBJC_IVAR____TtC7Measure19TouchableSpriteNode_delegate, v32);
            v35 = v4;
            swift_unknownObjectRelease(v34);
            if (v34)
            {
              v37 = swift_unknownObjectWeakLoadStrong(v33, v36);
              if (!v37)
              {
                __break(1u);
                goto LABEL_36;
              }
              v38 = v37;
              v27 = sub_1000C2B08();

              swift_unknownObjectRelease(v38);
            }
            else
            {

              v27 = 0;
            }
          }
          else
          {

          }
          ++v6;
        }
        while (v29 != v26);

        swift_bridgeObjectRelease(v25);
        v4 = v50;
        v6 = v51;
        v2 = v49;
        if ((v27 & 1) == 0)
          goto LABEL_27;
        goto LABEL_28;
      }
    }
    else
    {
      v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v26)
        goto LABEL_7;
    }

    swift_bridgeObjectRelease(v25);
  }
LABEL_27:
  v40 = *(uint64_t (**)(__n128))(**(_QWORD **)((char *)v2 + qword_10048A3A0) + 200);
  v41 = swift_retain();
  v42 = v40(v41);
  swift_release();
  v43 = swift_allocObject(&unk_10044C540, 32, 7);
  *(_QWORD *)(v43 + 16) = v9;
  *(_QWORD *)(v43 + 24) = v11;
  (*(void (**)(void (*)(uint64_t), uint64_t))(*(_QWORD *)v42 + 416))(sub_1001CF418, v43);
  swift_release();
  swift_release();
LABEL_28:
  if (qword_10047A930 != -1)
    swift_once(&qword_10047A930, sub_100083368);
  v44 = (void *)qword_1004AF240;
  if (qword_1004AF240)
  {
    v45 = qword_1004AF240 + qword_100487428;
    swift_beginAccess(qword_1004AF240 + qword_100487428, v52, 0, 0);
    sub_100036344(v45, v6, type metadata accessor for DebugSessionCoordinator.RecordReplayState);
    if (swift_getEnumCaseMultiPayload(v6, v4) == 1)
    {
      v46 = *(void **)v6;
      v47 = v44;
      v48 = sub_1000E1D74();

      sub_1000695D4(0, v9, v11, 0);
    }
    else
    {
      sub_10007F080(v6);
    }
  }
  else
  {
LABEL_36:
    __break(1u);
  }
}

void sub_1001CE1B4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1001CDD20(v4);

}

uint64_t sub_1001CE208(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  char v9;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  v9 = sub_1001CF2F8(v7);

  return v9 & 1;
}

id sub_1001CE264(void *a1)
{
  char *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, __n128);
  __n128 v30;
  id v31;
  objc_super v33;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  *(_QWORD *)&v1[qword_10048A2E0] = 0;
  *(_QWORD *)&v1[qword_10048A2E8] = 0;
  *(_QWORD *)&v1[qword_10048A2F0] = 0;
  v5 = qword_10048A2F8;
  v6 = sub_10000EDC8((uint64_t *)&unk_10048A5C0);
  KeyPath = swift_getKeyPath(&unk_1003BC608);
  v8 = qword_10047AD88;
  v9 = v2;
  if (v8 != -1)
    swift_once(&qword_10047AD88, sub_1001883CC);
  v10 = qword_1004AF890;
  v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v6 + 272);
  v12 = swift_retain();
  *(_QWORD *)&v9[v5] = v11(KeyPath, v10, v12);
  v13 = qword_10048A300;
  sub_10000EDC8(&qword_100483B60);
  v14 = swift_getKeyPath(&unk_1003BC630);
  v15 = type metadata accessor for MainLoop(0);
  *(_QWORD *)&v9[v13] = MutableStateValue.__allocating_init(_:_:)(v14, v15);
  *(_QWORD *)&v9[qword_10048A308] = 0;
  *(_QWORD *)&v9[qword_10048A310] = 0;
  *(_QWORD *)&v9[qword_10048A318] = 0;
  *(_QWORD *)&v9[qword_10048A320] = 0;
  *(_QWORD *)&v9[qword_10048A328] = 0;
  *(_QWORD *)&v9[qword_10048A330] = 0;
  *(_QWORD *)&v9[qword_10048A338] = 0;
  *(_QWORD *)&v9[qword_10048A340] = 0;
  *(_QWORD *)&v9[qword_10048A348] = 0;
  *(_QWORD *)&v9[qword_10048A350] = 0;
  *(_QWORD *)&v9[qword_10048A358] = 0;
  *(_QWORD *)&v9[qword_10048A360] = 0;
  *(_QWORD *)&v9[qword_10048A368] = 0;
  *(_QWORD *)&v9[qword_10048A370] = 0;
  *(_QWORD *)&v9[qword_10048A378] = 0;
  *(_QWORD *)&v9[qword_10048A380] = 0;
  v16 = qword_10048A388;
  v17 = type metadata accessor for MotionObserver(0);
  v18 = (uint64_t *)swift_allocObject(v17, 104, 7);
  *(_QWORD *)&v9[v16] = sub_1001CE9E0(v18);
  v9[qword_10048A390] = 0;
  *(_QWORD *)&v9[qword_10048A398] = 0;
  v19 = qword_10048A3A0;
  sub_10000EDC8((uint64_t *)&unk_10048A5D0);
  v20 = swift_getKeyPath(&unk_1003BC658);
  *(_QWORD *)&v9[v19] = MutableStateValue.__allocating_init(_:_:)(v20, ObjectType);
  v21 = qword_10048A3A8;
  sub_10000EDC8(&qword_100483B68);
  v22 = swift_getKeyPath(&unk_1003BC680);
  *(_QWORD *)&v9[v21] = MutableStateValue.__allocating_init(_:_:)(v22, ObjectType);
  v23 = qword_10048A3B0;
  sub_10000EDC8((uint64_t *)&unk_10048A5E0);
  v24 = swift_getKeyPath(&unk_1003BC6A8);
  *(_QWORD *)&v9[v23] = MutableStateValue.__allocating_init(_:_:)(v24, ObjectType);
  v25 = qword_10048A3B8;
  v26 = sub_10000EDC8(&qword_10047EA08);
  v27 = swift_getKeyPath(&unk_1003BC6D0);
  v28 = qword_1004AF890;
  v29 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v26 + 272);
  v30 = swift_retain();
  *(_QWORD *)&v9[v25] = v29(v27, v28, v30);

  v33.receiver = v9;
  v33.super_class = ObjectType;
  v31 = objc_msgSendSuper2(&v33, "initWithCoder:", a1);

  return v31;
}

id sub_1001CE594(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1001CE264(a3);
}

uint64_t type metadata accessor for ViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_10048A3E8;
  if (!qword_10048A3E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ViewController);
  return result;
}

uint64_t sub_1001CE5F4(uint64_t a1)
{
  _QWORD v2[28];

  v2[0] = "\b";
  v2[1] = "\b";
  v2[2] = "\b";
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = "\b";
  v2[6] = "\b";
  v2[7] = "\b";
  v2[8] = "\b";
  v2[9] = "\b";
  v2[10] = "\b";
  v2[11] = "\b";
  v2[12] = "\b";
  v2[13] = "\b";
  v2[14] = "\b";
  v2[15] = "\b";
  v2[16] = "\b";
  v2[17] = "\b";
  v2[18] = "\b";
  v2[19] = "\b";
  v2[20] = "\b";
  v2[21] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[22] = &unk_1003BC5F0;
  v2[23] = "\b";
  v2[24] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[25] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[26] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[27] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 256, 28, v2, a1 + 184);
}

uint64_t sub_1001CE67C()
{
  return type metadata accessor for ViewController(0);
}

void sub_1001CE754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *Strong;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD *, __n128);
  __n128 v27;
  void (*v28)(_QWORD *, _QWORD);
  uint64_t v29;
  _QWORD v30[4];

  v1 = v0;
  swift_retain();
  StateValue.wrappedValue.getter(v30, v2);
  swift_release();
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v30, v3);
  sub_100189364((uint64_t)v30);
  if (Strong)
  {
    v5 = *(id *)&Strong[OBJC_IVAR____TtC7Measure17CardContainerView_draggableView];

    v6 = objc_msgSend(v5, "superview");
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v5, "layer");
      v9 = objc_msgSend(v8, "presentationLayer");

      if (!v9)
        v9 = objc_msgSend(v5, "layer");
      objc_msgSend(v9, "frame");
      v11 = v10;
      v13 = v12;
      v15 = v14;
      v17 = v16;

      objc_msgSend(v7, "convertRect:toView:", 0, v11, v13, v15, v17);
      v19 = v18;
      v21 = v20;
      v23 = v22;
      v25 = v24;
      v26 = *(uint64_t (**)(_QWORD *, __n128))(**(_QWORD **)(v1 + qword_10048A300) + 400);
      v27 = swift_retain();
      v28 = (void (*)(_QWORD *, _QWORD))v26(v30, v27);
      *(_QWORD *)v29 = v19;
      *(_QWORD *)(v29 + 8) = v21;
      *(_QWORD *)(v29 + 16) = v23;
      *(_QWORD *)(v29 + 24) = v25;
      *(_BYTE *)(v29 + 32) = 0;
      v28(v30, 0);

      swift_release();
    }
    else
    {

    }
  }
}

uint64_t sub_1001CE954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1001CE978(uint64_t a1)
{
  uint64_t v1;

  sub_1001CB434(a1, v1);
}

uint64_t sub_1001CE980@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 136);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001CE990@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 104);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001CE9A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 296);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001CE9B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 296);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001CE9C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 280);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001CE9D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 280);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001CE9E0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t KeyPath;
  id v6;
  uint64_t v7;
  _QWORD v9[5];
  _QWORD v10[5];

  v2 = *a1;
  v10[3] = &type metadata for Configurations.Default;
  v10[4] = &protocol witness table for Configurations.Default;
  v9[0] = 0;
  v3 = sub_10000EDC8((uint64_t *)&unk_10048A5F0);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v4 = swift_retain(a1);
  a1[8] = CurrentValueSubject.init(_:)(v9, v4);
  sub_10000EDC8(&qword_100484C20);
  KeyPath = swift_getKeyPath(&unk_1003BC6F8);
  a1[9] = MutableStateValue.__allocating_init(_:_:)(KeyPath, v2);
  v6 = objc_allocWithZone((Class)CMMotionManager);
  a1[10] = (uint64_t)objc_msgSend(v6, "init", v9[0]);
  *((_BYTE *)a1 + 88) = 0;
  a1[12] = 0;
  swift_release(a1);
  sub_100068B24((uint64_t)v10, (uint64_t)v9);
  v7 = StateObserver.init(configuration:)(v9);
  sub_10000F690(v10);
  return v7;
}

uint64_t sub_1001CEAE0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 136);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001CEAF0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 104);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1001CEB00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v4 = type metadata accessor for WeakLinesRendererDelegate();
  v5 = swift_allocObject(v4, 32, 7);
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit(v5 + 16, 0);
  *(_QWORD *)(v5 + 24) = &off_100443C00;
  swift_unknownObjectWeakAssign(v6, a1);
  swift_beginAccess(a2 + 64, v13, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v8 = *(_QWORD *)(a2 + 64) & 0xFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v8 + 0x10);
  v9 = *(_QWORD *)(v8 + 24);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v5);
  specialized Array._endMutation()(v11);
  return swift_endAccess(v13);
}

double sub_1001CEBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  double result;
  _BYTE v13[24];

  v4 = type metadata accessor for WeakLinesRendererDelegate();
  v5 = swift_allocObject(v4, 32, 7);
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit(v5 + 16, 0);
  *(_QWORD *)(v5 + 24) = &off_100445020;
  swift_unknownObjectWeakAssign(v6, a1);
  swift_beginAccess(a2 + 64, v13, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v8 = *(_QWORD *)(a2 + 64) & 0xFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v8 + 0x10);
  v9 = *(_QWORD *)(v8 + 24);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v5);
  specialized Array._endMutation()(v11);
  *(_QWORD *)&result = swift_endAccess(v13).n128_u64[0];
  return result;
}

double sub_1001CEC98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  double result;
  _BYTE v13[24];

  v4 = type metadata accessor for WeakLinesRendererDelegate();
  v5 = swift_allocObject(v4, 32, 7);
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit(v5 + 16, 0);
  *(_QWORD *)(v5 + 24) = &off_1004433F0;
  swift_unknownObjectWeakAssign(v6, a1);
  swift_beginAccess(a2 + 64, v13, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v8 = *(_QWORD *)(a2 + 64) & 0xFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v8 + 0x10);
  v9 = *(_QWORD *)(v8 + 24);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v5);
  specialized Array._endMutation()(v11);
  *(_QWORD *)&result = swift_endAccess(v13).n128_u64[0];
  return result;
}

double sub_1001CED64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  double result;
  _BYTE v13[24];

  v4 = type metadata accessor for WeakLinesRendererDelegate();
  v5 = swift_allocObject(v4, 32, 7);
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit(v5 + 16, 0);
  *(_QWORD *)(v5 + 24) = &off_100440000;
  swift_unknownObjectWeakAssign(v6, a1);
  swift_beginAccess(a2 + 64, v13, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v8 = *(_QWORD *)(a2 + 64) & 0xFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v8 + 0x10);
  v9 = *(_QWORD *)(v8 + 24);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v5);
  specialized Array._endMutation()(v11);
  *(_QWORD *)&result = swift_endAccess(v13).n128_u64[0];
  return result;
}

double sub_1001CEE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  double result;
  _BYTE v13[24];

  v4 = type metadata accessor for WeakCoachingControllerDelegate();
  v5 = swift_allocObject(v4, 32, 7);
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit(v5 + 16, 0);
  *(_QWORD *)(v5 + 24) = &off_100440290;
  swift_unknownObjectWeakAssign(v6, a1);
  swift_beginAccess(a2 + 160, v13, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v8 = *(_QWORD *)(a2 + 160) & 0xFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v8 + 0x10);
  v9 = *(_QWORD *)(v8 + 24);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v5);
  specialized Array._endMutation()(v11);
  *(_QWORD *)&result = swift_endAccess(v13).n128_u64[0];
  return result;
}

double sub_1001CEEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  double result;
  _BYTE v13[24];

  v4 = type metadata accessor for WeakCoachingControllerDelegate();
  v5 = swift_allocObject(v4, 32, 7);
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit(v5 + 16, 0);
  *(_QWORD *)(v5 + 24) = &off_1004493C8;
  swift_unknownObjectWeakAssign(v6, a1);
  swift_beginAccess(a2 + 160, v13, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v8 = *(_QWORD *)(a2 + 160) & 0xFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v8 + 0x10);
  v9 = *(_QWORD *)(v8 + 24);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v5);
  specialized Array._endMutation()(v11);
  *(_QWORD *)&result = swift_endAccess(v13).n128_u64[0];
  return result;
}

double sub_1001CEFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  double result;
  _BYTE v13[24];

  v4 = type metadata accessor for WeakCoachingControllerDelegate();
  v5 = swift_allocObject(v4, 32, 7);
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit(v5 + 16, 0);
  *(_QWORD *)(v5 + 24) = &off_1004425C8;
  swift_unknownObjectWeakAssign(v6, a1);
  swift_beginAccess(a2 + 160, v13, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v8 = *(_QWORD *)(a2 + 160) & 0xFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v8 + 0x10);
  v9 = *(_QWORD *)(v8 + 24);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v5);
  specialized Array._endMutation()(v11);
  *(_QWORD *)&result = swift_endAccess(v13).n128_u64[0];
  return result;
}

double sub_1001CF094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  Swift::String v7;
  void *object;
  Swift::String v9;
  uint64_t v10;
  Swift::String v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v22[2];
  uint64_t v23;
  Swift::String v24;
  __int128 v25;

  if (qword_10047AA30 != -1)
    swift_once(&qword_10047AA30, sub_1000E115C);
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  v24._countAndFlagsBits = 0xD000000000000012;
  v24._object = (void *)0x80000001003E6470;
  v7._countAndFlagsBits = KeyPath.description.getter();
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._countAndFlagsBits = 0x203A6F7420;
  v9._object = (void *)0xE500000000000000;
  String.append(_:)(v9);
  sub_10000EDC8(&qword_10048A630);
  NSKeyValueObservedChange.newValue.getter(v22);
  v10 = sub_10000EDC8(&qword_10048A638);
  v11._countAndFlagsBits = String.init<A>(describing:)(v22, v10);
  v12 = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v12);
  v13 = v24._object;
  Log.debug(_:isPrivate:)(v24, 0);
  swift_bridgeObjectRelease(v13);
  NSKeyValueObservedChange.newValue.getter(v22);
  v14 = *(_QWORD *)&v22[0];
  if (*(_QWORD *)&v22[0])
  {
    type metadata accessor for UIContentSizeCategory(0);
    *((_QWORD *)&v25 + 1) = v15;
    v24._countAndFlagsBits = v14;
    v16 = v15 == 0;
  }
  else
  {
    v24 = (Swift::String)0;
    v25 = 0u;
    v16 = 1;
  }
  swift_retain();
  v17 = a5;
  sub_1001C8354();
  v23 = v18;
  if (v16)
  {
    sub_100036600((uint64_t)&v24, (uint64_t *)&unk_10047ED00);
    sub_100094098(a4, v17, v22);

    swift_release();
    sub_100036600((uint64_t)v22, (uint64_t *)&unk_10047ED00);
    v19 = v23;
  }
  else
  {
    v19 = v18;
    sub_100020848(&v24, v22);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v19);
    sub_1000BDAFC(v22, a4, v17, isUniquelyReferenced_nonNull_native);

    swift_release();
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  return sub_1001C8494(v19);
}

uint64_t sub_1001CF2F8(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  char *v9;
  void *v10;
  char *v11;
  id v12;
  unsigned __int8 v13;

  v3 = objc_msgSend(a1, "view");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(a1, "view");
    if (v5)
    {
      v6 = v5;
      v7 = objc_opt_self(UIControl);
      if (swift_dynamicCastObjCClass(v6, v7))
      {

        return 0;
      }

    }
    if (objc_msgSend((id)objc_opt_self(Gestalt), "jasperAvailable")
      && (v9 = *(char **)(v1 + qword_10048A2F0)) != 0)
    {
      v10 = *(void **)&v9[qword_100485C80];
      v11 = v9;
      v12 = v10;
      v13 = objc_msgSend(v4, "isDescendantOfView:", v12);

      if ((v13 & 1) != 0)
        return 0;
    }
    else
    {

    }
  }
  return 1;
}

uint64_t sub_1001CF408()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001CF418(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  sub_100090D48(5u);
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = v4;
}

const char *sub_1001CF450()
{
  return "preferredContentSizeCategory";
}

id sub_1001CF45C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "preferredContentSizeCategory");
  *a2 = result;
  return result;
}

BOOL sub_1001CF494(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

uint64_t sub_1001CF4A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 28, 7);
}

double sub_1001CF4B4(uint64_t a1)
{
  uint64_t v1;
  double result;
  int v3;

  result = *(double *)(v1 + 16);
  v3 = *(_DWORD *)(v1 + 24);
  *(double *)(a1 + 24) = result;
  *(_DWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_1001CF4C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001CF4EC(double a1, double a2)
{
  return sub_1001CD11C(a1, a2) & 1;
}

void sub_1001CF510(uint64_t a1)
{
  uint64_t v1;

  sub_1001CD678(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001CF518(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001CF528(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_1001CF530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10048A620;
  if (!qword_10048A620)
  {
    v1 = sub_100012B80(&qword_100483588);
    result = swift_getWitnessTable(&protocol conformance descriptor for PassthroughSubject<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10048A620);
  }
  return result;
}

uint64_t sub_1001CF57C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

double sub_1001CF5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001CF094(a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1001CF5C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

void sub_1001CF5F8(char a1, double a2, double a3, double a4)
{
  char *v4;
  double v5;
  double v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t **v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  uint64_t **v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  void *v74;
  id v75;
  void *v76;
  id v77;
  void *v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  char *v85;
  id v86;
  id v87;
  void *v88;
  double v89;
  double v90;
  double v91;
  double v92;
  char v93;
  char v94;
  char v95;
  id v96;
  id v97;
  void *v98;
  double v99;
  double v100;
  id v101;
  id v102;
  void *v103;
  double v104;
  double v105;
  id v106;
  id v107;
  void *v108;
  double v109;
  double v110;
  void *v111;
  id v112;
  void *v113;
  id v114;
  void *v115;
  id v116;
  void *v117;
  id v118;
  void *v119;
  id v120;
  void *v121;
  id v122;
  void *v123;
  id v124;
  void *v125;
  id v126;
  void *v127;
  id v128;
  void *v129;
  id v130;
  void *v131;
  id v132;
  void *v133;
  id v134;
  id v135;
  void *v136;
  id v137;
  void *v138;
  id v139;
  void *v140;
  id v141;
  void *v142;
  id v143;
  void *v144;
  id v145;
  id v146;
  id v147;
  id v148;
  objc_class *v149;
  id v150;
  char *v151;
  id v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  char *v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  id v170;
  id v171;
  id v172;
  id v173;
  id v174;
  id v175;
  id v176;
  id v177;
  id v178;
  uint64_t v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char v201;
  char v202;
  char v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  double v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;

  v7 = v4;
  v9 = sub_1001D0D24(3, a2, a3, a4);
  v11 = v10;
  v13 = v12;
  sub_1001D0E30(v9, v10, v12, &v212);
  v14 = v212;
  v15 = v213;
  v198 = v215;
  v194 = v218;
  v195 = v217;
  v16 = v220;
  v196 = v219;
  v17 = v222;
  v191 = v216;
  v192 = v221;
  v18 = v223;
  v183 = v224;
  v184 = v214;
  v182 = v225;
  v193 = v226;
  v190 = v227;
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v19 = v9 + v13;
  if (__OFADD__(v9, v13))
  {
    __break(1u);
    goto LABEL_70;
  }
  v20 = v19 + v11;
  if (__OFADD__(v19, v11))
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v21 = __OFADD__(v11, v9);
  v9 += v11;
  if (v21)
  {
LABEL_71:
    __break(1u);
LABEL_72:
    swift_once(&qword_10047A7E8, sub_100012D28);
    v20 = v210;
    goto LABEL_8;
  }
  v6 = (double)v9;
  if (v20 < 1)
    v5 = 140.0;
  else
    v5 = v6 * 242.487113 / (double)v20;
  v210 = v19 + v11;
  if (qword_10047A7E8 != -1)
    goto LABEL_72;
LABEL_8:
  v188 = v14;
  v189 = v16;
  v187 = v15;
  v180 = a1;
  v22 = qword_1004AF138;
  if (qword_10047A7F0 != -1)
  {
    swift_once(&qword_10047A7F0, sub_100012D38);
    v20 = v210;
  }
  v23 = *(double *)&qword_1004AF140;
  v209 = v9;
  v212 = v9;
  v213 = v20;
  v214 = *(_QWORD *)&v5;
  v215 = 0x4061800000000000;
  v216 = qword_1004AF140;
  v217 = qword_1004AF140;
  v186 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v24 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v25 = OBJC_IVAR____TtC7Measure12SketchObject_backgroundLines;
  v26 = *(void **)&v7[OBJC_IVAR____TtC7Measure12SketchObject_backgroundLines];
  *(_QWORD *)&v7[OBJC_IVAR____TtC7Measure12SketchObject_backgroundLines] = v24;

  v27 = *(void **)&v7[v25];
  if (!v27)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v28 = v27;
  v29 = sub_1001D0EE0(v16, v192, v17, v18, (uint64_t)&v212);
  v30 = sub_100012E74(v29, 1, 0, 0);

  objc_msgSend(v28, "addSublayer:", v30);
  v31 = *(void **)&v7[v25];
  if (!v31)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  v32 = v31;
  v33 = sub_1001D0EE0(v17, v18, v184, v198, (uint64_t)&v212);
  v34 = sub_100012E74(v33, 1, 0, 0);

  objc_msgSend(v32, "addSublayer:", v34);
  v35 = *(void **)&v7[v25];
  if (!v35)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  v36 = v35;
  v37 = sub_1001D0EE0(v17, v18, v183, v182, (uint64_t)&v212);
  v38 = sub_100012E74(v37, 1, 0, 0);

  objc_msgSend(v36, "addSublayer:", v38);
  v39 = sub_1001D1008(v188, v15, v184, v198, v191, v195, v194, v196, v16, v192, v183, v182, v193, v190);
  v185 = v40;
  v41 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v42 = *(void **)&v7[OBJC_IVAR____TtC7Measure12SketchObject_foregroundLines];
  v208 = OBJC_IVAR____TtC7Measure12SketchObject_foregroundLines;
  *(_QWORD *)&v7[OBJC_IVAR____TtC7Measure12SketchObject_foregroundLines] = v41;

  v43 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v44 = OBJC_IVAR____TtC7Measure12SketchObject_topSurface;
  v45 = *(void **)&v7[OBJC_IVAR____TtC7Measure12SketchObject_topSurface];
  *(_QWORD *)&v7[OBJC_IVAR____TtC7Measure12SketchObject_topSurface] = v43;

  v46 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v47 = *(void **)&v7[OBJC_IVAR____TtC7Measure12SketchObject_shortSideSurface];
  v200 = OBJC_IVAR____TtC7Measure12SketchObject_shortSideSurface;
  *(_QWORD *)&v7[OBJC_IVAR____TtC7Measure12SketchObject_shortSideSurface] = v46;

  v48 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v49 = *(void **)&v7[OBJC_IVAR____TtC7Measure12SketchObject_longSideSurface];
  v199 = OBJC_IVAR____TtC7Measure12SketchObject_longSideSurface;
  *(_QWORD *)&v7[OBJC_IVAR____TtC7Measure12SketchObject_longSideSurface] = v48;

  v50 = v39;
  v51 = *(_QWORD *)(v39 + 16);
  v181 = v25;
  v197 = v44;
  if (v51)
  {
    swift_bridgeObjectRetain(v39);
    v179 = v52;
    v53 = (char *)(v52 + 66);
    v54 = &off_10046F000;
    while (1)
    {
      v58 = *(void **)&v7[v208];
      if (!v58)
        break;
      v59 = v7;
      v60 = *(_QWORD *)(v53 - 34);
      v61 = *(_QWORD *)(v53 - 26);
      v62 = *(_QWORD *)(v53 - 18);
      v63 = *(_QWORD *)(v53 - 10);
      v202 = *(v53 - 1);
      v203 = *(v53 - 2);
      v201 = *v53;
      v64 = v58;
      v205 = v61;
      v206 = v60;
      v204 = v62;
      v65 = sub_1001D0EE0(v60, v61, v62, v63, (uint64_t)&v212);
      v66 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
      v67 = objc_msgSend(v65, "CGPath");
      objc_msgSend(v66, "setPath:", v67);

      v68 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      v69 = v54;
      v70 = objc_msgSend(v68, (SEL)v54[216]);

      objc_msgSend(v66, "setFillColor:", v70);
      if (qword_10047A7C8 != -1)
        swift_once(&qword_10047A7C8, sub_100012C9C);
      v71 = objc_msgSend((id)qword_1004AF118, (SEL)v69[216]);
      objc_msgSend(v66, "setStrokeColor:", v71);

      v54 = v69;
      if (qword_10047A7E0 != -1)
        swift_once(&qword_10047A7E0, sub_100012D18);
      objc_msgSend(v66, "setLineWidth:", *(double *)&qword_1004AF130);

      objc_msgSend(v64, "addSublayer:", v66);
      v7 = v59;
      if ((v203 & 1) == 0)
      {
        v72 = *(void **)&v59[v197];
        if (!v72)
          goto LABEL_78;
        v73 = v72;
        v74 = sub_1001D0EE0(v206, v205, v204, v63, (uint64_t)&v212);
        v75 = sub_100012E74(v74, 0, 0, 0);

        objc_msgSend(v73, "addSublayer:", v75);
        v54 = &off_10046F000;
      }
      if ((v202 & 1) == 0)
      {
        v76 = *(void **)&v59[v200];
        if (!v76)
          goto LABEL_79;
        v77 = v76;
        v78 = sub_1001D0EE0(v206, v205, v204, v63, (uint64_t)&v212);
        v79 = sub_100012E74(v78, 0, 0, 0);

        objc_msgSend(v77, "addSublayer:", v79);
        v54 = &off_10046F000;
      }
      if ((v201 & 1) == 0)
      {
        v80 = *(void **)&v59[v199];
        if (!v80)
          goto LABEL_80;
        v55 = v80;
        v56 = sub_1001D0EE0(v206, v205, v204, v63, (uint64_t)&v212);
        v57 = sub_100012E74(v56, 0, 0, 0);

        objc_msgSend(v55, "addSublayer:", v57);
      }
      v53 += 40;
      if (!--v51)
      {
        swift_bridgeObjectRelease(v179);
        v50 = v179;
        v44 = v197;
        goto LABEL_32;
      }
    }
    __break(1u);
    goto LABEL_74;
  }
LABEL_32:
  v207 = *(double *)&v22;
  swift_bridgeObjectRelease(v50);
  v81 = *(_QWORD *)(v185 + 16);
  v82 = v198;
  v83 = v210;
  if (v81)
  {
    v84 = (double)v210;
    v85 = (char *)(v185 + 50);
    while (1)
    {
      v88 = *(void **)&v7[v208];
      if (!v88)
        break;
      v89 = 0.0;
      v90 = (double)*(uint64_t *)(v85 - 18);
      v91 = 0.0;
      if (v209 >= 1)
        v91 = v23 + v5 * v90 / v6;
      v92 = (double)*(uint64_t *)(v85 - 10);
      if (v83 >= 1)
        v89 = v23 + v92 * 140.0 / v84;
      v93 = *(v85 - 2);
      v94 = *(v85 - 1);
      v95 = *v85;
      v96 = v88;
      v97 = sub_1000135EC(0, v91, v89);
      objc_msgSend(v96, "addSublayer:", v97);

      v98 = *(void **)&v7[v44];
      if (!v98)
        goto LABEL_75;
      v99 = 0.0;
      v100 = 0.0;
      if (v209 >= 1)
        v100 = v23 + v5 * v90 / v6;
      if (v210 >= 1)
        v99 = v23 + v92 * 140.0 / v84;
      v101 = v98;
      v102 = sub_1000135EC(v93, v100, v99);
      objc_msgSend(v101, "addSublayer:", v102);

      v103 = *(void **)&v7[v200];
      if (!v103)
        goto LABEL_76;
      v104 = 0.0;
      v105 = 0.0;
      if (v209 >= 1)
        v105 = v23 + v5 * v90 / v6;
      if (v210 >= 1)
        v104 = v23 + v92 * 140.0 / v84;
      v106 = v103;
      v107 = sub_1000135EC(v94, v105, v104);
      objc_msgSend(v106, "addSublayer:", v107);

      v108 = *(void **)&v7[v199];
      if (!v108)
        goto LABEL_77;
      v109 = 0.0;
      v110 = 0.0;
      v82 = v198;
      if (v209 >= 1)
        v110 = v23 + v5 * v90 / v6;
      if (v210 >= 1)
        v109 = v23 + v92 * 140.0 / v84;
      v85 += 24;
      v86 = v108;
      v87 = sub_1000135EC(v95, v110, v109);
      objc_msgSend(v86, "addSublayer:", v87);

      --v81;
      v83 = v210;
      if (!v81)
        goto LABEL_55;
    }
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
LABEL_55:
  swift_bridgeObjectRelease(v185);
  v111 = *(void **)&v7[v44];
  if (!v111)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  v112 = v111;
  v113 = sub_1001D1210(v188, v187, v184, v82, v191, v195, v194, v196, (uint64_t)&v212);
  v114 = sub_100012E74(v113, 0, 1, 0);

  objc_msgSend(v112, "addSublayer:", v114);
  v115 = *(void **)&v7[v44];
  if (!v115)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  v116 = v115;
  v117 = sub_1001D1210(v188, v187, v184, v198, v191, v195, v194, v196, (uint64_t)&v212);
  v118 = sub_100012E74(v117, 0, 1, 1);

  objc_msgSend(v116, "addSublayer:", v118);
  v119 = *(void **)&v7[v200];
  if (!v119)
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  v120 = v119;
  v121 = sub_1001D1210(v194, v196, v191, v195, v183, v182, v193, v190, (uint64_t)&v212);
  v122 = sub_100012E74(v121, 0, 1, 0);

  objc_msgSend(v120, "addSublayer:", v122);
  v123 = *(void **)&v7[v200];
  if (!v123)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  v124 = v123;
  v125 = sub_1001D1210(v194, v196, v191, v195, v183, v182, v193, v190, (uint64_t)&v212);
  v126 = sub_100012E74(v125, 0, 1, 1);

  objc_msgSend(v124, "addSublayer:", v126);
  v127 = *(void **)&v7[v199];
  if (!v127)
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  v128 = v127;
  v129 = sub_1001D1210(v188, v187, v194, v196, v193, v190, v189, v192, (uint64_t)&v212);
  v130 = sub_100012E74(v129, 0, 1, 0);

  objc_msgSend(v128, "addSublayer:", v130);
  v131 = *(void **)&v7[v199];
  if (!v131)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  v132 = v131;
  v133 = sub_1001D1210(v188, v187, v194, v196, v193, v190, v189, v192, (uint64_t)&v212);
  v134 = sub_100012E74(v133, 0, 1, 1);

  objc_msgSend(v132, "addSublayer:", v134);
  v135 = objc_msgSend(v186, "layer");
  if (!*(_QWORD *)&v7[v181])
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  v136 = v135;
  objc_msgSend(v135, "addSublayer:");

  v137 = objc_msgSend(v186, "layer");
  if (!*(_QWORD *)&v7[v208])
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v138 = v137;
  objc_msgSend(v137, "addSublayer:");

  v139 = objc_msgSend(v186, "layer");
  if (!*(_QWORD *)&v7[v197])
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  v140 = v139;
  objc_msgSend(v139, "addSublayer:");

  v141 = objc_msgSend(v186, "layer");
  if (!*(_QWORD *)&v7[v200])
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  v142 = v141;
  objc_msgSend(v141, "addSublayer:");

  v143 = objc_msgSend(v186, "layer");
  if (!*(_QWORD *)&v7[v199])
  {
LABEL_94:
    __break(1u);
    return;
  }
  v144 = v143;
  objc_msgSend(v143, "addSublayer:");

  objc_msgSend(*(id *)&v7[v197], "setHidden:", 1);
  objc_msgSend(*(id *)&v7[v200], "setHidden:", 1);
  objc_msgSend(*(id *)&v7[v199], "setHidden:", 1);
  objc_msgSend(v7, "addSubview:", v186);
  objc_msgSend(v186, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v145 = objc_msgSend(v186, "widthAnchor");
  v146 = objc_msgSend(v145, "constraintEqualToConstant:", v5 + v207);

  objc_msgSend(v146, "setActive:", 1);
  v147 = objc_msgSend(v186, "heightAnchor");
  v148 = objc_msgSend(v147, "constraintEqualToConstant:", v207 + 140.0);

  objc_msgSend(v148, "setActive:", 1);
  v149 = (objc_class *)type metadata accessor for SketchLabel();
  v150 = objc_allocWithZone(v149);
  v151 = sub_10012FDAC(76, 0xE100000000000000);
  objc_msgSend(v7, "addSubview:", v151);
  objc_msgSend(v151, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v152 = objc_msgSend(v151, "rightAnchor");
  v153 = objc_msgSend(v186, "rightAnchor");
  v154 = objc_msgSend(v152, "constraintEqualToAnchor:constant:", v153, -5.0);

  objc_msgSend(v154, "setActive:", 1);
  v155 = objc_msgSend(v151, "centerYAnchor");
  v156 = objc_msgSend(v186, "centerYAnchor");
  v157 = objc_msgSend(v155, "constraintEqualToAnchor:constant:", v156, (v207 + 140.0) * -0.37);

  objc_msgSend(v157, "setActive:", 1);
  v158 = objc_allocWithZone(v149);
  v159 = sub_10012FDAC(87, 0xE100000000000000);
  objc_msgSend(v7, "addSubview:", v159);
  objc_msgSend(v159, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v160 = objc_msgSend(v159, "centerXAnchor");
  v161 = objc_msgSend(v186, "leftAnchor");
  v162 = objc_msgSend(v160, "constraintEqualToAnchor:", v161);

  objc_msgSend(v162, "setActive:", 1);
  v163 = objc_msgSend(v159, "centerYAnchor");
  v164 = objc_msgSend(v186, "topAnchor");
  v165 = objc_msgSend(v163, "constraintEqualToAnchor:constant:", v164, 4.0);

  objc_msgSend(v165, "setActive:", 1);
  v166 = objc_msgSend(v159, "topAnchor");
  v167 = objc_msgSend(v7, "topAnchor");
  v168 = objc_msgSend(v166, "constraintEqualToAnchor:constant:", v167, 10.0);

  objc_msgSend(v168, "setActive:", 1);
  v169 = objc_allocWithZone(v149);
  v211 = sub_10012FDAC(72, 0xE100000000000000);
  objc_msgSend(v7, "addSubview:", v211);
  objc_msgSend(v211, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v170 = objc_msgSend(v211, "rightAnchor");
  v171 = objc_msgSend(v186, "leftAnchor");
  if (qword_10047A808 != -1)
    swift_once(&qword_10047A808, sub_100012DAC);
  v172 = objc_msgSend(v170, "constraintEqualToAnchor:constant:", v171, -*(double *)&qword_1004AF158);

  objc_msgSend(v172, "setActive:", 1);
  v173 = objc_msgSend(v211, "centerYAnchor");
  v174 = objc_msgSend(v186, "centerYAnchor");
  v175 = objc_msgSend(v173, "constraintEqualToAnchor:constant:", v174, (v207 + 140.0) * -0.1);

  objc_msgSend(v175, "setActive:", 1);
  v176 = objc_msgSend(v7, "centerXAnchor");
  v177 = objc_msgSend(v186, "centerXAnchor");
  v178 = objc_msgSend(v176, "constraintEqualToAnchor:", v177);

  objc_msgSend(v178, "setActive:", 1);
  sub_1001D09F0(v180);

}

void sub_1001D09F0(char a1)
{
  uint64_t v1;
  void *v3;

  v3 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v3, "begin");
  objc_msgSend(v3, "setDisableActions:", 1);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Measure12SketchObject_foregroundLines), "setHidden:", 1);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Measure12SketchObject_topSurface), "setHidden:", 1);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Measure12SketchObject_shortSideSurface), "setHidden:", 1);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Measure12SketchObject_longSideSurface), "setHidden:", 1);
  __asm { BR              X10 }
}

id sub_1001D0ABC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  v22 = *(void **)(v19 + v21);
  if (v22)
    objc_msgSend(v22, *(SEL *)(v20 + 2624), 0);
  return objc_msgSend(v18, "commit");
}

void sub_1001D0B0C()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(v0 + v1))
    JUMPOUT(0x1001D0AE8);
  JUMPOUT(0x1001D0ADCLL);
}

id sub_1001D0BC0(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure12SketchObject_topSurface] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure12SketchObject_longSideSurface] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure12SketchObject_shortSideSurface] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure12SketchObject_backgroundLines] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Measure12SketchObject_foregroundLines] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SketchObject();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id sub_1001D0C6C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SketchObject();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SketchObject()
{
  return objc_opt_self(_TtC7Measure12SketchObject);
}

uint64_t sub_1001D0D24(uint64_t result, double a2, double a3, double a4)
{
  uint64_t v5;
  double v6;
  uint64_t v7;
  double v8;

  if (a3 <= 0.0 || a3 > a2)
    return 2;
  v5 = result;
  if ((unint64_t)(result - 0x2000000000000000) >> 62 != 3)
  {
    __break(1u);
    goto LABEL_21;
  }
  v6 = round(a2 / a3 * (double)result);
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v7 = (uint64_t)v6;
  if ((uint64_t)v6 <= result)
    v7 = result;
  if (3 * result >= v7)
    result = v7;
  else
    result *= 3;
  v8 = round(a4 / a3 * (double)v5 + a4 / a3 * (double)v5);
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
    goto LABEL_24;
  if (v8 <= -9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v8 >= 9.22337204e18)
LABEL_26:
    __break(1u);
  return result;
}

uint64_t sub_1001D0E30@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  if (a2 == 0x8000000000000000)
  {
    __break(1u);
    goto LABEL_12;
  }
  v4 = -a2;
  if (__OFSUB__(0, -a2))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (__OFADD__(a2, v4))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v5 = a2 + result;
  if (__OFADD__(a2, result))
  {
LABEL_14:
    __break(1u);
    __break(1u);
    goto LABEL_15;
  }
  v6 = result;
  v7 = result;
  if (__OFSUB__(v5, a2))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = __OFSUB__(result, v4);
  v9 = result + a2;
  if (v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (__OFADD__(a2, a3))
  {
LABEL_17:
    __break(1u);
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(result, a3))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  result = v9 + a3;
  if (!__OFADD__(v9, a3))
  {
    *a4 = 0;
    a4[1] = a2;
    a4[2] = a2;
    a4[3] = 0;
    a4[4] = v5;
    a4[5] = v6;
    a4[6] = v7;
    a4[7] = v9;
    a4[8] = 0;
    a4[9] = a2 + a3;
    a4[10] = a2;
    a4[11] = a3;
    a4[12] = v5;
    a4[13] = v6 + a3;
    a4[14] = v7;
    a4[15] = result;
    return result;
  }
LABEL_19:
  __break(1u);
  return result;
}

void *sub_1001D0EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v10;
  void *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;

  v10 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v11 = v10;
  v12 = *(double *)(a5 + 16);
  v14 = *(_QWORD *)a5;
  v13 = *(_QWORD *)(a5 + 8);
  v15 = *(double *)(a5 + 32);
  v16 = 0.0;
  v17 = (double)*(uint64_t *)a5;
  v18 = 0.0;
  if (*(uint64_t *)a5 >= 1)
    v18 = v12 * (double)a1 / v17 + v15;
  v19 = *(double *)(a5 + 24);
  v20 = *(double *)(a5 + 40);
  v21 = (double)v13;
  if (v13 >= 1)
    v16 = v19 * (double)a2 / v21 + v20;
  objc_msgSend(v10, "moveToPoint:", v18, v16);
  v22 = 0.0;
  v23 = 0.0;
  if (v14 >= 1)
    v23 = v12 * (double)a3 / v17 + v15;
  if (v13 >= 1)
    v22 = v19 * (double)a4 / v21 + v20;
  objc_msgSend(v11, "addLineToPoint:", v23, v22);
  return v11;
}

uint64_t sub_1001D1008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v21 = sub_10000EDC8(&qword_10048A6A0);
  v22 = swift_allocObject(v21, 392, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1003B12A0;
  *(_QWORD *)(v22 + 32) = a1;
  *(_QWORD *)(v22 + 40) = a2;
  *(_QWORD *)(v22 + 48) = a3;
  *(_QWORD *)(v22 + 56) = a4;
  *(_WORD *)(v22 + 64) = 1;
  *(_BYTE *)(v22 + 66) = 0;
  *(_QWORD *)(v22 + 72) = a1;
  *(_QWORD *)(v22 + 80) = a2;
  *(_QWORD *)(v22 + 88) = a9;
  *(_QWORD *)(v22 + 96) = a10;
  *(_WORD *)(v22 + 104) = 0;
  *(_BYTE *)(v22 + 106) = 1;
  *(_QWORD *)(v22 + 112) = a1;
  *(_QWORD *)(v22 + 120) = a2;
  *(_QWORD *)(v22 + 128) = a7;
  *(_QWORD *)(v22 + 136) = a8;
  *(_WORD *)(v22 + 144) = 1;
  *(_BYTE *)(v22 + 146) = 1;
  *(_QWORD *)(v22 + 152) = a3;
  *(_QWORD *)(v22 + 160) = a4;
  *(_QWORD *)(v22 + 168) = a5;
  *(_QWORD *)(v22 + 176) = a6;
  *(_WORD *)(v22 + 184) = 1;
  *(_BYTE *)(v22 + 186) = 0;
  *(_QWORD *)(v22 + 192) = a9;
  *(_QWORD *)(v22 + 200) = a10;
  *(_QWORD *)(v22 + 208) = a13;
  *(_QWORD *)(v22 + 216) = a14;
  *(_WORD *)(v22 + 224) = 0;
  *(_BYTE *)(v22 + 226) = 1;
  *(_QWORD *)(v22 + 232) = a7;
  *(_QWORD *)(v22 + 240) = a8;
  *(_QWORD *)(v22 + 248) = a5;
  *(_QWORD *)(v22 + 256) = a6;
  *(_WORD *)(v22 + 264) = 257;
  *(_BYTE *)(v22 + 266) = 0;
  *(_QWORD *)(v22 + 272) = a7;
  *(_QWORD *)(v22 + 280) = a8;
  *(_QWORD *)(v22 + 288) = a13;
  *(_QWORD *)(v22 + 296) = a14;
  *(_WORD *)(v22 + 304) = 256;
  *(_BYTE *)(v22 + 306) = 1;
  *(_QWORD *)(v22 + 312) = a13;
  *(_QWORD *)(v22 + 320) = a14;
  *(_QWORD *)(v22 + 328) = a11;
  *(_QWORD *)(v22 + 336) = a12;
  *(_WORD *)(v22 + 344) = 256;
  *(_BYTE *)(v22 + 346) = 0;
  *(_QWORD *)(v22 + 352) = a5;
  *(_QWORD *)(v22 + 360) = a6;
  *(_QWORD *)(v22 + 368) = a11;
  *(_QWORD *)(v22 + 376) = a12;
  *(_WORD *)(v22 + 384) = 256;
  *(_BYTE *)(v22 + 386) = 0;
  v23 = sub_10000EDC8(&qword_10048A6A8);
  v24 = swift_allocObject(v23, 200, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1003B1270;
  *(_QWORD *)(v24 + 32) = a1;
  *(_QWORD *)(v24 + 40) = a2;
  *(_WORD *)(v24 + 48) = 1;
  *(_BYTE *)(v24 + 50) = 1;
  *(_QWORD *)(v24 + 56) = a3;
  *(_QWORD *)(v24 + 64) = a4;
  *(_WORD *)(v24 + 72) = 1;
  *(_BYTE *)(v24 + 74) = 0;
  *(_QWORD *)(v24 + 80) = a5;
  *(_QWORD *)(v24 + 88) = a6;
  *(_WORD *)(v24 + 96) = 257;
  *(_BYTE *)(v24 + 98) = 0;
  *(_QWORD *)(v24 + 104) = a7;
  *(_QWORD *)(v24 + 112) = a8;
  *(_WORD *)(v24 + 120) = 257;
  *(_BYTE *)(v24 + 122) = 1;
  *(_QWORD *)(v24 + 128) = a9;
  *(_QWORD *)(v24 + 136) = a10;
  *(_WORD *)(v24 + 144) = 0;
  *(_BYTE *)(v24 + 146) = 1;
  *(_QWORD *)(v24 + 152) = a11;
  *(_QWORD *)(v24 + 160) = a12;
  *(_WORD *)(v24 + 168) = 256;
  *(_BYTE *)(v24 + 170) = 0;
  *(_QWORD *)(v24 + 176) = a13;
  *(_QWORD *)(v24 + 184) = a14;
  *(_WORD *)(v24 + 192) = 256;
  *(_BYTE *)(v24 + 194) = 1;
  return v22;
}

void *sub_1001D1210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v15;
  void *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v39;

  v15 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v16 = v15;
  v17 = *(double *)(a9 + 16);
  v18 = *(_QWORD *)a9;
  v19 = *(_QWORD *)(a9 + 8);
  v20 = *(double *)(a9 + 32);
  v21 = 0.0;
  v22 = (double)a1;
  v23 = (double)*(uint64_t *)a9;
  v24 = 0.0;
  if (*(uint64_t *)a9 >= 1)
    v24 = v17 * v22 / v23 + v20;
  v25 = *(double *)(a9 + 24);
  v26 = *(double *)(a9 + 40);
  v27 = (double)a2;
  v28 = (double)v19;
  if (v19 >= 1)
    v21 = v25 * v27 / v28 + v26;
  objc_msgSend(v15, "moveToPoint:", v24, v21, a7);
  v29 = 0.0;
  v30 = 0.0;
  if (v18 >= 1)
    v30 = v17 * (double)a3 / v23 + v20;
  if (v19 >= 1)
    v29 = v25 * (double)a4 / v28 + v26;
  objc_msgSend(v16, "addLineToPoint:", v30, v29);
  v31 = 0.0;
  v32 = 0.0;
  if (v18 >= 1)
    v32 = v17 * (double)a5 / v23 + v20;
  if (v19 >= 1)
    v31 = v25 * (double)a6 / v28 + v26;
  objc_msgSend(v16, "addLineToPoint:", v32, v31);
  v33 = 0.0;
  v34 = 0.0;
  if (v18 >= 1)
    v34 = v17 * (double)v39 / v23 + v20;
  if (v19 >= 1)
    v33 = v25 * (double)a8 / v28 + v26;
  objc_msgSend(v16, "addLineToPoint:", v34, v33);
  v35 = 0.0;
  v36 = 0.0;
  if (v18 >= 1)
    v36 = v17 * v22 / v23 + v20;
  if (v19 >= 1)
    v35 = v25 * v27 / v28 + v26;
  objc_msgSend(v16, "addLineToPoint:", v36, v35);
  return v16;
}

__n128 initializeBufferWithCopyOfBuffer for SketchObject.ObjectPoint(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SketchObject.ObjectPoint(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 19))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SketchObject.ObjectPoint(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 19) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 19) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SketchObject.ObjectPoint()
{
  return &type metadata for SketchObject.ObjectPoint;
}

__n128 initializeWithCopy for SketchObject.ObjectLine(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for SketchObject.ObjectLine(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 35))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SketchObject.ObjectLine(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 35) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 35) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SketchObject.ObjectLine()
{
  return &type metadata for SketchObject.ObjectLine;
}

double sub_1001D15AC(uint64_t a1)
{
  uint64_t v1;
  double result;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 112))();
  if (v1)
  {
    sub_1001D1604(v1);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_1001D1604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id *v12;
  double v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  double v19;
  uint64_t v20;
  _QWORD *v21;
  __n128 v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  __n128 v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  _QWORD v35[6];
  uint64_t v36;
  _QWORD v37[62];

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (id *)WorldAnchor.arSession.unsafeMutableAddressor(v9);
  *(_QWORD *)&v13 = swift_beginAccess(v12, &v36, 0, 0).n128_u64[0];
  if (*v12)
  {
    v14 = objc_msgSend(*v12, "currentFrame", v13);
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(v14, "camera");

      if (v16)
      {
        v17 = qword_10047B190;
        v18 = v16;
        if (v17 != -1)
          swift_once(&qword_10047B190, sub_1001C81CC);
        if ((*(_BYTE *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80) & 1) != 0)
        {
          __break(1u);
        }
        else
        {
          v19 = SIMD2<>.init(_:)(*(double *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 64), *(double *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 72));
          v21 = (_QWORD *)effectiveStatusBarOrientation.unsafeMutableAddressor(v20);
          ComputedCameraProperties.init(camera:viewportSize:orientation:)(v37, v18, *v21, v19);
          sub_100049274();
          v23 = static OS_dispatch_queue.main.getter(v22);
          v33 = v18;
          v24 = (void *)v23;
          v25 = swift_allocObject(&unk_10044C8C8, 24, 7);
          swift_weakInit(v25 + 16, v2);
          v26 = (_QWORD *)swift_allocObject(&unk_10044C940, 512, 15);
          v26[2] = v25;
          v26[3] = a1;
          memcpy(v26 + 4, v37, 0x1E0uLL);
          v35[4] = sub_1001D3720;
          v35[5] = v26;
          v35[0] = _NSConcreteStackBlock;
          v35[1] = 1107296256;
          v35[2] = sub_10003ECA0;
          v35[3] = &unk_10044C958;
          v27 = _Block_copy(v35);
          swift_retain();
          v28 = swift_release();
          static DispatchQoS.unspecified.getter(v28);
          v35[0] = _swiftEmptyArrayStorage;
          v29 = sub_100030E1C();
          v30 = sub_10000EDC8((uint64_t *)&unk_10047E430);
          v31 = sub_100030E64();
          dispatch thunk of SetAlgebra.init<A>(_:)(v35, v30, v31, v4, v29);
          OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v6, v27);
          _Block_release(v27);

          (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
          (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
        }
      }
    }
  }
}

uint64_t sub_1001D1900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  __n128 v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  result = __chkstk_darwin(v8);
  v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + 16) == 1)
  {
    sub_100049274();
    v14 = (void *)static OS_dispatch_queue.main.getter(v13);
    v15 = swift_allocObject(&unk_10044C8C8, 24, 7);
    swift_weakInit(v15 + 16, v2);
    v16 = swift_allocObject(&unk_10044C8F0, 32, 7);
    *(_QWORD *)(v16 + 16) = v15;
    *(_QWORD *)(v16 + 24) = a1;
    aBlock[4] = sub_1001D36EC;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003ECA0;
    aBlock[3] = &unk_10044C908;
    v17 = _Block_copy(aBlock);
    swift_retain();
    v18 = swift_release();
    static DispatchQoS.unspecified.getter(v18);
    aBlock[0] = _swiftEmptyArrayStorage;
    v19 = sub_100030E1C();
    v20 = sub_10000EDC8((uint64_t *)&unk_10047E430);
    v21 = sub_100030E64();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v4, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v7, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return result;
}

void sub_1001D1B00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  id *v6;
  double v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  id v17;
  uint64_t v18;
  Swift::String v19;
  void *object;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  double (*v25)(void);
  id v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  float32x4_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  id v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  float v47;
  char v48;
  float32x2_t v49;
  double (*v50)(id, uint64_t);
  id v51;
  uint64_t v52;
  __n128 v53;
  __n128 v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  float32x4_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  char v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  double v75;
  double v76;
  double v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  __n128 v83;
  __n128 v84;
  __n128 v85;
  __n128 v86;
  uint64_t v87;
  double v88;
  float v89;
  float v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  NSString v94;
  void *v95;
  id v96;
  id v97;
  NSString v98;
  void *v99;
  id v100;
  id v101;
  uint64_t (*v102)(__n128);
  uint64_t v103;
  id v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  NSString v109;
  id v110;
  NSString v111;
  id v112;
  uint64_t v113;
  id v114;
  char v115;
  uint64_t v116;
  __n128 v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  float32x4_t v121;
  __n128 v122;
  __n128 v123;
  float32x4_t v124;
  void *v125;
  float v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD v130[3];
  _BYTE v131[24];
  _BYTE v132[24];
  double v133;
  unint64_t v134;
  __n128 v135;
  __n128 v136;
  __n128 v137;
  __n128 v138;

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v132, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = (id *)WorldAnchor.arSession.unsafeMutableAddressor(Strong);
    *(_QWORD *)&v7 = swift_beginAccess(v6, v131, 0, 0).n128_u64[0];
    if (*v6
      && (v8 = objc_msgSend(*v6, "currentFrame", v7)) != 0
      && (v9 = v8, v10 = objc_msgSend(v8, "camera"), v9, v10))
    {
      v11 = (*(uint64_t (**)(void))(*(_QWORD *)a2 + 216))();
      if (v11)
      {
        v12 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 160))(v11);
        swift_release();
        v13 = v12;
        v14 = NSObject.hashValue.getter();

        v15 = (_QWORD *)(v5 + 24);
        swift_beginAccess(v5 + 24, &v133, 32, 0);
        if (!*(_QWORD *)(*(_QWORD *)(v5 + 24) + 16) || (sub_1000C8368(v14), (v16 & 1) == 0))
        {
          swift_endAccess(&v133);
          v17 = v13;
          v18 = NSObject.hashValue.getter();

          v133 = 5.31974767e-308;
          v134 = 0xE700000000000000;
          v130[0] = *(_QWORD *)(*v15 + 16);
          v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
          object = v19._object;
          String.append(_:)(v19);
          swift_bridgeObjectRelease(object);
          v21 = *(_QWORD *)&v133;
          v22 = v134;
          swift_beginAccess(v5 + 24, &v133, 33, 0);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v15);
          v130[0] = *v15;
          *v15 = 0x8000000000000000;
          sub_1000BDEF4(v21, v22, v18, isUniquelyReferenced_nonNull_native);
          v24 = *v15;
          *v15 = v130[0];
          swift_bridgeObjectRelease(v24);
        }
        swift_endAccess(&v133);
        v25 = *(double (**)(void))(*(_QWORD *)a2 + 368);
        v26 = *(id *)(v5 + 64);
        v27.n128_f64[0] = v25();
        v31.n128_f64[0] = simd_float4x4.position.getter(v27, v28, v29, v30);
        v123 = v31;
        objc_msgSend(v13, "transform");
        *(double *)v36.i64 = simd_float4x4.up.getter(v32, v33, v34, v35);
        v121 = v36;
        v37 = *(id *)(v5 + 88);
        sub_1000479D8(v37, v123, v121, 0.1, 1.0);
        v39 = v38;
        v41 = v40;

        v42 = (*(uint64_t (**)(void))(*(_QWORD *)a2 + 448))();
        swift_beginAccess(v5 + 48, &v133, 33, 0);
        v43 = v41;
        v44 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + 48));
        v130[0] = *(_QWORD *)(v5 + 48);
        *(_QWORD *)(v5 + 48) = 0x8000000000000000;
        sub_1000BDED8((uint64_t)v43, v42, v44);
        v45 = *(_QWORD *)(v5 + 48);
        *(_QWORD *)(v5 + 48) = v130[0];
        swift_bridgeObjectRelease(v45);
        swift_endAccess(&v133);

        swift_bridgeObjectRelease(v39);
      }
      v46 = (*(uint64_t (**)(void))(*(_QWORD *)a2 + 376))();
      if ((v48 & 1) == 0)
      {
        v49 = (float32x2_t)v46;
        v126 = v47;
        v50 = *(double (**)(id, uint64_t))(*(_QWORD *)a2 + 368);
        v51 = *(id *)(v5 + 64);
        v53.n128_f64[0] = v50(v51, v52);
        v57.n128_f64[0] = simd_float4x4.position.getter(v53, v54, v55, v56);
        v122 = v57;
        *(float32x2_t *)v58.f32 = vsub_f32(0, v49);
        v58.f32[2] = 0.0 - v126;
        v58.i32[3] = 0;
        v124 = v58;
        v59 = *(id *)(v5 + 80);
        sub_1000479D8(v59, v122, v124, 0.1, 1.0);
        v61 = v60;
        v63 = v62;

        v66 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 448))(v64, v65);
        swift_beginAccess(v5 + 56, &v133, 33, 0);
        v67 = v63;
        v68 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + 56));
        v130[0] = *(_QWORD *)(v5 + 56);
        *(_QWORD *)(v5 + 56) = 0x8000000000000000;
        sub_1000BDED8((uint64_t)v67, v66, v68);
        v69 = *(_QWORD *)(v5 + 56);
        *(_QWORD *)(v5 + 56) = v130[0];
        swift_bridgeObjectRelease(v69);
        swift_endAccess(&v133);

        swift_bridgeObjectRelease(v61);
      }
      v70 = *(void **)(v5 + 72);
      v71 = qword_10047B190;
      v72 = v10;
      v73 = v70;
      if (v71 != -1)
        swift_once(&qword_10047B190, sub_1001C81CC);
      v74 = qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits;
      if ((*(_BYTE *)(qword_1004AFD08 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80) & 1) != 0)
      {
        __break(1u);
      }
      else
      {
        v76 = *(double *)(v74 + 64);
        v75 = *(double *)(v74 + 72);

        v77 = SIMD2<>.init(_:)(v76, v75);
        v79 = (_QWORD *)effectiveStatusBarOrientation.unsafeMutableAddressor(v78);
        ComputedCameraProperties.init(camera:viewportSize:orientation:)(&v133, v72, *v79, v77);
        v80 = type metadata accessor for MeasureCamera(0);
        v82.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 368))(v80, v81);
        v86.n128_f64[0] = simd_float4x4.position.getter(v82, v83, v84, v85);
        v88 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v87, v86, v135, v136, v137, v138, v133);
        v89 = 0.0;
        if ((LODWORD(v88) & 0x7FFFFF) != 0)
          v90 = 0.0;
        else
          v90 = *(float *)&v88;
        if ((~LODWORD(v88) & 0x7F800000) != 0)
          v90 = *(float *)&v88;
        LODWORD(v88) = HIDWORD(v88);
        if ((HIDWORD(v88) & 0x7FFFFF) == 0)
          v89 = *((float *)&v88 + 1);
        if ((~HIDWORD(v88) & 0x7F800000) == 0)
          *(float *)&v88 = v89;
        v91 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", v90, *(float *)&v88, 100.0, 100.0);
        sub_1001D2430(a2);
        v93 = v92;
        v94 = String._bridgeToObjectiveC()();
        objc_msgSend(v91, "setText:", v94, swift_bridgeObjectRelease(v93).n128_f64[0]);

        v95 = (void *)objc_opt_self(UIColor);
        v96 = objc_msgSend(v95, "yellowColor");
        objc_msgSend(v91, "setTextColor:", v96);

        v97 = objc_msgSend(v95, "blackColor");
        objc_msgSend(v91, "setShadowColor:", v97);

        objc_msgSend(v91, "setShadowOffset:", 1.0, 1.0);
        objc_msgSend(v91, "setNumberOfLines:", 0);
        v98 = String._bridgeToObjectiveC()();
        v99 = (void *)objc_opt_self(UIFont);
        v100 = objc_msgSend(v99, "fontWithName:size:", v98, 10.0);

        objc_msgSend(v91, "setFont:", v100);
        v101 = objc_msgSend(*(id *)(v5 + 72), "addSubview:", v91);
        v125 = v72;
        v102 = *(uint64_t (**)(__n128))(*(_QWORD *)a2 + 448);
        v103 = ((uint64_t (*)(id))v102)(v101);
        swift_beginAccess(v5 + 32, v130, 33, 0);
        v104 = v91;
        v105 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + 32));
        v127 = *(_QWORD *)(v5 + 32);
        *(_QWORD *)(v5 + 32) = 0x8000000000000000;
        sub_1000BDD6C((uint64_t)v104, v103, v105);
        v106 = *(_QWORD *)(v5 + 32);
        *(_QWORD *)(v5 + 32) = v127;
        swift_bridgeObjectRelease(v106);
        swift_endAccess(v130);
        sub_1001D2430(a2);
        v108 = v107;
        v109 = String._bridgeToObjectiveC()();
        objc_msgSend(v104, "setText:", v109, swift_bridgeObjectRelease(v108).n128_f64[0]);

        v110 = objc_msgSend(v95, "yellowColor");
        objc_msgSend(v104, "setTextColor:", v110);

        objc_msgSend(v104, "setNumberOfLines:", 0);
        v111 = String._bridgeToObjectiveC()();
        v112 = objc_msgSend(v99, "fontWithName:size:", v111, 10.0);

        objc_msgSend(v104, "setFont:", v112);
        v113 = ((uint64_t (*)(id))v102)(objc_msgSend(*(id *)(v5 + 72), "addSubview:", v104));
        swift_beginAccess(v5 + 32, v130, 33, 0);
        v114 = v104;
        v115 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + 32));
        v128 = *(_QWORD *)(v5 + 32);
        *(_QWORD *)(v5 + 32) = 0x8000000000000000;
        sub_1000BDD6C((uint64_t)v114, v113, v115);
        v116 = *(_QWORD *)(v5 + 32);
        *(_QWORD *)(v5 + 32) = v128;
        swift_bridgeObjectRelease(v116);
        v117 = swift_endAccess(v130);
        v118 = v102(v117);
        swift_beginAccess(v5 + 40, v130, 33, 0);
        v119 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + 40));
        v129 = *(_QWORD *)(v5 + 40);
        *(_QWORD *)(v5 + 40) = 0x8000000000000000;
        sub_1000BDC40(0, v118, v119);
        v120 = *(_QWORD *)(v5 + 40);
        *(_QWORD *)(v5 + 40) = v129;
        swift_bridgeObjectRelease(v120);
        swift_endAccess(v130);

        swift_release();
      }
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1001D2430(uint64_t a1)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 216))();
  if (result)
    __asm { BR              X10 }
  return result;
}

void sub_1001D298C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  __n128 v15;
  __n128 v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  const void *v21;
  id v22;
  __n128 v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  const void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  uint64_t v33;
  void *v34;
  id v35;
  __n128 v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  __n128 v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  __n128 v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57;
  void **aBlock;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  void *v61;
  id (*v62)();
  uint64_t v63;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + 16) == 1)
  {
    v55 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 448);
    v12 = v55(v9);
    swift_beginAccess(v2 + 48, &aBlock, 33, 0);
    v13 = (void *)sub_10009419C(v12);
    v15 = swift_endAccess(&aBlock);
    if (v13)
    {
      sub_100049274();
      v17 = (void *)static OS_dispatch_queue.main.getter(v16);
      v18 = swift_allocObject(&unk_10044C878, 24, 7);
      *(_QWORD *)(v18 + 16) = v13;
      v62 = sub_1001D3744;
      v63 = v18;
      aBlock = _NSConcreteStackBlock;
      v59 = 1107296256;
      v60 = sub_10003ECA0;
      v61 = &unk_10044C890;
      v19 = _Block_copy(&aBlock);
      v54 = a1;
      v20 = v5;
      v21 = v19;
      v22 = v13;
      v23 = swift_release();
      static DispatchQoS.unspecified.getter(v23);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v24 = sub_100030E1C();
      v25 = sub_10000EDC8((uint64_t *)&unk_10047E430);
      v26 = sub_100030E64();
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v25, v26, v4, v24);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v21);
      v27 = v21;
      v5 = v20;
      _Block_release(v27);

      (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v4);
      v14 = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v11, v57);
    }
    v28 = ((uint64_t (*)(uint64_t, __n128))v55)(v14, v15);
    swift_beginAccess(v2 + 56, &aBlock, 33, 0);
    v29 = (void *)sub_10009419C(v28);
    v31 = swift_endAccess(&aBlock);
    if (v29)
    {
      sub_100049274();
      v54 = static OS_dispatch_queue.main.getter(v32);
      v33 = swift_allocObject(&unk_10044C828, 24, 7);
      *(_QWORD *)(v33 + 16) = v29;
      v62 = sub_1001D368C;
      v63 = v33;
      aBlock = _NSConcreteStackBlock;
      v59 = 1107296256;
      v60 = sub_10003ECA0;
      v61 = &unk_10044C840;
      v34 = _Block_copy(&aBlock);
      v35 = v29;
      v36 = swift_release();
      static DispatchQoS.unspecified.getter(v36);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v37 = v5;
      v38 = sub_100030E1C();
      v39 = sub_10000EDC8((uint64_t *)&unk_10047E430);
      v40 = sub_100030E64();
      v41 = v38;
      v5 = v37;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v39, v40, v4, v41);
      v42 = (void *)v54;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v34);
      _Block_release(v34);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v4);
      v30 = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v11, v57);
    }
    v43 = ((uint64_t (*)(uint64_t, __n128))v55)(v30, v31);
    swift_beginAccess(v2 + 32, &aBlock, 33, 0);
    v44 = (void *)sub_100094190(v43);
    swift_endAccess(&aBlock);
    if (v44)
    {
      sub_100049274();
      v46 = (void *)static OS_dispatch_queue.main.getter(v45);
      v47 = swift_allocObject(&unk_10044C7D8, 24, 7);
      *(_QWORD *)(v47 + 16) = v44;
      v62 = sub_1001D3664;
      v63 = v47;
      aBlock = _NSConcreteStackBlock;
      v59 = 1107296256;
      v60 = sub_10003ECA0;
      v61 = &unk_10044C7F0;
      v48 = _Block_copy(&aBlock);
      v49 = v44;
      v50 = swift_release();
      static DispatchQoS.unspecified.getter(v50);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v51 = sub_100030E1C();
      v52 = sub_10000EDC8((uint64_t *)&unk_10047E430);
      v53 = sub_100030E64();
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v52, v53, v4, v51);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v48);
      _Block_release(v48);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v11, v57);
    }
  }
}

void sub_1001D2E98(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  if (*(_BYTE *)(v1 + 16) == 1)
  {
    v2 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 448);
    v3 = ((uint64_t (*)(uint64_t))v2)(a1);
    v4 = v2();
    v5 = (_QWORD *)(v1 + 40);
    swift_beginAccess(v1 + 40, v13, 32, 0);
    v6 = *(_QWORD *)(v1 + 40);
    if (*(_QWORD *)(v6 + 16) && (v7 = sub_1000C8368(v4), (v8 & 1) != 0))
      v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    else
      v9 = 0;
    swift_endAccess(v13);
    if (__OFADD__(v9, 1))
    {
      __break(1u);
    }
    else
    {
      swift_beginAccess(v5, v13, 33, 0);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
      v12 = *v5;
      *v5 = 0x8000000000000000;
      sub_1000BDC40(v9 + 1, v3, isUniquelyReferenced_nonNull_native);
      v11 = *v5;
      *v5 = v12;
      swift_bridgeObjectRelease(v11);
      swift_endAccess(v13);
    }
  }
}

void sub_1001D2FA0(uint64_t a1, uint64_t a2, __n128 *a3)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  double (*v8)(void);
  __n128 v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;
  __n128 v13;
  double v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  void *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  void *v28;
  id v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  void *v35;
  id v36;
  __n128 v37;
  uint64_t v38;
  id v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  __n128 v47;
  __n128 v48;
  float32x4_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  __n128 v55;
  uint64_t v56;
  id v57;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v59;
  id v60;
  void (*v61)(void);
  char v62;
  id v63;
  __n128 v64;
  __n128 v65;
  __n128 v66;
  __n128 v67;
  __n128 v68;
  float32x2_t v69;
  float v70;
  char v71;
  float32x4_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  __n128 v78;
  uint64_t v79;
  id v80;
  char v81;
  uint64_t v82;
  id v83;
  __n128 v84;
  __n128 v85;
  __n128 v86;
  __n128 v87;
  __n128 v88;
  uint64_t v89;
  double v90;
  uint64_t v91;
  uint64_t v92;
  NSString v93;
  float32x4_t v94;
  float32x4_t v95;
  __n128 v96;
  __n128 v97;
  void *v98;
  void *v99;
  void *v100;
  __n128 v101;
  __n128 v102;
  __n128 v103;
  __n128 v104;
  double (*v105)(void);
  CGPoint pointa;
  _BOOL4 point;
  uint64_t v108;
  uint64_t v109;
  _BYTE v110[24];
  _BYTE v111[32];
  CGRect v112;

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v111, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (!Strong)
    return;
  v7 = Strong;
  type metadata accessor for MeasureCamera(0);
  v8 = *(double (**)(void))(*(_QWORD *)a2 + 368);
  v9.n128_f64[0] = v8();
  v13.n128_f64[0] = simd_float4x4.position.getter(v9, v10, v11, v12);
  v14 = a3->n128_f64[0];
  v103 = a3[10];
  v104 = a3[9];
  v101 = a3[12];
  v102 = a3[11];
  pointa = (CGPoint)vcvtq_f64_f32(COERCE_FLOAT32X2_T(static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v15, v13, v104, v103, v102, v101, a3->n128_f64[0])));
  objc_msgSend(*(id *)(v7 + 72), "frame");
  point = CGRectContainsPoint(v112, pointa);
  v16 = *(uint64_t (**)(void))(*(_QWORD *)a2 + 448);
  v17 = v16();
  swift_beginAccess(v7 + 48, v110, 32, 0);
  v18 = *(_QWORD *)(v7 + 48);
  if (*(_QWORD *)(v18 + 16) && (v19 = sub_1000C8368(v17), (v20 & 1) != 0))
  {
    v21 = *(void **)(*(_QWORD *)(v18 + 56) + 8 * v19);
    v22 = v21;
  }
  else
  {
    v21 = 0;
  }
  v23 = swift_endAccess(v110);
  v24 = ((uint64_t (*)(__n128))v16)(v23);
  swift_beginAccess(v7 + 56, v110, 32, 0);
  v25 = *(_QWORD *)(v7 + 56);
  if (*(_QWORD *)(v25 + 16) && (v26 = sub_1000C8368(v24), (v27 & 1) != 0))
  {
    v28 = *(void **)(*(_QWORD *)(v25 + 56) + 8 * v26);
    v29 = v28;
  }
  else
  {
    v28 = 0;
  }
  v30 = swift_endAccess(v110);
  v31 = ((uint64_t (*)(__n128))v16)(v30);
  swift_beginAccess(v7 + 32, v110, 32, 0);
  v32 = *(_QWORD *)(v7 + 32);
  if (*(_QWORD *)(v32 + 16) && (v33 = sub_1000C8368(v31), (v34 & 1) != 0))
  {
    v35 = *(void **)(*(_QWORD *)(v32 + 56) + 8 * v33);
    v36 = v35;
  }
  else
  {
    v35 = 0;
  }
  v37 = swift_endAccess(v110);
  if (v21 && (v38 = (*(uint64_t (**)(__n128))(*(_QWORD *)a2 + 216))(v37)) != 0)
  {
    v100 = v35;
    v98 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v38 + 160))(v38);
    objc_msgSend(v21, "removeFromSuperlayer", swift_release().n128_f64[0]);
    v39 = *(id *)(v7 + 64);
    v105 = v8;
    v40.n128_f64[0] = v8();
    v44.n128_f64[0] = simd_float4x4.position.getter(v40, v41, v42, v43);
    v96 = v44;
    objc_msgSend(v98, "transform");
    *(double *)v49.i64 = simd_float4x4.up.getter(v45, v46, v47, v48);
    v94 = v49;
    v50 = *(id *)(v7 + 88);
    sub_1000479D8(v50, v96, v94, 0.1, 1.0);
    v52 = v51;
    v54 = v53;

    v55 = swift_bridgeObjectRelease(v52);
    v21 = v54;
    v56 = ((uint64_t (*)(__n128))v16)(v55);
    swift_beginAccess(v7 + 48, v110, 33, 0);
    v57 = v54;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v7 + 48));
    v108 = *(_QWORD *)(v7 + 48);
    *(_QWORD *)(v7 + 48) = 0x8000000000000000;
    sub_1000BDED8((uint64_t)v57, v56, isUniquelyReferenced_nonNull_native);
    v59 = *(_QWORD *)(v7 + 48);
    *(_QWORD *)(v7 + 48) = v108;
    swift_bridgeObjectRelease(v59);
    swift_endAccess(v110);
    v60 = v57;
    objc_msgSend(v60, "setHidden:", !point);

    if (!v28)
    {
      v8 = v105;
LABEL_25:
      v35 = v100;
      goto LABEL_26;
    }
    v35 = v100;
  }
  else
  {
    if (!v28)
      goto LABEL_26;
    v105 = v8;
  }
  v61 = *(void (**)(void))(*(_QWORD *)a2 + 376);
  v61();
  if ((v62 & 1) == 0)
  {
    v100 = v35;
    v99 = v21;
    objc_msgSend(v28, "removeFromSuperlayer");
    v63 = *(id *)(v7 + 64);
    v64.n128_f64[0] = v105();
    v68.n128_f64[0] = simd_float4x4.position.getter(v64, v65, v66, v67);
    v97 = v68;
    v69 = (float32x2_t)((uint64_t (*)(void))v61)();
    if ((v71 & 1) != 0)
    {
      __break(1u);
      return;
    }
    *(float32x2_t *)v72.f32 = vsub_f32(0, v69);
    v72.f32[2] = 0.0 - v70;
    v72.i32[3] = 0;
    v95 = v72;
    v73 = *(id *)(v7 + 80);
    sub_1000479D8(v73, v97, v95, 0.1, 1.0);
    v75 = v74;
    v77 = v76;

    v78 = swift_bridgeObjectRelease(v75);
    v79 = ((uint64_t (*)(__n128))v16)(v78);
    swift_beginAccess(v7 + 56, v110, 33, 0);
    v80 = v77;
    v81 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v7 + 56));
    v109 = *(_QWORD *)(v7 + 56);
    *(_QWORD *)(v7 + 56) = 0x8000000000000000;
    sub_1000BDED8((uint64_t)v80, v79, v81);
    v82 = *(_QWORD *)(v7 + 56);
    *(_QWORD *)(v7 + 56) = v109;
    swift_bridgeObjectRelease(v82);
    objc_msgSend(v80, "setHidden:", !point, swift_endAccess(v110).n128_f64[0]);
    v28 = v77;
    v8 = v105;
    v21 = v99;
    goto LABEL_25;
  }
  v8 = v105;
LABEL_26:
  if (v35)
  {
    v83 = v35;
    v84.n128_f64[0] = v8();
    v88.n128_f64[0] = simd_float4x4.position.getter(v84, v85, v86, v87);
    v90 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)(v89, v88, v104, v103, v102, v101, v14);
    objc_msgSend(v83, "setFrame:", *(float *)&v90, *((float *)&v90 + 1), 100.0);
    sub_1001D2430(a2);
    v92 = v91;
    v93 = String._bridgeToObjectiveC()();
    objc_msgSend(v83, "setText:", v93, swift_bridgeObjectRelease(v92).n128_f64[0]);

    objc_msgSend(v83, "setHidden:", !point);
  }
  swift_release();

}

uint64_t sub_1001D3544()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));

  return v0;
}

uint64_t sub_1001D35A0()
{
  uint64_t v0;

  sub_1001D3544();
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for WorldAnchorDebugVisual()
{
  return objc_opt_self(_TtC7Measure22WorldAnchorDebugVisual);
}

uint64_t sub_1001D35E0(uint64_t a1)
{
  return sub_1001D1900(a1);
}

void sub_1001D3600(uint64_t a1)
{
  sub_1001D2E98(a1);
}

void sub_1001D3620(uint64_t a1)
{
  sub_1001D298C(a1);
}

uint64_t sub_1001D3640()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1001D3664()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "removeFromSuperview");
}

uint64_t sub_1001D3674(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001D3684(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

id sub_1001D368C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "removeFromSuperlayer");
}

uint64_t sub_1001D369C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001D36C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1001D36EC()
{
  uint64_t v0;

  sub_1001D1B00(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001D36F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 512, 15);
}

void sub_1001D3720()
{
  __n128 *v0;

  sub_1001D2FA0(v0[1].n128_i64[0], v0[1].n128_i64[1], v0 + 2);
}

double sub_1001D3758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double result;

  v0 = sub_10000EDC8(&qword_10047E4F0);
  v1 = swift_allocObject(v0, 488, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1003BC840;
  if (qword_10047B1A8 != -1)
    swift_once(&qword_10047B1A8, sub_1001D3D48);
  v2 = *((_QWORD *)&xmmword_1004AFD30 + 1);
  v3 = qword_1004AFD40;
  *(_QWORD *)(v1 + 32) = xmmword_1004AFD30;
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v3;
  v4 = qword_10047B1B0;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  if (v4 != -1)
    swift_once(&qword_10047B1B0, sub_1001D3D6C);
  v5 = *((_QWORD *)&xmmword_1004AFD50 + 1);
  v6 = qword_1004AFD60;
  *(_QWORD *)(v1 + 56) = xmmword_1004AFD50;
  *(_QWORD *)(v1 + 64) = v5;
  *(_QWORD *)(v1 + 72) = v6;
  v7 = qword_10047B1B8;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  if (v7 != -1)
    swift_once(&qword_10047B1B8, sub_1001D3D90);
  v8 = *((_QWORD *)&xmmword_1004AFD70 + 1);
  v9 = qword_1004AFD80;
  *(_QWORD *)(v1 + 80) = xmmword_1004AFD70;
  *(_QWORD *)(v1 + 88) = v8;
  *(_QWORD *)(v1 + 96) = v9;
  v10 = qword_10047B1C0;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  if (v10 != -1)
    swift_once(&qword_10047B1C0, sub_1001D3DB4);
  v11 = *((_QWORD *)&xmmword_1004AFD90 + 1);
  v12 = qword_1004AFDA0;
  *(_QWORD *)(v1 + 104) = xmmword_1004AFD90;
  *(_QWORD *)(v1 + 112) = v11;
  *(_QWORD *)(v1 + 120) = v12;
  v13 = qword_10047B1C8;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  if (v13 != -1)
    swift_once(&qword_10047B1C8, sub_1001D3DD8);
  v14 = unk_1004AFDB0;
  v15 = qword_1004AFDB8;
  *(_QWORD *)(v1 + 128) = qword_1004AFDA8;
  *(_QWORD *)(v1 + 136) = v14;
  *(_QWORD *)(v1 + 144) = v15;
  v16 = qword_10047B1D0;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v15);
  if (v16 != -1)
    swift_once(&qword_10047B1D0, sub_1001D3E0C);
  v17 = *((_QWORD *)&xmmword_1004AFDC0 + 1);
  v18 = qword_1004AFDD0;
  *(_QWORD *)(v1 + 152) = xmmword_1004AFDC0;
  *(_QWORD *)(v1 + 160) = v17;
  *(_QWORD *)(v1 + 168) = v18;
  v19 = qword_10047B1D8;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v18);
  if (v19 != -1)
    swift_once(&qword_10047B1D8, sub_1001D3E30);
  v20 = unk_1004AFDE0;
  v21 = qword_1004AFDE8;
  *(_QWORD *)(v1 + 176) = qword_1004AFDD8;
  *(_QWORD *)(v1 + 184) = v20;
  *(_QWORD *)(v1 + 192) = v21;
  v22 = qword_10047B1E0;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  if (v22 != -1)
    swift_once(&qword_10047B1E0, sub_1001D3E64);
  v23 = *(_QWORD *)algn_1004AFDF8;
  v24 = qword_1004AFE00;
  *(_QWORD *)(v1 + 200) = qword_1004AFDF0;
  *(_QWORD *)(v1 + 208) = v23;
  *(_QWORD *)(v1 + 216) = v24;
  v25 = qword_10047B1E8;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v24);
  if (v25 != -1)
    swift_once(&qword_10047B1E8, sub_1001D3E98);
  v26 = unk_1004AFE10;
  v27 = qword_1004AFE18;
  *(_QWORD *)(v1 + 224) = qword_1004AFE08;
  *(_QWORD *)(v1 + 232) = v26;
  *(_QWORD *)(v1 + 240) = v27;
  v28 = qword_10047B1F0;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v27);
  if (v28 != -1)
    swift_once(&qword_10047B1F0, sub_1001D3ECC);
  v29 = *(_QWORD *)algn_1004AFE28;
  v30 = qword_1004AFE30;
  *(_QWORD *)(v1 + 248) = qword_1004AFE20;
  *(_QWORD *)(v1 + 256) = v29;
  *(_QWORD *)(v1 + 264) = v30;
  v31 = qword_10047B1F8;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v30);
  if (v31 != -1)
    swift_once(&qword_10047B1F8, sub_1001D3F00);
  v32 = unk_1004AFE40;
  v33 = qword_1004AFE48;
  *(_QWORD *)(v1 + 272) = qword_1004AFE38;
  *(_QWORD *)(v1 + 280) = v32;
  *(_QWORD *)(v1 + 288) = v33;
  v34 = qword_10047B200;
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRetain(v33);
  if (v34 != -1)
    swift_once(&qword_10047B200, sub_1001D3F34);
  v35 = *((_QWORD *)&xmmword_1004AFE50 + 1);
  v36 = qword_1004AFE60;
  *(_QWORD *)(v1 + 296) = xmmword_1004AFE50;
  *(_QWORD *)(v1 + 304) = v35;
  *(_QWORD *)(v1 + 312) = v36;
  v37 = qword_10047B208;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRetain(v36);
  if (v37 != -1)
    swift_once(&qword_10047B208, sub_1001D3F58);
  v38 = *((_QWORD *)&xmmword_1004AFE70 + 1);
  v39 = qword_1004AFE80;
  *(_QWORD *)(v1 + 320) = xmmword_1004AFE70;
  *(_QWORD *)(v1 + 328) = v38;
  *(_QWORD *)(v1 + 336) = v39;
  v40 = qword_10047B210;
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v39);
  if (v40 != -1)
    swift_once(&qword_10047B210, sub_1001D3F7C);
  v41 = *((_QWORD *)&xmmword_1004AFE90 + 1);
  v42 = qword_1004AFEA0;
  *(_QWORD *)(v1 + 344) = xmmword_1004AFE90;
  *(_QWORD *)(v1 + 352) = v41;
  *(_QWORD *)(v1 + 360) = v42;
  v43 = qword_10047B218;
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v42);
  if (v43 != -1)
    swift_once(&qword_10047B218, sub_1001D3FA0);
  v44 = *((_QWORD *)&xmmword_1004AFEB0 + 1);
  v45 = qword_1004AFEC0;
  *(_QWORD *)(v1 + 368) = xmmword_1004AFEB0;
  *(_QWORD *)(v1 + 376) = v44;
  *(_QWORD *)(v1 + 384) = v45;
  v46 = qword_10047B220;
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRetain(v45);
  if (v46 != -1)
    swift_once(&qword_10047B220, sub_1001D3FC4);
  v47 = *((_QWORD *)&xmmword_1004AFED0 + 1);
  v48 = qword_1004AFEE0;
  *(_QWORD *)(v1 + 392) = xmmword_1004AFED0;
  *(_QWORD *)(v1 + 400) = v47;
  *(_QWORD *)(v1 + 408) = v48;
  v49 = qword_10047B228;
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRetain(v48);
  if (v49 != -1)
    swift_once(&qword_10047B228, sub_1001D3FE8);
  v50 = *((_QWORD *)&xmmword_1004AFEF0 + 1);
  v51 = qword_1004AFF00;
  *(_QWORD *)(v1 + 416) = xmmword_1004AFEF0;
  *(_QWORD *)(v1 + 424) = v50;
  *(_QWORD *)(v1 + 432) = v51;
  v52 = qword_10047B230;
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRetain(v51);
  if (v52 != -1)
    swift_once(&qword_10047B230, sub_1001D400C);
  v53 = *((_QWORD *)&xmmword_1004AFF10 + 1);
  v54 = qword_1004AFF20;
  *(_QWORD *)(v1 + 440) = xmmword_1004AFF10;
  *(_QWORD *)(v1 + 448) = v53;
  *(_QWORD *)(v1 + 456) = v54;
  v55 = qword_10047B238;
  swift_bridgeObjectRetain(v53);
  swift_bridgeObjectRetain(v54);
  if (v55 != -1)
    swift_once(&qword_10047B238, sub_1001D4030);
  v56 = *((_QWORD *)&xmmword_1004AFF30 + 1);
  v57 = qword_1004AFF40;
  *(_QWORD *)(v1 + 464) = xmmword_1004AFF30;
  *(_QWORD *)(v1 + 472) = v56;
  *(_QWORD *)(v1 + 480) = v57;
  qword_1004AFD20 = v1;
  swift_bridgeObjectRetain(v56);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v57).n128_u64[0];
  return result;
}

double sub_1001D3D48()
{
  double result;

  result = 1.27967851e-152;
  xmmword_1004AFD30 = xmmword_1003BC850;
  qword_1004AFD40 = (uint64_t)_swiftEmptyArrayStorage;
  return result;
}

double sub_1001D3D6C()
{
  double result;

  *(_QWORD *)&result = 1668507981;
  xmmword_1004AFD50 = xmmword_1003BC860;
  qword_1004AFD60 = (uint64_t)&off_10043C558;
  return result;
}

double sub_1001D3D90()
{
  double result;

  result = 6.52464239e179;
  xmmword_1004AFD70 = xmmword_1003BC870;
  qword_1004AFD80 = (uint64_t)&off_10043C5A8;
  return result;
}

double sub_1001D3DB4()
{
  double result;

  result = 1.24010713e180;
  xmmword_1004AFD90 = xmmword_1003BC880;
  qword_1004AFDA0 = (uint64_t)&off_10043C658;
  return result;
}

void sub_1001D3DD8()
{
  qword_1004AFDA8 = 0xD000000000000010;
  unk_1004AFDB0 = 0x80000001003E6670;
  qword_1004AFDB8 = (uint64_t)&off_10043C6A8;
}

double sub_1001D3E0C()
{
  double result;

  result = 1.24009431e180;
  xmmword_1004AFDC0 = xmmword_1003BC890;
  qword_1004AFDD0 = (uint64_t)&off_10043C788;
  return result;
}

void sub_1001D3E30()
{
  qword_1004AFDD8 = 0xD000000000000013;
  unk_1004AFDE0 = 0x80000001003E6650;
  qword_1004AFDE8 = (uint64_t)&off_10043C928;
}

void sub_1001D3E64()
{
  qword_1004AFDF0 = 0xD000000000000024;
  *(_QWORD *)algn_1004AFDF8 = 0x80000001003E6620;
  qword_1004AFE00 = (uint64_t)&off_10043CA98;
}

void sub_1001D3E98()
{
  qword_1004AFE08 = 0xD00000000000001BLL;
  unk_1004AFE10 = 0x80000001003E6600;
  qword_1004AFE18 = (uint64_t)&off_10043CB48;
}

void sub_1001D3ECC()
{
  qword_1004AFE20 = 0xD00000000000001BLL;
  *(_QWORD *)algn_1004AFE28 = 0x80000001003E65E0;
  qword_1004AFE30 = (uint64_t)&off_10043CBF8;
}

void sub_1001D3F00()
{
  qword_1004AFE38 = 0xD000000000000016;
  unk_1004AFE40 = 0x80000001003E65C0;
  qword_1004AFE48 = (uint64_t)&off_10043CE28;
}

double sub_1001D3F34()
{
  double result;

  result = 7.47319099e252;
  xmmword_1004AFE50 = xmmword_1003BC8A0;
  qword_1004AFE60 = (uint64_t)&off_10043CF08;
  return result;
}

double sub_1001D3F58()
{
  double result;

  result = 5.42901698e213;
  xmmword_1004AFE70 = xmmword_1003BC8B0;
  qword_1004AFE80 = (uint64_t)&off_10043CF88;
  return result;
}

double sub_1001D3F7C()
{
  double result;

  *(_QWORD *)&result = 0x7365646F4DLL;
  xmmword_1004AFE90 = xmmword_1003BC8C0;
  qword_1004AFEA0 = (uint64_t)&off_10043D008;
  return result;
}

double sub_1001D3FA0()
{
  double result;

  result = 4.82338309e228;
  xmmword_1004AFEB0 = xmmword_1003BC8D0;
  qword_1004AFEC0 = (uint64_t)&off_10043D058;
  return result;
}

double sub_1001D3FC4()
{
  double result;

  *(_QWORD *)&result = 19533;
  xmmword_1004AFED0 = xmmword_1003BC8E0;
  qword_1004AFEE0 = (uint64_t)&off_10043D168;
  return result;
}

double sub_1001D3FE8()
{
  double result;

  result = 2.79565582e39;
  xmmword_1004AFEF0 = xmmword_1003BC8F0;
  qword_1004AFF00 = (uint64_t)&off_10043D248;
  return result;
}

double sub_1001D400C()
{
  double result;

  result = 9.08366775e223;
  xmmword_1004AFF10 = xmmword_1003BC900;
  qword_1004AFF20 = (uint64_t)&off_10043D358;
  return result;
}

double sub_1001D4030()
{
  double result;

  result = 1.04272728e-306;
  xmmword_1004AFF30 = xmmword_1003BC910;
  qword_1004AFF40 = (uint64_t)&off_10043D3A8;
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC7MeasureP33_57B1E7C5ED93BF09B71DD95927B0A71D19ResourceBundleClass);
}

_QWORD *sub_1001D4074(_QWORD *a1)
{
  _BYTE v3[8];
  int v4;

  *a1 = off_10044C998;
  sub_100298C2C(v3, &off_10044C9D8);
  if (v4)
    sub_1002989D0(v3);
  return a1;
}

uint64_t sub_1001D40CC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 8))
    sub_1002989D0((_BYTE *)a1);
  return a1;
}

_QWORD *sub_1001D4100(_QWORD *a1)
{
  _BYTE v3[8];
  int v4;

  *a1 = off_10044C998;
  sub_100298C2C(v3, &off_10044C9F8);
  if (v4)
    sub_1002989D0(v3);
  return a1;
}

_QWORD *sub_1001D415C(_QWORD *a1)
{
  _BYTE v3[8];
  int v4;

  *a1 = off_10044C998;
  sub_100298C2C(v3, &off_10044C9F8);
  if (v4)
    sub_1002989D0(v3);
  return a1;
}

void sub_1001D41B8(_QWORD *a1)
{
  _BYTE v1[8];
  int v2;

  *a1 = off_10044C998;
  sub_100298C2C(v1, &off_10044C9F8);
  if (v2)
    sub_1002989D0(v1);
  operator delete();
}

void sub_1001D4228(uint64_t a1, char **a2)
{
  uint64_t v4;
  uint64_t v5[2];
  _BYTE v6[72];
  _BYTE v7[8];
  int v8;
  uint64_t v9;
  uint64_t v10;

  sub_100298C2C(v7, &off_10044CA18);
  v9 = 0;
  v10 = 0;
  sub_10027E0B8((uint64_t)v6, a2, 1u, (uint64_t)&v9);
  sub_10029434C(&v9);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a1 + 56))(v5, a1);
  v4 = sub_10027E474((uint64_t)v6, (uint64_t)v5);
  v9 = 0;
  v10 = 0;
  *(_BYTE *)sub_10029430C(&v9, 1) = 123;
  sub_10027E474(v4, (uint64_t)&v9);
  sub_10029434C(&v9);
  sub_10029434C(v5);
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)a1 + 24))(a1, v6);
  v9 = 0;
  v10 = 0;
  *(_BYTE *)sub_10029430C(&v9, 1) = 125;
  sub_10027E474((uint64_t)v6, (uint64_t)&v9);
  sub_10029434C(&v9);
  sub_10027E0B4(v6);
  if (v8)
    sub_1002989D0(v7);
}

void sub_1001D4338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_10029434C((uint64_t *)(v4 - 32));
  sub_10027E0B4(va);
  sub_1001D40CC(v4 - 48);
  _Unwind_Resume(a1);
}

void sub_1001D43B4(_QWORD *a1@<X8>)
{
  uint64_t v2;
  _BYTE v3[8];
  int v4;

  sub_100298C2C(v3, &off_10044CA38);
  *a1 = 0;
  a1[1] = 0;
  v2 = sub_10029430C(a1, 9);
  *(_BYTE *)(v2 + 8) = 116;
  *(_QWORD *)v2 = *(_QWORD *)"my_object";
  if (v4)
    sub_1002989D0(v3);
}

void sub_1001D4424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1001D40CC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D4444()
{
  return 0;
}

void *sub_1001D444C(size_t size)
{
  void *result;
  void *memptr;
  uint64_t v4[2];

  memptr = 0;
  if (malloc_type_posix_memalign(&memptr, 0x40uLL, size, 0x47698D01uLL))
  {
    memptr = 0;
    goto LABEL_3;
  }
  result = memptr;
  if (!memptr)
  {
LABEL_3:
    sub_10029487C(v4, "Failed to allocate %llu bytes", size);
    sub_100294B74(-4, v4, "OutOfMemoryError", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/alloc.cpp", 55);
  }
  return result;
}

void sub_1001D44F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_10029434C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D4510(uint64_t a1, unsigned int a2, _BYTE *a3, uint64_t a4)
{
  char v6;
  uint64_t v8;
  int v9;
  int32x4_t *v10;
  uint64_t v11;
  int32x4_t *v12;
  int32x4_t v13;
  uint64_t v14;
  int32x4_t v15;
  int8x16_t v16;
  uint64_t v17;
  __int32 *v18;
  int v19;
  int v20;
  uint64_t (*v21)(uint64_t, uint64_t, _QWORD, uint64_t, _BYTE *, uint64_t, _DWORD *, _QWORD);
  uint64_t v22;
  int v23;
  uint64_t result;
  char v25;
  unint64_t v26;
  unint64_t v27;
  _BYTE *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _OWORD *v34;
  __int128 v35;
  _OWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  _BYTE *v40;
  uint64_t v41[2];
  _DWORD v42[2];

  v6 = a2;
  v8 = *(unsigned int *)(a1 + 4);
  if ((int)v8 >= 3)
  {
    v10 = *(int32x4_t **)(a1 + 64);
    if (v8 >= 8)
    {
      v11 = v8 & 0x7FFFFFF8;
      v12 = v10 + 1;
      v13.i64[0] = 0x100000001;
      v13.i64[1] = 0x100000001;
      v14 = v8 & 0xFFFFFFF8;
      v15.i64[0] = 0x100000001;
      v15.i64[1] = 0x100000001;
      do
      {
        v13 = vmulq_s32(v12[-1], v13);
        v15 = vmulq_s32(*v12, v15);
        v12 += 2;
        v14 -= 8;
      }
      while (v14);
      v16 = (int8x16_t)vmulq_s32(v15, v13);
      *(int32x2_t *)v16.i8 = vmul_s32(*(int32x2_t *)v16.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v16, v16, 8uLL));
      v9 = v16.i32[0] * v16.i32[1];
      if (v11 == v8)
        goto LABEL_10;
    }
    else
    {
      v11 = 0;
      v9 = 1;
    }
    v17 = v8 - v11;
    v18 = &v10->i32[v11];
    do
    {
      v19 = *v18++;
      v9 *= v19;
      --v17;
    }
    while (v17);
  }
  else
  {
    v9 = *(_DWORD *)(a1 + 12) * *(_DWORD *)(a1 + 8);
  }
LABEL_10:
  v20 = (a2 >> 3) & 0x1FF;
  v21 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, _BYTE *, uint64_t, _DWORD *, _QWORD))sub_1001FA068(*(_DWORD *)a1 & 7, a2);
  v22 = *(_QWORD *)(a1 + 16);
  if (v20 < v9)
    v23 = v20 + 1;
  else
    v23 = v9;
  v42[0] = v23;
  v42[1] = 1;
  result = v21(v22, 1, 0, 1, a3, 1, v42, 0);
  v25 = v6 & 7;
  v26 = (unint64_t)(v20 + 1) << ((0xFA50u >> (2 * (v6 & 7))) & 3);
  if (v20 >= v9)
  {
    if (v9 != 1)
    {
      v41[0] = 0;
      v41[1] = 0;
      *(_QWORD *)sub_10029430C(v41, 8) = 0x31203D3D206E6373;
      sub_100294B74(-215, v41, "convertAndUnrollScalar", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 68);
    }
    v27 = (0x88442211uLL >> (4 * v25)) & 0xF;
    if (v27 < v26)
    {
      v28 = a3;
      v29 = v26;
      do
      {
        v28[v27] = *v28;
        --v29;
        ++v28;
      }
      while (v27 != v29);
    }
  }
  if (v26 * a4 > v26)
  {
    v30 = (a4 - 1) * v26;
    if (v30 < 8 || v26 < 0x20)
    {
      v32 = v26;
      goto LABEL_34;
    }
    if (v30 < 0x20)
    {
      v31 = 0;
      goto LABEL_29;
    }
    v31 = v30 & 0xFFFFFFFFFFFFFFE0;
    v33 = v30 & 0xFFFFFFFFFFFFFFE0;
    v34 = a3;
    do
    {
      v35 = v34[1];
      v36 = (_OWORD *)((char *)v34 + v26);
      *v36 = *v34;
      v36[1] = v35;
      v34 += 2;
      v33 -= 32;
    }
    while (v33);
    if (v30 != v31)
    {
      if ((v30 & 0x18) == 0)
      {
        v32 = v31 + v26;
        goto LABEL_34;
      }
LABEL_29:
      v32 = (v30 & 0xFFFFFFFFFFFFFFF8) + v26;
      v37 = &a3[v31];
      v38 = v31 - (v30 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        *(_QWORD *)((char *)v37 + v26) = *v37;
        ++v37;
        v38 += 8;
      }
      while (v38);
      if (v30 == (v30 & 0xFFFFFFFFFFFFFFF8))
        return result;
LABEL_34:
      v39 = v26 * a4 - v32;
      v40 = &a3[v32];
      do
      {
        *v40 = v40[-v26];
        ++v40;
        --v39;
      }
      while (v39);
    }
  }
  return result;
}

void sub_1001D47A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10029434C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1001D47C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t (*v8)(unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, int);
  _BYTE v9[8];
  int v10;

  sub_100298C2C(v9, &off_10044CA68);
  v8 = sub_1001D485C;
  sub_1001D4860(a1, a2, a3, a4, (void (**)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))&v8, 1, 9);
  if (v10)
    sub_1002989D0(v9);
}

void sub_1001D4848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1001D40CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001D4860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t), int a6, int a7)
{
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  _BOOL4 v16;
  _BOOL4 v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  signed int v21;
  BOOL v23;
  _BOOL4 v24;
  void (**v25)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t);
  void (*v26)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t);
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  unsigned int *v37;
  unsigned int v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  _QWORD *v46;
  _QWORD *v47;
  int v48;
  unsigned int *v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;
  char *v53;
  unsigned int *v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  char *v58;
  unsigned int *v59;
  unsigned int v60;
  unsigned int v61;
  uint64_t v62;
  char *v63;
  int v64;
  char v65;
  char v66;
  char v67;
  BOOL v68;
  BOOL v69;
  unsigned int v70;
  _BOOL4 v71;
  BOOL v72;
  int v73;
  int32x2_t v74;
  uint64_t v75;
  BOOL v76;
  BOOL v77;
  _BOOL4 v78;
  BOOL v79;
  int v80;
  unint64_t v81;
  _BOOL4 v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  unsigned int *v86;
  unsigned int v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  unsigned int *v93;
  unsigned int v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  unsigned int *v100;
  unsigned int v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  unsigned int *v107;
  unsigned int v108;
  _QWORD *v109;
  _QWORD *v110;
  signed int v111;
  uint64_t v112;
  void (*v113)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t);
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  __int128 *v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t i;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  __int128 *v127;
  unint64_t k;
  unint64_t v129;
  uint64_t v130;
  __int128 *v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unsigned int *v144;
  unsigned int v145;
  unsigned int v146;
  uint64_t v147;
  char *v148;
  unsigned int *v149;
  unsigned int v150;
  unsigned int v151;
  uint64_t v152;
  char *v153;
  unsigned int *v154;
  unsigned int v155;
  unsigned int v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  unint64_t j;
  unint64_t v161;
  uint64_t v162;
  __int128 *v163;
  unint64_t v164;
  uint64_t v165;
  unsigned int *v166;
  unsigned int v167;
  unsigned int v168;
  uint64_t v169;
  char *v170;
  unsigned int *v171;
  unsigned int v172;
  unsigned int v173;
  uint64_t v174;
  char *v175;
  unsigned int *v176;
  unsigned int v177;
  unsigned int v178;
  uint64_t v179;
  char *v180;
  unsigned int *v181;
  unsigned int v182;
  unsigned int v183;
  uint64_t v184;
  char *v185;
  unsigned int v189;
  unsigned int v190;
  _BOOL4 v192;
  int v193;
  uint64_t (*v194)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int *, unint64_t *);
  _DWORD v195[2];
  _DWORD v196[2];
  _BYTE v197[32];
  unint64_t v198;
  unint64_t v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  void *v206;
  _QWORD v207[2];
  __int128 v208;
  __int128 v209;
  __int128 v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  void *v214;
  _QWORD v215[3];
  unint64_t v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  void *v223;
  uint64_t v224;
  uint64_t v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  void *v232;
  uint64_t v233;
  uint64_t v234;
  int32x2_t v235;
  int32x2_t v236;
  int32x2_t v237;
  __int128 v238;
  __int128 v239;
  __int128 *v240;
  __int128 *v241;
  __int128 *v242;
  __int128 *v243;
  uint64_t v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  void *v251;
  _QWORD v252[122];

  v11 = sub_10025D914((_DWORD *)a1);
  v193 = sub_10025D914((_DWORD *)a2);
  v12 = sub_10025E20C((int *)a1, -1);
  v190 = sub_10025E20C((int *)a2, -1);
  v13 = sub_100260608(a1, -1);
  v14 = sub_100260608(a2, -1);
  v15 = v14;
  if (v13 > 2)
  {
    v237 = 0;
    if (v14 <= 2)
      goto LABEL_3;
  }
  else
  {
    sub_10025D920(a1, 0xFFFFFFFF, (uint64_t)&v237);
    if (v15 <= 2)
    {
LABEL_3:
      sub_10025D920(a2, 0xFFFFFFFF, (uint64_t)&v236);
      goto LABEL_6;
    }
  }
  v236 = 0;
LABEL_6:
  v16 = v15 < 3;
  v17 = v13 < 3;
  v192 = sub_100261284(a4);
  v189 = v12 & 7;
  v18 = (v12 >> 3) & 0x1FF;
  v19 = v18 + 1;
  v20 = v17 && v16;
  v21 = v18 + 1;
  if (v20 != 1)
    goto LABEL_80;
  v21 = v18 + 1;
  if (v11 != v193)
    goto LABEL_80;
  v23 = v237.i32[0] == v236.i32[0] && v237.i32[1] == v236.i32[1] && v12 == v190;
  v24 = v192;
  if (!v23)
    v24 = 0;
  v21 = v18 + 1;
  if (!v24)
  {
LABEL_80:
    if (a7 != 12)
    {
      v64 = v11 == 0x20000;
      if (v193 == 0x20000)
        ++v64;
      if (v64 != 1)
      {
        v65 = sub_10026024C(a1, a2);
        v66 = v12 == v190 ? v65 : 0;
        if ((v66 & 1) != 0)
        {
          if ((sub_10026024C(a1, a2) & 1) == 0)
          {
            v245 = 0uLL;
            qmemcpy((void *)sub_10029430C(&v245, 41), "psrc1->sameSize(*psrc2) && type1 == type2", 41);
            sub_100294B74(-215, (uint64_t *)&v245, "binary_op", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 230);
          }
          v67 = 0;
          goto LABEL_138;
        }
      }
      if ((int)sub_100260608(a1, -1) <= 2 && sub_100261494(a1, -1))
      {
        sub_10025D920(a1, 0xFFFFFFFF, (uint64_t)&v245);
        v68 = v11 != 0x20000 && v193 == 0x20000;
        v69 = DWORD1(v245) == 1 || (_DWORD)v245 == 1;
        if (v69 && !v68)
        {
          v70 = (v190 >> 3) & 0x1FF;
          v71 = v245 == v70 + 1;
          v72 = DWORD1(v245) == 1;
          if (DWORD1(v245) != 1)
            v71 = 0;
          if (DWORD1(v245) == v70 + 1)
            v72 = 1;
          if ((_DWORD)v245 != 1)
            v72 = 0;
          if (v72 || v71 || (_QWORD)v245 == 0x400000001 && (v73 = sub_10025E20C((int *)a1, -1), v70 <= 3) && v73 == 6)
          {
            v12 = v190;
            v189 = v190 & 7;
            v74 = v237;
            v67 = 1;
            v237 = v236;
            v236 = v74;
            v19 = v70 + 1;
            v21 = v70 + 1;
            v75 = a1;
            goto LABEL_139;
          }
        }
      }
      if ((int)sub_100260608(a2, -1) > 2 || !sub_100261494(a2, -1))
        goto LABEL_136;
      sub_10025D920(a2, 0xFFFFFFFF, (uint64_t)&v245);
      v76 = v193 != 0x20000 && v11 == 0x20000;
      v77 = DWORD1(v245) == 1 || (_DWORD)v245 == 1;
      if (!v77 || v76)
        goto LABEL_136;
      v78 = v245 == v19;
      v79 = DWORD1(v245) == 1;
      if (DWORD1(v245) != 1)
        v78 = 0;
      if (DWORD1(v245) == v19)
        v79 = 1;
      if ((_DWORD)v245 != 1)
        v79 = 0;
      if (!v79 && !v78)
      {
        if ((_QWORD)v245 != 0x400000001 || (v80 = sub_10025E20C((int *)a2, -1), v18 > 3) || v80 != 6)
        {
LABEL_136:
          v245 = 0uLL;
          qmemcpy((void *)sub_10029430C(&v245, 130), "The operation is neither 'array op array' (where arrays have the same size and type), nor 'array op scalar', nor 'scalar op array'", 130);
          sub_100294B74(-209, (uint64_t *)&v245, "binary_op", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 225);
        }
      }
    }
    v67 = 1;
LABEL_138:
    v75 = a2;
    a2 = a1;
LABEL_139:
    v81 = v19 << ((0xFA50u >> (2 * (v12 & 7))) & 3);
    v216 = v81;
    if (v192)
    {
      v194 = 0;
      v82 = 0;
    }
    else
    {
      if (sub_10025E20C((int *)a4, -1) > 1 || (sub_10026024C(a4, a2) & 1) == 0)
      {
        v245 = 0uLL;
        qmemcpy((void *)sub_10029430C(&v245, 52), "(mtype == 0 || mtype == 1) && _mask.sameSize(*psrc1)", 52);
        sub_100294B74(-215, (uint64_t *)&v245, "binary_op", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 241);
      }
      v194 = sub_100217F60(v216);
      if (sub_10026024C(a3, a2))
        v82 = sub_10025E20C((int *)a3, -1) != v12;
      else
        v82 = 1;
    }
    *(_QWORD *)&v245 = &v246;
    *((_QWORD *)&v245 + 1) = 1032;
    sub_100263524((int *)a3, (char *)a2, v12);
    if (!v192 && v82)
    {
      *(_QWORD *)&v208 = 0;
      LODWORD(v226) = -1056833530;
      *((_QWORD *)&v226 + 1) = &v208;
      *(_QWORD *)&v227 = 0x100000001;
      LODWORD(v217) = 0;
      *((_QWORD *)&v217 + 1) = 0;
      *(_QWORD *)&v218 = 0;
      sub_100263808(a3, (uint64_t)&v226, (uint64_t)&v217);
    }
    if (sub_10025D914((_DWORD *)a2) == 0x10000)
    {
      v83 = *(_QWORD *)(a2 + 8);
      v84 = *(_OWORD *)(v83 + 16);
      v226 = *(_OWORD *)v83;
      v227 = v84;
      v228 = *(_OWORD *)(v83 + 32);
      v85 = *(_QWORD *)(v83 + 56);
      v229 = *(_QWORD *)(v83 + 48);
      v230 = v85;
      v231 = (char *)&v226 + 8;
      v232 = &v233;
      v234 = 0;
      v233 = 0;
      if (v85)
      {
        v86 = (unsigned int *)(v85 + 20);
        do
          v87 = __ldaxr(v86);
        while (__stlxr(v87 + 1, v86));
      }
      if (*(int *)(v83 + 4) > 2)
      {
        DWORD1(v226) = 0;
        sub_100256B48((uint64_t)&v226, v83);
      }
      else
      {
        v88 = *(_QWORD **)(v83 + 72);
        v89 = v232;
        *(_QWORD *)v232 = *v88;
        v89[1] = v88[1];
      }
    }
    else
    {
      sub_10025CCB8(a2, -1, (uint64_t)&v226);
    }
    if (sub_10025D914((_DWORD *)v75) == 0x10000)
    {
      v90 = *(_QWORD *)(v75 + 8);
      v91 = *(_OWORD *)(v90 + 16);
      v217 = *(_OWORD *)v90;
      v218 = v91;
      v219 = *(_OWORD *)(v90 + 32);
      v92 = *(_QWORD *)(v90 + 56);
      v220 = *(_QWORD *)(v90 + 48);
      v221 = v92;
      v222 = (char *)&v217 + 8;
      v223 = &v224;
      v224 = 0;
      v225 = 0;
      if (v92)
      {
        v93 = (unsigned int *)(v92 + 20);
        do
          v94 = __ldaxr(v93);
        while (__stlxr(v94 + 1, v93));
      }
      if (*(int *)(v90 + 4) > 2)
      {
        DWORD1(v217) = 0;
        sub_100256B48((uint64_t)&v217, v90);
      }
      else
      {
        v95 = *(_QWORD **)(v90 + 72);
        v96 = v223;
        *(_QWORD *)v223 = *v95;
        v96[1] = v95[1];
      }
    }
    else
    {
      sub_10025CCB8(v75, -1, (uint64_t)&v217);
    }
    if (sub_10025D914((_DWORD *)a3) == 0x10000)
    {
      v97 = *(_QWORD *)(a3 + 8);
      v98 = *(_OWORD *)(v97 + 16);
      v208 = *(_OWORD *)v97;
      v209 = v98;
      v210 = *(_OWORD *)(v97 + 32);
      v99 = *(_QWORD *)(v97 + 56);
      v211 = *(_QWORD *)(v97 + 48);
      v212 = v99;
      v213 = (char *)&v208 + 8;
      v214 = v215;
      v215[0] = 0;
      v215[1] = 0;
      if (v99)
      {
        v100 = (unsigned int *)(v99 + 20);
        do
          v101 = __ldaxr(v100);
        while (__stlxr(v101 + 1, v100));
      }
      if (*(int *)(v97 + 4) > 2)
      {
        DWORD1(v208) = 0;
        sub_100256B48((uint64_t)&v208, v97);
      }
      else
      {
        v102 = *(_QWORD **)(v97 + 72);
        v103 = v214;
        *(_QWORD *)v214 = *v102;
        v103[1] = v102[1];
      }
    }
    else
    {
      sub_10025CCB8(a3, -1, (uint64_t)&v208);
    }
    if (sub_10025D914((_DWORD *)a4) == 0x10000)
    {
      v104 = *(_QWORD *)(a4 + 8);
      v105 = *(_OWORD *)(v104 + 16);
      v200 = *(_OWORD *)v104;
      v201 = v105;
      v202 = *(_OWORD *)(v104 + 32);
      v106 = *(_QWORD *)(v104 + 56);
      v203 = *(_QWORD *)(v104 + 48);
      v204 = v106;
      v205 = (char *)&v200 + 8;
      v206 = v207;
      v207[0] = 0;
      v207[1] = 0;
      if (v106)
      {
        v107 = (unsigned int *)(v106 + 20);
        do
          v108 = __ldaxr(v107);
        while (__stlxr(v108 + 1, v107));
      }
      if (*(int *)(v104 + 4) > 2)
      {
        DWORD1(v200) = 0;
        sub_100256B48((uint64_t)&v200, v104);
      }
      else
      {
        v109 = *(_QWORD **)(v104 + 72);
        v110 = v206;
        *(_QWORD *)v206 = *v109;
        v110[1] = v109[1];
      }
    }
    else
    {
      sub_10025CCB8(a4, -1, (uint64_t)&v200);
    }
    if (a6)
      v111 = v216;
    else
      v111 = v21;
    if (a6)
      v112 = 0;
    else
      v112 = v189;
    v113 = a5[v112];
    v114 = ((int)v81 + 1023) / v81;
    if ((v67 & 1) != 0)
    {
      v240 = &v226;
      v241 = &v208;
      v242 = &v200;
      v243 = 0;
      v238 = 0uLL;
      *(_QWORD *)&v239 = 0;
      sub_100254D30((uint64_t)v197, (uint64_t *)&v240, (uint64_t)&v238, -1);
      v115 = v199;
      if (v199 < v114)
        v114 = v199;
      v116 = (v114 << !v192) * v216 + 32;
      if (*((_QWORD *)&v245 + 1) >= v116)
      {
        *((_QWORD *)&v245 + 1) = (v114 << !v192) * v216 + 32;
        v117 = (__int128 *)v245;
      }
      else
      {
        v117 = &v246;
        if ((__int128 *)v245 != &v246)
        {
          if ((_QWORD)v245)
            operator delete[]();
          v117 = &v246;
          *(_QWORD *)&v245 = &v246;
        }
        *((_QWORD *)&v245 + 1) = (v114 << !v192) * v216 + 32;
        if (v116 >= 0x409)
          operator new[]();
      }
      v120 = v216;
      sub_1001D4510((uint64_t)&v217, v226 & 0xFFF, v117, v114);
      if (v115)
      {
        if (v192)
        {
          for (i = 0; i < v198; ++i)
          {
            v122 = 0;
            v124 = *((_QWORD *)&v238 + 1);
            v123 = v238;
            do
            {
              if (v115 - v122 >= v114)
                v125 = v114;
              else
                v125 = v115 - v122;
              ((void (*)(uint64_t, _QWORD, __int128 *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD))v113)(v123, 0, v117, 0, v124, 0, (v111 * v125), 1, 0);
              v126 = v125 * (int)v216;
              v123 = v238 + v126;
              v124 = *((_QWORD *)&v238 + 1) + v126;
              *(_QWORD *)&v238 = v238 + v126;
              *((_QWORD *)&v238 + 1) += v126;
              v122 += v114;
            }
            while (v122 < v115);
            sub_100254D78((uint64_t)v197);
          }
        }
        else
        {
          v138 = 0;
          v139 = ((unint64_t)v117 + v120 * v114 + 15) & 0xFFFFFFFFFFFFFFF0;
          while (v138 < v198)
          {
            v140 = 0;
            v141 = v238;
            do
            {
              if (v115 - v140 >= v114)
                v142 = v114;
              else
                v142 = v115 - v140;
              ((void (*)(uint64_t, _QWORD, __int128 *, _QWORD, unint64_t, _QWORD, _QWORD, uint64_t, _QWORD))v113)(v141, 0, v117, 0, v139, 0, (v111 * v142), 1, 0);
              v195[0] = v142;
              v195[1] = 1;
              v194(v139, 0, v239, 0, *((_QWORD *)&v238 + 1), 0, v195, &v216);
              *(_QWORD *)&v239 = v239 + v142;
              v143 = (int)v142 * (int)v216;
              v141 = v238 + v143;
              *(_QWORD *)&v238 = v238 + v143;
              *((_QWORD *)&v238 + 1) += v143;
              v140 += v114;
            }
            while (v140 < v115);
            ++v138;
            sub_100254D78((uint64_t)v197);
          }
        }
      }
      else
      {
        v137 = -1;
        while (++v137 < v198)
          sub_100254D78((uint64_t)v197);
      }
      goto LABEL_285;
    }
    v240 = &v226;
    v241 = &v217;
    v242 = &v208;
    v243 = &v200;
    v244 = 0;
    v238 = 0u;
    v239 = 0u;
    sub_100254D30((uint64_t)v197, (uint64_t *)&v240, (uint64_t)&v238, -1);
    v118 = v199;
    v119 = v199;
    if ((v199 * v111) >> 31)
      v119 = 0x7FFFFFFF / v111;
    if (v192)
    {
      if (!v199)
      {
LABEL_274:
        v159 = -1;
        while (++v159 < v198)
          sub_100254D78((uint64_t)v197);
LABEL_285:
        if (v204)
        {
          v166 = (unsigned int *)(v204 + 20);
          do
          {
            v167 = __ldaxr(v166);
            v168 = v167 - 1;
          }
          while (__stlxr(v168, v166));
          if (!v168)
            sub_100256C90((uint64_t)&v200);
        }
        v204 = 0;
        v201 = 0u;
        v202 = 0u;
        if (SDWORD1(v200) >= 1)
        {
          v169 = 0;
          v170 = v205;
          do
            *(_DWORD *)&v170[4 * v169++] = 0;
          while (v169 < SDWORD1(v200));
        }
        if (v206 != v207)
          j__free(v206);
        if (v212)
        {
          v171 = (unsigned int *)(v212 + 20);
          do
          {
            v172 = __ldaxr(v171);
            v173 = v172 - 1;
          }
          while (__stlxr(v173, v171));
          if (!v173)
            sub_100256C90((uint64_t)&v208);
        }
        v212 = 0;
        v209 = 0u;
        v210 = 0u;
        if (SDWORD1(v208) >= 1)
        {
          v174 = 0;
          v175 = v213;
          do
            *(_DWORD *)&v175[4 * v174++] = 0;
          while (v174 < SDWORD1(v208));
        }
        if (v214 != v215)
          j__free(v214);
        if (v221)
        {
          v176 = (unsigned int *)(v221 + 20);
          do
          {
            v177 = __ldaxr(v176);
            v178 = v177 - 1;
          }
          while (__stlxr(v178, v176));
          if (!v178)
            sub_100256C90((uint64_t)&v217);
        }
        v221 = 0;
        v218 = 0u;
        v219 = 0u;
        if (SDWORD1(v217) >= 1)
        {
          v179 = 0;
          v180 = v222;
          do
            *(_DWORD *)&v180[4 * v179++] = 0;
          while (v179 < SDWORD1(v217));
        }
        if (v223 != &v224)
          j__free(v223);
        if (v230)
        {
          v181 = (unsigned int *)(v230 + 20);
          do
          {
            v182 = __ldaxr(v181);
            v183 = v182 - 1;
          }
          while (__stlxr(v183, v181));
          if (!v183)
            sub_100256C90((uint64_t)&v226);
        }
        v230 = 0;
        v227 = 0u;
        v228 = 0u;
        if (SDWORD1(v226) >= 1)
        {
          v184 = 0;
          v185 = v231;
          do
            *(_DWORD *)&v185[4 * v184++] = 0;
          while (v184 < SDWORD1(v226));
        }
        if (v232 != &v233)
          j__free(v232);
        if ((__int128 *)v245 != &v246 && (_QWORD)v245 != 0)
          operator delete[]();
        return;
      }
    }
    else
    {
      if (v119 >= v114)
        v119 = ((int)v81 + 1023) / v81;
      if (*((_QWORD *)&v245 + 1) >= v216 * v119)
      {
        *((_QWORD *)&v245 + 1) = v216 * v119;
        v127 = (__int128 *)v245;
        if (!v199)
          goto LABEL_274;
      }
      else
      {
        v127 = &v246;
        if ((__int128 *)v245 != &v246)
        {
          if ((_QWORD)v245)
            operator delete[]();
          *(_QWORD *)&v245 = &v246;
        }
        *((_QWORD *)&v245 + 1) = v216 * v119;
        if (v216 * v119 >= 0x409)
          operator new[]();
        if (!v199)
          goto LABEL_274;
      }
      if (!v192)
      {
        for (j = 0; j < v198; ++j)
        {
          v161 = 0;
          v163 = (__int128 *)*((_QWORD *)&v238 + 1);
          v162 = v238;
          do
          {
            if (v118 - v161 >= v119)
              v164 = v119;
            else
              v164 = v118 - v161;
            ((void (*)(uint64_t, _QWORD, __int128 *, _QWORD, __int128 *, _QWORD, _QWORD, uint64_t, _QWORD))v113)(v162, 0, v163, 0, v127, 0, (v111 * v164), 1, 0);
            v196[0] = v164;
            v196[1] = 1;
            v194((uint64_t)v127, 0, *((_QWORD *)&v239 + 1), 0, v239, 0, v196, &v216);
            v165 = (int)v164 * (int)v216;
            v162 = v238 + v165;
            v163 = (__int128 *)(*((_QWORD *)&v238 + 1) + v165);
            *(_QWORD *)&v238 = v238 + v165;
            *((_QWORD *)&v238 + 1) += v165;
            *((_QWORD *)&v239 + 1) += v164;
            *(_QWORD *)&v239 = v239 + v165;
            v161 += v119;
          }
          while (v161 < v118);
          sub_100254D78((uint64_t)v197);
        }
        goto LABEL_285;
      }
    }
    for (k = 0; k < v198; ++k)
    {
      v129 = 0;
      v131 = (__int128 *)*((_QWORD *)&v238 + 1);
      v130 = v238;
      v132 = v118;
      v133 = v239;
      do
      {
        v134 = v132 - v119;
        if (v132 >= v119)
          v135 = v119;
        else
          v135 = v132;
        ((void (*)(uint64_t, _QWORD, __int128 *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD))v113)(v130, 0, v131, 0, v133, 0, (v111 * v135), 1, 0);
        v136 = v135 * (int)v216;
        v130 = v238 + v136;
        v131 = (__int128 *)(*((_QWORD *)&v238 + 1) + v136);
        *(_QWORD *)&v238 = v238 + v136;
        *((_QWORD *)&v238 + 1) += v136;
        v133 = v239 + v136;
        *(_QWORD *)&v239 = v239 + v136;
        v129 += v119;
        v132 = v134;
      }
      while (v129 < v118);
      sub_100254D78((uint64_t)v197);
    }
    goto LABEL_285;
  }
  v235 = v237;
  sub_10026214C(a3, &v235, v12, -1, 0, 0);
  v25 = &a5[v12 & 7];
  if (a6)
    v21 = v19 << ((0xFA50u >> (2 * (v12 & 7))) & 3);
  else
    v21 = v18 + 1;
  if (a6)
    v25 = a5;
  v26 = *v25;
  if (sub_10025D914((_DWORD *)a1) == 0x10000)
  {
    v27 = *(_QWORD *)(a1 + 8);
    v28 = *(_OWORD *)(v27 + 16);
    v245 = *(_OWORD *)v27;
    v246 = v28;
    v247 = *(_OWORD *)(v27 + 32);
    v29 = *(_QWORD *)(v27 + 56);
    v248 = *(_QWORD *)(v27 + 48);
    v249 = v29;
    v250 = (char *)&v245 + 8;
    v251 = v252;
    v252[1] = 0;
    v252[0] = 0;
    if (v29)
    {
      v30 = (unsigned int *)(v29 + 20);
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 + 1, v30));
    }
    if (*(int *)(v27 + 4) > 2)
    {
      DWORD1(v245) = 0;
      sub_100256B48((uint64_t)&v245, v27);
    }
    else
    {
      v32 = *(_QWORD **)(v27 + 72);
      v33 = v251;
      *(_QWORD *)v251 = *v32;
      v33[1] = v32[1];
    }
  }
  else
  {
    sub_10025CCB8(a1, -1, (uint64_t)&v245);
  }
  if (sub_10025D914((_DWORD *)a2) == 0x10000)
  {
    v34 = *(_QWORD *)(a2 + 8);
    v35 = *(_OWORD *)(v34 + 16);
    v226 = *(_OWORD *)v34;
    v227 = v35;
    v228 = *(_OWORD *)(v34 + 32);
    v36 = *(_QWORD *)(v34 + 56);
    v229 = *(_QWORD *)(v34 + 48);
    v230 = v36;
    v231 = (char *)&v226 + 8;
    v232 = &v233;
    v234 = 0;
    v233 = 0;
    if (v36)
    {
      v37 = (unsigned int *)(v36 + 20);
      do
        v38 = __ldaxr(v37);
      while (__stlxr(v38 + 1, v37));
    }
    if (*(int *)(v34 + 4) > 2)
    {
      DWORD1(v226) = 0;
      sub_100256B48((uint64_t)&v226, v34);
    }
    else
    {
      v39 = *(_QWORD **)(v34 + 72);
      v40 = v232;
      *(_QWORD *)v232 = *v39;
      v40[1] = v39[1];
    }
  }
  else
  {
    sub_10025CCB8(a2, -1, (uint64_t)&v226);
  }
  if (sub_10025D914((_DWORD *)a3) == 0x10000)
  {
    v41 = *(_QWORD *)(a3 + 8);
    v42 = *(_OWORD *)(v41 + 16);
    v217 = *(_OWORD *)v41;
    v218 = v42;
    v219 = *(_OWORD *)(v41 + 32);
    v43 = *(_QWORD *)(v41 + 56);
    v220 = *(_QWORD *)(v41 + 48);
    v221 = v43;
    v222 = (char *)&v217 + 8;
    v223 = &v224;
    v224 = 0;
    v225 = 0;
    if (v43)
    {
      v44 = (unsigned int *)(v43 + 20);
      do
        v45 = __ldaxr(v44);
      while (__stlxr(v45 + 1, v44));
    }
    if (*(int *)(v41 + 4) > 2)
    {
      DWORD1(v217) = 0;
      sub_100256B48((uint64_t)&v217, v41);
    }
    else
    {
      v46 = *(_QWORD **)(v41 + 72);
      v47 = v223;
      *(_QWORD *)v223 = *v46;
      v47[1] = v46[1];
    }
  }
  else
  {
    sub_10025CCB8(a3, -1, (uint64_t)&v217);
  }
  v48 = HIDWORD(v245);
  if ((v245 & v226 & v217 & 0x4000) != 0
    && DWORD2(v245) * HIDWORD(v245) == SDWORD2(v245) * (uint64_t)SHIDWORD(v245))
  {
    v48 = DWORD2(v245) * HIDWORD(v245);
  }
  if (v21 * (uint64_t)v48 != v21 * v48)
  {
    if (v221)
    {
      v49 = (unsigned int *)(v221 + 20);
      do
      {
        v50 = __ldaxr(v49);
        v51 = v50 - 1;
      }
      while (__stlxr(v51, v49));
      if (!v51)
        sub_100256C90((uint64_t)&v217);
    }
    v221 = 0;
    v218 = 0u;
    v219 = 0u;
    if (SDWORD1(v217) >= 1)
    {
      v52 = 0;
      v53 = v222;
      do
        *(_DWORD *)&v53[4 * v52++] = 0;
      while (v52 < SDWORD1(v217));
    }
    if (v223 != &v224)
      j__free(v223);
    if (v230)
    {
      v54 = (unsigned int *)(v230 + 20);
      do
      {
        v55 = __ldaxr(v54);
        v56 = v55 - 1;
      }
      while (__stlxr(v56, v54));
      if (!v56)
        sub_100256C90((uint64_t)&v226);
    }
    v230 = 0;
    v227 = 0u;
    v228 = 0u;
    if (SDWORD1(v226) >= 1)
    {
      v57 = 0;
      v58 = v231;
      do
        *(_DWORD *)&v58[4 * v57++] = 0;
      while (v57 < SDWORD1(v226));
    }
    if (v232 != &v233)
      j__free(v232);
    if (v249)
    {
      v59 = (unsigned int *)(v249 + 20);
      do
      {
        v60 = __ldaxr(v59);
        v61 = v60 - 1;
      }
      while (__stlxr(v61, v59));
      if (!v61)
        sub_100256C90((uint64_t)&v245);
    }
    v249 = 0;
    v246 = 0u;
    v247 = 0u;
    if (SDWORD1(v245) >= 1)
    {
      v62 = 0;
      v63 = v250;
      do
        *(_DWORD *)&v63[4 * v62++] = 0;
      while (v62 < SDWORD1(v245));
    }
    if (v251 != v252)
      j__free(v251);
    goto LABEL_80;
  }
  v26(v246, v252[0], v227, v233, v218, v224);
  if (v221)
  {
    v144 = (unsigned int *)(v221 + 20);
    do
    {
      v145 = __ldaxr(v144);
      v146 = v145 - 1;
    }
    while (__stlxr(v146, v144));
    if (!v146)
      sub_100256C90((uint64_t)&v217);
  }
  v221 = 0;
  v218 = 0u;
  v219 = 0u;
  if (SDWORD1(v217) >= 1)
  {
    v147 = 0;
    v148 = v222;
    do
      *(_DWORD *)&v148[4 * v147++] = 0;
    while (v147 < SDWORD1(v217));
  }
  if (v223 != &v224)
    j__free(v223);
  if (v230)
  {
    v149 = (unsigned int *)(v230 + 20);
    do
    {
      v150 = __ldaxr(v149);
      v151 = v150 - 1;
    }
    while (__stlxr(v151, v149));
    if (!v151)
      sub_100256C90((uint64_t)&v226);
  }
  v230 = 0;
  v227 = 0u;
  v228 = 0u;
  if (SDWORD1(v226) >= 1)
  {
    v152 = 0;
    v153 = v231;
    do
      *(_DWORD *)&v153[4 * v152++] = 0;
    while (v152 < SDWORD1(v226));
  }
  if (v232 != &v233)
    j__free(v232);
  if (v249)
  {
    v154 = (unsigned int *)(v249 + 20);
    do
    {
      v155 = __ldaxr(v154);
      v156 = v155 - 1;
    }
    while (__stlxr(v156, v154));
    if (!v156)
      sub_100256C90((uint64_t)&v245);
  }
  v249 = 0;
  v246 = 0u;
  v247 = 0u;
  if (SDWORD1(v245) >= 1)
  {
    v157 = 0;
    v158 = v250;
    do
      *(_DWORD *)&v158[4 * v157++] = 0;
    while (v157 < SDWORD1(v245));
  }
  if (v251 != v252)
    j__free(v251);
}

void sub_1001D5D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;

  sub_100006BE4((uint64_t)&a27);
  sub_100006BE4((uint64_t)&a39);
  sub_100006BE4((uint64_t)&a53);
  sub_100006BE4((uint64_t)&a65);
  if (STACK[0x290] != a13)
  {
    if (STACK[0x290])
      operator delete[]();
  }
  _Unwind_Resume(a1);
}

void sub_1001D5EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v8)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, int);
  _BYTE v9[8];
  int v10;

  sub_100298C2C(v9, &off_10044CA88);
  v8 = sub_1001D5F7C;
  sub_1001D4860(a1, a2, a3, a4, (void (**)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))&v8, 1, 10);
  if (v10)
    sub_1002989D0(v9);
}

void sub_1001D5F68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1001D40CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001D5F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v8)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, int);
  _BYTE v9[8];
  int v10;

  sub_100298C2C(v9, &off_10044CAA8);
  v8 = sub_1001D601C;
  sub_1001D4860(a1, a2, a3, a4, (void (**)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))&v8, 1, 11);
  if (v10)
    sub_1002989D0(v9);
}

void sub_1001D6008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1001D40CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001D6020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t (*v6)(unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, int, int);
  _BYTE v7[8];
  int v8;

  sub_100298C2C(v7, &off_10044CAC8);
  v6 = sub_1001D60B8;
  sub_1001D4860(a1, a1, a2, a3, (void (**)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))&v6, 1, 12);
  if (v8)
    sub_1002989D0(v7);
}

void sub_1001D60A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1001D40CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001D60BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  _BYTE v7[8];
  int v8;

  sub_100298C2C(v7, &off_10044CAE8);
  v6 = sub_100263CBC();
  sub_1001D4860(a1, a2, a3, (uint64_t)v6, (void (**)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))off_10048A830, 0, 14);
  if (v8)
    sub_1002989D0(v7);
}

void sub_1001D613C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1001D40CC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001D6150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  _BYTE v7[8];
  int v8;

  sub_100298C2C(v7, &off_10044CB08);
  v6 = sub_100263CBC();
  sub_1001D4860(a1, a2, a3, (uint64_t)v6, (void (**)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))off_10048A870, 0, 13);
  if (v8)
    sub_1002989D0(v7);
}

void sub_1001D61D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1001D40CC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001D61E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[8];
  int v17;

  sub_100298C2C(v16, &off_10044CB28);
  v13 = 33619968;
  v14 = a3;
  v15 = 0;
  v12 = 0;
  v10 = 16842752;
  v11 = a1;
  v9 = 0;
  v7 = 16842752;
  v8 = a2;
  v6 = sub_100263CBC();
  sub_1001D4860((uint64_t)&v10, (uint64_t)&v7, (uint64_t)&v13, (uint64_t)v6, (void (**)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))off_10048A830, 0, 14);
  if (v17)
    sub_1002989D0(v16);
}

void sub_1001D6290(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1001D40CC(v1 - 48);
  _Unwind_Resume(a1);
}

void sub_1001D62A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[8];
  int v17;

  sub_100298C2C(v16, &off_10044CB48);
  v13 = 33619968;
  v14 = a3;
  v15 = 0;
  v12 = 0;
  v10 = 16842752;
  v11 = a1;
  v9 = 0;
  v7 = 16842752;
  v8 = a2;
  v6 = sub_100263CBC();
  sub_1001D4860((uint64_t)&v10, (uint64_t)&v7, (uint64_t)&v13, (uint64_t)v6, (void (**)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))off_10048A870, 0, 13);
  if (v17)
    sub_1002989D0(v16);
}

void sub_1001D6350(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1001D40CC(v1 - 48);
  _Unwind_Resume(a1);
}

void sub_1001D6364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  _BYTE v10[8];
  int v11;

  sub_100298C2C(v10, &off_10044CB68);
  sub_1001D6408(a1, a2, a3, a4, a5, (uint64_t)off_10048A8B0, 0, 0);
  if (v11)
    sub_1002989D0(v10);
}

void sub_1001D63F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1001D40CC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001D6408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, char a7, uint64_t a8)
{
  unsigned int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int v20;
  BOOL v24;
  _BOOL4 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  unsigned int *v29;
  unsigned int v30;
  _QWORD *v31;
  _QWORD *v32;
  BOOL v33;
  BOOL v34;
  int v35;
  int v37;
  BOOL v38;
  BOOL v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  unsigned int *v48;
  unsigned int v49;
  _QWORD *v50;
  _QWORD *v51;
  double *v52;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  BOOL v58;
  unsigned int *v59;
  unsigned int v60;
  unsigned int v61;
  uint64_t v62;
  char *v63;
  char v64;
  char v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  char v73;
  BOOL v74;
  unsigned int v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  unsigned int *v81;
  unsigned int v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  unsigned int *v89;
  unsigned int v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  unsigned int *v96;
  unsigned int v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  unsigned int *v103;
  unsigned int v104;
  _QWORD *v105;
  _QWORD *v106;
  unsigned int v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  __int128 *v120;
  int v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  __int128 *v125;
  unsigned int v126;
  unint64_t v127;
  __int128 *v128;
  __int128 *v129;
  char v130;
  unint64_t v131;
  __int128 *v132;
  __int128 *v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  char v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  __int128 *v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  int v150;
  int v151;
  __int128 *v152;
  _OWORD *v153;
  uint64_t v154;
  int *v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t j;
  unint64_t v160;
  __int128 *v161;
  unint64_t v162;
  unint64_t v163;
  __int128 *v164;
  __int128 *v165;
  unint64_t v166;
  unint64_t v167;
  __int128 *v168;
  unint64_t v169;
  unint64_t v170;
  __int128 *v171;
  __int128 *v172;
  uint64_t v173;
  int *v174;
  unint64_t v175;
  BOOL v176;
  BOOL v177;
  int v178;
  _BOOL4 v180;
  BOOL v181;
  int v182;
  _BOOL4 v183;
  BOOL v184;
  int v185;
  uint64_t v186;
  unint64_t i;
  unint64_t v188;
  _BYTE *v189;
  unint64_t v190;
  unint64_t v191;
  __int128 *v192;
  __int128 *v193;
  unsigned int *v195;
  unsigned int v196;
  unsigned int v197;
  uint64_t v198;
  char *v199;
  unsigned int *v200;
  unsigned int v201;
  unsigned int v202;
  uint64_t v203;
  char *v204;
  unsigned int *v205;
  unsigned int v206;
  unsigned int v207;
  uint64_t v208;
  char *v209;
  unsigned int *v210;
  unsigned int v211;
  unsigned int v212;
  uint64_t v213;
  char *v214;
  uint64_t v216;
  __int128 v217;
  uint64_t v218;
  unsigned int *v219;
  unsigned int v220;
  _QWORD *v221;
  _QWORD *v222;
  uint64_t v223;
  __int128 v224;
  uint64_t v225;
  unsigned int *v226;
  unsigned int v227;
  _QWORD *v228;
  _QWORD *v229;
  uint64_t v230;
  unint64_t v231;
  uint64_t v232;
  unsigned int *v233;
  unsigned int v234;
  unsigned int v235;
  uint64_t v236;
  char *v237;
  unsigned int *v238;
  unsigned int v239;
  unsigned int v240;
  uint64_t v241;
  char *v242;
  unsigned int *v243;
  unsigned int v244;
  unsigned int v245;
  uint64_t v246;
  char *v247;
  unint64_t v248;
  unint64_t v250;
  unsigned int v251;
  unint64_t v252;
  uint64_t (*v253)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int *, unint64_t *);
  _BOOL4 v254;
  int v255;
  int v256;
  unsigned int v257;
  char v258;
  void (*v260)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  int v261;
  unint64_t v262;
  unint64_t v263;
  int v264;
  void (*v265)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  __int128 *v266;
  unint64_t v267;
  int *v268;
  void (*v269)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  int v270;
  uint64_t v271;
  void (*v273)(_QWORD, _QWORD);
  unsigned int v275;
  int v276;
  _DWORD v277[2];
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  _DWORD v284[2];
  int v285;
  _DWORD v286[2];
  _DWORD v287[2];
  _DWORD v288[2];
  _BYTE v289[32];
  unint64_t v290;
  unint64_t v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  void *v298;
  _QWORD v299[2];
  __int128 v300;
  __int128 v301;
  __int128 v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  void *v306;
  _QWORD v307[3];
  unint64_t v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  uint64_t v312;
  uint64_t v313;
  char *v314;
  void *v315;
  uint64_t v316;
  uint64_t v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  void *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  __int128 v329;
  __int128 v330;
  __int128 *v331;
  __int128 *v332;
  __int128 *v333;
  __int128 *v334;
  uint64_t v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  uint64_t v339;
  uint64_t v340;
  char *v341;
  void *v342;
  uint64_t v343;
  uint64_t v344;

  v270 = sub_10025D914((_DWORD *)a1);
  v264 = sub_10025D914((_DWORD *)a2);
  v268 = (int *)a4;
  v254 = sub_100261284(a4);
  v12 = sub_10025E20C((int *)a1, -1);
  v13 = sub_10025E20C((int *)a2, -1);
  v14 = sub_100260608(a1, -1);
  v15 = sub_100260608(a2, -1);
  v16 = v15;
  v255 = a5;
  if (v14 > 2)
  {
    v328 = 0;
    if (v15 <= 2)
      goto LABEL_3;
LABEL_5:
    v327 = 0;
    goto LABEL_6;
  }
  sub_10025D920(a1, 0xFFFFFFFF, (uint64_t)&v328);
  if (v16 > 2)
    goto LABEL_5;
LABEL_3:
  sub_10025D920(a2, 0xFFFFFFFF, (uint64_t)&v327);
LABEL_6:
  v17 = (v13 >> 3) & 0x1FF;
  v275 = v17 + 1;
  if ((int)sub_100260608(a1, -1) <= 2
    && sub_100261494(a1, -1)
    && ((sub_10025D920(a1, 0xFFFFFFFF, (uint64_t)&v336), (_DWORD)v336 == 1) || DWORD1(v336) == 1)
    && (v270 == 0x20000 || v264 != 0x20000))
  {
    v33 = (_DWORD)v336 == v275;
    v34 = DWORD1(v336) == 1;
    if (DWORD1(v336) != 1)
      v33 = 0;
    if (DWORD1(v336) == v275)
      v34 = 1;
    if ((_DWORD)v336 != 1)
      v34 = 0;
    v18 = 1;
    if (!v34 && !v33)
    {
      v18 = 0;
      if ((_QWORD)v336 == 0x400000001)
      {
        v35 = sub_10025E20C((int *)a1, -1);
        v18 = v17 < 4 && v35 == 6;
      }
    }
  }
  else
  {
    v18 = 0;
  }
  v19 = (v12 >> 3) & 0x1FF;
  v251 = v19 + 1;
  if ((int)sub_100260608(a2, -1) <= 2
    && sub_100261494(a2, -1)
    && ((sub_10025D920(a2, 0xFFFFFFFF, (uint64_t)&v336), (_DWORD)v336 == 1) || DWORD1(v336) == 1)
    && (v270 != 0x20000 || v264 == 0x20000))
  {
    v176 = (_DWORD)v336 == v251;
    v177 = DWORD1(v336) == 1;
    if (DWORD1(v336) != 1)
      v176 = 0;
    if (DWORD1(v336) == v251)
      v177 = 1;
    if ((_DWORD)v336 != 1)
      v177 = 0;
    v20 = 1;
    if (!v177 && !v176)
    {
      v20 = 0;
      if ((_QWORD)v336 == 0x400000001)
      {
        v178 = sub_10025E20C((int *)a2, -1);
        v20 = v19 < 4 && v178 == 6;
      }
    }
  }
  else
  {
    v20 = 0;
  }
  if (v270 == v264 || !v19)
  {
    v24 = (_DWORD)v328 == (_DWORD)v327 && HIDWORD(v328) == HIDWORD(v327) && v14 < 3 && v16 < 3 && v12 == v13;
    v25 = v254;
    if (!v24)
      v25 = 0;
    if (v25)
    {
      if ((sub_100262140((_DWORD *)a3) & 1) == 0 && (v255 < 0 || (v255 & 7) == (v12 & 7)))
      {
        if (v18 == v20)
        {
LABEL_43:
          sub_100263524((int *)a3, (char *)a1, v12);
          if (sub_10025D914((_DWORD *)a1) == 0x10000)
          {
            v26 = *(_QWORD *)(a1 + 8);
            v27 = *(_OWORD *)(v26 + 16);
            v336 = *(_OWORD *)v26;
            v337 = v27;
            v338 = *(_OWORD *)(v26 + 32);
            v28 = *(_QWORD *)(v26 + 56);
            v339 = *(_QWORD *)(v26 + 48);
            v340 = v28;
            v341 = (char *)&v336 + 8;
            v342 = &v343;
            v344 = 0;
            v343 = 0;
            if (v28)
            {
              v29 = (unsigned int *)(v28 + 20);
              do
                v30 = __ldaxr(v29);
              while (__stlxr(v30 + 1, v29));
            }
            if (*(int *)(v26 + 4) > 2)
            {
              DWORD1(v336) = 0;
              sub_100256B48((uint64_t)&v336, v26);
            }
            else
            {
              v31 = *(_QWORD **)(v26 + 72);
              v32 = v342;
              *(_QWORD *)v342 = *v31;
              v32[1] = v31[1];
            }
          }
          else
          {
            sub_10025CCB8(a1, -1, (uint64_t)&v336);
          }
          if (sub_10025D914((_DWORD *)a2) == 0x10000)
          {
            v216 = *(_QWORD *)(a2 + 8);
            v217 = *(_OWORD *)(v216 + 16);
            v318 = *(_OWORD *)v216;
            v319 = v217;
            v320 = *(_OWORD *)(v216 + 32);
            v218 = *(_QWORD *)(v216 + 56);
            v321 = *(_QWORD *)(v216 + 48);
            v322 = v218;
            v323 = (char *)&v318 + 8;
            v324 = &v325;
            v326 = 0;
            v325 = 0;
            if (v218)
            {
              v219 = (unsigned int *)(v218 + 20);
              do
                v220 = __ldaxr(v219);
              while (__stlxr(v220 + 1, v219));
            }
            if (*(int *)(v216 + 4) > 2)
            {
              DWORD1(v318) = 0;
              sub_100256B48((uint64_t)&v318, v216);
            }
            else
            {
              v221 = *(_QWORD **)(v216 + 72);
              v222 = v324;
              *(_QWORD *)v324 = *v221;
              v222[1] = v221[1];
            }
          }
          else
          {
            sub_10025CCB8(a2, -1, (uint64_t)&v318);
          }
          if (sub_10025D914((_DWORD *)a3) == 0x10000)
          {
            v223 = *(_QWORD *)(a3 + 8);
            v224 = *(_OWORD *)(v223 + 16);
            v309 = *(_OWORD *)v223;
            v310 = v224;
            v311 = *(_OWORD *)(v223 + 32);
            v225 = *(_QWORD *)(v223 + 56);
            v312 = *(_QWORD *)(v223 + 48);
            v313 = v225;
            v314 = (char *)&v309 + 8;
            v315 = &v316;
            v317 = 0;
            v316 = 0;
            if (v225)
            {
              v226 = (unsigned int *)(v225 + 20);
              do
                v227 = __ldaxr(v226);
              while (__stlxr(v227 + 1, v226));
            }
            if (*(int *)(v223 + 4) > 2)
            {
              DWORD1(v309) = 0;
              sub_100256B48((uint64_t)&v309, v223);
            }
            else
            {
              v228 = *(_QWORD **)(v223 + 72);
              v229 = v315;
              *(_QWORD *)v315 = *v228;
              v229[1] = v228[1];
            }
          }
          else
          {
            sub_10025CCB8(a3, -1, (uint64_t)&v309);
          }
          v230 = DWORD2(v336);
          v231 = (((unint64_t)v336 >> 3) & 0x1FF) + 1;
          if ((v336 & v318 & v309 & 0x4000) != 0
            && (v232 = SHIDWORD(v336) * (uint64_t)(int)v231 * SDWORD2(v336), v232 == (int)v232))
          {
            v230 = 1;
          }
          else
          {
            v232 = (HIDWORD(v336) * v231);
          }
          (*(void (**)(_QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8 * (v12 & 7)))(v337, v343, v319, v325, v310, v316, v232, v230, a8);
          if (v313)
          {
            v233 = (unsigned int *)(v313 + 20);
            do
            {
              v234 = __ldaxr(v233);
              v235 = v234 - 1;
            }
            while (__stlxr(v235, v233));
            if (!v235)
              sub_100256C90((uint64_t)&v309);
          }
          v313 = 0;
          v310 = 0u;
          v311 = 0u;
          if (SDWORD1(v309) >= 1)
          {
            v236 = 0;
            v237 = v314;
            do
              *(_DWORD *)&v237[4 * v236++] = 0;
            while (v236 < SDWORD1(v309));
          }
          if (v315 != &v316)
            j__free(v315);
          if (v322)
          {
            v238 = (unsigned int *)(v322 + 20);
            do
            {
              v239 = __ldaxr(v238);
              v240 = v239 - 1;
            }
            while (__stlxr(v240, v238));
            if (!v240)
              sub_100256C90((uint64_t)&v318);
          }
          v322 = 0;
          v319 = 0u;
          v320 = 0u;
          if (SDWORD1(v318) >= 1)
          {
            v241 = 0;
            v242 = v323;
            do
              *(_DWORD *)&v242[4 * v241++] = 0;
            while (v241 < SDWORD1(v318));
          }
          if (v324 != &v325)
            j__free(v324);
          if (v340)
          {
            v243 = (unsigned int *)(v340 + 20);
            do
            {
              v244 = __ldaxr(v243);
              v245 = v244 - 1;
            }
            while (__stlxr(v245, v243));
            if (!v245)
              sub_100256C90((uint64_t)&v336);
          }
          v340 = 0;
          v337 = 0u;
          v338 = 0u;
          if (SDWORD1(v336) >= 1)
          {
            v246 = 0;
            v247 = v341;
            do
              *(_DWORD *)&v247[4 * v246++] = 0;
            while (v246 < SDWORD1(v336));
          }
          if (v342 != &v343)
            j__free(v342);
          return;
        }
      }
      else if (sub_100262140((_DWORD *)a3)
             && sub_10025E20C((int *)a3, -1) == v12
             && ((v18 ^ v20) & 1) == 0)
      {
        goto LABEL_43;
      }
    }
  }
  v37 = v13 & 7;
  if (v14 != v16 || v328 != v327 || v19 != v17)
    goto LABEL_421;
  if (v270 == 0x20000)
  {
    v38 = HIDWORD(v328) == 4 || HIDWORD(v328) == 1;
    v39 = v38;
    if ((_DWORD)v328 == 1 && v39)
      goto LABEL_421;
  }
  if (v264 != 0x20000)
  {
    v43 = 0;
    v261 = 0;
    v44 = v13 & 7;
    v257 = v13;
    v275 = v19 + 1;
    v37 = v12 & 7;
    v13 = v12;
    v42 = a2;
    a2 = a1;
    goto LABEL_139;
  }
  if (v328 == 0x400000001)
  {
LABEL_421:
    if ((int)sub_100260608(a1, -1) > 2)
      goto LABEL_85;
    if (!sub_100261494(a1, -1))
      goto LABEL_85;
    sub_10025D920(a1, 0xFFFFFFFF, (uint64_t)&v336);
    if ((_DWORD)v336 != 1 && DWORD1(v336) != 1)
      goto LABEL_85;
    if (v270 != 0x20000 && v264 == 0x20000)
      goto LABEL_85;
    v180 = v336 == v275;
    v181 = DWORD1(v336) == 1;
    if (DWORD1(v336) != 1)
      v180 = 0;
    if (DWORD1(v336) == v275)
      v181 = 1;
    if ((_DWORD)v336 != 1)
      v181 = 0;
    if (!v181 && !v180)
    {
      if ((_QWORD)v336 != 0x400000001 || (v182 = sub_10025E20C((int *)a1, -1), v17 > 3) || v182 != 6)
      {
LABEL_85:
        if ((int)sub_100260608(a2, -1) > 2)
          goto LABEL_91;
        if (!sub_100261494(a2, -1))
          goto LABEL_91;
        sub_10025D920(a2, 0xFFFFFFFF, (uint64_t)&v336);
        if ((_DWORD)v336 != 1 && DWORD1(v336) != 1)
          goto LABEL_91;
        if (v270 == 0x20000 && v264 != 0x20000)
          goto LABEL_91;
        v183 = v336 == v251;
        v184 = DWORD1(v336) == 1;
        if (DWORD1(v336) != 1)
          v183 = 0;
        if (DWORD1(v336) == v251)
          v184 = 1;
        if ((_DWORD)v336 != 1)
          v184 = 0;
        if (!v184 && !v183)
        {
          if ((_QWORD)v336 != 0x400000001 || (v185 = sub_10025E20C((int *)a2, -1), v19 > 3) || v185 != 6)
          {
LABEL_91:
            v336 = 0uLL;
            qmemcpy((void *)sub_10029430C(&v336, 153), "The operation is neither 'array op array' (where arrays have the same size and the same number of channels), nor 'array op scalar', nor 'scalar op array'", 153);
            sub_100294B74(-209, (uint64_t *)&v336, "arithm_op", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 659);
          }
        }
        v261 = 0;
        v40 = v17 + 1;
        v41 = v13;
        v275 = v19 + 1;
        v37 = v12 & 7;
        v13 = v12;
        v42 = a2;
        a2 = a1;
        v257 = v41;
        if (v41 != 6)
        {
LABEL_95:
          v336 = 0uLL;
          qmemcpy((void *)sub_10029430C(&v336, 50), "type2 == 6 && (sz2.height == 1 || sz2.height == 4)", 50);
          sub_100294B74(-215, (uint64_t *)&v336, "arithm_op", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 661);
        }
        goto LABEL_93;
      }
    }
  }
  else
  {
    v43 = 0;
    if (v328 != 0x100000001)
    {
      v44 = v13 & 7;
      v257 = v13;
      v275 = v19 + 1;
      v37 = v12 & 7;
      v13 = v12;
      v42 = a2;
      a2 = a1;
      v261 = 0;
      goto LABEL_139;
    }
    if ((sub_1001D9C2C((int *)a1, v13, v270, 0x20000) & 1) == 0)
      goto LABEL_85;
  }
  v186 = v328;
  v328 = v327;
  v327 = v186;
  v261 = 1;
  v40 = v19 + 1;
  v42 = a1;
  v257 = v12;
  if (v12 != 6)
    goto LABEL_95;
LABEL_93:
  if (HIDWORD(v327) != 1 && HIDWORD(v327) != 4)
    goto LABEL_95;
  if ((a7 & 1) != 0)
  {
    v43 = 1;
    v44 = 6;
  }
  else
  {
    if (sub_10025D914((_DWORD *)v42) == 0x10000)
    {
      v45 = *(_QWORD *)(v42 + 8);
      v46 = *(_OWORD *)(v45 + 16);
      v336 = *(_OWORD *)v45;
      v337 = v46;
      v338 = *(_OWORD *)(v45 + 32);
      v47 = *(_QWORD *)(v45 + 56);
      v339 = *(_QWORD *)(v45 + 48);
      v340 = v47;
      v341 = (char *)&v336 + 8;
      v342 = &v343;
      v344 = 0;
      v343 = 0;
      if (v47)
      {
        v48 = (unsigned int *)(v47 + 20);
        do
          v49 = __ldaxr(v48);
        while (__stlxr(v49 + 1, v48));
      }
      if (*(int *)(v45 + 4) > 2)
      {
        DWORD1(v336) = 0;
        sub_100256B48((uint64_t)&v336, v45);
      }
      else
      {
        v50 = *(_QWORD **)(v45 + 72);
        v51 = v342;
        *(_QWORD *)v342 = *v50;
        v51[1] = v50[1];
      }
    }
    else
    {
      sub_10025CCB8(v42, -1, (uint64_t)&v336);
    }
    v52 = (double *)v337;
    if (HIDWORD(v327) == 1 && (_DWORD)v327 == 1)
      v54 = v40;
    else
      v54 = v275;
    v55 = 0x7FFFFFFF;
    v56 = 0x80000000;
    while (1)
    {
      v57 = (uint64_t)rint(*v52);
      if (*v52 != (double)(int)v57)
        break;
      if (v56 <= (int)v57)
        v56 = v57;
      if (v55 >= (int)v57)
        v55 = v57;
      ++v52;
      if (!--v54)
      {
        if (v55 < 0 || v56 >= 256)
        {
          if (v55 < -128 || v56 >= 128)
          {
            if (v55 < 0 || v56 >= 0x10000)
            {
              if (v56 >= 0x8000 || v55 <= -32769)
                v44 = 4;
              else
                v44 = 3;
            }
            else
            {
              v44 = 2;
            }
          }
          else
          {
            v44 = 1;
          }
        }
        else
        {
          v44 = 0;
        }
        goto LABEL_128;
      }
    }
    v58 = v37 != 5 && v37 >= 4;
    if (v58)
      v44 = 6;
    else
      v44 = 5;
LABEL_128:
    if (v340)
    {
      v59 = (unsigned int *)(v340 + 20);
      do
      {
        v60 = __ldaxr(v59);
        v61 = v60 - 1;
      }
      while (__stlxr(v61, v59));
      if (!v61)
        sub_100256C90((uint64_t)&v336);
    }
    v340 = 0;
    v337 = 0u;
    v338 = 0u;
    if (SDWORD1(v336) >= 1)
    {
      v62 = 0;
      v63 = v341;
      do
        *(_DWORD *)&v63[4 * v62++] = 0;
      while (v62 < SDWORD1(v336));
    }
    if (v342 != &v343)
      j__free(v342);
    v43 = 1;
  }
LABEL_139:
  v64 = v255;
  if (v255 < 0)
  {
    if (sub_100262140((_DWORD *)a3))
    {
      v64 = sub_10025E20C((int *)a3, -1);
    }
    else
    {
      if (v13 == v257)
        v65 = 1;
      else
        v65 = v43;
      v64 = v13;
      if ((v65 & 1) == 0)
      {
        v336 = 0uLL;
        qmemcpy((void *)sub_10029430C(&v336, 136), "When the input arrays in add/subtract/multiply/divide functions have different types, the output array type must be explicitly specified", 136);
        sub_100294B74(-5, (uint64_t *)&v336, "arithm_op", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 683);
      }
    }
  }
  v66 = v64 & 7;
  if (v37 == v44 && v66 == v37)
  {
    v67 = 8 * v275 - 8;
    v68 = v66 | v67;
    if (v254)
    {
LABEL_150:
      sub_100263524((int *)a3, (char *)a2, v68);
      goto LABEL_193;
    }
  }
  else if ((a7 & 1) != 0)
  {
    if (v44 <= v37)
      v69 = v37;
    else
      v69 = v44;
    if (v69 <= v66)
      v69 = v64 & 7;
    if (v69 <= 5)
      LOBYTE(v44) = 5;
    else
      LOBYTE(v44) = v69;
    v67 = 8 * v275 - 8;
    v68 = v66 | v67;
    if (v254)
      goto LABEL_150;
  }
  else
  {
    if (v37 > 1 || v44 >= 2)
    {
      if (v37 <= v44)
        v70 = v44;
      else
        v70 = v37;
      if (v44 < 5 && v37 < 5)
        v70 = 4;
    }
    else
    {
      v70 = 3;
    }
    if (v70 <= v66)
      LOBYTE(v70) = v64 & 7;
    if (v44 < 5 || v37 < 5)
      v73 = 4;
    else
      v73 = v70;
    if (v66 <= 4)
      LOBYTE(v44) = v73;
    else
      LOBYTE(v44) = v70;
    v67 = 8 * v275 - 8;
    v68 = v66 | v67;
    if (v254)
      goto LABEL_150;
  }
  if (sub_10025E20C(v268, -1) > 1 || (sub_10026024C((uint64_t)v268, a2) & 1) == 0)
  {
    v336 = 0uLL;
    qmemcpy((void *)sub_10029430C(&v336, 132), "(mtype == (((0) & ((1 << 3) - 1)) + (((1)-1) << 3)) || mtype == (((1) & ((1 << 3) - 1)) + (((1)-1) << 3))) && _mask.sameSize(*psrc1)", 132);
    sub_100294B74(-215, (uint64_t *)&v336, "arithm_op", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 715);
  }
  if (!sub_10026024C(a3, a2))
  {
    sub_100263524((int *)a3, (char *)a2, v68);
    goto LABEL_192;
  }
  v74 = sub_10025E20C((int *)a3, -1) == v68;
  sub_100263524((int *)a3, (char *)a2, v68);
  if (!v74)
  {
LABEL_192:
    *(_QWORD *)&v309 = 0;
    LODWORD(v336) = -1056833530;
    *((_QWORD *)&v336 + 1) = &v309;
    *(_QWORD *)&v337 = 0x100000001;
    LODWORD(v318) = 0;
    *(_QWORD *)&v319 = 0;
    *((_QWORD *)&v318 + 1) = 0;
    sub_100263808(a3, (uint64_t)&v336, (uint64_t)&v318);
  }
LABEL_193:
  v75 = v67 & 0xFFFFFFF8 | v44 & 7;
  if (v13 != v75)
  {
    v76 = sub_1001FA068(v13, v67 & 0xF8 | v44 & 7);
    v265 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v76;
    if (v257 == v13)
      goto LABEL_200;
LABEL_197:
    if (v257 == v75)
      v265 = 0;
    else
      v265 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001FA068(v257, v67 & 0xF8 | v44 & 7);
    goto LABEL_200;
  }
  v76 = 0;
  v265 = 0;
  if (v257 != v13)
    goto LABEL_197;
LABEL_200:
  if (v68 == v75)
    v260 = 0;
  else
    v260 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001FA068(v67 & 0xF8 | v44 & 7, v68);
  v77 = ((v67 >> 3) & 0x1FF) + 1;
  v308 = (v77 << ((0xFA50u >> (2 * v66)) & 3));
  v253 = sub_100217F60(v308);
  if (sub_10025D914((_DWORD *)a2) == 0x10000)
  {
    v78 = *(_QWORD *)(a2 + 8);
    v79 = *(_OWORD *)(v78 + 16);
    v318 = *(_OWORD *)v78;
    v319 = v79;
    v320 = *(_OWORD *)(v78 + 32);
    v80 = *(_QWORD *)(v78 + 56);
    v321 = *(_QWORD *)(v78 + 48);
    v322 = v80;
    v323 = (char *)&v318 + 8;
    v324 = &v325;
    v326 = 0;
    v325 = 0;
    if (v80)
    {
      v81 = (unsigned int *)(v80 + 20);
      do
        v82 = __ldaxr(v81);
      while (__stlxr(v82 + 1, v81));
    }
    if (*(int *)(v78 + 4) > 2)
    {
      DWORD1(v318) = 0;
      sub_100256B48((uint64_t)&v318, v78);
    }
    else
    {
      v83 = *(_QWORD **)(v78 + 72);
      v84 = v324;
      *(_QWORD *)v324 = *v83;
      v84[1] = v83[1];
    }
  }
  else
  {
    sub_10025CCB8(a2, -1, (uint64_t)&v318);
  }
  v85 = (uint64_t)v268;
  if (sub_10025D914((_DWORD *)v42) == 0x10000)
  {
    v86 = *(_QWORD *)(v42 + 8);
    v87 = *(_OWORD *)(v86 + 16);
    v309 = *(_OWORD *)v86;
    v310 = v87;
    v311 = *(_OWORD *)(v86 + 32);
    v88 = *(_QWORD *)(v86 + 56);
    v312 = *(_QWORD *)(v86 + 48);
    v313 = v88;
    v314 = (char *)&v309 + 8;
    v315 = &v316;
    v317 = 0;
    v316 = 0;
    if (v88)
    {
      v89 = (unsigned int *)(v88 + 20);
      do
        v90 = __ldaxr(v89);
      while (__stlxr(v90 + 1, v89));
    }
    if (*(int *)(v86 + 4) > 2)
    {
      DWORD1(v309) = 0;
      sub_100256B48((uint64_t)&v309, v86);
    }
    else
    {
      v91 = *(_QWORD **)(v86 + 72);
      v92 = v315;
      *(_QWORD *)v315 = *v91;
      v92[1] = v91[1];
    }
  }
  else
  {
    sub_10025CCB8(v42, -1, (uint64_t)&v309);
  }
  if (sub_10025D914((_DWORD *)a3) == 0x10000)
  {
    v93 = *(_QWORD *)(a3 + 8);
    v94 = *(_OWORD *)(v93 + 16);
    v300 = *(_OWORD *)v93;
    v301 = v94;
    v302 = *(_OWORD *)(v93 + 32);
    v95 = *(_QWORD *)(v93 + 56);
    v303 = *(_QWORD *)(v93 + 48);
    v304 = v95;
    v305 = (char *)&v300 + 8;
    v306 = v307;
    v307[0] = 0;
    v307[1] = 0;
    if (v95)
    {
      v96 = (unsigned int *)(v95 + 20);
      do
        v97 = __ldaxr(v96);
      while (__stlxr(v97 + 1, v96));
    }
    if (*(int *)(v93 + 4) > 2)
    {
      DWORD1(v300) = 0;
      sub_100256B48((uint64_t)&v300, v93);
    }
    else
    {
      v98 = *(_QWORD **)(v93 + 72);
      v99 = v306;
      *(_QWORD *)v306 = *v98;
      v99[1] = v98[1];
    }
  }
  else
  {
    sub_10025CCB8(a3, -1, (uint64_t)&v300);
  }
  v269 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v76;
  if (sub_10025D914((_DWORD *)v85) == 0x10000)
  {
    v100 = *(_QWORD *)(v85 + 8);
    v101 = *(_OWORD *)(v100 + 16);
    v292 = *(_OWORD *)v100;
    v293 = v101;
    v294 = *(_OWORD *)(v100 + 32);
    v102 = *(_QWORD *)(v100 + 56);
    v295 = *(_QWORD *)(v100 + 48);
    v296 = v102;
    v297 = (char *)&v292 + 8;
    v298 = v299;
    v299[0] = 0;
    v299[1] = 0;
    if (v102)
    {
      v103 = (unsigned int *)(v102 + 20);
      do
        v104 = __ldaxr(v103);
      while (__stlxr(v104 + 1, v103));
    }
    if (*(int *)(v100 + 4) > 2)
    {
      DWORD1(v292) = 0;
      sub_100256B48((uint64_t)&v292, v100);
    }
    else
    {
      v105 = *(_QWORD **)(v100 + 72);
      v106 = v298;
      *(_QWORD *)v298 = *v105;
      v106[1] = v105[1];
    }
  }
  else
  {
    sub_10025CCB8(v85, -1, (uint64_t)&v292);
  }
  v107 = v44 & 7;
  v271 = (((v13 >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * (v13 & 7))) & 3);
  v108 = (v77 << ((0xFA50u >> (2 * (v44 & 7))) & 3));
  v109 = ((int)v108 + 1023) / v108;
  *(_QWORD *)&v336 = &v337;
  *((_QWORD *)&v336 + 1) = 1032;
  if (v76)
    v110 = v108;
  else
    v110 = 0;
  if (v265)
    v111 = 1;
  else
    v111 = v43;
  if (v111)
    v112 = v108;
  else
    v112 = 0;
  if (v260)
    v113 = v108;
  else
    v113 = 0;
  v114 = v112 + v110 + v113;
  v115 = v308;
  if (v254)
    v115 = 0;
  v116 = v114 + v115;
  v273 = *(void (**)(_QWORD, _QWORD))(a6 + 8 * v107);
  if ((v43 & 1) != 0)
  {
    v331 = &v318;
    v332 = &v300;
    v333 = &v292;
    v334 = 0;
    v329 = 0uLL;
    *(_QWORD *)&v330 = 0;
    sub_100254D30((uint64_t)v289, (uint64_t *)&v331, (uint64_t)&v329, -1);
    v117 = v291;
    if (v291 >= v109)
      v118 = ((int)v108 + 1023) / v108;
    else
      v118 = v291;
    v119 = v118 * v116 + 64;
    if (*((_QWORD *)&v336 + 1) >= v119)
    {
      *((_QWORD *)&v336 + 1) = v118 * v116 + 64;
      v120 = (__int128 *)v336;
    }
    else
    {
      v120 = &v337;
      if ((__int128 *)v336 != &v337)
      {
        if ((_QWORD)v336)
          operator delete[]();
        v120 = &v337;
        *(_QWORD *)&v336 = &v337;
      }
      *((_QWORD *)&v336 + 1) = v118 * v116 + 64;
      if (v119 >= 0x409)
        operator new[]();
    }
    v127 = v118 * v108;
    if (v76)
      v128 = (__int128 *)(((unint64_t)v120 + v118 * v108 + 15) & 0xFFFFFFFFFFFFFFF0);
    else
      v128 = v120;
    if (v76)
      v129 = v120;
    else
      v129 = 0;
    v266 = v129;
    sub_1001D4510((uint64_t)&v309, v75, v128, v118);
    if (v117)
    {
      if (v260)
        v130 = 1;
      else
        v130 = !v254;
      if ((v130 & 1) != 0)
      {
        v131 = ((unint64_t)v128 + v127 + 15) & 0xFFFFFFFFFFFFFFF0;
        if (v254)
        {
          if (v261)
            v132 = v128;
          else
            v132 = v266;
          if (v261)
            v133 = v266;
          else
            v133 = v128;
          if (v76)
          {
            v134 = 0;
            while (v134 < v290)
            {
              v263 = v134;
              v135 = 0;
              v137 = *((_QWORD *)&v329 + 1);
              v136 = v329;
              do
              {
                if (v117 - v135 >= v118)
                  v138 = v118;
                else
                  v138 = v117 - v135;
                v281 = v275 * v138;
                v282 = 1;
                v269(v136, 1, 0, 1, v266, 1, &v281, 0);
                ((void (*)(__int128 *, uint64_t, __int128 *, uint64_t, unint64_t, uint64_t, _QWORD, uint64_t, uint64_t))v273)(v132, 1, v133, 1, v131, 1, v275 * v138, 1, a8);
                v279 = v275 * v138;
                v280 = 1;
                v260(v131, 1, 0, 1, v137, 1, &v279, 0);
                v136 = v329 + v138 * v271;
                v137 = *((_QWORD *)&v329 + 1) + v308 * v138;
                *(_QWORD *)&v329 = v136;
                *((_QWORD *)&v329 + 1) = v137;
                v135 += v118;
              }
              while (v135 < v117);
              v134 = v263 + 1;
              sub_100254D78((uint64_t)v289);
            }
          }
          else
          {
            for (i = 0; i < v290; ++i)
            {
              v188 = 0;
              v190 = *((_QWORD *)&v329 + 1);
              v189 = (_BYTE *)v329;
              do
              {
                if (v117 - v188 >= v118)
                  v191 = v118;
                else
                  v191 = v117 - v188;
                if (v261)
                  v192 = v128;
                else
                  v192 = v189;
                if (v261)
                  v193 = v189;
                else
                  v193 = v128;
                ((void (*)(__int128 *, uint64_t, __int128 *, uint64_t, unint64_t, uint64_t, _QWORD, uint64_t, uint64_t))v273)((__int128 *)v192, 1, (__int128 *)v193, 1, v131, 1, v275 * v191, 1, a8);
                v279 = v275 * v191;
                v280 = 1;
                v260(v131, 1, 0, 1, v190, 1, &v279, 0);
                v189 = (_BYTE *)(v329 + v191 * v271);
                v190 = *((_QWORD *)&v329 + 1) + v308 * v191;
                *(_QWORD *)&v329 = v189;
                *((_QWORD *)&v329 + 1) = v190;
                v188 += v118;
              }
              while (v188 < v117);
              sub_100254D78((uint64_t)v289);
            }
          }
        }
        else
        {
          v166 = 0;
          while (v166 < v290)
          {
            v267 = v166;
            v167 = 0;
            v169 = *((_QWORD *)&v329 + 1);
            v168 = (__int128 *)v329;
            do
            {
              if (v117 - v167 >= v118)
                v170 = v118;
              else
                v170 = v117 - v167;
              if (v269)
              {
                v281 = v275 * v170;
                v282 = 1;
                v269(v168, 1, 0, 1, v120, 1, &v281, 0);
                v168 = v120;
              }
              if (v261)
                v171 = v128;
              else
                v171 = v168;
              if (v261)
                v172 = v168;
              else
                v172 = v128;
              ((void (*)(__int128 *, uint64_t, __int128 *, uint64_t, unint64_t, uint64_t, _QWORD, uint64_t, uint64_t))v273)(v171, 1, v172, 1, v131, 1, v275 * v170, 1, a8);
              if (v260)
              {
                v277[0] = v275 * v170;
                v277[1] = 1;
                v260(v131, 1, 0, 1, (v131 + v127 + 15) & 0xFFFFFFFFFFFFFFF0, 1, v277, 0);
                v173 = v330;
                v276 = v170;
                v174 = &v276;
                v175 = (v131 + v127 + 15) & 0xFFFFFFFFFFFFFFF0;
              }
              else
              {
                v173 = v330;
                v278 = v170;
                v174 = &v278;
                v175 = ((unint64_t)v128 + v127 + 15) & 0xFFFFFFFFFFFFFFF0;
              }
              v174[1] = 1;
              ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))v253)(v175, 1, v173, 1, v169, 1);
              *(_QWORD *)&v330 = v330 + v170;
              v168 = (__int128 *)(v329 + v170 * v271);
              v169 = *((_QWORD *)&v329 + 1) + v308 * v170;
              *(_QWORD *)&v329 = v168;
              *((_QWORD *)&v329 + 1) = v169;
              v167 += v118;
            }
            while (v167 < v117);
            v166 = v267 + 1;
            sub_100254D78((uint64_t)v289);
          }
        }
      }
      else
      {
        for (j = 0; j < v290; ++j)
        {
          v160 = 0;
          v162 = *((_QWORD *)&v329 + 1);
          v161 = (__int128 *)v329;
          do
          {
            if (v117 - v160 >= v118)
              v163 = v118;
            else
              v163 = v117 - v160;
            if (v269)
            {
              v281 = v275 * v163;
              v282 = 1;
              v269(v161, 1, 0, 1, v120, 1, &v281, 0);
              v161 = v120;
            }
            if (v261)
              v164 = v128;
            else
              v164 = v161;
            if (v261)
              v165 = v161;
            else
              v165 = v128;
            ((void (*)(__int128 *, uint64_t, __int128 *, uint64_t, unint64_t, uint64_t, _QWORD, uint64_t, uint64_t))v273)(v164, 1, v165, 1, v162, 1, v275 * v163, 1, a8);
            v161 = (__int128 *)(v329 + v163 * v271);
            v162 = *((_QWORD *)&v329 + 1) + v308 * v163;
            *(_QWORD *)&v329 = v161;
            *((_QWORD *)&v329 + 1) = v162;
            v160 += v118;
          }
          while (v160 < v117);
          sub_100254D78((uint64_t)v289);
        }
      }
    }
    else
    {
      v158 = -1;
      while (++v158 < v290)
        sub_100254D78((uint64_t)v289);
    }
    goto LABEL_454;
  }
  v331 = &v318;
  v332 = &v309;
  v333 = &v300;
  v334 = &v292;
  v335 = 0;
  v329 = 0u;
  v330 = 0u;
  sub_100254D30((uint64_t)v289, (uint64_t *)&v331, (uint64_t)&v329, -1);
  if (v76)
    v121 = 1;
  else
    v121 = !v254;
  if (v265)
    v121 = 1;
  if (v260)
    v121 = 1;
  if (v291 >= v109)
    v122 = ((int)v108 + 1023) / v108;
  else
    v122 = v291;
  v262 = v291;
  if (v121)
    v123 = v122;
  else
    v123 = v291;
  v124 = v123 * v116 + 64;
  if (*((_QWORD *)&v336 + 1) >= v124)
  {
    *((_QWORD *)&v336 + 1) = v123 * v116 + 64;
    v125 = (__int128 *)v336;
    v126 = v257;
  }
  else
  {
    v125 = &v337;
    v126 = v257;
    if ((__int128 *)v336 != &v337)
    {
      if ((_QWORD)v336)
        operator delete[]();
      v125 = &v337;
      *(_QWORD *)&v336 = &v337;
    }
    *((_QWORD *)&v336 + 1) = v124;
    if (v124 >= 0x409)
      operator new[]();
  }
  v139 = v123 * v108;
  v140 = ((unint64_t)v125 + v123 * v108 + 15) & 0xFFFFFFFFFFFFFFF0;
  if (!v76)
    v140 = (unint64_t)v125;
  if (v265)
    v141 = (v140 + v139 + 15) & 0xFFFFFFFFFFFFFFF0;
  else
    v141 = v140;
  if (!v265)
    v140 = 0;
  v252 = v140;
  if (v260)
    v142 = 1;
  else
    v142 = !v254;
  v258 = v142;
  if (v291)
  {
    v143 = 0;
    v256 = (((v126 >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * (v126 & 7))) & 3);
    v144 = v141;
    v250 = (v141 + v139 + 15) & 0xFFFFFFFFFFFFFFF0;
    while (1)
    {
      if (v143 >= v290)
        goto LABEL_454;
      v248 = v143;
      v145 = 0;
      v147 = *((_QWORD *)&v329 + 1);
      v146 = (__int128 *)v329;
      v148 = v262;
      v149 = v330;
      do
      {
        v150 = v148;
        v58 = v148 >= v123;
        v148 -= v123;
        if (v58)
          v151 = v123;
        else
          v151 = v150;
        if (v269)
        {
          v288[0] = v275 * v151;
          v288[1] = 1;
          v269(v146, 1, 0, 1, v125, 1, v288, 0);
          v152 = v125;
          if ((_QWORD)v329 == *((_QWORD *)&v329 + 1))
            v153 = v125;
          else
            v153 = (_OWORD *)v147;
          if ((_QWORD)v329 == *((_QWORD *)&v329 + 1))
            goto LABEL_341;
        }
        else
        {
          v152 = v146;
          if (v146 == (__int128 *)v147)
            v153 = v146;
          else
            v153 = (_OWORD *)v147;
          if (v146 == (__int128 *)v147)
            goto LABEL_341;
        }
        if (v265)
        {
          v287[0] = v275 * v151;
          v287[1] = 1;
          v265(v147, 1, 0, 1, v252, 1, v287, 0);
          v153 = (_OWORD *)v252;
        }
LABEL_341:
        if ((v258 & 1) != 0)
        {
          ((void (*)(__int128 *, uint64_t, _OWORD *, uint64_t, unint64_t, _QWORD, _QWORD, uint64_t, uint64_t))v273)(v152, 1, v153, 1, v144, 0, v275 * v151, 1, a8);
          if (v254)
          {
            v286[0] = v275 * v151;
            v286[1] = 1;
            v260(v144, 1, 0, 1, v149, 1, v286, 0);
          }
          else
          {
            if (v260)
            {
              v284[0] = v275 * v151;
              v284[1] = 1;
              v260(v144, 1, 0, 1, v250, 1, v284, 0);
              v154 = *((_QWORD *)&v330 + 1);
              v283 = v151;
              v155 = &v283;
              v156 = v250;
            }
            else
            {
              v154 = *((_QWORD *)&v330 + 1);
              v285 = v151;
              v155 = &v285;
              v156 = v144;
            }
            v155[1] = 1;
            ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v253)(v156, 1, v154, 1, v149, 1);
            *((_QWORD *)&v330 + 1) += v151;
          }
        }
        else
        {
          v273(v152, 1);
        }
        v146 = (__int128 *)(v329 + v151 * (uint64_t)(int)v271);
        v147 = *((_QWORD *)&v329 + 1) + v151 * (uint64_t)v256;
        *(_QWORD *)&v329 = v146;
        *((_QWORD *)&v329 + 1) = v147;
        v149 = v330 + v308 * v151;
        *(_QWORD *)&v330 = v149;
        v145 += v123;
      }
      while (v145 < v262);
      v143 = v248 + 1;
      sub_100254D78((uint64_t)v289);
    }
  }
  v157 = -1;
  while (++v157 < v290)
    sub_100254D78((uint64_t)v289);
LABEL_454:
  if ((__int128 *)v336 != &v337 && (_QWORD)v336 != 0)
    operator delete[]();
  if (v296)
  {
    v195 = (unsigned int *)(v296 + 20);
    do
    {
      v196 = __ldaxr(v195);
      v197 = v196 - 1;
    }
    while (__stlxr(v197, v195));
    if (!v197)
      sub_100256C90((uint64_t)&v292);
  }
  v296 = 0;
  v293 = 0u;
  v294 = 0u;
  if (SDWORD1(v292) >= 1)
  {
    v198 = 0;
    v199 = v297;
    do
      *(_DWORD *)&v199[4 * v198++] = 0;
    while (v198 < SDWORD1(v292));
  }
  if (v298 != v299)
    j__free(v298);
  if (v304)
  {
    v200 = (unsigned int *)(v304 + 20);
    do
    {
      v201 = __ldaxr(v200);
      v202 = v201 - 1;
    }
    while (__stlxr(v202, v200));
    if (!v202)
      sub_100256C90((uint64_t)&v300);
  }
  v304 = 0;
  v301 = 0u;
  v302 = 0u;
  if (SDWORD1(v300) >= 1)
  {
    v203 = 0;
    v204 = v305;
    do
      *(_DWORD *)&v204[4 * v203++] = 0;
    while (v203 < SDWORD1(v300));
  }
  if (v306 != v307)
    j__free(v306);
  if (v313)
  {
    v205 = (unsigned int *)(v313 + 20);
    do
    {
      v206 = __ldaxr(v205);
      v207 = v206 - 1;
    }
    while (__stlxr(v207, v205));
    if (!v207)
      sub_100256C90((uint64_t)&v309);
  }
  v313 = 0;
  v310 = 0u;
  v311 = 0u;
  if (SDWORD1(v309) >= 1)
  {
    v208 = 0;
    v209 = v314;
    do
      *(_DWORD *)&v209[4 * v208++] = 0;
    while (v208 < SDWORD1(v309));
  }
  if (v315 != &v316)
    j__free(v315);
  if (v322)
  {
    v210 = (unsigned int *)(v322 + 20);
    do
    {
      v211 = __ldaxr(v210);
      v212 = v211 - 1;
    }
    while (__stlxr(v212, v210));
    if (!v212)
      sub_100256C90((uint64_t)&v318);
  }
  v322 = 0;
  v319 = 0u;
  v320 = 0u;
  if (SDWORD1(v318) >= 1)
  {
    v213 = 0;
    v214 = v323;
    do
      *(_DWORD *)&v214[4 * v213++] = 0;
    while (v213 < SDWORD1(v318));
  }
  if (v324 != &v325)
    j__free(v324);
}

void sub_1001D83A0(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_100008C88(a1);
  _Unwind_Resume(a1);
}

void sub_1001D8500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;

  if (STACK[0x310] != a10 && STACK[0x310] != 0)
    operator delete[]();
  sub_100006BE4((uint64_t)&a45);
  sub_100006BE4((uint64_t)&a57);
  sub_100006BE4((uint64_t)&a71);
  sub_100006BE4((uint64_t)&STACK[0x250]);
  _Unwind_Resume(a1);
}

void sub_1001D8554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  _BYTE v10[8];
  int v11;

  sub_100298C2C(v10, &off_10044CB88);
  sub_1001D6408(a1, a2, a3, a4, a5, (uint64_t)off_10048A8F0, 0, 0);
  if (v11)
    sub_1002989D0(v10);
}

void sub_1001D85E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1001D40CC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001D85F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  _BYTE v7[8];
  int v8;

  sub_100298C2C(v7, &off_10044CBA8);
  v6 = sub_100263CBC();
  sub_1001D6408(a1, a2, a3, (uint64_t)v6, -1, (uint64_t)off_10048A930, 0, 0);
  if (v8)
    sub_1002989D0(v7);
}

void sub_1001D867C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1001D40CC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001D8690(uint64_t a1, uint64_t a2, uint64_t a3, int a4, double a5)
{
  int *v9;
  _BYTE v10[8];
  int v11;
  double v12;

  v12 = a5;
  sub_100298C2C(v10, &off_10044CBC8);
  v9 = sub_100263CBC();
  sub_1001D6408(a1, a2, a3, (uint64_t)v9, a4, (uint64_t)off_10048A970, 1, (uint64_t)&v12);
  if (v11)
    sub_1002989D0(v10);
}

void sub_1001D871C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1001D40CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001D8730(uint64_t a1, uint64_t a2, uint64_t a3, int a4, double a5)
{
  int *v9;
  _BYTE v10[8];
  int v11;
  double v12;

  v12 = a5;
  sub_100298C2C(v10, &off_10044CBE8);
  v9 = sub_100263CBC();
  sub_1001D6408(a1, a2, a3, (uint64_t)v9, a4, (uint64_t)off_10048AA88, 1, (uint64_t)&v12);
  if (v11)
    sub_1002989D0(v10);
}

void sub_1001D87BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1001D40CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001D87D0(uint64_t a1, uint64_t a2, int a3, double a4)
{
  int *v7;
  _BYTE v8[8];
  int v9;
  double v10;

  v10 = a4;
  sub_100298C2C(v8, &off_10044CC08);
  v7 = sub_100263CBC();
  sub_1001D6408(a1, a1, a2, (uint64_t)v7, a3, (uint64_t)off_10048AAC8, 1, (uint64_t)&v10);
  if (v9)
    sub_1002989D0(v8);
}

void sub_1001D8858(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1001D40CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001D886C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, double a5, double a6, double a7)
{
  int *v14;
  _BYTE v15[8];
  int v16;
  _QWORD v17[3];

  sub_100298C2C(v15, &off_10044CC28);
  *(double *)v17 = a5;
  *(double *)&v17[1] = a6;
  *(double *)&v17[2] = a7;
  v14 = sub_100263CBC();
  sub_1001D6408(a1, a2, a3, (uint64_t)v14, a4, (uint64_t)off_10048A9B0, 1, (uint64_t)v17);
  if (v16)
    sub_1002989D0(v15);
}

void sub_1001D8940(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_100008C88(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_1001D895C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1001D40CC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001D8970(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v8;
  int v9;
  int v10;
  int v11;
  char v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t *v39;
  __int32 v40;
  __int16 v41;
  char v42;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  unsigned int *v48;
  unsigned int v49;
  uint64_t *v50;
  uint64_t *v51;
  unsigned int *v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t *v57;
  unsigned int *v58;
  unsigned int v59;
  unsigned int v60;
  uint64_t v61;
  _DWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  unsigned int *v67;
  unsigned int v68;
  uint64_t *v69;
  uint64_t *v70;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t (*v78)(int, int, int, int, int, int, int, int, uint64_t);
  unint64_t v79;
  unint64_t v80;
  unint64_t i;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(_QWORD, uint64_t, _QWORD, uint64_t, double *, uint64_t, uint64_t *, _QWORD);
  BOOL v89;
  double v90;
  uint64_t v91;
  unsigned int *v93;
  unsigned int v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int *v98;
  unsigned int v99;
  unsigned int v100;
  uint64_t v101;
  _DWORD *v102;
  unsigned int *v103;
  unsigned int v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t *v107;
  unsigned int v108;
  BOOL v109;
  BOOL v110;
  int v111;
  unsigned int v113;
  BOOL v114;
  BOOL v115;
  BOOL v116;
  int v117;
  int v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unsigned int *v123;
  unsigned int v124;
  unsigned int v125;
  uint64_t v126;
  _BYTE *v127;
  unsigned int *v128;
  unsigned int v129;
  unsigned int v130;
  uint64_t v131;
  char *v132;
  int v133;
  int v134;
  uint64_t v135;
  double v136;
  _BYTE v137[4];
  int v138;
  __int128 v139;
  __int128 v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  int32x2_t v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  _DWORD *v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  uint64_t *v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  char v162[8];
  int v163;
  int v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  int64x2_t *v171;
  int64x2_t v172;
  _BYTE v173[64];
  _BYTE *v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185[3];

  v164 = a4;
  sub_100298C2C(v162, &off_10044CC48);
  if (a4 >= 6)
  {
    *(_QWORD *)v173 = 0;
    *(_QWORD *)&v173[8] = 0;
    qmemcpy((void *)sub_10029430C(v173, 92), "op == CMP_LT || op == CMP_LE || op == CMP_EQ || op == CMP_NE || op == CMP_GE || op == CMP_GT", 92);
    sub_100294B74(-215, (uint64_t *)v173, "compare", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 1234);
  }
  v8 = sub_10025D914((_DWORD *)a1);
  v9 = sub_10025D914((_DWORD *)a2);
  v10 = v8 == 0x20000;
  if (v9 == 0x20000)
    ++v10;
  if (v10 != 1
    && sub_10026024C(a1, a2)
    && (v11 = sub_10025E20C((int *)a1, -1), v11 == sub_10025E20C((int *)a2, -1)))
  {
    v12 = 0;
  }
  else
  {
    v13 = sub_10025E20C((int *)a2, -1);
    v14 = sub_10025D914((_DWORD *)a1);
    v15 = sub_10025D914((_DWORD *)a2);
    if ((int)sub_100260608(a1, -1) <= 2
      && sub_100261494(a1, -1)
      && ((sub_10025D920(a1, 0xFFFFFFFF, (uint64_t)v173), *(_DWORD *)v173 == 1) || *(_DWORD *)&v173[4] == 1)
      && (v14 == 0x20000 || v15 != 0x20000))
    {
      v108 = (v13 >> 3) & 0x1FF;
      v109 = *(_DWORD *)v173 == v108 + 1;
      if (*(_DWORD *)&v173[4] != 1)
        v109 = 0;
      v110 = *(_DWORD *)&v173[4] == v108 + 1 || *(_DWORD *)&v173[4] == 1;
      if (*(_DWORD *)v173 != 1)
        v110 = 0;
      v16 = 1;
      if (!v110 && !v109)
      {
        v16 = 0;
        if (*(_DWORD *)v173 == 1 && *(_DWORD *)&v173[4] == 4)
        {
          v111 = sub_10025E20C((int *)a1, -1);
          v16 = v108 < 4 && v111 == 6;
        }
      }
    }
    else
    {
      v16 = 0;
    }
    v17 = sub_10025E20C((int *)a1, -1);
    v18 = sub_10025D914((_DWORD *)a2);
    v19 = sub_10025D914((_DWORD *)a1);
    if ((int)sub_100260608(a2, -1) <= 2
      && sub_100261494(a2, -1)
      && ((sub_10025D920(a2, 0xFFFFFFFF, (uint64_t)v173), *(_DWORD *)v173 == 1) || *(_DWORD *)&v173[4] == 1)
      && (v18 == 0x20000 || v19 != 0x20000))
    {
      v113 = (v17 >> 3) & 0x1FF;
      v114 = *(_DWORD *)v173 == v113 + 1;
      if (*(_DWORD *)&v173[4] != 1)
        v114 = 0;
      v115 = *(_DWORD *)&v173[4] == v113 + 1 || *(_DWORD *)&v173[4] == 1;
      v116 = *(_DWORD *)v173 == 1 && v115;
      v20 = 1;
      if (!v116 && !v114)
      {
        v20 = 0;
        if (*(_DWORD *)v173 == 1 && *(_DWORD *)&v173[4] == 4)
        {
          v117 = sub_10025E20C((int *)a2, -1);
          v20 = v113 < 4 && v117 == 6;
        }
      }
    }
    else
    {
      v20 = 0;
    }
    if (v16 && (v20 & 1) == 0)
    {
      if ((v164 - 2) >= 3)
      {
        if (v164 == 1)
          v21 = 3;
        else
          v21 = v164;
      }
      else
      {
        v21 = dword_1003BCA70[v164 - 2];
      }
      v164 = v21;
      sub_1001D8970(a2, a1, a3);
      goto LABEL_191;
    }
    if (v16 == v20)
    {
      *(_QWORD *)v173 = 0;
      *(_QWORD *)&v173[8] = 0;
      qmemcpy((void *)sub_10029430C(v173, 139), "The operation is neither 'array op array' (where arrays have the same size and the same type), nor 'array op scalar', nor 'scalar op array'", 139);
      sub_100294B74(-209, (uint64_t *)v173, "compare", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 1256);
    }
    v12 = 1;
  }
  v22 = sub_10025D914((_DWORD *)a1);
  v23 = sub_10025D914((_DWORD *)a2);
  if (sub_10025D914((_DWORD *)a1) == 0x10000)
  {
    v24 = *(_QWORD *)(a1 + 8);
    v25 = *(_OWORD *)(v24 + 16);
    v154 = *(_OWORD *)v24;
    v155 = v25;
    v156 = *(_OWORD *)(v24 + 32);
    v26 = *(_QWORD *)(v24 + 56);
    *(_QWORD *)&v157 = *(_QWORD *)(v24 + 48);
    *((_QWORD *)&v157 + 1) = v26;
    v158 = (uint64_t *)&v154 + 1;
    v159 = &v160;
    v160 = 0;
    v161 = 0;
    if (v26)
    {
      v27 = (unsigned int *)(v26 + 20);
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 + 1, v27));
    }
    if (*(int *)(v24 + 4) > 2)
    {
      DWORD1(v154) = 0;
      sub_100256B48((uint64_t)&v154, v24);
    }
    else
    {
      v29 = *(uint64_t **)(v24 + 72);
      v30 = v159;
      *v159 = *v29;
      v30[1] = v29[1];
    }
  }
  else
  {
    sub_10025CCB8(a1, -1, (uint64_t)&v154);
  }
  if (sub_10025D914((_DWORD *)a2) == 0x10000)
  {
    v31 = *(_QWORD *)(a2 + 8);
    v32 = *(_OWORD *)(v31 + 16);
    v146 = *(_OWORD *)v31;
    v33 = *(_OWORD *)(v31 + 32);
    v147 = v32;
    v148 = v33;
    v34 = *(_QWORD *)(v31 + 56);
    *(_QWORD *)&v149 = *(_QWORD *)(v31 + 48);
    *((_QWORD *)&v149 + 1) = v34;
    v150 = (_DWORD *)&v146 + 2;
    v151 = &v152;
    v152 = 0;
    v153 = 0;
    if (v34)
    {
      v35 = (unsigned int *)(v34 + 20);
      do
        v36 = __ldaxr(v35);
      while (__stlxr(v36 + 1, v35));
    }
    if (*(int *)(v31 + 4) > 2)
    {
      DWORD1(v146) = 0;
      sub_100256B48((uint64_t)&v146, v31);
    }
    else
    {
      v37 = *(uint64_t **)(v31 + 72);
      v38 = v151;
      *v151 = *v37;
      v38[1] = v37[1];
    }
  }
  else
  {
    sub_10025CCB8(a2, -1, (uint64_t)&v146);
  }
  if (v22 == v23 && SDWORD1(v154) <= 2 && SDWORD1(v146) < 3)
  {
    v39 = v158;
    v40 = *(_DWORD *)v158;
    v41 = v154;
    v42 = v146;
    if (*((_DWORD *)v158 + 1) == v150[1]
      && v40 == *v150
      && (((unsigned __int16)v146 ^ (unsigned __int16)v154) & 0xFFF) == 0)
    {
      v145.i32[0] = *((_DWORD *)v158 + 1);
      v145.i32[1] = v40;
      sub_10026214C(a3, &v145, v154 & 0xFF8, -1, 0, 0);
      if (sub_10025D914((_DWORD *)a3) == 0x10000)
      {
        v45 = *(_QWORD *)(a3 + 8);
        v46 = *(_OWORD *)(v45 + 16);
        *(_OWORD *)v173 = *(_OWORD *)v45;
        *(_OWORD *)&v173[16] = v46;
        *(_OWORD *)&v173[32] = *(_OWORD *)(v45 + 32);
        v47 = *(_QWORD *)(v45 + 56);
        *(_QWORD *)&v173[48] = *(_QWORD *)(v45 + 48);
        *(_QWORD *)&v173[56] = v47;
        v174 = &v173[8];
        v175 = &v176;
        v176 = 0;
        v177 = 0;
        if (v47)
        {
          v48 = (unsigned int *)(v47 + 20);
          do
            v49 = __ldaxr(v48);
          while (__stlxr(v49 + 1, v48));
        }
        if (*(int *)(v45 + 4) > 2)
        {
          *(_DWORD *)&v173[4] = 0;
          sub_100256B48((uint64_t)v173, v45);
        }
        else
        {
          v50 = *(uint64_t **)(v45 + 72);
          v51 = v175;
          *v175 = *v50;
          v51[1] = v50[1];
        }
      }
      else
      {
        sub_10025CCB8(a3, -1, (uint64_t)v173);
      }
      v120 = DWORD2(v154);
      v121 = (((unint64_t)v154 >> 3) & 0x1FF) + 1;
      if ((v154 & v146 & *(_DWORD *)v173 & 0x4000) != 0
        && (v122 = SHIDWORD(v154) * (uint64_t)(int)v121 * SDWORD2(v154), v122 == (int)v122))
      {
        v120 = 1;
      }
      else
      {
        v122 = (HIDWORD(v154) * v121);
      }
      off_10044CC68[v154 & 7](v155, v160, v147, v152, *(_QWORD *)&v173[16], v176, v122, v120, (uint64_t)&v164);
      if (*(_QWORD *)&v173[56])
      {
        v123 = (unsigned int *)(*(_QWORD *)&v173[56] + 20);
        do
        {
          v124 = __ldaxr(v123);
          v125 = v124 - 1;
        }
        while (__stlxr(v125, v123));
        if (!v125)
          sub_100256C90((uint64_t)v173);
      }
      *(_QWORD *)&v173[56] = 0;
      memset(&v173[16], 0, 32);
      if (*(int *)&v173[4] >= 1)
      {
        v126 = 0;
        v127 = v174;
        do
          *(_DWORD *)&v127[4 * v126++] = 0;
        while (v126 < *(int *)&v173[4]);
      }
      if (v175 != &v176)
        j__free(v175);
      goto LABEL_171;
    }
  }
  else
  {
    v41 = v154;
    v42 = v146;
    v39 = v158;
  }
  sub_100258F0C((int *)a3, SDWORD1(v154), v39, v41 & 0xFF8, 0xFFFFFFFF, 0, 0);
  sub_10025AFC4((uint64_t)&v154, 1, 0, (uint64_t)v173);
  if (*((_QWORD *)&v157 + 1))
  {
    v52 = (unsigned int *)(*((_QWORD *)&v157 + 1) + 20);
    do
    {
      v53 = __ldaxr(v52);
      v54 = v53 - 1;
    }
    while (__stlxr(v54, v52));
    if (!v54)
      sub_100256C90((uint64_t)&v154);
  }
  if (SDWORD1(v154) >= 1)
  {
    v55 = 0;
    v56 = v158;
    do
      *((_DWORD *)v56 + v55++) = 0;
    while (v55 < SDWORD1(v154));
  }
  v154 = *(_OWORD *)v173;
  v155 = *(_OWORD *)&v173[16];
  v156 = *(_OWORD *)&v173[32];
  v157 = *(_OWORD *)&v173[48];
  if (v159 == &v160)
  {
    v57 = v175;
    if (*(int *)&v173[4] <= 2)
      goto LABEL_78;
  }
  else
  {
    j__free(v159);
    v158 = (uint64_t *)&v154 + 1;
    v159 = &v160;
    v57 = v175;
    if (*(int *)&v173[4] <= 2)
    {
LABEL_78:
      v160 = *v57;
      v161 = v57[1];
      goto LABEL_81;
    }
  }
  v158 = (uint64_t *)v174;
  v159 = v57;
  v57 = &v176;
  v174 = &v173[8];
  v175 = &v176;
LABEL_81:
  *(_DWORD *)v173 = 1124007936;
  memset(&v173[4], 0, 60);
  if (v57 != &v176)
    j__free(v57);
  sub_10025AFC4((uint64_t)&v146, 1, 0, (uint64_t)v173);
  if (*((_QWORD *)&v149 + 1))
  {
    v58 = (unsigned int *)(*((_QWORD *)&v149 + 1) + 20);
    do
    {
      v59 = __ldaxr(v58);
      v60 = v59 - 1;
    }
    while (__stlxr(v60, v58));
    if (!v60)
      sub_100256C90((uint64_t)&v146);
  }
  if (SDWORD1(v146) >= 1)
  {
    v61 = 0;
    v62 = v150;
    do
      v62[v61++] = 0;
    while (v61 < SDWORD1(v146));
  }
  v146 = *(_OWORD *)v173;
  v147 = *(_OWORD *)&v173[16];
  v148 = *(_OWORD *)&v173[32];
  v149 = *(_OWORD *)&v173[48];
  if (v151 == &v152)
  {
    v63 = v175;
    if (*(int *)&v173[4] <= 2)
      goto LABEL_93;
  }
  else
  {
    j__free(v151);
    v150 = (_DWORD *)&v146 + 2;
    v151 = &v152;
    v63 = v175;
    if (*(int *)&v173[4] <= 2)
    {
LABEL_93:
      v152 = *v63;
      v153 = v63[1];
      goto LABEL_96;
    }
  }
  v150 = v174;
  v151 = v63;
  v63 = &v176;
  v174 = &v173[8];
  v175 = &v176;
LABEL_96:
  *(_DWORD *)v173 = 1124007936;
  memset(&v173[4], 0, 60);
  if (v63 != &v176)
    j__free(v63);
  if (sub_10025D914((_DWORD *)a3) == 0x10000)
  {
    v64 = *(_QWORD *)(a3 + 8);
    v65 = *(_OWORD *)(v64 + 16);
    *(_OWORD *)v173 = *(_OWORD *)v64;
    *(_OWORD *)&v173[16] = v65;
    *(_OWORD *)&v173[32] = *(_OWORD *)(v64 + 32);
    v66 = *(_QWORD *)(v64 + 56);
    *(_QWORD *)&v173[48] = *(_QWORD *)(v64 + 48);
    *(_QWORD *)&v173[56] = v66;
    v174 = &v173[8];
    v175 = &v176;
    v176 = 0;
    v177 = 0;
    if (v66)
    {
      v67 = (unsigned int *)(v66 + 20);
      do
        v68 = __ldaxr(v67);
      while (__stlxr(v68 + 1, v67));
    }
    if (*(int *)(v64 + 4) > 2)
    {
      *(_DWORD *)&v173[4] = 0;
      sub_100256B48((uint64_t)v173, v64);
    }
    else
    {
      v69 = *(uint64_t **)(v64 + 72);
      v70 = v175;
      *v175 = *v69;
      v70[1] = v69[1];
    }
  }
  else
  {
    sub_10025CCB8(a3, -1, (uint64_t)v173);
  }
  sub_10025AFC4((uint64_t)v173, 1, 0, (uint64_t)v137);
  if (*(_QWORD *)&v173[56])
  {
    v71 = (unsigned int *)(*(_QWORD *)&v173[56] + 20);
    do
    {
      v72 = __ldaxr(v71);
      v73 = v72 - 1;
    }
    while (__stlxr(v73, v71));
    if (!v73)
      sub_100256C90((uint64_t)v173);
  }
  *(_QWORD *)&v173[56] = 0;
  memset(&v173[16], 0, 32);
  if (*(int *)&v173[4] >= 1)
  {
    v74 = 0;
    v75 = v174;
    do
      *(_DWORD *)&v75[4 * v74++] = 0;
    while (v74 < *(int *)&v173[4]);
  }
  if (v175 != &v176)
    j__free(v175);
  v76 = v41 & 7;
  if (SDWORD1(v154) >= 1 && (v77 = v159[DWORD1(v154) - 1]) != 0)
  {
    v78 = off_10044CC68[v41 & 7];
    if ((v12 & 1) != 0)
      goto LABEL_119;
  }
  else
  {
    v77 = 1;
    v78 = off_10044CC68[v41 & 7];
    if ((v12 & 1) != 0)
    {
LABEL_119:
      v185[0] = (uint64_t)&v154;
      v185[1] = (uint64_t)v137;
      v185[2] = 0;
      v184 = 0;
      v183 = 0;
      sub_100254D30((uint64_t)&v178, v185, (uint64_t)&v183, -1);
      v79 = v182;
      if ((v77 + 1023) / v77 >= v182)
        v80 = v182;
      else
        v80 = (v77 + 1023) / v77;
      *(_QWORD *)v173 = &v173[16];
      *(_QWORD *)&v173[8] = v80 * v77;
      if (v80 * v77 >= 0x409)
        operator new[]();
      if (v76 >= 5)
      {
        sub_1001D4510((uint64_t)&v146, v76, &v173[16], v80);
        goto LABEL_126;
      }
      v136 = 0.0;
      v88 = (void (*)(_QWORD, uint64_t, _QWORD, uint64_t, double *, uint64_t, uint64_t *, _QWORD))sub_1001FA068(v42 & 7, 6);
      v135 = 0x100000001;
      v88(v147, 1, 0, 1, &v136, 1, &v135, 0);
      if (v136 >= dbl_1003BC9F0[v76])
      {
        if (v136 <= dbl_1003BCA30[v76])
        {
          v134 = (uint64_t)rint(v136);
          if (v136 != (double)v134)
          {
            if ((v164 & 0xFFFFFFFE) == 2)
            {
              v119 = (int)v136;
              if (v136 > (double)(int)v136)
                ++v119;
            }
            else
            {
              if (v164 != 4 && v164 != 1)
              {
                if (v164 == 5)
                  v133 = 255;
                else
                  v133 = 0;
                *(double *)&v165 = (double)v133;
                *((double *)&v165 + 1) = (double)v133;
                *(double *)&v166 = (double)v133;
                *((double *)&v166 + 1) = (double)v133;
                sub_10021956C((uint64_t)v137, (uint64_t)&v165);
LABEL_150:
                if (*(_BYTE **)v173 != &v173[16] && *(_QWORD *)v173)
                  goto LABEL_160;
                goto LABEL_161;
              }
              v119 = (int)v136 - (v136 < (double)(int)v136);
            }
            v134 = v119;
          }
          *(_QWORD *)&v166 = &v134;
          *((_QWORD *)&v166 + 1) = &v134;
          v168 = 0;
          v169 = 0;
          v170 = (char *)&v165 + 8;
          v171 = &v172;
          v165 = xmmword_1003BC950;
          v172 = vdupq_n_s64(4uLL);
          *(_QWORD *)&v167 = &v135;
          *((_QWORD *)&v167 + 1) = &v135;
          sub_1001D4510((uint64_t)&v165, v76, &v173[16], v80);
          if (v169)
          {
            v128 = (unsigned int *)(v169 + 20);
            do
            {
              v129 = __ldaxr(v128);
              v130 = v129 - 1;
            }
            while (__stlxr(v130, v128));
            if (!v130)
              sub_100256C90((uint64_t)&v165);
          }
          v169 = 0;
          v166 = 0u;
          v167 = 0u;
          if (SDWORD1(v165) >= 1)
          {
            v131 = 0;
            v132 = v170;
            do
              *(_DWORD *)&v132[4 * v131++] = 0;
            while (v131 < SDWORD1(v165));
          }
          if (v171 != &v172)
            j__free(v171);
LABEL_126:
          if (v79)
          {
            for (i = 0; i < v181; ++i)
            {
              v82 = 0;
              v83 = v183;
              v84 = v184;
              do
              {
                if (v79 - v82 >= v80)
                  v85 = v80;
                else
                  v85 = v79 - v82;
                v78(v83, 0, (int)&v173[16], 0, v84, 0, v85, 1, (uint64_t)&v164);
                v83 = v183 + (int)v85 * v77;
                v183 = v83;
                v84 = v184 + (int)v85;
                v184 = v84;
                v82 += v80;
              }
              while (v82 < v79);
              sub_100254D78((uint64_t)&v178);
            }
          }
          else
          {
            v91 = -1;
            while (++v91 < v181)
              sub_100254D78((uint64_t)&v178);
          }
          if (*(_BYTE **)v173 != &v173[16] && *(_QWORD *)v173 != 0)
LABEL_160:
            operator delete[]();
          goto LABEL_161;
        }
        v90 = 255.0;
        if ((v164 - 3) >= 3)
          v90 = 0.0;
      }
      else
      {
        v89 = (v164 - 1) < 2 || v164 == 5;
        v90 = 255.0;
        if (!v89)
          v90 = 0.0;
      }
      *(double *)&v165 = v90;
      *((double *)&v165 + 1) = v90;
      *(double *)&v166 = v90;
      *((double *)&v166 + 1) = v90;
      sub_10021956C((uint64_t)v137, (uint64_t)&v165);
      goto LABEL_150;
    }
  }
  *(_QWORD *)&v165 = &v154;
  *((_QWORD *)&v165 + 1) = &v146;
  *(_QWORD *)&v166 = v137;
  *((_QWORD *)&v166 + 1) = 0;
  v179 = 0;
  v178 = 0;
  v180 = 0;
  sub_100254D30((uint64_t)v173, (uint64_t *)&v165, (uint64_t)&v178, -1);
  v86 = *(unsigned int *)&v173[40];
  v87 = -1;
  while ((unint64_t)++v87 < *(_QWORD *)&v173[32])
  {
    v78(v178, 0, v179, 0, v180, 0, v86, 1, (uint64_t)&v164);
    sub_100254D78((uint64_t)v173);
  }
LABEL_161:
  if (v141)
  {
    v93 = (unsigned int *)(v141 + 20);
    do
    {
      v94 = __ldaxr(v93);
      v95 = v94 - 1;
    }
    while (__stlxr(v95, v93));
    if (!v95)
      sub_100256C90((uint64_t)v137);
  }
  v141 = 0;
  v139 = 0u;
  v140 = 0u;
  if (v138 >= 1)
  {
    v96 = 0;
    v97 = v142;
    do
      *(_DWORD *)(v97 + 4 * v96++) = 0;
    while (v96 < v138);
  }
  if (v143 != &v144)
    j__free(v143);
LABEL_171:
  if (*((_QWORD *)&v149 + 1))
  {
    v98 = (unsigned int *)(*((_QWORD *)&v149 + 1) + 20);
    do
    {
      v99 = __ldaxr(v98);
      v100 = v99 - 1;
    }
    while (__stlxr(v100, v98));
    if (!v100)
      sub_100256C90((uint64_t)&v146);
  }
  *((_QWORD *)&v149 + 1) = 0;
  v147 = 0u;
  v148 = 0u;
  if (SDWORD1(v146) >= 1)
  {
    v101 = 0;
    v102 = v150;
    do
      v102[v101++] = 0;
    while (v101 < SDWORD1(v146));
  }
  if (v151 != &v152)
    j__free(v151);
  if (*((_QWORD *)&v157 + 1))
  {
    v103 = (unsigned int *)(*((_QWORD *)&v157 + 1) + 20);
    do
    {
      v104 = __ldaxr(v103);
      v105 = v104 - 1;
    }
    while (__stlxr(v105, v103));
    if (!v105)
      sub_100256C90((uint64_t)&v154);
  }
  *((_QWORD *)&v157 + 1) = 0;
  v155 = 0u;
  v156 = 0u;
  if (SDWORD1(v154) >= 1)
  {
    v106 = 0;
    v107 = v158;
    do
      *((_DWORD *)v107 + v106++) = 0;
    while (v106 < SDWORD1(v154));
  }
  if (v159 != &v160)
    j__free(v159);
LABEL_191:
  if (v163)
    sub_1002989D0(v162);
}

void sub_1001D9A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
  uint64_t v52;
  uint64_t v54;

  v54 = *(_QWORD *)(v52 + 320);
  if (v54 != a10 && v54 != 0)
    operator delete[]();
  sub_100006BE4((uint64_t)&a14);
  sub_100006BE4((uint64_t)&a27);
  sub_100006BE4((uint64_t)&a39);
  sub_1001D40CC((uint64_t)&a52);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D9C2C(int *a1, unsigned int a2, int a3, int a4)
{
  uint64_t result;
  unsigned int v9;
  BOOL v10;
  BOOL v11;
  int v12;
  int v14;
  int v15;

  if ((int)sub_100260608((uint64_t)a1, -1) > 2)
    return 0;
  result = sub_100261494((uint64_t)a1, -1);
  if ((_DWORD)result)
  {
    sub_10025D920((uint64_t)a1, 0xFFFFFFFF, (uint64_t)&v14);
    if (v14 == 1 || v15 == 1)
    {
      if (a3 == 0x20000 || a4 != 0x20000)
      {
        v9 = (a2 >> 3) & 0x1FF;
        v10 = v14 == v9 + 1;
        if (v15 != 1)
          v10 = 0;
        v11 = v15 == v9 + 1 || v15 == 1;
        if (v14 != 1)
          v11 = 0;
        result = 1;
        if (!v11 && !v10)
        {
          result = 0;
          if (v14 == 1 && v15 == 4)
          {
            v12 = sub_10025E20C(a1, -1);
            return v9 < 4 && v12 == 6;
          }
        }
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001D9D68(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8x16_t v11;
  uint8x16_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  if (a8)
  {
    v8 = a7 - 4;
    while (a7 < 32)
    {
      v9 = 0;
      if ((int)v8 >= 0)
        goto LABEL_10;
LABEL_13:
      if ((int)v9 < a7)
      {
        do
        {
          *(_BYTE *)(a5 + v9) = byte_1003BEFA6[*(unsigned __int8 *)(a3 + v9)
                                             + 256
                                             + (unint64_t)*(unsigned __int8 *)(result + v9)];
          ++v9;
        }
        while (a7 != v9);
      }
      result += a2;
      a3 += a4;
      a5 += a6;
      if (!--a8)
        return result;
    }
    v10 = 16;
    do
    {
      v11 = vqaddq_u8(*(uint8x16_t *)(result + v10), *(uint8x16_t *)(a3 + v10));
      v12 = (uint8x16_t *)(a5 + v10);
      v12[-1] = vqaddq_u8(*(uint8x16_t *)(result + v10 - 16), *(uint8x16_t *)(a3 + v10 - 16));
      *v12 = v11;
      v13 = v10 + 16;
      v10 += 32;
    }
    while (v13 <= a7 - 32);
    v9 = (v10 - 16);
    if ((int)v9 > (int)v8)
      goto LABEL_13;
LABEL_10:
    v14 = v9 << 32;
    do
    {
      v15 = (v14 >> 32) | 1;
      v16 = byte_1003BEFA6[*(unsigned __int8 *)(a3 + v15) + 256 + (unint64_t)*(unsigned __int8 *)(result + v15)];
      *(_BYTE *)(a5 + v9) = byte_1003BEFA6[*(unsigned __int8 *)(a3 + v9)
                                         + 256
                                         + (unint64_t)*(unsigned __int8 *)(result + v9)];
      *(_BYTE *)(a5 + v15) = v16;
      v17 = (v14 >> 32) | 3;
      v18 = byte_1003BEFA6[*(unsigned __int8 *)(a3 + v17) + 256 + (unint64_t)*(unsigned __int8 *)(result + v17)];
      *(_BYTE *)(a5 + ((v14 >> 32) | 2)) = byte_1003BEFA6[*(unsigned __int8 *)(a3 + ((v14 >> 32) | 2))
                                                        + 256
                                                        + (unint64_t)*(unsigned __int8 *)(result
                                                                                               + ((v14 >> 32) | 2))];
      *(_BYTE *)(a5 + v17) = v18;
      v9 += 4;
      v14 += 0x400000000;
    }
    while (v9 <= v8);
    v9 = v9;
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001D9EC4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int8x16_t v14;
  int8x16_t *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int8x16_t v33;
  int8x16_t *v34;
  unint64_t v35;
  uint64_t v36;

  if (a8)
  {
    v8 = 0;
    v9 = a7 - 4;
    v10 = result;
    v11 = a3;
    v12 = a5;
    do
    {
      if (a7 >= 32)
      {
        v13 = 0;
        do
        {
          v14 = vqaddq_s8(*(int8x16_t *)(v10 + v13 + 16), *(int8x16_t *)(v11 + v13 + 16));
          v15 = (int8x16_t *)(v12 + v13);
          *v15 = vqaddq_s8(*(int8x16_t *)(v10 + v13), *(int8x16_t *)(v11 + v13));
          v15[1] = v14;
          v13 += 32;
        }
        while (v13 <= a7 - 32);
        v13 = v13;
        if ((int)v13 > (int)v9)
          goto LABEL_31;
      }
      else
      {
        v13 = 0;
        if ((int)v9 < 0)
          goto LABEL_31;
      }
      v16 = v13 << 32;
      do
      {
        v17 = *(char *)(v10 + v13) + *(char *)(v11 + v13);
        if (v17 >= 127)
          v17 = 127;
        if (v17 <= -128)
          LOBYTE(v17) = 0x80;
        v18 = v16 >> 32;
        v19 = (v16 >> 32) | 1;
        v20 = *(char *)(v10 + v19) + *(char *)(v11 + v19);
        if (v20 >= 127)
          v20 = 127;
        *(_BYTE *)(v12 + v13) = v17;
        if (v20 <= -128)
          v21 = 0x80;
        else
          v21 = v20;
        *(_BYTE *)(v12 + v19) = v21;
        v22 = v18 | 2;
        v23 = *(char *)(v10 + (v18 | 2)) + *(char *)(v11 + (v18 | 2));
        if (v23 >= 127)
          v23 = 127;
        if (v23 <= -128)
          LOBYTE(v23) = 0x80;
        v24 = v18 | 3;
        v25 = *(char *)(v10 + v24) + *(char *)(v11 + v24);
        if (v25 >= 127)
          v25 = 127;
        *(_BYTE *)(v12 + v22) = v23;
        if (v25 <= -128)
          v26 = 0x80;
        else
          v26 = v25;
        *(_BYTE *)(v12 + v24) = v26;
        v13 += 4;
        v16 += 0x400000000;
      }
      while (v13 <= v9);
      v13 = v13;
LABEL_31:
      if ((int)v13 < a7)
      {
        v27 = a7 - v13;
        if (v27 < 8)
        {
          v28 = v13;
          goto LABEL_34;
        }
        if ((unint64_t)(a5 + v8 * a6 - (result + v8 * a2)) < 0x20)
        {
          v28 = v13;
          goto LABEL_34;
        }
        if ((unint64_t)(a5 + v8 * a6 - (a3 + v8 * a4)) < 0x20)
        {
          v28 = v13;
          goto LABEL_34;
        }
        if (v27 >= 0x20)
        {
          v30 = v27 & 0xFFFFFFFFFFFFFFE0;
          v31 = v13;
          v32 = v27 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v33 = vqaddq_s8(*(int8x16_t *)(v10 + v31 + 16), *(int8x16_t *)(v11 + v31 + 16));
            v34 = (int8x16_t *)(v12 + v31);
            *v34 = vqaddq_s8(*(int8x16_t *)(v10 + v31), *(int8x16_t *)(v11 + v31));
            v34[1] = v33;
            v31 += 32;
            v32 -= 32;
          }
          while (v32);
          if (v27 == v30)
            goto LABEL_3;
          if ((v27 & 0x18) == 0)
          {
            v28 = v30 + v13;
            do
            {
LABEL_34:
              v29 = *(char *)(v10 + v28) + *(char *)(v11 + v28);
              if (v29 >= 127)
                v29 = 127;
              if (v29 <= -128)
                LOBYTE(v29) = 0x80;
              *(_BYTE *)(v12 + v28++) = v29;
            }
            while (a7 != v28);
            goto LABEL_3;
          }
        }
        else
        {
          v30 = 0;
        }
        v28 = (v27 & 0xFFFFFFFFFFFFFFF8) + v13;
        v35 = v30 - (v27 & 0xFFFFFFFFFFFFFFF8);
        v36 = v30 + v13;
        do
        {
          *(int8x8_t *)(v12 + v36) = vqadd_s8(*(int8x8_t *)(v10 + v36), *(int8x8_t *)(v11 + v36));
          v36 += 8;
          v35 += 8;
        }
        while (v35);
        if (v27 != (v27 & 0xFFFFFFFFFFFFFFF8))
          goto LABEL_34;
      }
LABEL_3:
      v10 += a2;
      v11 += a4;
      v12 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1001DA158(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int32x4_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint16x8_t v16;
  uint16x8_t *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  __int16 v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int16x8_t v33;
  int16x8_t *v34;

  if (a8)
  {
    v8 = 0;
    v9 = a7 - 4;
    v10.i64[0] = 0xFFFF0000FFFFLL;
    v10.i64[1] = 0xFFFF0000FFFFLL;
    v11 = result;
    v12 = a3;
    v13 = a5;
    do
    {
      if (a7 >= 16)
      {
        v14 = 0;
        v15 = 16;
        do
        {
          v16 = vqaddq_u16(*(uint16x8_t *)(v11 + v15), *(uint16x8_t *)(v12 + v15));
          v17 = (uint16x8_t *)(v13 + v15);
          v17[-1] = vqaddq_u16(*(uint16x8_t *)(v11 + v15 - 16), *(uint16x8_t *)(v12 + v15 - 16));
          *v17 = v16;
          v14 += 16;
          v15 += 32;
        }
        while (v14 <= a7 - 16);
        v14 = v14;
        if ((int)v14 <= (int)v9)
        {
LABEL_10:
          v18 = v14 << 32;
          do
          {
            v19 = *(unsigned __int16 *)(v12 + 2 * v14) + *(unsigned __int16 *)(v11 + 2 * v14);
            if (v19 >= 0xFFFF)
              LOWORD(v19) = -1;
            v20 = v18 >> 31;
            v21 = (v18 >> 31) | 2;
            v22 = *(unsigned __int16 *)(v12 + v21) + *(unsigned __int16 *)(v11 + v21);
            if (v22 >= 0xFFFF)
              LOWORD(v22) = -1;
            *(_WORD *)(v13 + 2 * v14) = v19;
            *(_WORD *)(v13 + v21) = v22;
            v23 = v20 | 4;
            v24 = *(unsigned __int16 *)(v12 + (v20 | 4)) + *(unsigned __int16 *)(v11 + (v20 | 4));
            if (v24 >= 0xFFFF)
              LOWORD(v24) = -1;
            v25 = v20 | 6;
            v26 = *(unsigned __int16 *)(v12 + v25) + *(unsigned __int16 *)(v11 + v25);
            *(_WORD *)(v13 + v23) = v24;
            if (v26 >= 0xFFFF)
              v27 = -1;
            else
              v27 = v26;
            *(_WORD *)(v13 + v25) = v27;
            v14 += 4;
            v18 += 0x400000000;
          }
          while (v14 <= v9);
          v14 = v14;
        }
      }
      else
      {
        v14 = 0;
        if ((int)v9 >= 0)
          goto LABEL_10;
      }
      if ((int)v14 < a7)
      {
        v28 = a7 - v14;
        if (v28 < 0x10)
          goto LABEL_36;
        v30 = 2 * v14;
        v31 = a5 + v8 * a6 + 2 * v14;
        if ((unint64_t)(v31 - (result + v8 * a2 + 2 * v14)) < 0x20)
          goto LABEL_36;
        if ((unint64_t)(v31 - (a3 + v8 * a4 + v30)) < 0x20)
          goto LABEL_36;
        v14 += v28 & 0xFFFFFFFFFFFFFFF0;
        v32 = v28 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v33 = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vaddl_u16(*(uint16x4_t *)(v12 + v30 + 16), *(uint16x4_t *)(v11 + v30 + 16)), v10), (int16x8_t)vminq_s32((int32x4_t)vaddl_high_u16(*(uint16x8_t *)(v12 + v30 + 16), *(uint16x8_t *)(v11 + v30 + 16)), v10));
          v34 = (int16x8_t *)(v13 + v30);
          *v34 = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vaddl_u16(*(uint16x4_t *)(v12 + v30), *(uint16x4_t *)(v11 + v30)), v10), (int16x8_t)vminq_s32((int32x4_t)vaddl_high_u16(*(uint16x8_t *)(v12 + v30), *(uint16x8_t *)(v11 + v30)), v10));
          v34[1] = v33;
          v30 += 32;
          v32 -= 16;
        }
        while (v32);
        if (v28 != (v28 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_36:
          do
          {
            v29 = *(unsigned __int16 *)(v12 + 2 * v14) + *(unsigned __int16 *)(v11 + 2 * v14);
            if (v29 >= 0xFFFF)
              LOWORD(v29) = -1;
            *(_WORD *)(v13 + 2 * v14++) = v29;
          }
          while (a7 != v14);
        }
      }
      v11 += a2;
      v12 += a4;
      v13 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1001DA390(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int16x8_t v15;
  int16x8_t *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  __int16 v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  __int16 v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int16x8_t v33;
  int16x8_t *v34;

  if (a8)
  {
    v8 = 0;
    v9 = a7 - 4;
    v10 = result;
    v11 = a3;
    v12 = a5;
    do
    {
      if (a7 >= 16)
      {
        v14 = 0;
        v13 = 0;
        do
        {
          v15 = vqaddq_s16(*(int16x8_t *)(v10 + v14 + 16), *(int16x8_t *)(v11 + v14 + 16));
          v16 = (int16x8_t *)(v12 + v14);
          *v16 = vqaddq_s16(*(int16x8_t *)(v10 + v14), *(int16x8_t *)(v11 + v14));
          v16[1] = v15;
          v13 += 16;
          v14 += 32;
        }
        while (v13 <= a7 - 16);
        v13 = v13;
        if ((int)v13 <= (int)v9)
        {
LABEL_10:
          v17 = v13 << 32;
          do
          {
            v18 = *(__int16 *)(v10 + 2 * v13) + *(__int16 *)(v11 + 2 * v13);
            if (v18 >= 0x7FFF)
              v18 = 0x7FFF;
            if (v18 <= -32768)
              LOWORD(v18) = 0x8000;
            v19 = v17 >> 31;
            v20 = (v17 >> 31) | 2;
            v21 = *(__int16 *)(v10 + v20) + *(__int16 *)(v11 + v20);
            if (v21 >= 0x7FFF)
              v21 = 0x7FFF;
            *(_WORD *)(v12 + 2 * v13) = v18;
            if (v21 <= -32768)
              v22 = 0x8000;
            else
              v22 = v21;
            *(_WORD *)(v12 + v20) = v22;
            v23 = v19 | 4;
            v24 = *(__int16 *)(v10 + (v19 | 4)) + *(__int16 *)(v11 + (v19 | 4));
            if (v24 >= 0x7FFF)
              v24 = 0x7FFF;
            if (v24 <= -32768)
              LOWORD(v24) = 0x8000;
            v25 = v19 | 6;
            v26 = *(__int16 *)(v10 + v25) + *(__int16 *)(v11 + v25);
            if (v26 >= 0x7FFF)
              v26 = 0x7FFF;
            *(_WORD *)(v12 + v23) = v24;
            if (v26 <= -32768)
              v27 = 0x8000;
            else
              v27 = v26;
            *(_WORD *)(v12 + v25) = v27;
            v13 += 4;
            v17 += 0x400000000;
          }
          while (v13 <= v9);
          v13 = v13;
        }
      }
      else
      {
        v13 = 0;
        if ((int)v9 >= 0)
          goto LABEL_10;
      }
      if ((int)v13 < a7)
      {
        v28 = a7 - v13;
        if (v28 < 0x10)
          goto LABEL_47;
        v30 = 2 * v13;
        v31 = a5 + v8 * a6 + 2 * v13;
        if ((unint64_t)(v31 - (result + v8 * a2 + 2 * v13)) < 0x20)
          goto LABEL_47;
        if ((unint64_t)(v31 - (a3 + v8 * a4 + v30)) < 0x20)
          goto LABEL_47;
        v13 += v28 & 0xFFFFFFFFFFFFFFF0;
        v32 = v28 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v33 = vqaddq_s16(*(int16x8_t *)(v10 + v30 + 16), *(int16x8_t *)(v11 + v30 + 16));
          v34 = (int16x8_t *)(v12 + v30);
          *v34 = vqaddq_s16(*(int16x8_t *)(v10 + v30), *(int16x8_t *)(v11 + v30));
          v34[1] = v33;
          v30 += 32;
          v32 -= 16;
        }
        while (v32);
        if (v28 != (v28 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_47:
          do
          {
            v29 = *(__int16 *)(v10 + 2 * v13) + *(__int16 *)(v11 + 2 * v13);
            if (v29 >= 0x7FFF)
              v29 = 0x7FFF;
            if (v29 <= -32768)
              LOWORD(v29) = 0x8000;
            *(_WORD *)(v12 + 2 * v13++) = v29;
          }
          while (a7 != v13);
        }
      }
      v10 += a2;
      v11 += a4;
      v12 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001DA5D0(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  unint64_t v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _DWORD *v16;
  int *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  int *v22;
  int *v23;
  _DWORD *v24;
  int32x4_t v25;
  _DWORD *v26;
  int *v27;
  int *v28;
  int32x4_t v29;
  int32x4_t *v30;
  int v31;
  int v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int32x4_t v40;
  int32x4_t *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  BOOL v55;
  uint64_t v57;
  uint64_t v58;
  int32x4_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  int v69;
  int v70;
  int v71;
  _DWORD *v72;
  int v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  int32x4_t v78;
  int32x4_t *v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;

  v85 = a5;
  v86 = a3;
  v87 = result;
  if (!a8)
    return result;
  v8 = a8 - 1;
  v9 = (a7 - 4);
  if (a7 >= 8)
  {
    v13 = 0;
    v15 = a5;
    v14 = a3;
    v16 = (_DWORD *)(a5 + 32);
    v17 = (int *)(a3 + 32);
    v18 = result;
    v19 = result + 32;
    while (1)
    {
      result = 0;
      v20 = 0;
      v21 = v8;
      v22 = (int *)v19;
      v23 = v17;
      v24 = v16;
      do
      {
        v25 = vaddq_s32(*(int32x4_t *)(v14 + result), *(int32x4_t *)(v18 + result));
        v26 = v24;
        v27 = v23;
        v28 = v22;
        v29 = vaddq_s32(*(int32x4_t *)(v14 + result + 16), *(int32x4_t *)(v18 + result + 16));
        v30 = (int32x4_t *)(v15 + result);
        v20 += 8;
        result += 32;
        *v30 = v25;
        v30[1] = v29;
        v24 = v26 + 8;
        v23 += 8;
        v22 += 8;
      }
      while (v20 <= (a7 - 8));
      if ((int)v9 >= (int)v20)
      {
        result = 0;
        do
        {
          v32 = *v28;
          v28 += 4;
          v31 = v32;
          v33 = *v27;
          v27 += 4;
          v34 = (unint64_t)(((_DWORD)v20 + (_DWORD)result) & 0xFFFFFFFC) >> 2;
          v35 = (16 * (v34 & 0x3FFFFFFF)) | 4;
          v36 = *(_DWORD *)(v14 + v35) + *(_DWORD *)(v18 + v35);
          *v26 = v33 + v31;
          v26 += 4;
          *(_DWORD *)(v15 + v35) = v36;
          *(int32x2_t *)(v15 + ((16 * (v34 & 0x3FFFFFFF)) | 8)) = vadd_s32(*(int32x2_t *)(v14 + ((16 * (v34 & 0x3FFFFFFF)) | 8)), *(int32x2_t *)(v18 + ((16 * (v34 & 0x3FFFFFFF)) | 8)));
          result += 4;
        }
        while (v20 + result <= v9);
        v20 = (v20 + result);
        if ((int)v20 < a7)
        {
LABEL_20:
          result = a7 - v20;
          if (result < 0xC)
            goto LABEL_64;
          v37 = 4 * v20;
          v38 = v85 + v13 * a6 + 4 * v20;
          if (v38 - (v87 + v13 * a2 + 4 * v20) < 0x20)
            goto LABEL_64;
          if (v38 - (v86 + v13 * a4 + v37) < 0x20)
            goto LABEL_64;
          v20 += result & 0xFFFFFFFFFFFFFFF8;
          v39 = result & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v40 = vaddq_s32(*(int32x4_t *)(v14 + v37 + 16), *(int32x4_t *)(v18 + v37 + 16));
            v41 = (int32x4_t *)(v15 + v37);
            *v41 = vaddq_s32(*(int32x4_t *)(v14 + v37), *(int32x4_t *)(v18 + v37));
            v41[1] = v40;
            v37 += 32;
            v39 -= 8;
          }
          while (v39);
          if (result != (result & 0xFFFFFFFFFFFFFFF8))
          {
LABEL_64:
            do
            {
              result = 4 * v20;
              *(_DWORD *)(v15 + 4 * v20) = *(_DWORD *)(v14 + 4 * v20) + *(_DWORD *)(v18 + 4 * v20);
              ++v20;
            }
            while (a7 != v20);
          }
        }
      }
      else
      {
        v20 = v20;
        if ((int)v20 < a7)
          goto LABEL_20;
      }
      v18 += a2;
      v14 += a4;
      v15 += a6;
      v8 = v21 - 1;
      ++v13;
      v16 = (_DWORD *)((char *)v16 + a6);
      v17 = (int *)((char *)v17 + a4);
      v19 += a2;
      if (!v21)
        return result;
    }
  }
  if (a7 >= 4)
  {
    v42 = 0;
    v84 = a5 + 16;
    v83 = result + 16;
    v80 = a3 + 16;
    v43 = (v9 & 0xFFFFFFFC) + 5;
    if (v43 <= a7)
      v43 = a7;
    v44 = v43 - (v9 & 0xFFFFFFFC) - 4;
    v45 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    v82 = (v9 >> 2) + 1;
    v81 = v44 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      v46 = v8;
      v47 = v42 * a6;
      v48 = v42 * a2;
      v49 = v42 * a4;
      if (v9 < 0xC)
        break;
      v50 = 0;
      v53 = v85 + v45 + v47;
      v55 = a5 < v86 + v45 + v49 && a3 < v53;
      if (result < v53 && a5 < v87 + v45 + v48)
      {
        v52 = 4;
        v51 = 0;
LABEL_49:
        v64 = v50 - 1;
        v63 = v52 - 4;
        v65 = 4 * v51;
        v66 = a3;
        v67 = result;
        v68 = a5;
        do
        {
          v69 = *(_DWORD *)(v67 + v65 + 4);
          v70 = *(_DWORD *)(v66 + v65 + 4);
          *(_DWORD *)(v68 + v65) = *(_DWORD *)(v66 + v65) + *(_DWORD *)(v67 + v65);
          v71 = v70 + v69;
          v72 = (_DWORD *)(v68 + v65);
          v72[1] = v71;
          v73 = *(_DWORD *)(v66 + v65 + 12) + *(_DWORD *)(v67 + v65 + 12);
          v51 += 4;
          ++v64;
          v63 += 4;
          v72[2] = *(_DWORD *)(v66 + v65 + 8) + *(_DWORD *)(v67 + v65 + 8);
          v72[3] = v73;
          v68 += 16;
          v67 += 16;
          v66 += 16;
        }
        while (v51 <= v9);
        goto LABEL_51;
      }
      v52 = 4;
      v51 = 0;
      if (v55)
        goto LABEL_49;
      v57 = 0;
      v58 = v82 & 0x7FFFFFFC;
      do
      {
        v59 = vaddq_s32(*(int32x4_t *)(a3 + v57 + 16), *(int32x4_t *)(result + v57 + 16));
        v60 = vaddq_s32(*(int32x4_t *)(a3 + v57), *(int32x4_t *)(result + v57));
        v61 = vaddq_s32(*(int32x4_t *)(a3 + v57 + 48), *(int32x4_t *)(result + v57 + 48));
        v62 = (int32x4_t *)(a5 + v57);
        v62[2] = vaddq_s32(*(int32x4_t *)(a3 + v57 + 32), *(int32x4_t *)(result + v57 + 32));
        v62[3] = v61;
        *v62 = v60;
        v62[1] = v59;
        v57 += 64;
        v58 -= 4;
      }
      while (v58);
      v50 = v82 & 0x7FFFFFFC;
      v52 = (16 * ((v50 >> 2) & 0x1FFFFFFF)) | 4;
      v63 = 4 * v50;
      v51 = v63;
      v64 = v50 - 1;
      if (v82 != v50)
        goto LABEL_49;
LABEL_51:
      if ((int)v51 < a7)
      {
        if (v44 < 0xC
          || (v75 = 16 * v64 + v84 + v47, v75 - (16 * v64 + v83 + v48) < 0x20)
          || v75 - (16 * v64 + v80 + v49) < 0x20)
        {
          v74 = v63;
        }
        else
        {
          v76 = v44 & 0xFFFFFFFFFFFFFFF8;
          v74 = v63 + v81;
          v77 = 4 * v63;
          do
          {
            v78 = vaddq_s32(*(int32x4_t *)(a3 + v77 + 16), *(int32x4_t *)(result + v77 + 16));
            v79 = (int32x4_t *)(a5 + v77);
            *v79 = vaddq_s32(*(int32x4_t *)(a3 + v77), *(int32x4_t *)(result + v77));
            v79[1] = v78;
            v77 += 32;
            v76 -= 8;
          }
          while (v76);
          if (v44 == v81)
            goto LABEL_31;
        }
        do
        {
          *(_DWORD *)(a5 + 4 * v74) = *(_DWORD *)(a3 + 4 * v74) + *(_DWORD *)(result + 4 * v74);
          ++v74;
        }
        while (v74 < a7);
      }
LABEL_31:
      result += a2;
      a3 += a4;
      a5 += a6;
      v8 = v46 - 1;
      ++v42;
      if (!v46)
        return result;
    }
    v50 = 0;
    v51 = 0;
    v52 = 4;
    goto LABEL_49;
  }
  if (a7 >= 1)
  {
    v10 = (_DWORD *)(a5 + 8);
    v11 = (_DWORD *)(a3 + 8);
    v12 = (_DWORD *)(result + 4);
    do
    {
      *(v10 - 2) = *(v11 - 2) + *(v12 - 1);
      if (a7 != 1)
      {
        *(v10 - 1) = *(v11 - 1) + *v12;
        if (a7 != 2)
          *v10 = *v11 + v12[1];
      }
      v10 = (_DWORD *)((char *)v10 + a6);
      v11 = (_DWORD *)((char *)v11 + a4);
      v12 = (_DWORD *)((char *)v12 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001DAB34(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v8;
  int v9;
  unint64_t v10;
  float *v11;
  float *v12;
  float *v13;
  uint64_t v14;
  float *v15;
  float *v16;
  float *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  float *v24;
  float *v25;
  float *v26;
  float32x4_t v27;
  float *v28;
  float *v29;
  float *v30;
  float32x4_t v31;
  float32x4_t *v32;
  uint64_t v33;
  float v34;
  float v35;
  float v36;
  unint64_t v37;
  uint64_t v38;
  float v39;
  float v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  float32x4_t v45;
  float32x4_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  BOOL v63;
  uint64_t v65;
  uint64_t v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  float32x4_t *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  float v77;
  float v78;
  float *v79;
  float v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  float32x4_t v85;
  float32x4_t *v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;

  if (!a8)
    return result;
  v8 = a5;
  v9 = a8 - 1;
  v10 = (a7 - 4);
  if (a7 >= 8)
  {
    v14 = 0;
    v15 = (float *)(a5 + 32);
    v16 = (float *)(a3 + 32);
    v17 = (float *)(result + 32);
    v18 = result;
    v19 = a3;
    v20 = a5;
    while (1)
    {
      v21 = 0;
      v22 = 0;
      v23 = v9;
      v24 = v17;
      v25 = v16;
      v26 = v15;
      do
      {
        v27 = vaddq_f32(*(float32x4_t *)(v18 + v21), *(float32x4_t *)(v19 + v21));
        v28 = v26;
        v29 = v25;
        v30 = v24;
        v31 = vaddq_f32(*(float32x4_t *)(v18 + v21 + 16), *(float32x4_t *)(v19 + v21 + 16));
        v32 = (float32x4_t *)(v20 + v21);
        v22 += 8;
        v21 += 32;
        *v32 = v27;
        v32[1] = v31;
        v26 += 8;
        v25 = v29 + 8;
        v24 += 8;
      }
      while (v22 <= (a7 - 8));
      if ((int)v10 >= (int)v22)
      {
        v33 = 0;
        do
        {
          v34 = *v30;
          v30 += 4;
          v35 = v34;
          v36 = *v29;
          v29 += 4;
          v37 = (unint64_t)(((_DWORD)v22 + (_DWORD)v33) & 0xFFFFFFFC) >> 2;
          v38 = (16 * (v37 & 0x3FFFFFFF)) | 4;
          v39 = *(float *)(v18 + v38);
          v40 = *(float *)(v19 + v38);
          *v28 = v35 + v36;
          v28 += 4;
          *(float *)(v20 + v38) = v39 + v40;
          *(float32x2_t *)(v20 + ((16 * (v37 & 0x3FFFFFFF)) | 8)) = vadd_f32(*(float32x2_t *)(v18+ ((16 * (v37 & 0x3FFFFFFF)) | 8)), *(float32x2_t *)(v19+ ((16 * (v37 & 0x3FFFFFFF)) | 8)));
          v33 += 4;
        }
        while (v22 + v33 <= v10);
        v22 = (v22 + v33);
        if ((int)v22 < a7)
        {
LABEL_20:
          v41 = a7 - v22;
          if (v41 < 0xC)
            goto LABEL_64;
          v42 = 4 * v22;
          v43 = v8 + v14 * a6 + 4 * v22;
          if (v43 - (result + v14 * a2 + 4 * v22) < 0x20)
            goto LABEL_64;
          if (v43 - (a3 + v14 * a4 + v42) < 0x20)
            goto LABEL_64;
          v22 += v41 & 0xFFFFFFFFFFFFFFF8;
          v44 = v41 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v45 = vaddq_f32(*(float32x4_t *)(v18 + v42 + 16), *(float32x4_t *)(v19 + v42 + 16));
            v46 = (float32x4_t *)(v20 + v42);
            *v46 = vaddq_f32(*(float32x4_t *)(v18 + v42), *(float32x4_t *)(v19 + v42));
            v46[1] = v45;
            v42 += 32;
            v44 -= 8;
          }
          while (v44);
          if (v41 != (v41 & 0xFFFFFFFFFFFFFFF8))
          {
LABEL_64:
            do
            {
              *(float *)(v20 + 4 * v22) = *(float *)(v18 + 4 * v22) + *(float *)(v19 + 4 * v22);
              ++v22;
            }
            while (a7 != v22);
          }
        }
      }
      else
      {
        v22 = v22;
        if ((int)v22 < a7)
          goto LABEL_20;
      }
      v18 += a2;
      v19 += a4;
      v20 += a6;
      v9 = v23 - 1;
      ++v14;
      v15 = (float *)((char *)v15 + a6);
      v16 = (float *)((char *)v16 + a4);
      v17 = (float *)((char *)v17 + a2);
      if (!v23)
        return result;
    }
  }
  if (a7 >= 4)
  {
    v47 = 0;
    v91 = a5 + 16;
    v90 = result + 16;
    v87 = a3 + 16;
    v48 = (v10 & 0xFFFFFFFC) + 5;
    if (v48 <= a7)
      v48 = a7;
    v49 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    v89 = (v10 >> 2) + 1;
    v92 = v48 - (v10 & 0xFFFFFFFC) - 4;
    v88 = v92 & 0xFFFFFFFFFFFFFFF8;
    v50 = result;
    v51 = a3;
    v93 = result;
    v52 = a3;
    v53 = a5;
    while (1)
    {
      v54 = v9;
      v55 = v47 * a6;
      v56 = v47 * a2;
      v57 = v47 * a4;
      if (v10 < 0xC)
        break;
      v58 = 0;
      v61 = v8 + v49 + v55;
      v63 = a5 < a3 + v49 + v57 && v51 < v61;
      if (v50 < v61 && a5 < result + v49 + v56)
      {
        v60 = 4;
        v59 = 0;
LABEL_49:
        v72 = v58 - 1;
        v71 = v60 - 4;
        v73 = 4 * v59;
        v74 = v51;
        v75 = v50;
        v76 = a5;
        do
        {
          v77 = *(float *)(v75 + v73 + 4);
          v78 = *(float *)(v74 + v73 + 4);
          *(float *)(v76 + v73) = *(float *)(v75 + v73) + *(float *)(v74 + v73);
          v79 = (float *)(v76 + v73);
          v79[1] = v77 + v78;
          v80 = *(float *)(v75 + v73 + 12) + *(float *)(v74 + v73 + 12);
          v59 += 4;
          ++v72;
          v71 += 4;
          v79[2] = *(float *)(v75 + v73 + 8) + *(float *)(v74 + v73 + 8);
          v79[3] = v80;
          v76 += 16;
          v75 += 16;
          v74 += 16;
        }
        while (v59 <= v10);
        goto LABEL_51;
      }
      v60 = 4;
      v59 = 0;
      if (v63)
        goto LABEL_49;
      v65 = 0;
      v66 = v89 & 0x7FFFFFFC;
      do
      {
        v67 = vaddq_f32(*(float32x4_t *)(v50 + v65 + 16), *(float32x4_t *)(v51 + v65 + 16));
        v68 = vaddq_f32(*(float32x4_t *)(v50 + v65), *(float32x4_t *)(v51 + v65));
        v69 = vaddq_f32(*(float32x4_t *)(v50 + v65 + 48), *(float32x4_t *)(v51 + v65 + 48));
        v70 = (float32x4_t *)(a5 + v65);
        v70[2] = vaddq_f32(*(float32x4_t *)(v50 + v65 + 32), *(float32x4_t *)(v51 + v65 + 32));
        v70[3] = v69;
        *v70 = v68;
        v70[1] = v67;
        v65 += 64;
        v66 -= 4;
      }
      while (v66);
      v58 = v89 & 0x7FFFFFFC;
      v60 = (16 * ((v58 >> 2) & 0x1FFFFFFF)) | 4;
      v71 = 4 * v58;
      v59 = v71;
      v72 = v58 - 1;
      if (v89 != v58)
        goto LABEL_49;
LABEL_51:
      if ((int)v59 < a7)
      {
        if (v92 < 0xC
          || (v82 = 16 * v72 + v91 + v55, v82 - (16 * v72 + v90 + v56) < 0x20)
          || v82 - (16 * v72 + v87 + v57) < 0x20)
        {
          v81 = v71;
        }
        else
        {
          v83 = v92 & 0xFFFFFFFFFFFFFFF8;
          v81 = v71 + v88;
          v84 = 4 * v71;
          do
          {
            v85 = vaddq_f32(*(float32x4_t *)(v50 + v84 + 16), *(float32x4_t *)(v51 + v84 + 16));
            v86 = (float32x4_t *)(a5 + v84);
            *v86 = vaddq_f32(*(float32x4_t *)(v50 + v84), *(float32x4_t *)(v51 + v84));
            v86[1] = v85;
            v84 += 32;
            v83 -= 8;
          }
          while (v83);
          if (v92 == v88)
            goto LABEL_31;
        }
        do
        {
          *(float *)(a5 + 4 * v81) = *(float *)(v50 + 4 * v81) + *(float *)(v51 + 4 * v81);
          ++v81;
        }
        while (v81 < a7);
      }
LABEL_31:
      v50 += a2;
      v51 += a4;
      a5 += a6;
      v9 = v54 - 1;
      ++v47;
      result = v93;
      a3 = v52;
      v8 = v53;
      if (!v54)
        return result;
    }
    v58 = 0;
    v59 = 0;
    v60 = 4;
    goto LABEL_49;
  }
  if (a7 >= 1)
  {
    v11 = (float *)(a5 + 8);
    v12 = (float *)(a3 + 8);
    v13 = (float *)(result + 4);
    do
    {
      *(v11 - 2) = *(v13 - 1) + *(v12 - 2);
      if (a7 != 1)
      {
        *(v11 - 1) = *v13 + *(v12 - 1);
        if (a7 != 2)
          *v11 = v13[1] + *v12;
      }
      v11 = (float *)((char *)v11 + a6);
      v12 = (float *)((char *)v12 + a4);
      v13 = (float *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001DB0A4(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  double *v11;
  double *v12;
  double *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v28;
  uint64_t v30;
  uint64_t v31;
  float64x2_t v32;
  float64x2_t v33;
  float64x2_t v34;
  float64x2_t *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  double v40;
  unint64_t v41;
  double v42;
  double v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  float64x2_t v47;
  float64x2_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  if (!a8)
    return result;
  v8 = a3;
  v9 = result;
  v10 = (a7 - 4);
  if (a7 >= 4)
  {
    v14 = 0;
    v15 = a8 - 1;
    v16 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    v53 = v16 + a5 + 32;
    v52 = v16 + result + 32;
    v50 = v16 + a3 + 32;
    v17 = (v10 & 0xFFFFFFFC) + 5;
    if (v17 <= a7)
      v17 = a7;
    v18 = 32 * (v10 >> 2) + 32;
    v51 = (v10 >> 2) + 1;
    v54 = v17 - (v10 & 0xFFFFFFFC) - 4;
    v49 = v17 & 3;
    v19 = a5 + 16;
    v20 = a5;
    while (1)
    {
      v21 = v15;
      v22 = v14 * a6;
      v23 = v14 * a2;
      v24 = v14 * a4;
      if (v10 >= 0xC)
      {
        v25 = 0;
        v26 = a5 + v18 + v22;
        v28 = v20 < v8 + v18 + v24 && a3 < v26;
        if ((result >= v26 || v20 >= v9 + v18 + v23) && !v28)
        {
          v30 = 0;
          v31 = v51 & 0x7FFFFFFE;
          do
          {
            v32 = vaddq_f64(*(float64x2_t *)(result + v30 + 16), *(float64x2_t *)(a3 + v30 + 16));
            v33 = vaddq_f64(*(float64x2_t *)(result + v30), *(float64x2_t *)(a3 + v30));
            v34 = vaddq_f64(*(float64x2_t *)(result + v30 + 48), *(float64x2_t *)(a3 + v30 + 48));
            v35 = (float64x2_t *)(v20 + v30);
            v35[2] = vaddq_f64(*(float64x2_t *)(result + v30 + 32), *(float64x2_t *)(a3 + v30 + 32));
            v35[3] = v34;
            *v35 = v33;
            v35[1] = v32;
            v30 += 64;
            v31 -= 2;
          }
          while (v31);
          v25 = 4 * (v51 & 0x7FFFFFFE);
          if (v51 == (v51 & 0x7FFFFFFE))
            goto LABEL_32;
        }
      }
      else
      {
        v25 = 0;
      }
      v36 = 8 * v25;
      v37 = v19;
      v38 = a3;
      v39 = result;
      do
      {
        v40 = *(double *)(v39 + v36 + 8) + *(double *)(v38 + v36 + 8);
        v41 = v37 + v36;
        *(double *)(v41 - 16) = *(double *)(v39 + v36) + *(double *)(v38 + v36);
        *(double *)(v41 - 8) = v40;
        v42 = *(double *)(v39 + v36 + 24);
        v43 = *(double *)(v38 + v36 + 24);
        *(double *)(v37 + v36) = *(double *)(v39 + v36 + 16) + *(double *)(v38 + v36 + 16);
        v25 += 4;
        *(double *)(v41 + 8) = v42 + v43;
        v39 += 32;
        v38 += 32;
        v37 += 32;
      }
      while (v25 <= v10);
LABEL_32:
      if ((int)v25 < a7)
      {
        v44 = (v10 & 0xFFFFFFFC) + 4;
        if (v54 < 6)
          goto LABEL_43;
        v44 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v53 + v22 - (v52 + v23)) < 0x20)
          goto LABEL_43;
        v44 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v53 + v22 - (v50 + v24)) < 0x20)
          goto LABEL_43;
        v45 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        v46 = v54 - v49;
        do
        {
          v47 = vaddq_f64(*(float64x2_t *)(result + v45 + 48), *(float64x2_t *)(a3 + v45 + 48));
          v48 = (float64x2_t *)(v20 + v45);
          v48[2] = vaddq_f64(*(float64x2_t *)(result + v45 + 32), *(float64x2_t *)(a3 + v45 + 32));
          v48[3] = v47;
          v45 += 32;
          v46 -= 4;
        }
        while (v46);
        v44 = (v10 & 0xFFFFFFFC) + 4 + v54 - v49;
        if (v49)
        {
LABEL_43:
          do
          {
            *(double *)(v20 + 8 * v44) = *(double *)(result + 8 * v44) + *(double *)(a3 + 8 * v44);
            ++v44;
          }
          while (v44 < a7);
        }
      }
      result += a2;
      a3 += a4;
      v20 += a6;
      v15 = v21 - 1;
      ++v14;
      v19 += a6;
      if (!v21)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v11 = (double *)(a5 + 16);
    v12 = (double *)(a3 + 16);
    v13 = (double *)(result + 8);
    do
    {
      *(v11 - 2) = *(v13 - 1) + *(v12 - 2);
      if (a7 != 1)
      {
        *(v11 - 1) = *v13 + *(v12 - 1);
        if (a7 != 2)
          *v11 = v13[1] + *v12;
      }
      v11 = (double *)((char *)v11 + a6);
      v12 = (double *)((char *)v12 + a4);
      v13 = (double *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1001DB3F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8x16_t v11;
  uint8x16_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  if (a8)
  {
    v8 = a7 - 4;
    while (a7 < 32)
    {
      v9 = 0;
      if ((int)v8 >= 0)
        goto LABEL_10;
LABEL_13:
      if ((int)v9 < a7)
      {
        do
        {
          *(_BYTE *)(a5 + v9) = byte_1003BEFA6[(*(unsigned __int8 *)(result + v9) | 0x100)
                                             - *(unsigned __int8 *)(a3 + v9)];
          ++v9;
        }
        while (a7 != v9);
      }
      result += a2;
      a3 += a4;
      a5 += a6;
      if (!--a8)
        return result;
    }
    v10 = 16;
    do
    {
      v11 = vqsubq_u8(*(uint8x16_t *)(result + v10), *(uint8x16_t *)(a3 + v10));
      v12 = (uint8x16_t *)(a5 + v10);
      v12[-1] = vqsubq_u8(*(uint8x16_t *)(result + v10 - 16), *(uint8x16_t *)(a3 + v10 - 16));
      *v12 = v11;
      v13 = v10 + 16;
      v10 += 32;
    }
    while (v13 <= a7 - 32);
    v9 = (v10 - 16);
    if ((int)v9 > (int)v8)
      goto LABEL_13;
LABEL_10:
    v14 = v9 << 32;
    do
    {
      v15 = (v14 >> 32) | 1;
      v16 = byte_1003BEFA6[(*(unsigned __int8 *)(result + v15) | 0x100) - *(unsigned __int8 *)(a3 + v15)];
      *(_BYTE *)(a5 + v9) = byte_1003BEFA6[(*(unsigned __int8 *)(result + v9) | 0x100) - *(unsigned __int8 *)(a3 + v9)];
      *(_BYTE *)(a5 + v15) = v16;
      v17 = (v14 >> 32) | 3;
      v18 = byte_1003BEFA6[(*(unsigned __int8 *)(result + v17) | 0x100) - *(unsigned __int8 *)(a3 + v17)];
      *(_BYTE *)(a5 + ((v14 >> 32) | 2)) = byte_1003BEFA6[(*(unsigned __int8 *)(result + ((v14 >> 32) | 2)) | 0x100)
                                                        - *(unsigned __int8 *)(a3 + ((v14 >> 32) | 2))];
      *(_BYTE *)(a5 + v17) = v18;
      v9 += 4;
      v14 += 0x400000000;
    }
    while (v9 <= v8);
    v9 = v9;
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001DB54C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int8x16_t v14;
  int8x16_t *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int8x16_t v33;
  int8x16_t *v34;
  unint64_t v35;
  uint64_t v36;

  if (a8)
  {
    v8 = 0;
    v9 = a7 - 4;
    v10 = result;
    v11 = a3;
    v12 = a5;
    do
    {
      if (a7 >= 32)
      {
        v13 = 0;
        do
        {
          v14 = vqsubq_s8(*(int8x16_t *)(v10 + v13 + 16), *(int8x16_t *)(v11 + v13 + 16));
          v15 = (int8x16_t *)(v12 + v13);
          *v15 = vqsubq_s8(*(int8x16_t *)(v10 + v13), *(int8x16_t *)(v11 + v13));
          v15[1] = v14;
          v13 += 32;
        }
        while (v13 <= a7 - 32);
        v13 = v13;
        if ((int)v13 > (int)v9)
          goto LABEL_31;
      }
      else
      {
        v13 = 0;
        if ((int)v9 < 0)
          goto LABEL_31;
      }
      v16 = v13 << 32;
      do
      {
        v17 = *(char *)(v10 + v13) - *(char *)(v11 + v13);
        if (v17 >= 127)
          v17 = 127;
        if (v17 <= -128)
          LOBYTE(v17) = 0x80;
        v18 = v16 >> 32;
        v19 = (v16 >> 32) | 1;
        v20 = *(char *)(v10 + v19) - *(char *)(v11 + v19);
        if (v20 >= 127)
          v20 = 127;
        *(_BYTE *)(v12 + v13) = v17;
        if (v20 <= -128)
          v21 = 0x80;
        else
          v21 = v20;
        *(_BYTE *)(v12 + v19) = v21;
        v22 = v18 | 2;
        v23 = *(char *)(v10 + (v18 | 2)) - *(char *)(v11 + (v18 | 2));
        if (v23 >= 127)
          v23 = 127;
        if (v23 <= -128)
          LOBYTE(v23) = 0x80;
        v24 = v18 | 3;
        v25 = *(char *)(v10 + v24) - *(char *)(v11 + v24);
        if (v25 >= 127)
          v25 = 127;
        *(_BYTE *)(v12 + v22) = v23;
        if (v25 <= -128)
          v26 = 0x80;
        else
          v26 = v25;
        *(_BYTE *)(v12 + v24) = v26;
        v13 += 4;
        v16 += 0x400000000;
      }
      while (v13 <= v9);
      v13 = v13;
LABEL_31:
      if ((int)v13 < a7)
      {
        v27 = a7 - v13;
        if (v27 < 8)
        {
          v28 = v13;
          goto LABEL_34;
        }
        if ((unint64_t)(a5 + v8 * a6 - (result + v8 * a2)) < 0x20)
        {
          v28 = v13;
          goto LABEL_34;
        }
        if ((unint64_t)(a5 + v8 * a6 - (a3 + v8 * a4)) < 0x20)
        {
          v28 = v13;
          goto LABEL_34;
        }
        if (v27 >= 0x20)
        {
          v30 = v27 & 0xFFFFFFFFFFFFFFE0;
          v31 = v13;
          v32 = v27 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v33 = vqsubq_s8(*(int8x16_t *)(v10 + v31 + 16), *(int8x16_t *)(v11 + v31 + 16));
            v34 = (int8x16_t *)(v12 + v31);
            *v34 = vqsubq_s8(*(int8x16_t *)(v10 + v31), *(int8x16_t *)(v11 + v31));
            v34[1] = v33;
            v31 += 32;
            v32 -= 32;
          }
          while (v32);
          if (v27 == v30)
            goto LABEL_3;
          if ((v27 & 0x18) == 0)
          {
            v28 = v30 + v13;
            do
            {
LABEL_34:
              v29 = *(char *)(v10 + v28) - *(char *)(v11 + v28);
              if (v29 >= 127)
                v29 = 127;
              if (v29 <= -128)
                LOBYTE(v29) = 0x80;
              *(_BYTE *)(v12 + v28++) = v29;
            }
            while (a7 != v28);
            goto LABEL_3;
          }
        }
        else
        {
          v30 = 0;
        }
        v28 = (v27 & 0xFFFFFFFFFFFFFFF8) + v13;
        v35 = v30 - (v27 & 0xFFFFFFFFFFFFFFF8);
        v36 = v30 + v13;
        do
        {
          *(int8x8_t *)(v12 + v36) = vqsub_s8(*(int8x8_t *)(v10 + v36), *(int8x8_t *)(v11 + v36));
          v36 += 8;
          v35 += 8;
        }
        while (v35);
        if (v27 != (v27 & 0xFFFFFFFFFFFFFFF8))
          goto LABEL_34;
      }
LABEL_3:
      v10 += a2;
      v11 += a4;
      v12 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1001DB7E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint16x8_t v15;
  uint16x8_t *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int16x8_t v29;
  int16x8_t *v30;

  if (a8)
  {
    v8 = 0;
    v9 = a7 - 4;
    v10 = result;
    v11 = a3;
    v12 = a5;
    while (a7 < 16)
    {
      v13 = 0;
      if ((int)v9 >= 0)
        goto LABEL_10;
LABEL_13:
      if ((int)v13 < a7)
      {
        v24 = a7 - v13;
        if (v24 < 0x10)
          goto LABEL_25;
        v26 = 2 * v13;
        v27 = a5 + v8 * a6 + 2 * v13;
        if ((unint64_t)(v27 - (result + v8 * a2 + 2 * v13)) < 0x20)
          goto LABEL_25;
        if ((unint64_t)(v27 - (a3 + v8 * a4 + v26)) < 0x20)
          goto LABEL_25;
        v13 += v24 & 0xFFFFFFFFFFFFFFF0;
        v28 = v24 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v29 = vuzp1q_s16((int16x8_t)vmaxq_s32((int32x4_t)vsubl_u16(*(uint16x4_t *)(v10 + v26 + 16), *(uint16x4_t *)(v11 + v26 + 16)), (int32x4_t)0), (int16x8_t)vmaxq_s32((int32x4_t)vsubl_high_u16(*(uint16x8_t *)(v10 + v26 + 16), *(uint16x8_t *)(v11 + v26 + 16)), (int32x4_t)0));
          v30 = (int16x8_t *)(v12 + v26);
          *v30 = vuzp1q_s16((int16x8_t)vmaxq_s32((int32x4_t)vsubl_u16(*(uint16x4_t *)(v10 + v26), *(uint16x4_t *)(v11 + v26)), (int32x4_t)0), (int16x8_t)vmaxq_s32((int32x4_t)vsubl_high_u16(*(uint16x8_t *)(v10 + v26), *(uint16x8_t *)(v11 + v26)), (int32x4_t)0));
          v30[1] = v29;
          v26 += 32;
          v28 -= 16;
        }
        while (v28);
        if (v24 != (v24 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_25:
          do
          {
            v25 = *(unsigned __int16 *)(v10 + 2 * v13) - *(unsigned __int16 *)(v11 + 2 * v13);
            *(_WORD *)(v12 + 2 * v13++) = v25 & ~(unsigned __int16)(v25 >> 31);
          }
          while (a7 != v13);
        }
      }
      v10 += a2;
      v11 += a4;
      v12 += a6;
      ++v8;
      if (!--a8)
        return result;
    }
    v13 = 0;
    v14 = 16;
    do
    {
      v15 = vqsubq_u16(*(uint16x8_t *)(v10 + v14), *(uint16x8_t *)(v11 + v14));
      v16 = (uint16x8_t *)(v12 + v14);
      v16[-1] = vqsubq_u16(*(uint16x8_t *)(v10 + v14 - 16), *(uint16x8_t *)(v11 + v14 - 16));
      *v16 = v15;
      v13 += 16;
      v14 += 32;
    }
    while (v13 <= a7 - 16);
    v13 = v13;
    if ((int)v13 > (int)v9)
      goto LABEL_13;
LABEL_10:
    v17 = v13 << 32;
    do
    {
      v18 = *(unsigned __int16 *)(v10 + 2 * v13) - *(unsigned __int16 *)(v11 + 2 * v13);
      v19 = (v17 >> 31) | 2;
      v20 = *(unsigned __int16 *)(v10 + v19) - *(unsigned __int16 *)(v11 + v19);
      *(_WORD *)(v12 + 2 * v13) = v18 & ~(unsigned __int16)(v18 >> 31);
      *(_WORD *)(v12 + v19) = v20 & ~(unsigned __int16)(v20 >> 31);
      v21 = (v17 >> 31) | 4;
      v22 = *(unsigned __int16 *)(v10 + v21) - *(unsigned __int16 *)(v11 + v21);
      v23 = (v17 >> 31) | 6;
      LODWORD(v19) = *(unsigned __int16 *)(v10 + v23) - *(unsigned __int16 *)(v11 + v23);
      *(_WORD *)(v12 + v21) = v22 & ~(unsigned __int16)(v22 >> 31);
      *(_WORD *)(v12 + v23) = v19 & ~(unsigned __int16)((int)v19 >> 31);
      v13 += 4;
      v17 += 0x400000000;
    }
    while (v13 <= v9);
    v13 = v13;
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001DB9F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int16x8_t v15;
  int16x8_t *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  __int16 v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  __int16 v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int16x8_t v33;
  int16x8_t *v34;

  if (a8)
  {
    v8 = 0;
    v9 = a7 - 4;
    v10 = result;
    v11 = a3;
    v12 = a5;
    do
    {
      if (a7 >= 16)
      {
        v14 = 0;
        v13 = 0;
        do
        {
          v15 = vqsubq_s16(*(int16x8_t *)(v10 + v14 + 16), *(int16x8_t *)(v11 + v14 + 16));
          v16 = (int16x8_t *)(v12 + v14);
          *v16 = vqsubq_s16(*(int16x8_t *)(v10 + v14), *(int16x8_t *)(v11 + v14));
          v16[1] = v15;
          v13 += 16;
          v14 += 32;
        }
        while (v13 <= a7 - 16);
        v13 = v13;
        if ((int)v13 <= (int)v9)
        {
LABEL_10:
          v17 = v13 << 32;
          do
          {
            v18 = *(__int16 *)(v10 + 2 * v13) - *(__int16 *)(v11 + 2 * v13);
            if (v18 >= 0x7FFF)
              v18 = 0x7FFF;
            if (v18 <= -32768)
              LOWORD(v18) = 0x8000;
            v19 = v17 >> 31;
            v20 = (v17 >> 31) | 2;
            v21 = *(__int16 *)(v10 + v20) - *(__int16 *)(v11 + v20);
            if (v21 >= 0x7FFF)
              v21 = 0x7FFF;
            *(_WORD *)(v12 + 2 * v13) = v18;
            if (v21 <= -32768)
              v22 = 0x8000;
            else
              v22 = v21;
            *(_WORD *)(v12 + v20) = v22;
            v23 = v19 | 4;
            v24 = *(__int16 *)(v10 + (v19 | 4)) - *(__int16 *)(v11 + (v19 | 4));
            if (v24 >= 0x7FFF)
              v24 = 0x7FFF;
            if (v24 <= -32768)
              LOWORD(v24) = 0x8000;
            v25 = v19 | 6;
            v26 = *(__int16 *)(v10 + v25) - *(__int16 *)(v11 + v25);
            if (v26 >= 0x7FFF)
              v26 = 0x7FFF;
            *(_WORD *)(v12 + v23) = v24;
            if (v26 <= -32768)
              v27 = 0x8000;
            else
              v27 = v26;
            *(_WORD *)(v12 + v25) = v27;
            v13 += 4;
            v17 += 0x400000000;
          }
          while (v13 <= v9);
          v13 = v13;
        }
      }
      else
      {
        v13 = 0;
        if ((int)v9 >= 0)
          goto LABEL_10;
      }
      if ((int)v13 < a7)
      {
        v28 = a7 - v13;
        if (v28 < 0x10)
          goto LABEL_47;
        v30 = 2 * v13;
        v31 = a5 + v8 * a6 + 2 * v13;
        if ((unint64_t)(v31 - (result + v8 * a2 + 2 * v13)) < 0x20)
          goto LABEL_47;
        if ((unint64_t)(v31 - (a3 + v8 * a4 + v30)) < 0x20)
          goto LABEL_47;
        v13 += v28 & 0xFFFFFFFFFFFFFFF0;
        v32 = v28 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v33 = vqsubq_s16(*(int16x8_t *)(v10 + v30 + 16), *(int16x8_t *)(v11 + v30 + 16));
          v34 = (int16x8_t *)(v12 + v30);
          *v34 = vqsubq_s16(*(int16x8_t *)(v10 + v30), *(int16x8_t *)(v11 + v30));
          v34[1] = v33;
          v30 += 32;
          v32 -= 16;
        }
        while (v32);
        if (v28 != (v28 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_47:
          do
          {
            v29 = *(__int16 *)(v10 + 2 * v13) - *(__int16 *)(v11 + 2 * v13);
            if (v29 >= 0x7FFF)
              v29 = 0x7FFF;
            if (v29 <= -32768)
              LOWORD(v29) = 0x8000;
            *(_WORD *)(v12 + 2 * v13++) = v29;
          }
          while (a7 != v13);
        }
      }
      v10 += a2;
      v11 += a4;
      v12 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001DBC38(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  unint64_t v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _DWORD *v16;
  int *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  int *v22;
  int *v23;
  _DWORD *v24;
  int32x4_t v25;
  _DWORD *v26;
  int *v27;
  int *v28;
  int32x4_t v29;
  int32x4_t *v30;
  int v31;
  int v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int32x4_t v40;
  int32x4_t *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  BOOL v55;
  uint64_t v57;
  uint64_t v58;
  int32x4_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  int v69;
  int v70;
  int v71;
  _DWORD *v72;
  int v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  int32x4_t v78;
  int32x4_t *v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;

  v85 = a5;
  v86 = a3;
  v87 = result;
  if (!a8)
    return result;
  v8 = a8 - 1;
  v9 = (a7 - 4);
  if (a7 >= 8)
  {
    v13 = 0;
    v15 = a5;
    v14 = a3;
    v16 = (_DWORD *)(a5 + 32);
    v17 = (int *)(a3 + 32);
    v18 = result;
    v19 = result + 32;
    while (1)
    {
      result = 0;
      v20 = 0;
      v21 = v8;
      v22 = (int *)v19;
      v23 = v17;
      v24 = v16;
      do
      {
        v25 = vsubq_s32(*(int32x4_t *)(v18 + result), *(int32x4_t *)(v14 + result));
        v26 = v24;
        v27 = v23;
        v28 = v22;
        v29 = vsubq_s32(*(int32x4_t *)(v18 + result + 16), *(int32x4_t *)(v14 + result + 16));
        v30 = (int32x4_t *)(v15 + result);
        v20 += 8;
        result += 32;
        *v30 = v25;
        v30[1] = v29;
        v24 = v26 + 8;
        v23 += 8;
        v22 += 8;
      }
      while (v20 <= (a7 - 8));
      if ((int)v9 >= (int)v20)
      {
        result = 0;
        do
        {
          v32 = *v28;
          v28 += 4;
          v31 = v32;
          v33 = *v27;
          v27 += 4;
          v34 = (unint64_t)(((_DWORD)v20 + (_DWORD)result) & 0xFFFFFFFC) >> 2;
          v35 = (16 * (v34 & 0x3FFFFFFF)) | 4;
          v36 = *(_DWORD *)(v18 + v35) - *(_DWORD *)(v14 + v35);
          *v26 = v31 - v33;
          v26 += 4;
          *(_DWORD *)(v15 + v35) = v36;
          *(int32x2_t *)(v15 + ((16 * (v34 & 0x3FFFFFFF)) | 8)) = vsub_s32(*(int32x2_t *)(v18 + ((16 * (v34 & 0x3FFFFFFF)) | 8)), *(int32x2_t *)(v14 + ((16 * (v34 & 0x3FFFFFFF)) | 8)));
          result += 4;
        }
        while (v20 + result <= v9);
        v20 = (v20 + result);
        if ((int)v20 < a7)
        {
LABEL_20:
          result = a7 - v20;
          if (result < 0xC)
            goto LABEL_64;
          v37 = 4 * v20;
          v38 = v85 + v13 * a6 + 4 * v20;
          if (v38 - (v87 + v13 * a2 + 4 * v20) < 0x20)
            goto LABEL_64;
          if (v38 - (v86 + v13 * a4 + v37) < 0x20)
            goto LABEL_64;
          v20 += result & 0xFFFFFFFFFFFFFFF8;
          v39 = result & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v40 = vsubq_s32(*(int32x4_t *)(v18 + v37 + 16), *(int32x4_t *)(v14 + v37 + 16));
            v41 = (int32x4_t *)(v15 + v37);
            *v41 = vsubq_s32(*(int32x4_t *)(v18 + v37), *(int32x4_t *)(v14 + v37));
            v41[1] = v40;
            v37 += 32;
            v39 -= 8;
          }
          while (v39);
          if (result != (result & 0xFFFFFFFFFFFFFFF8))
          {
LABEL_64:
            do
            {
              result = 4 * v20;
              *(_DWORD *)(v15 + 4 * v20) = *(_DWORD *)(v18 + 4 * v20) - *(_DWORD *)(v14 + 4 * v20);
              ++v20;
            }
            while (a7 != v20);
          }
        }
      }
      else
      {
        v20 = v20;
        if ((int)v20 < a7)
          goto LABEL_20;
      }
      v18 += a2;
      v14 += a4;
      v15 += a6;
      v8 = v21 - 1;
      ++v13;
      v16 = (_DWORD *)((char *)v16 + a6);
      v17 = (int *)((char *)v17 + a4);
      v19 += a2;
      if (!v21)
        return result;
    }
  }
  if (a7 >= 4)
  {
    v42 = 0;
    v84 = a5 + 16;
    v83 = result + 16;
    v80 = a3 + 16;
    v43 = (v9 & 0xFFFFFFFC) + 5;
    if (v43 <= a7)
      v43 = a7;
    v44 = v43 - (v9 & 0xFFFFFFFC) - 4;
    v45 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    v82 = (v9 >> 2) + 1;
    v81 = v44 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      v46 = v8;
      v47 = v42 * a6;
      v48 = v42 * a2;
      v49 = v42 * a4;
      if (v9 < 0xC)
        break;
      v50 = 0;
      v53 = v85 + v45 + v47;
      v55 = a5 < v86 + v45 + v49 && a3 < v53;
      if (result < v53 && a5 < v87 + v45 + v48)
      {
        v52 = 4;
        v51 = 0;
LABEL_49:
        v64 = v50 - 1;
        v63 = v52 - 4;
        v65 = 4 * v51;
        v66 = a3;
        v67 = result;
        v68 = a5;
        do
        {
          v69 = *(_DWORD *)(v67 + v65 + 4);
          v70 = *(_DWORD *)(v66 + v65 + 4);
          *(_DWORD *)(v68 + v65) = *(_DWORD *)(v67 + v65) - *(_DWORD *)(v66 + v65);
          v71 = v69 - v70;
          v72 = (_DWORD *)(v68 + v65);
          v72[1] = v71;
          v73 = *(_DWORD *)(v67 + v65 + 12) - *(_DWORD *)(v66 + v65 + 12);
          v51 += 4;
          ++v64;
          v63 += 4;
          v72[2] = *(_DWORD *)(v67 + v65 + 8) - *(_DWORD *)(v66 + v65 + 8);
          v72[3] = v73;
          v68 += 16;
          v67 += 16;
          v66 += 16;
        }
        while (v51 <= v9);
        goto LABEL_51;
      }
      v52 = 4;
      v51 = 0;
      if (v55)
        goto LABEL_49;
      v57 = 0;
      v58 = v82 & 0x7FFFFFFC;
      do
      {
        v59 = vsubq_s32(*(int32x4_t *)(result + v57 + 16), *(int32x4_t *)(a3 + v57 + 16));
        v60 = vsubq_s32(*(int32x4_t *)(result + v57), *(int32x4_t *)(a3 + v57));
        v61 = vsubq_s32(*(int32x4_t *)(result + v57 + 48), *(int32x4_t *)(a3 + v57 + 48));
        v62 = (int32x4_t *)(a5 + v57);
        v62[2] = vsubq_s32(*(int32x4_t *)(result + v57 + 32), *(int32x4_t *)(a3 + v57 + 32));
        v62[3] = v61;
        *v62 = v60;
        v62[1] = v59;
        v57 += 64;
        v58 -= 4;
      }
      while (v58);
      v50 = v82 & 0x7FFFFFFC;
      v52 = (16 * ((v50 >> 2) & 0x1FFFFFFF)) | 4;
      v63 = 4 * v50;
      v51 = v63;
      v64 = v50 - 1;
      if (v82 != v50)
        goto LABEL_49;
LABEL_51:
      if ((int)v51 < a7)
      {
        if (v44 < 0xC
          || (v75 = 16 * v64 + v84 + v47, v75 - (16 * v64 + v83 + v48) < 0x20)
          || v75 - (16 * v64 + v80 + v49) < 0x20)
        {
          v74 = v63;
        }
        else
        {
          v76 = v44 & 0xFFFFFFFFFFFFFFF8;
          v74 = v63 + v81;
          v77 = 4 * v63;
          do
          {
            v78 = vsubq_s32(*(int32x4_t *)(result + v77 + 16), *(int32x4_t *)(a3 + v77 + 16));
            v79 = (int32x4_t *)(a5 + v77);
            *v79 = vsubq_s32(*(int32x4_t *)(result + v77), *(int32x4_t *)(a3 + v77));
            v79[1] = v78;
            v77 += 32;
            v76 -= 8;
          }
          while (v76);
          if (v44 == v81)
            goto LABEL_31;
        }
        do
        {
          *(_DWORD *)(a5 + 4 * v74) = *(_DWORD *)(result + 4 * v74) - *(_DWORD *)(a3 + 4 * v74);
          ++v74;
        }
        while (v74 < a7);
      }
LABEL_31:
      result += a2;
      a3 += a4;
      a5 += a6;
      v8 = v46 - 1;
      ++v42;
      if (!v46)
        return result;
    }
    v50 = 0;
    v51 = 0;
    v52 = 4;
    goto LABEL_49;
  }
  if (a7 >= 1)
  {
    v10 = (_DWORD *)(a5 + 8);
    v11 = (_DWORD *)(a3 + 8);
    v12 = (_DWORD *)(result + 4);
    do
    {
      *(v10 - 2) = *(v12 - 1) - *(v11 - 2);
      if (a7 != 1)
      {
        *(v10 - 1) = *v12 - *(v11 - 1);
        if (a7 != 2)
          *v10 = v12[1] - *v11;
      }
      v10 = (_DWORD *)((char *)v10 + a6);
      v11 = (_DWORD *)((char *)v11 + a4);
      v12 = (_DWORD *)((char *)v12 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001DC19C(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v8;
  int v9;
  unint64_t v10;
  float *v11;
  float *v12;
  float *v13;
  uint64_t v14;
  float *v15;
  float *v16;
  float *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  float *v24;
  float *v25;
  float *v26;
  float32x4_t v27;
  float *v28;
  float *v29;
  float *v30;
  float32x4_t v31;
  float32x4_t *v32;
  uint64_t v33;
  float v34;
  float v35;
  float v36;
  unint64_t v37;
  uint64_t v38;
  float v39;
  float v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  float32x4_t v45;
  float32x4_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  BOOL v63;
  uint64_t v65;
  uint64_t v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  float32x4_t *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  float v77;
  float v78;
  float *v79;
  float v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  float32x4_t v85;
  float32x4_t *v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;

  if (!a8)
    return result;
  v8 = a5;
  v9 = a8 - 1;
  v10 = (a7 - 4);
  if (a7 >= 8)
  {
    v14 = 0;
    v15 = (float *)(a5 + 32);
    v16 = (float *)(a3 + 32);
    v17 = (float *)(result + 32);
    v18 = result;
    v19 = a3;
    v20 = a5;
    while (1)
    {
      v21 = 0;
      v22 = 0;
      v23 = v9;
      v24 = v17;
      v25 = v16;
      v26 = v15;
      do
      {
        v27 = vsubq_f32(*(float32x4_t *)(v18 + v21), *(float32x4_t *)(v19 + v21));
        v28 = v26;
        v29 = v25;
        v30 = v24;
        v31 = vsubq_f32(*(float32x4_t *)(v18 + v21 + 16), *(float32x4_t *)(v19 + v21 + 16));
        v32 = (float32x4_t *)(v20 + v21);
        v22 += 8;
        v21 += 32;
        *v32 = v27;
        v32[1] = v31;
        v26 += 8;
        v25 = v29 + 8;
        v24 += 8;
      }
      while (v22 <= (a7 - 8));
      if ((int)v10 >= (int)v22)
      {
        v33 = 0;
        do
        {
          v34 = *v30;
          v30 += 4;
          v35 = v34;
          v36 = *v29;
          v29 += 4;
          v37 = (unint64_t)(((_DWORD)v22 + (_DWORD)v33) & 0xFFFFFFFC) >> 2;
          v38 = (16 * (v37 & 0x3FFFFFFF)) | 4;
          v39 = *(float *)(v18 + v38);
          v40 = *(float *)(v19 + v38);
          *v28 = v35 - v36;
          v28 += 4;
          *(float *)(v20 + v38) = v39 - v40;
          *(float32x2_t *)(v20 + ((16 * (v37 & 0x3FFFFFFF)) | 8)) = vsub_f32(*(float32x2_t *)(v18+ ((16 * (v37 & 0x3FFFFFFF)) | 8)), *(float32x2_t *)(v19+ ((16 * (v37 & 0x3FFFFFFF)) | 8)));
          v33 += 4;
        }
        while (v22 + v33 <= v10);
        v22 = (v22 + v33);
        if ((int)v22 < a7)
        {
LABEL_20:
          v41 = a7 - v22;
          if (v41 < 0xC)
            goto LABEL_64;
          v42 = 4 * v22;
          v43 = v8 + v14 * a6 + 4 * v22;
          if (v43 - (result + v14 * a2 + 4 * v22) < 0x20)
            goto LABEL_64;
          if (v43 - (a3 + v14 * a4 + v42) < 0x20)
            goto LABEL_64;
          v22 += v41 & 0xFFFFFFFFFFFFFFF8;
          v44 = v41 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v45 = vsubq_f32(*(float32x4_t *)(v18 + v42 + 16), *(float32x4_t *)(v19 + v42 + 16));
            v46 = (float32x4_t *)(v20 + v42);
            *v46 = vsubq_f32(*(float32x4_t *)(v18 + v42), *(float32x4_t *)(v19 + v42));
            v46[1] = v45;
            v42 += 32;
            v44 -= 8;
          }
          while (v44);
          if (v41 != (v41 & 0xFFFFFFFFFFFFFFF8))
          {
LABEL_64:
            do
            {
              *(float *)(v20 + 4 * v22) = *(float *)(v18 + 4 * v22) - *(float *)(v19 + 4 * v22);
              ++v22;
            }
            while (a7 != v22);
          }
        }
      }
      else
      {
        v22 = v22;
        if ((int)v22 < a7)
          goto LABEL_20;
      }
      v18 += a2;
      v19 += a4;
      v20 += a6;
      v9 = v23 - 1;
      ++v14;
      v15 = (float *)((char *)v15 + a6);
      v16 = (float *)((char *)v16 + a4);
      v17 = (float *)((char *)v17 + a2);
      if (!v23)
        return result;
    }
  }
  if (a7 >= 4)
  {
    v47 = 0;
    v91 = a5 + 16;
    v90 = result + 16;
    v87 = a3 + 16;
    v48 = (v10 & 0xFFFFFFFC) + 5;
    if (v48 <= a7)
      v48 = a7;
    v49 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    v89 = (v10 >> 2) + 1;
    v92 = v48 - (v10 & 0xFFFFFFFC) - 4;
    v88 = v92 & 0xFFFFFFFFFFFFFFF8;
    v50 = result;
    v51 = a3;
    v93 = result;
    v52 = a3;
    v53 = a5;
    while (1)
    {
      v54 = v9;
      v55 = v47 * a6;
      v56 = v47 * a2;
      v57 = v47 * a4;
      if (v10 < 0xC)
        break;
      v58 = 0;
      v61 = v8 + v49 + v55;
      v63 = a5 < a3 + v49 + v57 && v51 < v61;
      if (v50 < v61 && a5 < result + v49 + v56)
      {
        v60 = 4;
        v59 = 0;
LABEL_49:
        v72 = v58 - 1;
        v71 = v60 - 4;
        v73 = 4 * v59;
        v74 = v51;
        v75 = v50;
        v76 = a5;
        do
        {
          v77 = *(float *)(v75 + v73 + 4);
          v78 = *(float *)(v74 + v73 + 4);
          *(float *)(v76 + v73) = *(float *)(v75 + v73) - *(float *)(v74 + v73);
          v79 = (float *)(v76 + v73);
          v79[1] = v77 - v78;
          v80 = *(float *)(v75 + v73 + 12) - *(float *)(v74 + v73 + 12);
          v59 += 4;
          ++v72;
          v71 += 4;
          v79[2] = *(float *)(v75 + v73 + 8) - *(float *)(v74 + v73 + 8);
          v79[3] = v80;
          v76 += 16;
          v75 += 16;
          v74 += 16;
        }
        while (v59 <= v10);
        goto LABEL_51;
      }
      v60 = 4;
      v59 = 0;
      if (v63)
        goto LABEL_49;
      v65 = 0;
      v66 = v89 & 0x7FFFFFFC;
      do
      {
        v67 = vsubq_f32(*(float32x4_t *)(v50 + v65 + 16), *(float32x4_t *)(v51 + v65 + 16));
        v68 = vsubq_f32(*(float32x4_t *)(v50 + v65), *(float32x4_t *)(v51 + v65));
        v69 = vsubq_f32(*(float32x4_t *)(v50 + v65 + 48), *(float32x4_t *)(v51 + v65 + 48));
        v70 = (float32x4_t *)(a5 + v65);
        v70[2] = vsubq_f32(*(float32x4_t *)(v50 + v65 + 32), *(float32x4_t *)(v51 + v65 + 32));
        v70[3] = v69;
        *v70 = v68;
        v70[1] = v67;
        v65 += 64;
        v66 -= 4;
      }
      while (v66);
      v58 = v89 & 0x7FFFFFFC;
      v60 = (16 * ((v58 >> 2) & 0x1FFFFFFF)) | 4;
      v71 = 4 * v58;
      v59 = v71;
      v72 = v58 - 1;
      if (v89 != v58)
        goto LABEL_49;
LABEL_51:
      if ((int)v59 < a7)
      {
        if (v92 < 0xC
          || (v82 = 16 * v72 + v91 + v55, v82 - (16 * v72 + v90 + v56) < 0x20)
          || v82 - (16 * v72 + v87 + v57) < 0x20)
        {
          v81 = v71;
        }
        else
        {
          v83 = v92 & 0xFFFFFFFFFFFFFFF8;
          v81 = v71 + v88;
          v84 = 4 * v71;
          do
          {
            v85 = vsubq_f32(*(float32x4_t *)(v50 + v84 + 16), *(float32x4_t *)(v51 + v84 + 16));
            v86 = (float32x4_t *)(a5 + v84);
            *v86 = vsubq_f32(*(float32x4_t *)(v50 + v84), *(float32x4_t *)(v51 + v84));
            v86[1] = v85;
            v84 += 32;
            v83 -= 8;
          }
          while (v83);
          if (v92 == v88)
            goto LABEL_31;
        }
        do
        {
          *(float *)(a5 + 4 * v81) = *(float *)(v50 + 4 * v81) - *(float *)(v51 + 4 * v81);
          ++v81;
        }
        while (v81 < a7);
      }
LABEL_31:
      v50 += a2;
      v51 += a4;
      a5 += a6;
      v9 = v54 - 1;
      ++v47;
      result = v93;
      a3 = v52;
      v8 = v53;
      if (!v54)
        return result;
    }
    v58 = 0;
    v59 = 0;
    v60 = 4;
    goto LABEL_49;
  }
  if (a7 >= 1)
  {
    v11 = (float *)(a5 + 8);
    v12 = (float *)(a3 + 8);
    v13 = (float *)(result + 4);
    do
    {
      *(v11 - 2) = *(v13 - 1) - *(v12 - 2);
      if (a7 != 1)
      {
        *(v11 - 1) = *v13 - *(v12 - 1);
        if (a7 != 2)
          *v11 = v13[1] - *v12;
      }
      v11 = (float *)((char *)v11 + a6);
      v12 = (float *)((char *)v12 + a4);
      v13 = (float *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001DC70C(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  double *v11;
  double *v12;
  double *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v28;
  uint64_t v30;
  uint64_t v31;
  float64x2_t v32;
  float64x2_t v33;
  float64x2_t v34;
  float64x2_t *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  double v40;
  unint64_t v41;
  double v42;
  double v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  float64x2_t v47;
  float64x2_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  if (!a8)
    return result;
  v8 = a3;
  v9 = result;
  v10 = (a7 - 4);
  if (a7 >= 4)
  {
    v14 = 0;
    v15 = a8 - 1;
    v16 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    v53 = v16 + a5 + 32;
    v52 = v16 + result + 32;
    v50 = v16 + a3 + 32;
    v17 = (v10 & 0xFFFFFFFC) + 5;
    if (v17 <= a7)
      v17 = a7;
    v18 = 32 * (v10 >> 2) + 32;
    v51 = (v10 >> 2) + 1;
    v54 = v17 - (v10 & 0xFFFFFFFC) - 4;
    v49 = v17 & 3;
    v19 = a5 + 16;
    v20 = a5;
    while (1)
    {
      v21 = v15;
      v22 = v14 * a6;
      v23 = v14 * a2;
      v24 = v14 * a4;
      if (v10 >= 0xC)
      {
        v25 = 0;
        v26 = a5 + v18 + v22;
        v28 = v20 < v8 + v18 + v24 && a3 < v26;
        if ((result >= v26 || v20 >= v9 + v18 + v23) && !v28)
        {
          v30 = 0;
          v31 = v51 & 0x7FFFFFFE;
          do
          {
            v32 = vsubq_f64(*(float64x2_t *)(result + v30 + 16), *(float64x2_t *)(a3 + v30 + 16));
            v33 = vsubq_f64(*(float64x2_t *)(result + v30), *(float64x2_t *)(a3 + v30));
            v34 = vsubq_f64(*(float64x2_t *)(result + v30 + 48), *(float64x2_t *)(a3 + v30 + 48));
            v35 = (float64x2_t *)(v20 + v30);
            v35[2] = vsubq_f64(*(float64x2_t *)(result + v30 + 32), *(float64x2_t *)(a3 + v30 + 32));
            v35[3] = v34;
            *v35 = v33;
            v35[1] = v32;
            v30 += 64;
            v31 -= 2;
          }
          while (v31);
          v25 = 4 * (v51 & 0x7FFFFFFE);
          if (v51 == (v51 & 0x7FFFFFFE))
            goto LABEL_32;
        }
      }
      else
      {
        v25 = 0;
      }
      v36 = 8 * v25;
      v37 = v19;
      v38 = a3;
      v39 = result;
      do
      {
        v40 = *(double *)(v39 + v36 + 8) - *(double *)(v38 + v36 + 8);
        v41 = v37 + v36;
        *(double *)(v41 - 16) = *(double *)(v39 + v36) - *(double *)(v38 + v36);
        *(double *)(v41 - 8) = v40;
        v42 = *(double *)(v39 + v36 + 24);
        v43 = *(double *)(v38 + v36 + 24);
        *(double *)(v37 + v36) = *(double *)(v39 + v36 + 16) - *(double *)(v38 + v36 + 16);
        v25 += 4;
        *(double *)(v41 + 8) = v42 - v43;
        v39 += 32;
        v38 += 32;
        v37 += 32;
      }
      while (v25 <= v10);
LABEL_32:
      if ((int)v25 < a7)
      {
        v44 = (v10 & 0xFFFFFFFC) + 4;
        if (v54 < 6)
          goto LABEL_43;
        v44 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v53 + v22 - (v52 + v23)) < 0x20)
          goto LABEL_43;
        v44 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v53 + v22 - (v50 + v24)) < 0x20)
          goto LABEL_43;
        v45 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        v46 = v54 - v49;
        do
        {
          v47 = vsubq_f64(*(float64x2_t *)(result + v45 + 48), *(float64x2_t *)(a3 + v45 + 48));
          v48 = (float64x2_t *)(v20 + v45);
          v48[2] = vsubq_f64(*(float64x2_t *)(result + v45 + 32), *(float64x2_t *)(a3 + v45 + 32));
          v48[3] = v47;
          v45 += 32;
          v46 -= 4;
        }
        while (v46);
        v44 = (v10 & 0xFFFFFFFC) + 4 + v54 - v49;
        if (v49)
        {
LABEL_43:
          do
          {
            *(double *)(v20 + 8 * v44) = *(double *)(result + 8 * v44) - *(double *)(a3 + 8 * v44);
            ++v44;
          }
          while (v44 < a7);
        }
      }
      result += a2;
      a3 += a4;
      v20 += a6;
      v15 = v21 - 1;
      ++v14;
      v19 += a6;
      if (!v21)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v11 = (double *)(a5 + 16);
    v12 = (double *)(a3 + 16);
    v13 = (double *)(result + 8);
    do
    {
      *(v11 - 2) = *(v13 - 1) - *(v12 - 2);
      if (a7 != 1)
      {
        *(v11 - 1) = *v13 - *(v12 - 1);
        if (a7 != 2)
          *v11 = v13[1] - *v12;
      }
      v11 = (double *)((char *)v11 + a6);
      v12 = (double *)((char *)v12 + a4);
      v13 = (double *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1001DCA58(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8x16_t v11;
  uint8x16_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  if (a8)
  {
    v8 = a7 - 4;
    while (a7 < 32)
    {
      v9 = 0;
      if ((int)v8 >= 0)
        goto LABEL_10;
LABEL_13:
      if ((int)v9 < a7)
      {
        do
        {
          *(_BYTE *)(a5 + v9) = byte_1003BEFA6[*(unsigned __int8 *)(a3 + v9) - *(unsigned __int8 *)(result + v9) + 256]
                              + *(_BYTE *)(result + v9);
          ++v9;
        }
        while (a7 != v9);
      }
      result += a2;
      a3 += a4;
      a5 += a6;
      if (!--a8)
        return result;
    }
    v10 = 16;
    do
    {
      v11 = vmaxq_u8(*(uint8x16_t *)(result + v10), *(uint8x16_t *)(a3 + v10));
      v12 = (uint8x16_t *)(a5 + v10);
      v12[-1] = vmaxq_u8(*(uint8x16_t *)(result + v10 - 16), *(uint8x16_t *)(a3 + v10 - 16));
      *v12 = v11;
      v13 = v10 + 16;
      v10 += 32;
    }
    while (v13 <= a7 - 32);
    v9 = (v10 - 16);
    if ((int)v9 > (int)v8)
      goto LABEL_13;
LABEL_10:
    v14 = v9 << 32;
    do
    {
      v15 = (v14 >> 32) | 1;
      v16 = byte_1003BEFA6[*(unsigned __int8 *)(a3 + v15) - *(unsigned __int8 *)(result + v15) + 256]
          + *(_BYTE *)(result + v15);
      *(_BYTE *)(a5 + v9) = byte_1003BEFA6[*(unsigned __int8 *)(a3 + v9) - *(unsigned __int8 *)(result + v9) + 256]
                          + *(_BYTE *)(result + v9);
      *(_BYTE *)(a5 + v15) = v16;
      v17 = (v14 >> 32) | 3;
      v18 = *(unsigned __int8 *)(result + v17);
      LOBYTE(v15) = byte_1003BEFA6[*(unsigned __int8 *)(a3 + v17) - v18 + 256];
      *(_BYTE *)(a5 + ((v14 >> 32) | 2)) = byte_1003BEFA6[*(unsigned __int8 *)(a3 + ((v14 >> 32) | 2))
                                                        - *(unsigned __int8 *)(result + ((v14 >> 32) | 2))
                                                        + 256]
                                         + *(_BYTE *)(result + ((v14 >> 32) | 2));
      *(_BYTE *)(a5 + v17) = v15 + v18;
      v9 += 4;
      v14 += 0x400000000;
    }
    while (v9 <= v8);
    v9 = v9;
    goto LABEL_13;
  }
  return result;
}

unint64_t sub_1001DCBD0(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  _BYTE *v28;
  int8x16_t v29;
  _BYTE *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int8x16_t v34;
  int8x16_t *v35;
  int v36;
  int v37;
  char v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  int v48;
  int v49;
  char v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  int v54;
  unint64_t v55;
  unint64_t v56;
  int8x16_t v57;
  int8x16_t *v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  unint64_t v87;
  BOOL v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int8x16_t v94;
  int8x16_t v95;
  int8x16_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  int8x16_t v100;
  int8x16_t *v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v109;

  v107 = a5;
  v109 = result;
  if (!a8)
    return result;
  v8 = a7 - 4;
  v9 = a7;
  if (a7 >= 32)
  {
    v16 = 0;
    v18 = a5;
    v17 = a3;
    v19 = (_BYTE *)(v107 + 32);
    v20 = (char *)(a3 + 32);
    v21 = result;
    v22 = result + 32;
    while (1)
    {
      v23 = 0;
      v24 = v107 + v16 * a6;
      v25 = 0x2000000000;
      v26 = (char *)v22;
      v27 = v20;
      v28 = v19;
      do
      {
        v29 = vmaxq_s8(*(int8x16_t *)(v21 + v23), *(int8x16_t *)(v17 + v23));
        v30 = v28;
        v31 = v25;
        v32 = v27;
        v33 = v26;
        v34 = vmaxq_s8(*(int8x16_t *)(v21 + v23 + 16), *(int8x16_t *)(v17 + v23 + 16));
        v35 = (int8x16_t *)(v18 + v23);
        v23 += 32;
        v28 += 32;
        *v35 = v29;
        v35[1] = v34;
        v25 += 0x2000000000;
        v27 = v32 + 32;
        v26 += 32;
      }
      while (v23 <= a7 - 32);
      if ((int)v8 >= (int)v23)
      {
        do
        {
          v37 = *v33;
          v33 += 4;
          v36 = v37;
          v39 = *v32;
          v32 += 4;
          v38 = v39;
          v40 = v31 >> 32;
          v41 = (v31 >> 32) | 1;
          v42 = *(char *)(v21 + v41);
          if (v36 <= v39)
            LOBYTE(v36) = v38;
          v43 = *(char *)(v17 + v41);
          *v30 = v36;
          v30 += 4;
          if (v42 <= v43)
            LOBYTE(v42) = v43;
          *(_BYTE *)(v18 + v41) = v42;
          v44 = v40 | 2;
          v45 = *(char *)(v21 + (v40 | 2));
          v46 = *(char *)(v17 + (v40 | 2));
          v47 = v40 | 3;
          v48 = *(char *)(v21 + v47);
          if (v45 <= v46)
            LOBYTE(v45) = v46;
          v49 = *(char *)(v17 + v47);
          *(_BYTE *)(v18 + v44) = v45;
          if (v48 <= v49)
            v50 = v49;
          else
            v50 = v48;
          *(_BYTE *)(v18 + v47) = v50;
          v23 += 4;
          v31 += 0x400000000;
        }
        while (v23 <= v8);
      }
      v51 = v23;
      result = a7;
      if ((int)v23 >= a7)
        goto LABEL_17;
      v52 = a7 - (unint64_t)v23;
      if (v52 < 8)
      {
        v53 = v51;
        goto LABEL_34;
      }
      if (v24 - (v109 + v16 * a2) < 0x20)
      {
        v53 = v51;
        goto LABEL_34;
      }
      if (v24 - (a3 + v16 * a4) < 0x20)
      {
        v53 = v51;
        goto LABEL_34;
      }
      if (v52 >= 0x20)
      {
        v55 = v52 & 0xFFFFFFFFFFFFFFE0;
        result = v51;
        v56 = v52 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v57 = vmaxq_s8(*(int8x16_t *)(v21 + result + 16), *(int8x16_t *)(v17 + result + 16));
          v58 = (int8x16_t *)(v18 + result);
          *v58 = vmaxq_s8(*(int8x16_t *)(v21 + result), *(int8x16_t *)(v17 + result));
          v58[1] = v57;
          result += 32;
          v56 -= 32;
        }
        while (v56);
        if (v52 == v55)
          goto LABEL_17;
        if ((v52 & 0x18) == 0)
        {
          v53 = v55 + v51;
          do
          {
LABEL_34:
            LODWORD(result) = *(char *)(v21 + v53);
            v54 = *(char *)(v17 + v53);
            if ((int)result <= v54)
              result = v54;
            else
              result = result;
            *(_BYTE *)(v18 + v53++) = result;
          }
          while (a7 != v53);
          goto LABEL_17;
        }
      }
      else
      {
        v55 = 0;
      }
      result = v52 & 0xFFFFFFFFFFFFFFF8;
      v53 = (v52 & 0xFFFFFFFFFFFFFFF8) + v51;
      v59 = v55 - (v52 & 0xFFFFFFFFFFFFFFF8);
      v60 = v55 + v51;
      do
      {
        *(int8x8_t *)(v18 + v60) = vmax_s8(*(int8x8_t *)(v21 + v60), *(int8x8_t *)(v17 + v60));
        v60 += 8;
        v59 += 8;
      }
      while (v59);
      if (v52 != result)
        goto LABEL_34;
LABEL_17:
      v21 += a2;
      v17 += a4;
      v18 += a6;
      ++v16;
      v19 += a6;
      v20 += a4;
      v22 += a2;
      if (!--a8)
        return result;
    }
  }
  if (a7 >= 4)
  {
    v61 = 0;
    v62 = a3;
    v63 = a5 + 4;
    v64 = result;
    v106 = result + 4;
    v105 = a3 + 4;
    if (v8 <= 3)
      v65 = 3;
    else
      v65 = v8;
    v66 = v9 - (v65 & 0x7FFFFFFC) - 4;
    v67 = (v65 & 0x7FFFFFFC) + 4;
    v68 = (v65 >> 2) + 1;
    v104 = v66 & 0xFFFFFFFFFFFFFFE0;
    v103 = v66 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      v69 = v61 * a6;
      v70 = v61 * a2;
      v71 = v61 * a4;
      if (v65 >= 0x3C)
      {
        v72 = 0;
        v87 = v107 + v67 + v69;
        v89 = a5 < a3 + v67 + v71 && v62 < v87;
        v73 = 0;
        if ((v64 >= v87 || a5 >= v109 + v67 + v70) && !v89)
        {
          v91 = 0;
          v92 = 0;
          v93 = v68 & 0x3FFFFFF0;
          do
          {
            v94 = vmaxq_s8(*(int8x16_t *)(v64 + v91 + 16), *(int8x16_t *)(v62 + v91 + 16));
            v95 = vmaxq_s8(*(int8x16_t *)(v64 + v91), *(int8x16_t *)(v62 + v91));
            v96 = vmaxq_s8(*(int8x16_t *)(v64 + v91 + 48), *(int8x16_t *)(v62 + v91 + 48));
            result = a5 - 3 + ((v92 >> 32) | 3);
            *(int8x16_t *)(result + 32) = vmaxq_s8(*(int8x16_t *)(v64 + v91 + 32), *(int8x16_t *)(v62 + v91 + 32));
            *(int8x16_t *)(result + 48) = v96;
            *(int8x16_t *)result = v95;
            *(int8x16_t *)(result + 16) = v94;
            v92 += 0x4000000000;
            v91 += 64;
            v93 -= 16;
          }
          while (v93);
          v72 = v68 & 0x3FFFFFF0;
          v74 = v72 - 1;
          v73 = 4 * v72;
          if (v68 == v72)
            goto LABEL_72;
        }
      }
      else
      {
        v72 = 0;
        v73 = 0;
      }
      v74 = v72 - 1;
      v75 = v73 << 32;
      do
      {
        v76 = *(char *)(v64 + v73);
        if (v76 <= *(char *)(v62 + v73))
          LOBYTE(v76) = *(_BYTE *)(v62 + v73);
        v77 = v75 >> 32;
        v78 = (v75 >> 32) | 1;
        v79 = *(char *)(v62 + v78);
        if (*(char *)(v64 + v78) > v79)
          LOBYTE(v79) = *(_BYTE *)(v64 + v78);
        *(_BYTE *)(a5 + v73) = v76;
        *(_BYTE *)(a5 + v78) = v79;
        v80 = v77 | 2;
        LODWORD(result) = *(char *)(v64 + (v77 | 2));
        v81 = *(char *)(v62 + (v77 | 2));
        if ((int)result <= v81)
          result = v81;
        else
          result = result;
        v82 = v77 | 3;
        v83 = *(char *)(v64 + v82);
        if (v83 <= *(char *)(v62 + v82))
          LOBYTE(v83) = *(_BYTE *)(v62 + v82);
        *(_BYTE *)(a5 + v80) = result;
        *(_BYTE *)(a5 + v82) = v83;
        v73 += 4;
        ++v74;
        v75 += 0x400000000;
      }
      while (v73 <= v8);
LABEL_72:
      if ((int)v73 < a7)
      {
        v84 = v73 & 0xFFFFFFFC;
        if (v66 < 8)
        {
          v85 = v84;
          goto LABEL_75;
        }
        result = v106 + v70;
        v97 = 4 * v74 + v63 + v69;
        if (v97 - (4 * v74 + result) < 0x20)
        {
          v85 = v84;
          goto LABEL_75;
        }
        if (v97 - (4 * v74 + v105 + v71) < 0x20)
        {
          v85 = v84;
          goto LABEL_75;
        }
        if (v66 >= 0x20)
        {
          v98 = v84;
          v99 = v66 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v100 = vmaxq_s8(*(int8x16_t *)(v64 + v98 + 16), *(int8x16_t *)(v62 + v98 + 16));
            v101 = (int8x16_t *)(a5 + v98);
            *v101 = vmaxq_s8(*(int8x16_t *)(v64 + v98), *(int8x16_t *)(v62 + v98));
            v101[1] = v100;
            v98 += 32;
            v99 -= 32;
          }
          while (v99);
          if (v66 == v104)
            goto LABEL_58;
          result = v66 & 0xFFFFFFFFFFFFFFE0;
          if ((v66 & 0x18) == 0)
          {
            v85 = v84 + v104;
            do
            {
LABEL_75:
              v86 = *(char *)(v64 + v85);
              if (v86 <= *(char *)(v62 + v85))
                LOBYTE(v86) = *(_BYTE *)(v62 + v85);
              *(_BYTE *)(a5 + v85++) = v86;
            }
            while (v9 != v85);
            goto LABEL_58;
          }
        }
        else
        {
          result = 0;
        }
        v85 = v84 + v103;
        v102 = result - (v66 & 0xFFFFFFFFFFFFFFF8);
        result += v84;
        do
        {
          *(int8x8_t *)(a5 + result) = vmax_s8(*(int8x8_t *)(v64 + result), *(int8x8_t *)(v62 + result));
          result += 8;
          v102 += 8;
        }
        while (v102);
        if (v66 != v103)
          goto LABEL_75;
      }
LABEL_58:
      v64 += a2;
      v62 += a4;
      a5 += a6;
      ++v61;
      if (!--a8)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v10 = (_BYTE *)(a5 + 2);
    v11 = (_BYTE *)(a3 + 2);
    v12 = (char *)(result + 1);
    do
    {
      v13 = *(v12 - 1);
      if (v13 <= (char)*(v11 - 2))
        LOBYTE(v13) = *(v11 - 2);
      *(v10 - 2) = v13;
      if (a7 != 1)
      {
        v14 = *v12;
        if (v14 <= (char)*(v11 - 1))
          LOBYTE(v14) = *(v11 - 1);
        *(v10 - 1) = v14;
        if (a7 != 2)
        {
          v15 = v12[1];
          if (v15 <= (char)*v11)
            LOBYTE(v15) = *v11;
          *v10 = v15;
        }
      }
      v10 += a6;
      v11 += a4;
      v12 += a2;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001DD22C(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  unint64_t v9;
  unint64_t v10;
  _WORD *v11;
  _WORD *v12;
  unsigned __int16 *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned __int16 *v21;
  unint64_t v22;
  _WORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _WORD *v32;
  unsigned __int16 *v33;
  unsigned __int16 *v34;
  uint64_t v35;
  unint64_t v36;
  uint16x8_t v37;
  uint64_t v38;
  unsigned __int16 *v39;
  unsigned __int16 *v40;
  _WORD *v41;
  uint16x8_t v42;
  uint16x8_t *v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  __int16 v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint16x8_t v59;
  uint16x8_t *v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  BOOL v76;
  uint64_t v78;
  uint64_t v79;
  uint16x8_t v80;
  uint16x8_t v81;
  uint16x8_t v82;
  uint16x8_t *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unsigned int v90;
  unint64_t v91;
  unsigned int v92;
  unint64_t v93;
  unint64_t v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unint64_t v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint16x8_t v103;
  uint16x8_t *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;

  v111 = a5;
  v112 = a3;
  v113 = result;
  if (!a8)
    return result;
  v8 = a8 - 1;
  v9 = (a7 - 4);
  v10 = (a7 - 16);
  if (a7 >= 16)
  {
    v17 = 0;
    v19 = a3;
    v18 = result;
    v20 = result + 32;
    v21 = (unsigned __int16 *)(a3 + 32);
    v22 = a5;
    v23 = (_WORD *)(a5 + 32);
    v24 = a7;
    v110 = a6;
    while (1)
    {
      v25 = 0;
      v26 = 0;
      v27 = v8;
      v28 = v111 + v17 * a6;
      v29 = a2;
      v30 = v113 + v17 * a2;
      v31 = 0x1000000000;
      v32 = v23;
      v33 = v21;
      v34 = (unsigned __int16 *)v20;
      v35 = a4;
      v36 = v112 + v17 * a4;
      do
      {
        v37 = vmaxq_u16(*(uint16x8_t *)(v18 + v25), *(uint16x8_t *)(v19 + v25));
        v38 = v31;
        v39 = v34;
        v40 = v33;
        v41 = v32;
        v42 = vmaxq_u16(*(uint16x8_t *)(v18 + v25 + 16), *(uint16x8_t *)(v19 + v25 + 16));
        v43 = (uint16x8_t *)(v22 + v25);
        v26 += 16;
        v25 += 32;
        v31 += 0x1000000000;
        *v43 = v37;
        v43[1] = v42;
        v34 = v39 + 16;
        v33 += 16;
        v32 += 16;
      }
      while (v26 <= v10);
      if ((int)v9 >= (int)v26)
        break;
      v26 = v26;
      result = a7;
      if ((int)v26 < a7)
        goto LABEL_34;
LABEL_17:
      a2 = v29;
      v18 += v29;
      a4 = v35;
      v19 += v35;
      a6 = v110;
      v22 += v110;
      v8 = v27 - 1;
      ++v17;
      v20 += v29;
      v21 = (unsigned __int16 *)((char *)v21 + a4);
      v23 = (_WORD *)((char *)v23 + v110);
      if (!v27)
        return result;
    }
    v44 = 0;
    do
    {
      v46 = *v39;
      v39 += 4;
      v45 = v46;
      v48 = *v40;
      v40 += 4;
      v47 = v48;
      if (v45 <= v48)
        LOWORD(v45) = v47;
      v49 = v38 >> 31;
      v50 = (v38 >> 31) | 2;
      v51 = *(unsigned __int16 *)(v19 + v50);
      if (*(unsigned __int16 *)(v18 + v50) > v51)
        LOWORD(v51) = *(_WORD *)(v18 + v50);
      *v41 = v45;
      v41 += 4;
      *(_WORD *)(v22 + v50) = v51;
      v52 = v49 | 4;
      v53 = *(unsigned __int16 *)(v18 + (v49 | 4));
      if (v53 <= *(unsigned __int16 *)(v19 + (v49 | 4)))
        LOWORD(v53) = *(_WORD *)(v19 + (v49 | 4));
      v54 = v49 | 6;
      v55 = *(unsigned __int16 *)(v18 + v54);
      if (v55 <= *(unsigned __int16 *)(v19 + v54))
        LOWORD(v55) = *(_WORD *)(v19 + v54);
      *(_WORD *)(v22 + v52) = v53;
      *(_WORD *)(v22 + v54) = v55;
      v38 += 0x400000000;
      v44 += 4;
    }
    while (v26 + v44 <= v9);
    v26 = (v26 + v44);
    result = a7;
    if ((int)v26 >= a7)
      goto LABEL_17;
LABEL_34:
    result = v24 - v26;
    if (v24 - v26 < 0x10)
      goto LABEL_90;
    v56 = 2 * v26;
    v57 = v28 + 2 * v26;
    if (v57 - (v30 + 2 * v26) < 0x20)
      goto LABEL_90;
    if (v57 - (v36 + v56) < 0x20)
      goto LABEL_90;
    v26 += result & 0xFFFFFFFFFFFFFFF0;
    v58 = result & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v59 = vmaxq_u16(*(uint16x8_t *)(v18 + v56 + 16), *(uint16x8_t *)(v19 + v56 + 16));
      v60 = (uint16x8_t *)(v22 + v56);
      *v60 = vmaxq_u16(*(uint16x8_t *)(v18 + v56), *(uint16x8_t *)(v19 + v56));
      v60[1] = v59;
      v56 += 32;
      v58 -= 16;
    }
    while (v58);
    if (result != (result & 0xFFFFFFFFFFFFFFF0))
    {
LABEL_90:
      do
      {
        result = 2 * v26;
        v61 = *(unsigned __int16 *)(v18 + 2 * v26);
        if (v61 <= *(unsigned __int16 *)(v19 + 2 * v26))
          LOWORD(v61) = *(_WORD *)(v19 + 2 * v26);
        *(_WORD *)(v22 + 2 * v26++) = v61;
      }
      while (v24 != v26);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    v62 = 0;
    v63 = a7;
    v109 = a5 + 8;
    v108 = result + 8;
    v105 = a3 + 8;
    v64 = (v9 & 0xFFFFFFFC) + 5;
    if (v64 <= a7)
      v64 = a7;
    v65 = v64 - (v9 & 0xFFFFFFFC) - 4;
    v66 = ((2 * (a7 - 4)) & 0x1FFFFFFF8) + 8;
    v107 = (v9 >> 2) + 1;
    v106 = v65 & 0xFFFFFFFFFFFFFFF0;
    while (1)
    {
      v67 = v8;
      v68 = v62 * a6;
      v69 = v62 * a2;
      v70 = v62 * a4;
      if (v9 >= 0x1C)
      {
        v71 = 0;
        v74 = v111 + v66 + v68;
        v76 = a5 < v112 + v66 + v70 && a3 < v74;
        v73 = 4;
        if (result >= v74 || a5 >= v113 + v66 + v69)
        {
          v72 = 0;
          if (!v76)
          {
            v78 = 0;
            v79 = v107 & 0x7FFFFFF8;
            do
            {
              v80 = vmaxq_u16(*(uint16x8_t *)(result + v78 + 16), *(uint16x8_t *)(a3 + v78 + 16));
              v81 = vmaxq_u16(*(uint16x8_t *)(result + v78), *(uint16x8_t *)(a3 + v78));
              v82 = vmaxq_u16(*(uint16x8_t *)(result + v78 + 48), *(uint16x8_t *)(a3 + v78 + 48));
              v83 = (uint16x8_t *)(a5 + v78);
              v83[2] = vmaxq_u16(*(uint16x8_t *)(result + v78 + 32), *(uint16x8_t *)(a3 + v78 + 32));
              v83[3] = v82;
              *v83 = v81;
              v83[1] = v80;
              v78 += 64;
              v79 -= 8;
            }
            while (v79);
            v71 = v107 & 0x7FFFFFF8;
            v84 = v71 - 1;
            v73 = (32 * ((v71 >> 3) & 0xFFFFFFF)) | 4;
            v72 = 4 * v71;
            v85 = v72;
            if (v107 == v71)
              goto LABEL_75;
          }
        }
        else
        {
          v72 = 0;
        }
      }
      else
      {
        v71 = 0;
        v72 = 0;
        v73 = 4;
      }
      v84 = v71 - 1;
      v85 = v73 - 4;
      v86 = 2 * v72;
      v87 = result;
      v88 = a5;
      v89 = a3;
      do
      {
        v90 = *(unsigned __int16 *)(v89 + v86);
        if (*(unsigned __int16 *)(v87 + v86) > v90)
          LOWORD(v90) = *(_WORD *)(v87 + v86);
        v91 = v87 + v86;
        v92 = *(unsigned __int16 *)(v87 + v86 + 2);
        v93 = v89 + v86;
        if (v92 <= *(unsigned __int16 *)(v89 + v86 + 2))
          LOWORD(v92) = *(_WORD *)(v89 + v86 + 2);
        *(_WORD *)(v88 + v86) = v90;
        v94 = v88 + v86;
        *(_WORD *)(v88 + v86 + 2) = v92;
        v95 = *(unsigned __int16 *)(v91 + 4);
        if (v95 <= *(unsigned __int16 *)(v93 + 4))
          LOWORD(v95) = *(_WORD *)(v93 + 4);
        v96 = *(unsigned __int16 *)(v91 + 6);
        v97 = *(unsigned __int16 *)(v93 + 6);
        if (v96 <= v97)
          LOWORD(v96) = v97;
        v72 += 4;
        ++v84;
        v85 += 4;
        *(_WORD *)(v94 + 4) = v95;
        *(_WORD *)(v94 + 6) = v96;
        v89 += 8;
        v88 += 8;
        v87 += 8;
      }
      while (v72 <= v9);
LABEL_75:
      if ((int)v72 < a7)
      {
        if (v65 < 0x10
          || (v100 = 8 * v84 + v109 + v68, v100 - (8 * v84 + v108 + v69) < 0x20)
          || v100 - (8 * v84 + v105 + v70) < 0x20)
        {
          v98 = v85;
          do
          {
LABEL_78:
            v99 = *(unsigned __int16 *)(result + 2 * v98);
            if (v99 <= *(unsigned __int16 *)(a3 + 2 * v98))
              LOWORD(v99) = *(_WORD *)(a3 + 2 * v98);
            *(_WORD *)(a5 + 2 * v98++) = v99;
          }
          while (v98 < v63);
          goto LABEL_47;
        }
        v101 = v65 & 0xFFFFFFFFFFFFFFF0;
        v98 = v85 + v106;
        v102 = 2 * v85;
        do
        {
          v103 = vmaxq_u16(*(uint16x8_t *)(result + v102 + 16), *(uint16x8_t *)(a3 + v102 + 16));
          v104 = (uint16x8_t *)(a5 + v102);
          *v104 = vmaxq_u16(*(uint16x8_t *)(result + v102), *(uint16x8_t *)(a3 + v102));
          v104[1] = v103;
          v102 += 32;
          v101 -= 16;
        }
        while (v101);
        if (v65 != v106)
          goto LABEL_78;
      }
LABEL_47:
      result += a2;
      a3 += a4;
      a5 += a6;
      v8 = v67 - 1;
      ++v62;
      if (!v67)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v11 = (_WORD *)(a5 + 4);
    v12 = (_WORD *)(a3 + 4);
    v13 = (unsigned __int16 *)(result + 2);
    do
    {
      v14 = *(v13 - 1);
      if (v14 <= (unsigned __int16)*(v12 - 2))
        LOWORD(v14) = *(v12 - 2);
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        v15 = *v13;
        if (v15 <= (unsigned __int16)*(v12 - 1))
          LOWORD(v15) = *(v12 - 1);
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          v16 = v13[1];
          if (v16 <= (unsigned __int16)*v12)
            LOWORD(v16) = *v12;
          *v11 = v16;
        }
      }
      v11 = (_WORD *)((char *)v11 + a6);
      v12 = (_WORD *)((char *)v12 + a4);
      v13 = (unsigned __int16 *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001DD80C(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  unint64_t v9;
  unint64_t v10;
  _WORD *v11;
  __int16 *v12;
  __int16 *v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __int16 *v21;
  unint64_t v22;
  _WORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _WORD *v32;
  __int16 *v33;
  __int16 *v34;
  uint64_t v35;
  unint64_t v36;
  int16x8_t v37;
  uint64_t v38;
  __int16 *v39;
  __int16 *v40;
  _WORD *v41;
  int16x8_t v42;
  int16x8_t *v43;
  uint64_t v44;
  int v45;
  int v46;
  __int16 v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  int16x8_t v59;
  int16x8_t *v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  BOOL v76;
  uint64_t v78;
  uint64_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  int v90;
  unint64_t v91;
  int v92;
  unint64_t v93;
  unint64_t v94;
  int v95;
  int v96;
  int v97;
  unint64_t v98;
  int v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  int16x8_t v103;
  int16x8_t *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;

  v111 = a5;
  v112 = a3;
  v113 = result;
  if (!a8)
    return result;
  v8 = a8 - 1;
  v9 = (a7 - 4);
  v10 = (a7 - 16);
  if (a7 >= 16)
  {
    v17 = 0;
    v19 = a3;
    v18 = result;
    v20 = result + 32;
    v21 = (__int16 *)(a3 + 32);
    v22 = a5;
    v23 = (_WORD *)(a5 + 32);
    v24 = a7;
    v110 = a6;
    while (1)
    {
      v25 = 0;
      v26 = 0;
      v27 = v8;
      v28 = v111 + v17 * a6;
      v29 = a2;
      v30 = v113 + v17 * a2;
      v31 = 0x1000000000;
      v32 = v23;
      v33 = v21;
      v34 = (__int16 *)v20;
      v35 = a4;
      v36 = v112 + v17 * a4;
      do
      {
        v37 = vmaxq_s16(*(int16x8_t *)(v18 + v25), *(int16x8_t *)(v19 + v25));
        v38 = v31;
        v39 = v34;
        v40 = v33;
        v41 = v32;
        v42 = vmaxq_s16(*(int16x8_t *)(v18 + v25 + 16), *(int16x8_t *)(v19 + v25 + 16));
        v43 = (int16x8_t *)(v22 + v25);
        v26 += 16;
        v25 += 32;
        v31 += 0x1000000000;
        *v43 = v37;
        v43[1] = v42;
        v34 = v39 + 16;
        v33 += 16;
        v32 += 16;
      }
      while (v26 <= v10);
      if ((int)v9 >= (int)v26)
        break;
      v26 = v26;
      result = a7;
      if ((int)v26 < a7)
        goto LABEL_34;
LABEL_17:
      a2 = v29;
      v18 += v29;
      a4 = v35;
      v19 += v35;
      a6 = v110;
      v22 += v110;
      v8 = v27 - 1;
      ++v17;
      v20 += v29;
      v21 = (__int16 *)((char *)v21 + a4);
      v23 = (_WORD *)((char *)v23 + v110);
      if (!v27)
        return result;
    }
    v44 = 0;
    do
    {
      v46 = *v39;
      v39 += 4;
      v45 = v46;
      v48 = *v40;
      v40 += 4;
      v47 = v48;
      if (v45 <= v48)
        LOWORD(v45) = v47;
      v49 = v38 >> 31;
      v50 = (v38 >> 31) | 2;
      v51 = *(__int16 *)(v19 + v50);
      if (*(__int16 *)(v18 + v50) > v51)
        LOWORD(v51) = *(_WORD *)(v18 + v50);
      *v41 = v45;
      v41 += 4;
      *(_WORD *)(v22 + v50) = v51;
      v52 = v49 | 4;
      v53 = *(__int16 *)(v18 + (v49 | 4));
      if (v53 <= *(__int16 *)(v19 + (v49 | 4)))
        LOWORD(v53) = *(_WORD *)(v19 + (v49 | 4));
      v54 = v49 | 6;
      v55 = *(__int16 *)(v18 + v54);
      if (v55 <= *(__int16 *)(v19 + v54))
        LOWORD(v55) = *(_WORD *)(v19 + v54);
      *(_WORD *)(v22 + v52) = v53;
      *(_WORD *)(v22 + v54) = v55;
      v38 += 0x400000000;
      v44 += 4;
    }
    while (v26 + v44 <= v9);
    v26 = (v26 + v44);
    result = a7;
    if ((int)v26 >= a7)
      goto LABEL_17;
LABEL_34:
    result = v24 - v26;
    if (v24 - v26 < 0x10)
      goto LABEL_90;
    v56 = 2 * v26;
    v57 = v28 + 2 * v26;
    if (v57 - (v30 + 2 * v26) < 0x20)
      goto LABEL_90;
    if (v57 - (v36 + v56) < 0x20)
      goto LABEL_90;
    v26 += result & 0xFFFFFFFFFFFFFFF0;
    v58 = result & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v59 = vmaxq_s16(*(int16x8_t *)(v18 + v56 + 16), *(int16x8_t *)(v19 + v56 + 16));
      v60 = (int16x8_t *)(v22 + v56);
      *v60 = vmaxq_s16(*(int16x8_t *)(v18 + v56), *(int16x8_t *)(v19 + v56));
      v60[1] = v59;
      v56 += 32;
      v58 -= 16;
    }
    while (v58);
    if (result != (result & 0xFFFFFFFFFFFFFFF0))
    {
LABEL_90:
      do
      {
        result = 2 * v26;
        v61 = *(__int16 *)(v18 + 2 * v26);
        if (v61 <= *(__int16 *)(v19 + 2 * v26))
          LOWORD(v61) = *(_WORD *)(v19 + 2 * v26);
        *(_WORD *)(v22 + 2 * v26++) = v61;
      }
      while (v24 != v26);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    v62 = 0;
    v63 = a7;
    v109 = a5 + 8;
    v108 = result + 8;
    v105 = a3 + 8;
    v64 = (v9 & 0xFFFFFFFC) + 5;
    if (v64 <= a7)
      v64 = a7;
    v65 = v64 - (v9 & 0xFFFFFFFC) - 4;
    v66 = ((2 * (a7 - 4)) & 0x1FFFFFFF8) + 8;
    v107 = (v9 >> 2) + 1;
    v106 = v65 & 0xFFFFFFFFFFFFFFF0;
    while (1)
    {
      v67 = v8;
      v68 = v62 * a6;
      v69 = v62 * a2;
      v70 = v62 * a4;
      if (v9 >= 0x1C)
      {
        v71 = 0;
        v74 = v111 + v66 + v68;
        v76 = a5 < v112 + v66 + v70 && a3 < v74;
        v73 = 4;
        if (result >= v74 || a5 >= v113 + v66 + v69)
        {
          v72 = 0;
          if (!v76)
          {
            v78 = 0;
            v79 = v107 & 0x7FFFFFF8;
            do
            {
              v80 = vmaxq_s16(*(int16x8_t *)(result + v78 + 16), *(int16x8_t *)(a3 + v78 + 16));
              v81 = vmaxq_s16(*(int16x8_t *)(result + v78), *(int16x8_t *)(a3 + v78));
              v82 = vmaxq_s16(*(int16x8_t *)(result + v78 + 48), *(int16x8_t *)(a3 + v78 + 48));
              v83 = (int16x8_t *)(a5 + v78);
              v83[2] = vmaxq_s16(*(int16x8_t *)(result + v78 + 32), *(int16x8_t *)(a3 + v78 + 32));
              v83[3] = v82;
              *v83 = v81;
              v83[1] = v80;
              v78 += 64;
              v79 -= 8;
            }
            while (v79);
            v71 = v107 & 0x7FFFFFF8;
            v84 = v71 - 1;
            v73 = (32 * ((v71 >> 3) & 0xFFFFFFF)) | 4;
            v72 = 4 * v71;
            v85 = v72;
            if (v107 == v71)
              goto LABEL_75;
          }
        }
        else
        {
          v72 = 0;
        }
      }
      else
      {
        v71 = 0;
        v72 = 0;
        v73 = 4;
      }
      v84 = v71 - 1;
      v85 = v73 - 4;
      v86 = 2 * v72;
      v87 = result;
      v88 = a5;
      v89 = a3;
      do
      {
        v90 = *(__int16 *)(v89 + v86);
        if (*(__int16 *)(v87 + v86) > v90)
          LOWORD(v90) = *(_WORD *)(v87 + v86);
        v91 = v87 + v86;
        v92 = *(__int16 *)(v87 + v86 + 2);
        v93 = v89 + v86;
        if (v92 <= *(__int16 *)(v89 + v86 + 2))
          LOWORD(v92) = *(_WORD *)(v89 + v86 + 2);
        *(_WORD *)(v88 + v86) = v90;
        v94 = v88 + v86;
        *(_WORD *)(v88 + v86 + 2) = v92;
        v95 = *(__int16 *)(v91 + 4);
        if (v95 <= *(__int16 *)(v93 + 4))
          LOWORD(v95) = *(_WORD *)(v93 + 4);
        v96 = *(__int16 *)(v91 + 6);
        v97 = *(__int16 *)(v93 + 6);
        if (v96 <= v97)
          LOWORD(v96) = v97;
        v72 += 4;
        ++v84;
        v85 += 4;
        *(_WORD *)(v94 + 4) = v95;
        *(_WORD *)(v94 + 6) = v96;
        v89 += 8;
        v88 += 8;
        v87 += 8;
      }
      while (v72 <= v9);
LABEL_75:
      if ((int)v72 < a7)
      {
        if (v65 < 0x10
          || (v100 = 8 * v84 + v109 + v68, v100 - (8 * v84 + v108 + v69) < 0x20)
          || v100 - (8 * v84 + v105 + v70) < 0x20)
        {
          v98 = v85;
          do
          {
LABEL_78:
            v99 = *(__int16 *)(result + 2 * v98);
            if (v99 <= *(__int16 *)(a3 + 2 * v98))
              LOWORD(v99) = *(_WORD *)(a3 + 2 * v98);
            *(_WORD *)(a5 + 2 * v98++) = v99;
          }
          while (v98 < v63);
          goto LABEL_47;
        }
        v101 = v65 & 0xFFFFFFFFFFFFFFF0;
        v98 = v85 + v106;
        v102 = 2 * v85;
        do
        {
          v103 = vmaxq_s16(*(int16x8_t *)(result + v102 + 16), *(int16x8_t *)(a3 + v102 + 16));
          v104 = (int16x8_t *)(a5 + v102);
          *v104 = vmaxq_s16(*(int16x8_t *)(result + v102), *(int16x8_t *)(a3 + v102));
          v104[1] = v103;
          v102 += 32;
          v101 -= 16;
        }
        while (v101);
        if (v65 != v106)
          goto LABEL_78;
      }
LABEL_47:
      result += a2;
      a3 += a4;
      a5 += a6;
      v8 = v67 - 1;
      ++v62;
      if (!v67)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v11 = (_WORD *)(a5 + 4);
    v12 = (__int16 *)(a3 + 4);
    v13 = (__int16 *)(result + 2);
    do
    {
      v14 = *(v13 - 1);
      if (v14 <= *(v12 - 2))
        LOWORD(v14) = *(v12 - 2);
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        v15 = *v13;
        if (v15 <= *(v12 - 1))
          LOWORD(v15) = *(v12 - 1);
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          v16 = v13[1];
          if (v16 <= *v12)
            LOWORD(v16) = *v12;
          *v11 = v16;
        }
      }
      v11 = (_WORD *)((char *)v11 + a6);
      v12 = (__int16 *)((char *)v12 + a4);
      v13 = (__int16 *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001DDDEC(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  unint64_t v9;
  _DWORD *v10;
  int *v11;
  int *v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _DWORD *v19;
  int *v20;
  int *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  int *v26;
  int *v27;
  _DWORD *v28;
  int32x4_t v29;
  _DWORD *v30;
  int *v31;
  int *v32;
  int32x4_t v33;
  int32x4_t *v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int32x4_t v47;
  int32x4_t *v48;
  int v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  BOOL v64;
  uint64_t v66;
  uint64_t v67;
  int32x4_t v68;
  int32x4_t v69;
  int32x4_t v70;
  int32x4_t *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  int v78;
  unint64_t v79;
  unint64_t v80;
  int v81;
  unint64_t v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unint64_t v87;
  int v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  int32x4_t v92;
  int32x4_t *v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;

  v100 = a5;
  v101 = a3;
  if (!a8)
    return result;
  v8 = a8 - 1;
  v9 = (a7 - 4);
  if (a7 >= 8)
  {
    v16 = 0;
    v18 = a5;
    v17 = a3;
    v19 = (_DWORD *)(a5 + 32);
    v20 = (int *)(a3 + 32);
    v21 = (int *)(result + 32);
    v22 = result;
    while (1)
    {
      v23 = 0;
      v24 = 0;
      v25 = v8;
      v26 = v21;
      v27 = v20;
      v28 = v19;
      do
      {
        v29 = vmaxq_s32(*(int32x4_t *)(v22 + v23), *(int32x4_t *)(v17 + v23));
        v30 = v28;
        v31 = v27;
        v32 = v26;
        v33 = vmaxq_s32(*(int32x4_t *)(v22 + v23 + 16), *(int32x4_t *)(v17 + v23 + 16));
        v34 = (int32x4_t *)(v18 + v23);
        v24 += 8;
        v23 += 32;
        *v34 = v29;
        v34[1] = v33;
        v28 = v30 + 8;
        v27 += 8;
        v26 += 8;
      }
      while (v24 <= (a7 - 8));
      if ((int)v9 >= (int)v24)
        break;
      v24 = v24;
      if ((int)v24 < a7)
        goto LABEL_30;
LABEL_17:
      v22 += a2;
      v17 += a4;
      v18 += a6;
      v8 = v25 - 1;
      ++v16;
      v19 = (_DWORD *)((char *)v19 + a6);
      v20 = (int *)((char *)v20 + a4);
      v21 = (int *)((char *)v21 + a2);
      if (!v25)
        return result;
    }
    v35 = 0;
    do
    {
      v37 = *v32;
      v32 += 4;
      v36 = v37;
      v39 = *v31;
      v31 += 4;
      v38 = v39;
      if (v36 <= v39)
        v36 = v38;
      v40 = (unint64_t)(((_DWORD)v24 + (_DWORD)v35) & 0xFFFFFFFC) >> 2;
      v41 = (16 * (v40 & 0x3FFFFFFF)) | 4;
      v42 = *(_DWORD *)(v22 + v41);
      if (v42 <= *(_DWORD *)(v17 + v41))
        v42 = *(_DWORD *)(v17 + v41);
      *v30 = v36;
      v30 += 4;
      *(_DWORD *)(v18 + v41) = v42;
      *(int32x2_t *)(v18 + ((16 * (v40 & 0x3FFFFFFF)) | 8)) = vmax_s32(*(int32x2_t *)(v22 + ((16 * (v40 & 0x3FFFFFFF)) | 8)), *(int32x2_t *)(v17 + ((16 * (v40 & 0x3FFFFFFF)) | 8)));
      v35 += 4;
    }
    while (v24 + v35 <= v9);
    v24 = (v24 + v35);
    if ((int)v24 >= a7)
      goto LABEL_17;
LABEL_30:
    v43 = a7 - v24;
    if (v43 < 0xC)
      goto LABEL_86;
    v44 = 4 * v24;
    v45 = v100 + v16 * a6 + 4 * v24;
    if (v45 - (result + v16 * a2 + 4 * v24) < 0x20)
      goto LABEL_86;
    if (v45 - (v101 + v16 * a4 + v44) < 0x20)
      goto LABEL_86;
    v24 += v43 & 0xFFFFFFFFFFFFFFF8;
    v46 = v43 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      v47 = vmaxq_s32(*(int32x4_t *)(v22 + v44 + 16), *(int32x4_t *)(v17 + v44 + 16));
      v48 = (int32x4_t *)(v18 + v44);
      *v48 = vmaxq_s32(*(int32x4_t *)(v22 + v44), *(int32x4_t *)(v17 + v44));
      v48[1] = v47;
      v44 += 32;
      v46 -= 8;
    }
    while (v46);
    if (v43 != (v43 & 0xFFFFFFFFFFFFFFF8))
    {
LABEL_86:
      do
      {
        v49 = *(_DWORD *)(v22 + 4 * v24);
        if (v49 <= *(_DWORD *)(v17 + 4 * v24))
          v49 = *(_DWORD *)(v17 + 4 * v24);
        *(_DWORD *)(v18 + 4 * v24++) = v49;
      }
      while (a7 != v24);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    v50 = 0;
    v98 = a5 + 16;
    v97 = result + 16;
    v94 = a3 + 16;
    v51 = (v9 & 0xFFFFFFFC) + 5;
    if (v51 <= a7)
      v51 = a7;
    v52 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    v96 = (v9 >> 2) + 1;
    v99 = v51 - (v9 & 0xFFFFFFFC) - 4;
    v95 = v99 & 0xFFFFFFFFFFFFFFF8;
    v53 = result;
    v54 = result;
    while (1)
    {
      v55 = v8;
      v56 = v50 * a6;
      v57 = v50 * a2;
      v58 = v50 * a4;
      if (v9 >= 0xC)
      {
        v59 = 0;
        v62 = v100 + v52 + v56;
        v64 = a5 < v101 + v52 + v58 && a3 < v62;
        if (v53 >= v62 || a5 >= result + v52 + v57)
        {
          v61 = 4;
          v60 = 0;
          if (!v64)
          {
            v66 = 0;
            v67 = v96 & 0x7FFFFFFC;
            do
            {
              v68 = vmaxq_s32(*(int32x4_t *)(v53 + v66 + 16), *(int32x4_t *)(a3 + v66 + 16));
              v69 = vmaxq_s32(*(int32x4_t *)(v53 + v66), *(int32x4_t *)(a3 + v66));
              v70 = vmaxq_s32(*(int32x4_t *)(v53 + v66 + 48), *(int32x4_t *)(a3 + v66 + 48));
              v71 = (int32x4_t *)(a5 + v66);
              v71[2] = vmaxq_s32(*(int32x4_t *)(v53 + v66 + 32), *(int32x4_t *)(a3 + v66 + 32));
              v71[3] = v70;
              *v71 = v69;
              v71[1] = v68;
              v66 += 64;
              v67 -= 4;
            }
            while (v67);
            v59 = v96 & 0x7FFFFFFC;
            v61 = (16 * ((v59 >> 2) & 0x1FFFFFFF)) | 4;
            v72 = 4 * v59;
            v60 = v72;
            v73 = v59 - 1;
            if (v96 == v59)
              goto LABEL_71;
          }
        }
        else
        {
          v61 = 4;
          v60 = 0;
        }
      }
      else
      {
        v59 = 0;
        v60 = 0;
        v61 = 4;
      }
      v73 = v59 - 1;
      v72 = v61 - 4;
      v74 = 4 * v60;
      v75 = a3;
      v76 = v53;
      v77 = a5;
      do
      {
        v78 = *(_DWORD *)(v76 + v74);
        if (v78 <= *(_DWORD *)(v75 + v74))
          v78 = *(_DWORD *)(v75 + v74);
        v79 = v76 + v74;
        v80 = v75 + v74;
        v81 = *(_DWORD *)(v75 + v74 + 4);
        if (*(_DWORD *)(v76 + v74 + 4) > v81)
          v81 = *(_DWORD *)(v76 + v74 + 4);
        *(_DWORD *)(v77 + v74) = v78;
        v82 = v77 + v74;
        *(_DWORD *)(v77 + v74 + 4) = v81;
        v83 = *(_DWORD *)(v79 + 8);
        v84 = *(_DWORD *)(v79 + 12);
        v85 = *(_DWORD *)(v80 + 8);
        v86 = *(_DWORD *)(v80 + 12);
        if (v83 <= v85)
          v83 = v85;
        if (v84 <= v86)
          v84 = v86;
        v60 += 4;
        ++v73;
        v72 += 4;
        *(_DWORD *)(v82 + 8) = v83;
        *(_DWORD *)(v82 + 12) = v84;
        v77 += 16;
        v76 += 16;
        v75 += 16;
      }
      while (v60 <= v9);
LABEL_71:
      if ((int)v60 < a7)
      {
        if (v99 < 0xC
          || (v89 = 16 * v73 + v98 + v56, v89 - (16 * v73 + v97 + v57) < 0x20)
          || v89 - (16 * v73 + v94 + v58) < 0x20)
        {
          v87 = v72;
          do
          {
LABEL_74:
            v88 = *(_DWORD *)(v53 + 4 * v87);
            if (v88 <= *(_DWORD *)(a3 + 4 * v87))
              v88 = *(_DWORD *)(a3 + 4 * v87);
            *(_DWORD *)(a5 + 4 * v87++) = v88;
          }
          while (v87 < a7);
          goto LABEL_43;
        }
        v90 = v99 & 0xFFFFFFFFFFFFFFF8;
        v87 = v72 + v95;
        v91 = 4 * v72;
        do
        {
          v92 = vmaxq_s32(*(int32x4_t *)(v53 + v91 + 16), *(int32x4_t *)(a3 + v91 + 16));
          v93 = (int32x4_t *)(a5 + v91);
          *v93 = vmaxq_s32(*(int32x4_t *)(v53 + v91), *(int32x4_t *)(a3 + v91));
          v93[1] = v92;
          v91 += 32;
          v90 -= 8;
        }
        while (v90);
        if (v99 != v95)
          goto LABEL_74;
      }
LABEL_43:
      v53 += a2;
      a3 += a4;
      a5 += a6;
      v8 = v55 - 1;
      ++v50;
      result = v54;
      if (!v55)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v10 = (_DWORD *)(a5 + 8);
    v11 = (int *)(a3 + 8);
    v12 = (int *)(result + 4);
    do
    {
      v13 = *(v12 - 1);
      if (v13 <= *(v11 - 2))
        v13 = *(v11 - 2);
      *(v10 - 2) = v13;
      if (a7 != 1)
      {
        v14 = *v12;
        if (*v12 <= *(v11 - 1))
          v14 = *(v11 - 1);
        *(v10 - 1) = v14;
        if (a7 != 2)
        {
          v15 = v12[1];
          if (v15 <= *v11)
            v15 = *v11;
          *v10 = v15;
        }
      }
      v10 = (_DWORD *)((char *)v10 + a6);
      v11 = (int *)((char *)v11 + a4);
      v12 = (int *)((char *)v12 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001DE384(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v8;
  int v9;
  unint64_t v10;
  float *v11;
  float *v12;
  float *v13;
  float v14;
  float v15;
  float v16;
  uint64_t v17;
  float *v18;
  float *v19;
  float *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  float *v27;
  float *v28;
  float *v29;
  float32x4_t v30;
  float *v31;
  float *v32;
  float *v33;
  float32x4_t v34;
  float32x4_t *v35;
  uint64_t v36;
  float v37;
  float v38;
  float v39;
  float v40;
  unint64_t v41;
  uint64_t v42;
  float v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int8x16_t v49;
  int8x16_t *v50;
  float v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  BOOL v68;
  uint64_t v70;
  uint64_t v71;
  const float *v72;
  const float *v73;
  float *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  float v81;
  unint64_t v82;
  float v83;
  unint64_t v84;
  unint64_t v85;
  float v86;
  float v87;
  unint64_t v88;
  float v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  int8x16_t v93;
  int8x16_t *v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  float32x4x4_t v102;
  float32x4x4_t v103;
  float32x4x4_t v104;

  if (!a8)
    return result;
  v8 = a5;
  v9 = a8 - 1;
  v10 = (a7 - 4);
  if (a7 >= 8)
  {
    v17 = 0;
    v18 = (float *)(a5 + 32);
    v19 = (float *)(a3 + 32);
    v20 = (float *)(result + 32);
    v21 = result;
    v22 = a3;
    v23 = a5;
    while (1)
    {
      v24 = 0;
      v25 = 0;
      v26 = v9;
      v27 = v20;
      v28 = v19;
      v29 = v18;
      do
      {
        v30 = vmaxq_f32(*(float32x4_t *)(v21 + v24), *(float32x4_t *)(v22 + v24));
        v31 = v29;
        v32 = v28;
        v33 = v27;
        v34 = vmaxq_f32(*(float32x4_t *)(v21 + v24 + 16), *(float32x4_t *)(v22 + v24 + 16));
        v35 = (float32x4_t *)(v23 + v24);
        v25 += 8;
        v24 += 32;
        *v35 = v30;
        v35[1] = v34;
        v29 += 8;
        v28 = v32 + 8;
        v27 += 8;
      }
      while (v25 <= (a7 - 8));
      if ((int)v10 >= (int)v25)
        break;
      v25 = v25;
      if ((int)v25 < a7)
        goto LABEL_30;
LABEL_17:
      v21 += a2;
      v22 += a4;
      v23 += a6;
      v9 = v26 - 1;
      ++v17;
      v18 = (float *)((char *)v18 + a6);
      v19 = (float *)((char *)v19 + a4);
      v20 = (float *)((char *)v20 + a2);
      if (!v26)
        return result;
    }
    v36 = 0;
    do
    {
      v37 = *v33;
      v33 += 4;
      v38 = v37;
      v39 = *v32;
      v32 += 4;
      v40 = v39;
      if (v38 < v39)
        v38 = v40;
      v41 = (unint64_t)(((_DWORD)v25 + (_DWORD)v36) & 0xFFFFFFFC) >> 2;
      v42 = (16 * (v41 & 0x3FFFFFFF)) | 4;
      v43 = *(float *)(v21 + v42);
      if (v43 < *(float *)(v22 + v42))
        v43 = *(float *)(v22 + v42);
      *v31 = v38;
      v31 += 4;
      *(float *)(v23 + v42) = v43;
      v44 = (16 * (v41 & 0x3FFFFFFF)) | 8;
      *(int8x8_t *)(v23 + v44) = vbsl_s8((int8x8_t)vcgt_f32(*(float32x2_t *)(v22 + v44), *(float32x2_t *)(v21 + v44)), *(int8x8_t *)(v22 + v44), *(int8x8_t *)(v21 + v44));
      v36 += 4;
    }
    while (v25 + v36 <= v10);
    v25 = (v25 + v36);
    if ((int)v25 >= a7)
      goto LABEL_17;
LABEL_30:
    v45 = a7 - v25;
    if (v45 < 0xC)
      goto LABEL_86;
    v46 = 4 * v25;
    v47 = v8 + v17 * a6 + 4 * v25;
    if (v47 - (result + v17 * a2 + 4 * v25) < 0x20)
      goto LABEL_86;
    if (v47 - (a3 + v17 * a4 + v46) < 0x20)
      goto LABEL_86;
    v25 += v45 & 0xFFFFFFFFFFFFFFF8;
    v48 = v45 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      v49 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v22 + v46 + 16), *(float32x4_t *)(v21 + v46 + 16)), *(int8x16_t *)(v22 + v46 + 16), *(int8x16_t *)(v21 + v46 + 16));
      v50 = (int8x16_t *)(v23 + v46);
      *v50 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v22 + v46), *(float32x4_t *)(v21 + v46)), *(int8x16_t *)(v22 + v46), *(int8x16_t *)(v21 + v46));
      v50[1] = v49;
      v46 += 32;
      v48 -= 8;
    }
    while (v48);
    if (v45 != (v45 & 0xFFFFFFFFFFFFFFF8))
    {
LABEL_86:
      do
      {
        v51 = *(float *)(v21 + 4 * v25);
        if (v51 < *(float *)(v22 + 4 * v25))
          v51 = *(float *)(v22 + 4 * v25);
        *(float *)(v23 + 4 * v25++) = v51;
      }
      while (a7 != v25);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    v52 = 0;
    v99 = a5 + 16;
    v98 = result + 16;
    v95 = a3 + 16;
    v53 = (v10 & 0xFFFFFFFC) + 5;
    if (v53 <= a7)
      v53 = a7;
    v54 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    v97 = (v10 >> 2) + 1;
    v100 = v53 - (v10 & 0xFFFFFFFC) - 4;
    v96 = v100 & 0xFFFFFFFFFFFFFFF8;
    v55 = result;
    v56 = a3;
    v101 = result;
    v57 = a3;
    v58 = a5;
    while (1)
    {
      v59 = v9;
      v60 = v52 * a6;
      v61 = v52 * a2;
      v62 = v52 * a4;
      if (v10 >= 0xC)
      {
        v63 = 0;
        v66 = v8 + v54 + v60;
        v68 = a5 < a3 + v54 + v62 && v56 < v66;
        if (v55 >= v66 || a5 >= result + v54 + v61)
        {
          v65 = 4;
          v64 = 0;
          if (!v68)
          {
            v70 = 0;
            v71 = v97 & 0x7FFFFFFC;
            do
            {
              v72 = (const float *)(v55 + v70);
              v102 = vld4q_f32(v72);
              v73 = (const float *)(v56 + v70);
              v103 = vld4q_f32(v73);
              v104.val[0] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v103.val[0], v102.val[0]), (int8x16_t)v103.val[0], (int8x16_t)v102.val[0]);
              v104.val[1] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v103.val[1], v102.val[1]), (int8x16_t)v103.val[1], (int8x16_t)v102.val[1]);
              v104.val[2] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v103.val[2], v102.val[2]), (int8x16_t)v103.val[2], (int8x16_t)v102.val[2]);
              v104.val[3] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v103.val[3], v102.val[3]), (int8x16_t)v103.val[3], (int8x16_t)v102.val[3]);
              v74 = (float *)(a5 + v70);
              vst4q_f32(v74, v104);
              v70 += 64;
              v71 -= 4;
            }
            while (v71);
            v63 = v97 & 0x7FFFFFFC;
            v65 = (16 * ((v63 >> 2) & 0x1FFFFFFF)) | 4;
            v75 = 4 * v63;
            v64 = v75;
            v76 = v63 - 1;
            if (v97 == v63)
              goto LABEL_71;
          }
        }
        else
        {
          v65 = 4;
          v64 = 0;
        }
      }
      else
      {
        v63 = 0;
        v64 = 0;
        v65 = 4;
      }
      v76 = v63 - 1;
      v75 = v65 - 4;
      v77 = 4 * v64;
      v78 = v56;
      v79 = v55;
      v80 = a5;
      do
      {
        v81 = *(float *)(v79 + v77);
        if (v81 < *(float *)(v78 + v77))
          v81 = *(float *)(v78 + v77);
        v82 = v79 + v77;
        v83 = *(float *)(v79 + v77 + 4);
        v84 = v78 + v77;
        if (v83 < *(float *)(v78 + v77 + 4))
          v83 = *(float *)(v78 + v77 + 4);
        *(float *)(v80 + v77) = v81;
        v85 = v80 + v77;
        *(float *)(v80 + v77 + 4) = v83;
        v86 = *(float *)(v82 + 8);
        v87 = *(float *)(v82 + 12);
        if (v86 < *(float *)(v84 + 8))
          v86 = *(float *)(v84 + 8);
        if (v87 < *(float *)(v84 + 12))
          v87 = *(float *)(v84 + 12);
        v64 += 4;
        ++v76;
        v75 += 4;
        *(float *)(v85 + 8) = v86;
        *(float *)(v85 + 12) = v87;
        v80 += 16;
        v79 += 16;
        v78 += 16;
      }
      while (v64 <= v10);
LABEL_71:
      if ((int)v64 < a7)
      {
        if (v100 < 0xC
          || (v90 = 16 * v76 + v99 + v60, v90 - (16 * v76 + v98 + v61) < 0x20)
          || v90 - (16 * v76 + v95 + v62) < 0x20)
        {
          v88 = v75;
          do
          {
LABEL_74:
            v89 = *(float *)(v55 + 4 * v88);
            if (v89 < *(float *)(v56 + 4 * v88))
              v89 = *(float *)(v56 + 4 * v88);
            *(float *)(a5 + 4 * v88++) = v89;
          }
          while (v88 < a7);
          goto LABEL_43;
        }
        v91 = v100 & 0xFFFFFFFFFFFFFFF8;
        v88 = v75 + v96;
        v92 = 4 * v75;
        do
        {
          v93 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v56 + v92 + 16), *(float32x4_t *)(v55 + v92 + 16)), *(int8x16_t *)(v56 + v92 + 16), *(int8x16_t *)(v55 + v92 + 16));
          v94 = (int8x16_t *)(a5 + v92);
          *v94 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v56 + v92), *(float32x4_t *)(v55 + v92)), *(int8x16_t *)(v56 + v92), *(int8x16_t *)(v55 + v92));
          v94[1] = v93;
          v92 += 32;
          v91 -= 8;
        }
        while (v91);
        if (v100 != v96)
          goto LABEL_74;
      }
LABEL_43:
      v55 += a2;
      v56 += a4;
      a5 += a6;
      v9 = v59 - 1;
      ++v52;
      result = v101;
      a3 = v57;
      v8 = v58;
      if (!v59)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v11 = (float *)(a5 + 8);
    v12 = (float *)(a3 + 8);
    v13 = (float *)(result + 4);
    do
    {
      v14 = *(v13 - 1);
      if (v14 < *(v12 - 2))
        v14 = *(v12 - 2);
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        v15 = *v13;
        if (*v13 < *(v12 - 1))
          v15 = *(v12 - 1);
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          v16 = v13[1];
          if (v16 < *v12)
            v16 = *v12;
          *v11 = v16;
        }
      }
      v11 = (float *)((char *)v11 + a6);
      v12 = (float *)((char *)v12 + a4);
      v13 = (float *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001DE944(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  double *v11;
  double *v12;
  double *v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  BOOL v31;
  uint64_t v33;
  uint64_t v34;
  const double *v35;
  const double *v36;
  double *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  double v42;
  unint64_t v43;
  double v44;
  unint64_t v45;
  unint64_t v46;
  double v47;
  double v48;
  double v49;
  double v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int8x16_t v54;
  int8x16_t *v55;
  double v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  float64x2x4_t v63;
  float64x2x4_t v64;
  float64x2x4_t v65;

  if (!a8)
    return result;
  v8 = a3;
  v9 = result;
  v10 = (a7 - 4);
  if (a7 >= 4)
  {
    v17 = 0;
    v18 = a8 - 1;
    v19 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    v61 = v19 + a5 + 32;
    v60 = v19 + result + 32;
    v58 = v19 + a3 + 32;
    v20 = (v10 & 0xFFFFFFFC) + 5;
    if (v20 <= a7)
      v20 = a7;
    v21 = 32 * (v10 >> 2) + 32;
    v59 = (v10 >> 2) + 1;
    v62 = v20 - (v10 & 0xFFFFFFFC) - 4;
    v57 = v20 & 3;
    v22 = a5 + 16;
    v23 = a5;
    while (1)
    {
      v24 = v18;
      v25 = v17 * a6;
      v26 = v17 * a2;
      v27 = v17 * a4;
      if (v10 < 4)
        break;
      v28 = 0;
      v29 = a5 + v21 + v25;
      v31 = v23 < v8 + v21 + v27 && a3 < v29;
      if (result < v29 && v23 < v9 + v21 + v26)
        goto LABEL_36;
      if (v31)
        goto LABEL_36;
      v33 = 0;
      v34 = v59 & 0x7FFFFFFE;
      do
      {
        v35 = (const double *)(result + v33);
        v63 = vld4q_f64(v35);
        v36 = (const double *)(a3 + v33);
        v64 = vld4q_f64(v36);
        v65.val[0] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v64.val[0], v63.val[0]), (int8x16_t)v64.val[0], (int8x16_t)v63.val[0]);
        v65.val[1] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v64.val[1], v63.val[1]), (int8x16_t)v64.val[1], (int8x16_t)v63.val[1]);
        v65.val[2] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v64.val[2], v63.val[2]), (int8x16_t)v64.val[2], (int8x16_t)v63.val[2]);
        v65.val[3] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v64.val[3], v63.val[3]), (int8x16_t)v64.val[3], (int8x16_t)v63.val[3]);
        v37 = (double *)(v23 + v33);
        vst4q_f64(v37, v65);
        v33 += 64;
        v34 -= 2;
      }
      while (v34);
      v28 = 4 * (v59 & 0x7FFFFFFE);
      if (v59 != (v59 & 0x7FFFFFFE))
        goto LABEL_36;
LABEL_47:
      if ((int)v28 < a7)
      {
        v51 = (v10 & 0xFFFFFFFC) + 4;
        if (v62 < 6)
          goto LABEL_60;
        v51 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v61 + v25 - (v60 + v26)) < 0x20)
          goto LABEL_60;
        v51 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v61 + v25 - (v58 + v27)) < 0x20)
          goto LABEL_60;
        v52 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        v53 = v62 - v57;
        do
        {
          v54 = vbslq_s8((int8x16_t)vcgtq_f64(*(float64x2_t *)(a3 + v52 + 48), *(float64x2_t *)(result + v52 + 48)), *(int8x16_t *)(a3 + v52 + 48), *(int8x16_t *)(result + v52 + 48));
          v55 = (int8x16_t *)(v23 + v52);
          v55[2] = vbslq_s8((int8x16_t)vcgtq_f64(*(float64x2_t *)(a3 + v52 + 32), *(float64x2_t *)(result + v52 + 32)), *(int8x16_t *)(a3 + v52 + 32), *(int8x16_t *)(result + v52 + 32));
          v55[3] = v54;
          v52 += 32;
          v53 -= 4;
        }
        while (v53);
        v51 = (v10 & 0xFFFFFFFC) + 4 + v62 - v57;
        if (v57)
        {
LABEL_60:
          do
          {
            v56 = *(double *)(result + 8 * v51);
            if (v56 < *(double *)(a3 + 8 * v51))
              v56 = *(double *)(a3 + 8 * v51);
            *(double *)(v23 + 8 * v51++) = v56;
          }
          while (v51 < a7);
        }
      }
      result += a2;
      a3 += a4;
      v23 += a6;
      v18 = v24 - 1;
      ++v17;
      v22 += a6;
      if (!v24)
        return result;
    }
    v28 = 0;
LABEL_36:
    v38 = 8 * v28;
    v39 = v22;
    v40 = a3;
    v41 = result;
    do
    {
      v42 = *(double *)(v41 + v38);
      if (v42 < *(double *)(v40 + v38))
        v42 = *(double *)(v40 + v38);
      v43 = v41 + v38;
      v44 = *(double *)(v41 + v38 + 8);
      v45 = v40 + v38;
      if (v44 < *(double *)(v40 + v38 + 8))
        v44 = *(double *)(v40 + v38 + 8);
      v46 = v39 + v38;
      *(double *)(v46 - 16) = v42;
      *(double *)(v46 - 8) = v44;
      v47 = *(double *)(v43 + 16);
      v48 = *(double *)(v43 + 24);
      v49 = *(double *)(v45 + 24);
      if (v47 < *(double *)(v45 + 16))
        v47 = *(double *)(v45 + 16);
      *(double *)(v39 + v38) = v47;
      v28 += 4;
      if (v48 >= v49)
        v50 = v48;
      else
        v50 = v49;
      *(double *)(v46 + 8) = v50;
      v41 += 32;
      v40 += 32;
      v39 += 32;
    }
    while (v28 <= v10);
    goto LABEL_47;
  }
  if (a7 >= 1)
  {
    v11 = (double *)(a5 + 16);
    v12 = (double *)(a3 + 16);
    v13 = (double *)(result + 8);
    do
    {
      v14 = *(v13 - 1);
      if (v14 < *(v12 - 2))
        v14 = *(v12 - 2);
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        v15 = *v13;
        if (*v13 < *(v12 - 1))
          v15 = *(v12 - 1);
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          v16 = v13[1];
          if (v16 < *v12)
            v16 = *v12;
          *v11 = v16;
        }
      }
      v11 = (double *)((char *)v11 + a6);
      v12 = (double *)((char *)v12 + a4);
      v13 = (double *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1001DECC8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8x16_t v11;
  uint8x16_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  if (a8)
  {
    v8 = a7 - 4;
    while (a7 < 32)
    {
      v9 = 0;
      if ((int)v8 >= 0)
        goto LABEL_10;
LABEL_13:
      if ((int)v9 < a7)
      {
        do
        {
          *(_BYTE *)(a5 + v9) = *(_BYTE *)(result + v9)
                              - byte_1003BEFA6[(*(unsigned __int8 *)(result + v9) | 0x100)
                                             - *(unsigned __int8 *)(a3 + v9)];
          ++v9;
        }
        while (a7 != v9);
      }
      result += a2;
      a3 += a4;
      a5 += a6;
      if (!--a8)
        return result;
    }
    v10 = 16;
    do
    {
      v11 = vminq_u8(*(uint8x16_t *)(result + v10), *(uint8x16_t *)(a3 + v10));
      v12 = (uint8x16_t *)(a5 + v10);
      v12[-1] = vminq_u8(*(uint8x16_t *)(result + v10 - 16), *(uint8x16_t *)(a3 + v10 - 16));
      *v12 = v11;
      v13 = v10 + 16;
      v10 += 32;
    }
    while (v13 <= a7 - 32);
    v9 = (v10 - 16);
    if ((int)v9 > (int)v8)
      goto LABEL_13;
LABEL_10:
    v14 = v9 << 32;
    do
    {
      v15 = (v14 >> 32) | 1;
      v16 = *(unsigned __int8 *)(result + v15);
      v17 = byte_1003BEFA6[(v16 | 0x100) - *(unsigned __int8 *)(a3 + v15)];
      *(_BYTE *)(a5 + v9) = *(_BYTE *)(result + v9)
                          - byte_1003BEFA6[(*(unsigned __int8 *)(result + v9) | 0x100) - *(unsigned __int8 *)(a3 + v9)];
      *(_BYTE *)(a5 + v15) = v16 - v17;
      v18 = (v14 >> 32) | 3;
      v19 = *(unsigned __int8 *)(result + v18);
      v20 = byte_1003BEFA6[(v19 | 0x100) - *(unsigned __int8 *)(a3 + v18)];
      *(_BYTE *)(a5 + ((v14 >> 32) | 2)) = *(_BYTE *)(result + ((v14 >> 32) | 2))
                                         - byte_1003BEFA6[(*(unsigned __int8 *)(result + ((v14 >> 32) | 2)) | 0x100)
                                                        - *(unsigned __int8 *)(a3 + ((v14 >> 32) | 2))];
      *(_BYTE *)(a5 + v18) = v19 - v20;
      v9 += 4;
      v14 += 0x400000000;
    }
    while (v9 <= v8);
    v9 = v9;
    goto LABEL_13;
  }
  return result;
}

unint64_t sub_1001DEE40(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  _BYTE *v28;
  int8x16_t v29;
  _BYTE *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int8x16_t v34;
  int8x16_t *v35;
  int v36;
  int v37;
  char v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  int v48;
  int v49;
  char v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  int v54;
  unint64_t v55;
  unint64_t v56;
  int8x16_t v57;
  int8x16_t *v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  unint64_t v87;
  BOOL v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int8x16_t v94;
  int8x16_t v95;
  int8x16_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  int8x16_t v100;
  int8x16_t *v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v109;

  v107 = a5;
  v109 = result;
  if (!a8)
    return result;
  v8 = a7 - 4;
  v9 = a7;
  if (a7 >= 32)
  {
    v16 = 0;
    v18 = a5;
    v17 = a3;
    v19 = (_BYTE *)(v107 + 32);
    v20 = (char *)(a3 + 32);
    v21 = result;
    v22 = result + 32;
    while (1)
    {
      v23 = 0;
      v24 = v107 + v16 * a6;
      v25 = 0x2000000000;
      v26 = (char *)v22;
      v27 = v20;
      v28 = v19;
      do
      {
        v29 = vminq_s8(*(int8x16_t *)(v21 + v23), *(int8x16_t *)(v17 + v23));
        v30 = v28;
        v31 = v25;
        v32 = v27;
        v33 = v26;
        v34 = vminq_s8(*(int8x16_t *)(v21 + v23 + 16), *(int8x16_t *)(v17 + v23 + 16));
        v35 = (int8x16_t *)(v18 + v23);
        v23 += 32;
        v28 += 32;
        *v35 = v29;
        v35[1] = v34;
        v25 += 0x2000000000;
        v27 = v32 + 32;
        v26 += 32;
      }
      while (v23 <= a7 - 32);
      if ((int)v8 >= (int)v23)
      {
        do
        {
          v37 = *v33;
          v33 += 4;
          v36 = v37;
          v39 = *v32;
          v32 += 4;
          v38 = v39;
          v40 = v31 >> 32;
          v41 = (v31 >> 32) | 1;
          v42 = *(char *)(v21 + v41);
          if (v39 < v36)
            LOBYTE(v36) = v38;
          v43 = *(char *)(v17 + v41);
          *v30 = v36;
          v30 += 4;
          if (v43 < v42)
            LOBYTE(v42) = v43;
          *(_BYTE *)(v18 + v41) = v42;
          v44 = v40 | 2;
          v45 = *(char *)(v21 + (v40 | 2));
          v46 = *(char *)(v17 + (v40 | 2));
          v47 = v40 | 3;
          v48 = *(char *)(v21 + v47);
          if (v46 < v45)
            LOBYTE(v45) = v46;
          v49 = *(char *)(v17 + v47);
          *(_BYTE *)(v18 + v44) = v45;
          if (v49 >= v48)
            v50 = v48;
          else
            v50 = v49;
          *(_BYTE *)(v18 + v47) = v50;
          v23 += 4;
          v31 += 0x400000000;
        }
        while (v23 <= v8);
      }
      v51 = v23;
      result = a7;
      if ((int)v23 >= a7)
        goto LABEL_17;
      v52 = a7 - (unint64_t)v23;
      if (v52 < 8)
      {
        v53 = v51;
        goto LABEL_34;
      }
      if (v24 - (v109 + v16 * a2) < 0x20)
      {
        v53 = v51;
        goto LABEL_34;
      }
      if (v24 - (a3 + v16 * a4) < 0x20)
      {
        v53 = v51;
        goto LABEL_34;
      }
      if (v52 >= 0x20)
      {
        v55 = v52 & 0xFFFFFFFFFFFFFFE0;
        result = v51;
        v56 = v52 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v57 = vminq_s8(*(int8x16_t *)(v17 + result + 16), *(int8x16_t *)(v21 + result + 16));
          v58 = (int8x16_t *)(v18 + result);
          *v58 = vminq_s8(*(int8x16_t *)(v17 + result), *(int8x16_t *)(v21 + result));
          v58[1] = v57;
          result += 32;
          v56 -= 32;
        }
        while (v56);
        if (v52 == v55)
          goto LABEL_17;
        if ((v52 & 0x18) == 0)
        {
          v53 = v55 + v51;
          do
          {
LABEL_34:
            LODWORD(result) = *(char *)(v21 + v53);
            v54 = *(char *)(v17 + v53);
            if (v54 >= (int)result)
              result = result;
            else
              result = v54;
            *(_BYTE *)(v18 + v53++) = result;
          }
          while (a7 != v53);
          goto LABEL_17;
        }
      }
      else
      {
        v55 = 0;
      }
      result = v52 & 0xFFFFFFFFFFFFFFF8;
      v53 = (v52 & 0xFFFFFFFFFFFFFFF8) + v51;
      v59 = v55 - (v52 & 0xFFFFFFFFFFFFFFF8);
      v60 = v55 + v51;
      do
      {
        *(int8x8_t *)(v18 + v60) = vmin_s8(*(int8x8_t *)(v17 + v60), *(int8x8_t *)(v21 + v60));
        v60 += 8;
        v59 += 8;
      }
      while (v59);
      if (v52 != result)
        goto LABEL_34;
LABEL_17:
      v21 += a2;
      v17 += a4;
      v18 += a6;
      ++v16;
      v19 += a6;
      v20 += a4;
      v22 += a2;
      if (!--a8)
        return result;
    }
  }
  if (a7 >= 4)
  {
    v61 = 0;
    v62 = a3;
    v63 = a5 + 4;
    v64 = result;
    v106 = result + 4;
    v105 = a3 + 4;
    if (v8 <= 3)
      v65 = 3;
    else
      v65 = v8;
    v66 = v9 - (v65 & 0x7FFFFFFC) - 4;
    v67 = (v65 & 0x7FFFFFFC) + 4;
    v68 = (v65 >> 2) + 1;
    v104 = v66 & 0xFFFFFFFFFFFFFFE0;
    v103 = v66 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      v69 = v61 * a6;
      v70 = v61 * a2;
      v71 = v61 * a4;
      if (v65 >= 0x3C)
      {
        v72 = 0;
        v87 = v107 + v67 + v69;
        v89 = a5 < a3 + v67 + v71 && v62 < v87;
        v73 = 0;
        if ((v64 >= v87 || a5 >= v109 + v67 + v70) && !v89)
        {
          v91 = 0;
          v92 = 0;
          v93 = v68 & 0x3FFFFFF0;
          do
          {
            v94 = vminq_s8(*(int8x16_t *)(v62 + v91 + 16), *(int8x16_t *)(v64 + v91 + 16));
            v95 = vminq_s8(*(int8x16_t *)(v62 + v91), *(int8x16_t *)(v64 + v91));
            v96 = vminq_s8(*(int8x16_t *)(v62 + v91 + 48), *(int8x16_t *)(v64 + v91 + 48));
            result = a5 - 3 + ((v92 >> 32) | 3);
            *(int8x16_t *)(result + 32) = vminq_s8(*(int8x16_t *)(v62 + v91 + 32), *(int8x16_t *)(v64 + v91 + 32));
            *(int8x16_t *)(result + 48) = v96;
            *(int8x16_t *)result = v95;
            *(int8x16_t *)(result + 16) = v94;
            v92 += 0x4000000000;
            v91 += 64;
            v93 -= 16;
          }
          while (v93);
          v72 = v68 & 0x3FFFFFF0;
          v74 = v72 - 1;
          v73 = 4 * v72;
          if (v68 == v72)
            goto LABEL_72;
        }
      }
      else
      {
        v72 = 0;
        v73 = 0;
      }
      v74 = v72 - 1;
      v75 = v73 << 32;
      do
      {
        v76 = *(char *)(v64 + v73);
        if (*(char *)(v62 + v73) < v76)
          LOBYTE(v76) = *(_BYTE *)(v62 + v73);
        v77 = v75 >> 32;
        v78 = (v75 >> 32) | 1;
        v79 = *(char *)(v62 + v78);
        if (v79 >= *(char *)(v64 + v78))
          LOBYTE(v79) = *(_BYTE *)(v64 + v78);
        *(_BYTE *)(a5 + v73) = v76;
        *(_BYTE *)(a5 + v78) = v79;
        v80 = v77 | 2;
        LODWORD(result) = *(char *)(v64 + (v77 | 2));
        v81 = *(char *)(v62 + (v77 | 2));
        if (v81 >= (int)result)
          result = result;
        else
          result = v81;
        v82 = v77 | 3;
        v83 = *(char *)(v64 + v82);
        if (*(char *)(v62 + v82) < v83)
          LOBYTE(v83) = *(_BYTE *)(v62 + v82);
        *(_BYTE *)(a5 + v80) = result;
        *(_BYTE *)(a5 + v82) = v83;
        v73 += 4;
        ++v74;
        v75 += 0x400000000;
      }
      while (v73 <= v8);
LABEL_72:
      if ((int)v73 < a7)
      {
        v84 = v73 & 0xFFFFFFFC;
        if (v66 < 8)
        {
          v85 = v84;
          goto LABEL_75;
        }
        result = v106 + v70;
        v97 = 4 * v74 + v63 + v69;
        if (v97 - (4 * v74 + result) < 0x20)
        {
          v85 = v84;
          goto LABEL_75;
        }
        if (v97 - (4 * v74 + v105 + v71) < 0x20)
        {
          v85 = v84;
          goto LABEL_75;
        }
        if (v66 >= 0x20)
        {
          v98 = v84;
          v99 = v66 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v100 = vminq_s8(*(int8x16_t *)(v62 + v98 + 16), *(int8x16_t *)(v64 + v98 + 16));
            v101 = (int8x16_t *)(a5 + v98);
            *v101 = vminq_s8(*(int8x16_t *)(v62 + v98), *(int8x16_t *)(v64 + v98));
            v101[1] = v100;
            v98 += 32;
            v99 -= 32;
          }
          while (v99);
          if (v66 == v104)
            goto LABEL_58;
          result = v66 & 0xFFFFFFFFFFFFFFE0;
          if ((v66 & 0x18) == 0)
          {
            v85 = v84 + v104;
            do
            {
LABEL_75:
              v86 = *(char *)(v64 + v85);
              if (*(char *)(v62 + v85) < v86)
                LOBYTE(v86) = *(_BYTE *)(v62 + v85);
              *(_BYTE *)(a5 + v85++) = v86;
            }
            while (v9 != v85);
            goto LABEL_58;
          }
        }
        else
        {
          result = 0;
        }
        v85 = v84 + v103;
        v102 = result - (v66 & 0xFFFFFFFFFFFFFFF8);
        result += v84;
        do
        {
          *(int8x8_t *)(a5 + result) = vmin_s8(*(int8x8_t *)(v62 + result), *(int8x8_t *)(v64 + result));
          result += 8;
          v102 += 8;
        }
        while (v102);
        if (v66 != v103)
          goto LABEL_75;
      }
LABEL_58:
      v64 += a2;
      v62 += a4;
      a5 += a6;
      ++v61;
      if (!--a8)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v10 = (_BYTE *)(a5 + 2);
    v11 = (_BYTE *)(a3 + 2);
    v12 = (char *)(result + 1);
    do
    {
      v13 = *(v12 - 1);
      if ((char)*(v11 - 2) < v13)
        LOBYTE(v13) = *(v11 - 2);
      *(v10 - 2) = v13;
      if (a7 != 1)
      {
        v14 = *v12;
        if ((char)*(v11 - 1) < v14)
          LOBYTE(v14) = *(v11 - 1);
        *(v10 - 1) = v14;
        if (a7 != 2)
        {
          v15 = v12[1];
          if ((char)*v11 < v15)
            LOBYTE(v15) = *v11;
          *v10 = v15;
        }
      }
      v10 += a6;
      v11 += a4;
      v12 += a2;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001DF49C(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  unint64_t v9;
  unint64_t v10;
  _WORD *v11;
  _WORD *v12;
  unsigned __int16 *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned __int16 *v21;
  unint64_t v22;
  _WORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _WORD *v32;
  unsigned __int16 *v33;
  unsigned __int16 *v34;
  uint64_t v35;
  unint64_t v36;
  uint16x8_t v37;
  uint64_t v38;
  unsigned __int16 *v39;
  unsigned __int16 *v40;
  _WORD *v41;
  uint16x8_t v42;
  uint16x8_t *v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  __int16 v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint16x8_t v59;
  uint16x8_t *v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  BOOL v76;
  uint64_t v78;
  uint64_t v79;
  uint16x8_t v80;
  uint16x8_t v81;
  uint16x8_t v82;
  uint16x8_t *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unsigned int v90;
  unint64_t v91;
  unsigned int v92;
  unint64_t v93;
  unint64_t v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unint64_t v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint16x8_t v103;
  uint16x8_t *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;

  v111 = a5;
  v112 = a3;
  v113 = result;
  if (!a8)
    return result;
  v8 = a8 - 1;
  v9 = (a7 - 4);
  v10 = (a7 - 16);
  if (a7 >= 16)
  {
    v17 = 0;
    v19 = a3;
    v18 = result;
    v20 = result + 32;
    v21 = (unsigned __int16 *)(a3 + 32);
    v22 = a5;
    v23 = (_WORD *)(a5 + 32);
    v24 = a7;
    v110 = a6;
    while (1)
    {
      v25 = 0;
      v26 = 0;
      v27 = v8;
      v28 = v111 + v17 * a6;
      v29 = a2;
      v30 = v113 + v17 * a2;
      v31 = 0x1000000000;
      v32 = v23;
      v33 = v21;
      v34 = (unsigned __int16 *)v20;
      v35 = a4;
      v36 = v112 + v17 * a4;
      do
      {
        v37 = vminq_u16(*(uint16x8_t *)(v18 + v25), *(uint16x8_t *)(v19 + v25));
        v38 = v31;
        v39 = v34;
        v40 = v33;
        v41 = v32;
        v42 = vminq_u16(*(uint16x8_t *)(v18 + v25 + 16), *(uint16x8_t *)(v19 + v25 + 16));
        v43 = (uint16x8_t *)(v22 + v25);
        v26 += 16;
        v25 += 32;
        v31 += 0x1000000000;
        *v43 = v37;
        v43[1] = v42;
        v34 = v39 + 16;
        v33 += 16;
        v32 += 16;
      }
      while (v26 <= v10);
      if ((int)v9 >= (int)v26)
        break;
      v26 = v26;
      result = a7;
      if ((int)v26 < a7)
        goto LABEL_34;
LABEL_17:
      a2 = v29;
      v18 += v29;
      a4 = v35;
      v19 += v35;
      a6 = v110;
      v22 += v110;
      v8 = v27 - 1;
      ++v17;
      v20 += v29;
      v21 = (unsigned __int16 *)((char *)v21 + a4);
      v23 = (_WORD *)((char *)v23 + v110);
      if (!v27)
        return result;
    }
    v44 = 0;
    do
    {
      v46 = *v39;
      v39 += 4;
      v45 = v46;
      v48 = *v40;
      v40 += 4;
      v47 = v48;
      if (v48 < v45)
        LOWORD(v45) = v47;
      v49 = v38 >> 31;
      v50 = (v38 >> 31) | 2;
      v51 = *(unsigned __int16 *)(v19 + v50);
      if (v51 >= *(unsigned __int16 *)(v18 + v50))
        LOWORD(v51) = *(_WORD *)(v18 + v50);
      *v41 = v45;
      v41 += 4;
      *(_WORD *)(v22 + v50) = v51;
      v52 = v49 | 4;
      v53 = *(unsigned __int16 *)(v18 + (v49 | 4));
      if (*(unsigned __int16 *)(v19 + (v49 | 4)) < v53)
        LOWORD(v53) = *(_WORD *)(v19 + (v49 | 4));
      v54 = v49 | 6;
      v55 = *(unsigned __int16 *)(v18 + v54);
      if (*(unsigned __int16 *)(v19 + v54) < v55)
        LOWORD(v55) = *(_WORD *)(v19 + v54);
      *(_WORD *)(v22 + v52) = v53;
      *(_WORD *)(v22 + v54) = v55;
      v38 += 0x400000000;
      v44 += 4;
    }
    while (v26 + v44 <= v9);
    v26 = (v26 + v44);
    result = a7;
    if ((int)v26 >= a7)
      goto LABEL_17;
LABEL_34:
    result = v24 - v26;
    if (v24 - v26 < 0x10)
      goto LABEL_90;
    v56 = 2 * v26;
    v57 = v28 + 2 * v26;
    if (v57 - (v30 + 2 * v26) < 0x20)
      goto LABEL_90;
    if (v57 - (v36 + v56) < 0x20)
      goto LABEL_90;
    v26 += result & 0xFFFFFFFFFFFFFFF0;
    v58 = result & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v59 = vminq_u16(*(uint16x8_t *)(v19 + v56 + 16), *(uint16x8_t *)(v18 + v56 + 16));
      v60 = (uint16x8_t *)(v22 + v56);
      *v60 = vminq_u16(*(uint16x8_t *)(v19 + v56), *(uint16x8_t *)(v18 + v56));
      v60[1] = v59;
      v56 += 32;
      v58 -= 16;
    }
    while (v58);
    if (result != (result & 0xFFFFFFFFFFFFFFF0))
    {
LABEL_90:
      do
      {
        result = 2 * v26;
        v61 = *(unsigned __int16 *)(v18 + 2 * v26);
        if (*(unsigned __int16 *)(v19 + 2 * v26) < v61)
          LOWORD(v61) = *(_WORD *)(v19 + 2 * v26);
        *(_WORD *)(v22 + 2 * v26++) = v61;
      }
      while (v24 != v26);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    v62 = 0;
    v63 = a7;
    v109 = a5 + 8;
    v108 = result + 8;
    v105 = a3 + 8;
    v64 = (v9 & 0xFFFFFFFC) + 5;
    if (v64 <= a7)
      v64 = a7;
    v65 = v64 - (v9 & 0xFFFFFFFC) - 4;
    v66 = ((2 * (a7 - 4)) & 0x1FFFFFFF8) + 8;
    v107 = (v9 >> 2) + 1;
    v106 = v65 & 0xFFFFFFFFFFFFFFF0;
    while (1)
    {
      v67 = v8;
      v68 = v62 * a6;
      v69 = v62 * a2;
      v70 = v62 * a4;
      if (v9 >= 0x1C)
      {
        v71 = 0;
        v74 = v111 + v66 + v68;
        v76 = a5 < v112 + v66 + v70 && a3 < v74;
        v73 = 4;
        if (result >= v74 || a5 >= v113 + v66 + v69)
        {
          v72 = 0;
          if (!v76)
          {
            v78 = 0;
            v79 = v107 & 0x7FFFFFF8;
            do
            {
              v80 = vminq_u16(*(uint16x8_t *)(a3 + v78 + 16), *(uint16x8_t *)(result + v78 + 16));
              v81 = vminq_u16(*(uint16x8_t *)(a3 + v78), *(uint16x8_t *)(result + v78));
              v82 = vminq_u16(*(uint16x8_t *)(a3 + v78 + 48), *(uint16x8_t *)(result + v78 + 48));
              v83 = (uint16x8_t *)(a5 + v78);
              v83[2] = vminq_u16(*(uint16x8_t *)(a3 + v78 + 32), *(uint16x8_t *)(result + v78 + 32));
              v83[3] = v82;
              *v83 = v81;
              v83[1] = v80;
              v78 += 64;
              v79 -= 8;
            }
            while (v79);
            v71 = v107 & 0x7FFFFFF8;
            v84 = v71 - 1;
            v73 = (32 * ((v71 >> 3) & 0xFFFFFFF)) | 4;
            v72 = 4 * v71;
            v85 = v72;
            if (v107 == v71)
              goto LABEL_75;
          }
        }
        else
        {
          v72 = 0;
        }
      }
      else
      {
        v71 = 0;
        v72 = 0;
        v73 = 4;
      }
      v84 = v71 - 1;
      v85 = v73 - 4;
      v86 = 2 * v72;
      v87 = result;
      v88 = a5;
      v89 = a3;
      do
      {
        v90 = *(unsigned __int16 *)(v89 + v86);
        if (v90 >= *(unsigned __int16 *)(v87 + v86))
          LOWORD(v90) = *(_WORD *)(v87 + v86);
        v91 = v87 + v86;
        v92 = *(unsigned __int16 *)(v87 + v86 + 2);
        v93 = v89 + v86;
        if (*(unsigned __int16 *)(v89 + v86 + 2) < v92)
          LOWORD(v92) = *(_WORD *)(v89 + v86 + 2);
        *(_WORD *)(v88 + v86) = v90;
        v94 = v88 + v86;
        *(_WORD *)(v88 + v86 + 2) = v92;
        v95 = *(unsigned __int16 *)(v91 + 4);
        if (*(unsigned __int16 *)(v93 + 4) < v95)
          LOWORD(v95) = *(_WORD *)(v93 + 4);
        v96 = *(unsigned __int16 *)(v91 + 6);
        v97 = *(unsigned __int16 *)(v93 + 6);
        if (v97 < v96)
          LOWORD(v96) = v97;
        v72 += 4;
        ++v84;
        v85 += 4;
        *(_WORD *)(v94 + 4) = v95;
        *(_WORD *)(v94 + 6) = v96;
        v89 += 8;
        v88 += 8;
        v87 += 8;
      }
      while (v72 <= v9);
LABEL_75:
      if ((int)v72 < a7)
      {
        if (v65 < 0x10
          || (v100 = 8 * v84 + v109 + v68, v100 - (8 * v84 + v108 + v69) < 0x20)
          || v100 - (8 * v84 + v105 + v70) < 0x20)
        {
          v98 = v85;
          do
          {
LABEL_78:
            v99 = *(unsigned __int16 *)(result + 2 * v98);
            if (*(unsigned __int16 *)(a3 + 2 * v98) < v99)
              LOWORD(v99) = *(_WORD *)(a3 + 2 * v98);
            *(_WORD *)(a5 + 2 * v98++) = v99;
          }
          while (v98 < v63);
          goto LABEL_47;
        }
        v101 = v65 & 0xFFFFFFFFFFFFFFF0;
        v98 = v85 + v106;
        v102 = 2 * v85;
        do
        {
          v103 = vminq_u16(*(uint16x8_t *)(a3 + v102 + 16), *(uint16x8_t *)(result + v102 + 16));
          v104 = (uint16x8_t *)(a5 + v102);
          *v104 = vminq_u16(*(uint16x8_t *)(a3 + v102), *(uint16x8_t *)(result + v102));
          v104[1] = v103;
          v102 += 32;
          v101 -= 16;
        }
        while (v101);
        if (v65 != v106)
          goto LABEL_78;
      }
LABEL_47:
      result += a2;
      a3 += a4;
      a5 += a6;
      v8 = v67 - 1;
      ++v62;
      if (!v67)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v11 = (_WORD *)(a5 + 4);
    v12 = (_WORD *)(a3 + 4);
    v13 = (unsigned __int16 *)(result + 2);
    do
    {
      v14 = *(v13 - 1);
      if ((unsigned __int16)*(v12 - 2) < v14)
        LOWORD(v14) = *(v12 - 2);
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        v15 = *v13;
        if ((unsigned __int16)*(v12 - 1) < v15)
          LOWORD(v15) = *(v12 - 1);
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          v16 = v13[1];
          if ((unsigned __int16)*v12 < v16)
            LOWORD(v16) = *v12;
          *v11 = v16;
        }
      }
      v11 = (_WORD *)((char *)v11 + a6);
      v12 = (_WORD *)((char *)v12 + a4);
      v13 = (unsigned __int16 *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001DFA7C(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  unint64_t v9;
  unint64_t v10;
  _WORD *v11;
  __int16 *v12;
  __int16 *v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __int16 *v21;
  unint64_t v22;
  _WORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _WORD *v32;
  __int16 *v33;
  __int16 *v34;
  uint64_t v35;
  unint64_t v36;
  int16x8_t v37;
  uint64_t v38;
  __int16 *v39;
  __int16 *v40;
  _WORD *v41;
  int16x8_t v42;
  int16x8_t *v43;
  uint64_t v44;
  int v45;
  int v46;
  __int16 v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  int16x8_t v59;
  int16x8_t *v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  BOOL v76;
  uint64_t v78;
  uint64_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  int v90;
  unint64_t v91;
  int v92;
  unint64_t v93;
  unint64_t v94;
  int v95;
  int v96;
  int v97;
  unint64_t v98;
  int v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  int16x8_t v103;
  int16x8_t *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;

  v111 = a5;
  v112 = a3;
  v113 = result;
  if (!a8)
    return result;
  v8 = a8 - 1;
  v9 = (a7 - 4);
  v10 = (a7 - 16);
  if (a7 >= 16)
  {
    v17 = 0;
    v19 = a3;
    v18 = result;
    v20 = result + 32;
    v21 = (__int16 *)(a3 + 32);
    v22 = a5;
    v23 = (_WORD *)(a5 + 32);
    v24 = a7;
    v110 = a6;
    while (1)
    {
      v25 = 0;
      v26 = 0;
      v27 = v8;
      v28 = v111 + v17 * a6;
      v29 = a2;
      v30 = v113 + v17 * a2;
      v31 = 0x1000000000;
      v32 = v23;
      v33 = v21;
      v34 = (__int16 *)v20;
      v35 = a4;
      v36 = v112 + v17 * a4;
      do
      {
        v37 = vminq_s16(*(int16x8_t *)(v18 + v25), *(int16x8_t *)(v19 + v25));
        v38 = v31;
        v39 = v34;
        v40 = v33;
        v41 = v32;
        v42 = vminq_s16(*(int16x8_t *)(v18 + v25 + 16), *(int16x8_t *)(v19 + v25 + 16));
        v43 = (int16x8_t *)(v22 + v25);
        v26 += 16;
        v25 += 32;
        v31 += 0x1000000000;
        *v43 = v37;
        v43[1] = v42;
        v34 = v39 + 16;
        v33 += 16;
        v32 += 16;
      }
      while (v26 <= v10);
      if ((int)v9 >= (int)v26)
        break;
      v26 = v26;
      result = a7;
      if ((int)v26 < a7)
        goto LABEL_34;
LABEL_17:
      a2 = v29;
      v18 += v29;
      a4 = v35;
      v19 += v35;
      a6 = v110;
      v22 += v110;
      v8 = v27 - 1;
      ++v17;
      v20 += v29;
      v21 = (__int16 *)((char *)v21 + a4);
      v23 = (_WORD *)((char *)v23 + v110);
      if (!v27)
        return result;
    }
    v44 = 0;
    do
    {
      v46 = *v39;
      v39 += 4;
      v45 = v46;
      v48 = *v40;
      v40 += 4;
      v47 = v48;
      if (v48 < v45)
        LOWORD(v45) = v47;
      v49 = v38 >> 31;
      v50 = (v38 >> 31) | 2;
      v51 = *(__int16 *)(v19 + v50);
      if (v51 >= *(__int16 *)(v18 + v50))
        LOWORD(v51) = *(_WORD *)(v18 + v50);
      *v41 = v45;
      v41 += 4;
      *(_WORD *)(v22 + v50) = v51;
      v52 = v49 | 4;
      v53 = *(__int16 *)(v18 + (v49 | 4));
      if (*(__int16 *)(v19 + (v49 | 4)) < v53)
        LOWORD(v53) = *(_WORD *)(v19 + (v49 | 4));
      v54 = v49 | 6;
      v55 = *(__int16 *)(v18 + v54);
      if (*(__int16 *)(v19 + v54) < v55)
        LOWORD(v55) = *(_WORD *)(v19 + v54);
      *(_WORD *)(v22 + v52) = v53;
      *(_WORD *)(v22 + v54) = v55;
      v38 += 0x400000000;
      v44 += 4;
    }
    while (v26 + v44 <= v9);
    v26 = (v26 + v44);
    result = a7;
    if ((int)v26 >= a7)
      goto LABEL_17;
LABEL_34:
    result = v24 - v26;
    if (v24 - v26 < 0x10)
      goto LABEL_90;
    v56 = 2 * v26;
    v57 = v28 + 2 * v26;
    if (v57 - (v30 + 2 * v26) < 0x20)
      goto LABEL_90;
    if (v57 - (v36 + v56) < 0x20)
      goto LABEL_90;
    v26 += result & 0xFFFFFFFFFFFFFFF0;
    v58 = result & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v59 = vminq_s16(*(int16x8_t *)(v19 + v56 + 16), *(int16x8_t *)(v18 + v56 + 16));
      v60 = (int16x8_t *)(v22 + v56);
      *v60 = vminq_s16(*(int16x8_t *)(v19 + v56), *(int16x8_t *)(v18 + v56));
      v60[1] = v59;
      v56 += 32;
      v58 -= 16;
    }
    while (v58);
    if (result != (result & 0xFFFFFFFFFFFFFFF0))
    {
LABEL_90:
      do
      {
        result = 2 * v26;
        v61 = *(__int16 *)(v18 + 2 * v26);
        if (*(__int16 *)(v19 + 2 * v26) < v61)
          LOWORD(v61) = *(_WORD *)(v19 + 2 * v26);
        *(_WORD *)(v22 + 2 * v26++) = v61;
      }
      while (v24 != v26);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    v62 = 0;
    v63 = a7;
    v109 = a5 + 8;
    v108 = result + 8;
    v105 = a3 + 8;
    v64 = (v9 & 0xFFFFFFFC) + 5;
    if (v64 <= a7)
      v64 = a7;
    v65 = v64 - (v9 & 0xFFFFFFFC) - 4;
    v66 = ((2 * (a7 - 4)) & 0x1FFFFFFF8) + 8;
    v107 = (v9 >> 2) + 1;
    v106 = v65 & 0xFFFFFFFFFFFFFFF0;
    while (1)
    {
      v67 = v8;
      v68 = v62 * a6;
      v69 = v62 * a2;
      v70 = v62 * a4;
      if (v9 >= 0x1C)
      {
        v71 = 0;
        v74 = v111 + v66 + v68;
        v76 = a5 < v112 + v66 + v70 && a3 < v74;
        v73 = 4;
        if (result >= v74 || a5 >= v113 + v66 + v69)
        {
          v72 = 0;
          if (!v76)
          {
            v78 = 0;
            v79 = v107 & 0x7FFFFFF8;
            do
            {
              v80 = vminq_s16(*(int16x8_t *)(a3 + v78 + 16), *(int16x8_t *)(result + v78 + 16));
              v81 = vminq_s16(*(int16x8_t *)(a3 + v78), *(int16x8_t *)(result + v78));
              v82 = vminq_s16(*(int16x8_t *)(a3 + v78 + 48), *(int16x8_t *)(result + v78 + 48));
              v83 = (int16x8_t *)(a5 + v78);
              v83[2] = vminq_s16(*(int16x8_t *)(a3 + v78 + 32), *(int16x8_t *)(result + v78 + 32));
              v83[3] = v82;
              *v83 = v81;
              v83[1] = v80;
              v78 += 64;
              v79 -= 8;
            }
            while (v79);
            v71 = v107 & 0x7FFFFFF8;
            v84 = v71 - 1;
            v73 = (32 * ((v71 >> 3) & 0xFFFFFFF)) | 4;
            v72 = 4 * v71;
            v85 = v72;
            if (v107 == v71)
              goto LABEL_75;
          }
        }
        else
        {
          v72 = 0;
        }
      }
      else
      {
        v71 = 0;
        v72 = 0;
        v73 = 4;
      }
      v84 = v71 - 1;
      v85 = v73 - 4;
      v86 = 2 * v72;
      v87 = result;
      v88 = a5;
      v89 = a3;
      do
      {
        v90 = *(__int16 *)(v89 + v86);
        if (v90 >= *(__int16 *)(v87 + v86))
          LOWORD(v90) = *(_WORD *)(v87 + v86);
        v91 = v87 + v86;
        v92 = *(__int16 *)(v87 + v86 + 2);
        v93 = v89 + v86;
        if (*(__int16 *)(v89 + v86 + 2) < v92)
          LOWORD(v92) = *(_WORD *)(v89 + v86 + 2);
        *(_WORD *)(v88 + v86) = v90;
        v94 = v88 + v86;
        *(_WORD *)(v88 + v86 + 2) = v92;
        v95 = *(__int16 *)(v91 + 4);
        if (*(__int16 *)(v93 + 4) < v95)
          LOWORD(v95) = *(_WORD *)(v93 + 4);
        v96 = *(__int16 *)(v91 + 6);
        v97 = *(__int16 *)(v93 + 6);
        if (v97 < v96)
          LOWORD(v96) = v97;
        v72 += 4;
        ++v84;
        v85 += 4;
        *(_WORD *)(v94 + 4) = v95;
        *(_WORD *)(v94 + 6) = v96;
        v89 += 8;
        v88 += 8;
        v87 += 8;
      }
      while (v72 <= v9);
LABEL_75:
      if ((int)v72 < a7)
      {
        if (v65 < 0x10
          || (v100 = 8 * v84 + v109 + v68, v100 - (8 * v84 + v108 + v69) < 0x20)
          || v100 - (8 * v84 + v105 + v70) < 0x20)
        {
          v98 = v85;
          do
          {
LABEL_78:
            v99 = *(__int16 *)(result + 2 * v98);
            if (*(__int16 *)(a3 + 2 * v98) < v99)
              LOWORD(v99) = *(_WORD *)(a3 + 2 * v98);
            *(_WORD *)(a5 + 2 * v98++) = v99;
          }
          while (v98 < v63);
          goto LABEL_47;
        }
        v101 = v65 & 0xFFFFFFFFFFFFFFF0;
        v98 = v85 + v106;
        v102 = 2 * v85;
        do
        {
          v103 = vminq_s16(*(int16x8_t *)(a3 + v102 + 16), *(int16x8_t *)(result + v102 + 16));
          v104 = (int16x8_t *)(a5 + v102);
          *v104 = vminq_s16(*(int16x8_t *)(a3 + v102), *(int16x8_t *)(result + v102));
          v104[1] = v103;
          v102 += 32;
          v101 -= 16;
        }
        while (v101);
        if (v65 != v106)
          goto LABEL_78;
      }
LABEL_47:
      result += a2;
      a3 += a4;
      a5 += a6;
      v8 = v67 - 1;
      ++v62;
      if (!v67)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v11 = (_WORD *)(a5 + 4);
    v12 = (__int16 *)(a3 + 4);
    v13 = (__int16 *)(result + 2);
    do
    {
      v14 = *(v13 - 1);
      if (*(v12 - 2) < v14)
        LOWORD(v14) = *(v12 - 2);
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        v15 = *v13;
        if (*(v12 - 1) < v15)
          LOWORD(v15) = *(v12 - 1);
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          v16 = v13[1];
          if (*v12 < v16)
            LOWORD(v16) = *v12;
          *v11 = v16;
        }
      }
      v11 = (_WORD *)((char *)v11 + a6);
      v12 = (__int16 *)((char *)v12 + a4);
      v13 = (__int16 *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001E005C(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  unint64_t v9;
  _DWORD *v10;
  int *v11;
  int *v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _DWORD *v19;
  int *v20;
  int *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  int *v26;
  int *v27;
  _DWORD *v28;
  int32x4_t v29;
  _DWORD *v30;
  int *v31;
  int *v32;
  int32x4_t v33;
  int32x4_t *v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int32x4_t v47;
  int32x4_t *v48;
  int v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  BOOL v64;
  uint64_t v66;
  uint64_t v67;
  int32x4_t v68;
  int32x4_t v69;
  int32x4_t v70;
  int32x4_t *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  int v78;
  unint64_t v79;
  unint64_t v80;
  int v81;
  unint64_t v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unint64_t v87;
  int v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  int32x4_t v92;
  int32x4_t *v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;

  v100 = a5;
  v101 = a3;
  if (!a8)
    return result;
  v8 = a8 - 1;
  v9 = (a7 - 4);
  if (a7 >= 8)
  {
    v16 = 0;
    v18 = a5;
    v17 = a3;
    v19 = (_DWORD *)(a5 + 32);
    v20 = (int *)(a3 + 32);
    v21 = (int *)(result + 32);
    v22 = result;
    while (1)
    {
      v23 = 0;
      v24 = 0;
      v25 = v8;
      v26 = v21;
      v27 = v20;
      v28 = v19;
      do
      {
        v29 = vminq_s32(*(int32x4_t *)(v22 + v23), *(int32x4_t *)(v17 + v23));
        v30 = v28;
        v31 = v27;
        v32 = v26;
        v33 = vminq_s32(*(int32x4_t *)(v22 + v23 + 16), *(int32x4_t *)(v17 + v23 + 16));
        v34 = (int32x4_t *)(v18 + v23);
        v24 += 8;
        v23 += 32;
        *v34 = v29;
        v34[1] = v33;
        v28 = v30 + 8;
        v27 += 8;
        v26 += 8;
      }
      while (v24 <= (a7 - 8));
      if ((int)v9 >= (int)v24)
        break;
      v24 = v24;
      if ((int)v24 < a7)
        goto LABEL_30;
LABEL_17:
      v22 += a2;
      v17 += a4;
      v18 += a6;
      v8 = v25 - 1;
      ++v16;
      v19 = (_DWORD *)((char *)v19 + a6);
      v20 = (int *)((char *)v20 + a4);
      v21 = (int *)((char *)v21 + a2);
      if (!v25)
        return result;
    }
    v35 = 0;
    do
    {
      v37 = *v32;
      v32 += 4;
      v36 = v37;
      v39 = *v31;
      v31 += 4;
      v38 = v39;
      if (v39 < v36)
        v36 = v38;
      v40 = (unint64_t)(((_DWORD)v24 + (_DWORD)v35) & 0xFFFFFFFC) >> 2;
      v41 = (16 * (v40 & 0x3FFFFFFF)) | 4;
      v42 = *(_DWORD *)(v22 + v41);
      if (*(_DWORD *)(v17 + v41) < v42)
        v42 = *(_DWORD *)(v17 + v41);
      *v30 = v36;
      v30 += 4;
      *(_DWORD *)(v18 + v41) = v42;
      *(int32x2_t *)(v18 + ((16 * (v40 & 0x3FFFFFFF)) | 8)) = vmin_s32(*(int32x2_t *)(v17 + ((16 * (v40 & 0x3FFFFFFF)) | 8)), *(int32x2_t *)(v22 + ((16 * (v40 & 0x3FFFFFFF)) | 8)));
      v35 += 4;
    }
    while (v24 + v35 <= v9);
    v24 = (v24 + v35);
    if ((int)v24 >= a7)
      goto LABEL_17;
LABEL_30:
    v43 = a7 - v24;
    if (v43 < 0xC)
      goto LABEL_86;
    v44 = 4 * v24;
    v45 = v100 + v16 * a6 + 4 * v24;
    if (v45 - (result + v16 * a2 + 4 * v24) < 0x20)
      goto LABEL_86;
    if (v45 - (v101 + v16 * a4 + v44) < 0x20)
      goto LABEL_86;
    v24 += v43 & 0xFFFFFFFFFFFFFFF8;
    v46 = v43 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      v47 = vminq_s32(*(int32x4_t *)(v17 + v44 + 16), *(int32x4_t *)(v22 + v44 + 16));
      v48 = (int32x4_t *)(v18 + v44);
      *v48 = vminq_s32(*(int32x4_t *)(v17 + v44), *(int32x4_t *)(v22 + v44));
      v48[1] = v47;
      v44 += 32;
      v46 -= 8;
    }
    while (v46);
    if (v43 != (v43 & 0xFFFFFFFFFFFFFFF8))
    {
LABEL_86:
      do
      {
        v49 = *(_DWORD *)(v22 + 4 * v24);
        if (*(_DWORD *)(v17 + 4 * v24) < v49)
          v49 = *(_DWORD *)(v17 + 4 * v24);
        *(_DWORD *)(v18 + 4 * v24++) = v49;
      }
      while (a7 != v24);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    v50 = 0;
    v98 = a5 + 16;
    v97 = result + 16;
    v94 = a3 + 16;
    v51 = (v9 & 0xFFFFFFFC) + 5;
    if (v51 <= a7)
      v51 = a7;
    v52 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    v96 = (v9 >> 2) + 1;
    v99 = v51 - (v9 & 0xFFFFFFFC) - 4;
    v95 = v99 & 0xFFFFFFFFFFFFFFF8;
    v53 = result;
    v54 = result;
    while (1)
    {
      v55 = v8;
      v56 = v50 * a6;
      v57 = v50 * a2;
      v58 = v50 * a4;
      if (v9 >= 0xC)
      {
        v59 = 0;
        v62 = v100 + v52 + v56;
        v64 = a5 < v101 + v52 + v58 && a3 < v62;
        if (v53 >= v62 || a5 >= result + v52 + v57)
        {
          v61 = 4;
          v60 = 0;
          if (!v64)
          {
            v66 = 0;
            v67 = v96 & 0x7FFFFFFC;
            do
            {
              v68 = vminq_s32(*(int32x4_t *)(a3 + v66 + 16), *(int32x4_t *)(v53 + v66 + 16));
              v69 = vminq_s32(*(int32x4_t *)(a3 + v66), *(int32x4_t *)(v53 + v66));
              v70 = vminq_s32(*(int32x4_t *)(a3 + v66 + 48), *(int32x4_t *)(v53 + v66 + 48));
              v71 = (int32x4_t *)(a5 + v66);
              v71[2] = vminq_s32(*(int32x4_t *)(a3 + v66 + 32), *(int32x4_t *)(v53 + v66 + 32));
              v71[3] = v70;
              *v71 = v69;
              v71[1] = v68;
              v66 += 64;
              v67 -= 4;
            }
            while (v67);
            v59 = v96 & 0x7FFFFFFC;
            v61 = (16 * ((v59 >> 2) & 0x1FFFFFFF)) | 4;
            v72 = 4 * v59;
            v60 = v72;
            v73 = v59 - 1;
            if (v96 == v59)
              goto LABEL_71;
          }
        }
        else
        {
          v61 = 4;
          v60 = 0;
        }
      }
      else
      {
        v59 = 0;
        v60 = 0;
        v61 = 4;
      }
      v73 = v59 - 1;
      v72 = v61 - 4;
      v74 = 4 * v60;
      v75 = a3;
      v76 = v53;
      v77 = a5;
      do
      {
        v78 = *(_DWORD *)(v76 + v74);
        if (*(_DWORD *)(v75 + v74) < v78)
          v78 = *(_DWORD *)(v75 + v74);
        v79 = v76 + v74;
        v80 = v75 + v74;
        v81 = *(_DWORD *)(v75 + v74 + 4);
        if (v81 >= *(_DWORD *)(v76 + v74 + 4))
          v81 = *(_DWORD *)(v76 + v74 + 4);
        *(_DWORD *)(v77 + v74) = v78;
        v82 = v77 + v74;
        *(_DWORD *)(v77 + v74 + 4) = v81;
        v83 = *(_DWORD *)(v79 + 8);
        v84 = *(_DWORD *)(v79 + 12);
        v85 = *(_DWORD *)(v80 + 8);
        v86 = *(_DWORD *)(v80 + 12);
        if (v85 < v83)
          v83 = v85;
        if (v86 < v84)
          v84 = v86;
        v60 += 4;
        ++v73;
        v72 += 4;
        *(_DWORD *)(v82 + 8) = v83;
        *(_DWORD *)(v82 + 12) = v84;
        v77 += 16;
        v76 += 16;
        v75 += 16;
      }
      while (v60 <= v9);
LABEL_71:
      if ((int)v60 < a7)
      {
        if (v99 < 0xC
          || (v89 = 16 * v73 + v98 + v56, v89 - (16 * v73 + v97 + v57) < 0x20)
          || v89 - (16 * v73 + v94 + v58) < 0x20)
        {
          v87 = v72;
          do
          {
LABEL_74:
            v88 = *(_DWORD *)(v53 + 4 * v87);
            if (*(_DWORD *)(a3 + 4 * v87) < v88)
              v88 = *(_DWORD *)(a3 + 4 * v87);
            *(_DWORD *)(a5 + 4 * v87++) = v88;
          }
          while (v87 < a7);
          goto LABEL_43;
        }
        v90 = v99 & 0xFFFFFFFFFFFFFFF8;
        v87 = v72 + v95;
        v91 = 4 * v72;
        do
        {
          v92 = vminq_s32(*(int32x4_t *)(a3 + v91 + 16), *(int32x4_t *)(v53 + v91 + 16));
          v93 = (int32x4_t *)(a5 + v91);
          *v93 = vminq_s32(*(int32x4_t *)(a3 + v91), *(int32x4_t *)(v53 + v91));
          v93[1] = v92;
          v91 += 32;
          v90 -= 8;
        }
        while (v90);
        if (v99 != v95)
          goto LABEL_74;
      }
LABEL_43:
      v53 += a2;
      a3 += a4;
      a5 += a6;
      v8 = v55 - 1;
      ++v50;
      result = v54;
      if (!v55)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v10 = (_DWORD *)(a5 + 8);
    v11 = (int *)(a3 + 8);
    v12 = (int *)(result + 4);
    do
    {
      v13 = *(v12 - 1);
      if (*(v11 - 2) < v13)
        v13 = *(v11 - 2);
      *(v10 - 2) = v13;
      if (a7 != 1)
      {
        v14 = *v12;
        if (*(v11 - 1) < *v12)
          v14 = *(v11 - 1);
        *(v10 - 1) = v14;
        if (a7 != 2)
        {
          v15 = v12[1];
          if (*v11 < v15)
            v15 = *v11;
          *v10 = v15;
        }
      }
      v10 = (_DWORD *)((char *)v10 + a6);
      v11 = (int *)((char *)v11 + a4);
      v12 = (int *)((char *)v12 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001E05F4(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v8;
  int v9;
  unint64_t v10;
  float *v11;
  float *v12;
  float *v13;
  float v14;
  float v15;
  float v16;
  uint64_t v17;
  float *v18;
  float *v19;
  float *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  float *v27;
  float *v28;
  float *v29;
  float32x4_t v30;
  float *v31;
  float *v32;
  float *v33;
  float32x4_t v34;
  float32x4_t *v35;
  uint64_t v36;
  float v37;
  float v38;
  float v39;
  float v40;
  unint64_t v41;
  uint64_t v42;
  float v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int8x16_t v49;
  int8x16_t *v50;
  float v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  BOOL v68;
  uint64_t v70;
  uint64_t v71;
  const float *v72;
  const float *v73;
  float *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  float v81;
  unint64_t v82;
  float v83;
  unint64_t v84;
  unint64_t v85;
  float v86;
  float v87;
  unint64_t v88;
  float v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  int8x16_t v93;
  int8x16_t *v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  float32x4x4_t v102;
  float32x4x4_t v103;
  float32x4x4_t v104;

  if (!a8)
    return result;
  v8 = a5;
  v9 = a8 - 1;
  v10 = (a7 - 4);
  if (a7 >= 8)
  {
    v17 = 0;
    v18 = (float *)(a5 + 32);
    v19 = (float *)(a3 + 32);
    v20 = (float *)(result + 32);
    v21 = result;
    v22 = a3;
    v23 = a5;
    while (1)
    {
      v24 = 0;
      v25 = 0;
      v26 = v9;
      v27 = v20;
      v28 = v19;
      v29 = v18;
      do
      {
        v30 = vminq_f32(*(float32x4_t *)(v21 + v24), *(float32x4_t *)(v22 + v24));
        v31 = v29;
        v32 = v28;
        v33 = v27;
        v34 = vminq_f32(*(float32x4_t *)(v21 + v24 + 16), *(float32x4_t *)(v22 + v24 + 16));
        v35 = (float32x4_t *)(v23 + v24);
        v25 += 8;
        v24 += 32;
        *v35 = v30;
        v35[1] = v34;
        v29 += 8;
        v28 = v32 + 8;
        v27 += 8;
      }
      while (v25 <= (a7 - 8));
      if ((int)v10 >= (int)v25)
        break;
      v25 = v25;
      if ((int)v25 < a7)
        goto LABEL_30;
LABEL_17:
      v21 += a2;
      v22 += a4;
      v23 += a6;
      v9 = v26 - 1;
      ++v17;
      v18 = (float *)((char *)v18 + a6);
      v19 = (float *)((char *)v19 + a4);
      v20 = (float *)((char *)v20 + a2);
      if (!v26)
        return result;
    }
    v36 = 0;
    do
    {
      v37 = *v33;
      v33 += 4;
      v38 = v37;
      v39 = *v32;
      v32 += 4;
      v40 = v39;
      if (v39 < v38)
        v38 = v40;
      v41 = (unint64_t)(((_DWORD)v25 + (_DWORD)v36) & 0xFFFFFFFC) >> 2;
      v42 = (16 * (v41 & 0x3FFFFFFF)) | 4;
      v43 = *(float *)(v21 + v42);
      if (*(float *)(v22 + v42) < v43)
        v43 = *(float *)(v22 + v42);
      *v31 = v38;
      v31 += 4;
      *(float *)(v23 + v42) = v43;
      v44 = (16 * (v41 & 0x3FFFFFFF)) | 8;
      *(int8x8_t *)(v23 + v44) = vbsl_s8((int8x8_t)vcgt_f32(*(float32x2_t *)(v21 + v44), *(float32x2_t *)(v22 + v44)), *(int8x8_t *)(v22 + v44), *(int8x8_t *)(v21 + v44));
      v36 += 4;
    }
    while (v25 + v36 <= v10);
    v25 = (v25 + v36);
    if ((int)v25 >= a7)
      goto LABEL_17;
LABEL_30:
    v45 = a7 - v25;
    if (v45 < 0xC)
      goto LABEL_86;
    v46 = 4 * v25;
    v47 = v8 + v17 * a6 + 4 * v25;
    if (v47 - (result + v17 * a2 + 4 * v25) < 0x20)
      goto LABEL_86;
    if (v47 - (a3 + v17 * a4 + v46) < 0x20)
      goto LABEL_86;
    v25 += v45 & 0xFFFFFFFFFFFFFFF8;
    v48 = v45 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      v49 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v21 + v46 + 16), *(float32x4_t *)(v22 + v46 + 16)), *(int8x16_t *)(v22 + v46 + 16), *(int8x16_t *)(v21 + v46 + 16));
      v50 = (int8x16_t *)(v23 + v46);
      *v50 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v21 + v46), *(float32x4_t *)(v22 + v46)), *(int8x16_t *)(v22 + v46), *(int8x16_t *)(v21 + v46));
      v50[1] = v49;
      v46 += 32;
      v48 -= 8;
    }
    while (v48);
    if (v45 != (v45 & 0xFFFFFFFFFFFFFFF8))
    {
LABEL_86:
      do
      {
        v51 = *(float *)(v21 + 4 * v25);
        if (*(float *)(v22 + 4 * v25) < v51)
          v51 = *(float *)(v22 + 4 * v25);
        *(float *)(v23 + 4 * v25++) = v51;
      }
      while (a7 != v25);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    v52 = 0;
    v99 = a5 + 16;
    v98 = result + 16;
    v95 = a3 + 16;
    v53 = (v10 & 0xFFFFFFFC) + 5;
    if (v53 <= a7)
      v53 = a7;
    v54 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    v97 = (v10 >> 2) + 1;
    v100 = v53 - (v10 & 0xFFFFFFFC) - 4;
    v96 = v100 & 0xFFFFFFFFFFFFFFF8;
    v55 = result;
    v56 = a3;
    v101 = result;
    v57 = a3;
    v58 = a5;
    while (1)
    {
      v59 = v9;
      v60 = v52 * a6;
      v61 = v52 * a2;
      v62 = v52 * a4;
      if (v10 >= 0xC)
      {
        v63 = 0;
        v66 = v8 + v54 + v60;
        v68 = a5 < a3 + v54 + v62 && v56 < v66;
        if (v55 >= v66 || a5 >= result + v54 + v61)
        {
          v65 = 4;
          v64 = 0;
          if (!v68)
          {
            v70 = 0;
            v71 = v97 & 0x7FFFFFFC;
            do
            {
              v72 = (const float *)(v55 + v70);
              v102 = vld4q_f32(v72);
              v73 = (const float *)(v56 + v70);
              v103 = vld4q_f32(v73);
              v104.val[0] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v102.val[0], v103.val[0]), (int8x16_t)v103.val[0], (int8x16_t)v102.val[0]);
              v104.val[1] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v102.val[1], v103.val[1]), (int8x16_t)v103.val[1], (int8x16_t)v102.val[1]);
              v104.val[2] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v102.val[2], v103.val[2]), (int8x16_t)v103.val[2], (int8x16_t)v102.val[2]);
              v104.val[3] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v102.val[3], v103.val[3]), (int8x16_t)v103.val[3], (int8x16_t)v102.val[3]);
              v74 = (float *)(a5 + v70);
              vst4q_f32(v74, v104);
              v70 += 64;
              v71 -= 4;
            }
            while (v71);
            v63 = v97 & 0x7FFFFFFC;
            v65 = (16 * ((v63 >> 2) & 0x1FFFFFFF)) | 4;
            v75 = 4 * v63;
            v64 = v75;
            v76 = v63 - 1;
            if (v97 == v63)
              goto LABEL_71;
          }
        }
        else
        {
          v65 = 4;
          v64 = 0;
        }
      }
      else
      {
        v63 = 0;
        v64 = 0;
        v65 = 4;
      }
      v76 = v63 - 1;
      v75 = v65 - 4;
      v77 = 4 * v64;
      v78 = v56;
      v79 = v55;
      v80 = a5;
      do
      {
        v81 = *(float *)(v79 + v77);
        if (*(float *)(v78 + v77) < v81)
          v81 = *(float *)(v78 + v77);
        v82 = v79 + v77;
        v83 = *(float *)(v79 + v77 + 4);
        v84 = v78 + v77;
        if (*(float *)(v78 + v77 + 4) < v83)
          v83 = *(float *)(v78 + v77 + 4);
        *(float *)(v80 + v77) = v81;
        v85 = v80 + v77;
        *(float *)(v80 + v77 + 4) = v83;
        v86 = *(float *)(v82 + 8);
        v87 = *(float *)(v82 + 12);
        if (*(float *)(v84 + 8) < v86)
          v86 = *(float *)(v84 + 8);
        if (*(float *)(v84 + 12) < v87)
          v87 = *(float *)(v84 + 12);
        v64 += 4;
        ++v76;
        v75 += 4;
        *(float *)(v85 + 8) = v86;
        *(float *)(v85 + 12) = v87;
        v80 += 16;
        v79 += 16;
        v78 += 16;
      }
      while (v64 <= v10);
LABEL_71:
      if ((int)v64 < a7)
      {
        if (v100 < 0xC
          || (v90 = 16 * v76 + v99 + v60, v90 - (16 * v76 + v98 + v61) < 0x20)
          || v90 - (16 * v76 + v95 + v62) < 0x20)
        {
          v88 = v75;
          do
          {
LABEL_74:
            v89 = *(float *)(v55 + 4 * v88);
            if (*(float *)(v56 + 4 * v88) < v89)
              v89 = *(float *)(v56 + 4 * v88);
            *(float *)(a5 + 4 * v88++) = v89;
          }
          while (v88 < a7);
          goto LABEL_43;
        }
        v91 = v100 & 0xFFFFFFFFFFFFFFF8;
        v88 = v75 + v96;
        v92 = 4 * v75;
        do
        {
          v93 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v55 + v92 + 16), *(float32x4_t *)(v56 + v92 + 16)), *(int8x16_t *)(v56 + v92 + 16), *(int8x16_t *)(v55 + v92 + 16));
          v94 = (int8x16_t *)(a5 + v92);
          *v94 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v55 + v92), *(float32x4_t *)(v56 + v92)), *(int8x16_t *)(v56 + v92), *(int8x16_t *)(v55 + v92));
          v94[1] = v93;
          v92 += 32;
          v91 -= 8;
        }
        while (v91);
        if (v100 != v96)
          goto LABEL_74;
      }
LABEL_43:
      v55 += a2;
      v56 += a4;
      a5 += a6;
      v9 = v59 - 1;
      ++v52;
      result = v101;
      a3 = v57;
      v8 = v58;
      if (!v59)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v11 = (float *)(a5 + 8);
    v12 = (float *)(a3 + 8);
    v13 = (float *)(result + 4);
    do
    {
      v14 = *(v13 - 1);
      if (*(v12 - 2) < v14)
        v14 = *(v12 - 2);
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        v15 = *v13;
        if (*(v12 - 1) < *v13)
          v15 = *(v12 - 1);
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          v16 = v13[1];
          if (*v12 < v16)
            v16 = *v12;
          *v11 = v16;
        }
      }
      v11 = (float *)((char *)v11 + a6);
      v12 = (float *)((char *)v12 + a4);
      v13 = (float *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001E0BB4(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  double *v11;
  double *v12;
  double *v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  BOOL v31;
  uint64_t v33;
  uint64_t v34;
  const double *v35;
  const double *v36;
  double *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  double v42;
  unint64_t v43;
  double v44;
  unint64_t v45;
  unint64_t v46;
  double v47;
  double v48;
  double v49;
  double v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int8x16_t v54;
  int8x16_t *v55;
  double v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  float64x2x4_t v63;
  float64x2x4_t v64;
  float64x2x4_t v65;

  if (!a8)
    return result;
  v8 = a3;
  v9 = result;
  v10 = (a7 - 4);
  if (a7 >= 4)
  {
    v17 = 0;
    v18 = a8 - 1;
    v19 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    v61 = v19 + a5 + 32;
    v60 = v19 + result + 32;
    v58 = v19 + a3 + 32;
    v20 = (v10 & 0xFFFFFFFC) + 5;
    if (v20 <= a7)
      v20 = a7;
    v21 = 32 * (v10 >> 2) + 32;
    v59 = (v10 >> 2) + 1;
    v62 = v20 - (v10 & 0xFFFFFFFC) - 4;
    v57 = v20 & 3;
    v22 = a5 + 16;
    v23 = a5;
    while (1)
    {
      v24 = v18;
      v25 = v17 * a6;
      v26 = v17 * a2;
      v27 = v17 * a4;
      if (v10 < 4)
        break;
      v28 = 0;
      v29 = a5 + v21 + v25;
      v31 = v23 < v8 + v21 + v27 && a3 < v29;
      if (result < v29 && v23 < v9 + v21 + v26)
        goto LABEL_36;
      if (v31)
        goto LABEL_36;
      v33 = 0;
      v34 = v59 & 0x7FFFFFFE;
      do
      {
        v35 = (const double *)(result + v33);
        v63 = vld4q_f64(v35);
        v36 = (const double *)(a3 + v33);
        v64 = vld4q_f64(v36);
        v65.val[0] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v63.val[0], v64.val[0]), (int8x16_t)v64.val[0], (int8x16_t)v63.val[0]);
        v65.val[1] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v63.val[1], v64.val[1]), (int8x16_t)v64.val[1], (int8x16_t)v63.val[1]);
        v65.val[2] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v63.val[2], v64.val[2]), (int8x16_t)v64.val[2], (int8x16_t)v63.val[2]);
        v65.val[3] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v63.val[3], v64.val[3]), (int8x16_t)v64.val[3], (int8x16_t)v63.val[3]);
        v37 = (double *)(v23 + v33);
        vst4q_f64(v37, v65);
        v33 += 64;
        v34 -= 2;
      }
      while (v34);
      v28 = 4 * (v59 & 0x7FFFFFFE);
      if (v59 != (v59 & 0x7FFFFFFE))
        goto LABEL_36;
LABEL_47:
      if ((int)v28 < a7)
      {
        v51 = (v10 & 0xFFFFFFFC) + 4;
        if (v62 < 6)
          goto LABEL_60;
        v51 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v61 + v25 - (v60 + v26)) < 0x20)
          goto LABEL_60;
        v51 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v61 + v25 - (v58 + v27)) < 0x20)
          goto LABEL_60;
        v52 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        v53 = v62 - v57;
        do
        {
          v54 = vbslq_s8((int8x16_t)vcgtq_f64(*(float64x2_t *)(result + v52 + 48), *(float64x2_t *)(a3 + v52 + 48)), *(int8x16_t *)(a3 + v52 + 48), *(int8x16_t *)(result + v52 + 48));
          v55 = (int8x16_t *)(v23 + v52);
          v55[2] = vbslq_s8((int8x16_t)vcgtq_f64(*(float64x2_t *)(result + v52 + 32), *(float64x2_t *)(a3 + v52 + 32)), *(int8x16_t *)(a3 + v52 + 32), *(int8x16_t *)(result + v52 + 32));
          v55[3] = v54;
          v52 += 32;
          v53 -= 4;
        }
        while (v53);
        v51 = (v10 & 0xFFFFFFFC) + 4 + v62 - v57;
        if (v57)
        {
LABEL_60:
          do
          {
            v56 = *(double *)(result + 8 * v51);
            if (*(double *)(a3 + 8 * v51) < v56)
              v56 = *(double *)(a3 + 8 * v51);
            *(double *)(v23 + 8 * v51++) = v56;
          }
          while (v51 < a7);
        }
      }
      result += a2;
      a3 += a4;
      v23 += a6;
      v18 = v24 - 1;
      ++v17;
      v22 += a6;
      if (!v24)
        return result;
    }
    v28 = 0;
LABEL_36:
    v38 = 8 * v28;
    v39 = v22;
    v40 = a3;
    v41 = result;
    do
    {
      v42 = *(double *)(v41 + v38);
      if (*(double *)(v40 + v38) < v42)
        v42 = *(double *)(v40 + v38);
      v43 = v41 + v38;
      v44 = *(double *)(v41 + v38 + 8);
      v45 = v40 + v38;
      if (*(double *)(v40 + v38 + 8) < v44)
        v44 = *(double *)(v40 + v38 + 8);
      v46 = v39 + v38;
      *(double *)(v46 - 16) = v42;
      *(double *)(v46 - 8) = v44;
      v47 = *(double *)(v43 + 16);
      v48 = *(double *)(v43 + 24);
      v49 = *(double *)(v45 + 24);
      if (*(double *)(v45 + 16) < v47)
        v47 = *(double *)(v45 + 16);
      *(double *)(v39 + v38) = v47;
      v28 += 4;
      if (v49 >= v48)
        v50 = v48;
      else
        v50 = v49;
      *(double *)(v46 + 8) = v50;
      v41 += 32;
      v40 += 32;
      v39 += 32;
    }
    while (v28 <= v10);
    goto LABEL_47;
  }
  if (a7 >= 1)
  {
    v11 = (double *)(a5 + 16);
    v12 = (double *)(a3 + 16);
    v13 = (double *)(result + 8);
    do
    {
      v14 = *(v13 - 1);
      if (*(v12 - 2) < v14)
        v14 = *(v12 - 2);
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        v15 = *v13;
        if (*(v12 - 1) < *v13)
          v15 = *(v12 - 1);
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          v16 = v13[1];
          if (*v12 < v16)
            v16 = *v12;
          *v11 = v16;
        }
      }
      v11 = (double *)((char *)v11 + a6);
      v12 = (double *)((char *)v12 + a4);
      v13 = (double *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1001E0F38(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint8x16_t v15;
  uint8x16_t *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  char v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  char v38;
  unsigned int v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  char v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint8x16_t v50;
  uint8x16_t *v51;
  unint64_t v52;
  uint64_t v53;

  if (a8)
  {
    v8 = 0;
    v9 = a7 - 4;
    v10 = result;
    v11 = a3;
    v12 = a5;
    do
    {
      if (a7 >= 32)
      {
        v14 = 16;
        do
        {
          v15 = vabdq_u8(*(uint8x16_t *)(v10 + v14), *(uint8x16_t *)(v11 + v14));
          v16 = (uint8x16_t *)(v12 + v14);
          v16[-1] = vabdq_u8(*(uint8x16_t *)(v10 + v14 - 16), *(uint8x16_t *)(v11 + v14 - 16));
          *v16 = v15;
          v17 = v14 + 16;
          v14 += 32;
        }
        while (v17 <= a7 - 32);
        v13 = (v14 - 16);
        if ((int)v13 > (int)v9)
          goto LABEL_22;
      }
      else
      {
        v13 = 0;
        if ((int)v9 < 0)
          goto LABEL_22;
      }
      v18 = v13 << 32;
      do
      {
        v19 = *(unsigned __int8 *)(v10 + v13);
        v20 = *(unsigned __int8 *)(v11 + v13);
        v21 = v20 - v19;
        v22 = v19 >= v20;
        v23 = v19 - v20;
        if (v23 == 0 || !v22)
          LOBYTE(v23) = v21;
        v24 = v18 >> 32;
        v25 = (v18 >> 32) | 1;
        v26 = *(unsigned __int8 *)(v10 + v25);
        v27 = *(unsigned __int8 *)(v11 + v25);
        v28 = v27 - v26;
        v22 = v26 >= v27;
        v29 = v26 - v27;
        if (v29 == 0 || !v22)
          LOBYTE(v29) = v28;
        *(_BYTE *)(v12 + v13) = v23;
        *(_BYTE *)(v12 + v25) = v29;
        v30 = v24 | 2;
        v31 = *(unsigned __int8 *)(v10 + (v24 | 2));
        v32 = *(unsigned __int8 *)(v11 + (v24 | 2));
        v33 = v32 - v31;
        v22 = v31 >= v32;
        v34 = v31 - v32;
        if (v34 == 0 || !v22)
          LOBYTE(v34) = v33;
        v35 = v24 | 3;
        v36 = *(unsigned __int8 *)(v10 + v35);
        v37 = *(unsigned __int8 *)(v11 + v35);
        v38 = v37 - v36;
        v22 = v36 >= v37;
        v39 = v36 - v37;
        *(_BYTE *)(v12 + v30) = v34;
        if (v39 != 0 && v22)
          v40 = v39;
        else
          v40 = v38;
        *(_BYTE *)(v12 + v35) = v40;
        v13 += 4;
        v18 += 0x400000000;
      }
      while (v13 <= v9);
      v13 = v13;
LABEL_22:
      if ((int)v13 < a7)
      {
        v41 = a7 - v13;
        if (v41 < 8)
        {
          v42 = v13;
          goto LABEL_25;
        }
        if ((unint64_t)(a5 + v8 * a6 - (result + v8 * a2)) < 0x20)
        {
          v42 = v13;
          goto LABEL_25;
        }
        if ((unint64_t)(a5 + v8 * a6 - (a3 + v8 * a4)) < 0x20)
        {
          v42 = v13;
          goto LABEL_25;
        }
        if (v41 >= 0x20)
        {
          v47 = v41 & 0xFFFFFFFFFFFFFFE0;
          v48 = v13;
          v49 = v41 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v50 = vabdq_u8(*(uint8x16_t *)(v10 + v48 + 16), *(uint8x16_t *)(v11 + v48 + 16));
            v51 = (uint8x16_t *)(v12 + v48);
            *v51 = vabdq_u8(*(uint8x16_t *)(v10 + v48), *(uint8x16_t *)(v11 + v48));
            v51[1] = v50;
            v48 += 32;
            v49 -= 32;
          }
          while (v49);
          if (v41 == v47)
            goto LABEL_3;
          if ((v41 & 0x18) == 0)
          {
            v42 = v47 + v13;
            do
            {
LABEL_25:
              v43 = *(unsigned __int8 *)(v10 + v42);
              v44 = *(unsigned __int8 *)(v11 + v42);
              v45 = v44 - v43;
              v22 = v43 >= v44;
              v46 = v43 - v44;
              if (v46 == 0 || !v22)
                LOBYTE(v46) = v45;
              *(_BYTE *)(v12 + v42++) = v46;
            }
            while (a7 != v42);
            goto LABEL_3;
          }
        }
        else
        {
          v47 = 0;
        }
        v42 = (v41 & 0xFFFFFFFFFFFFFFF8) + v13;
        v52 = v47 - (v41 & 0xFFFFFFFFFFFFFFF8);
        v53 = v47 + v13;
        do
        {
          *(uint8x8_t *)(v12 + v53) = vabd_u8(*(uint8x8_t *)(v10 + v53), *(uint8x8_t *)(v11 + v53));
          v53 += 8;
          v52 += 8;
        }
        while (v52);
        if (v41 != (v41 & 0xFFFFFFFFFFFFFFF8))
          goto LABEL_25;
      }
LABEL_3:
      v10 += a2;
      v11 += a4;
      v12 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1001E119C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int32x4_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int8x16_t v16;
  int8x16_t *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint16x8_t v35;
  uint64_t v36;
  unint64_t v37;
  uint8x16_t v38;
  uint16x8_t v39;
  uint16x8_t v40;
  int v41;
  int8x16x2_t v42;
  int8x16x4_t v43;

  if (a8)
  {
    v8 = 0;
    v9 = a7 - 4;
    v10.i64[0] = 0x7F0000007FLL;
    v10.i64[1] = 0x7F0000007FLL;
    v11 = result;
    v12 = a3;
    v13 = a5;
    do
    {
      if (a7 >= 32)
      {
        v15 = 16;
        do
        {
          v16 = vqabsq_s8(vqsubq_s8(*(int8x16_t *)(v11 + v15), *(int8x16_t *)(v12 + v15)));
          v17 = (int8x16_t *)(v13 + v15);
          v17[-1] = vqabsq_s8(vqsubq_s8(*(int8x16_t *)(v11 + v15 - 16), *(int8x16_t *)(v12 + v15 - 16)));
          *v17 = v16;
          v18 = v15 + 16;
          v15 += 32;
        }
        while (v18 <= a7 - 32);
        v14 = (v15 - 16);
        if ((int)v14 > (int)v9)
        {
LABEL_6:
          if ((int)v14 >= a7)
            goto LABEL_3;
          goto LABEL_31;
        }
      }
      else
      {
        v14 = 0;
        if ((int)v9 < 0)
          goto LABEL_6;
      }
      v19 = v14 << 32;
      do
      {
        v20 = *(char *)(v11 + v14) - *(char *)(v12 + v14);
        if (v20 < 0)
          v20 = *(char *)(v12 + v14) - *(char *)(v11 + v14);
        v21 = v19 >> 32;
        v22 = (v19 >> 32) | 1;
        if (v20 >= 127)
          LOBYTE(v20) = 127;
        v23 = *(char *)(v11 + v22) - *(char *)(v12 + v22);
        if (v23 < 0)
          v23 = *(char *)(v12 + v22) - *(char *)(v11 + v22);
        if (v23 >= 127)
          LOBYTE(v23) = 127;
        *(_BYTE *)(v13 + v14) = v20;
        *(_BYTE *)(v13 + v22) = v23;
        v24 = v21 | 2;
        v25 = *(char *)(v11 + (v21 | 2)) - *(char *)(v12 + (v21 | 2));
        if (v25 < 0)
          v25 = *(char *)(v12 + (v21 | 2)) - *(char *)(v11 + (v21 | 2));
        v26 = v21 | 3;
        if (v25 >= 127)
          LOBYTE(v25) = 127;
        v27 = *(char *)(v11 + v26) - *(char *)(v12 + v26);
        if (v27 < 0)
          v27 = *(char *)(v12 + v26) - *(char *)(v11 + v26);
        *(_BYTE *)(v13 + v24) = v25;
        if (v27 >= 127)
          v28 = 127;
        else
          v28 = v27;
        *(_BYTE *)(v13 + v26) = v28;
        v14 += 4;
        v19 += 0x400000000;
      }
      while (v14 <= v9);
      v14 = v14;
      if ((int)v14 >= a7)
        goto LABEL_3;
LABEL_31:
      v29 = a7 - v14;
      if (v29 < 8)
      {
        v30 = v14;
        goto LABEL_49;
      }
      if ((unint64_t)(a5 + v8 * a6 - (result + v8 * a2)) < 0x10
        || (unint64_t)(a5 + v8 * a6 - (a3 + v8 * a4)) < 0x10)
      {
        v30 = v14;
        goto LABEL_49;
      }
      if (v29 >= 0x10)
      {
        v32 = v29 & 0xFFFFFFFFFFFFFFF0;
        v36 = v14;
        v37 = v29 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v38 = (uint8x16_t)vabdq_s8(*(int8x16_t *)(v11 + v36), *(int8x16_t *)(v12 + v36));
          v39 = vmovl_u8(*(uint8x8_t *)v38.i8);
          v40 = vmovl_high_u8(v38);
          v43.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v40), v10);
          v43.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v40.i8), v10);
          v43.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v39), v10);
          v43.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v39.i8), v10);
          *(int8x16_t *)(v13 + v36) = vqtbl4q_s8(v43, (int8x16_t)xmmword_1003BC960);
          v36 += 16;
          v37 -= 16;
        }
        while (v37);
        if (v29 == v32)
          goto LABEL_3;
        if ((v29 & 8) == 0)
        {
          v30 = v32 + v14;
          do
          {
LABEL_49:
            v41 = *(char *)(v11 + v30) - *(char *)(v12 + v30);
            if (v41 < 0)
              v41 = *(char *)(v12 + v30) - *(char *)(v11 + v30);
            if (v41 >= 127)
              LOBYTE(v41) = 127;
            *(_BYTE *)(v13 + v30++) = v41;
          }
          while (a7 != v30);
          goto LABEL_3;
        }
      }
      else
      {
        v32 = 0;
      }
      v30 = (v29 & 0xFFFFFFFFFFFFFFF8) + v14;
      v33 = v32 - (v29 & 0xFFFFFFFFFFFFFFF8);
      v34 = v32 + v14;
      do
      {
        v35 = (uint16x8_t)vabdl_s8(*(int8x8_t *)(v11 + v34), *(int8x8_t *)(v12 + v34));
        v42.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v35), v10);
        v42.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v35.i8), v10);
        *(_QWORD *)(v13 + v34) = vqtbl2q_s8(v42, (int8x16_t)xmmword_1003BC970).u64[0];
        v34 += 8;
        v33 += 8;
      }
      while (v33);
      if (v29 != (v29 & 0xFFFFFFFFFFFFFFF8))
        goto LABEL_49;
LABEL_3:
      v11 += a2;
      v12 += a4;
      v13 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1001E1458(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint16x8_t v15;
  uint16x8_t *v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  __int16 v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  __int16 v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  __int16 v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  __int16 v37;
  unsigned int v38;
  __int16 v39;
  unint64_t v40;
  unsigned int v41;
  unsigned int v42;
  __int16 v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint16x8_t v48;
  uint16x8_t *v49;

  if (a8)
  {
    v8 = 0;
    v9 = a7 - 4;
    v10 = result;
    v11 = a3;
    v12 = a5;
    do
    {
      if (a7 >= 16)
      {
        v13 = 0;
        v14 = 16;
        do
        {
          v15 = vabdq_u16(*(uint16x8_t *)(v10 + v14), *(uint16x8_t *)(v11 + v14));
          v16 = (uint16x8_t *)(v12 + v14);
          v16[-1] = vabdq_u16(*(uint16x8_t *)(v10 + v14 - 16), *(uint16x8_t *)(v11 + v14 - 16));
          *v16 = v15;
          v13 += 16;
          v14 += 32;
        }
        while (v13 <= a7 - 16);
        v13 = v13;
        if ((int)v13 <= (int)v9)
        {
LABEL_10:
          v17 = v13 << 32;
          do
          {
            v18 = *(unsigned __int16 *)(v10 + 2 * v13);
            v19 = *(unsigned __int16 *)(v11 + 2 * v13);
            v20 = v19 - v18;
            v21 = v18 >= v19;
            v22 = v18 - v19;
            if (v22 == 0 || !v21)
              LOWORD(v22) = v20;
            v23 = v17 >> 31;
            v24 = (v17 >> 31) | 2;
            v25 = *(unsigned __int16 *)(v10 + v24);
            v26 = *(unsigned __int16 *)(v11 + v24);
            v27 = v26 - v25;
            v21 = v25 >= v26;
            v28 = v25 - v26;
            if (v28 == 0 || !v21)
              LOWORD(v28) = v27;
            *(_WORD *)(v12 + 2 * v13) = v22;
            *(_WORD *)(v12 + v24) = v28;
            v29 = v23 | 4;
            v30 = *(unsigned __int16 *)(v10 + (v23 | 4));
            v31 = *(unsigned __int16 *)(v11 + (v23 | 4));
            v32 = v31 - v30;
            v21 = v30 >= v31;
            v33 = v30 - v31;
            if (v33 == 0 || !v21)
              LOWORD(v33) = v32;
            v34 = v23 | 6;
            v35 = *(unsigned __int16 *)(v10 + v34);
            v36 = *(unsigned __int16 *)(v11 + v34);
            v37 = v36 - v35;
            v21 = v35 >= v36;
            v38 = v35 - v36;
            *(_WORD *)(v12 + v29) = v33;
            if (v38 != 0 && v21)
              v39 = v38;
            else
              v39 = v37;
            *(_WORD *)(v12 + v34) = v39;
            v13 += 4;
            v17 += 0x400000000;
          }
          while (v13 <= v9);
          v13 = v13;
        }
      }
      else
      {
        v13 = 0;
        if ((int)v9 >= 0)
          goto LABEL_10;
      }
      if ((int)v13 < a7)
      {
        v40 = a7 - v13;
        if (v40 < 0x10)
          goto LABEL_36;
        v45 = 2 * v13;
        v46 = a5 + v8 * a6 + 2 * v13;
        if ((unint64_t)(v46 - (result + v8 * a2 + 2 * v13)) < 0x20)
          goto LABEL_36;
        if ((unint64_t)(v46 - (a3 + v8 * a4 + v45)) < 0x20)
          goto LABEL_36;
        v13 += v40 & 0xFFFFFFFFFFFFFFF0;
        v47 = v40 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v48 = vabdq_u16(*(uint16x8_t *)(v10 + v45 + 16), *(uint16x8_t *)(v11 + v45 + 16));
          v49 = (uint16x8_t *)(v12 + v45);
          *v49 = vabdq_u16(*(uint16x8_t *)(v10 + v45), *(uint16x8_t *)(v11 + v45));
          v49[1] = v48;
          v45 += 32;
          v47 -= 16;
        }
        while (v47);
        if (v40 != (v40 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_36:
          do
          {
            v41 = *(unsigned __int16 *)(v10 + 2 * v13);
            v42 = *(unsigned __int16 *)(v11 + 2 * v13);
            v43 = v42 - v41;
            v21 = v41 >= v42;
            v44 = v41 - v42;
            if (v44 == 0 || !v21)
              LOWORD(v44) = v43;
            *(_WORD *)(v12 + 2 * v13++) = v44;
          }
          while (a7 != v13);
        }
      }
      v10 += a2;
      v11 += a4;
      v12 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1001E166C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int32x4_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int16x8_t v16;
  int16x8_t *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  __int16 v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint16x8_t v33;
  uint16x8_t v34;
  int16x8_t *v35;

  if (a8)
  {
    v8 = 0;
    v9 = a7 - 4;
    v10.i64[0] = 0x7F0000007FLL;
    v10.i64[1] = 0x7F0000007FLL;
    v11 = result;
    v12 = a3;
    v13 = a5;
    do
    {
      if (a7 >= 16)
      {
        v14 = 0;
        v15 = 16;
        do
        {
          v16 = vqabsq_s16(vqsubq_s16(*(int16x8_t *)(v11 + v15), *(int16x8_t *)(v12 + v15)));
          v17 = (int16x8_t *)(v13 + v15);
          v17[-1] = vqabsq_s16(vqsubq_s16(*(int16x8_t *)(v11 + v15 - 16), *(int16x8_t *)(v12 + v15 - 16)));
          *v17 = v16;
          v14 += 16;
          v15 += 32;
        }
        while (v14 <= a7 - 16);
        v14 = v14;
        if ((int)v14 <= (int)v9)
        {
LABEL_10:
          v18 = v14 << 32;
          do
          {
            v19 = *(__int16 *)(v11 + 2 * v14) - *(__int16 *)(v12 + 2 * v14);
            if (v19 < 0)
              v19 = *(__int16 *)(v12 + 2 * v14) - *(__int16 *)(v11 + 2 * v14);
            v20 = v18 >> 31;
            v21 = (v18 >> 31) | 2;
            if (v19 >= 0x7FFF)
              LOWORD(v19) = 0x7FFF;
            v22 = *(__int16 *)(v11 + v21) - *(__int16 *)(v12 + v21);
            if (v22 < 0)
              v22 = *(__int16 *)(v12 + v21) - *(__int16 *)(v11 + v21);
            if (v22 >= 0x7FFF)
              LOWORD(v22) = 0x7FFF;
            *(_WORD *)(v13 + 2 * v14) = v19;
            *(_WORD *)(v13 + v21) = v22;
            v23 = v20 | 4;
            v24 = *(__int16 *)(v11 + (v20 | 4)) - *(__int16 *)(v12 + (v20 | 4));
            if (v24 < 0)
              v24 = *(__int16 *)(v12 + (v20 | 4)) - *(__int16 *)(v11 + (v20 | 4));
            v25 = v20 | 6;
            if (v24 >= 0x7FFF)
              LOWORD(v24) = 0x7FFF;
            v26 = *(__int16 *)(v11 + v25) - *(__int16 *)(v12 + v25);
            if (v26 < 0)
              v26 = *(__int16 *)(v12 + v25) - *(__int16 *)(v11 + v25);
            *(_WORD *)(v13 + v23) = v24;
            if (v26 >= 0x7FFF)
              v27 = 0x7FFF;
            else
              v27 = v26;
            *(_WORD *)(v13 + v25) = v27;
            v14 += 4;
            v18 += 0x400000000;
          }
          while (v14 <= v9);
          v14 = v14;
        }
      }
      else
      {
        v14 = 0;
        if ((int)v9 >= 0)
          goto LABEL_10;
      }
      if ((int)v14 < a7)
      {
        v28 = a7 - v14;
        if (v28 < 0x10)
          goto LABEL_46;
        v30 = 2 * v14;
        v31 = a5 + v8 * a6 + 2 * v14;
        if ((unint64_t)(v31 - (result + v8 * a2 + 2 * v14)) < 0x20)
          goto LABEL_46;
        if ((unint64_t)(v31 - (a3 + v8 * a4 + v30)) < 0x20)
          goto LABEL_46;
        v14 += v28 & 0xFFFFFFFFFFFFFFF0;
        v32 = v28 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v33 = (uint16x8_t)vabdq_s16(*(int16x8_t *)(v11 + v30), *(int16x8_t *)(v12 + v30));
          v34 = (uint16x8_t)vabdq_s16(*(int16x8_t *)(v11 + v30 + 16), *(int16x8_t *)(v12 + v30 + 16));
          v35 = (int16x8_t *)(v13 + v30);
          *v35 = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v33.i8), v10), (int16x8_t)vminq_s32((int32x4_t)vmovl_high_u16(v33), v10));
          v35[1] = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v34.i8), v10), (int16x8_t)vminq_s32((int32x4_t)vmovl_high_u16(v34), v10));
          v30 += 32;
          v32 -= 16;
        }
        while (v32);
        if (v28 != (v28 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_46:
          do
          {
            v29 = *(__int16 *)(v11 + 2 * v14) - *(__int16 *)(v12 + 2 * v14);
            if (v29 < 0)
              v29 = *(__int16 *)(v12 + 2 * v14) - *(__int16 *)(v11 + 2 * v14);
            if (v29 >= 0x7FFF)
              LOWORD(v29) = 0x7FFF;
            *(_WORD *)(v13 + 2 * v14++) = v29;
          }
          while (a7 != v14);
        }
      }
      v11 += a2;
      v12 += a4;
      v13 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1001E18C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int32x4_t v24;
  int32x4_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int32x4_t v44;
  int32x4_t *v45;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;

  v47 = result;
  if (a8)
  {
    v8 = 0;
    v9 = a7 - 8;
    v10 = a7 - 4;
    v11 = result;
    v12 = a5;
    v13 = a5 + 12;
    v14 = a3;
    v15 = a3 + 12;
    v16 = result + 12;
    v17 = a5 + 4;
    v18 = a3 + 4;
    v19 = result + 4;
    v20 = a7;
    v52 = a7;
    v50 = a4;
    v51 = a6;
    v49 = a2;
    do
    {
      if (a7 >= 8)
      {
        v22 = 0;
        v23 = 0;
        do
        {
          v24 = vabdq_s32(*(int32x4_t *)(v11 + v22 + 16), *(int32x4_t *)(v14 + v22 + 16));
          v25 = (int32x4_t *)(v12 + v22);
          *v25 = vabdq_s32(*(int32x4_t *)(v11 + v22), *(int32x4_t *)(v14 + v22));
          v25[1] = v24;
          v23 += 8;
          v22 += 32;
        }
        while (v23 <= v9);
        v21 = v23;
        if ((int)v23 <= (int)v10)
        {
LABEL_10:
          v53 = v8;
          v26 = 0;
          v27 = (4 * v21) & 0x3FFFFFFF0;
          v28 = v13 + v27;
          v29 = v15 + v27;
          v30 = v16 + v27;
          v31 = (4 * v21) & 0x3FFFFFFF8;
          v32 = v17 + v31;
          v33 = v18 + v31;
          v34 = v19 + v31;
          do
          {
            v35 = *(_DWORD *)(v11 + 4 * v21 + 4 * v26) - *(_DWORD *)(v14 + 4 * v21 + 4 * v26);
            if (v35 < 0)
              v35 = *(_DWORD *)(v14 + 4 * v21 + 4 * v26) - *(_DWORD *)(v11 + 4 * v21 + 4 * v26);
            v36 = *(_DWORD *)(v34 + 4 * v26) - *(_DWORD *)(v33 + 4 * v26);
            if (v36 < 0)
              v36 = *(_DWORD *)(v33 + 4 * v26) - *(_DWORD *)(v34 + 4 * v26);
            *(_DWORD *)(v12 + 4 * v21 + 4 * v26) = v35;
            *(_DWORD *)(v32 + 4 * v26) = v36;
            v37 = (4 * (v21 + v26)) | 8;
            v38 = *(_DWORD *)(v11 + v37) - *(_DWORD *)(v14 + v37);
            if (v38 < 0)
              v38 = *(_DWORD *)(v14 + v37) - *(_DWORD *)(v11 + v37);
            v39 = *(_DWORD *)(v30 + 4 * v26) - *(_DWORD *)(v29 + 4 * v26);
            *(_DWORD *)(v12 + v37) = v38;
            if (v39 < 0)
              v39 = -v39;
            *(_DWORD *)(v28 + 4 * v26) = v39;
            v26 += 4;
            result = v21 + v26;
          }
          while (v21 + v26 <= v10);
          v21 = (v21 + v26);
          a7 = v52;
          a4 = v50;
          a6 = v51;
          a2 = v49;
          v8 = v53;
        }
      }
      else
      {
        v21 = 0;
        if ((int)v10 >= 0)
          goto LABEL_10;
      }
      if ((int)v21 < a7)
      {
        v40 = v20 - v21;
        if ((unint64_t)(v20 - v21) < 8)
          goto LABEL_36;
        v41 = 4 * v21;
        v42 = a5 + v8 * a6 + 4 * v21;
        if ((unint64_t)(v42 - (v47 + v8 * a2 + 4 * v21)) < 0x20)
          goto LABEL_36;
        result = a3;
        if ((unint64_t)(v42 - (a3 + v8 * a4 + v41)) < 0x20)
          goto LABEL_36;
        v21 += v40 & 0xFFFFFFFFFFFFFFF8;
        v43 = v40 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          v44 = vabdq_s32(*(int32x4_t *)(v11 + v41 + 16), *(int32x4_t *)(v14 + v41 + 16));
          v45 = (int32x4_t *)(v12 + v41);
          *v45 = vabdq_s32(*(int32x4_t *)(v11 + v41), *(int32x4_t *)(v14 + v41));
          v45[1] = v44;
          v41 += 32;
          v43 -= 8;
        }
        while (v43);
        if (v40 != (v40 & 0xFFFFFFFFFFFFFFF8))
        {
LABEL_36:
          do
          {
            LODWORD(result) = *(_DWORD *)(v11 + 4 * v21) - *(_DWORD *)(v14 + 4 * v21);
            if ((int)result >= 0)
              result = result;
            else
              result = (*(_DWORD *)(v14 + 4 * v21) - *(_DWORD *)(v11 + 4 * v21));
            *(_DWORD *)(v12 + 4 * v21++) = result;
          }
          while (v20 != v21);
        }
      }
      v11 += a2;
      v14 += a4;
      v12 += a6;
      ++v8;
      v13 += a6;
      v15 += a4;
      v16 += a2;
      v17 += a6;
      v18 += a4;
      v19 += a2;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001E1B68(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v8;
  int v9;
  unint64_t v10;
  float *v11;
  float *v12;
  float *v13;
  uint64_t v14;
  float *v15;
  float *v16;
  float *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  float *v24;
  float *v25;
  float *v26;
  float32x4_t v27;
  float *v28;
  float *v29;
  float *v30;
  float32x4_t v31;
  float32x4_t *v32;
  uint64_t v33;
  float v34;
  float v35;
  float v36;
  unint64_t v37;
  uint64_t v38;
  float v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  float32x4_t v44;
  float32x4_t *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  BOOL v62;
  uint64_t v64;
  uint64_t v65;
  float32x4_t *v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  float v76;
  float v77;
  float *v78;
  float v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  float32x4_t v84;
  float32x4_t *v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;

  if (!a8)
    return result;
  v8 = a5;
  v9 = a8 - 1;
  v10 = (a7 - 4);
  if (a7 >= 8)
  {
    v14 = 0;
    v15 = (float *)(a5 + 32);
    v16 = (float *)(a3 + 32);
    v17 = (float *)(result + 32);
    v18 = result;
    v19 = a3;
    v20 = a5;
    while (1)
    {
      v21 = 0;
      v22 = 0;
      v23 = v9;
      v24 = v17;
      v25 = v16;
      v26 = v15;
      do
      {
        v27 = vabdq_f32(*(float32x4_t *)(v18 + v21), *(float32x4_t *)(v19 + v21));
        v28 = v26;
        v29 = v25;
        v30 = v24;
        v31 = vabdq_f32(*(float32x4_t *)(v18 + v21 + 16), *(float32x4_t *)(v19 + v21 + 16));
        v32 = (float32x4_t *)(v20 + v21);
        v22 += 8;
        v21 += 32;
        *v32 = v27;
        v32[1] = v31;
        v26 += 8;
        v25 = v29 + 8;
        v24 += 8;
      }
      while (v22 <= (a7 - 8));
      if ((int)v10 >= (int)v22)
      {
        v33 = 0;
        do
        {
          v34 = *v30;
          v30 += 4;
          v35 = v34;
          v36 = *v29;
          v29 += 4;
          v37 = (unint64_t)(((_DWORD)v22 + (_DWORD)v33) & 0xFFFFFFFC) >> 2;
          v38 = (16 * (v37 & 0x3FFFFFFF)) | 4;
          v39 = vabds_f32(*(float *)(v18 + v38), *(float *)(v19 + v38));
          *v28 = vabds_f32(v35, v36);
          v28 += 4;
          *(float *)(v20 + v38) = v39;
          *(float32x2_t *)(v20 + ((16 * (v37 & 0x3FFFFFFF)) | 8)) = vabd_f32(*(float32x2_t *)(v18+ ((16 * (v37 & 0x3FFFFFFF)) | 8)), *(float32x2_t *)(v19+ ((16 * (v37 & 0x3FFFFFFF)) | 8)));
          v33 += 4;
        }
        while (v22 + v33 <= v10);
        v22 = (v22 + v33);
        if ((int)v22 < a7)
        {
LABEL_20:
          v40 = a7 - v22;
          if (v40 < 0xC)
            goto LABEL_64;
          v41 = 4 * v22;
          v42 = v8 + v14 * a6 + 4 * v22;
          if (v42 - (result + v14 * a2 + 4 * v22) < 0x20)
            goto LABEL_64;
          if (v42 - (a3 + v14 * a4 + v41) < 0x20)
            goto LABEL_64;
          v22 += v40 & 0xFFFFFFFFFFFFFFF8;
          v43 = v40 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v44 = vabdq_f32(*(float32x4_t *)(v18 + v41 + 16), *(float32x4_t *)(v19 + v41 + 16));
            v45 = (float32x4_t *)(v20 + v41);
            *v45 = vabdq_f32(*(float32x4_t *)(v18 + v41), *(float32x4_t *)(v19 + v41));
            v45[1] = v44;
            v41 += 32;
            v43 -= 8;
          }
          while (v43);
          if (v40 != (v40 & 0xFFFFFFFFFFFFFFF8))
          {
LABEL_64:
            do
            {
              *(float *)(v20 + 4 * v22) = vabds_f32(*(float *)(v18 + 4 * v22), *(float *)(v19 + 4 * v22));
              ++v22;
            }
            while (a7 != v22);
          }
        }
      }
      else
      {
        v22 = v22;
        if ((int)v22 < a7)
          goto LABEL_20;
      }
      v18 += a2;
      v19 += a4;
      v20 += a6;
      v9 = v23 - 1;
      ++v14;
      v15 = (float *)((char *)v15 + a6);
      v16 = (float *)((char *)v16 + a4);
      v17 = (float *)((char *)v17 + a2);
      if (!v23)
        return result;
    }
  }
  if (a7 >= 4)
  {
    v46 = 0;
    v90 = a5 + 16;
    v89 = result + 16;
    v86 = a3 + 16;
    v47 = (v10 & 0xFFFFFFFC) + 5;
    if (v47 <= a7)
      v47 = a7;
    v48 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    v88 = (v10 >> 2) + 1;
    v91 = v47 - (v10 & 0xFFFFFFFC) - 4;
    v87 = v91 & 0xFFFFFFFFFFFFFFF8;
    v49 = result;
    v50 = a3;
    v92 = result;
    v51 = a3;
    v52 = a5;
    while (1)
    {
      v53 = v9;
      v54 = v46 * a6;
      v55 = v46 * a2;
      v56 = v46 * a4;
      if (v10 < 0xC)
        break;
      v57 = 0;
      v60 = v8 + v48 + v54;
      v62 = a5 < a3 + v48 + v56 && v50 < v60;
      if (v49 < v60 && a5 < result + v48 + v55)
      {
        v59 = 4;
        v58 = 0;
LABEL_49:
        v71 = v57 - 1;
        v70 = v59 - 4;
        v72 = 4 * v58;
        v73 = v50;
        v74 = v49;
        v75 = a5;
        do
        {
          v76 = *(float *)(v74 + v72 + 4);
          v77 = *(float *)(v73 + v72 + 4);
          *(float *)(v75 + v72) = vabds_f32(*(float *)(v74 + v72), *(float *)(v73 + v72));
          v78 = (float *)(v75 + v72);
          v78[1] = vabds_f32(v76, v77);
          v79 = vabds_f32(*(float *)(v74 + v72 + 12), *(float *)(v73 + v72 + 12));
          v58 += 4;
          ++v71;
          v70 += 4;
          v78[2] = vabds_f32(*(float *)(v74 + v72 + 8), *(float *)(v73 + v72 + 8));
          v78[3] = v79;
          v75 += 16;
          v74 += 16;
          v73 += 16;
        }
        while (v58 <= v10);
        goto LABEL_51;
      }
      v59 = 4;
      v58 = 0;
      if (v62)
        goto LABEL_49;
      v64 = 0;
      v65 = v88 & 0x7FFFFFFC;
      do
      {
        v66 = (float32x4_t *)(a5 + v64);
        v67 = vabdq_f32(*(float32x4_t *)(v49 + v64 + 16), *(float32x4_t *)(v50 + v64 + 16));
        v68 = vabdq_f32(*(float32x4_t *)(v49 + v64), *(float32x4_t *)(v50 + v64));
        v69 = vabdq_f32(*(float32x4_t *)(v49 + v64 + 48), *(float32x4_t *)(v50 + v64 + 48));
        v66[2] = vabdq_f32(*(float32x4_t *)(v49 + v64 + 32), *(float32x4_t *)(v50 + v64 + 32));
        v66[3] = v69;
        *v66 = v68;
        v66[1] = v67;
        v64 += 64;
        v65 -= 4;
      }
      while (v65);
      v57 = v88 & 0x7FFFFFFC;
      v59 = (16 * ((v57 >> 2) & 0x1FFFFFFF)) | 4;
      v70 = 4 * v57;
      v58 = v70;
      v71 = v57 - 1;
      if (v88 != v57)
        goto LABEL_49;
LABEL_51:
      if ((int)v58 < a7)
      {
        if (v91 < 0xC
          || (v81 = 16 * v71 + v90 + v54, v81 - (16 * v71 + v89 + v55) < 0x20)
          || v81 - (16 * v71 + v86 + v56) < 0x20)
        {
          v80 = v70;
        }
        else
        {
          v82 = v91 & 0xFFFFFFFFFFFFFFF8;
          v80 = v70 + v87;
          v83 = 4 * v70;
          do
          {
            v84 = vabdq_f32(*(float32x4_t *)(v49 + v83 + 16), *(float32x4_t *)(v50 + v83 + 16));
            v85 = (float32x4_t *)(a5 + v83);
            *v85 = vabdq_f32(*(float32x4_t *)(v49 + v83), *(float32x4_t *)(v50 + v83));
            v85[1] = v84;
            v83 += 32;
            v82 -= 8;
          }
          while (v82);
          if (v91 == v87)
            goto LABEL_31;
        }
        do
        {
          *(float *)(a5 + 4 * v80) = vabds_f32(*(float *)(v49 + 4 * v80), *(float *)(v50 + 4 * v80));
          ++v80;
        }
        while (v80 < a7);
      }
LABEL_31:
      v49 += a2;
      v50 += a4;
      a5 += a6;
      v9 = v53 - 1;
      ++v46;
      result = v92;
      a3 = v51;
      v8 = v52;
      if (!v53)
        return result;
    }
    v57 = 0;
    v58 = 0;
    v59 = 4;
    goto LABEL_49;
  }
  if (a7 >= 1)
  {
    v11 = (float *)(a5 + 8);
    v12 = (float *)(a3 + 8);
    v13 = (float *)(result + 4);
    do
    {
      *(v11 - 2) = vabds_f32(*(v13 - 1), *(v12 - 2));
      if (a7 != 1)
      {
        *(v11 - 1) = vabds_f32(*v13, *(v12 - 1));
        if (a7 != 2)
          *v11 = vabds_f32(v13[1], *v12);
      }
      v11 = (float *)((char *)v11 + a6);
      v12 = (float *)((char *)v12 + a4);
      v13 = (float *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001E20D8(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  double *v11;
  double *v12;
  double *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v28;
  uint64_t v30;
  uint64_t v31;
  float64x2_t *v32;
  float64x2_t v33;
  float64x2_t v34;
  float64x2_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  double v40;
  unint64_t v41;
  double v42;
  double v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  float64x2_t v47;
  float64x2_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  if (!a8)
    return result;
  v8 = a3;
  v9 = result;
  v10 = (a7 - 4);
  if (a7 >= 4)
  {
    v14 = 0;
    v15 = a8 - 1;
    v16 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    v53 = v16 + a5 + 32;
    v52 = v16 + result + 32;
    v50 = v16 + a3 + 32;
    v17 = (v10 & 0xFFFFFFFC) + 5;
    if (v17 <= a7)
      v17 = a7;
    v18 = 32 * (v10 >> 2) + 32;
    v51 = (v10 >> 2) + 1;
    v54 = v17 - (v10 & 0xFFFFFFFC) - 4;
    v49 = v17 & 3;
    v19 = a5 + 16;
    v20 = a5;
    while (1)
    {
      v21 = v15;
      v22 = v14 * a6;
      v23 = v14 * a2;
      v24 = v14 * a4;
      if (v10 >= 4)
      {
        v25 = 0;
        v26 = a5 + v18 + v22;
        v28 = v20 < v8 + v18 + v24 && a3 < v26;
        if ((result >= v26 || v20 >= v9 + v18 + v23) && !v28)
        {
          v30 = 0;
          v31 = v51 & 0x7FFFFFFE;
          do
          {
            v32 = (float64x2_t *)(v20 + v30);
            v33 = vabdq_f64(*(float64x2_t *)(result + v30 + 16), *(float64x2_t *)(a3 + v30 + 16));
            v34 = vabdq_f64(*(float64x2_t *)(result + v30), *(float64x2_t *)(a3 + v30));
            v35 = vabdq_f64(*(float64x2_t *)(result + v30 + 48), *(float64x2_t *)(a3 + v30 + 48));
            v32[2] = vabdq_f64(*(float64x2_t *)(result + v30 + 32), *(float64x2_t *)(a3 + v30 + 32));
            v32[3] = v35;
            *v32 = v34;
            v32[1] = v33;
            v30 += 64;
            v31 -= 2;
          }
          while (v31);
          v25 = 4 * (v51 & 0x7FFFFFFE);
          if (v51 == (v51 & 0x7FFFFFFE))
            goto LABEL_32;
        }
      }
      else
      {
        v25 = 0;
      }
      v36 = 8 * v25;
      v37 = v19;
      v38 = a3;
      v39 = result;
      do
      {
        v40 = vabdd_f64(*(double *)(v39 + v36 + 8), *(double *)(v38 + v36 + 8));
        v41 = v37 + v36;
        *(double *)(v41 - 16) = vabdd_f64(*(double *)(v39 + v36), *(double *)(v38 + v36));
        *(double *)(v41 - 8) = v40;
        v42 = *(double *)(v39 + v36 + 24);
        v43 = *(double *)(v38 + v36 + 24);
        *(double *)(v37 + v36) = vabdd_f64(*(double *)(v39 + v36 + 16), *(double *)(v38 + v36 + 16));
        v25 += 4;
        *(double *)(v41 + 8) = vabdd_f64(v42, v43);
        v39 += 32;
        v38 += 32;
        v37 += 32;
      }
      while (v25 <= v10);
LABEL_32:
      if ((int)v25 < a7)
      {
        v44 = (v10 & 0xFFFFFFFC) + 4;
        if (v54 < 6)
          goto LABEL_43;
        v44 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v53 + v22 - (v52 + v23)) < 0x20)
          goto LABEL_43;
        v44 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v53 + v22 - (v50 + v24)) < 0x20)
          goto LABEL_43;
        v45 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        v46 = v54 - v49;
        do
        {
          v47 = vabdq_f64(*(float64x2_t *)(result + v45 + 48), *(float64x2_t *)(a3 + v45 + 48));
          v48 = (float64x2_t *)(v20 + v45);
          v48[2] = vabdq_f64(*(float64x2_t *)(result + v45 + 32), *(float64x2_t *)(a3 + v45 + 32));
          v48[3] = v47;
          v45 += 32;
          v46 -= 4;
        }
        while (v46);
        v44 = (v10 & 0xFFFFFFFC) + 4 + v54 - v49;
        if (v49)
        {
LABEL_43:
          do
          {
            *(double *)(v20 + 8 * v44) = vabdd_f64(*(double *)(result + 8 * v44), *(double *)(a3 + 8 * v44));
            ++v44;
          }
          while (v44 < a7);
        }
      }
      result += a2;
      a3 += a4;
      v20 += a6;
      v15 = v21 - 1;
      ++v14;
      v19 += a6;
      if (!v21)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v11 = (double *)(a5 + 16);
    v12 = (double *)(a3 + 16);
    v13 = (double *)(result + 8);
    do
    {
      *(v11 - 2) = vabdd_f64(*(v13 - 1), *(v12 - 2));
      if (a7 != 1)
      {
        *(v11 - 1) = vabdd_f64(*v13, *(v12 - 1));
        if (a7 != 2)
          *v11 = vabdd_f64(v13[1], *v12);
      }
      v11 = (double *)((char *)v11 + a6);
      v12 = (double *)((char *)v12 + a4);
      v13 = (double *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001E2420(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int8x16_t *v38;
  uint64_t v39;
  int8x16_t v40;
  unint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int8x16_t v55;
  int8x16_t *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char v76;
  _BYTE *v77;
  char v78;
  unint64_t v79;
  unint64_t v80;
  BOOL v82;
  uint64_t v84;
  uint64_t v85;
  int8x16_t v86;
  int8x16_t v87;
  int8x16_t v88;
  int8x16_t *v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  int8x16_t v93;
  int8x16_t *v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v102;
  uint64_t v104;

  v102 = result;
  if (!a8)
    return result;
  v8 = a6;
  v9 = a4;
  v10 = a8 - 1;
  v11 = (a7 - 4);
  v12 = (a7 - 32);
  v104 = a2;
  if ((int)a7 >= 32)
  {
    v16 = 0;
    v18 = a3;
    v17 = result;
    v19 = result + 32;
    v20 = (char *)(a3 + 32);
    v21 = a5;
    v22 = a5 + 32;
    v23 = a7;
    while (1)
    {
      v24 = a7;
      v25 = v10;
      v26 = a5 + v16 * v8;
      v27 = 0x2000000000;
      v28 = 32;
      v29 = v102 + v16 * a2;
      v30 = v22;
      v31 = v20;
      v32 = (char *)v19;
      v33 = 16;
      v34 = a3 + v16 * v9;
      do
      {
        v35 = v27;
        v36 = v32;
        v37 = v31;
        result = v30;
        v38 = (int8x16_t *)(v21 + v33);
        v39 = v33 + 32;
        v40 = vandq_s8(*(int8x16_t *)(v18 + v33), *(int8x16_t *)(v17 + v33));
        v41 = v33 + 16;
        v27 += 0x2000000000;
        v32 += 32;
        v31 += 32;
        v38[-1] = vandq_s8(*(int8x16_t *)(v18 + v33 - 16), *(int8x16_t *)(v17 + v33 - 16));
        *v38 = v40;
        v30 = result + 32;
        v28 += 32;
        v33 += 32;
      }
      while (v41 <= v12);
      v42 = v39 - 16;
      if ((int)v11 >= (int)v39 - 16)
      {
        do
        {
          v44 = *v36;
          v36 += 4;
          v43 = v44;
          v45 = *v37;
          v37 += 4;
          v46 = (v35 >> 32) | 1;
          v47 = *(_BYTE *)(v18 + v46) & *(_BYTE *)(v17 + v46);
          *(_BYTE *)result = v45 & v43;
          result += 4;
          *(_BYTE *)(v21 + v46) = v47;
          v48 = (v35 >> 32) | 3;
          v49 = *(_BYTE *)(v17 + v48);
          v50 = *(_BYTE *)(v18 + v48);
          *(_BYTE *)(v21 + ((v35 >> 32) | 2)) = *(_BYTE *)(v18 + ((v35 >> 32) | 2)) & *(_BYTE *)(v17 + ((v35 >> 32) | 2));
          *(_BYTE *)(v21 + v48) = v50 & v49;
          v42 += 4;
          v35 += 0x400000000;
        }
        while (v42 <= v11);
      }
      a7 = v24;
      v9 = a4;
      if ((int)v42 >= (int)v24)
        goto LABEL_11;
      v51 = v23 - v42;
      if (v51 >= 8)
      {
        if (v26 - v29 < 0x20)
        {
          v52 = v42;
        }
        else if (v26 - v34 < 0x20)
        {
          v52 = v42;
        }
        else
        {
          if (v51 < 0x20)
          {
            v53 = 0;
LABEL_31:
            v52 = (v51 & 0xFFFFFFFFFFFFFFF8) + v42;
            result = v53 - (v51 & 0xFFFFFFFFFFFFFFF8);
            v57 = v53 + v42;
            do
            {
              *(int8x8_t *)(v21 + v57) = vand_s8(*(int8x8_t *)(v18 + v57), *(int8x8_t *)(v17 + v57));
              v57 += 8;
              result += 8;
            }
            while (result);
            if (v51 == (v51 & 0xFFFFFFFFFFFFFFF8))
              goto LABEL_11;
            goto LABEL_19;
          }
          v53 = v51 & 0xFFFFFFFFFFFFFFE0;
          result = v42;
          v54 = v51 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v55 = vandq_s8(*(int8x16_t *)(v18 + result + 16), *(int8x16_t *)(v17 + result + 16));
            v56 = (int8x16_t *)(v21 + result);
            *v56 = vandq_s8(*(int8x16_t *)(v18 + result), *(int8x16_t *)(v17 + result));
            v56[1] = v55;
            result += 32;
            v54 -= 32;
          }
          while (v54);
          if (v51 == v53)
            goto LABEL_11;
          if ((v51 & 0x18) != 0)
            goto LABEL_31;
          v52 = v53 + v42;
        }
      }
      else
      {
        v52 = v42;
      }
      do
      {
LABEL_19:
        result = (*(_BYTE *)(v18 + v52) & *(_BYTE *)(v17 + v52));
        *(_BYTE *)(v21 + v52) = *(_BYTE *)(v18 + v52) & *(_BYTE *)(v17 + v52);
        ++v52;
      }
      while (v23 != v52);
LABEL_11:
      a2 = v104;
      v17 += v104;
      v18 += a4;
      v8 = a6;
      v21 += a6;
      v10 = v25 - 1;
      ++v16;
      v19 += v104;
      v20 += a4;
      v22 += a6;
      if (!v25)
        return result;
    }
  }
  if ((int)a7 >= 4)
  {
    v58 = 0;
    v60 = a5;
    v59 = a3;
    v61 = result;
    v62 = result + 4;
    v98 = a3 + 4;
    v63 = v11 & 0xFFFFFFFC;
    v64 = v63 + 5;
    if (v63 + 5 <= (unint64_t)a7)
      v64 = a7;
    v65 = v64 - v63 - 4;
    v66 = v63 + 4;
    v67 = (v11 >> 2) + 1;
    v97 = v65 & 0xFFFFFFFFFFFFFFE0;
    v96 = v65 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      v68 = v10;
      v69 = v58 * v8;
      v70 = v58 * a2;
      v71 = v58 * v9;
      if (v11 < 0x3C)
        break;
      v72 = 0;
      v80 = a5 + v66 + v69;
      v82 = v60 < a3 + v66 + v71 && v59 < v80;
      result = 4;
      v73 = 0;
      if (v61 < v80 && v60 < v102 + v66 + v70)
        goto LABEL_42;
      if (v82)
        goto LABEL_42;
      v84 = 0;
      v85 = v67 & 0x7FFFFFF0;
      do
      {
        v86 = vandq_s8(*(int8x16_t *)(v59 + v84 + 16), *(int8x16_t *)(v61 + v84 + 16));
        v87 = vandq_s8(*(int8x16_t *)(v59 + v84), *(int8x16_t *)(v61 + v84));
        v88 = vandq_s8(*(int8x16_t *)(v59 + v84 + 48), *(int8x16_t *)(v61 + v84 + 48));
        v89 = (int8x16_t *)(v60 + v84);
        v89[2] = vandq_s8(*(int8x16_t *)(v59 + v84 + 32), *(int8x16_t *)(v61 + v84 + 32));
        v89[3] = v88;
        *v89 = v87;
        v89[1] = v86;
        v84 += 64;
        v85 -= 16;
      }
      while (v85);
      v72 = v67 & 0x7FFFFFF0;
      result = (((v72 >> 4) & 0x7FFFFFF) << 6) | 4;
      v73 = 4 * v72;
      v74 = v72 - 1;
      v75 = v73;
      if (v67 != v72)
        goto LABEL_42;
LABEL_44:
      v9 = a4;
      if ((int)v73 < (int)a7)
      {
        if (v65 < 8
          || (v90 = 4 * v74 + a5 + 4 + v69, v90 - (4 * v74 + v62 + v70) < 0x20)
          || v90 - (4 * v74 + v98 + v71) < 0x20)
        {
          v79 = v75;
        }
        else if (v65 >= 0x20)
        {
          v92 = v75;
          result = v65 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v93 = vandq_s8(*(int8x16_t *)(v59 + v92 + 16), *(int8x16_t *)(v61 + v92 + 16));
            v94 = (int8x16_t *)(v60 + v92);
            *v94 = vandq_s8(*(int8x16_t *)(v59 + v92), *(int8x16_t *)(v61 + v92));
            v94[1] = v93;
            v92 += 32;
            result -= 32;
          }
          while (result);
          if (v65 == v97)
            goto LABEL_39;
          v91 = v65 & 0xFFFFFFFFFFFFFFE0;
          if ((v65 & 0x18) != 0)
            goto LABEL_73;
          v79 = v75 + v97;
        }
        else
        {
          v91 = 0;
LABEL_73:
          v79 = v75 + v96;
          v95 = v91 - (v65 & 0xFFFFFFFFFFFFFFF8);
          result = v91 + v75;
          do
          {
            *(int8x8_t *)(v60 + result) = vand_s8(*(int8x8_t *)(v59 + result), *(int8x8_t *)(v61 + result));
            result += 8;
            v95 += 8;
          }
          while (v95);
          if (v65 == v96)
            goto LABEL_39;
        }
        do
        {
          result = *(unsigned __int8 *)(v59 + v79);
          *(_BYTE *)(v60 + v79) = result & *(_BYTE *)(v61 + v79);
          ++v79;
        }
        while (v79 < a7);
      }
LABEL_39:
      a2 = v104;
      v61 += v104;
      v59 += a4;
      v60 += v8;
      v10 = v68 - 1;
      ++v58;
      if (!v68)
        return result;
    }
    v72 = 0;
    v73 = 0;
    result = 4;
LABEL_42:
    v74 = v72 - 1;
    v75 = result - 4;
    do
    {
      v76 = *(_BYTE *)(v59 + v73 + 1) & *(_BYTE *)(v61 + v73 + 1);
      v77 = (_BYTE *)(v60 + v73);
      *v77 = *(_BYTE *)(v59 + v73) & *(_BYTE *)(v61 + v73);
      v77[1] = v76;
      result = (*(_BYTE *)(v59 + v73 + 2) & *(_BYTE *)(v61 + v73 + 2));
      v78 = *(_BYTE *)(v59 + v73 + 3) & *(_BYTE *)(v61 + v73 + 3);
      v77[2] = *(_BYTE *)(v59 + v73 + 2) & *(_BYTE *)(v61 + v73 + 2);
      v77[3] = v78;
      v73 += 4;
      ++v74;
      v75 += 4;
    }
    while (v73 <= v11);
    goto LABEL_44;
  }
  if ((int)a7 >= 1)
  {
    v13 = (_BYTE *)(a5 + 2);
    v14 = (_BYTE *)(a3 + 2);
    v15 = (_BYTE *)(result + 1);
    do
    {
      *(v13 - 2) = *(v14 - 2) & *(v15 - 1);
      if ((_DWORD)a7 != 1)
      {
        *(v13 - 1) = *(v14 - 1) & *v15;
        if ((_DWORD)a7 != 2)
          *v13 = *v14 & v15[1];
      }
      v13 += a6;
      v14 += a4;
      v15 += a2;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1001E2A68(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int8x16_t *v38;
  uint64_t v39;
  int8x16_t v40;
  unint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  unint64_t v55;
  int8x16_t v56;
  int8x16_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char v77;
  _BYTE *v78;
  int v79;
  char v80;
  unint64_t v81;
  unint64_t v82;
  BOOL v84;
  uint64_t v86;
  uint64_t v87;
  int8x16_t v88;
  int8x16_t v89;
  int8x16_t v90;
  int8x16_t *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  int8x16_t v95;
  int8x16_t *v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v104;
  uint64_t v106;

  v104 = result;
  if (!a8)
    return result;
  v8 = a6;
  v9 = a4;
  v10 = a8 - 1;
  v11 = (a7 - 4);
  v12 = (a7 - 32);
  v106 = a2;
  if ((int)a7 >= 32)
  {
    v16 = 0;
    v18 = a3;
    v17 = result;
    v19 = result + 32;
    v20 = (char *)(a3 + 32);
    v21 = a5;
    v22 = a5 + 32;
    v23 = a7;
    while (1)
    {
      v24 = a7;
      v25 = v10;
      v26 = a5 + v16 * v8;
      v27 = 0x2000000000;
      v28 = 32;
      v29 = v104 + v16 * a2;
      v30 = v22;
      v31 = v20;
      v32 = (char *)v19;
      v33 = 16;
      v34 = a3 + v16 * v9;
      do
      {
        v35 = v27;
        v36 = v32;
        v37 = v31;
        result = v30;
        v38 = (int8x16_t *)(v21 + v33);
        v39 = v33 + 32;
        v40 = vorrq_s8(*(int8x16_t *)(v18 + v33), *(int8x16_t *)(v17 + v33));
        v41 = v33 + 16;
        v27 += 0x2000000000;
        v32 += 32;
        v31 += 32;
        v38[-1] = vorrq_s8(*(int8x16_t *)(v18 + v33 - 16), *(int8x16_t *)(v17 + v33 - 16));
        *v38 = v40;
        v30 = result + 32;
        v28 += 32;
        v33 += 32;
      }
      while (v41 <= v12);
      v42 = v39 - 16;
      if ((int)v11 >= (int)v39 - 16)
      {
        do
        {
          v44 = *v36;
          v36 += 4;
          v43 = v44;
          v45 = *v37;
          v37 += 4;
          v46 = (v35 >> 32) | 1;
          v47 = *(_BYTE *)(v18 + v46) | *(_BYTE *)(v17 + v46);
          *(_BYTE *)result = v45 | v43;
          result += 4;
          *(_BYTE *)(v21 + v46) = v47;
          v48 = (v35 >> 32) | 3;
          v49 = *(_BYTE *)(v17 + v48);
          v50 = *(_BYTE *)(v18 + v48);
          *(_BYTE *)(v21 + ((v35 >> 32) | 2)) = *(_BYTE *)(v18 + ((v35 >> 32) | 2)) | *(_BYTE *)(v17 + ((v35 >> 32) | 2));
          *(_BYTE *)(v21 + v48) = v50 | v49;
          v42 += 4;
          v35 += 0x400000000;
        }
        while (v42 <= v11);
      }
      a7 = v24;
      v9 = a4;
      if ((int)v42 >= (int)v24)
        goto LABEL_11;
      v51 = v23 - v42;
      if (v51 >= 8)
      {
        if (v26 - v29 < 0x20)
        {
          v52 = v42;
        }
        else if (v26 - v34 < 0x20)
        {
          v52 = v42;
        }
        else
        {
          if (v51 < 0x20)
          {
            v54 = 0;
LABEL_31:
            v52 = (v51 & 0xFFFFFFFFFFFFFFF8) + v42;
            result = v54 - (v51 & 0xFFFFFFFFFFFFFFF8);
            v58 = v54 + v42;
            do
            {
              *(int8x8_t *)(v21 + v58) = vorr_s8(*(int8x8_t *)(v18 + v58), *(int8x8_t *)(v17 + v58));
              v58 += 8;
              result += 8;
            }
            while (result);
            if (v51 == (v51 & 0xFFFFFFFFFFFFFFF8))
              goto LABEL_11;
            goto LABEL_19;
          }
          v54 = v51 & 0xFFFFFFFFFFFFFFE0;
          result = v42;
          v55 = v51 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v56 = vorrq_s8(*(int8x16_t *)(v18 + result + 16), *(int8x16_t *)(v17 + result + 16));
            v57 = (int8x16_t *)(v21 + result);
            *v57 = vorrq_s8(*(int8x16_t *)(v18 + result), *(int8x16_t *)(v17 + result));
            v57[1] = v56;
            result += 32;
            v55 -= 32;
          }
          while (v55);
          if (v51 == v54)
            goto LABEL_11;
          if ((v51 & 0x18) != 0)
            goto LABEL_31;
          v52 = v54 + v42;
        }
      }
      else
      {
        v52 = v42;
      }
      do
      {
LABEL_19:
        v53 = *(unsigned __int8 *)(v18 + v52);
        result = v53 | *(unsigned __int8 *)(v17 + v52);
        *(_BYTE *)(v21 + v52) = v53 | *(_BYTE *)(v17 + v52);
        ++v52;
      }
      while (v23 != v52);
LABEL_11:
      a2 = v106;
      v17 += v106;
      v18 += a4;
      v8 = a6;
      v21 += a6;
      v10 = v25 - 1;
      ++v16;
      v19 += v106;
      v20 += a4;
      v22 += a6;
      if (!v25)
        return result;
    }
  }
  if ((int)a7 >= 4)
  {
    v59 = 0;
    v61 = a5;
    v60 = a3;
    v62 = result;
    v63 = result + 4;
    v100 = a3 + 4;
    v64 = v11 & 0xFFFFFFFC;
    v65 = v64 + 5;
    if (v64 + 5 <= (unint64_t)a7)
      v65 = a7;
    v66 = v65 - v64 - 4;
    v67 = v64 + 4;
    v68 = (v11 >> 2) + 1;
    v99 = v66 & 0xFFFFFFFFFFFFFFE0;
    v98 = v66 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      v69 = v10;
      v70 = v59 * v8;
      v71 = v59 * a2;
      v72 = v59 * v9;
      if (v11 < 0x3C)
        break;
      v73 = 0;
      v82 = a5 + v67 + v70;
      v84 = v61 < a3 + v67 + v72 && v60 < v82;
      result = 4;
      v74 = 0;
      if (v62 < v82 && v61 < v104 + v67 + v71)
        goto LABEL_42;
      if (v84)
        goto LABEL_42;
      v86 = 0;
      v87 = v68 & 0x7FFFFFF0;
      do
      {
        v88 = vorrq_s8(*(int8x16_t *)(v60 + v86 + 16), *(int8x16_t *)(v62 + v86 + 16));
        v89 = vorrq_s8(*(int8x16_t *)(v60 + v86), *(int8x16_t *)(v62 + v86));
        v90 = vorrq_s8(*(int8x16_t *)(v60 + v86 + 48), *(int8x16_t *)(v62 + v86 + 48));
        v91 = (int8x16_t *)(v61 + v86);
        v91[2] = vorrq_s8(*(int8x16_t *)(v60 + v86 + 32), *(int8x16_t *)(v62 + v86 + 32));
        v91[3] = v90;
        *v91 = v89;
        v91[1] = v88;
        v86 += 64;
        v87 -= 16;
      }
      while (v87);
      v73 = v68 & 0x7FFFFFF0;
      result = (((v73 >> 4) & 0x7FFFFFF) << 6) | 4;
      v74 = 4 * v73;
      v75 = v73 - 1;
      v76 = v74;
      if (v68 != v73)
        goto LABEL_42;
LABEL_44:
      v9 = a4;
      if ((int)v74 < (int)a7)
      {
        if (v66 < 8
          || (v92 = 4 * v75 + a5 + 4 + v70, v92 - (4 * v75 + v63 + v71) < 0x20)
          || v92 - (4 * v75 + v100 + v72) < 0x20)
        {
          v81 = v76;
        }
        else if (v66 >= 0x20)
        {
          v94 = v76;
          result = v66 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v95 = vorrq_s8(*(int8x16_t *)(v60 + v94 + 16), *(int8x16_t *)(v62 + v94 + 16));
            v96 = (int8x16_t *)(v61 + v94);
            *v96 = vorrq_s8(*(int8x16_t *)(v60 + v94), *(int8x16_t *)(v62 + v94));
            v96[1] = v95;
            v94 += 32;
            result -= 32;
          }
          while (result);
          if (v66 == v99)
            goto LABEL_39;
          v93 = v66 & 0xFFFFFFFFFFFFFFE0;
          if ((v66 & 0x18) != 0)
            goto LABEL_73;
          v81 = v76 + v99;
        }
        else
        {
          v93 = 0;
LABEL_73:
          v81 = v76 + v98;
          v97 = v93 - (v66 & 0xFFFFFFFFFFFFFFF8);
          result = v93 + v76;
          do
          {
            *(int8x8_t *)(v61 + result) = vorr_s8(*(int8x8_t *)(v60 + result), *(int8x8_t *)(v62 + result));
            result += 8;
            v97 += 8;
          }
          while (v97);
          if (v66 == v98)
            goto LABEL_39;
        }
        do
        {
          result = *(unsigned __int8 *)(v60 + v81);
          *(_BYTE *)(v61 + v81) = result | *(_BYTE *)(v62 + v81);
          ++v81;
        }
        while (v81 < a7);
      }
LABEL_39:
      a2 = v106;
      v62 += v106;
      v60 += a4;
      v61 += v8;
      v10 = v69 - 1;
      ++v59;
      if (!v69)
        return result;
    }
    v73 = 0;
    v74 = 0;
    result = 4;
LABEL_42:
    v75 = v73 - 1;
    v76 = result - 4;
    do
    {
      v77 = *(_BYTE *)(v60 + v74 + 1) | *(_BYTE *)(v62 + v74 + 1);
      v78 = (_BYTE *)(v61 + v74);
      *v78 = *(_BYTE *)(v60 + v74) | *(_BYTE *)(v62 + v74);
      v78[1] = v77;
      v79 = *(unsigned __int8 *)(v60 + v74 + 2);
      result = v79 | *(unsigned __int8 *)(v62 + v74 + 2);
      v80 = *(_BYTE *)(v60 + v74 + 3) | *(_BYTE *)(v62 + v74 + 3);
      v78[2] = v79 | *(_BYTE *)(v62 + v74 + 2);
      v78[3] = v80;
      v74 += 4;
      ++v75;
      v76 += 4;
    }
    while (v74 <= v11);
    goto LABEL_44;
  }
  if ((int)a7 >= 1)
  {
    v13 = (_BYTE *)(a5 + 2);
    v14 = (_BYTE *)(a3 + 2);
    v15 = (_BYTE *)(result + 1);
    do
    {
      *(v13 - 2) = *(v14 - 2) | *(v15 - 1);
      if ((_DWORD)a7 != 1)
      {
        *(v13 - 1) = *(v14 - 1) | *v15;
        if ((_DWORD)a7 != 2)
          *v13 = *v14 | v15[1];
      }
      v13 += a6;
      v14 += a4;
      v15 += a2;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1001E30B0(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int8x16_t *v38;
  uint64_t v39;
  int8x16_t v40;
  unint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  unint64_t v55;
  int8x16_t v56;
  int8x16_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char v77;
  _BYTE *v78;
  int v79;
  char v80;
  unint64_t v81;
  unint64_t v82;
  BOOL v84;
  uint64_t v86;
  uint64_t v87;
  int8x16_t v88;
  int8x16_t v89;
  int8x16_t v90;
  int8x16_t *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  int8x16_t v95;
  int8x16_t *v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v104;
  uint64_t v106;

  v104 = result;
  if (!a8)
    return result;
  v8 = a6;
  v9 = a4;
  v10 = a8 - 1;
  v11 = (a7 - 4);
  v12 = (a7 - 32);
  v106 = a2;
  if ((int)a7 >= 32)
  {
    v16 = 0;
    v18 = a3;
    v17 = result;
    v19 = result + 32;
    v20 = (char *)(a3 + 32);
    v21 = a5;
    v22 = a5 + 32;
    v23 = a7;
    while (1)
    {
      v24 = a7;
      v25 = v10;
      v26 = a5 + v16 * v8;
      v27 = 0x2000000000;
      v28 = 32;
      v29 = v104 + v16 * a2;
      v30 = v22;
      v31 = v20;
      v32 = (char *)v19;
      v33 = 16;
      v34 = a3 + v16 * v9;
      do
      {
        v35 = v27;
        v36 = v32;
        v37 = v31;
        result = v30;
        v38 = (int8x16_t *)(v21 + v33);
        v39 = v33 + 32;
        v40 = veorq_s8(*(int8x16_t *)(v18 + v33), *(int8x16_t *)(v17 + v33));
        v41 = v33 + 16;
        v27 += 0x2000000000;
        v32 += 32;
        v31 += 32;
        v38[-1] = veorq_s8(*(int8x16_t *)(v18 + v33 - 16), *(int8x16_t *)(v17 + v33 - 16));
        *v38 = v40;
        v30 = result + 32;
        v28 += 32;
        v33 += 32;
      }
      while (v41 <= v12);
      v42 = v39 - 16;
      if ((int)v11 >= (int)v39 - 16)
      {
        do
        {
          v44 = *v36;
          v36 += 4;
          v43 = v44;
          v45 = *v37;
          v37 += 4;
          v46 = (v35 >> 32) | 1;
          v47 = *(_BYTE *)(v18 + v46) ^ *(_BYTE *)(v17 + v46);
          *(_BYTE *)result = v45 ^ v43;
          result += 4;
          *(_BYTE *)(v21 + v46) = v47;
          v48 = (v35 >> 32) | 3;
          v49 = *(_BYTE *)(v17 + v48);
          v50 = *(_BYTE *)(v18 + v48);
          *(_BYTE *)(v21 + ((v35 >> 32) | 2)) = *(_BYTE *)(v18 + ((v35 >> 32) | 2)) ^ *(_BYTE *)(v17 + ((v35 >> 32) | 2));
          *(_BYTE *)(v21 + v48) = v50 ^ v49;
          v42 += 4;
          v35 += 0x400000000;
        }
        while (v42 <= v11);
      }
      a7 = v24;
      v9 = a4;
      if ((int)v42 >= (int)v24)
        goto LABEL_11;
      v51 = v23 - v42;
      if (v51 >= 8)
      {
        if (v26 - v29 < 0x20)
        {
          v52 = v42;
        }
        else if (v26 - v34 < 0x20)
        {
          v52 = v42;
        }
        else
        {
          if (v51 < 0x20)
          {
            v54 = 0;
LABEL_31:
            v52 = (v51 & 0xFFFFFFFFFFFFFFF8) + v42;
            result = v54 - (v51 & 0xFFFFFFFFFFFFFFF8);
            v58 = v54 + v42;
            do
            {
              *(int8x8_t *)(v21 + v58) = veor_s8(*(int8x8_t *)(v18 + v58), *(int8x8_t *)(v17 + v58));
              v58 += 8;
              result += 8;
            }
            while (result);
            if (v51 == (v51 & 0xFFFFFFFFFFFFFFF8))
              goto LABEL_11;
            goto LABEL_19;
          }
          v54 = v51 & 0xFFFFFFFFFFFFFFE0;
          result = v42;
          v55 = v51 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v56 = veorq_s8(*(int8x16_t *)(v18 + result + 16), *(int8x16_t *)(v17 + result + 16));
            v57 = (int8x16_t *)(v21 + result);
            *v57 = veorq_s8(*(int8x16_t *)(v18 + result), *(int8x16_t *)(v17 + result));
            v57[1] = v56;
            result += 32;
            v55 -= 32;
          }
          while (v55);
          if (v51 == v54)
            goto LABEL_11;
          if ((v51 & 0x18) != 0)
            goto LABEL_31;
          v52 = v54 + v42;
        }
      }
      else
      {
        v52 = v42;
      }
      do
      {
LABEL_19:
        v53 = *(unsigned __int8 *)(v18 + v52);
        result = v53 ^ *(unsigned __int8 *)(v17 + v52);
        *(_BYTE *)(v21 + v52) = v53 ^ *(_BYTE *)(v17 + v52);
        ++v52;
      }
      while (v23 != v52);
LABEL_11:
      a2 = v106;
      v17 += v106;
      v18 += a4;
      v8 = a6;
      v21 += a6;
      v10 = v25 - 1;
      ++v16;
      v19 += v106;
      v20 += a4;
      v22 += a6;
      if (!v25)
        return result;
    }
  }
  if ((int)a7 >= 4)
  {
    v59 = 0;
    v61 = a5;
    v60 = a3;
    v62 = result;
    v63 = result + 4;
    v100 = a3 + 4;
    v64 = v11 & 0xFFFFFFFC;
    v65 = v64 + 5;
    if (v64 + 5 <= (unint64_t)a7)
      v65 = a7;
    v66 = v65 - v64 - 4;
    v67 = v64 + 4;
    v68 = (v11 >> 2) + 1;
    v99 = v66 & 0xFFFFFFFFFFFFFFE0;
    v98 = v66 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      v69 = v10;
      v70 = v59 * v8;
      v71 = v59 * a2;
      v72 = v59 * v9;
      if (v11 < 0x3C)
        break;
      v73 = 0;
      v82 = a5 + v67 + v70;
      v84 = v61 < a3 + v67 + v72 && v60 < v82;
      result = 4;
      v74 = 0;
      if (v62 < v82 && v61 < v104 + v67 + v71)
        goto LABEL_42;
      if (v84)
        goto LABEL_42;
      v86 = 0;
      v87 = v68 & 0x7FFFFFF0;
      do
      {
        v88 = veorq_s8(*(int8x16_t *)(v60 + v86 + 16), *(int8x16_t *)(v62 + v86 + 16));
        v89 = veorq_s8(*(int8x16_t *)(v60 + v86), *(int8x16_t *)(v62 + v86));
        v90 = veorq_s8(*(int8x16_t *)(v60 + v86 + 48), *(int8x16_t *)(v62 + v86 + 48));
        v91 = (int8x16_t *)(v61 + v86);
        v91[2] = veorq_s8(*(int8x16_t *)(v60 + v86 + 32), *(int8x16_t *)(v62 + v86 + 32));
        v91[3] = v90;
        *v91 = v89;
        v91[1] = v88;
        v86 += 64;
        v87 -= 16;
      }
      while (v87);
      v73 = v68 & 0x7FFFFFF0;
      result = (((v73 >> 4) & 0x7FFFFFF) << 6) | 4;
      v74 = 4 * v73;
      v75 = v73 - 1;
      v76 = v74;
      if (v68 != v73)
        goto LABEL_42;
LABEL_44:
      v9 = a4;
      if ((int)v74 < (int)a7)
      {
        if (v66 < 8
          || (v92 = 4 * v75 + a5 + 4 + v70, v92 - (4 * v75 + v63 + v71) < 0x20)
          || v92 - (4 * v75 + v100 + v72) < 0x20)
        {
          v81 = v76;
        }
        else if (v66 >= 0x20)
        {
          v94 = v76;
          result = v66 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v95 = veorq_s8(*(int8x16_t *)(v60 + v94 + 16), *(int8x16_t *)(v62 + v94 + 16));
            v96 = (int8x16_t *)(v61 + v94);
            *v96 = veorq_s8(*(int8x16_t *)(v60 + v94), *(int8x16_t *)(v62 + v94));
            v96[1] = v95;
            v94 += 32;
            result -= 32;
          }
          while (result);
          if (v66 == v99)
            goto LABEL_39;
          v93 = v66 & 0xFFFFFFFFFFFFFFE0;
          if ((v66 & 0x18) != 0)
            goto LABEL_73;
          v81 = v76 + v99;
        }
        else
        {
          v93 = 0;
LABEL_73:
          v81 = v76 + v98;
          v97 = v93 - (v66 & 0xFFFFFFFFFFFFFFF8);
          result = v93 + v76;
          do
          {
            *(int8x8_t *)(v61 + result) = veor_s8(*(int8x8_t *)(v60 + result), *(int8x8_t *)(v62 + result));
            result += 8;
            v97 += 8;
          }
          while (v97);
          if (v66 == v98)
            goto LABEL_39;
        }
        do
        {
          result = *(unsigned __int8 *)(v60 + v81);
          *(_BYTE *)(v61 + v81) = result ^ *(_BYTE *)(v62 + v81);
          ++v81;
        }
        while (v81 < a7);
      }
LABEL_39:
      a2 = v106;
      v62 += v106;
      v60 += a4;
      v61 += v8;
      v10 = v69 - 1;
      ++v59;
      if (!v69)
        return result;
    }
    v73 = 0;
    v74 = 0;
    result = 4;
LABEL_42:
    v75 = v73 - 1;
    v76 = result - 4;
    do
    {
      v77 = *(_BYTE *)(v60 + v74 + 1) ^ *(_BYTE *)(v62 + v74 + 1);
      v78 = (_BYTE *)(v61 + v74);
      *v78 = *(_BYTE *)(v60 + v74) ^ *(_BYTE *)(v62 + v74);
      v78[1] = v77;
      v79 = *(unsigned __int8 *)(v60 + v74 + 2);
      result = v79 ^ *(unsigned __int8 *)(v62 + v74 + 2);
      v80 = *(_BYTE *)(v60 + v74 + 3) ^ *(_BYTE *)(v62 + v74 + 3);
      v78[2] = v79 ^ *(_BYTE *)(v62 + v74 + 2);
      v78[3] = v80;
      v74 += 4;
      ++v75;
      v76 += 4;
    }
    while (v74 <= v11);
    goto LABEL_44;
  }
  if ((int)a7 >= 1)
  {
    v13 = (_BYTE *)(a5 + 2);
    v14 = (_BYTE *)(a3 + 2);
    v15 = (_BYTE *)(result + 1);
    do
    {
      *(v13 - 2) = *(v14 - 2) ^ *(v15 - 1);
      if ((_DWORD)a7 != 1)
      {
        *(v13 - 1) = *(v14 - 1) ^ *v15;
        if ((_DWORD)a7 != 2)
          *v13 = *v14 ^ v15[1];
      }
      v13 += a6;
      v14 += a4;
      v15 += a2;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001E36F8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  unint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  _BYTE *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  _BYTE *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  _BYTE *v24;
  int8x16_t v25;
  int8x16_t v26;
  int8x16_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int8x16_t v40;
  int8x16_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  const char *v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char v66;
  _BYTE *v67;
  char v68;
  int v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  int8x16_t v75;
  int8x16_t *v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  int8x16x4_t v81;
  int8x16x4_t v82;

  if (!a8)
    return result;
  v8 = a8 - 1;
  v9 = (a7 - 4);
  if (a7 >= 32)
  {
    v12 = 0;
    v13 = (char *)(result + 32);
    v14 = (_BYTE *)(a5 + 32);
    v15 = result;
    v16 = a5;
    while (1)
    {
      v17 = 0;
      v18 = v8;
      v19 = 0x2000000000;
      v20 = v14;
      v21 = v13;
      do
      {
        v22 = v19;
        v23 = v21;
        v24 = v20;
        v25 = vmvnq_s8(*(int8x16_t *)(v15 + v17));
        v26 = vmvnq_s8(*(int8x16_t *)(v15 + v17 + 16));
        v27 = (int8x16_t *)(v16 + v17);
        v17 += 32;
        *v27 = v25;
        v27[1] = v26;
        v19 = v22 + 0x2000000000;
        v21 += 32;
        v20 += 32;
      }
      while (v17 <= (a7 - 32));
      if ((int)v9 >= (int)v17)
        break;
      v28 = v17;
      if ((int)v17 < a7)
        goto LABEL_20;
LABEL_11:
      v15 += a2;
      v16 += a6;
      v8 = v18 - 1;
      ++v12;
      v13 += a2;
      v14 += a6;
      if (!v18)
        return result;
    }
    v29 = 0;
    do
    {
      v30 = *v23;
      v23 += 4;
      v31 = (v22 >> 32) | 1;
      v32 = ~*(_BYTE *)(v15 + v31);
      *v24 = ~v30;
      v24 += 4;
      *(_BYTE *)(v16 + v31) = v32;
      v33 = (v22 >> 32) | 3;
      v34 = ~*(_BYTE *)(v15 + v33);
      *(_BYTE *)(v16 + ((v22 >> 32) | 2)) = ~*(_BYTE *)(v15 + ((v22 >> 32) | 2));
      *(_BYTE *)(v16 + v33) = v34;
      v22 += 0x400000000;
      v29 += 4;
    }
    while (v17 + v29 <= v9);
    v28 = (v17 + v29);
    if ((int)v28 >= a7)
      goto LABEL_11;
LABEL_20:
    v35 = a7 - v28;
    if (v35 < 8)
    {
      v36 = v28;
      goto LABEL_35;
    }
    if (a5 + v12 * a6 - (result + v12 * a2) < 0x20)
    {
      v36 = v28;
      goto LABEL_35;
    }
    if (v35 >= 0x20)
    {
      v37 = v35 & 0xFFFFFFFFFFFFFFE0;
      v38 = v28;
      v39 = v35 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v40 = vmvnq_s8(*(int8x16_t *)(v15 + v38 + 16));
        v41 = (int8x16_t *)(v16 + v38);
        *v41 = vmvnq_s8(*(int8x16_t *)(v15 + v38));
        v41[1] = v40;
        v38 += 32;
        v39 -= 32;
      }
      while (v39);
      if (v35 == v37)
        goto LABEL_11;
      if ((v35 & 0x18) == 0)
      {
        v36 = v37 + v28;
        do
        {
LABEL_35:
          *(_BYTE *)(v16 + v36) = ~*(_BYTE *)(v15 + v36);
          ++v36;
        }
        while (a7 != v36);
        goto LABEL_11;
      }
    }
    else
    {
      v37 = 0;
    }
    v36 = (v35 & 0xFFFFFFFFFFFFFFF8) + v28;
    v42 = v37 - (v35 & 0xFFFFFFFFFFFFFFF8);
    v43 = v37 + v28;
    do
    {
      *(int8x8_t *)(v16 + v43) = vmvn_s8(*(int8x8_t *)(v15 + v43));
      v43 += 8;
      v42 += 8;
    }
    while (v42);
    if (v35 == (v35 & 0xFFFFFFFFFFFFFFF8))
      goto LABEL_11;
    goto LABEL_35;
  }
  if (a7 >= 4)
  {
    v44 = 0;
    v45 = v9 & 0xFFFFFFFC;
    v46 = v45 + 5;
    if (v45 + 5 <= (unint64_t)a7)
      v46 = a7;
    v47 = v46 - v45 - 4;
    v48 = v45 + 4;
    v49 = (v9 >> 2) + 1;
    v79 = v47 & 0xFFFFFFFFFFFFFFF8;
    v80 = v47 & 0xFFFFFFFFFFFFFFE0;
    v50 = result;
    v51 = a5;
    while (1)
    {
      v52 = v8;
      v53 = v44 * a6;
      v54 = v44 * a2;
      if (v9 < 0x3C)
        break;
      if (v51 < result + v48 + v54 && v50 < a5 + v48 + v53)
        break;
      v56 = 0;
      v57 = v49 & 0x7FFFFFF0;
      do
      {
        v58 = (const char *)(v50 + v56);
        v81 = vld4q_s8(v58);
        v82.val[0] = vmvnq_s8(v81.val[0]);
        v82.val[1] = vmvnq_s8(v81.val[1]);
        v82.val[2] = vmvnq_s8(v81.val[2]);
        v82.val[3] = vmvnq_s8(v81.val[3]);
        v59 = (char *)(v51 + v56);
        vst4q_s8(v59, v82);
        v56 += 64;
        v57 -= 16;
      }
      while (v57);
      v60 = v49 & 0x7FFFFFF0;
      v61 = (((v60 >> 4) & 0x7FFFFFF) << 6) | 4;
      v62 = 4 * v60;
      v63 = v60 - 1;
      v64 = v62;
      if (v49 != v60)
        goto LABEL_53;
      if ((int)(4 * (v49 & 0x7FFFFFF0)) < a7)
        goto LABEL_56;
LABEL_40:
      v50 += a2;
      v51 += a6;
      v8 = v52 - 1;
      ++v44;
      if (!v52)
        return result;
    }
    v60 = 0;
    v62 = 0;
    v61 = 4;
LABEL_53:
    v63 = v60 - 1;
    v64 = v61 - 4;
    v65 = v62 + 3;
    do
    {
      v66 = ~*(_BYTE *)(v50 + v65 - 2);
      v67 = (_BYTE *)(v51 + v65);
      *(v67 - 3) = ~*(_BYTE *)(v50 + v65 - 3);
      *(v67 - 2) = v66;
      v68 = ~*(_BYTE *)(v50 + v65);
      *(v67 - 1) = ~*(_BYTE *)(v50 + v65 - 1);
      *v67 = v68;
      ++v63;
      v64 += 4;
      v69 = v65 + 4;
      v70 = v65 + 1;
      v65 += 4;
    }
    while (v70 <= v9);
    if (v69 - 3 >= a7)
      goto LABEL_40;
LABEL_56:
    if (v47 < 8 || 4 * v63 + a5 + v53 - (4 * v63 + result + v54) < 0x20)
    {
      v71 = v64;
      goto LABEL_59;
    }
    if (v47 >= 0x20)
    {
      v73 = v64;
      v74 = v47 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v75 = vmvnq_s8(*(int8x16_t *)(v50 + v73 + 16));
        v76 = (int8x16_t *)(v51 + v73);
        *v76 = vmvnq_s8(*(int8x16_t *)(v50 + v73));
        v76[1] = v75;
        v73 += 32;
        v74 -= 32;
      }
      while (v74);
      if (v47 == v80)
        goto LABEL_40;
      v72 = v47 & 0xFFFFFFFFFFFFFFE0;
      if ((v47 & 0x18) == 0)
      {
        v71 = v64 + v80;
        do
        {
LABEL_59:
          *(_BYTE *)(v51 + v71) = ~*(_BYTE *)(v50 + v71);
          ++v71;
        }
        while (v71 < a7);
        goto LABEL_40;
      }
    }
    else
    {
      v72 = 0;
    }
    v71 = v64 + v79;
    v77 = v72 - (v47 & 0xFFFFFFFFFFFFFFF8);
    v78 = v72 + v64;
    do
    {
      *(int8x8_t *)(v51 + v78) = vmvn_s8(*(int8x8_t *)(v50 + v78));
      v78 += 8;
      v77 += 8;
    }
    while (v77);
    if (v47 == v79)
      goto LABEL_40;
    goto LABEL_59;
  }
  if (a7 >= 1)
  {
    v10 = (_BYTE *)(result + 2);
    v11 = (_BYTE *)(a5 + 2);
    do
    {
      *(v11 - 2) = ~*(v10 - 2);
      if (a7 != 1)
      {
        *(v11 - 1) = ~*(v10 - 1);
        if (a7 != 2)
          *v11 = ~*v10;
      }
      v10 += a2;
      v11 += a6;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint8x16_t *sub_1001E3C08(uint8x16_t *result, uint64_t a2, uint8x16_t *a3, uint64_t a4, int8x16_t *a5, uint64_t a6, int a7, int a8, int *a9)
{
  int v9;
  uint8x16_t *v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  unsigned int v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  char v23;
  int8x16_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int8x16_t v29;
  uint64_t v30;
  int8x16_t *v31;
  uint8x16_t *v32;
  uint8x16_t *v33;
  int8x16_t *v34;
  uint8x16_t *v35;
  uint8x16_t *v36;
  unint64_t v37;
  int v38;
  uint8x16_t *v39;
  int8x16_t *v40;
  int8x16_t *v41;
  uint8x16_t *v42;
  uint8x16_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint8x16_t *v46;
  int8x16_t *v47;
  uint8x16_t v48;
  uint8x16_t v49;
  uint8x16_t v50;
  uint16x8_t v51;
  uint16x8_t v52;
  uint16x8_t v53;
  uint16x8_t v54;
  _QWORD *v55;
  uint8x8_t *v56;
  uint64_t v57;
  uint8x8_t v58;
  uint8x8_t v59;
  uint8x8_t v60;
  uint16x8_t v61;
  uint16x8_t v62;
  int8x16_t v63;
  char v64;
  int8x16_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  int8x16_t v70;
  uint64_t v71;
  int8x16_t *v72;
  uint8x16_t *v73;
  uint8x16_t *v74;
  int8x16_t *v75;
  uint8x16_t *v76;
  uint8x16_t *v77;
  unint64_t v78;
  int v79;
  uint8x16_t *v80;
  uint8x16_t *v81;
  int8x16_t *v82;
  int8x16_t *v83;
  uint8x16_t *v84;
  uint8x16_t *v85;
  char v86;
  unint64_t v87;
  unint64_t v88;
  uint8x16_t *v89;
  uint8x16_t *v90;
  int8x16_t *v91;
  uint8x16_t v92;
  uint8x16_t v93;
  uint8x16_t v94;
  uint16x8_t v95;
  uint16x8_t v96;
  uint16x8_t v97;
  uint16x8_t v98;
  _QWORD *v99;
  uint8x8_t *v100;
  uint8x8_t *v101;
  uint64_t v102;
  uint8x8_t v103;
  uint8x8_t v104;
  uint8x8_t v105;
  uint16x8_t v106;
  uint16x8_t v107;
  int8x16_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int8x16x2_t v115;
  int8x16x2_t v116;
  int8x16x4_t v117;
  int8x16x4_t v118;

  v9 = *a9;
  if ((*a9 & 0xFFFFFFFE) != 2)
  {
    v10 = result;
    v11 = a2;
    switch(v9)
    {
      case 0:
      case 5:
        if (v9)
          v12 = 255;
        else
          v12 = 0;
        if (!a8)
          return result;
        v13 = a8 - 1;
        v14 = (a7 - 16);
        if (a7 < 16)
        {
          if (a7 >= 1)
          {
            do
            {
              v15 = 0;
              v16 = v13;
              do
              {
                if (result->u8[v15] == a3->u8[v15])
                  v17 = ~(_BYTE)v12;
                else
                  v17 = v12;
                a5->i8[v15++] = v17;
              }
              while (a7 != v15);
              result = (uint8x16_t *)((char *)result + a2);
              a3 = (uint8x16_t *)((char *)a3 + a4);
              a5 = (int8x16_t *)((char *)a5 + a6);
              --v13;
            }
            while (v16);
          }
          return result;
        }
        v65 = vdupq_n_s8(v12);
        v66 = v14 & 0xFFFFFFF0;
        if (v66 + 17 <= (unint64_t)a7)
          v67 = a7;
        else
          v67 = (v14 & 0xFFFFFFF0) + 17;
        v68 = v67 - 16 - v66;
        v69 = v67 & 0xF;
        v70 = (int8x16_t)vdupq_n_s32(v12);
        v71 = v67 & 7;
        v114 = (v67 & 0x1FFFFFFF8) - v66 - 16;
        v110 = (v67 & 0x1FFFFFFF0) - v66 - 16;
        v72 = a5 + 1;
        v73 = a3 + 1;
        v74 = result + 1;
        v112 = v67 - 16 - v71 - v66;
        v75 = a5;
        v76 = result;
        v77 = a3;
        break;
      case 1:
      case 4:
        goto LABEL_20;
      default:
        return result;
    }
    while (1)
    {
      v78 = 0;
      v79 = v13;
      v80 = v74;
      v81 = v73;
      v82 = v72;
      do
      {
        v83 = v82;
        v84 = v81;
        *(int8x16_t *)((char *)a5 + v78) = veorq_s8(v65, vceqq_s8(*(int8x16_t *)((char *)result + v78), *(int8x16_t *)((char *)a3 + v78)));
        v85 = v80;
        v78 += 16;
        ++v82;
        ++v81;
        ++v80;
      }
      while (v78 <= v14);
      if ((int)v78 >= a7)
        goto LABEL_63;
      if (v68 < 8
        || (unint64_t)((char *)v75 - (char *)v76) < 0x10
        || (unint64_t)((char *)v75 - (char *)v77) < 0x10)
      {
        goto LABEL_68;
      }
      if (v68 >= 0x10)
      {
        v88 = v68 - v69;
        v89 = v85;
        v90 = v84;
        v91 = v83;
        do
        {
          v92 = *v89++;
          v93 = v92;
          v94 = *v90++;
          v95 = vmovl_u8(*(uint8x8_t *)v94.i8);
          v96 = vmovl_u8(*(uint8x8_t *)v93.i8);
          v97 = vmovl_high_u8(v94);
          v98 = vmovl_high_u8(v93);
          v118.val[3] = veorq_s8(v70, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v98), (int32x4_t)vmovl_high_u16(v97)));
          v118.val[2] = veorq_s8(v70, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v98.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v97.i8)));
          v118.val[1] = veorq_s8(v70, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v96), (int32x4_t)vmovl_high_u16(v95)));
          v118.val[0] = veorq_s8(v70, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v96.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v95.i8)));
          *v91++ = vqtbl4q_s8(v118, (int8x16_t)xmmword_1003BC960);
          v88 -= 16;
        }
        while (v88);
        if (!v69)
          goto LABEL_63;
        v87 = v68 - v69;
        if (v69 < 8)
        {
          v78 += v110;
          do
          {
LABEL_68:
            if (result->u8[v78] == a3->u8[v78])
              v86 = ~(_BYTE)v12;
            else
              v86 = v12;
            a5->i8[v78++] = v86;
          }
          while (v78 < a7);
          goto LABEL_63;
        }
      }
      else
      {
        v87 = 0;
      }
      v78 += v114;
      v99 = (uint64_t *)((char *)v83->i64 + v87);
      v100 = (uint8x8_t *)&v84->i8[v87];
      v101 = (uint8x8_t *)&v85->i8[v87];
      v102 = v112 - v87;
      do
      {
        v103 = *v101++;
        v104 = v103;
        v105 = *v100++;
        v106 = vmovl_u8(v105);
        v107 = vmovl_u8(v104);
        v108 = (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v107), (int32x4_t)vmovl_high_u16(v106));
        v116.val[0] = veorq_s8(v70, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v107.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v106.i8)));
        v116.val[1] = veorq_s8(v70, v108);
        *v99++ = vqtbl2q_s8(v116, (int8x16_t)xmmword_1003BC970).u64[0];
        v102 -= 8;
      }
      while (v102);
      if (v71)
        goto LABEL_68;
LABEL_63:
      result = (uint8x16_t *)((char *)result + a2);
      a3 = (uint8x16_t *)((char *)a3 + a4);
      a5 = (int8x16_t *)((char *)a5 + a6);
      v13 = v79 - 1;
      v77 = (uint8x16_t *)((char *)v77 + a4);
      v76 = (uint8x16_t *)((char *)v76 + a2);
      v75 = (int8x16_t *)((char *)v75 + a6);
      v72 = (int8x16_t *)((char *)v72 + a6);
      v73 = (uint8x16_t *)((char *)v73 + a4);
      v74 = (uint8x16_t *)((char *)v74 + a2);
      if (!v79)
        return result;
    }
  }
  if (v9 == 2)
    v9 = 4;
  else
    v9 = 1;
  v10 = a3;
  v11 = a4;
  a3 = result;
  a4 = a2;
LABEL_20:
  if (v9 == 1)
    v18 = 0;
  else
    v18 = 255;
  if (a8)
  {
    v19 = a8 - 1;
    v20 = (a7 - 16);
    if (a7 < 16)
    {
      if (a7 >= 1)
      {
        do
        {
          v21 = 0;
          v22 = v19;
          do
          {
            if (v10->u8[v21] <= a3->u8[v21])
              v23 = v18;
            else
              v23 = ~(_BYTE)v18;
            a5->i8[v21++] = v23;
          }
          while (a7 != v21);
          v10 = (uint8x16_t *)((char *)v10 + v11);
          a3 = (uint8x16_t *)((char *)a3 + a4);
          a5 = (int8x16_t *)((char *)a5 + a6);
          --v19;
        }
        while (v22);
      }
      return result;
    }
    v24 = vdupq_n_s8(v18);
    v25 = v20 & 0xFFFFFFF0;
    if (v25 + 17 <= (unint64_t)a7)
      v26 = a7;
    else
      v26 = (v20 & 0xFFFFFFF0) + 17;
    v27 = v26 - 16 - v25;
    v28 = v26 & 0xF;
    v29 = (int8x16_t)vdupq_n_s32(v18);
    v30 = v26 & 7;
    v113 = (v26 & 0x1FFFFFFF8) - v25 - 16;
    v109 = (v26 & 0x1FFFFFFF0) - v25 - 16;
    v31 = a5 + 1;
    v32 = a3 + 1;
    v33 = v10 + 1;
    v111 = v26 - 16 - v30 - v25;
    v34 = a5;
    v35 = a3;
    v36 = v10;
    do
    {
      v37 = 0;
      v38 = v19;
      v39 = v33;
      result = v32;
      v40 = v31;
      do
      {
        v41 = v40;
        v42 = result;
        *(int8x16_t *)((char *)a5 + v37) = veorq_s8(v24, (int8x16_t)vcgtq_u8(*(uint8x16_t *)((char *)v10 + v37), *(uint8x16_t *)((char *)a3 + v37)));
        v43 = v39;
        v37 += 16;
        ++v40;
        ++result;
        ++v39;
      }
      while (v37 <= v20);
      if ((int)v37 >= a7)
        goto LABEL_37;
      if (v27 < 8
        || (unint64_t)((char *)v34 - (char *)v35) < 0x10
        || (unint64_t)((char *)v34 - (char *)v36) < 0x10)
      {
        goto LABEL_54;
      }
      if (v27 >= 0x10)
      {
        v45 = v27 - v28;
        result = v43;
        v46 = v42;
        v47 = v41;
        do
        {
          v48 = *result++;
          v49 = v48;
          v50 = *v46++;
          v51 = vmovl_u8(*(uint8x8_t *)v50.i8);
          v52 = vmovl_u8(*(uint8x8_t *)v49.i8);
          v53 = vmovl_high_u8(v50);
          v54 = vmovl_high_u8(v49);
          v117.val[3] = veorq_s8(v29, (int8x16_t)vcgtq_u32(vmovl_high_u16(v54), vmovl_high_u16(v53)));
          v117.val[2] = veorq_s8(v29, (int8x16_t)vcgtq_u32(vmovl_u16(*(uint16x4_t *)v54.i8), vmovl_u16(*(uint16x4_t *)v53.i8)));
          v117.val[1] = veorq_s8(v29, (int8x16_t)vcgtq_u32(vmovl_high_u16(v52), vmovl_high_u16(v51)));
          v117.val[0] = veorq_s8(v29, (int8x16_t)vcgtq_u32(vmovl_u16(*(uint16x4_t *)v52.i8), vmovl_u16(*(uint16x4_t *)v51.i8)));
          *v47++ = vqtbl4q_s8(v117, (int8x16_t)xmmword_1003BC960);
          v45 -= 16;
        }
        while (v45);
        if (!v28)
          goto LABEL_37;
        v44 = v27 - v28;
        if (v28 < 8)
        {
          v37 += v109;
          do
          {
LABEL_54:
            result = (uint8x16_t *)a3->u8[v37];
            if (v10->u8[v37] <= result)
              v64 = v18;
            else
              v64 = ~(_BYTE)v18;
            a5->i8[v37++] = v64;
          }
          while (v37 < a7);
          goto LABEL_37;
        }
      }
      else
      {
        v44 = 0;
      }
      v37 += v113;
      v55 = (uint64_t *)((char *)v41->i64 + v44);
      result = (uint8x16_t *)((char *)v42 + v44);
      v56 = (uint8x8_t *)&v43->i8[v44];
      v57 = v111 - v44;
      do
      {
        v58 = *v56++;
        v59 = v58;
        v60 = *(uint8x8_t *)result->i8;
        result = (uint8x16_t *)((char *)result + 8);
        v61 = vmovl_u8(v60);
        v62 = vmovl_u8(v59);
        v63 = (int8x16_t)vcgtq_u32(vmovl_high_u16(v62), vmovl_high_u16(v61));
        v115.val[0] = veorq_s8(v29, (int8x16_t)vcgtq_u32(vmovl_u16(*(uint16x4_t *)v62.i8), vmovl_u16(*(uint16x4_t *)v61.i8)));
        v115.val[1] = veorq_s8(v29, v63);
        *v55++ = vqtbl2q_s8(v115, (int8x16_t)xmmword_1003BC970).u64[0];
        v57 -= 8;
      }
      while (v57);
      if (v30)
        goto LABEL_54;
LABEL_37:
      v10 = (uint8x16_t *)((char *)v10 + v11);
      a3 = (uint8x16_t *)((char *)a3 + a4);
      a5 = (int8x16_t *)((char *)a5 + a6);
      v19 = v38 - 1;
      v36 = (uint8x16_t *)((char *)v36 + v11);
      v35 = (uint8x16_t *)((char *)v35 + a4);
      v34 = (int8x16_t *)((char *)v34 + a6);
      v31 = (int8x16_t *)((char *)v31 + a6);
      v32 = (uint8x16_t *)((char *)v32 + a4);
      v33 = (uint8x16_t *)((char *)v33 + v11);
    }
    while (v38);
  }
  return result;
}

unint64_t sub_1001E4228(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8, int *a9)
{
  int v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  _BYTE *v16;
  char v17;
  char v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int8x16_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t i;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  BOOL v41;
  BOOL v42;
  uint64_t v43;
  int8x16_t v44;
  int8x16_t v45;
  int8x16_t v46;
  int8x16_t v47;
  uint16x4_t v48;
  uint16x4_t v49;
  uint16x4_t v50;
  uint16x4_t v51;
  uint16x4_t v52;
  uint16x4_t v53;
  uint16x4_t v54;
  uint16x4_t v55;
  int32x4_t v56;
  int32x4_t v57;
  int32x4_t v58;
  int32x4_t v59;
  int8x16_t v60;
  int8x16_t v61;
  int32x4_t v62;
  int8x16_t v63;
  int8x16_t v64;
  int8x16_t v65;
  int32x4_t v66;
  int8x16_t v67;
  int32x4_t v68;
  int8x16_t v69;
  __int16 v70;
  __int16 v71;
  int8x16_t v72;
  __int16 v73;
  int32x4_t v74;
  __int16 v75;
  int8x16_t v76;
  int32x4_t v77;
  char *v78;
  unint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  _BYTE *v83;
  char v84;
  char v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  int8x16_t v93;
  int8x16_t v94;
  int16x8_t v95;
  int16x8_t v96;
  int16x8_t v97;
  int16x8_t v98;
  unint64_t v99;
  uint64_t v100;
  int16x8_t v101;
  int16x8_t v102;
  int8x16_t v103;
  char v104;
  uint64_t v105;
  int v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  int8x16_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  BOOL v123;
  uint64_t v125;
  uint64_t v126;
  int8x16_t v127;
  int8x16_t v128;
  int8x16_t v129;
  int8x16_t v130;
  uint16x4_t v131;
  uint16x4_t v132;
  uint16x4_t v133;
  uint16x4_t v134;
  uint16x4_t v135;
  uint16x4_t v136;
  uint16x4_t v137;
  uint16x4_t v138;
  int32x4_t v139;
  int32x4_t v140;
  int32x4_t v141;
  int32x4_t v142;
  int8x16_t v143;
  int8x16_t v144;
  int32x4_t v145;
  int8x16_t v146;
  int8x16_t v147;
  int8x16_t v148;
  int32x4_t v149;
  int8x16_t v150;
  int32x4_t v151;
  int8x16_t v152;
  __int16 v153;
  __int16 v154;
  int8x16_t v155;
  __int16 v156;
  int32x4_t v157;
  __int16 v158;
  int8x16_t v159;
  int32x4_t v160;
  char *v161;
  unint64_t v162;
  unint64_t v163;
  char v164;
  char v165;
  _BYTE *v166;
  char v167;
  char v168;
  unint64_t v169;
  char v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  uint16x8_t v174;
  uint16x8_t v175;
  int8x16_t v176;
  uint64_t v177;
  unint64_t v178;
  uint8x16_t v179;
  uint8x16_t v180;
  uint16x8_t v181;
  uint16x8_t v182;
  uint16x8_t v183;
  uint16x8_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  unint64_t v194;
  int v195;
  unint64_t v196;
  unint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  int v203;
  unint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  int8x16x2_t v210;
  int8x16x2_t v211;
  int8x16x4_t v212;
  int8x16x4_t v213;
  int8x16x4_t v214;
  int8x16x4_t v215;
  int8x16x4_t v216;
  int8x16x4_t v217;
  int8x16x4_t v218;
  int8x16x4_t v219;
  int8x16x4_t v220;
  int8x16x4_t v221;
  int8x16x4_t v222;
  int8x16x4_t v223;

  v9 = *a9;
  v202 = a6;
  v203 = a7;
  v201 = a5;
  if ((*a9 & 0xFFFFFFFE) != 2)
  {
    v10 = result;
    v11 = a2;
    switch(v9)
    {
      case 0:
      case 5:
        if (v9)
          v12 = 255;
        else
          v12 = 0;
        if (!a8)
          return result;
        v13 = (a7 - 4);
        if (a7 < 4)
        {
          if (a7 >= 1)
          {
            v14 = (unsigned __int8 *)(a3 + 2);
            v15 = (unsigned __int8 *)(result + 2);
            v16 = (_BYTE *)(a5 + 1);
            do
            {
              if (*(v15 - 2) == *(v14 - 2))
                v17 = ~(_BYTE)v12;
              else
                v17 = v12;
              *(v16 - 1) = v17;
              if (a7 != 1)
              {
                v18 = *(v15 - 1) == *(v14 - 1) ? ~(_BYTE)v12 : v12;
                *v16 = v18;
                if (a7 != 2)
                {
                  if (*v15 == *v14)
                    v19 = ~(_BYTE)v12;
                  else
                    v19 = v12;
                  v16[1] = v19;
                }
              }
              v14 += a4;
              v15 += a2;
              v16 += a6;
              --a8;
            }
            while (a8);
          }
          return result;
        }
        v105 = 0;
        v106 = a8 - 1;
        v107 = a7;
        v108 = (v13 & 0xFFFFFFFC) + 4;
        v204 = v108 + a5;
        v196 = v108 + result;
        v190 = v108 + a3;
        v109 = (v13 & 0xFFFFFFFC) + 5;
        if (v109 <= a7)
          v109 = a7;
        v110 = v109 - (v13 & 0xFFFFFFFC) - 4;
        v192 = (v13 >> 2) + 1;
        v111 = v192 & 0x7FFFFFF0;
        v112 = (int8x16_t)vdupq_n_s32(v12);
        v189 = v110 & 0xFFFFFFFFFFFFFFF0;
        v185 = v108 + (v110 & 0xFFFFFFFFFFFFFFF0);
        v187 = v108 + (v110 & 0xFFFFFFFFFFFFFFF8);
        v188 = v110 & 0xFFFFFFFFFFFFFFF8;
        v186 = -(uint64_t)(v110 & 0xFFFFFFFFFFFFFFF8);
        v113 = a5;
        v114 = result;
        v115 = a3;
        v198 = a3;
        v200 = a4;
        v206 = result;
        v194 = v110;
        break;
      case 1:
      case 4:
        goto LABEL_27;
      default:
        return result;
    }
    while (1)
    {
      v116 = v106;
      v117 = v105 * a6;
      v118 = v105 * a2;
      v119 = v105 * a4;
      if (v13 >= 0x3C)
      {
        v120 = 0;
        v121 = a5 + v108 + v117;
        v123 = v113 < a3 + v108 + v119 && v115 < v121;
        if ((v114 >= v121 || v113 >= result + v108 + v118) && !v123)
        {
          v207 = v105 * a6;
          v209 = v105 * a4;
          v125 = 0;
          v126 = v111;
          do
          {
            v127 = vceqq_s8(*(int8x16_t *)(v114 + v125), *(int8x16_t *)(v115 + v125));
            v128 = vceqq_s8(*(int8x16_t *)(v114 + v125 + 16), *(int8x16_t *)(v115 + v125 + 16));
            v129 = vceqq_s8(*(int8x16_t *)(v114 + v125 + 32), *(int8x16_t *)(v115 + v125 + 32));
            v130 = vceqq_s8(*(int8x16_t *)(v114 + v125 + 48), *(int8x16_t *)(v115 + v125 + 48));
            v131.i16[0] = v127.u8[0];
            v131.i16[1] = v127.u8[4];
            v132.i16[0] = v128.u8[0];
            v132.i16[1] = v128.u8[4];
            v133.i16[0] = v129.u8[0];
            v133.i16[1] = v129.u8[4];
            v134.i16[0] = v130.u8[0];
            v134.i16[1] = v130.u8[4];
            v131.i16[2] = v127.u8[8];
            v132.i16[2] = v128.u8[8];
            v133.i16[2] = v129.u8[8];
            v134.i16[2] = v130.u8[8];
            v131.i16[3] = v127.u8[12];
            v132.i16[3] = v128.u8[12];
            v133.i16[3] = v129.u8[12];
            v135.i16[0] = v127.u8[1];
            v134.i16[3] = v130.u8[12];
            v135.i16[1] = v127.u8[5];
            v135.i16[2] = v127.u8[9];
            v135.i16[3] = v127.u8[13];
            v136.i16[0] = v128.u8[1];
            v136.i16[1] = v128.u8[5];
            v136.i16[2] = v128.u8[9];
            v136.i16[3] = v128.u8[13];
            v137.i16[0] = v129.u8[1];
            v137.i16[1] = v129.u8[5];
            v137.i16[2] = v129.u8[9];
            v137.i16[3] = v129.u8[13];
            v138.i16[0] = v130.u8[1];
            v138.i16[1] = v130.u8[5];
            v138.i16[2] = v130.u8[9];
            v138.i16[3] = v130.u8[13];
            v139 = vshlq_n_s32((int32x4_t)vmovl_u16(v136), 0x1FuLL);
            v140 = (int32x4_t)vmovl_u16(v138);
            v138.i16[0] = v127.u8[2];
            v138.i16[1] = v127.u8[6];
            v141 = vshlq_n_s32(v140, 0x1FuLL);
            v138.i16[2] = v127.u8[10];
            v138.i16[3] = v127.u8[14];
            v142 = vshlq_n_s32((int32x4_t)vmovl_u16(v138), 0x1FuLL);
            v138.i16[0] = v128.u8[2];
            v138.i16[1] = v128.u8[6];
            v143 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v133), 0x1FuLL));
            v138.i16[2] = v128.u8[10];
            v138.i16[3] = v128.u8[14];
            v144 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v134), 0x1FuLL));
            v145 = vshlq_n_s32((int32x4_t)vmovl_u16(v138), 0x1FuLL);
            v146 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v135), 0x1FuLL));
            v133.i16[0] = v129.u8[2];
            v133.i16[1] = v129.u8[6];
            v133.i16[2] = v129.u8[10];
            v147 = (int8x16_t)vcltzq_s32(v139);
            v133.i16[3] = v129.u8[14];
            v148 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v137), 0x1FuLL));
            v149 = vshlq_n_s32((int32x4_t)vmovl_u16(v133), 0x1FuLL);
            v137.i16[0] = v130.u8[2];
            v137.i16[1] = v130.u8[6];
            v150 = (int8x16_t)vcltzq_s32(v142);
            v137.i16[2] = v130.u8[10];
            v137.i16[3] = v130.u8[14];
            v151 = (int32x4_t)vmovl_u16(v137);
            v152 = (int8x16_t)vcltzq_s32(v145);
            v223.val[3] = veorq_s8(v112, v144);
            v127.i16[0] = v127.u8[3];
            v127.i16[1] = v127.u8[7];
            v127.i16[2] = v127.u8[11];
            v223.val[2] = veorq_s8(v112, v143);
            v127.i16[3] = v127.u8[15];
            v153 = v128.u8[15];
            v223.val[1] = veorq_s8(v112, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v132), 0x1FuLL)));
            v154 = v128.u8[11];
            v223.val[0] = veorq_s8(v112, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v131), 0x1FuLL)));
            v131.i16[0] = v128.u8[3];
            v131.i16[1] = v128.u8[7];
            v213.val[3] = veorq_s8(v112, (int8x16_t)vcltzq_s32(v141));
            v155 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v127.i8), 0x1FuLL));
            v131.i16[2] = v154;
            v131.i16[3] = v153;
            v213.val[2] = veorq_s8(v112, v148);
            v156 = v129.u8[15];
            v213.val[1] = veorq_s8(v112, v147);
            v157 = vshlq_n_s32((int32x4_t)vmovl_u16(v131), 0x1FuLL);
            v158 = v129.u8[11];
            v213.val[0] = veorq_s8(v112, v146);
            v131.i16[0] = v129.u8[3];
            v131.i16[1] = v129.u8[7];
            v215.val[3] = veorq_s8(v112, (int8x16_t)vcltzq_s32(vshlq_n_s32(v151, 0x1FuLL)));
            v159 = (int8x16_t)vcltzq_s32(v157);
            v131.i16[2] = v158;
            v131.i16[3] = v156;
            v215.val[2] = veorq_s8(v112, (int8x16_t)vcltzq_s32(v149));
            v160 = (int32x4_t)vmovl_u16(v131);
            v215.val[1] = veorq_s8(v112, v152);
            v131.i16[0] = v130.u8[3];
            v131.i16[1] = v130.u8[7];
            v215.val[0] = veorq_s8(v112, v150);
            v131.i16[2] = v130.u8[11];
            v131.i16[3] = v130.u8[15];
            v218.val[0] = vqtbl4q_s8(v223, (int8x16_t)xmmword_1003BC960);
            v221.val[3] = veorq_s8(v112, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v131), 0x1FuLL)));
            v218.val[1] = vqtbl4q_s8(v213, (int8x16_t)xmmword_1003BC960);
            v221.val[2] = veorq_s8(v112, (int8x16_t)vcltzq_s32(vshlq_n_s32(v160, 0x1FuLL)));
            v221.val[1] = veorq_s8(v112, v159);
            v221.val[0] = veorq_s8(v112, v155);
            v218.val[2] = vqtbl4q_s8(v215, (int8x16_t)xmmword_1003BC960);
            v161 = (char *)(v113 + v125);
            v218.val[3] = vqtbl4q_s8(v221, (int8x16_t)xmmword_1003BC960);
            vst4q_s8(v161, v218);
            v125 += 64;
            v126 -= 16;
          }
          while (v126);
          v120 = 4 * (v192 & 0x7FFFFFF0);
          v111 = v192 & 0x7FFFFFF0;
          v110 = v194;
          a6 = v202;
          a7 = v203;
          a4 = v200;
          a5 = v201;
          a3 = v198;
          result = v206;
          v118 = v105 * a2;
          v117 = v207;
          v119 = v209;
          if (v192 == v111)
            goto LABEL_143;
        }
      }
      else
      {
        v120 = 0;
      }
      do
      {
        v162 = v114 + v120;
        v163 = v115 + v120;
        if (*(unsigned __int8 *)(v114 + v120 + 1) == *(unsigned __int8 *)(v115 + v120 + 1))
          v164 = ~(_BYTE)v12;
        else
          v164 = v12;
        if (*(unsigned __int8 *)(v114 + v120) == *(unsigned __int8 *)(v115 + v120))
          v165 = ~(_BYTE)v12;
        else
          v165 = v12;
        v166 = (_BYTE *)(v113 + v120);
        *v166 = v165;
        v166[1] = v164;
        if (*(unsigned __int8 *)(v162 + 3) == *(unsigned __int8 *)(v163 + 3))
          v167 = ~(_BYTE)v12;
        else
          v167 = v12;
        if (*(unsigned __int8 *)(v162 + 2) == *(unsigned __int8 *)(v163 + 2))
          v168 = ~(_BYTE)v12;
        else
          v168 = v12;
        v166[2] = v168;
        v166[3] = v167;
        v120 += 4;
      }
      while (v120 <= v13);
LABEL_143:
      if ((int)v120 < a7)
      {
        v169 = (v13 & 0xFFFFFFFC) + 4;
        if (v110 < 8
          || (v169 = (v13 & 0xFFFFFFFC) + 4, v204 + v117 - (v196 + v118) < 0x10)
          || (v169 = (v13 & 0xFFFFFFFC) + 4, v204 + v117 - (v190 + v119) < 0x10))
        {
          do
          {
LABEL_145:
            if (*(unsigned __int8 *)(v114 + v169) == *(unsigned __int8 *)(v115 + v169))
              v170 = ~(_BYTE)v12;
            else
              v170 = v12;
            *(_BYTE *)(v113 + v169++) = v170;
          }
          while (v169 < v107);
          goto LABEL_112;
        }
        if (v110 >= 0x10)
        {
          v177 = (v13 & 0xFFFFFFFC) + 4;
          v178 = v189;
          do
          {
            v179 = *(uint8x16_t *)(v114 + v177);
            v180 = *(uint8x16_t *)(v115 + v177);
            v181 = vmovl_u8(*(uint8x8_t *)v180.i8);
            v182 = vmovl_u8(*(uint8x8_t *)v179.i8);
            v183 = vmovl_high_u8(v180);
            v184 = vmovl_high_u8(v179);
            v219.val[3] = veorq_s8(v112, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v184), (int32x4_t)vmovl_high_u16(v183)));
            v219.val[2] = veorq_s8(v112, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v184.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v183.i8)));
            v219.val[1] = veorq_s8(v112, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v182), (int32x4_t)vmovl_high_u16(v181)));
            v219.val[0] = veorq_s8(v112, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v182.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v181.i8)));
            *(int8x16_t *)(v113 + v177) = vqtbl4q_s8(v219, (int8x16_t)xmmword_1003BC960);
            v177 += 16;
            v178 -= 16;
          }
          while (v178);
          if (v110 == v189)
            goto LABEL_112;
          v171 = v189;
          v169 = v185;
          if ((v110 & 8) == 0)
            goto LABEL_145;
        }
        else
        {
          v171 = 0;
        }
        v172 = v186 + v171;
        v173 = v108 + v171;
        do
        {
          v174 = vmovl_u8(*(uint8x8_t *)(v115 + v173));
          v175 = vmovl_u8(*(uint8x8_t *)(v114 + v173));
          v176 = (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v175), (int32x4_t)vmovl_high_u16(v174));
          v211.val[0] = veorq_s8(v112, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v175.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v174.i8)));
          v211.val[1] = veorq_s8(v112, v176);
          *(_QWORD *)(v113 + v173) = vqtbl2q_s8(v211, (int8x16_t)xmmword_1003BC970).u64[0];
          v173 += 8;
          v172 += 8;
        }
        while (v172);
        v169 = v187;
        if (v110 != v188)
          goto LABEL_145;
      }
LABEL_112:
      v114 += a2;
      v115 += a4;
      v113 += a6;
      v106 = v116 - 1;
      ++v105;
      if (!v116)
        return result;
    }
  }
  if (v9 == 2)
    v9 = 4;
  else
    v9 = 1;
  v10 = a3;
  v11 = a4;
  a3 = result;
  a4 = a2;
LABEL_27:
  if (v9 == 1)
    v20 = 0;
  else
    v20 = 255;
  if (a8)
  {
    v21 = 0;
    v22 = (a7 - 16);
    v23 = a7 - 4;
    v24 = a7;
    v25 = (int8x16_t)vdupq_n_s32(v20);
    v26 = a5;
    result = v10;
    v27 = a3;
    v197 = a3;
    v199 = a4;
    v193 = v10;
    v195 = v9;
    v191 = v11;
    while (1)
    {
      LODWORD(i) = 0;
      switch(v9)
      {
        case 0:
          if (a7 < 16)
            goto LABEL_47;
          for (i = 0; i <= v22; i += 16)
            *(int8x16_t *)(v26 + i) = vceqq_s8(*(int8x16_t *)(result + i), *(int8x16_t *)(v27 + i));
          goto LABEL_53;
        case 1:
          if (a7 < 16)
            goto LABEL_47;
          for (i = 0; i <= v22; i += 16)
            *(int8x16_t *)(v26 + i) = vcgtq_s8(*(int8x16_t *)(result + i), *(int8x16_t *)(v27 + i));
          goto LABEL_53;
        case 4:
          if (a7 < 16)
            goto LABEL_47;
          for (i = 0; i <= v22; i += 16)
            *(int8x16_t *)(v26 + i) = vcgeq_s8(*(int8x16_t *)(v27 + i), *(int8x16_t *)(result + i));
          goto LABEL_53;
        case 5:
          if (a7 >= 16)
          {
            for (i = 0; i <= v22; i += 16)
              *(int8x16_t *)(v26 + i) = vmvnq_s8(vceqq_s8(*(int8x16_t *)(result + i), *(int8x16_t *)(v27 + i)));
LABEL_53:
            v29 = a5 + v21 * a6;
            v30 = a3 + a4 * v21;
            v31 = v10 + v11 * v21;
            if ((int)i > (int)v23)
            {
LABEL_49:
              if ((int)i >= a7)
                goto LABEL_32;
              goto LABEL_87;
            }
          }
          else
          {
LABEL_47:
            LODWORD(i) = 0;
LABEL_48:
            v29 = a5 + v21 * a6;
            v30 = a3 + a4 * v21;
            v31 = v10 + v11 * v21;
            if ((int)v23 < 0)
              goto LABEL_49;
          }
          v32 = (int)i;
          v33 = v23 - (int)i;
          v208 = v30;
          if (v33 >= 0x3C)
          {
            v34 = v30 + 4;
            v35 = v26 + (int)i;
            v36 = (v33 & 0xFFFFFFFFFFFFFFFCLL) + (int)i;
            v37 = v29 + 4 + v36;
            v38 = v27 + (int)i;
            v39 = v34 + v36;
            v41 = v26 + v32 < v31 + 4 + v36 && result + v32 < v37;
            v42 = v38 >= v37 || v35 >= v39;
            if (!v42 || v41)
            {
              i = v32;
            }
            else
            {
              v205 = (v33 >> 2) + 1;
              v43 = v205 & 0x7FFFFFFFFFFFFFF0;
              i = v32 + 4 * (v205 & 0x7FFFFFFFFFFFFFF0);
              do
              {
                v44 = vcgtq_s8(*(int8x16_t *)(result + v32), *(int8x16_t *)(v27 + v32));
                v45 = vcgtq_s8(*(int8x16_t *)(result + v32 + 16), *(int8x16_t *)(v27 + v32 + 16));
                v46 = vcgtq_s8(*(int8x16_t *)(result + v32 + 32), *(int8x16_t *)(v27 + v32 + 32));
                v47 = vcgtq_s8(*(int8x16_t *)(result + v32 + 48), *(int8x16_t *)(v27 + v32 + 48));
                v48.i16[0] = v44.u8[0];
                v48.i16[1] = v44.u8[4];
                v49.i16[0] = v45.u8[0];
                v49.i16[1] = v45.u8[4];
                v50.i16[0] = v46.u8[0];
                v50.i16[1] = v46.u8[4];
                v51.i16[0] = v47.u8[0];
                v51.i16[1] = v47.u8[4];
                v48.i16[2] = v44.u8[8];
                v49.i16[2] = v45.u8[8];
                v50.i16[2] = v46.u8[8];
                v51.i16[2] = v47.u8[8];
                v48.i16[3] = v44.u8[12];
                v49.i16[3] = v45.u8[12];
                v50.i16[3] = v46.u8[12];
                v52.i16[0] = v44.u8[1];
                v51.i16[3] = v47.u8[12];
                v52.i16[1] = v44.u8[5];
                v52.i16[2] = v44.u8[9];
                v52.i16[3] = v44.u8[13];
                v53.i16[0] = v45.u8[1];
                v53.i16[1] = v45.u8[5];
                v53.i16[2] = v45.u8[9];
                v53.i16[3] = v45.u8[13];
                v54.i16[0] = v46.u8[1];
                v54.i16[1] = v46.u8[5];
                v54.i16[2] = v46.u8[9];
                v54.i16[3] = v46.u8[13];
                v55.i16[0] = v47.u8[1];
                v55.i16[1] = v47.u8[5];
                v55.i16[2] = v47.u8[9];
                v55.i16[3] = v47.u8[13];
                v56 = vshlq_n_s32((int32x4_t)vmovl_u16(v53), 0x1FuLL);
                v57 = (int32x4_t)vmovl_u16(v55);
                v55.i16[0] = v44.u8[2];
                v55.i16[1] = v44.u8[6];
                v58 = vshlq_n_s32(v57, 0x1FuLL);
                v55.i16[2] = v44.u8[10];
                v55.i16[3] = v44.u8[14];
                v59 = vshlq_n_s32((int32x4_t)vmovl_u16(v55), 0x1FuLL);
                v55.i16[0] = v45.u8[2];
                v55.i16[1] = v45.u8[6];
                v60 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v50), 0x1FuLL));
                v55.i16[2] = v45.u8[10];
                v55.i16[3] = v45.u8[14];
                v61 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v51), 0x1FuLL));
                v62 = vshlq_n_s32((int32x4_t)vmovl_u16(v55), 0x1FuLL);
                v63 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v52), 0x1FuLL));
                v50.i16[0] = v46.u8[2];
                v50.i16[1] = v46.u8[6];
                v50.i16[2] = v46.u8[10];
                v64 = (int8x16_t)vcltzq_s32(v56);
                v50.i16[3] = v46.u8[14];
                v65 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v54), 0x1FuLL));
                v66 = vshlq_n_s32((int32x4_t)vmovl_u16(v50), 0x1FuLL);
                v54.i16[0] = v47.u8[2];
                v54.i16[1] = v47.u8[6];
                v67 = (int8x16_t)vcltzq_s32(v59);
                v54.i16[2] = v47.u8[10];
                v54.i16[3] = v47.u8[14];
                v68 = (int32x4_t)vmovl_u16(v54);
                v69 = (int8x16_t)vcltzq_s32(v62);
                v222.val[3] = veorq_s8(v25, v61);
                v44.i16[0] = v44.u8[3];
                v44.i16[1] = v44.u8[7];
                v44.i16[2] = v44.u8[11];
                v222.val[2] = veorq_s8(v25, v60);
                v44.i16[3] = v44.u8[15];
                v70 = v45.u8[15];
                v222.val[1] = veorq_s8(v25, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v49), 0x1FuLL)));
                v71 = v45.u8[11];
                v222.val[0] = veorq_s8(v25, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v48), 0x1FuLL)));
                v48.i16[0] = v45.u8[3];
                v48.i16[1] = v45.u8[7];
                v212.val[3] = veorq_s8(v25, (int8x16_t)vcltzq_s32(v58));
                v72 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v44.i8), 0x1FuLL));
                v48.i16[2] = v71;
                v48.i16[3] = v70;
                v212.val[2] = veorq_s8(v25, v65);
                v73 = v46.u8[15];
                v212.val[1] = veorq_s8(v25, v64);
                v74 = vshlq_n_s32((int32x4_t)vmovl_u16(v48), 0x1FuLL);
                v75 = v46.u8[11];
                v212.val[0] = veorq_s8(v25, v63);
                v48.i16[0] = v46.u8[3];
                v48.i16[1] = v46.u8[7];
                v214.val[3] = veorq_s8(v25, (int8x16_t)vcltzq_s32(vshlq_n_s32(v68, 0x1FuLL)));
                v76 = (int8x16_t)vcltzq_s32(v74);
                v48.i16[2] = v75;
                v48.i16[3] = v73;
                v214.val[2] = veorq_s8(v25, (int8x16_t)vcltzq_s32(v66));
                v77 = (int32x4_t)vmovl_u16(v48);
                v214.val[1] = veorq_s8(v25, v69);
                v48.i16[0] = v47.u8[3];
                v48.i16[1] = v47.u8[7];
                v214.val[0] = veorq_s8(v25, v67);
                v48.i16[2] = v47.u8[11];
                v48.i16[3] = v47.u8[15];
                v216.val[0] = vqtbl4q_s8(v222, (int8x16_t)xmmword_1003BC960);
                v220.val[3] = veorq_s8(v25, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v48), 0x1FuLL)));
                v216.val[1] = vqtbl4q_s8(v212, (int8x16_t)xmmword_1003BC960);
                v220.val[2] = veorq_s8(v25, (int8x16_t)vcltzq_s32(vshlq_n_s32(v77, 0x1FuLL)));
                v220.val[1] = veorq_s8(v25, v76);
                v220.val[0] = veorq_s8(v25, v72);
                v216.val[2] = vqtbl4q_s8(v214, (int8x16_t)xmmword_1003BC960);
                v78 = (char *)(v26 + v32);
                v216.val[3] = vqtbl4q_s8(v220, (int8x16_t)xmmword_1003BC960);
                vst4q_s8(v78, v216);
                v32 += 64;
                v43 -= 16;
              }
              while (v43);
              a6 = v202;
              a7 = v203;
              a4 = v199;
              a5 = v201;
              v9 = v195;
              a3 = v197;
              v11 = v191;
              v10 = v193;
              if (v205 == (v205 & 0x7FFFFFFFFFFFFFF0))
                goto LABEL_86;
            }
          }
          else
          {
            i = (int)i;
          }
          do
          {
            v79 = result + i;
            v80 = v27 + i;
            if (*(char *)(result + i + 1) <= *(char *)(v27 + i + 1))
              v81 = v20;
            else
              v81 = ~(_BYTE)v20;
            if (*(char *)(result + i) <= *(char *)(v27 + i))
              v82 = v20;
            else
              v82 = ~(_BYTE)v20;
            v83 = (_BYTE *)(v26 + i);
            *v83 = v82;
            v83[1] = v81;
            if (*(char *)(v79 + 3) <= *(char *)(v80 + 3))
              v84 = v20;
            else
              v84 = ~(_BYTE)v20;
            if (*(char *)(v79 + 2) <= *(char *)(v80 + 2))
              v85 = v20;
            else
              v85 = ~(_BYTE)v20;
            v83[2] = v85;
            v83[3] = v84;
            i += 4;
          }
          while ((uint64_t)i <= v23);
LABEL_86:
          v30 = v208;
          if ((int)i >= a7)
            goto LABEL_32;
LABEL_87:
          v86 = (int)i;
          v87 = v24 - (int)i;
          if (v87 < 8)
          {
            v88 = v86;
            goto LABEL_104;
          }
          if (v29 - v30 < 0x10 || v29 - v31 < 0x10)
          {
            v88 = v86;
            goto LABEL_104;
          }
          if (v87 >= 0x10)
          {
            v90 = v87 & 0xFFFFFFFFFFFFFFF0;
            v91 = v86;
            v92 = v87 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v93 = *(int8x16_t *)(result + v91);
              v94 = *(int8x16_t *)(v27 + v91);
              v95 = vmovl_s8(*(int8x8_t *)v94.i8);
              v96 = vmovl_s8(*(int8x8_t *)v93.i8);
              v97 = vmovl_high_s8(v94);
              v98 = vmovl_high_s8(v93);
              v217.val[3] = veorq_s8(v25, (int8x16_t)vcgtq_s32(vmovl_high_s16(v98), vmovl_high_s16(v97)));
              v217.val[2] = veorq_s8(v25, (int8x16_t)vcgtq_s32(vmovl_s16(*(int16x4_t *)v98.i8), vmovl_s16(*(int16x4_t *)v97.i8)));
              v217.val[1] = veorq_s8(v25, (int8x16_t)vcgtq_s32(vmovl_high_s16(v96), vmovl_high_s16(v95)));
              v217.val[0] = veorq_s8(v25, (int8x16_t)vcgtq_s32(vmovl_s16(*(int16x4_t *)v96.i8), vmovl_s16(*(int16x4_t *)v95.i8)));
              *(int8x16_t *)(v26 + v91) = vqtbl4q_s8(v217, (int8x16_t)xmmword_1003BC960);
              v91 += 16;
              v92 -= 16;
            }
            while (v92);
            if (v87 == v90)
              goto LABEL_32;
            if ((v87 & 8) == 0)
            {
              v88 = v90 + v86;
              do
              {
LABEL_104:
                if (*(char *)(result + v88) <= *(char *)(v27 + v88))
                  v104 = v20;
                else
                  v104 = ~(_BYTE)v20;
                *(_BYTE *)(v26 + v88++) = v104;
              }
              while (v24 != v88);
              goto LABEL_32;
            }
          }
          else
          {
            v90 = 0;
          }
          v88 = (v87 & 0xFFFFFFFFFFFFFFF8) + v86;
          v99 = v90 - (v87 & 0xFFFFFFFFFFFFFFF8);
          v100 = v90 + v86;
          do
          {
            v101 = vmovl_s8(*(int8x8_t *)(v27 + v100));
            v102 = vmovl_s8(*(int8x8_t *)(result + v100));
            v103 = (int8x16_t)vcgtq_s32(vmovl_high_s16(v102), vmovl_high_s16(v101));
            v210.val[0] = veorq_s8(v25, (int8x16_t)vcgtq_s32(vmovl_s16(*(int16x4_t *)v102.i8), vmovl_s16(*(int16x4_t *)v101.i8)));
            v210.val[1] = veorq_s8(v25, v103);
            *(_QWORD *)(v26 + v100) = vqtbl2q_s8(v210, (int8x16_t)xmmword_1003BC970).u64[0];
            v100 += 8;
            v99 += 8;
          }
          while (v99);
          if (v87 != (v87 & 0xFFFFFFFFFFFFFFF8))
            goto LABEL_104;
LABEL_32:
          result += v11;
          v27 += a4;
          v26 += a6;
          ++v21;
          if (!--a8)
            return result;
          break;
        default:
          goto LABEL_48;
      }
    }
  }
  return result;
}

unint64_t sub_1001E5140(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, char *a5, uint64_t a6, int a7, int a8, unsigned int *a9)
{
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  unint64_t v15;
  unsigned __int16 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  _BYTE *v19;
  char v20;
  char v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int8x16_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  BOOL v43;
  BOOL v44;
  uint64_t v45;
  int16x8_t v46;
  int8x8_t v47;
  int16x8_t v48;
  int8x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int8x8_t v52;
  int8x8_t v53;
  int16x8_t v54;
  int8x8_t v55;
  int16x8_t v56;
  int16x8_t v57;
  int8x8_t v58;
  int8x8_t v59;
  int16x8_t v60;
  int8x8_t v61;
  int32x4_t v62;
  int8x16_t v63;
  int8x16_t v64;
  __int16 v65;
  uint16x4_t v66;
  uint16x4_t v67;
  uint16x4_t v68;
  __int16 v69;
  __int16 v70;
  __int16 v71;
  __int16 v72;
  __int16 v73;
  __int16 v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  _BYTE *v81;
  char v82;
  char v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  BOOL v91;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint16x8_t v96;
  uint16x8_t v97;
  uint16x8_t v98;
  uint16x8_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint16x8_t v103;
  uint16x8_t v104;
  int8x16_t v105;
  char v106;
  uint64_t v107;
  int v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  int8x16_t v116;
  char *v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  BOOL v122;
  BOOL v123;
  uint64_t v125;
  uint64_t v126;
  int16x8_t v127;
  int8x8_t v128;
  int16x8_t v129;
  int8x8_t v130;
  int16x8_t v131;
  int16x8_t v132;
  int8x8_t v133;
  int8x8_t v134;
  int16x8_t v135;
  int8x8_t v136;
  int16x8_t v137;
  int16x8_t v138;
  int8x8_t v139;
  int8x8_t v140;
  int16x8_t v141;
  int8x8_t v142;
  int32x4_t v143;
  int8x16_t v144;
  int8x16_t v145;
  __int16 v146;
  uint16x4_t v147;
  uint16x4_t v148;
  uint16x4_t v149;
  __int16 v150;
  __int16 v151;
  __int16 v152;
  __int16 v153;
  __int16 v154;
  __int16 v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  char v159;
  char v160;
  char *v161;
  char v162;
  char v163;
  unint64_t v164;
  char v165;
  unint64_t v166;
  BOOL v167;
  char v168;
  BOOL v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  char *v173;
  uint16x8_t v174;
  uint16x8_t v175;
  int8x16_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint16x8_t v180;
  uint16x8_t v181;
  uint16x8_t v182;
  uint16x8_t v183;
  unint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  char *v189;
  unint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  unsigned int v199;
  uint64_t v200;
  unint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  int v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  unint64_t v213;
  unint64_t v214;
  unint64_t v215;
  char *v216;
  int v217;
  int8x16x2_t v218;
  int8x16x2_t v219;
  int8x16x4_t v220;
  int8x16x4_t v221;
  int8x16x4_t v222;
  int8x16x4_t v223;
  int8x16x4_t v224;
  int8x16x4_t v225;
  int8x16x4_t v226;
  int8x16x4_t v227;

  v9 = *a9;
  v10 = a2 >> 1;
  v11 = a4 >> 1;
  v204 = a6;
  v205 = a7;
  if ((*a9 & 0xFFFFFFFE) != 2)
  {
    v12 = result;
    v13 = a2 >> 1;
    switch(v9)
    {
      case 0u:
      case 5u:
        if (v9)
          v14 = 255;
        else
          v14 = 0;
        if (!a8)
          return result;
        v15 = (a7 - 4);
        if (a7 < 4)
        {
          if (a7 >= 1)
          {
            v16 = (unsigned __int16 *)(a3 + 4);
            v17 = (unsigned __int16 *)(result + 4);
            v18 = 2 * v10;
            v19 = a5 + 1;
            do
            {
              if (*(v17 - 2) == *(v16 - 2))
                v20 = ~(_BYTE)v14;
              else
                v20 = v14;
              *(v19 - 1) = v20;
              if (a7 != 1)
              {
                v21 = *(v17 - 1) == *(v16 - 1) ? ~(_BYTE)v14 : v14;
                *v19 = v21;
                if (a7 != 2)
                {
                  if (*v17 == *v16)
                    v22 = ~(_BYTE)v14;
                  else
                    v22 = v14;
                  v19[1] = v22;
                }
              }
              v16 += v11;
              v17 = (unsigned __int16 *)((char *)v17 + v18);
              v19 += a6;
              --a8;
            }
            while (a8);
          }
          return result;
        }
        v107 = 0;
        v108 = a8 - 1;
        v109 = a7;
        v110 = (v15 & 0xFFFFFFFC) + 4;
        v111 = (v15 & 0xFFFFFFFC) + 5;
        if (v111 <= a7)
          v111 = a7;
        v200 = ((2 * (a7 - 4)) & 0x1FFFFFFF8) + 8;
        v112 = a2 & 0xFFFFFFFFFFFFFFFELL;
        v196 = 2 * v111;
        v113 = a4 & 0xFFFFFFFFFFFFFFFELL;
        v114 = v111 - (v15 & 0xFFFFFFFC) - 4;
        v115 = 8 * (v15 >> 2) + 8;
        v191 = (v15 >> 2) + 1;
        v116 = (int8x16_t)vdupq_n_s32(v14);
        v188 = v114 & 0xFFFFFFFFFFFFFFF0;
        v184 = v110 + (v114 & 0xFFFFFFFFFFFFFFF0);
        v186 = v110 + (v114 & 0xFFFFFFFFFFFFFFF8);
        v187 = v114 & 0xFFFFFFFFFFFFFFF8;
        v209 = 2 * v10;
        v207 = 2 * v11;
        v185 = -(uint64_t)(v114 & 0xFFFFFFFFFFFFFFF8);
        v117 = &a5[v110];
        v189 = &a5[v111];
        v206 = &a5[v110];
        v118 = a3;
        v119 = result;
        v198 = a2 & 0xFFFFFFFFFFFFFFFELL;
        v192 = v114;
        v194 = a4 & 0xFFFFFFFFFFFFFFFELL;
        v190 = result;
        break;
      case 1u:
      case 4u:
        goto LABEL_27;
      default:
        return result;
    }
    while (1)
    {
      v120 = (unint64_t)&v206[v107 * a6];
      v217 = v108;
      v213 = v112 * v107;
      v215 = v113 * v107;
      v211 = v107 * a6;
      v121 = 0;
      if (v15 < 0x3C)
        goto LABEL_122;
      v122 = (unint64_t)a5 >= a3 + v115 + v113 * v107 || v118 >= v120;
      v123 = !v122;
      if (v119 < v120 && (unint64_t)a5 < result + v115 + v112 * v107)
        goto LABEL_122;
      if (v123)
        goto LABEL_122;
      v125 = 0;
      v126 = v191 & 0x7FFFFFF0;
      v203 = a5;
      do
      {
        v127 = vceqq_s16(*(int16x8_t *)(v119 + v125), *(int16x8_t *)(v118 + v125));
        v128 = vmovn_s16(v127);
        v129 = vceqq_s16(*(int16x8_t *)(v119 + v125 + 16), *(int16x8_t *)(v118 + v125 + 16));
        v130 = vmovn_s16(v129);
        v131 = vceqq_s16(*(int16x8_t *)(v119 + v125 + 32), *(int16x8_t *)(v118 + v125 + 32));
        v132 = vceqq_s16(*(int16x8_t *)(v119 + v125 + 48), *(int16x8_t *)(v118 + v125 + 48));
        v133 = vmovn_s16(v131);
        v134 = vmovn_s16(v132);
        v135 = vceqq_s16(*(int16x8_t *)(v119 + v125 + 64), *(int16x8_t *)(v118 + v125 + 64));
        v136 = vmovn_s16(v135);
        v137 = vceqq_s16(*(int16x8_t *)(v119 + v125 + 80), *(int16x8_t *)(v118 + v125 + 80));
        v138 = vceqq_s16(*(int16x8_t *)(v119 + v125 + 96), *(int16x8_t *)(v118 + v125 + 96));
        v139 = vmovn_s16(v137);
        v140 = vmovn_s16(v138);
        v141 = vceqq_s16(*(int16x8_t *)(v119 + v125 + 112), *(int16x8_t *)(v118 + v125 + 112));
        v142 = vmovn_s16(v141);
        v143 = vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v131, (int8x16_t)v132))), 0x1FuLL);
        v144 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v127, (int8x16_t)v129))), 0x1FuLL));
        v145 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v135, (int8x16_t)v137))), 0x1FuLL));
        v146 = v142.u8[2];
        v223.val[3] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v138, (int8x16_t)v141))), 0x1FuLL)));
        v223.val[2] = veorq_s8(v116, v145);
        v223.val[1] = veorq_s8(v116, (int8x16_t)vcltzq_s32(v143));
        v223.val[0] = veorq_s8(v116, v144);
        v225.val[3] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v140, v142)), 0x1FuLL)));
        v225.val[2] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v136, v139)), 0x1FuLL)));
        v225.val[1] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v133, v134)), 0x1FuLL)));
        v225.val[0] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v128, v130)), 0x1FuLL)));
        v147.i16[0] = v128.u8[2];
        v147.i16[1] = v128.u8[6];
        v147.i16[2] = v130.u8[2];
        v148.i16[0] = v133.u8[2];
        v148.i16[1] = v133.u8[6];
        v149.i16[0] = v136.u8[2];
        v148.i16[2] = v134.u8[2];
        v149.i16[1] = v136.u8[6];
        v150 = v142.u8[7];
        v149.i16[2] = v139.u8[2];
        v223.val[0] = vqtbl4q_s8(v223, (int8x16_t)xmmword_1003BC960);
        v151 = v142.u8[3];
        v142.i16[0] = v140.u8[2];
        v147.i16[3] = v130.u8[6];
        v142.i16[1] = v140.u8[6];
        v142.i16[2] = v146;
        v148.i16[3] = v134.u8[6];
        v149.i16[3] = v139.u8[6];
        v152 = v139.u8[7];
        v153 = v139.u8[3];
        v142.i16[3] = v142.u8[6];
        v223.val[1] = vqtbl4q_s8(v225, (int8x16_t)xmmword_1003BC960);
        v154 = v133.u8[7];
        v155 = v133.u8[3];
        v133.i16[0] = v128.u8[3];
        v133.i16[1] = v128.u8[7];
        v133.i16[2] = v130.u8[3];
        v133.i16[3] = v130.u8[7];
        v139.i16[0] = v155;
        v139.i16[1] = v154;
        v139.i16[2] = v134.u8[3];
        v139.i16[3] = v134.u8[7];
        v225.val[3] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v142), 0x1FuLL)));
        v134.i16[0] = v136.u8[3];
        v134.i16[1] = v136.u8[7];
        v134.i16[2] = v153;
        v225.val[2] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v149), 0x1FuLL)));
        v134.i16[3] = v152;
        v225.val[1] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v148), 0x1FuLL)));
        v128.i16[0] = v140.u8[3];
        v128.i16[1] = v140.u8[7];
        v128.i16[2] = v151;
        v225.val[0] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v147), 0x1FuLL)));
        v128.i16[3] = v150;
        v227.val[3] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v128), 0x1FuLL)));
        v227.val[2] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v134), 0x1FuLL)));
        v227.val[1] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v139), 0x1FuLL)));
        v227.val[0] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v133), 0x1FuLL)));
        v223.val[2] = vqtbl4q_s8(v225, (int8x16_t)xmmword_1003BC960);
        v223.val[3] = vqtbl4q_s8(v227, (int8x16_t)xmmword_1003BC960);
        vst4q_s8(a5, v223);
        a5 += 64;
        v125 += 128;
        v126 -= 16;
      }
      while (v126);
      v115 = 8 * (v15 >> 2) + 8;
      a6 = v204;
      a7 = v205;
      v110 = (v15 & 0xFFFFFFFC) + 4;
      a5 = v203;
      v121 = 4 * (v191 & 0x7FFFFFF0);
      result = v190;
      v112 = v198;
      v114 = v192;
      v113 = v194;
      if (v191 != (v191 & 0x7FFFFFF0))
      {
LABEL_122:
        v156 = 2 * v121 + 6;
        do
        {
          v157 = v119 + 2 * v121;
          v158 = v118 + 2 * v121;
          if (*(unsigned __int16 *)(v157 + 2) == *(unsigned __int16 *)(v158 + 2))
            v159 = ~(_BYTE)v14;
          else
            v159 = v14;
          if (*(unsigned __int16 *)(v119 + v156 - 6) == *(unsigned __int16 *)(v118 + v156 - 6))
            v160 = ~(_BYTE)v14;
          else
            v160 = v14;
          v161 = &a5[v121];
          *v161 = v160;
          v161[1] = v159;
          if (*(unsigned __int16 *)(v119 + v156) == *(unsigned __int16 *)(v118 + v156))
            v162 = ~(_BYTE)v14;
          else
            v162 = v14;
          if (*(unsigned __int16 *)(v157 + 4) == *(unsigned __int16 *)(v158 + 4))
            v163 = ~(_BYTE)v14;
          else
            v163 = v14;
          v161[2] = v163;
          v161[3] = v162;
          v121 += 4;
          v156 += 8;
        }
        while (v121 <= v15);
      }
      if ((int)v121 >= a7)
        goto LABEL_105;
      v164 = v110;
      if (v114 < 8
        || ((v166 = (unint64_t)&v189[v211], v120 < a3 + v196 + v215)
          ? (v167 = a3 + v200 + v215 >= v166)
          : (v167 = 1),
            v167 ? (v168 = 0) : (v168 = 1),
            result + v200 + v213 < v166 ? (v169 = v120 >= result + v196 + v213) : (v169 = 1),
            (v164 = v110, !v169) || (v164 = v110, (v168 & 1) != 0)))
      {
        do
        {
LABEL_138:
          if (*(unsigned __int16 *)(v119 + 2 * v164) == *(unsigned __int16 *)(v118 + 2 * v164))
            v165 = ~(_BYTE)v14;
          else
            v165 = v14;
          a5[v164++] = v165;
        }
        while (v164 < v109);
        goto LABEL_105;
      }
      if (v114 >= 0x10)
      {
        v177 = v110;
        v178 = v115;
        v179 = v188;
        do
        {
          v181 = *(uint16x8_t *)(v119 + v178);
          v180 = *(uint16x8_t *)(v119 + v178 + 16);
          v183 = *(uint16x8_t *)(v118 + v178);
          v182 = *(uint16x8_t *)(v118 + v178 + 16);
          v221.val[3] = veorq_s8(v116, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v180), (int32x4_t)vmovl_high_u16(v182)));
          v221.val[1] = veorq_s8(v116, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v181), (int32x4_t)vmovl_high_u16(v183)));
          v221.val[2] = veorq_s8(v116, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v180.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v182.i8)));
          v221.val[0] = veorq_s8(v116, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v181.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v183.i8)));
          *(int8x16_t *)&a5[v177] = vqtbl4q_s8(v221, (int8x16_t)xmmword_1003BC960);
          v178 += 32;
          v177 += 16;
          v179 -= 16;
        }
        while (v179);
        if (v114 == v188)
          goto LABEL_105;
        v170 = v188;
        v164 = v184;
        if ((v114 & 8) == 0)
          goto LABEL_138;
      }
      else
      {
        v170 = 0;
      }
      v171 = v185 + v170;
      v172 = v115 + 2 * v170;
      v173 = &v117[v170];
      do
      {
        v174 = *(uint16x8_t *)(v119 + v172);
        v175 = *(uint16x8_t *)(v118 + v172);
        v176 = (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v174), (int32x4_t)vmovl_high_u16(v175));
        v219.val[0] = veorq_s8(v116, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v174.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v175.i8)));
        v219.val[1] = veorq_s8(v116, v176);
        *(_QWORD *)v173 = vqtbl2q_s8(v219, (int8x16_t)xmmword_1003BC970).u64[0];
        v173 += 8;
        v172 += 16;
        v171 += 8;
      }
      while (v171);
      v164 = v186;
      if (v114 != v187)
        goto LABEL_138;
LABEL_105:
      v119 += v209;
      v118 += v207;
      a5 += a6;
      v108 = v217 - 1;
      ++v107;
      v117 += a6;
      if (!v217)
        return result;
    }
  }
  if (v9 == 2)
    v9 = 4;
  else
    v9 = 1;
  v12 = a3;
  v13 = a4 >> 1;
  a3 = result;
  v11 = a2 >> 1;
LABEL_27:
  if (v9 == 1)
    v23 = 0;
  else
    v23 = 255;
  if (a8)
  {
    v24 = 0;
    v25 = a7 - 4;
    v26 = a7;
    v27 = 2 * a7;
    v28 = (int8x16_t)vdupq_n_s32(v23);
    v29 = 2 * v11;
    v30 = 2 * v13;
    result = v12;
    v208 = 2 * v13;
    v210 = v9;
    v31 = a3;
    v32 = (unint64_t)a5;
    v201 = a3;
    v202 = a5;
    v197 = v12;
    v199 = v9;
    v193 = 2 * v11;
    v195 = v27;
    do
    {
      LODWORD(v33) = 0;
      if (v9 <= 5)
        __asm { BR              X8 }
      v34 = &a5[v24 * a6];
      v35 = a3 + v29 * v24;
      v36 = v12 + v30 * v24;
      if ((v25 & 0x80000000) != 0)
      {
        if (a7 <= 0)
          goto LABEL_32;
        goto LABEL_72;
      }
      v37 = 0;
      v214 = a3 + v29 * v24;
      v216 = &a5[v24 * a6];
      v212 = v12 + v30 * v24;
      if (v25 >= 0x3C)
      {
        v38 = (unint64_t)&v34[(v25 & 0xFFFFFFFFFFFFFFFCLL) + 4];
        v39 = 0;
        v40 = 8 * (v25 >> 2);
        v41 = v35 + 8 + v40;
        v43 = v32 < v36 + 8 + v40 && result < v38;
        v44 = v31 >= v38 || v32 >= v41;
        if (!v44 || v43)
        {
          v33 = 0;
          v30 = v208;
        }
        else
        {
          v45 = ((v25 >> 2) + 1) & 0x7FFFFFFFFFFFFFF0;
          v33 = 4 * v45;
          do
          {
            v46 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(result + v39), *(uint16x8_t *)(v31 + v39));
            v47 = vmovn_s16(v46);
            v48 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(result + v39 + 16), *(uint16x8_t *)(v31 + v39 + 16));
            v49 = vmovn_s16(v48);
            v50 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(result + v39 + 32), *(uint16x8_t *)(v31 + v39 + 32));
            v51 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(result + v39 + 48), *(uint16x8_t *)(v31 + v39 + 48));
            v52 = vmovn_s16(v50);
            v53 = vmovn_s16(v51);
            v54 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(result + v39 + 64), *(uint16x8_t *)(v31 + v39 + 64));
            v55 = vmovn_s16(v54);
            v56 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(result + v39 + 80), *(uint16x8_t *)(v31 + v39 + 80));
            v57 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(result + v39 + 96), *(uint16x8_t *)(v31 + v39 + 96));
            v58 = vmovn_s16(v56);
            v59 = vmovn_s16(v57);
            v60 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(result + v39 + 112), *(uint16x8_t *)(v31 + v39 + 112));
            v61 = vmovn_s16(v60);
            v62 = vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v50, (int8x16_t)v51))), 0x1FuLL);
            v63 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v46, (int8x16_t)v48))), 0x1FuLL));
            v64 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v54, (int8x16_t)v56))), 0x1FuLL));
            v65 = v61.u8[2];
            v222.val[3] = veorq_s8(v28, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v57, (int8x16_t)v60))), 0x1FuLL)));
            v222.val[2] = veorq_s8(v28, v64);
            v222.val[1] = veorq_s8(v28, (int8x16_t)vcltzq_s32(v62));
            v222.val[0] = veorq_s8(v28, v63);
            v224.val[3] = veorq_s8(v28, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v59, v61)), 0x1FuLL)));
            v224.val[2] = veorq_s8(v28, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v55, v58)), 0x1FuLL)));
            v224.val[1] = veorq_s8(v28, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v52, v53)), 0x1FuLL)));
            v224.val[0] = veorq_s8(v28, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v47, v49)), 0x1FuLL)));
            v66.i16[0] = v47.u8[2];
            v66.i16[1] = v47.u8[6];
            v66.i16[2] = v49.u8[2];
            v67.i16[0] = v52.u8[2];
            v67.i16[1] = v52.u8[6];
            v68.i16[0] = v55.u8[2];
            v67.i16[2] = v53.u8[2];
            v68.i16[1] = v55.u8[6];
            v69 = v61.u8[7];
            v68.i16[2] = v58.u8[2];
            v222.val[0] = vqtbl4q_s8(v222, (int8x16_t)xmmword_1003BC960);
            v70 = v61.u8[3];
            v61.i16[0] = v59.u8[2];
            v66.i16[3] = v49.u8[6];
            v61.i16[1] = v59.u8[6];
            v61.i16[2] = v65;
            v67.i16[3] = v53.u8[6];
            v68.i16[3] = v58.u8[6];
            v71 = v58.u8[7];
            v72 = v58.u8[3];
            v61.i16[3] = v61.u8[6];
            v222.val[1] = vqtbl4q_s8(v224, (int8x16_t)xmmword_1003BC960);
            v73 = v52.u8[7];
            v74 = v52.u8[3];
            v52.i16[0] = v47.u8[3];
            v52.i16[1] = v47.u8[7];
            v52.i16[2] = v49.u8[3];
            v52.i16[3] = v49.u8[7];
            v58.i16[0] = v74;
            v58.i16[1] = v73;
            v58.i16[2] = v53.u8[3];
            v58.i16[3] = v53.u8[7];
            v224.val[3] = veorq_s8(v28, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v61), 0x1FuLL)));
            v53.i16[0] = v55.u8[3];
            v53.i16[1] = v55.u8[7];
            v53.i16[2] = v72;
            v224.val[2] = veorq_s8(v28, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v68), 0x1FuLL)));
            v53.i16[3] = v71;
            v224.val[1] = veorq_s8(v28, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v67), 0x1FuLL)));
            v47.i16[0] = v59.u8[3];
            v47.i16[1] = v59.u8[7];
            v47.i16[2] = v70;
            v224.val[0] = veorq_s8(v28, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v66), 0x1FuLL)));
            v47.i16[3] = v69;
            v226.val[3] = veorq_s8(v28, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v47), 0x1FuLL)));
            v226.val[2] = veorq_s8(v28, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v53), 0x1FuLL)));
            v226.val[1] = veorq_s8(v28, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v58), 0x1FuLL)));
            v226.val[0] = veorq_s8(v28, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v52), 0x1FuLL)));
            v222.val[2] = vqtbl4q_s8(v224, (int8x16_t)xmmword_1003BC960);
            v75 = (char *)(v32 + v37);
            v222.val[3] = vqtbl4q_s8(v226, (int8x16_t)xmmword_1003BC960);
            vst4q_s8(v75, v222);
            v37 += 64;
            v39 += 128;
            v45 -= 16;
          }
          while (v45);
          a6 = v204;
          a7 = v205;
          a3 = v201;
          a5 = v202;
          v12 = v197;
          v9 = v199;
          v29 = v193;
          v27 = v195;
          v30 = v208;
          if ((v25 >> 2) + 1 == (((v25 >> 2) + 1) & 0x7FFFFFFFFFFFFFF0))
            goto LABEL_71;
        }
      }
      else
      {
        v33 = 0;
      }
      v76 = 2 * v33 + 6;
      do
      {
        v77 = result + 2 * v33;
        v78 = v31 + 2 * v33;
        if (*(unsigned __int16 *)(v77 + 2) <= *(unsigned __int16 *)(v78 + 2))
          v79 = v23;
        else
          v79 = ~(_BYTE)v23;
        if (*(unsigned __int16 *)(result + v76 - 6) <= *(unsigned __int16 *)(v31 + v76 - 6))
          v80 = v23;
        else
          v80 = ~(_BYTE)v23;
        v81 = (_BYTE *)(v32 + v33);
        *v81 = v80;
        v81[1] = v79;
        if (*(unsigned __int16 *)(result + v76) <= *(unsigned __int16 *)(v31 + v76))
          v82 = v23;
        else
          v82 = ~(_BYTE)v23;
        if (*(unsigned __int16 *)(v77 + 4) <= *(unsigned __int16 *)(v78 + 4))
          v83 = v23;
        else
          v83 = ~(_BYTE)v23;
        v81[2] = v83;
        v81[3] = v82;
        v33 += 4;
        v76 += 8;
      }
      while (v33 <= (uint64_t)v25);
LABEL_71:
      v35 = v214;
      v34 = v216;
      v36 = v212;
      if ((int)v33 >= a7)
        goto LABEL_32;
LABEL_72:
      v84 = (int)v33;
      v85 = v26 - (int)v33;
      if (v85 < 8)
      {
        v86 = v84;
        goto LABEL_97;
      }
      v87 = (unint64_t)&v34[v26];
      v88 = v35 + v27;
      v89 = 2 * v84;
      v91 = v32 + v84 < v36 + v27 && result + 2 * v84 < v87;
      if (v31 + 2 * v84 < v87 && v32 + v84 < v88)
      {
        v86 = v84;
        goto LABEL_97;
      }
      if (v91)
      {
        v86 = v84;
        goto LABEL_97;
      }
      if (v85 >= 0x10)
      {
        v93 = v85 & 0xFFFFFFFFFFFFFFF0;
        v94 = v84;
        v95 = v85 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v97 = *(uint16x8_t *)(result + v89);
          v96 = *(uint16x8_t *)(result + v89 + 16);
          v99 = *(uint16x8_t *)(v31 + v89);
          v98 = *(uint16x8_t *)(v31 + v89 + 16);
          v220.val[3] = veorq_s8(v28, (int8x16_t)vcgtq_u32(vmovl_high_u16(v96), vmovl_high_u16(v98)));
          v220.val[1] = veorq_s8(v28, (int8x16_t)vcgtq_u32(vmovl_high_u16(v97), vmovl_high_u16(v99)));
          v220.val[2] = veorq_s8(v28, (int8x16_t)vcgtq_u32(vmovl_u16(*(uint16x4_t *)v96.i8), vmovl_u16(*(uint16x4_t *)v98.i8)));
          v220.val[0] = veorq_s8(v28, (int8x16_t)vcgtq_u32(vmovl_u16(*(uint16x4_t *)v97.i8), vmovl_u16(*(uint16x4_t *)v99.i8)));
          *(int8x16_t *)(v32 + v94) = vqtbl4q_s8(v220, (int8x16_t)xmmword_1003BC960);
          v89 += 32;
          v94 += 16;
          v95 -= 16;
        }
        while (v95);
        if (v85 == v93)
          goto LABEL_32;
        if ((v85 & 8) == 0)
        {
          v86 = v93 + v84;
          do
          {
LABEL_97:
            if (*(unsigned __int16 *)(result + 2 * v86) <= *(unsigned __int16 *)(v31 + 2 * v86))
              v106 = v23;
            else
              v106 = ~(_BYTE)v23;
            *(_BYTE *)(v32 + v86++) = v106;
          }
          while (v26 != v86);
          goto LABEL_32;
        }
      }
      else
      {
        v93 = 0;
      }
      v86 = (v85 & 0xFFFFFFFFFFFFFFF8) + v84;
      v100 = v93 - (v85 & 0xFFFFFFFFFFFFFFF8);
      v101 = v93 + v84;
      v102 = 2 * v101;
      do
      {
        v103 = *(uint16x8_t *)(result + v102);
        v104 = *(uint16x8_t *)(v31 + v102);
        v105 = (int8x16_t)vcgtq_u32(vmovl_high_u16(v103), vmovl_high_u16(v104));
        v218.val[0] = veorq_s8(v28, (int8x16_t)vcgtq_u32(vmovl_u16(*(uint16x4_t *)v103.i8), vmovl_u16(*(uint16x4_t *)v104.i8)));
        v218.val[1] = veorq_s8(v28, v105);
        *(_QWORD *)(v32 + v101) = vqtbl2q_s8(v218, (int8x16_t)xmmword_1003BC970).u64[0];
        v102 += 16;
        v101 += 8;
        v100 += 8;
      }
      while (v100);
      if (v85 != (v85 & 0xFFFFFFFFFFFFFFF8))
        goto LABEL_97;
LABEL_32:
      result += v30;
      v31 += v29;
      v32 += a6;
      ++v24;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001E601C(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, int8x16_t *a5, uint64_t a6, int a7, int a8, int *a9)
{
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  unsigned int v20;
  int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;
  uint64_t v28;
  int8x16_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int8x16_t v37;
  uint64_t v38;
  int16x8_t *v39;
  int16x8_t *v40;
  int8x16_t *v41;
  unint64_t v42;
  unint64_t v43;
  int8x16_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int8x16_t *v52;
  int16x8_t *v53;
  int16x8_t *v54;
  uint64_t v55;
  int16x8_t *v56;
  int16x8_t *v57;
  int16x8_t v58;
  int16x8_t v59;
  uint16x8_t v60;
  uint64_t v61;
  uint64_t v62;
  int16x8_t *v63;
  int16x8_t *v64;
  int8x16_t *v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  BOOL v74;
  unint64_t v76;
  int8x16_t *v77;
  unint64_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  int16x8_t v86;
  int16x8_t v87;
  int8x16_t v88;
  char v89;
  uint64_t v90;
  int8x16_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  int8x16_t v99;
  uint64_t v100;
  uint16x8_t *v101;
  uint16x8_t *v102;
  int8x16_t *v103;
  unint64_t v104;
  unint64_t v105;
  int8x16_t *v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  int8x16_t *v114;
  uint16x8_t *v115;
  uint16x8_t *v116;
  uint64_t v117;
  int16x8_t *v118;
  int16x8_t *v119;
  int16x8_t v120;
  int16x8_t v121;
  uint16x8_t v122;
  uint64_t v123;
  uint64_t v124;
  uint16x8_t *v125;
  uint16x8_t *v126;
  int8x16_t *v127;
  unint64_t v128;
  char v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  BOOL v136;
  unint64_t v138;
  int8x16_t *v139;
  unint64_t v140;
  uint16x8_t v141;
  uint16x8_t v142;
  uint16x8_t v143;
  uint16x8_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint16x8_t v148;
  uint16x8_t v149;
  int8x16_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v174;
  int v175;
  int v176;
  int8x16x2_t v177;
  int8x16x2_t v178;
  int8x16x4_t v179;
  int8x16x4_t v180;

  v9 = *a9;
  v10 = a4 >> 1;
  v174 = a6;
  if ((*a9 & 0xFFFFFFFE) != 2)
  {
    v11 = result;
    v12 = a2 >> 1;
    switch(v9)
    {
      case 0:
      case 5:
        if (v9)
          v13 = 255;
        else
          v13 = 0;
        if (!a8)
          return result;
        v14 = a8 - 1;
        v15 = (a7 - 16);
        if (a7 < 16)
        {
          if (a7 >= 1)
          {
            v16 = 2 * v10;
            do
            {
              v17 = 0;
              v18 = v14;
              do
              {
                if (*(unsigned __int16 *)(result + 2 * v17) == *(unsigned __int16 *)(a3 + 2 * v17))
                  v19 = ~(_BYTE)v13;
                else
                  v19 = v13;
                a5->i8[v17++] = v19;
              }
              while (a7 != v17);
              a5 = (int8x16_t *)((char *)a5 + a6);
              --v14;
              result += 2 * (a2 >> 1);
              a3 += v16;
            }
            while (v18);
          }
          return result;
        }
        v90 = 0;
        v91 = vdupq_n_s8(v13);
        v92 = a7;
        v93 = v15 & 0xFFFFFFF0;
        v94 = v93 + 17;
        if (v93 + 17 <= (unint64_t)a7)
          v94 = a7;
        v170 = v94 - v93;
        v95 = a2 & 0xFFFFFFFFFFFFFFFELL;
        v166 = 2 * v94 - ((2 * (a7 - 16)) & 0x1FFFFFFE0);
        v96 = a4 & 0xFFFFFFFFFFFFFFFELL;
        v97 = v94 - 16;
        v98 = v94 - 16 - v93;
        v158 = v94 & 0xF;
        v160 = v98 - v158;
        v162 = v98;
        v99 = (int8x16_t)vdupq_n_s32(v13);
        v100 = v94 & 7;
        v154 = v98 - v100;
        v156 = v100;
        v101 = (uint16x8_t *)(result + 32);
        v102 = (uint16x8_t *)(a3 + 32);
        v103 = a5 + 1;
        v152 = v97 - v100 - v93;
        v104 = a3;
        v105 = result;
        v106 = a5;
        v168 = a2 & 0xFFFFFFFFFFFFFFFELL;
        v164 = a4 & 0xFFFFFFFFFFFFFFFELL;
        break;
      case 1:
      case 4:
        goto LABEL_21;
      default:
        return result;
    }
    while (1)
    {
      v107 = 0;
      v108 = 0;
      v176 = v14;
      v109 = v90 * a6 + 16;
      v110 = v170 + v90 * a6;
      v111 = v95 * v90 + 32;
      v112 = v166 + v95 * v90;
      v113 = v96 * v90 + 32;
      v172 = v166 + v96 * v90;
      v114 = v103;
      v115 = v102;
      v116 = v101;
      v117 = 16;
      do
      {
        v118 = (int16x8_t *)(v105 + 2 * v108);
        v119 = (int16x8_t *)(v104 + 2 * v108);
        v120 = v118[1];
        v121 = v119[1];
        v122 = (uint16x8_t)vceqq_s16(*v118, *v119);
        v123 = v117;
        v124 = v107;
        v125 = v116;
        v126 = v115;
        v127 = v114;
        v106[v108 / 0x10] = veorq_s8((int8x16_t)vqmovn_high_u16(vqmovn_u16(v122), (uint16x8_t)vceqq_s16(v120, v121)), v91);
        v108 += 16;
        v117 += 16;
        ++v107;
        v116 += 2;
        v115 += 2;
        ++v114;
      }
      while (v108 <= v15);
      if ((int)v108 >= a7)
        goto LABEL_75;
      if (v162 < 8)
      {
        v128 = v123;
        goto LABEL_81;
      }
      v130 = (unint64_t)a5[v124].u64 + v109;
      v131 = (unint64_t)a5[v124].u64 + v110;
      v132 = result + 32 * v124 + v111;
      v133 = result + v112 + 32 * v124;
      v134 = a3 + 32 * v124 + v113;
      v136 = v130 < a3 + v172 + 32 * v124 && v134 < v131;
      if (v132 < v131 && v130 < v133)
      {
        v128 = v123;
        goto LABEL_81;
      }
      if (v136)
      {
        v128 = v123;
        goto LABEL_81;
      }
      if (v162 >= 0x10)
      {
        v139 = v127;
        v140 = v160;
        do
        {
          v142 = *v125;
          v141 = v125[1];
          v125 += 2;
          v144 = *v126;
          v143 = v126[1];
          v126 += 2;
          v180.val[3] = veorq_s8(v99, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v141), (int32x4_t)vmovl_high_u16(v143)));
          v180.val[1] = veorq_s8(v99, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v142), (int32x4_t)vmovl_high_u16(v144)));
          v180.val[2] = veorq_s8(v99, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v141.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v143.i8)));
          v180.val[0] = veorq_s8(v99, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v142.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v144.i8)));
          *v139++ = vqtbl4q_s8(v180, (int8x16_t)xmmword_1003BC960);
          v140 -= 16;
        }
        while (v140);
        if (!v158)
          goto LABEL_75;
        v138 = v160;
        if (v158 < 8)
        {
          v128 = v123 + v160;
          do
          {
LABEL_81:
            if (*(unsigned __int16 *)(v105 + 2 * v128) == *(unsigned __int16 *)(v104 + 2 * v128))
              v129 = ~(_BYTE)v13;
            else
              v129 = v13;
            v106->i8[v128++] = v129;
          }
          while (v128 < v92);
          goto LABEL_75;
        }
      }
      else
      {
        v138 = 0;
      }
      v128 = v123 + v154;
      v145 = v152 - v138;
      v146 = 2 * (v138 + v123);
      v147 = (uint64_t *)((char *)v127->i64 + v138);
      do
      {
        v148 = *(uint16x8_t *)(v105 + v146);
        v149 = *(uint16x8_t *)(v104 + v146);
        v150 = (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v148), (int32x4_t)vmovl_high_u16(v149));
        v178.val[0] = veorq_s8(v99, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v148.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v149.i8)));
        v178.val[1] = veorq_s8(v99, v150);
        *v147++ = vqtbl2q_s8(v178, (int8x16_t)xmmword_1003BC970).u64[0];
        v146 += 16;
        v145 -= 8;
      }
      while (v145);
      if (v156)
        goto LABEL_81;
LABEL_75:
      v95 = v168;
      v105 += v168;
      v96 = v164;
      v104 += v164;
      a6 = v174;
      v106 = (int8x16_t *)((char *)v106 + v174);
      v14 = v176 - 1;
      ++v90;
      v101 = (uint16x8_t *)((char *)v101 + v168);
      v102 = (uint16x8_t *)((char *)v102 + v164);
      v103 = (int8x16_t *)((char *)v103 + v174);
      if (!v176)
        return result;
    }
  }
  if (v9 == 2)
    v9 = 4;
  else
    v9 = 1;
  v11 = a3;
  v12 = a4 >> 1;
  a3 = result;
  v10 = a2 >> 1;
LABEL_21:
  if (v9 == 1)
    v20 = 0;
  else
    v20 = 255;
  if (a8)
  {
    v21 = a8 - 1;
    v22 = (a7 - 16);
    if (a7 < 16)
    {
      if (a7 >= 1)
      {
        v23 = 2 * v12;
        v24 = 2 * v10;
        do
        {
          v25 = 0;
          v26 = v21;
          do
          {
            if (*(__int16 *)(v11 + 2 * v25) <= *(__int16 *)(a3 + 2 * v25))
              v27 = v20;
            else
              v27 = ~(_BYTE)v20;
            a5->i8[v25++] = v27;
          }
          while (a7 != v25);
          a5 = (int8x16_t *)((char *)a5 + a6);
          --v21;
          v11 += v23;
          a3 += v24;
        }
        while (v26);
      }
      return result;
    }
    v28 = 0;
    v29 = vdupq_n_s8(v20);
    v30 = a7;
    v31 = v22 & 0xFFFFFFF0;
    v32 = v31 + 17;
    if (v31 + 17 <= (unint64_t)a7)
      v32 = a7;
    v169 = v32 - v31;
    v33 = 2 * v10;
    v165 = 2 * v32 - ((2 * (a7 - 16)) & 0x1FFFFFFE0);
    v34 = 2 * v12;
    v35 = v32 - 16;
    v36 = v32 - 16 - v31;
    v157 = v32 & 0xF;
    v159 = v36 - v157;
    v161 = v36;
    v37 = (int8x16_t)vdupq_n_s32(v20);
    v38 = v32 & 7;
    v153 = v36 - v38;
    v155 = v38;
    v39 = (int16x8_t *)(v11 + 32);
    v40 = (int16x8_t *)(a3 + 32);
    v41 = a5 + 1;
    v151 = v35 - v38 - v31;
    v42 = a3;
    v43 = v11;
    v44 = a5;
    v167 = v33;
    v163 = v34;
    do
    {
      v45 = 0;
      v46 = 0;
      v175 = v21;
      v47 = v28 * a6 + 16;
      v48 = v169 + v28 * a6;
      v49 = v33 * v28 + 32;
      v50 = v165 + v33 * v28;
      v171 = v34 * v28 + 32;
      v51 = v165 + v34 * v28;
      v52 = v41;
      v53 = v40;
      v54 = v39;
      v55 = 16;
      do
      {
        v56 = (int16x8_t *)(v43 + 2 * v46);
        v57 = (int16x8_t *)(v42 + 2 * v46);
        v58 = v56[1];
        v59 = v57[1];
        v60 = (uint16x8_t)vcgtq_s16(*v56, *v57);
        v61 = v55;
        v62 = v45;
        v63 = v54;
        v64 = v53;
        v65 = v52;
        v44[v46 / 0x10] = veorq_s8((int8x16_t)vqmovn_high_u16(vqmovn_u16(v60), (uint16x8_t)vcgtq_s16(v58, v59)), v29);
        v46 += 16;
        v55 += 16;
        ++v45;
        v54 += 2;
        v53 += 2;
        ++v52;
      }
      while (v46 <= v22);
      result = a7;
      if ((int)v46 >= a7)
        goto LABEL_38;
      if (v161 < 8)
      {
        v66 = v61;
        goto LABEL_67;
      }
      v67 = v51;
      v68 = (unint64_t)a5[v62].u64 + v47;
      v69 = (unint64_t)a5[v62].u64 + v48;
      v70 = 32 * v62;
      v71 = a3 + v70 + v49;
      v72 = a3 + v50 + v70;
      result = v11 + v70 + v171;
      v74 = v68 < v11 + v67 + v70 && result < v69;
      if (v71 < v69 && v68 < v72)
      {
        v66 = v61;
        goto LABEL_67;
      }
      if (v74)
      {
        v66 = v61;
        goto LABEL_67;
      }
      if (v161 >= 0x10)
      {
        v77 = v65;
        v78 = v159;
        do
        {
          v80 = *v63;
          v79 = v63[1];
          v63 += 2;
          v82 = *v64;
          v81 = v64[1];
          v64 += 2;
          v179.val[3] = veorq_s8(v37, (int8x16_t)vcgtq_s32(vmovl_high_s16(v79), vmovl_high_s16(v81)));
          v179.val[1] = veorq_s8(v37, (int8x16_t)vcgtq_s32(vmovl_high_s16(v80), vmovl_high_s16(v82)));
          v179.val[2] = veorq_s8(v37, (int8x16_t)vcgtq_s32(vmovl_s16(*(int16x4_t *)v79.i8), vmovl_s16(*(int16x4_t *)v81.i8)));
          v179.val[0] = veorq_s8(v37, (int8x16_t)vcgtq_s32(vmovl_s16(*(int16x4_t *)v80.i8), vmovl_s16(*(int16x4_t *)v82.i8)));
          *v77++ = vqtbl4q_s8(v179, (int8x16_t)xmmword_1003BC960);
          v78 -= 16;
        }
        while (v78);
        if (!v157)
          goto LABEL_38;
        v76 = v159;
        if (v157 < 8)
        {
          v66 = v61 + v159;
          do
          {
LABEL_67:
            if (*(__int16 *)(v43 + 2 * v66) <= *(__int16 *)(v42 + 2 * v66))
              v89 = v20;
            else
              v89 = ~(_BYTE)v20;
            v44->i8[v66++] = v89;
          }
          while (v66 < v30);
          goto LABEL_38;
        }
      }
      else
      {
        v76 = 0;
      }
      v66 = v61 + v153;
      v83 = v151 - v76;
      v84 = 2 * (v76 + v61);
      v85 = (uint64_t *)((char *)v65->i64 + v76);
      do
      {
        v86 = *(int16x8_t *)(v43 + v84);
        v87 = *(int16x8_t *)(v42 + v84);
        v88 = (int8x16_t)vcgtq_s32(vmovl_high_s16(v86), vmovl_high_s16(v87));
        v177.val[0] = veorq_s8(v37, (int8x16_t)vcgtq_s32(vmovl_s16(*(int16x4_t *)v86.i8), vmovl_s16(*(int16x4_t *)v87.i8)));
        v177.val[1] = veorq_s8(v37, v88);
        *v85++ = vqtbl2q_s8(v177, (int8x16_t)xmmword_1003BC970).u64[0];
        v84 += 16;
        v83 -= 8;
      }
      while (v83);
      if (v155)
        goto LABEL_67;
LABEL_38:
      v34 = v163;
      v43 += v163;
      v33 = v167;
      v42 += v167;
      a6 = v174;
      v44 = (int8x16_t *)((char *)v44 + v174);
      v21 = v175 - 1;
      ++v28;
      v39 = (int16x8_t *)((char *)v39 + v163);
      v40 = (int16x8_t *)((char *)v40 + v167);
      v41 = (int8x16_t *)((char *)v41 + v174);
    }
    while (v175);
  }
  return result;
}

unint64_t sub_1001E6804(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, char *a5, uint64_t a6, int a7, int a8, int *a9)
{
  unint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unint64_t v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  _BYTE *v20;
  char v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  int8x16_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  unint64_t i;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  BOOL v50;
  BOOL v51;
  unint64_t v52;
  uint64_t v53;
  int16x8_t v54;
  int16x8_t v55;
  int16x8_t v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int8x8_t v60;
  int16x8_t v61;
  int8x8_t v62;
  int16x8_t v63;
  int16x8_t v64;
  int8x8_t v65;
  int16x8_t v66;
  int8x8_t v67;
  int8x8_t v68;
  __int16 v69;
  __int16 v70;
  __int16 v71;
  __int16 v72;
  __int16 v73;
  __int16 v74;
  __int16 v75;
  __int16 v76;
  __int16 v77;
  __int16 v78;
  __int16 v79;
  __int16 v80;
  __int16 v81;
  __int16 v82;
  __int16 v83;
  __int16 v84;
  __int16 v85;
  __int16 v86;
  char *v87;
  uint64_t v88;
  char *v89;
  int8x8_t v90;
  int8x8_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  BOOL v98;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int8x16_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  unint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  unint64_t v125;
  BOOL v127;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int16x8_t v132;
  int16x8_t v133;
  int16x8_t v134;
  int16x8_t v135;
  int16x8_t v136;
  int16x8_t v137;
  int8x8_t v138;
  int16x8_t v139;
  int8x8_t v140;
  int16x8_t v141;
  int16x8_t v142;
  int8x8_t v143;
  int16x8_t v144;
  int8x8_t v145;
  int8x8_t v146;
  __int16 v147;
  __int16 v148;
  __int16 v149;
  __int16 v150;
  __int16 v151;
  __int16 v152;
  __int16 v153;
  __int16 v154;
  __int16 v155;
  __int16 v156;
  __int16 v157;
  __int16 v158;
  __int16 v159;
  __int16 v160;
  __int16 v161;
  __int16 v162;
  __int16 v163;
  __int16 v164;
  BOOL v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  char v169;
  char v170;
  char *v171;
  char v172;
  char v173;
  unint64_t v174;
  char v175;
  unint64_t v176;
  BOOL v177;
  char v178;
  BOOL v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  unint64_t v197;
  char v198;
  unint64_t v199;
  unint64_t v200;
  uint64_t v201;
  int v202;
  unint64_t v203;
  unint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  int v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  char *v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  int v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  unint64_t v223;
  uint64_t v224;
  unint64_t v225;
  unint64_t v226;
  int v227;
  unint64_t v228;
  char *v229;
  int8x16x2_t v230;
  int8x16x2_t v231;
  int8x16x4_t v232;
  int8x16x4_t v233;
  int8x16x4_t v234;
  int8x16x4_t v235;
  int8x16x4_t v236;
  int8x16x4_t v237;

  v9 = result;
  v10 = *a9;
  v11 = a2 >> 2;
  v12 = a4 >> 2;
  v208 = a6;
  v209 = a7;
  if ((*a9 & 0xFFFFFFFE) != 2)
  {
    v13 = result;
    v14 = a2 >> 2;
    switch(v10)
    {
      case 0:
      case 5:
        if (v10)
          v15 = 255;
        else
          v15 = 0;
        if (!a8)
          return result;
        v16 = (a7 - 4);
        if (a7 < 4)
        {
          if (a7 >= 1)
          {
            v17 = (_DWORD *)(a3 + 8);
            v18 = (_DWORD *)(result + 8);
            v19 = 4 * v11;
            v20 = a5 + 1;
            do
            {
              if (*(v18 - 2) == *(v17 - 2))
                v21 = ~(_BYTE)v15;
              else
                v21 = v15;
              *(v20 - 1) = v21;
              if (a7 != 1)
              {
                v22 = *(v18 - 1) == *(v17 - 1) ? ~(_BYTE)v15 : v15;
                *v20 = v22;
                if (a7 != 2)
                {
                  if (*v18 == *v17)
                    v23 = ~(_BYTE)v15;
                  else
                    v23 = v15;
                  v20[1] = v23;
                }
              }
              v17 += v12;
              v18 = (_DWORD *)((char *)v18 + v19);
              v20 += a6;
              --a8;
            }
            while (a8);
          }
          return result;
        }
        v107 = 0;
        v108 = a8 - 1;
        result = a7;
        v109 = (v16 & 0xFFFFFFFC) + 4;
        v110 = (v16 & 0xFFFFFFFC) + 5;
        if (v110 <= a7)
          v110 = a7;
        v211 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
        v111 = a2 & 0xFFFFFFFFFFFFFFFCLL;
        v201 = 4 * v110;
        v112 = a4 & 0xFFFFFFFFFFFFFFFCLL;
        v113 = v110 - (v16 & 0xFFFFFFFC) - 4;
        v114 = 16 * (v16 >> 2) + 16;
        v115 = a3;
        v195 = (v16 >> 2) + 1;
        v116 = v195 & 0x7FFFFFF0;
        v117 = (int8x16_t)vdupq_n_s32(v15);
        v191 = v113 & 0xFFFFFFFFFFFFFFF0;
        v187 = v109 + (v113 & 0xFFFFFFFFFFFFFFF0);
        v189 = v109 + (v113 & 0xFFFFFFFFFFFFFFF8);
        v190 = v113 & 0xFFFFFFFFFFFFFFF8;
        v118 = 4 * v11;
        v119 = 4 * v12;
        v188 = -(uint64_t)(v113 & 0xFFFFFFFFFFFFFFF8);
        v192 = &a5[v110];
        v218 = &a5[v109];
        v120 = &a5[v109];
        v121 = v115;
        v122 = v9;
        v214 = v9;
        v203 = a2 & 0xFFFFFFFFFFFFFFFCLL;
        v205 = v115;
        v197 = v113;
        v199 = a4 & 0xFFFFFFFFFFFFFFFCLL;
        v193 = 4 * v12;
        v194 = 4 * v11;
        break;
      case 1:
      case 4:
        goto LABEL_27;
      default:
        return result;
    }
    while (1)
    {
      v123 = &v218[v107 * a6];
      v229 = v120;
      v227 = v108;
      v223 = v112 * v107;
      v225 = (unint64_t)v123;
      v219 = v107 * a6;
      v221 = v111 * v107;
      if (v16 >= 0x3C)
      {
        v125 = 0;
        v124 = v115;
        v127 = (unint64_t)a5 < v115 + v114 + v112 * v107 && v121 < (unint64_t)v123;
        if ((v122 >= (unint64_t)v123 || (unint64_t)a5 >= v9 + v114 + v111 * v107) && !v127)
        {
          v216 = v107;
          v129 = 0;
          v130 = v116;
          v131 = v116;
          v207 = a5;
          do
          {
            v132 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129), *(int32x4_t *)(v121 + v129)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129 + 16), *(int32x4_t *)(v121 + v129 + 16)));
            v133 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129 + 32), *(int32x4_t *)(v121 + v129 + 32)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129 + 48), *(int32x4_t *)(v121 + v129 + 48)));
            v134 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129 + 64), *(int32x4_t *)(v121 + v129 + 64)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129 + 80), *(int32x4_t *)(v121 + v129 + 80)));
            v135 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129 + 96), *(int32x4_t *)(v121 + v129 + 96)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129 + 112), *(int32x4_t *)(v121 + v129 + 112)));
            v136 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129 + 128), *(int32x4_t *)(v121 + v129 + 128)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129 + 144), *(int32x4_t *)(v121 + v129 + 144)));
            v137 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129 + 160), *(int32x4_t *)(v121 + v129 + 160)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129 + 176), *(int32x4_t *)(v121 + v129 + 176)));
            v138 = vmovn_s16(v132);
            v139 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129 + 192), *(int32x4_t *)(v121 + v129 + 192)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129 + 208), *(int32x4_t *)(v121 + v129 + 208)));
            v140 = vmovn_s16(v133);
            v141 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129 + 224), *(int32x4_t *)(v121 + v129 + 224)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v122 + v129 + 240), *(int32x4_t *)(v121 + v129 + 240)));
            v142 = (int16x8_t)vuzp1q_s8((int8x16_t)v132, (int8x16_t)v133);
            v234.val[3] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v139, (int8x16_t)v141))), 0x1FuLL)));
            v234.val[2] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v136, (int8x16_t)v137))), 0x1FuLL)));
            v143 = vmovn_s16(v134);
            v144 = (int16x8_t)vuzp1q_s8((int8x16_t)v134, (int8x16_t)v135);
            v145 = vmovn_s16(v135);
            v146 = vmovn_s16(v136);
            *(int8x8_t *)v134.i8 = vmovn_s16(v137);
            *(int8x8_t *)v132.i8 = vmovn_s16(v139);
            *(int8x8_t *)v139.i8 = vmovn_s16(v141);
            v234.val[1] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v144)), 0x1FuLL)));
            v147 = v139.u8[6];
            v148 = v139.u8[2];
            v149 = v139.u8[7];
            v150 = v139.u8[3];
            v151 = v132.u8[6];
            v152 = v132.u8[2];
            v153 = v134.u8[6];
            v154 = v134.u8[2];
            v155 = v132.u8[7];
            v156 = v132.u8[3];
            v234.val[0] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v142)), 0x1FuLL)));
            v157 = v134.u8[7];
            v158 = v134.u8[3];
            v237.val[3] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(*(int8x8_t *)v132.i8, *(int8x8_t *)v139.i8)), 0x1FuLL)));
            v237.val[2] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v146, *(int8x8_t *)v134.i8)), 0x1FuLL)));
            v237.val[1] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v143, v145)), 0x1FuLL)));
            v237.val[0] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v138, v140)), 0x1FuLL)));
            v136.i16[0] = v138.u8[2];
            v159 = v146.u8[7];
            v136.i16[1] = v138.u8[6];
            v160 = v146.u8[3];
            v146.i16[0] = v146.u8[2];
            v234.val[0] = vqtbl4q_s8(v234, (int8x16_t)xmmword_1003BC960);
            v146.i16[1] = v146.u8[6];
            v136.i16[2] = v140.u8[2];
            v146.i16[2] = v154;
            v136.i16[3] = v140.u8[6];
            v234.val[1] = vqtbl4q_s8(v237, (int8x16_t)xmmword_1003BC960);
            v237.val[0].i16[0] = v152;
            v237.val[0].i16[1] = v151;
            v146.i16[3] = v153;
            v237.val[0].i16[2] = v148;
            v237.val[0].i16[3] = v147;
            v161 = v140.u8[7];
            v162 = v140.u8[3];
            v237.val[3] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v237.val[0].i8), 0x1FuLL)));
            v237.val[2] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v146), 0x1FuLL)));
            v140.i16[0] = v143.u8[2];
            v140.i16[1] = v143.u8[6];
            v140.i16[2] = v145.u8[2];
            v140.i16[3] = v145.u8[6];
            v163 = v138.u8[7];
            v164 = v138.u8[3];
            v138.i16[0] = v143.u8[3];
            v138.i16[1] = v143.u8[7];
            v138.i16[2] = v145.u8[3];
            v138.i16[3] = v145.u8[7];
            v237.val[1] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v140), 0x1FuLL)));
            v140.i16[0] = v160;
            v140.i16[1] = v159;
            v140.i16[2] = v158;
            v237.val[0] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v136.i8), 0x1FuLL)));
            v140.i16[3] = v157;
            v234.val[2] = vqtbl4q_s8(v237, (int8x16_t)xmmword_1003BC960);
            v143.i16[0] = v156;
            v143.i16[1] = v155;
            v143.i16[2] = v150;
            v143.i16[3] = v149;
            v237.val[3] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v143), 0x1FuLL)));
            v237.val[2] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v140), 0x1FuLL)));
            v237.val[1] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v138), 0x1FuLL)));
            v138.i16[0] = v164;
            v138.i16[1] = v163;
            v138.i16[2] = v162;
            v138.i16[3] = v161;
            v237.val[0] = veorq_s8(v117, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v138), 0x1FuLL)));
            v234.val[3] = vqtbl4q_s8(v237, (int8x16_t)xmmword_1003BC960);
            vst4q_s8(a5, v234);
            a5 += 64;
            v129 += 256;
            v131 -= 16;
          }
          while (v131);
          v125 = 4 * (v195 & 0x7FFFFFF0);
          v116 = v130;
          v165 = v195 == v130;
          a6 = v208;
          a7 = v209;
          v124 = v205;
          a5 = v207;
          v9 = v214;
          v107 = v216;
          v109 = (v16 & 0xFFFFFFFC) + 4;
          v111 = v203;
          v113 = v197;
          v112 = v199;
          v114 = 16 * (v16 >> 2) + 16;
          v119 = v193;
          v118 = v194;
          if (v165)
            goto LABEL_141;
        }
      }
      else
      {
        v124 = v115;
        v125 = 0;
      }
      v166 = 4 * v125 + 12;
      do
      {
        v167 = v122 + 4 * v125;
        v168 = v121 + 4 * v125;
        if (*(_DWORD *)(v167 + 4) == *(_DWORD *)(v168 + 4))
          v169 = ~(_BYTE)v15;
        else
          v169 = v15;
        if (*(_DWORD *)(v122 + v166 - 12) == *(_DWORD *)(v121 + v166 - 12))
          v170 = ~(_BYTE)v15;
        else
          v170 = v15;
        v171 = &a5[v125];
        *v171 = v170;
        v171[1] = v169;
        if (*(_DWORD *)(v122 + v166) == *(_DWORD *)(v121 + v166))
          v172 = ~(_BYTE)v15;
        else
          v172 = v15;
        if (*(_DWORD *)(v167 + 8) == *(_DWORD *)(v168 + 8))
          v173 = ~(_BYTE)v15;
        else
          v173 = v15;
        v171[2] = v173;
        v171[3] = v172;
        v125 += 4;
        v166 += 16;
      }
      while (v125 <= v16);
LABEL_141:
      v115 = v124;
      if ((int)v125 < a7)
      {
        v174 = v109;
        if (v113 < 8
          || ((v176 = (unint64_t)&v192[v219], v225 < v124 + v201 + v223)
            ? (v177 = v124 + v211 + v223 >= v176)
            : (v177 = 1),
              v177 ? (v178 = 0) : (v178 = 1),
              v9 + v211 + v221 < v176 ? (v179 = v225 >= v9 + v201 + v221) : (v179 = 1),
              (v174 = v109, !v179) || (v174 = v109, (v178 & 1) != 0)))
        {
          do
          {
LABEL_143:
            if (*(_DWORD *)(v122 + 4 * v174) == *(_DWORD *)(v121 + 4 * v174))
              v175 = ~(_BYTE)v15;
            else
              v175 = v15;
            a5[v174++] = v175;
          }
          while (v174 < result);
          goto LABEL_109;
        }
        if (v113 >= 0x10)
        {
          v184 = v109;
          v185 = v114;
          v186 = v191;
          do
          {
            v235.val[3] = veorq_s8(v117, (int8x16_t)vceqq_s32(*(int32x4_t *)(v122 + v185 + 48), *(int32x4_t *)(v121 + v185 + 48)));
            v235.val[2] = veorq_s8(v117, (int8x16_t)vceqq_s32(*(int32x4_t *)(v122 + v185 + 32), *(int32x4_t *)(v121 + v185 + 32)));
            v235.val[1] = veorq_s8(v117, (int8x16_t)vceqq_s32(*(int32x4_t *)(v122 + v185 + 16), *(int32x4_t *)(v121 + v185 + 16)));
            v235.val[0] = veorq_s8(v117, (int8x16_t)vceqq_s32(*(int32x4_t *)(v122 + v185), *(int32x4_t *)(v121 + v185)));
            *(int8x16_t *)&a5[v184] = vqtbl4q_s8(v235, (int8x16_t)xmmword_1003BC960);
            v185 += 64;
            v184 += 16;
            v186 -= 16;
          }
          while (v186);
          if (v113 == v191)
            goto LABEL_109;
          v180 = v191;
          v174 = v187;
          if ((v113 & 8) == 0)
            goto LABEL_143;
        }
        else
        {
          v180 = 0;
        }
        v181 = v188 + v180;
        v182 = v114 + 4 * v180;
        v183 = &v229[v180];
        do
        {
          v231.val[0] = veorq_s8(v117, (int8x16_t)vceqq_s32(*(int32x4_t *)(v122 + v182), *(int32x4_t *)(v121 + v182)));
          v231.val[1] = veorq_s8(v117, (int8x16_t)vceqq_s32(*(int32x4_t *)(v122 + v182 + 16), *(int32x4_t *)(v121 + v182 + 16)));
          *(_QWORD *)v183 = vqtbl2q_s8(v231, (int8x16_t)xmmword_1003BC970).u64[0];
          v183 += 8;
          v182 += 32;
          v181 += 8;
        }
        while (v181);
        v174 = v189;
        if (v113 != v190)
          goto LABEL_143;
      }
LABEL_109:
      v122 += v118;
      v121 += v119;
      a5 += a6;
      v108 = v227 - 1;
      ++v107;
      v120 = &v229[a6];
      if (!v227)
        return result;
    }
  }
  if (v10 == 2)
    v10 = 4;
  else
    v10 = 1;
  v13 = a3;
  v14 = a4 >> 2;
  a3 = result;
  v12 = a2 >> 2;
LABEL_27:
  if (v10 == 1)
    v24 = 0;
  else
    v24 = 255;
  if (a8)
  {
    v25 = 0;
    v26 = (a7 - 8);
    v27 = a7 - 4;
    v28 = a7;
    v224 = 4 * a7;
    v29 = (int8x16_t)vdupq_n_s32(v24);
    v30 = 4 * v12;
    v31 = 4 * v14;
    result = v13;
    v32 = a3;
    v33 = a5;
    v204 = a3;
    v206 = a5;
    v200 = v13;
    v202 = v10;
    v198 = v24;
    v196 = v26;
    v220 = 4 * v14;
    v222 = 4 * v12;
    while (1)
    {
      LODWORD(i) = 0;
      switch(v10)
      {
        case 0:
          if (a7 < 8)
            goto LABEL_47;
          v35 = 0;
          for (i = 0; i <= v26; i += 8)
          {
            *(int8x8_t *)&v33[i] = vmovn_s16(vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(result + v35), *(int32x4_t *)(v32 + v35)), (int16x8_t)vceqq_s32(*(int32x4_t *)(result + v35 + 16), *(int32x4_t *)(v32 + v35 + 16))));
            v35 += 32;
          }
          goto LABEL_53;
        case 1:
          if (a7 < 8)
            goto LABEL_47;
          v36 = 0;
          for (i = 0; i <= v26; i += 8)
          {
            *(int8x8_t *)&v33[i] = vmovn_s16(vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v36), *(int32x4_t *)(v32 + v36)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v36 + 16), *(int32x4_t *)(v32 + v36 + 16))));
            v36 += 32;
          }
          goto LABEL_53;
        case 4:
          if (a7 < 8)
            goto LABEL_47;
          v37 = 0;
          for (i = 0; i <= v26; i += 8)
          {
            *(int8x8_t *)&v33[i] = vmovn_s16(vuzp1q_s16((int16x8_t)vcgeq_s32(*(int32x4_t *)(v32 + v37), *(int32x4_t *)(result + v37)), (int16x8_t)vcgeq_s32(*(int32x4_t *)(v32 + v37 + 16), *(int32x4_t *)(result + v37 + 16))));
            v37 += 32;
          }
          goto LABEL_53;
        case 5:
          if (a7 >= 8)
          {
            v41 = 0;
            for (i = 0; i <= v26; i += 8)
            {
              *(int8x8_t *)&v33[i] = vmvn_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(result + v41), *(int32x4_t *)(v32 + v41)), (int16x8_t)vceqq_s32(*(int32x4_t *)(result + v41 + 16), *(int32x4_t *)(v32 + v41 + 16)))));
              v41 += 32;
            }
LABEL_53:
            v38 = &a5[v25 * a6];
            v39 = a3 + v30 * v25;
            v40 = v13 + v31 * v25;
            if ((int)i > (int)v27)
            {
LABEL_49:
              if ((int)i >= a7)
                goto LABEL_32;
              goto LABEL_76;
            }
          }
          else
          {
LABEL_47:
            LODWORD(i) = 0;
LABEL_48:
            v38 = &a5[v25 * a6];
            v39 = a3 + v30 * v25;
            v40 = v13 + v31 * v25;
            if ((int)v27 < 0)
              goto LABEL_49;
          }
          v42 = (int)i;
          v43 = v27 - (int)i;
          v228 = v40;
          if (v43 < 0x3C)
          {
            i = (int)i;
            goto LABEL_73;
          }
          v226 = v39;
          v44 = v43 >> 2;
          v45 = (unint64_t)&v38[(v43 & 0xFFFFFFFFFFFFFFFCLL) + 4 + (int)i];
          v46 = 4 * (int)i;
          v47 = v46 + 16 * (v43 >> 2);
          v48 = v39 + 16 + v47;
          v50 = (unint64_t)&v33[(int)i] < v40 + 16 + v47 && result + 4 * (int)i < v45;
          v51 = v32 + v46 >= v45 || (unint64_t)&v33[(int)i] >= v48;
          if (!v51 || v50)
          {
            i = (int)i;
            v31 = v220;
            v30 = v222;
            v39 = v226;
LABEL_73:
            v88 = 4 * i + 8;
            do
            {
              v89 = &v33[i];
              v90 = veor_s8(*(int8x8_t *)v29.i8, (int8x8_t)vcgt_s32(*(int32x2_t *)(result + v88 - 8), *(int32x2_t *)(v32 + v88 - 8)));
              v89[1] = v90.i8[4];
              *v89 = v90.i8[0];
              v91 = veor_s8(*(int8x8_t *)v29.i8, (int8x8_t)vcgt_s32(*(int32x2_t *)(result + v88), *(int32x2_t *)(v32 + v88)));
              v89[3] = v91.i8[4];
              v89[2] = v91.i8[0];
              i += 4;
              v88 += 16;
            }
            while ((uint64_t)i <= v27);
            goto LABEL_75;
          }
          v213 = v38;
          v215 = v25;
          v217 = a8;
          v52 = v44 + 1;
          v53 = v52 & 0x7FFFFFFFFFFFFFF0;
          i = (int)i + 4 * (v52 & 0x7FFFFFFFFFFFFFF0);
          v210 = v52 & 0x7FFFFFFFFFFFFFF0;
          v212 = v52;
          do
          {
            v54 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46), *(int32x4_t *)(v32 + v46)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46 + 16), *(int32x4_t *)(v32 + v46 + 16)));
            v55 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46 + 32), *(int32x4_t *)(v32 + v46 + 32)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46 + 48), *(int32x4_t *)(v32 + v46 + 48)));
            v56 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46 + 64), *(int32x4_t *)(v32 + v46 + 64)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46 + 80), *(int32x4_t *)(v32 + v46 + 80)));
            v57 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46 + 96), *(int32x4_t *)(v32 + v46 + 96)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46 + 112), *(int32x4_t *)(v32 + v46 + 112)));
            v58 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46 + 128), *(int32x4_t *)(v32 + v46 + 128)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46 + 144), *(int32x4_t *)(v32 + v46 + 144)));
            v59 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46 + 160), *(int32x4_t *)(v32 + v46 + 160)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46 + 176), *(int32x4_t *)(v32 + v46 + 176)));
            v60 = vmovn_s16(v54);
            v61 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46 + 192), *(int32x4_t *)(v32 + v46 + 192)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46 + 208), *(int32x4_t *)(v32 + v46 + 208)));
            v62 = vmovn_s16(v55);
            v63 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46 + 224), *(int32x4_t *)(v32 + v46 + 224)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(result + v46 + 240), *(int32x4_t *)(v32 + v46 + 240)));
            v64 = (int16x8_t)vuzp1q_s8((int8x16_t)v54, (int8x16_t)v55);
            v232.val[3] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v61, (int8x16_t)v63))), 0x1FuLL)));
            v232.val[2] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v58, (int8x16_t)v59))), 0x1FuLL)));
            v65 = vmovn_s16(v56);
            v66 = (int16x8_t)vuzp1q_s8((int8x16_t)v56, (int8x16_t)v57);
            v67 = vmovn_s16(v57);
            v68 = vmovn_s16(v58);
            *(int8x8_t *)v56.i8 = vmovn_s16(v59);
            *(int8x8_t *)v54.i8 = vmovn_s16(v61);
            *(int8x8_t *)v61.i8 = vmovn_s16(v63);
            v232.val[1] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v66)), 0x1FuLL)));
            v69 = v61.u8[6];
            v70 = v61.u8[2];
            v71 = v61.u8[7];
            v72 = v61.u8[3];
            v73 = v54.u8[6];
            v74 = v54.u8[2];
            v75 = v56.u8[6];
            v76 = v56.u8[2];
            v77 = v54.u8[7];
            v78 = v54.u8[3];
            v232.val[0] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v64)), 0x1FuLL)));
            v79 = v56.u8[7];
            v80 = v56.u8[3];
            v236.val[3] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(*(int8x8_t *)v54.i8, *(int8x8_t *)v61.i8)), 0x1FuLL)));
            v236.val[2] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v68, *(int8x8_t *)v56.i8)), 0x1FuLL)));
            v236.val[1] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v65, v67)), 0x1FuLL)));
            v236.val[0] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v60, v62)), 0x1FuLL)));
            v58.i16[0] = v60.u8[2];
            v81 = v68.u8[7];
            v58.i16[1] = v60.u8[6];
            v82 = v68.u8[3];
            v68.i16[0] = v68.u8[2];
            v232.val[0] = vqtbl4q_s8(v232, (int8x16_t)xmmword_1003BC960);
            v68.i16[1] = v68.u8[6];
            v58.i16[2] = v62.u8[2];
            v68.i16[2] = v76;
            v58.i16[3] = v62.u8[6];
            v232.val[1] = vqtbl4q_s8(v236, (int8x16_t)xmmword_1003BC960);
            v236.val[0].i16[0] = v74;
            v236.val[0].i16[1] = v73;
            v68.i16[3] = v75;
            v236.val[0].i16[2] = v70;
            v236.val[0].i16[3] = v69;
            v83 = v62.u8[7];
            v84 = v62.u8[3];
            v236.val[3] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v236.val[0].i8), 0x1FuLL)));
            v236.val[2] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v68), 0x1FuLL)));
            v62.i16[0] = v65.u8[2];
            v62.i16[1] = v65.u8[6];
            v62.i16[2] = v67.u8[2];
            v62.i16[3] = v67.u8[6];
            v85 = v60.u8[7];
            v86 = v60.u8[3];
            v60.i16[0] = v65.u8[3];
            v60.i16[1] = v65.u8[7];
            v60.i16[2] = v67.u8[3];
            v60.i16[3] = v67.u8[7];
            v236.val[1] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v62), 0x1FuLL)));
            v62.i16[0] = v82;
            v62.i16[1] = v81;
            v62.i16[2] = v80;
            v236.val[0] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v58.i8), 0x1FuLL)));
            v62.i16[3] = v79;
            v232.val[2] = vqtbl4q_s8(v236, (int8x16_t)xmmword_1003BC960);
            v65.i16[0] = v78;
            v65.i16[1] = v77;
            v65.i16[2] = v72;
            v65.i16[3] = v71;
            v236.val[3] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v65), 0x1FuLL)));
            v236.val[2] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v62), 0x1FuLL)));
            v236.val[1] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v60), 0x1FuLL)));
            v60.i16[0] = v86;
            v60.i16[1] = v85;
            v60.i16[2] = v84;
            v60.i16[3] = v83;
            v236.val[0] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v60), 0x1FuLL)));
            v232.val[3] = vqtbl4q_s8(v236, (int8x16_t)xmmword_1003BC960);
            v87 = &v33[v42];
            vst4q_s8(v87, v232);
            v42 += 64;
            v46 += 256;
            v53 -= 16;
          }
          while (v53);
          a6 = v208;
          a7 = v209;
          a3 = v204;
          a5 = v206;
          a8 = v217;
          v13 = v200;
          v10 = v202;
          LOBYTE(v24) = v198;
          v38 = v213;
          v25 = v215;
          v26 = v196;
          v31 = v220;
          v30 = v222;
          v39 = v226;
          if (v212 != v210)
            goto LABEL_73;
LABEL_75:
          v40 = v228;
          if ((int)i >= a7)
            goto LABEL_32;
LABEL_76:
          v92 = (int)i;
          v93 = v28 - (int)i;
          if (v93 < 8)
          {
            v94 = v92;
            goto LABEL_101;
          }
          v95 = (unint64_t)&v38[v28];
          v96 = 4 * v92;
          v98 = (unint64_t)&v33[v92] < v40 + v224 && result + 4 * v92 < v95;
          if (v32 + 4 * v92 < v95 && (unint64_t)&v33[v92] < v39 + v224)
          {
            v94 = v92;
            goto LABEL_101;
          }
          if (v98)
          {
            v94 = v92;
            goto LABEL_101;
          }
          if (v93 >= 0x10)
          {
            v100 = v93 & 0xFFFFFFFFFFFFFFF0;
            v101 = v92;
            v102 = v93 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v233.val[3] = veorq_s8(v29, (int8x16_t)vcgtq_s32(*(int32x4_t *)(result + v96 + 48), *(int32x4_t *)(v32 + v96 + 48)));
              v233.val[2] = veorq_s8(v29, (int8x16_t)vcgtq_s32(*(int32x4_t *)(result + v96 + 32), *(int32x4_t *)(v32 + v96 + 32)));
              v233.val[1] = veorq_s8(v29, (int8x16_t)vcgtq_s32(*(int32x4_t *)(result + v96 + 16), *(int32x4_t *)(v32 + v96 + 16)));
              v233.val[0] = veorq_s8(v29, (int8x16_t)vcgtq_s32(*(int32x4_t *)(result + v96), *(int32x4_t *)(v32 + v96)));
              *(int8x16_t *)&v33[v101] = vqtbl4q_s8(v233, (int8x16_t)xmmword_1003BC960);
              v96 += 64;
              v101 += 16;
              v102 -= 16;
            }
            while (v102);
            if (v93 == v100)
              goto LABEL_32;
            if ((v93 & 8) == 0)
            {
              v94 = v100 + v92;
              do
              {
LABEL_101:
                if (*(_DWORD *)(result + 4 * v94) <= *(_DWORD *)(v32 + 4 * v94))
                  v106 = v24;
                else
                  v106 = ~(_BYTE)v24;
                v33[v94++] = v106;
              }
              while (v28 != v94);
              goto LABEL_32;
            }
          }
          else
          {
            v100 = 0;
          }
          v94 = (v93 & 0xFFFFFFFFFFFFFFF8) + v92;
          v103 = v100 - (v93 & 0xFFFFFFFFFFFFFFF8);
          v104 = v100 + v92;
          v105 = 4 * v104;
          do
          {
            v230.val[0] = veorq_s8(v29, (int8x16_t)vcgtq_s32(*(int32x4_t *)(result + v105), *(int32x4_t *)(v32 + v105)));
            v230.val[1] = veorq_s8(v29, (int8x16_t)vcgtq_s32(*(int32x4_t *)(result + v105 + 16), *(int32x4_t *)(v32 + v105 + 16)));
            *(_QWORD *)&v33[v104] = vqtbl2q_s8(v230, (int8x16_t)xmmword_1003BC970).u64[0];
            v105 += 32;
            v104 += 8;
            v103 += 8;
          }
          while (v103);
          if (v93 != (v93 & 0xFFFFFFFFFFFFFFF8))
            goto LABEL_101;
LABEL_32:
          result += v31;
          v32 += v30;
          v33 += a6;
          ++v25;
          if (!--a8)
            return result;
          break;
        default:
          goto LABEL_48;
      }
    }
  }
  return result;
}

unint64_t sub_1001E77F0(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, char *a5, uint64_t a6, int a7, int a8, int *a9)
{
  unint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unint64_t v16;
  float *v17;
  float *v18;
  uint64_t v19;
  _BYTE *v20;
  char v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  int8x16_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  unint64_t i;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  BOOL v50;
  BOOL v51;
  unint64_t v52;
  uint64_t v53;
  int16x8_t v54;
  int16x8_t v55;
  int16x8_t v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int8x8_t v60;
  int16x8_t v61;
  int8x8_t v62;
  int16x8_t v63;
  int16x8_t v64;
  int8x8_t v65;
  int16x8_t v66;
  int8x8_t v67;
  int8x8_t v68;
  __int16 v69;
  __int16 v70;
  __int16 v71;
  __int16 v72;
  __int16 v73;
  __int16 v74;
  __int16 v75;
  __int16 v76;
  __int16 v77;
  __int16 v78;
  __int16 v79;
  __int16 v80;
  __int16 v81;
  __int16 v82;
  __int16 v83;
  __int16 v84;
  __int16 v85;
  __int16 v86;
  char *v87;
  uint64_t v88;
  char *v89;
  int8x8_t v90;
  int8x8_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  BOOL v98;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  int8x16_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  BOOL v127;
  uint64_t v129;
  uint64_t v130;
  int16x8_t v131;
  int16x8_t v132;
  int16x8_t v133;
  int16x8_t v134;
  int16x8_t v135;
  int16x8_t v136;
  int8x8_t v137;
  int16x8_t v138;
  int8x8_t v139;
  int16x8_t v140;
  int16x8_t v141;
  int8x8_t v142;
  int16x8_t v143;
  int8x8_t v144;
  int8x8_t v145;
  __int16 v146;
  __int16 v147;
  __int16 v148;
  __int16 v149;
  __int16 v150;
  __int16 v151;
  __int16 v152;
  __int16 v153;
  __int16 v154;
  __int16 v155;
  __int16 v156;
  __int16 v157;
  __int16 v158;
  __int16 v159;
  __int16 v160;
  __int16 v161;
  __int16 v162;
  __int16 v163;
  uint64_t v164;
  char v165;
  char v166;
  unint64_t v167;
  unint64_t v168;
  char v169;
  char *v170;
  char v171;
  char v172;
  char v173;
  unint64_t v174;
  char v175;
  unint64_t v176;
  BOOL v177;
  char v178;
  BOOL v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  char v198;
  unint64_t v199;
  unint64_t v200;
  unint64_t v201;
  int v202;
  uint64_t v203;
  unint64_t v204;
  unint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  int v209;
  uint64_t v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  unint64_t v216;
  int v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  unint64_t v223;
  uint64_t v224;
  unint64_t v225;
  int v226;
  unint64_t v227;
  char *v228;
  int8x16x2_t v229;
  int8x16x2_t v230;
  int8x16x4_t v231;
  int8x16x4_t v232;
  int8x16x4_t v233;
  int8x16x4_t v234;
  int8x16x4_t v235;
  int8x16x4_t v236;

  v9 = result;
  v10 = *a9;
  v11 = a2 >> 2;
  v12 = a4 >> 2;
  v208 = a6;
  v209 = a7;
  if ((*a9 & 0xFFFFFFFE) != 2)
  {
    v13 = result;
    v14 = a2 >> 2;
    switch(v10)
    {
      case 0:
      case 5:
        if (v10)
          v15 = 255;
        else
          v15 = 0;
        if (!a8)
          return result;
        v16 = (a7 - 4);
        if (a7 < 4)
        {
          if (a7 >= 1)
          {
            v17 = (float *)(a3 + 8);
            v18 = (float *)(result + 8);
            v19 = 4 * v11;
            v20 = a5 + 1;
            do
            {
              if (*(v18 - 2) == *(v17 - 2))
                v21 = -1;
              else
                v21 = 0;
              *(v20 - 1) = v15 ^ v21;
              if (a7 != 1)
              {
                v22 = *(v18 - 1) == *(v17 - 1) ? -1 : 0;
                *v20 = v15 ^ v22;
                if (a7 != 2)
                {
                  if (*v18 == *v17)
                    v23 = -1;
                  else
                    v23 = 0;
                  v20[1] = v15 ^ v23;
                }
              }
              v17 += v12;
              v18 = (float *)((char *)v18 + v19);
              v20 += a6;
              --a8;
            }
            while (a8);
          }
          return result;
        }
        v107 = 0;
        v108 = a8 - 1;
        result = a7;
        v109 = (v16 & 0xFFFFFFFC) + 4;
        v110 = (v16 & 0xFFFFFFFC) + 5;
        if (v110 <= a7)
          v110 = a7;
        v213 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
        v111 = a2 & 0xFFFFFFFFFFFFFFFCLL;
        v203 = 4 * v110;
        v112 = a4 & 0xFFFFFFFFFFFFFFFCLL;
        v113 = v110 - (v16 & 0xFFFFFFFC) - 4;
        v114 = 16 * (v16 >> 2) + 16;
        v115 = a3;
        v196 = (v16 >> 2) + 1;
        v116 = (int8x16_t)vdupq_n_s32(v15);
        v191 = v113 & 0xFFFFFFFFFFFFFFF0;
        v187 = v109 + (v113 & 0xFFFFFFFFFFFFFFF0);
        v189 = v109 + (v113 & 0xFFFFFFFFFFFFFFF8);
        v190 = v113 & 0xFFFFFFFFFFFFFFF8;
        v117 = 4 * v11;
        v118 = 4 * v12;
        v188 = -(uint64_t)(v113 & 0xFFFFFFFFFFFFFFF8);
        v119 = &a5[v109];
        v192 = &a5[v110];
        v120 = &a5[v109];
        v121 = v115;
        v122 = v9;
        v216 = v9;
        v211 = a2 & 0xFFFFFFFFFFFFFFFCLL;
        v199 = v113;
        v201 = a4 & 0xFFFFFFFFFFFFFFFCLL;
        v205 = v115;
        v194 = 4 * v12;
        v195 = 4 * v11;
        v193 = &a5[v109];
        break;
      case 1:
      case 4:
        goto LABEL_27;
      default:
        return result;
    }
    while (1)
    {
      v123 = (unint64_t)&v119[v107 * a6];
      v228 = v120;
      v226 = v108;
      v223 = v112 * v107;
      v219 = v107 * a6;
      v221 = v111 * v107;
      if (v16 >= 0x3C)
      {
        v125 = 0;
        v124 = v115;
        v127 = (unint64_t)a5 < v115 + v114 + v112 * v107 && v121 < v123;
        if ((v122 >= v123 || (unint64_t)a5 >= v9 + v114 + v111 * v107) && !v127)
        {
          v218 = v107;
          v129 = 0;
          v130 = v196 & 0x7FFFFFF0;
          v207 = a5;
          do
          {
            v131 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129), *(float32x4_t *)(v121 + v129)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129 + 16), *(float32x4_t *)(v121 + v129 + 16)));
            v132 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129 + 32), *(float32x4_t *)(v121 + v129 + 32)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129 + 48), *(float32x4_t *)(v121 + v129 + 48)));
            v133 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129 + 64), *(float32x4_t *)(v121 + v129 + 64)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129 + 80), *(float32x4_t *)(v121 + v129 + 80)));
            v134 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129 + 96), *(float32x4_t *)(v121 + v129 + 96)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129 + 112), *(float32x4_t *)(v121 + v129 + 112)));
            v135 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129 + 128), *(float32x4_t *)(v121 + v129 + 128)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129 + 144), *(float32x4_t *)(v121 + v129 + 144)));
            v136 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129 + 160), *(float32x4_t *)(v121 + v129 + 160)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129 + 176), *(float32x4_t *)(v121 + v129 + 176)));
            v137 = vmovn_s16(v131);
            v138 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129 + 192), *(float32x4_t *)(v121 + v129 + 192)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129 + 208), *(float32x4_t *)(v121 + v129 + 208)));
            v139 = vmovn_s16(v132);
            v140 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129 + 224), *(float32x4_t *)(v121 + v129 + 224)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v122 + v129 + 240), *(float32x4_t *)(v121 + v129 + 240)));
            v141 = (int16x8_t)vuzp1q_s8((int8x16_t)v131, (int8x16_t)v132);
            v233.val[3] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v138, (int8x16_t)v140))), 0x1FuLL)));
            v233.val[2] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v135, (int8x16_t)v136))), 0x1FuLL)));
            v142 = vmovn_s16(v133);
            v143 = (int16x8_t)vuzp1q_s8((int8x16_t)v133, (int8x16_t)v134);
            v144 = vmovn_s16(v134);
            v145 = vmovn_s16(v135);
            *(int8x8_t *)v133.i8 = vmovn_s16(v136);
            *(int8x8_t *)v131.i8 = vmovn_s16(v138);
            *(int8x8_t *)v138.i8 = vmovn_s16(v140);
            v233.val[1] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v143)), 0x1FuLL)));
            v146 = v138.u8[6];
            v147 = v138.u8[2];
            v148 = v138.u8[7];
            v149 = v138.u8[3];
            v150 = v131.u8[6];
            v151 = v131.u8[2];
            v152 = v133.u8[6];
            v153 = v133.u8[2];
            v154 = v131.u8[7];
            v155 = v131.u8[3];
            v233.val[0] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v141)), 0x1FuLL)));
            v156 = v133.u8[7];
            v157 = v133.u8[3];
            v236.val[3] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(*(int8x8_t *)v131.i8, *(int8x8_t *)v138.i8)), 0x1FuLL)));
            v236.val[2] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v145, *(int8x8_t *)v133.i8)), 0x1FuLL)));
            v236.val[1] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v142, v144)), 0x1FuLL)));
            v236.val[0] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v137, v139)), 0x1FuLL)));
            v135.i16[0] = v137.u8[2];
            v158 = v145.u8[7];
            v135.i16[1] = v137.u8[6];
            v159 = v145.u8[3];
            v145.i16[0] = v145.u8[2];
            v233.val[0] = vqtbl4q_s8(v233, (int8x16_t)xmmword_1003BC960);
            v145.i16[1] = v145.u8[6];
            v135.i16[2] = v139.u8[2];
            v145.i16[2] = v153;
            v135.i16[3] = v139.u8[6];
            v233.val[1] = vqtbl4q_s8(v236, (int8x16_t)xmmword_1003BC960);
            v236.val[0].i16[0] = v151;
            v236.val[0].i16[1] = v150;
            v145.i16[3] = v152;
            v236.val[0].i16[2] = v147;
            v236.val[0].i16[3] = v146;
            v160 = v139.u8[7];
            v161 = v139.u8[3];
            v236.val[3] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v236.val[0].i8), 0x1FuLL)));
            v236.val[2] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v145), 0x1FuLL)));
            v139.i16[0] = v142.u8[2];
            v139.i16[1] = v142.u8[6];
            v139.i16[2] = v144.u8[2];
            v139.i16[3] = v144.u8[6];
            v162 = v137.u8[7];
            v163 = v137.u8[3];
            v137.i16[0] = v142.u8[3];
            v137.i16[1] = v142.u8[7];
            v137.i16[2] = v144.u8[3];
            v137.i16[3] = v144.u8[7];
            v236.val[1] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v139), 0x1FuLL)));
            v139.i16[0] = v159;
            v139.i16[1] = v158;
            v139.i16[2] = v157;
            v236.val[0] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v135.i8), 0x1FuLL)));
            v139.i16[3] = v156;
            v233.val[2] = vqtbl4q_s8(v236, (int8x16_t)xmmword_1003BC960);
            v142.i16[0] = v155;
            v142.i16[1] = v154;
            v142.i16[2] = v149;
            v142.i16[3] = v148;
            v236.val[3] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v142), 0x1FuLL)));
            v236.val[2] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v139), 0x1FuLL)));
            v236.val[1] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v137), 0x1FuLL)));
            v137.i16[0] = v163;
            v137.i16[1] = v162;
            v137.i16[2] = v161;
            v137.i16[3] = v160;
            v236.val[0] = veorq_s8(v116, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v137), 0x1FuLL)));
            v233.val[3] = vqtbl4q_s8(v236, (int8x16_t)xmmword_1003BC960);
            vst4q_s8(a5, v233);
            a5 += 64;
            v129 += 256;
            v130 -= 16;
          }
          while (v130);
          v125 = 4 * (v196 & 0x7FFFFFF0);
          a6 = v208;
          a7 = v209;
          v124 = v205;
          a5 = v207;
          v9 = v216;
          v107 = v218;
          v109 = (v16 & 0xFFFFFFFC) + 4;
          v111 = v211;
          v113 = v199;
          v112 = v201;
          v114 = 16 * (v16 >> 2) + 16;
          v118 = v194;
          v117 = v195;
          v119 = v193;
          if (v196 == (v196 & 0x7FFFFFF0))
            goto LABEL_141;
        }
      }
      else
      {
        v124 = v115;
        v125 = 0;
      }
      v164 = 4 * v125 + 12;
      do
      {
        if (*(float *)(v122 + v164 - 12) == *(float *)(v121 + v164 - 12))
          v165 = -1;
        else
          v165 = 0;
        v166 = v15 ^ v165;
        v167 = v122 + 4 * v125;
        v168 = v121 + 4 * v125;
        if (*(float *)(v167 + 4) == *(float *)(v168 + 4))
          v169 = -1;
        else
          v169 = 0;
        v170 = &a5[v125];
        *v170 = v166;
        v170[1] = v15 ^ v169;
        if (*(float *)(v167 + 8) == *(float *)(v168 + 8))
          v171 = -1;
        else
          v171 = 0;
        v172 = v15 ^ v171;
        if (*(float *)(v122 + v164) == *(float *)(v121 + v164))
          v173 = -1;
        else
          v173 = 0;
        v170[2] = v172;
        v170[3] = v15 ^ v173;
        v125 += 4;
        v164 += 16;
      }
      while (v125 <= v16);
LABEL_141:
      v115 = v124;
      if ((int)v125 < a7)
      {
        v174 = v109;
        if (v113 < 8
          || ((v176 = (unint64_t)&v192[v219], v123 < v124 + v203 + v223)
            ? (v177 = v124 + v213 + v223 >= v176)
            : (v177 = 1),
              v177 ? (v178 = 0) : (v178 = 1),
              v9 + v213 + v221 < v176 ? (v179 = v123 >= v9 + v203 + v221) : (v179 = 1),
              (v174 = v109, !v179) || (v174 = v109, (v178 & 1) != 0)))
        {
          do
          {
LABEL_143:
            if (*(float *)(v122 + 4 * v174) == *(float *)(v121 + 4 * v174))
              v175 = -1;
            else
              v175 = 0;
            a5[v174++] = v15 ^ v175;
          }
          while (v174 < result);
          goto LABEL_109;
        }
        if (v113 >= 0x10)
        {
          v184 = v109;
          v185 = v114;
          v186 = v191;
          do
          {
            v234.val[3] = veorq_s8(v116, (int8x16_t)vceqq_f32(*(float32x4_t *)(v122 + v185 + 48), *(float32x4_t *)(v121 + v185 + 48)));
            v234.val[2] = veorq_s8(v116, (int8x16_t)vceqq_f32(*(float32x4_t *)(v122 + v185 + 32), *(float32x4_t *)(v121 + v185 + 32)));
            v234.val[1] = veorq_s8(v116, (int8x16_t)vceqq_f32(*(float32x4_t *)(v122 + v185 + 16), *(float32x4_t *)(v121 + v185 + 16)));
            v234.val[0] = veorq_s8(v116, (int8x16_t)vceqq_f32(*(float32x4_t *)(v122 + v185), *(float32x4_t *)(v121 + v185)));
            *(int8x16_t *)&a5[v184] = vqtbl4q_s8(v234, (int8x16_t)xmmword_1003BC960);
            v185 += 64;
            v184 += 16;
            v186 -= 16;
          }
          while (v186);
          if (v113 == v191)
            goto LABEL_109;
          v180 = v191;
          v174 = v187;
          if ((v113 & 8) == 0)
            goto LABEL_143;
        }
        else
        {
          v180 = 0;
        }
        v181 = v188 + v180;
        v182 = v114 + 4 * v180;
        v183 = &v228[v180];
        do
        {
          v230.val[0] = veorq_s8(v116, (int8x16_t)vceqq_f32(*(float32x4_t *)(v122 + v182), *(float32x4_t *)(v121 + v182)));
          v230.val[1] = veorq_s8(v116, (int8x16_t)vceqq_f32(*(float32x4_t *)(v122 + v182 + 16), *(float32x4_t *)(v121 + v182 + 16)));
          *(_QWORD *)v183 = vqtbl2q_s8(v230, (int8x16_t)xmmword_1003BC970).u64[0];
          v183 += 8;
          v182 += 32;
          v181 += 8;
        }
        while (v181);
        v174 = v189;
        if (v113 != v190)
          goto LABEL_143;
      }
LABEL_109:
      v122 += v117;
      v121 += v118;
      a5 += a6;
      v108 = v226 - 1;
      ++v107;
      v120 = &v228[a6];
      if (!v226)
        return result;
    }
  }
  if (v10 == 2)
    v10 = 4;
  else
    v10 = 1;
  v13 = a3;
  v14 = a4 >> 2;
  a3 = result;
  v12 = a2 >> 2;
LABEL_27:
  if (v10 == 1)
    v24 = 0;
  else
    v24 = 255;
  if (a8)
  {
    v25 = 0;
    v26 = (a7 - 8);
    v27 = a7 - 4;
    v28 = a7;
    v224 = 4 * a7;
    v29 = (int8x16_t)vdupq_n_s32(v24);
    v30 = 4 * v12;
    v31 = 4 * v14;
    result = v13;
    v32 = a3;
    v33 = a5;
    v204 = a3;
    v206 = a5;
    v200 = v13;
    v202 = v10;
    v198 = v24;
    v197 = v26;
    v220 = 4 * v14;
    v222 = 4 * v12;
    while (1)
    {
      LODWORD(i) = 0;
      switch(v10)
      {
        case 0:
          if (a7 < 8)
            goto LABEL_47;
          v35 = 0;
          for (i = 0; i <= v26; i += 8)
          {
            *(int8x8_t *)&v33[i] = vmovn_s16(vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(result + v35), *(float32x4_t *)(v32 + v35)), (int16x8_t)vceqq_f32(*(float32x4_t *)(result + v35 + 16), *(float32x4_t *)(v32 + v35 + 16))));
            v35 += 32;
          }
          goto LABEL_53;
        case 1:
          if (a7 < 8)
            goto LABEL_47;
          v36 = 0;
          for (i = 0; i <= v26; i += 8)
          {
            *(int8x8_t *)&v33[i] = vmovn_s16(vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v36), *(float32x4_t *)(v32 + v36)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v36 + 16), *(float32x4_t *)(v32 + v36 + 16))));
            v36 += 32;
          }
          goto LABEL_53;
        case 4:
          if (a7 < 8)
            goto LABEL_47;
          v37 = 0;
          for (i = 0; i <= v26; i += 8)
          {
            *(int8x8_t *)&v33[i] = vmovn_s16(vuzp1q_s16((int16x8_t)vcgeq_f32(*(float32x4_t *)(v32 + v37), *(float32x4_t *)(result + v37)), (int16x8_t)vcgeq_f32(*(float32x4_t *)(v32 + v37 + 16), *(float32x4_t *)(result + v37 + 16))));
            v37 += 32;
          }
          goto LABEL_53;
        case 5:
          if (a7 >= 8)
          {
            v41 = 0;
            for (i = 0; i <= v26; i += 8)
            {
              *(int8x8_t *)&v33[i] = vmvn_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(result + v41), *(float32x4_t *)(v32 + v41)), (int16x8_t)vceqq_f32(*(float32x4_t *)(result + v41 + 16), *(float32x4_t *)(v32 + v41 + 16)))));
              v41 += 32;
            }
LABEL_53:
            v38 = &a5[v25 * a6];
            v39 = a3 + v30 * v25;
            v40 = v13 + v31 * v25;
            if ((int)i > (int)v27)
            {
LABEL_49:
              if ((int)i >= a7)
                goto LABEL_32;
              goto LABEL_76;
            }
          }
          else
          {
LABEL_47:
            LODWORD(i) = 0;
LABEL_48:
            v38 = &a5[v25 * a6];
            v39 = a3 + v30 * v25;
            v40 = v13 + v31 * v25;
            if ((int)v27 < 0)
              goto LABEL_49;
          }
          v42 = (int)i;
          v43 = v27 - (int)i;
          v227 = v40;
          if (v43 < 0x3C)
          {
            i = (int)i;
            goto LABEL_73;
          }
          v225 = v39;
          v44 = v43 >> 2;
          v45 = (unint64_t)&v38[(v43 & 0xFFFFFFFFFFFFFFFCLL) + 4 + (int)i];
          v46 = 4 * (int)i;
          v47 = v46 + 16 * (v43 >> 2);
          v48 = v39 + 16 + v47;
          v50 = (unint64_t)&v33[(int)i] < v40 + 16 + v47 && result + 4 * (int)i < v45;
          v51 = v32 + v46 >= v45 || (unint64_t)&v33[(int)i] >= v48;
          if (!v51 || v50)
          {
            i = (int)i;
            v31 = v220;
            v30 = v222;
            v39 = v225;
LABEL_73:
            v88 = 4 * i + 8;
            do
            {
              v89 = &v33[i];
              v90 = veor_s8(*(int8x8_t *)v29.i8, (int8x8_t)vcgt_f32(*(float32x2_t *)(result + v88 - 8), *(float32x2_t *)(v32 + v88 - 8)));
              v89[1] = v90.i8[4];
              *v89 = v90.i8[0];
              v91 = veor_s8(*(int8x8_t *)v29.i8, (int8x8_t)vcgt_f32(*(float32x2_t *)(result + v88), *(float32x2_t *)(v32 + v88)));
              v89[3] = v91.i8[4];
              v89[2] = v91.i8[0];
              i += 4;
              v88 += 16;
            }
            while ((uint64_t)i <= v27);
            goto LABEL_75;
          }
          v214 = v38;
          v215 = v25;
          v217 = a8;
          v52 = v44 + 1;
          v53 = v52 & 0x7FFFFFFFFFFFFFF0;
          i = (int)i + 4 * (v52 & 0x7FFFFFFFFFFFFFF0);
          v210 = v52 & 0x7FFFFFFFFFFFFFF0;
          v212 = v52;
          do
          {
            v54 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46), *(float32x4_t *)(v32 + v46)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46 + 16), *(float32x4_t *)(v32 + v46 + 16)));
            v55 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46 + 32), *(float32x4_t *)(v32 + v46 + 32)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46 + 48), *(float32x4_t *)(v32 + v46 + 48)));
            v56 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46 + 64), *(float32x4_t *)(v32 + v46 + 64)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46 + 80), *(float32x4_t *)(v32 + v46 + 80)));
            v57 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46 + 96), *(float32x4_t *)(v32 + v46 + 96)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46 + 112), *(float32x4_t *)(v32 + v46 + 112)));
            v58 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46 + 128), *(float32x4_t *)(v32 + v46 + 128)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46 + 144), *(float32x4_t *)(v32 + v46 + 144)));
            v59 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46 + 160), *(float32x4_t *)(v32 + v46 + 160)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46 + 176), *(float32x4_t *)(v32 + v46 + 176)));
            v60 = vmovn_s16(v54);
            v61 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46 + 192), *(float32x4_t *)(v32 + v46 + 192)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46 + 208), *(float32x4_t *)(v32 + v46 + 208)));
            v62 = vmovn_s16(v55);
            v63 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46 + 224), *(float32x4_t *)(v32 + v46 + 224)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(result + v46 + 240), *(float32x4_t *)(v32 + v46 + 240)));
            v64 = (int16x8_t)vuzp1q_s8((int8x16_t)v54, (int8x16_t)v55);
            v231.val[3] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v61, (int8x16_t)v63))), 0x1FuLL)));
            v231.val[2] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v58, (int8x16_t)v59))), 0x1FuLL)));
            v65 = vmovn_s16(v56);
            v66 = (int16x8_t)vuzp1q_s8((int8x16_t)v56, (int8x16_t)v57);
            v67 = vmovn_s16(v57);
            v68 = vmovn_s16(v58);
            *(int8x8_t *)v56.i8 = vmovn_s16(v59);
            *(int8x8_t *)v54.i8 = vmovn_s16(v61);
            *(int8x8_t *)v61.i8 = vmovn_s16(v63);
            v231.val[1] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v66)), 0x1FuLL)));
            v69 = v61.u8[6];
            v70 = v61.u8[2];
            v71 = v61.u8[7];
            v72 = v61.u8[3];
            v73 = v54.u8[6];
            v74 = v54.u8[2];
            v75 = v56.u8[6];
            v76 = v56.u8[2];
            v77 = v54.u8[7];
            v78 = v54.u8[3];
            v231.val[0] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v64)), 0x1FuLL)));
            v79 = v56.u8[7];
            v80 = v56.u8[3];
            v235.val[3] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(*(int8x8_t *)v54.i8, *(int8x8_t *)v61.i8)), 0x1FuLL)));
            v235.val[2] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v68, *(int8x8_t *)v56.i8)), 0x1FuLL)));
            v235.val[1] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v65, v67)), 0x1FuLL)));
            v235.val[0] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v60, v62)), 0x1FuLL)));
            v58.i16[0] = v60.u8[2];
            v81 = v68.u8[7];
            v58.i16[1] = v60.u8[6];
            v82 = v68.u8[3];
            v68.i16[0] = v68.u8[2];
            v231.val[0] = vqtbl4q_s8(v231, (int8x16_t)xmmword_1003BC960);
            v68.i16[1] = v68.u8[6];
            v58.i16[2] = v62.u8[2];
            v68.i16[2] = v76;
            v58.i16[3] = v62.u8[6];
            v231.val[1] = vqtbl4q_s8(v235, (int8x16_t)xmmword_1003BC960);
            v235.val[0].i16[0] = v74;
            v235.val[0].i16[1] = v73;
            v68.i16[3] = v75;
            v235.val[0].i16[2] = v70;
            v235.val[0].i16[3] = v69;
            v83 = v62.u8[7];
            v84 = v62.u8[3];
            v235.val[3] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v235.val[0].i8), 0x1FuLL)));
            v235.val[2] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v68), 0x1FuLL)));
            v62.i16[0] = v65.u8[2];
            v62.i16[1] = v65.u8[6];
            v62.i16[2] = v67.u8[2];
            v62.i16[3] = v67.u8[6];
            v85 = v60.u8[7];
            v86 = v60.u8[3];
            v60.i16[0] = v65.u8[3];
            v60.i16[1] = v65.u8[7];
            v60.i16[2] = v67.u8[3];
            v60.i16[3] = v67.u8[7];
            v235.val[1] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v62), 0x1FuLL)));
            v62.i16[0] = v82;
            v62.i16[1] = v81;
            v62.i16[2] = v80;
            v235.val[0] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v58.i8), 0x1FuLL)));
            v62.i16[3] = v79;
            v231.val[2] = vqtbl4q_s8(v235, (int8x16_t)xmmword_1003BC960);
            v65.i16[0] = v78;
            v65.i16[1] = v77;
            v65.i16[2] = v72;
            v65.i16[3] = v71;
            v235.val[3] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v65), 0x1FuLL)));
            v235.val[2] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v62), 0x1FuLL)));
            v235.val[1] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v60), 0x1FuLL)));
            v60.i16[0] = v86;
            v60.i16[1] = v85;
            v60.i16[2] = v84;
            v60.i16[3] = v83;
            v235.val[0] = veorq_s8(v29, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v60), 0x1FuLL)));
            v231.val[3] = vqtbl4q_s8(v235, (int8x16_t)xmmword_1003BC960);
            v87 = &v33[v42];
            vst4q_s8(v87, v231);
            v42 += 64;
            v46 += 256;
            v53 -= 16;
          }
          while (v53);
          a6 = v208;
          a7 = v209;
          a3 = v204;
          a5 = v206;
          a8 = v217;
          v13 = v200;
          v10 = v202;
          LOBYTE(v24) = v198;
          v38 = v214;
          v25 = v215;
          v26 = v197;
          v31 = v220;
          v30 = v222;
          v39 = v225;
          if (v212 != v210)
            goto LABEL_73;
LABEL_75:
          v40 = v227;
          if ((int)i >= a7)
            goto LABEL_32;
LABEL_76:
          v92 = (int)i;
          v93 = v28 - (int)i;
          if (v93 < 8)
          {
            v94 = v92;
            goto LABEL_101;
          }
          v95 = (unint64_t)&v38[v28];
          v96 = 4 * v92;
          v98 = (unint64_t)&v33[v92] < v40 + v224 && result + 4 * v92 < v95;
          if (v32 + 4 * v92 < v95 && (unint64_t)&v33[v92] < v39 + v224)
          {
            v94 = v92;
            goto LABEL_101;
          }
          if (v98)
          {
            v94 = v92;
            goto LABEL_101;
          }
          if (v93 >= 0x10)
          {
            v100 = v93 & 0xFFFFFFFFFFFFFFF0;
            v101 = v92;
            v102 = v93 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v232.val[3] = veorq_s8(v29, (int8x16_t)vcgtq_f32(*(float32x4_t *)(result + v96 + 48), *(float32x4_t *)(v32 + v96 + 48)));
              v232.val[2] = veorq_s8(v29, (int8x16_t)vcgtq_f32(*(float32x4_t *)(result + v96 + 32), *(float32x4_t *)(v32 + v96 + 32)));
              v232.val[1] = veorq_s8(v29, (int8x16_t)vcgtq_f32(*(float32x4_t *)(result + v96 + 16), *(float32x4_t *)(v32 + v96 + 16)));
              v232.val[0] = veorq_s8(v29, (int8x16_t)vcgtq_f32(*(float32x4_t *)(result + v96), *(float32x4_t *)(v32 + v96)));
              *(int8x16_t *)&v33[v101] = vqtbl4q_s8(v232, (int8x16_t)xmmword_1003BC960);
              v96 += 64;
              v101 += 16;
              v102 -= 16;
            }
            while (v102);
            if (v93 == v100)
              goto LABEL_32;
            if ((v93 & 8) == 0)
            {
              v94 = v100 + v92;
              do
              {
LABEL_101:
                if (*(float *)(result + 4 * v94) <= *(float *)(v32 + 4 * v94))
                  v106 = 0;
                else
                  v106 = -1;
                v33[v94++] = v24 ^ v106;
              }
              while (v28 != v94);
              goto LABEL_32;
            }
          }
          else
          {
            v100 = 0;
          }
          v94 = (v93 & 0xFFFFFFFFFFFFFFF8) + v92;
          v103 = v100 - (v93 & 0xFFFFFFFFFFFFFFF8);
          v104 = v100 + v92;
          v105 = 4 * v104;
          do
          {
            v229.val[0] = veorq_s8(v29, (int8x16_t)vcgtq_f32(*(float32x4_t *)(result + v105), *(float32x4_t *)(v32 + v105)));
            v229.val[1] = veorq_s8(v29, (int8x16_t)vcgtq_f32(*(float32x4_t *)(result + v105 + 16), *(float32x4_t *)(v32 + v105 + 16)));
            *(_QWORD *)&v33[v104] = vqtbl2q_s8(v229, (int8x16_t)xmmword_1003BC970).u64[0];
            v105 += 32;
            v104 += 8;
            v103 += 8;
          }
          while (v103);
          if (v93 != (v93 & 0xFFFFFFFFFFFFFFF8))
            goto LABEL_101;
LABEL_32:
          result += v31;
          v32 += v30;
          v33 += a6;
          ++v25;
          if (!--a8)
            return result;
          break;
        default:
          goto LABEL_48;
      }
    }
  }
  return result;
}

uint64_t sub_1001E8804(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, char *a5, uint64_t a6, int a7, int a8, int *a9)
{
  int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unint64_t v16;
  double *v17;
  uint64_t v18;
  double *v19;
  _BYTE *v20;
  char v21;
  char v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  double *v26;
  double *v27;
  _BYTE *v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int8x16_t v42;
  char *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  BOOL v49;
  BOOL v50;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  int16x8_t v55;
  int16x8_t v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int8x8_t v60;
  int8x8_t v61;
  int16x8_t v62;
  int8x8_t v63;
  int8x8_t v64;
  int16x8_t v65;
  int8x8_t v66;
  int8x8_t v67;
  int8x8_t v68;
  int16x8_t v69;
  int8x8_t v70;
  uint16x4_t v71;
  char v72;
  char v73;
  unint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  char *v78;
  char v79;
  char v80;
  char v81;
  unint64_t v82;
  unint64_t v83;
  BOOL v84;
  BOOL v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  char *v90;
  char v91;
  uint64_t v92;
  int v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  int8x16_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  BOOL v109;
  BOOL v110;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  int16x8_t v115;
  int16x8_t v116;
  int16x8_t v117;
  int16x8_t v118;
  int16x8_t v119;
  int8x8_t v120;
  int8x8_t v121;
  int16x8_t v122;
  int8x8_t v123;
  int8x8_t v124;
  int16x8_t v125;
  int8x8_t v126;
  int8x8_t v127;
  int8x8_t v128;
  int16x8_t v129;
  int8x8_t v130;
  uint16x4_t v131;
  uint64_t v132;
  char v133;
  char v134;
  unint64_t v135;
  unint64_t v136;
  char v137;
  char *v138;
  char v139;
  char v140;
  char v141;
  unint64_t v142;
  char v143;
  unint64_t v144;
  BOOL v145;
  char v146;
  BOOL v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  char *v164;
  unint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  int v186;
  int v187;
  uint64_t v188;
  char *v189;
  unint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  unint64_t v194;
  int v195;
  int v196;
  int8x16x2_t v197;
  int8x16x2_t v198;
  int8x16x4_t v199;
  int8x16x4_t v200;
  int8x16x4_t v201;
  int8x16x4_t v202;
  int8x16x4_t v203;
  int8x16x4_t v204;
  int8x16x4_t v205;
  int8x16x4_t v206;
  int8x16x4_t v207;
  int8x16x4_t v208;

  v10 = *a9;
  v11 = a2 >> 3;
  v12 = a4 >> 3;
  v188 = a6;
  if ((*a9 & 0xFFFFFFFE) != 2)
  {
    v13 = result;
    v14 = a4 >> 3;
    switch(v10)
    {
      case 0:
      case 5:
        if (v10)
          v15 = 255;
        else
          v15 = 0;
        if (!a8)
          return result;
        v16 = (a7 - 4);
        if (a7 < 4)
        {
          if (a7 >= 1)
          {
            v17 = (double *)(a3 + 16);
            v18 = 8 * v12;
            v19 = (double *)(result + 16);
            v20 = a5 + 1;
            do
            {
              if (*(v19 - 2) == *(v17 - 2))
                v21 = -1;
              else
                v21 = 0;
              *(v20 - 1) = v15 ^ v21;
              if (a7 != 1)
              {
                v22 = *(v19 - 1) == *(v17 - 1) ? -1 : 0;
                *v20 = v15 ^ v22;
                if (a7 != 2)
                {
                  if (*v19 == *v17)
                    v23 = -1;
                  else
                    v23 = 0;
                  v20[1] = v15 ^ v23;
                }
              }
              v17 = (double *)((char *)v17 + v18);
              v19 += v11;
              v20 += a6;
              --a8;
            }
            while (a8);
          }
          return result;
        }
        v92 = 0;
        v93 = a8 - 1;
        v94 = a7;
        v95 = (v16 & 0xFFFFFFFC) + 4;
        v96 = (v16 & 0xFFFFFFFC) + 5;
        if (v96 <= a7)
          v96 = a7;
        v181 = ((8 * (a7 - 4)) & 0x7FFFFFFE0) + 32;
        v97 = a2 & 0xFFFFFFFFFFFFFFF8;
        v177 = 8 * v96;
        v98 = a4 & 0xFFFFFFFFFFFFFFF8;
        v99 = v96 - (v16 & 0xFFFFFFFC) - 4;
        v100 = 32 * (v16 >> 2) + 32;
        v171 = (v16 >> 2) + 1;
        v101 = (int8x16_t)vdupq_n_s32(v15);
        v162 = v99 & 0xFFFFFFFFFFFFFFF0;
        v155 = v95 + (v99 & 0xFFFFFFFFFFFFFFF0);
        v158 = v95 + (v99 & 0xFFFFFFFFFFFFFFF8);
        v160 = v99 & 0xFFFFFFFFFFFFFFF8;
        v102 = 8 * v11;
        v103 = 8 * v12;
        v156 = -(uint64_t)(v99 & 0xFFFFFFFFFFFFFFF8);
        v104 = &a5[v95];
        v164 = &a5[v96];
        v183 = &a5[v95];
        v105 = a3;
        v106 = result;
        v187 = a7;
        v179 = a2 & 0xFFFFFFFFFFFFFFF8;
        v173 = v99;
        v175 = a4 & 0xFFFFFFFFFFFFFFF8;
        v169 = result;
        v166 = 8 * v12;
        v168 = 8 * v11;
        break;
      case 1:
      case 4:
        goto LABEL_27;
      default:
        return result;
    }
    while (1)
    {
      v107 = (unint64_t)&v183[v92 * a6];
      v196 = v93;
      v192 = v98 * v92;
      v194 = v107;
      v190 = v97 * v92;
      v185 = v92 * a6;
      v108 = 0;
      if (v16 < 0x3C)
        goto LABEL_130;
      v109 = (unint64_t)a5 >= a3 + v100 + v98 * v92 || v105 >= v107;
      v110 = !v109;
      if (v106 < v107 && (unint64_t)a5 < result + v100 + v97 * v92)
        goto LABEL_130;
      if (v110)
        goto LABEL_130;
      v112 = 0;
      v113 = v171 & 0x7FFFFFF0;
      v114 = a5;
      do
      {
        v115 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112), *(float64x2_t *)(v105 + v112)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 16), *(float64x2_t *)(v105 + v112 + 16))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 32), *(float64x2_t *)(v105 + v112 + 32)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 48), *(float64x2_t *)(v105 + v112 + 48))));
        v116 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 64), *(float64x2_t *)(v105 + v112 + 64)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 80), *(float64x2_t *)(v105 + v112 + 80))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 96), *(float64x2_t *)(v105 + v112 + 96)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 112), *(float64x2_t *)(v105 + v112 + 112))));
        v117 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 128), *(float64x2_t *)(v105 + v112 + 128)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 144), *(float64x2_t *)(v105 + v112 + 144))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 160), *(float64x2_t *)(v105 + v112 + 160)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 176), *(float64x2_t *)(v105 + v112 + 176))));
        v118 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 192), *(float64x2_t *)(v105 + v112 + 192)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 208), *(float64x2_t *)(v105 + v112 + 208))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 224), *(float64x2_t *)(v105 + v112 + 224)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 240), *(float64x2_t *)(v105 + v112 + 240))));
        v119 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 256), *(float64x2_t *)(v105 + v112 + 256)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 272), *(float64x2_t *)(v105 + v112 + 272))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 288), *(float64x2_t *)(v105 + v112 + 288)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 304), *(float64x2_t *)(v105 + v112 + 304))));
        v120 = vmovn_s16(v115);
        v121 = vmovn_s16(v116);
        v122 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 320), *(float64x2_t *)(v105 + v112 + 320)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 336), *(float64x2_t *)(v105 + v112 + 336))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 352), *(float64x2_t *)(v105 + v112 + 352)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 368), *(float64x2_t *)(v105 + v112 + 368))));
        v123 = vmovn_s16(v117);
        v124 = vmovn_s16(v118);
        v125 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 384), *(float64x2_t *)(v105 + v112 + 384)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 400), *(float64x2_t *)(v105 + v112 + 400))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 416), *(float64x2_t *)(v105 + v112 + 416)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 432), *(float64x2_t *)(v105 + v112 + 432))));
        v126 = vmovn_s16(v119);
        v127 = vmovn_s16(v125);
        v128 = vmovn_s16(v122);
        v129 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 448), *(float64x2_t *)(v105 + v112 + 448)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 464), *(float64x2_t *)(v105 + v112 + 464))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 480), *(float64x2_t *)(v105 + v112 + 480)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 496), *(float64x2_t *)(v105 + v112 + 496))));
        v130 = vmovn_s16(v129);
        v208.val[3] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v125, (int8x16_t)v129))), 0x1FuLL)));
        v208.val[2] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v119, (int8x16_t)v122))), 0x1FuLL)));
        v208.val[1] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v117, (int8x16_t)v118))), 0x1FuLL)));
        v208.val[0] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v115, (int8x16_t)v116))), 0x1FuLL)));
        v200.val[3] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v127, v130)), 0x1FuLL)));
        v200.val[2] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v126, v128)), 0x1FuLL)));
        v200.val[1] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v123, v124)), 0x1FuLL)));
        v200.val[0] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v120, v121)), 0x1FuLL)));
        v131.i16[0] = v120.u8[2];
        v131.i16[1] = v120.u8[6];
        v131.i16[2] = v121.u8[2];
        v204.val[0] = vqtbl4q_s8(v208, (int8x16_t)xmmword_1003BC960);
        v208.val[0].i16[0] = v123.u8[2];
        v208.val[0].i16[1] = v123.u8[6];
        v208.val[0].i16[2] = v124.u8[2];
        v204.val[1] = vqtbl4q_s8(v200, (int8x16_t)xmmword_1003BC960);
        v116.i16[0] = v126.u8[2];
        v116.i16[1] = v126.u8[6];
        v131.i16[3] = v121.u8[6];
        v116.i16[2] = v128.u8[2];
        v116.i16[3] = v128.u8[6];
        v118.i16[0] = v127.u8[2];
        v118.i16[1] = v127.u8[6];
        v118.i16[2] = v130.u8[2];
        v118.i16[3] = v130.u8[6];
        v206.val[3] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v118.i8), 0x1FuLL)));
        v206.val[2] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v116.i8), 0x1FuLL)));
        v208.val[0].i16[3] = v124.u8[6];
        v206.val[1] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v208.val[0].i8), 0x1FuLL)));
        v206.val[0] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v131), 0x1FuLL)));
        v204.val[2] = vqtbl4q_s8(v206, (int8x16_t)xmmword_1003BC960);
        v126.i16[0] = v126.u8[3];
        v127.i16[0] = v127.u8[3];
        v126.i16[1] = v126.u8[7];
        v126.i16[2] = v128.u8[3];
        v127.i16[1] = v127.u8[7];
        v126.i16[3] = v128.u8[7];
        v128.i16[0] = v123.u8[3];
        v127.i16[2] = v130.u8[3];
        v127.i16[3] = v130.u8[7];
        v128.i16[1] = v123.u8[7];
        v128.i16[2] = v124.u8[3];
        v206.val[3] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v127), 0x1FuLL)));
        v206.val[2] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v126), 0x1FuLL)));
        v128.i16[3] = v124.u8[7];
        v206.val[1] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v128), 0x1FuLL)));
        v120.i16[0] = v120.u8[3];
        v120.i16[1] = v120.u8[7];
        v120.i16[2] = v121.u8[3];
        v120.i16[3] = v121.u8[7];
        v206.val[0] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v120), 0x1FuLL)));
        v204.val[3] = vqtbl4q_s8(v206, (int8x16_t)xmmword_1003BC960);
        vst4q_s8(v114, v204);
        v114 += 64;
        v112 += 512;
        v113 -= 16;
      }
      while (v113);
      v100 = 32 * (v16 >> 2) + 32;
      a7 = v187;
      a6 = v188;
      v108 = 4 * (v171 & 0x7FFFFFF0);
      result = v169;
      v95 = (v16 & 0xFFFFFFFC) + 4;
      v97 = v179;
      v99 = v173;
      v98 = v175;
      v103 = v166;
      v102 = v168;
      if (v171 != (v171 & 0x7FFFFFF0))
      {
LABEL_130:
        v132 = 8 * v108 + 24;
        do
        {
          if (*(double *)(v106 + v132 - 24) == *(double *)(v105 + v132 - 24))
            v133 = -1;
          else
            v133 = 0;
          v134 = v15 ^ v133;
          v135 = v106 + 8 * v108;
          v136 = v105 + 8 * v108;
          if (*(double *)(v135 + 8) == *(double *)(v136 + 8))
            v137 = -1;
          else
            v137 = 0;
          v138 = &a5[v108];
          *v138 = v134;
          v138[1] = v15 ^ v137;
          if (*(double *)(v135 + 16) == *(double *)(v136 + 16))
            v139 = -1;
          else
            v139 = 0;
          v140 = v15 ^ v139;
          if (*(double *)(v106 + v132) == *(double *)(v105 + v132))
            v141 = -1;
          else
            v141 = 0;
          v138[2] = v140;
          v138[3] = v15 ^ v141;
          v108 += 4;
          v132 += 32;
        }
        while (v108 <= v16);
      }
      if ((int)v108 >= a7)
        goto LABEL_113;
      v142 = v95;
      if (v99 < 8
        || ((v144 = (unint64_t)&v164[v185], v194 < a3 + v177 + v192)
          ? (v145 = a3 + v181 + v192 >= v144)
          : (v145 = 1),
            v145 ? (v146 = 0) : (v146 = 1),
            result + v181 + v190 < v144 ? (v147 = v194 >= result + v177 + v190) : (v147 = 1),
            (v142 = v95, !v147) || (v142 = v95, (v146 & 1) != 0)))
      {
        do
        {
LABEL_146:
          if (*(double *)(v106 + 8 * v142) == *(double *)(v105 + 8 * v142))
            v143 = -1;
          else
            v143 = 0;
          a5[v142++] = v15 ^ v143;
        }
        while (v142 < v94);
        goto LABEL_113;
      }
      if (v99 >= 0x10)
      {
        v152 = v95;
        v153 = v100;
        v154 = v162;
        do
        {
          v202.val[3] = veorq_s8(v101, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153 + 96), *(float64x2_t *)(v105 + v153 + 96)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153 + 112), *(float64x2_t *)(v105 + v153 + 112))));
          v202.val[2] = veorq_s8(v101, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153 + 64), *(float64x2_t *)(v105 + v153 + 64)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153 + 80), *(float64x2_t *)(v105 + v153 + 80))));
          v202.val[1] = veorq_s8(v101, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153 + 32), *(float64x2_t *)(v105 + v153 + 32)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153 + 48), *(float64x2_t *)(v105 + v153 + 48))));
          v202.val[0] = veorq_s8(v101, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153), *(float64x2_t *)(v105 + v153)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153 + 16), *(float64x2_t *)(v105 + v153 + 16))));
          *(int8x16_t *)&a5[v152] = vqtbl4q_s8(v202, (int8x16_t)xmmword_1003BC960);
          v153 += 128;
          v152 += 16;
          v154 -= 16;
        }
        while (v154);
        if (v99 == v162)
          goto LABEL_113;
        v148 = v162;
        v142 = v155;
        if ((v99 & 8) == 0)
          goto LABEL_146;
      }
      else
      {
        v148 = 0;
      }
      v149 = v156 + v148;
      v150 = v100 + 8 * v148;
      v151 = &v104[v148];
      do
      {
        v198.val[0] = veorq_s8(v101, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v150), *(float64x2_t *)(v105 + v150)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v150 + 16), *(float64x2_t *)(v105 + v150 + 16))));
        v198.val[1] = veorq_s8(v101, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v150 + 32), *(float64x2_t *)(v105 + v150 + 32)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v150 + 48), *(float64x2_t *)(v105 + v150 + 48))));
        *(_QWORD *)v151 = vqtbl2q_s8(v198, (int8x16_t)xmmword_1003BC970).u64[0];
        v151 += 8;
        v150 += 64;
        v149 += 8;
      }
      while (v149);
      v142 = v158;
      if (v99 != v160)
        goto LABEL_146;
LABEL_113:
      v106 += v102;
      v105 += v103;
      a5 += a6;
      v93 = v196 - 1;
      ++v92;
      v104 += a6;
      if (!v196)
        return result;
    }
  }
  if (v10 == 2)
    v10 = 4;
  else
    v10 = 1;
  v13 = a3;
  v14 = a2 >> 3;
  a3 = result;
  v11 = a4 >> 3;
LABEL_27:
  if (v10 == 1)
    v24 = 0;
  else
    v24 = 255;
  if (a8)
  {
    v25 = (a7 - 4);
    if (a7 < 4)
    {
      if (a7 >= 1)
      {
        v26 = (double *)(a3 + 16);
        v27 = (double *)(v13 + 16);
        v28 = a5 + 1;
        do
        {
          if (*(v27 - 2) <= *(v26 - 2))
            v29 = 0;
          else
            v29 = -1;
          *(v28 - 1) = v24 ^ v29;
          if (a7 != 1)
          {
            v30 = *(v27 - 1) <= *(v26 - 1) ? 0 : -1;
            *v28 = v24 ^ v30;
            if (a7 != 2)
            {
              if (*v27 <= *v26)
                v31 = 0;
              else
                v31 = -1;
              v28[1] = v24 ^ v31;
            }
          }
          v26 += v14;
          v27 += v11;
          v28 += a6;
          --a8;
        }
        while (a8);
      }
      return result;
    }
    v32 = 0;
    v33 = a8 - 1;
    v34 = a7;
    v35 = (v25 & 0xFFFFFFFC) + 4;
    if ((unint64_t)(v25 & 0xFFFFFFFC) + 5 <= a7)
      v36 = a7;
    else
      v36 = (v25 & 0xFFFFFFFC) + 5;
    v180 = ((8 * (a7 - 4)) & 0x7FFFFFFE0) + 32;
    v37 = 8 * v14;
    v176 = 8 * v36;
    v38 = 8 * v11;
    v39 = v36 - (v25 & 0xFFFFFFFC) - 4;
    v40 = 32 * (v25 >> 2) + 32;
    v170 = (v25 >> 2) + 1;
    v41 = v170 & 0x7FFFFFF0;
    v42 = (int8x16_t)vdupq_n_s32(v24);
    v165 = v39 & 0xFFFFFFFFFFFFFFF0;
    v157 = v35 + (v39 & 0xFFFFFFFFFFFFFFF0);
    v161 = v35 + (v39 & 0xFFFFFFFFFFFFFFF8);
    v163 = v39 & 0xFFFFFFFFFFFFFFF8;
    v159 = -(uint64_t)(v39 & 0xFFFFFFFFFFFFFFF8);
    v43 = &a5[v35];
    v167 = &a5[v36];
    v189 = &a5[v35];
    v44 = a3;
    v45 = v13;
    v186 = a7;
    v182 = v13;
    v184 = a3;
    v178 = 8 * v14;
    v172 = v39;
    v174 = 8 * v11;
    do
    {
      v46 = v32 * a6;
      v47 = (unint64_t)&v189[v32 * a6];
      v195 = v33;
      v191 = v37 * v32;
      v193 = v38 * v32;
      v48 = 0;
      if (v25 < 0x3C)
        goto LABEL_68;
      v49 = (unint64_t)a5 >= v13 + v40 + v38 * v32 || v45 >= v47;
      v50 = !v49;
      if (v44 < v47 && (unint64_t)a5 < a3 + v40 + v37 * v32)
        goto LABEL_68;
      if (v50)
        goto LABEL_68;
      v52 = 0;
      v53 = v41;
      v54 = a5;
      do
      {
        v55 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52), *(float64x2_t *)(v44 + v52)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 16), *(float64x2_t *)(v44 + v52 + 16))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 32), *(float64x2_t *)(v44 + v52 + 32)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 48), *(float64x2_t *)(v44 + v52 + 48))));
        v56 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 64), *(float64x2_t *)(v44 + v52 + 64)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 80), *(float64x2_t *)(v44 + v52 + 80))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 96), *(float64x2_t *)(v44 + v52 + 96)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 112), *(float64x2_t *)(v44 + v52 + 112))));
        v57 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 128), *(float64x2_t *)(v44 + v52 + 128)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 144), *(float64x2_t *)(v44 + v52 + 144))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 160), *(float64x2_t *)(v44 + v52 + 160)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 176), *(float64x2_t *)(v44 + v52 + 176))));
        v58 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 192), *(float64x2_t *)(v44 + v52 + 192)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 208), *(float64x2_t *)(v44 + v52 + 208))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 224), *(float64x2_t *)(v44 + v52 + 224)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 240), *(float64x2_t *)(v44 + v52 + 240))));
        v59 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 256), *(float64x2_t *)(v44 + v52 + 256)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 272), *(float64x2_t *)(v44 + v52 + 272))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 288), *(float64x2_t *)(v44 + v52 + 288)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 304), *(float64x2_t *)(v44 + v52 + 304))));
        v60 = vmovn_s16(v55);
        v61 = vmovn_s16(v56);
        v62 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 320), *(float64x2_t *)(v44 + v52 + 320)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 336), *(float64x2_t *)(v44 + v52 + 336))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 352), *(float64x2_t *)(v44 + v52 + 352)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 368), *(float64x2_t *)(v44 + v52 + 368))));
        v63 = vmovn_s16(v57);
        v64 = vmovn_s16(v58);
        v65 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 384), *(float64x2_t *)(v44 + v52 + 384)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 400), *(float64x2_t *)(v44 + v52 + 400))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 416), *(float64x2_t *)(v44 + v52 + 416)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 432), *(float64x2_t *)(v44 + v52 + 432))));
        v66 = vmovn_s16(v59);
        v67 = vmovn_s16(v65);
        v68 = vmovn_s16(v62);
        v69 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 448), *(float64x2_t *)(v44 + v52 + 448)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 464), *(float64x2_t *)(v44 + v52 + 464))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 480), *(float64x2_t *)(v44 + v52 + 480)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 496), *(float64x2_t *)(v44 + v52 + 496))));
        v70 = vmovn_s16(v69);
        v207.val[3] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v65, (int8x16_t)v69))), 0x1FuLL)));
        v207.val[2] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v59, (int8x16_t)v62))), 0x1FuLL)));
        v207.val[1] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v57, (int8x16_t)v58))), 0x1FuLL)));
        v207.val[0] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v55, (int8x16_t)v56))), 0x1FuLL)));
        v199.val[3] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v67, v70)), 0x1FuLL)));
        v199.val[2] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v66, v68)), 0x1FuLL)));
        v199.val[1] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v63, v64)), 0x1FuLL)));
        v199.val[0] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v60, v61)), 0x1FuLL)));
        v71.i16[0] = v60.u8[2];
        v71.i16[1] = v60.u8[6];
        v71.i16[2] = v61.u8[2];
        v203.val[0] = vqtbl4q_s8(v207, (int8x16_t)xmmword_1003BC960);
        v207.val[0].i16[0] = v63.u8[2];
        v207.val[0].i16[1] = v63.u8[6];
        v207.val[0].i16[2] = v64.u8[2];
        v203.val[1] = vqtbl4q_s8(v199, (int8x16_t)xmmword_1003BC960);
        v56.i16[0] = v66.u8[2];
        v56.i16[1] = v66.u8[6];
        v71.i16[3] = v61.u8[6];
        v56.i16[2] = v68.u8[2];
        v56.i16[3] = v68.u8[6];
        v58.i16[0] = v67.u8[2];
        v58.i16[1] = v67.u8[6];
        v58.i16[2] = v70.u8[2];
        v58.i16[3] = v70.u8[6];
        v205.val[3] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v58.i8), 0x1FuLL)));
        v205.val[2] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v56.i8), 0x1FuLL)));
        v207.val[0].i16[3] = v64.u8[6];
        v205.val[1] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v207.val[0].i8), 0x1FuLL)));
        v205.val[0] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v71), 0x1FuLL)));
        v203.val[2] = vqtbl4q_s8(v205, (int8x16_t)xmmword_1003BC960);
        result = v68.u8[3];
        v66.i16[0] = v66.u8[3];
        v67.i16[0] = v67.u8[3];
        v66.i16[1] = v66.u8[7];
        v66.i16[2] = v68.u8[3];
        v67.i16[1] = v67.u8[7];
        v66.i16[3] = v68.u8[7];
        v68.i16[0] = v63.u8[3];
        v67.i16[2] = v70.u8[3];
        v67.i16[3] = v70.u8[7];
        v68.i16[1] = v63.u8[7];
        v68.i16[2] = v64.u8[3];
        v205.val[3] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v67), 0x1FuLL)));
        v205.val[2] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v66), 0x1FuLL)));
        v68.i16[3] = v64.u8[7];
        v205.val[1] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v68), 0x1FuLL)));
        v60.i16[0] = v60.u8[3];
        v60.i16[1] = v60.u8[7];
        v60.i16[2] = v61.u8[3];
        v60.i16[3] = v61.u8[7];
        v205.val[0] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v60), 0x1FuLL)));
        v203.val[3] = vqtbl4q_s8(v205, (int8x16_t)xmmword_1003BC960);
        vst4q_s8(v54, v203);
        v54 += 64;
        v52 += 512;
        v53 -= 16;
      }
      while (v53);
      v48 = 4 * (v170 & 0x7FFFFFF0);
      v41 = v170 & 0x7FFFFFF0;
      v40 = 32 * (v25 >> 2) + 32;
      a7 = v186;
      a6 = v188;
      v13 = v182;
      a3 = v184;
      v35 = (v25 & 0xFFFFFFFC) + 4;
      v37 = v178;
      v39 = v172;
      v38 = v174;
      if (v170 != v41)
      {
LABEL_68:
        result = 8 * v48 + 24;
        do
        {
          if (*(double *)(v45 + result - 24) <= *(double *)(v44 + result - 24))
            v72 = 0;
          else
            v72 = -1;
          v73 = v24 ^ v72;
          v74 = v45 + 8 * v48;
          v75 = v44 + 8 * v48;
          if (*(double *)(v74 + 8) <= *(double *)(v75 + 8))
            v76 = 0;
          else
            v76 = -1;
          v77 = v24 ^ v76;
          v78 = &a5[v48];
          *v78 = v73;
          v78[1] = v77;
          if (*(double *)(v74 + 16) <= *(double *)(v75 + 16))
            v79 = 0;
          else
            v79 = -1;
          v80 = v24 ^ v79;
          if (*(double *)(v45 + result) <= *(double *)(v44 + result))
            v81 = 0;
          else
            v81 = -1;
          v78[2] = v80;
          v78[3] = v24 ^ v81;
          v48 += 4;
          result += 32;
        }
        while (v48 <= v25);
      }
      if ((int)v48 >= a7)
        goto LABEL_51;
      v82 = v35;
      if (v39 < 8
        || ((v83 = (unint64_t)&v167[v46], v47 < v13 + v176 + v193) ? (v84 = v13 + v180 + v193 >= v83) : (v84 = 1),
            v84 ? (result = 0) : (result = 1),
            a3 + v180 + v191 < v83 ? (v85 = v47 >= a3 + v176 + v191) : (v85 = 1),
            (v82 = v35, !v85) || (v82 = v35, (result & 1) != 0)))
      {
        do
        {
LABEL_105:
          if (*(double *)(v45 + 8 * v82) <= *(double *)(v44 + 8 * v82))
            v91 = 0;
          else
            v91 = -1;
          a5[v82++] = v24 ^ v91;
        }
        while (v82 < v34);
        goto LABEL_51;
      }
      if (v39 >= 0x10)
      {
        v87 = v35;
        result = v40;
        v88 = v165;
        do
        {
          v201.val[3] = veorq_s8(v42, (int8x16_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 96), *(float64x2_t *)(v44 + result + 96)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 112), *(float64x2_t *)(v44 + result + 112))));
          v201.val[2] = veorq_s8(v42, (int8x16_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 64), *(float64x2_t *)(v44 + result + 64)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 80), *(float64x2_t *)(v44 + result + 80))));
          v201.val[1] = veorq_s8(v42, (int8x16_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 32), *(float64x2_t *)(v44 + result + 32)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 48), *(float64x2_t *)(v44 + result + 48))));
          v201.val[0] = veorq_s8(v42, (int8x16_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result), *(float64x2_t *)(v44 + result)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 16), *(float64x2_t *)(v44 + result + 16))));
          *(int8x16_t *)&a5[v87] = vqtbl4q_s8(v201, (int8x16_t)xmmword_1003BC960);
          result += 128;
          v87 += 16;
          v88 -= 16;
        }
        while (v88);
        if (v39 == v165)
          goto LABEL_51;
        v86 = v165;
        v82 = v157;
        if ((v39 & 8) == 0)
          goto LABEL_105;
      }
      else
      {
        v86 = 0;
      }
      v89 = v159 + v86;
      result = v40 + 8 * v86;
      v90 = &v43[v86];
      do
      {
        v197.val[0] = veorq_s8(v42, (int8x16_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result), *(float64x2_t *)(v44 + result)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 16), *(float64x2_t *)(v44 + result + 16))));
        v197.val[1] = veorq_s8(v42, (int8x16_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 32), *(float64x2_t *)(v44 + result + 32)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 48), *(float64x2_t *)(v44 + result + 48))));
        *(_QWORD *)v90 = vqtbl2q_s8(v197, (int8x16_t)xmmword_1003BC970).u64[0];
        v90 += 8;
        result += 64;
        v89 += 8;
      }
      while (v89);
      v82 = v161;
      if (v39 != v163)
        goto LABEL_105;
LABEL_51:
      v45 += v38;
      v44 += v37;
      a5 += a6;
      v33 = v195 - 1;
      ++v32;
      v43 += a6;
    }
    while (v195);
  }
  return result;
}

uint64_t sub_1001E9968(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, double a10, double a11, double a12, __n128 a13, double *a14)
{
  uint64_t v14;
  float v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int32x4_t v20;
  int8x16_t v21;
  int8x16_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8x8_t v29;
  uint8x8_t v30;
  unsigned __int8 v31;
  float32x4_t v32;
  unsigned __int8 v33;
  uint16x8_t v34;
  uint16x8_t v35;
  int v36;
  __int128 v37;
  int v38;
  __int128 v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  BOOL v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  const char *v57;
  uint16x8_t v58;
  uint16x8_t v59;
  uint16x8_t v60;
  uint16x8_t v61;
  uint16x8_t v62;
  uint16x8_t v63;
  uint16x8_t v64;
  char *v65;
  unsigned __int8 *v66;
  unsigned __int8 *v67;
  int v68;
  int v69;
  _BYTE *v70;
  int v71;
  int v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint8x16_t v80;
  uint16x8_t v81;
  uint16x8_t v82;
  uint8x16_t v83;
  uint16x8_t v84;
  uint16x8_t v85;
  unint64_t v86;
  unint64_t v87;
  uint16x8_t v88;
  uint16x8_t v89;
  int32x4_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int32x2_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  uint64_t v107;
  int32x2_t v108;
  _BYTE *v109;
  unsigned int v110;
  uint64_t v111;
  int v112;
  __int128 v113;
  int8x16_t v114;
  int8x16_t v115;
  int8x16_t v116;
  int8x16_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  int8x16x2_t v137;
  int8x16x4_t v138;
  int8x16x4_t v139;
  int8x16x4_t v140;
  int8x16x4_t v141;
  int8x16x4_t v142;
  int8x16x4_t v143;

  v14 = result;
  v15 = *a14;
  if (v15 == 1.0)
  {
    if (a8)
    {
      v16 = 0;
      v17 = (int)a7 - 4;
      v18 = (int)a7;
      v19 = a7 - 8;
      v20.i64[0] = 0xFF000000FFLL;
      v20.i64[1] = 0xFF000000FFLL;
      v21 = (int8x16_t)xmmword_1003BC970;
      v22 = (int8x16_t)xmmword_1003BC960;
      v23 = result;
      v24 = a3;
      v25 = a5;
      do
      {
        if ((int)a7 >= 8)
        {
          v26 = 0;
          do
          {
            v29 = *(uint8x8_t *)(v23 + v26);
            v30 = *(uint8x8_t *)(v24 + v26);
            v31 = atomic_load((unsigned __int8 *)qword_10048AA40);
            if ((v31 & 1) == 0)
            {
              v130 = a8;
              v126 = a6;
              v128 = a7;
              v122 = a4;
              v124 = a5;
              v120 = a3;
              v133 = a2;
              v118 = v16;
              v114 = v22;
              v116 = v21;
              v36 = __cxa_guard_acquire(qword_10048AA40);
              *(_QWORD *)&v37 = 0x3F0000003F000000;
              *((_QWORD *)&v37 + 1) = 0x3F0000003F000000;
              v22 = v114;
              v21 = v116;
              v20.i64[0] = 0xFF000000FFLL;
              v20.i64[1] = 0xFF000000FFLL;
              v16 = v118;
              a2 = v133;
              a3 = v120;
              a4 = v122;
              a5 = v124;
              a6 = v126;
              a7 = v128;
              a8 = v130;
              if (v36)
              {
                xmmword_10048AA30 = v37;
                __cxa_guard_release(qword_10048AA40);
                v22 = v114;
                v21 = v116;
                v20.i64[0] = 0xFF000000FFLL;
                v20.i64[1] = 0xFF000000FFLL;
                v16 = v118;
                a2 = v133;
                a3 = v120;
                a4 = v122;
                a5 = v124;
                a6 = v126;
                a7 = v128;
                a8 = v130;
              }
            }
            v32 = (float32x4_t)xmmword_10048AA30;
            v33 = atomic_load((unsigned __int8 *)qword_10048AA40);
            if ((v33 & 1) == 0)
            {
              v131 = a8;
              v127 = a6;
              v129 = a7;
              v123 = a4;
              v125 = a5;
              v121 = a3;
              v134 = a2;
              v119 = v16;
              v115 = v22;
              v117 = v21;
              v113 = xmmword_10048AA30;
              v38 = __cxa_guard_acquire(qword_10048AA40);
              v32 = (float32x4_t)v113;
              v22 = v115;
              *(_QWORD *)&v39 = 0x3F0000003F000000;
              *((_QWORD *)&v39 + 1) = 0x3F0000003F000000;
              v21 = v117;
              v20.i64[0] = 0xFF000000FFLL;
              v20.i64[1] = 0xFF000000FFLL;
              v16 = v119;
              a2 = v134;
              a3 = v121;
              a4 = v123;
              a5 = v125;
              a6 = v127;
              a7 = v129;
              a8 = v131;
              if (v38)
              {
                xmmword_10048AA30 = v39;
                __cxa_guard_release(qword_10048AA40);
                v32 = (float32x4_t)v113;
                v22 = v115;
                v21 = v117;
                v20.i64[0] = 0xFF000000FFLL;
                v20.i64[1] = 0xFF000000FFLL;
                v16 = v119;
                a2 = v134;
                a3 = v121;
                a4 = v123;
                a5 = v125;
                a6 = v127;
                a7 = v129;
                a8 = v131;
              }
            }
            v34 = vmovl_u8(v29);
            v35 = vmovl_u8(v30);
            *(uint8x8_t *)(v25 + v26) = vqmovn_u16(vqmovn_high_u32(vqmovn_u32(vcvtq_u32_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v34.i8)), vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v35.i8))), v32))), vcvtq_u32_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32(vmovl_high_u16(v34)), vcvtq_f32_u32(vmovl_high_u16(v35))), (float32x4_t)xmmword_10048AA30))));
            v26 += 8;
          }
          while (v19 >= (int)v26);
          v27 = a5 + v16 * a6;
          v28 = v14 + v16 * a2;
          result = a3 + v16 * a4;
          if ((int)v26 <= (int)v17)
          {
LABEL_18:
            v40 = (int)v26;
            v41 = v17 - (int)v26;
            if (v41 >= 0x3C)
            {
              v43 = v16;
              v132 = v27;
              v44 = v27 + 4;
              v45 = result;
              v46 = result + 4;
              v47 = v25 + (int)v26;
              v48 = (v41 & 0xFFFFFFFFFFFFFFFCLL) + (int)v26;
              v49 = v44 + v48;
              v50 = v23 + (int)v26;
              v52 = v25 + v40 < v46 + v48 && v24 + v40 < v49;
              v53 = v50 >= v49 || v47 >= v28 + 4 + v48;
              if (!v53 || v52)
              {
                v42 = v40;
                v16 = v43;
                result = v45;
                v27 = v132;
                goto LABEL_37;
              }
              v54 = (v41 >> 2) + 1;
              v42 = v40 + 4 * (v54 & 0x7FFFFFFFFFFFFFF0);
              v55 = v54 & 0x7FFFFFFFFFFFFFF0;
              v16 = v43;
              result = v45;
              do
              {
                v56 = (const char *)(v23 + v40);
                v138 = vld4q_s8(v56);
                v57 = (const char *)(v24 + v40);
                v139 = vld4q_s8(v57);
                v58 = vmovl_high_u8((uint8x16_t)v138.val[0]);
                v59 = vmovl_u8(*(uint8x8_t *)v138.val[0].i8);
                v60 = vmovl_high_u8((uint8x16_t)v139.val[0]);
                v61 = vmovl_u8(*(uint8x8_t *)v139.val[0].i8);
                v142.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16(v60, v58), v20);
                v142.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v60.i8, *(uint16x4_t *)v58.i8), v20);
                v142.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16(v61, v59), v20);
                v142.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v61.i8, *(uint16x4_t *)v59.i8), v20);
                v140.val[0] = vqtbl4q_s8(v142, v22);
                v62 = vmovl_high_u8((uint8x16_t)v138.val[1]);
                v142.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v138.val[1].i8);
                v142.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v139.val[1]);
                v142.val[2] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v139.val[1].i8);
                v143.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v142.val[1], v62), v20);
                v143.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v142.val[1].i8, *(uint16x4_t *)v62.i8), v20);
                v143.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v142.val[2], (uint16x8_t)v142.val[0]), v20);
                v143.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v142.val[2].i8, *(uint16x4_t *)v142.val[0].i8), v20);
                v140.val[1] = vqtbl4q_s8(v143, v22);
                v63 = vmovl_high_u8((uint8x16_t)v138.val[2]);
                v142.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v138.val[2].i8);
                v142.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v139.val[2]);
                v142.val[2] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v139.val[2].i8);
                v143.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v142.val[1], v63), v20);
                v143.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v142.val[1].i8, *(uint16x4_t *)v63.i8), v20);
                v143.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v142.val[2], (uint16x8_t)v142.val[0]), v20);
                v143.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v142.val[2].i8, *(uint16x4_t *)v142.val[0].i8), v20);
                v140.val[2] = vqtbl4q_s8(v143, v22);
                v64 = vmovl_high_u8((uint8x16_t)v138.val[3]);
                v138.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v138.val[3].i8);
                v138.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v139.val[3]);
                v138.val[2] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v139.val[3].i8);
                v139.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v138.val[1], v64), v20);
                v139.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v138.val[1].i8, *(uint16x4_t *)v64.i8), v20);
                v139.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v138.val[2], (uint16x8_t)v138.val[0]), v20);
                v139.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v138.val[2].i8, *(uint16x4_t *)v138.val[0].i8), v20);
                v140.val[3] = vqtbl4q_s8(v139, v22);
                v65 = (char *)(v25 + v40);
                vst4q_s8(v65, v140);
                v40 += 64;
                v55 -= 16;
              }
              while (v55);
              v27 = v132;
              if (v54 != (v54 & 0x7FFFFFFFFFFFFFF0))
                goto LABEL_37;
            }
            else
            {
              v42 = (int)v26;
              do
              {
LABEL_37:
                v66 = (unsigned __int8 *)(v23 + v42);
                v67 = (unsigned __int8 *)(v24 + v42);
                v68 = *(unsigned __int8 *)(v24 + v42) * *(unsigned __int8 *)(v23 + v42);
                if (v68 >= 255)
                  LOBYTE(v68) = -1;
                v69 = v67[1] * v66[1];
                if (v69 >= 255)
                  LOBYTE(v69) = -1;
                v70 = (_BYTE *)(v25 + v42);
                *v70 = v68;
                v70[1] = v69;
                v71 = v67[2] * v66[2];
                if (v71 >= 255)
                  LOBYTE(v71) = -1;
                v72 = v67[3] * v66[3];
                if (v72 >= 255)
                  LOBYTE(v72) = -1;
                v70[2] = v71;
                v70[3] = v72;
                v42 += 4;
              }
              while (v42 <= v17);
            }
            LODWORD(v26) = v42;
          }
        }
        else
        {
          LODWORD(v26) = 0;
          v27 = a5 + v16 * a6;
          v28 = v14 + v16 * a2;
          result = a3 + v16 * a4;
          if ((int)v17 >= 0)
            goto LABEL_18;
        }
        if ((int)v26 < (int)a7)
        {
          v73 = v18 - (int)v26;
          if (v73 < 8)
          {
            v74 = (int)v26;
            goto LABEL_65;
          }
          v75 = v27 + (int)v26;
          if ((unint64_t)(v75 - (v28 + (int)v26)) < 0x10 || (unint64_t)(v75 - (result + (int)v26)) < 0x10)
          {
            v74 = (int)v26;
            goto LABEL_65;
          }
          if (v73 >= 0x10)
          {
            v77 = v73 & 0xFFFFFFFFFFFFFFF0;
            v78 = (int)v26;
            v79 = v73 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v80 = *(uint8x16_t *)(v23 + v78);
              v81 = vmovl_high_u8(v80);
              v82 = vmovl_u8(*(uint8x8_t *)v80.i8);
              v83 = *(uint8x16_t *)(v24 + v78);
              v84 = vmovl_high_u8(v83);
              v85 = vmovl_u8(*(uint8x8_t *)v83.i8);
              v141.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16(v84, v81), v20);
              v141.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v84.i8, *(uint16x4_t *)v81.i8), v20);
              v141.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16(v85, v82), v20);
              v141.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v85.i8, *(uint16x4_t *)v82.i8), v20);
              *(int8x16_t *)(v25 + v78) = vqtbl4q_s8(v141, v22);
              v78 += 16;
              v79 -= 16;
            }
            while (v79);
            if (v73 == v77)
              goto LABEL_4;
            if ((v73 & 8) == 0)
            {
              v74 = v77 + (int)v26;
              do
              {
LABEL_65:
                v91 = *(unsigned __int8 *)(v24 + v74) * *(unsigned __int8 *)(v23 + v74);
                if (v91 >= 255)
                  LOBYTE(v91) = -1;
                *(_BYTE *)(v25 + v74++) = v91;
              }
              while (v18 != v74);
              goto LABEL_4;
            }
          }
          else
          {
            v77 = 0;
          }
          v74 = (v73 & 0xFFFFFFFFFFFFFFF8) + (int)v26;
          v86 = v77 - (v73 & 0xFFFFFFFFFFFFFFF8);
          v87 = v77 + (int)v26;
          do
          {
            v88 = vmovl_u8(*(uint8x8_t *)(v23 + v87));
            v89 = vmovl_u8(*(uint8x8_t *)(v24 + v87));
            v90 = (int32x4_t)vmull_u16(*(uint16x4_t *)v89.i8, *(uint16x4_t *)v88.i8);
            v137.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16(v89, v88), v20);
            v137.val[0] = (int8x16_t)vminq_s32(v90, v20);
            *(_QWORD *)(v25 + v87) = vqtbl2q_s8(v137, v21).u64[0];
            v87 += 8;
            v86 += 8;
          }
          while (v86);
          if (v73 != (v73 & 0xFFFFFFFFFFFFFFF8))
            goto LABEL_65;
        }
LABEL_4:
        v23 += a2;
        v24 += a4;
        v25 += a6;
        ++v16;
        --a8;
      }
      while (a8);
    }
  }
  else if (a8)
  {
    v92 = (int)a7 - 4;
    v93 = (int)a7;
    v135 = a2;
    do
    {
      v94 = a4;
      v95 = a6;
      v96 = a8;
      v97 = a3;
      v98 = a7;
      v99 = a5;
      result = sub_1001EF980(v15, a10, a11, a12, a13, (uint64_t)&v136, v14, a3, a5, a7);
      a12 = 0.0;
      if ((int)result <= (int)v92)
      {
        v101 = 0;
        v102 = v14 + (int)result;
        v103 = v97 + (int)result;
        do
        {
          v100.i8[0] = *(_BYTE *)(v102 + v101);
          LOBYTE(a10) = *(_BYTE *)(v103 + v101);
          *(float *)&v104 = (float)LODWORD(a10);
          *(float *)&v105 = rintf((float)(v15 * (float)v100.u32[0]) * *(float *)&v104);
          LOBYTE(v104) = *(_BYTE *)(v102 + v101 + 1);
          *(float *)&v106 = v15 * (float)v104;
          v107 = (uint64_t)*(float *)&v105;
          LOBYTE(v105) = *(_BYTE *)(v103 + v101 + 1);
          v108 = vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rintf(*(float *)&v106 * (float)v105), v107), 0), (int32x2_t)0xFF000000FFLL);
          v109 = (_BYTE *)(v99 + (int)result + v101);
          v109[1] = v108.i8[4];
          *v109 = v108.i8[0];
          v108.i8[0] = *(_BYTE *)(v102 + v101 + 2);
          LOBYTE(v106) = *(_BYTE *)(v103 + v101 + 2);
          *(float *)&v110 = (float)v106;
          *(float *)v108.i32 = rintf((float)(v15 * (float)v108.u32[0]) * *(float *)&v110);
          LOBYTE(v110) = *(_BYTE *)(v102 + v101 + 3);
          *(float *)&a10 = v15 * (float)v110;
          LOBYTE(a11) = *(_BYTE *)(v103 + v101 + 3);
          v100 = vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rintf(*(float *)&a10 * (float)LODWORD(a11)), (uint64_t)*(float *)v108.i32), 0), (int32x2_t)0xFF000000FFLL);
          v109[3] = v100.i8[4];
          v109[2] = v100.i8[0];
          v101 += 4;
        }
        while ((int)result + v101 <= v92);
        result = (result + v101);
      }
      a7 = v98;
      a6 = v95;
      a4 = v94;
      if ((int)result < (int)v98)
      {
        v111 = (int)result;
        do
        {
          v100.i8[0] = *(_BYTE *)(v14 + v111);
          LOBYTE(a10) = *(_BYTE *)(v97 + v111);
          *(float *)&a10 = (float)LODWORD(a10);
          *(float *)v100.i32 = rintf((float)(v15 * (float)v100.u32[0]) * *(float *)&a10);
          v112 = (uint64_t)*(float *)v100.i32 & ~((int)(uint64_t)*(float *)v100.i32 >> 31);
          if (v112 >= 255)
            LOBYTE(v112) = -1;
          *(_BYTE *)(v99 + v111++) = v112;
        }
        while (v93 != v111);
      }
      v14 += v135;
      a3 = v97 + v94;
      a5 = v99 + v95;
      a8 = v96 - 1;
    }
    while (v96 != 1);
  }
  return result;
}

uint64_t sub_1001EA118(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, int32x4_t a10, int32x4_t a11, int32x4_t a12, __n128 a13, double *a14)
{
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  float v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int32x4_t v25;
  int32x4_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  const char *v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int8x16_t v42;
  int16x8_t v43;
  int8x16_t v44;
  int8x16_t v45;
  char *v46;
  uint64_t v47;
  int32x2_t v48;
  int32x2_t v49;
  _BYTE *v50;
  int32x2_t v51;
  int32x2_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int8x16_t v61;
  int16x8_t v62;
  int16x8_t v63;
  int8x16_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int32x4_t v67;
  int32x4_t v68;
  int32x4_t v69;
  int32x4_t v70;
  int32x4_t v71;
  unint64_t v72;
  unint64_t v73;
  int16x8_t v74;
  int16x8_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int8x8_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  float v84;
  int8x8_t v85;
  int8x8_t v86;
  int8x8_t v87;
  _BYTE *v88;
  int8x8_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  int8x16x4_t v100;
  int8x16x4_t v101;
  int8x16x4_t v102;
  int8x16x4_t v103;

  v14 = a8;
  v15 = a5;
  v16 = a3;
  v17 = result;
  v18 = *a14;
  v92 = a7;
  v97 = a4;
  v98 = a6;
  v96 = a2;
  if (v18 == 1.0)
  {
    if (a8)
    {
      v19 = 0;
      v20 = (int)a7 - 4;
      v21 = (int)a7;
      v22 = result;
      v23 = a3;
      v24 = a5;
      while (1)
      {
        v93 = v17 + v19 * a2;
        v94 = v15 + v19 * a6;
        v95 = v16 + v19 * a4;
        result = sub_1001EFD20(1.0, *(double *)a10.i64, *(double *)a11.i64, *(double *)a12.i64, a13, (uint64_t)&v99, v22, v23, v24, a7);
        v25.i64[0] = 0x7F0000007FLL;
        v25.i64[1] = 0x7F0000007FLL;
        v26.i64[0] = 0x7F0000007FLL;
        v26.i64[1] = 0x7F0000007FLL;
        if ((int)result > (int)v20)
          goto LABEL_27;
        v27 = (int)result;
        v28 = v20 - (int)result;
        if (v28 < 0x3C)
          break;
        v29 = (v28 & 0xFFFFFFFFFFFFFFFCLL) + (int)result;
        v30 = v94 + 4 + v29;
        v31 = v24 + (int)result >= v95 + 4 + v29 || v23 + (int)result >= v30;
        v32 = !v31;
        v33 = v22 + (int)result >= v30 || v24 + (int)result >= v93 + 4 + v29;
        if (!v33 || v32)
          break;
        v34 = (v28 >> 2) + 1;
        result = (int)result + 4 * (v34 & 0x7FFFFFFFFFFFFFF0);
        v35 = v34 & 0x7FFFFFFFFFFFFFF0;
        do
        {
          v36 = (const char *)(v22 + v27);
          v100 = vld4q_s8(v36);
          v37 = (const char *)(v23 + v27);
          v101 = vld4q_s8(v37);
          v38 = vmovl_s8(*(int8x8_t *)v100.val[0].i8);
          v39 = vmovl_high_s8(v100.val[0]);
          v40 = vmovl_s8(*(int8x8_t *)v101.val[0].i8);
          v41 = vmovl_high_s8(v101.val[0]);
          v102.val[3] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_high_s16(v41, v39), v26), v25);
          v102.val[2] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_s16(*(int16x4_t *)v41.i8, *(int16x4_t *)v39.i8), v26), v25);
          v102.val[1] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_high_s16(v40, v38), v26), v25);
          v102.val[0] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_s16(*(int16x4_t *)v40.i8, *(int16x4_t *)v38.i8), v26), v25);
          v42 = vqtbl4q_s8(v102, (int8x16_t)xmmword_1003BC960);
          v102.val[1] = (int8x16_t)vmovl_s8(*(int8x8_t *)v100.val[1].i8);
          v102.val[2] = (int8x16_t)vmovl_high_s8(v100.val[1]);
          v102.val[3] = (int8x16_t)vmovl_s8(*(int8x8_t *)v101.val[1].i8);
          v43 = vmovl_high_s8(v101.val[1]);
          v103.val[3] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_high_s16(v43, (int16x8_t)v102.val[2]), v26), v25);
          v103.val[2] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_s16(*(int16x4_t *)v43.i8, *(int16x4_t *)v102.val[2].i8), v26), v25);
          v103.val[1] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_high_s16((int16x8_t)v102.val[3], (int16x8_t)v102.val[1]), v26), v25);
          v103.val[0] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_s16(*(int16x4_t *)v102.val[3].i8, *(int16x4_t *)v102.val[1].i8), v26), v25);
          v44 = vqtbl4q_s8(v103, (int8x16_t)xmmword_1003BC960);
          v102.val[1] = (int8x16_t)vmovl_s8(*(int8x8_t *)v100.val[2].i8);
          v102.val[2] = (int8x16_t)vmovl_high_s8(v100.val[2]);
          v102.val[3] = (int8x16_t)vmovl_s8(*(int8x8_t *)v101.val[2].i8);
          v103.val[0] = (int8x16_t)vmovl_high_s8(v101.val[2]);
          v103.val[3] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_high_s16((int16x8_t)v103.val[0], (int16x8_t)v102.val[2]), v26), v25);
          v103.val[2] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_s16(*(int16x4_t *)v103.val[0].i8, *(int16x4_t *)v102.val[2].i8), v26), v25);
          v103.val[1] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_high_s16((int16x8_t)v102.val[3], (int16x8_t)v102.val[1]), v26), v25);
          v103.val[0] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_s16(*(int16x4_t *)v102.val[3].i8, *(int16x4_t *)v102.val[1].i8), v26), v25);
          v45 = vqtbl4q_s8(v103, (int8x16_t)xmmword_1003BC960);
          v102.val[1] = (int8x16_t)vmovl_s8(*(int8x8_t *)v100.val[3].i8);
          v100.val[0] = (int8x16_t)vmovl_high_s8(v100.val[3]);
          v100.val[1] = (int8x16_t)vmovl_s8(*(int8x8_t *)v101.val[3].i8);
          v100.val[2] = (int8x16_t)vmovl_high_s8(v101.val[3]);
          v100.val[3] = (int8x16_t)vmull_high_s16((int16x8_t)v100.val[2], (int16x8_t)v100.val[0]);
          v100.val[0] = (int8x16_t)vmull_s16(*(int16x4_t *)v100.val[2].i8, *(int16x4_t *)v100.val[0].i8);
          v100.val[2] = (int8x16_t)vmull_high_s16((int16x8_t)v100.val[1], (int16x8_t)v102.val[1]);
          a10 = vmaxq_s32(vmull_s16(*(int16x4_t *)v100.val[1].i8, *(int16x4_t *)v102.val[1].i8), v26);
          a11 = vmaxq_s32((int32x4_t)v100.val[2], v26);
          v101.val[2] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v100.val[3], v26), v25);
          v101.val[1] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v100.val[0], v26), v25);
          a13 = (__n128)vminq_s32(a11, v25);
          a12 = vminq_s32(a10, v25);
          v102.val[0] = vqtbl4q_s8(*(int8x16x4_t *)a12.i8, (int8x16_t)xmmword_1003BC960);
          v46 = (char *)(v24 + v27);
          vst4q_s8(v46, v102);
          v27 += 64;
          v35 -= 16;
        }
        while (v35);
        if (v34 != (v34 & 0x7FFFFFFFFFFFFFF0))
          goto LABEL_24;
LABEL_27:
        LODWORD(a7) = v92;
        a4 = v97;
        a6 = v98;
        a2 = v96;
        if ((int)result < (int)v92)
        {
          v55 = v21 - (int)result;
          if (v55 < 8)
          {
            v56 = (int)result;
            goto LABEL_45;
          }
          if ((unint64_t)(v94 - v93) < 0x10 || (unint64_t)(v94 - v95) < 0x10)
          {
            v56 = (int)result;
            goto LABEL_45;
          }
          if (v55 >= 0x10)
          {
            v58 = v55 & 0xFFFFFFFFFFFFFFF0;
            v59 = (int)result;
            v60 = v55 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v61 = *(int8x16_t *)(v22 + v59);
              v62 = vmovl_s8(*(int8x8_t *)v61.i8);
              v63 = vmovl_high_s8(v61);
              v64 = *(int8x16_t *)(v23 + v59);
              v65 = vmovl_s8(*(int8x8_t *)v64.i8);
              v66 = vmovl_high_s8(v64);
              v67 = vmull_high_s16(v66, v63);
              v68 = vmull_s16(*(int16x4_t *)v66.i8, *(int16x4_t *)v63.i8);
              v69 = vmull_high_s16(v65, v62);
              a10 = vmaxq_s32(vmull_s16(*(int16x4_t *)v65.i8, *(int16x4_t *)v62.i8), v26);
              a11 = vmaxq_s32(v69, v26);
              v70 = vminq_s32(vmaxq_s32(v67, v26), v25);
              v71 = vminq_s32(vmaxq_s32(v68, v26), v25);
              a13 = (__n128)vminq_s32(a11, v25);
              a12 = vminq_s32(a10, v25);
              *(int8x16_t *)(v24 + v59) = vqtbl4q_s8(*(int8x16x4_t *)a12.i8, (int8x16_t)xmmword_1003BC960);
              v59 += 16;
              v60 -= 16;
            }
            while (v60);
            if (v55 == v58)
              goto LABEL_4;
            if ((v55 & 8) == 0)
            {
              v56 = v58 + (int)result;
              do
              {
LABEL_45:
                v76 = *(char *)(v23 + v56) * *(char *)(v22 + v56);
                if (v76 <= -128)
                  v76 = -128;
                if (v76 >= 127)
                  LOBYTE(v76) = 127;
                *(_BYTE *)(v24 + v56++) = v76;
              }
              while (v21 != v56);
              goto LABEL_4;
            }
          }
          else
          {
            v58 = 0;
          }
          v56 = (v55 & 0xFFFFFFFFFFFFFFF8) + (int)result;
          v72 = v58 - (v55 & 0xFFFFFFFFFFFFFFF8);
          v73 = v58 + (int)result;
          do
          {
            v74 = vmovl_s8(*(int8x8_t *)(v22 + v73));
            v75 = vmovl_s8(*(int8x8_t *)(v23 + v73));
            a11 = vminq_s32(vmaxq_s32(vmull_high_s16(v75, v74), v26), v25);
            a10 = vminq_s32(vmaxq_s32(vmull_s16(*(int16x4_t *)v75.i8, *(int16x4_t *)v74.i8), v26), v25);
            *(_QWORD *)(v24 + v73) = vqtbl2q_s8(*(int8x16x2_t *)a10.i8, (int8x16_t)xmmword_1003BC970).u64[0];
            v73 += 8;
            v72 += 8;
          }
          while (v72);
          if (v55 != (v55 & 0xFFFFFFFFFFFFFFF8))
            goto LABEL_45;
        }
LABEL_4:
        v22 += v96;
        v23 += v97;
        v24 += v98;
        ++v19;
        if (!--v14)
          return result;
      }
      result = (int)result;
LABEL_24:
      v47 = result + 2;
      do
      {
        v48.i32[0] = *(char *)(v22 + v47 - 2);
        v48.i32[1] = *(char *)(v22 + v47 - 1);
        v49.i32[0] = *(char *)(v23 + v47 - 2);
        v49.i32[1] = *(char *)(v23 + v47 - 1);
        v50 = (_BYTE *)(v24 + v47);
        v51 = vmin_s32(vmax_s32(vmul_s32(v49, v48), (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
        *(v50 - 1) = v51.i8[4];
        *(v50 - 2) = v51.i8[0];
        v51.i32[0] = *(char *)(v22 + v47);
        v51.i32[1] = *(char *)(v22 + v47 + 1);
        a10.i32[0] = *(char *)(v23 + v47);
        a10.i32[1] = *(char *)(v23 + v47 + 1);
        v52 = vmin_s32(vmax_s32(vmul_s32(*(int32x2_t *)a10.i8, v51), (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
        v50[1] = v52.i8[4];
        *v50 = v52.i8[0];
        v53 = v47 + 4;
        v54 = v47 + 2;
        v47 += 4;
      }
      while (v54 <= v20);
      result = v53 - 2;
      goto LABEL_27;
    }
  }
  else if (a8)
  {
    v77 = (int)a7 - 4;
    v78 = (int)a7;
    do
    {
      v79 = a7;
      result = sub_1001EFD20(v18, *(double *)a10.i64, *(double *)a11.i64, *(double *)a12.i64, a13, (uint64_t)&v99, v17, v16, v15, a7);
      if ((int)result <= (int)v77)
      {
        v81 = 0;
        v82 = v17 + (int)result;
        v83 = v16 + (int)result;
        do
        {
          v80.i8[0] = *(_BYTE *)(v82 + v81);
          a10.i8[0] = *(_BYTE *)(v83 + v81);
          a11.i8[0] = *(_BYTE *)(v82 + v81 + 1);
          v84 = (float)(v18 * (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v80)).i32[0])
              * (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).i32[0];
          v85 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a11.i8)).u64[0];
          a11.i8[0] = *(_BYTE *)(v83 + v81 + 1);
          v86 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a11.i8)).u64[0];
          *(float *)v86.i32 = (float)v86.i32[0];
          *(float *)v85.i32 = (float)(v18 * (float)v85.i32[0]) * *(float *)v86.i32;
          v87 = (int8x8_t)vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rintf(*(float *)v85.i32), (uint64_t)rintf(v84)), (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
          v88 = (_BYTE *)(v15 + (int)result + v81);
          v88[1] = v87.i8[4];
          *v88 = v87.i8[0];
          v87.i8[0] = *(_BYTE *)(v82 + v81 + 2);
          v85.i8[0] = *(_BYTE *)(v83 + v81 + 2);
          v89 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v85)).u64[0];
          *(float *)v89.i32 = (float)v89.i32[0];
          *(float *)v87.i32 = (float)(v18 * (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v87)).i32[0])
                            * *(float *)v89.i32;
          v89.i8[0] = *(_BYTE *)(v82 + v81 + 3);
          a10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v89)).u64[0];
          *(float *)a10.i32 = v18 * (float)a10.i32[0];
          v86.i8[0] = *(_BYTE *)(v83 + v81 + 3);
          a11.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v86)).u64[0];
          v80 = (int8x8_t)vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rintf(*(float *)a10.i32 * (float)a11.i32[0]), (uint64_t)rintf(*(float *)v87.i32)), (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
          v88[3] = v80.i8[4];
          v88[2] = v80.i8[0];
          v81 += 4;
        }
        while ((int)result + v81 <= v77);
        result = (result + v81);
        v79 = v92;
      }
      a7 = v79;
      if ((int)result < (int)v79)
      {
        v90 = (int)result;
        do
        {
          v80.i8[0] = *(_BYTE *)(v17 + v90);
          v80 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v80)).u64[0];
          a10.i8[0] = *(_BYTE *)(v16 + v90);
          a10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
          *(float *)a10.i32 = (float)a10.i32[0];
          *(float *)v80.i32 = rintf((float)(v18 * (float)v80.i32[0]) * *(float *)a10.i32);
          v91 = (uint64_t)*(float *)v80.i32;
          if ((int)(uint64_t)*(float *)v80.i32 <= -128)
            LODWORD(v91) = -128;
          if ((int)v91 >= 127)
            LOBYTE(v91) = 127;
          *(_BYTE *)(v15 + v90++) = v91;
        }
        while (v78 != v90);
      }
      v17 += v96;
      v16 += v97;
      v15 += v98;
      --v14;
    }
    while (v14);
  }
  return result;
}

void sub_1001EA810(uint16x8_t *a1, unint64_t a2, uint16x8_t *a3, unint64_t a4, uint16x8_t *a5, unint64_t a6, uint64_t a7, int a8, __n128 a9, unint64_t *a10)
{
  uint16x8_t *v10;
  float v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int32x4_t v24;
  uint16x8_t *v25;
  uint16x8_t *v26;
  uint16x8_t *v27;
  int v28;
  __int8 *v29;
  __int8 *v30;
  __int8 *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __int8 *v36;
  uint16x8_t *v37;
  uint16x8_t *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  __int8 *v43;
  int v44;
  int v45;
  unint64_t v46;
  unint64_t v47;
  int v48;
  uint64_t v49;
  uint16x8_t v50;
  uint16x8_t v51;
  unsigned __int8 v52;
  float32x4_t v53;
  unsigned __int8 v54;
  int v55;
  __int128 v56;
  int v57;
  __int128 v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  BOOL v63;
  BOOL v64;
  unint64_t v66;
  uint64_t v67;
  const __int16 *v68;
  const __int16 *v69;
  __int16 *v70;
  uint64_t v71;
  char *v72;
  unint64_t v73;
  int16x8_t v74;
  int16x8_t *v75;
  uint64_t v76;
  uint64_t v77;
  __int8 *v78;
  uint64_t v79;
  int v80;
  uint16x8_t *v81;
  uint64_t v82;
  uint16x8_t *v83;
  uint64_t v84;
  float v85;
  uint64_t v86;
  uint64_t v87;
  __int8 *v88;
  uint16x8_t *v89;
  uint16x8_t *v90;
  float v91;
  int v92;
  __int8 *v93;
  uint64_t v94;
  float v95;
  int v96;
  __int8 *v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  int v101;
  uint64_t v102;
  int v103;
  __int128 v104;
  uint16x8_t v105;
  uint16x8_t v106;
  uint16x8_t v107;
  uint16x8_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint16x8_t *v113;
  uint16x8_t *v114;
  uint16x8_t *v115;
  uint16x8_t *v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  int v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __int8 *v128;
  uint64_t v129;
  char v130[9];
  int16x8x4_t v131;
  int16x8x4_t v132;
  int16x8x4_t v133;

  v10 = a1;
  a9.n128_u64[0] = *a10;
  v11 = *(double *)a10;
  v12 = a2 >> 1;
  v13 = a4 >> 1;
  v14 = a6 >> 1;
  if (v11 == 1.0)
  {
    if (a8)
    {
      v15 = (int)a7 - 4;
      v16 = (int)a7;
      v17 = a7 - 8;
      v18 = a6 & 0xFFFFFFFFFFFFFFFELL;
      v19 = 0;
      v20 = a2 & 0xFFFFFFFFFFFFFFFELL;
      v21 = a4 & 0xFFFFFFFFFFFFFFFELL;
      v22 = 2 * v14;
      v23 = 2 * v13;
      v126 = 2 * v12;
      v128 = &a5->i8[4];
      v24.i64[0] = 0xFFFF0000FFFFLL;
      v24.i64[1] = 0xFFFF0000FFFFLL;
      v25 = a1;
      v26 = a3;
      v27 = a5;
      v124 = v18;
      v125 = (int)a7;
      v122 = v21;
      v123 = v20;
      v121 = 2 * v14;
      do
      {
        if ((int)a7 >= 8)
        {
          v49 = 0;
          v28 = 0;
          do
          {
            v50 = v25[v49];
            v51 = v26[v49];
            v52 = atomic_load((unsigned __int8 *)qword_10048AA40);
            if ((v52 & 1) == 0)
            {
              v119 = a8;
              v115 = a5;
              v117 = a7;
              v113 = a3;
              v109 = v23;
              v111 = v19;
              v105 = v25[v49];
              v107 = v26[v49];
              v55 = __cxa_guard_acquire(qword_10048AA40);
              v50 = v105;
              v51 = v107;
              *(_QWORD *)&v56 = 0x3F0000003F000000;
              *((_QWORD *)&v56 + 1) = 0x3F0000003F000000;
              v24.i64[0] = 0xFFFF0000FFFFLL;
              v24.i64[1] = 0xFFFF0000FFFFLL;
              v23 = v109;
              v19 = v111;
              v22 = v121;
              v21 = v122;
              v20 = v123;
              v18 = v124;
              v16 = v125;
              a3 = v113;
              a5 = v115;
              a7 = v117;
              a8 = v119;
              if (v55)
              {
                xmmword_10048AA30 = v56;
                __cxa_guard_release(qword_10048AA40);
                v50 = v105;
                v51 = v107;
                v24.i64[0] = 0xFFFF0000FFFFLL;
                v24.i64[1] = 0xFFFF0000FFFFLL;
                v23 = v109;
                v19 = v111;
                v22 = v121;
                v21 = v122;
                v20 = v123;
                v18 = v124;
                v16 = v125;
                a3 = v113;
                a5 = v115;
                a7 = v117;
                a8 = v119;
              }
            }
            v53 = (float32x4_t)xmmword_10048AA30;
            v54 = atomic_load((unsigned __int8 *)qword_10048AA40);
            if ((v54 & 1) == 0)
            {
              v120 = a8;
              v116 = a5;
              v118 = a7;
              v114 = a3;
              v110 = v23;
              v112 = v19;
              v106 = v50;
              v108 = v51;
              v104 = xmmword_10048AA30;
              v57 = __cxa_guard_acquire(qword_10048AA40);
              v53 = (float32x4_t)v104;
              v50 = v106;
              v51 = v108;
              *(_QWORD *)&v58 = 0x3F0000003F000000;
              *((_QWORD *)&v58 + 1) = 0x3F0000003F000000;
              v24.i64[0] = 0xFFFF0000FFFFLL;
              v24.i64[1] = 0xFFFF0000FFFFLL;
              v23 = v110;
              v19 = v112;
              v22 = v121;
              v21 = v122;
              v20 = v123;
              v18 = v124;
              v16 = v125;
              a3 = v114;
              a5 = v116;
              a7 = v118;
              a8 = v120;
              if (v57)
              {
                xmmword_10048AA30 = v58;
                __cxa_guard_release(qword_10048AA40);
                v53 = (float32x4_t)v104;
                v50 = v106;
                v51 = v108;
                v24.i64[0] = 0xFFFF0000FFFFLL;
                v24.i64[1] = 0xFFFF0000FFFFLL;
                v23 = v110;
                v19 = v112;
                v22 = v121;
                v21 = v122;
                v20 = v123;
                v18 = v124;
                v16 = v125;
                a3 = v114;
                a5 = v116;
                a7 = v118;
                a8 = v120;
              }
            }
            v27[v49] = vqmovn_high_u32(vqmovn_u32(vcvtq_u32_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v50.i8)), vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v51.i8))), v53))), vcvtq_u32_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32(vmovl_high_u16(v50)), vcvtq_f32_u32(vmovl_high_u16(v51))), (float32x4_t)xmmword_10048AA30)));
            v28 += 8;
            ++v49;
          }
          while (v17 >= v28);
        }
        else
        {
          v28 = 0;
        }
        v29 = &a5->i8[v18 * v19];
        v30 = &v10->i8[v20 * v19];
        v31 = &a3->i8[v21 * v19];
        if (v28 <= (int)v15)
        {
          v32 = v23;
          v33 = v28;
          v34 = v15 - v28;
          if (v34 < 0x1C)
            goto LABEL_9;
          v59 = v34 >> 2;
          v60 = v28;
          v61 = v60 * 2 + 8 * v59;
          v62 = (unint64_t)&v29[v61 + 8];
          v63 = &v27->i8[v60 * 2] >= &v31[v61 + 8] || (unint64_t)v26 + 2 * v28 >= v62;
          v64 = !v63;
          if ((unint64_t)v25 + 2 * v28 < v62 && &v27->i8[v60 * 2] < &v30[v61 + 8])
            goto LABEL_9;
          if (v64)
            goto LABEL_9;
          v66 = v59 + 1;
          v33 = v28 + 4 * (v66 & 0x7FFFFFFFFFFFFFF8);
          v67 = v66 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v68 = &v25->i16[v60];
            v131 = vld4q_s16(v68);
            v69 = &v26->i16[v60];
            v132 = vld4q_s16(v69);
            v133.val[0] = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v132.val[0].i8, *(uint16x4_t *)v131.val[0].i8), v24), (int16x8_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v132.val[0], (uint16x8_t)v131.val[0]), v24));
            v133.val[1] = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v132.val[1].i8, *(uint16x4_t *)v131.val[1].i8), v24), (int16x8_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v132.val[1], (uint16x8_t)v131.val[1]), v24));
            v133.val[2] = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v132.val[2].i8, *(uint16x4_t *)v131.val[2].i8), v24), (int16x8_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v132.val[2], (uint16x8_t)v131.val[2]), v24));
            v133.val[3] = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v132.val[3].i8, *(uint16x4_t *)v131.val[3].i8), v24), (int16x8_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v132.val[3], (uint16x8_t)v131.val[3]), v24));
            v70 = &v27->i16[v60];
            vst4q_s16(v70, v133);
            v60 += 32;
            v67 -= 8;
          }
          while (v67);
          if (v66 != (v66 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_9:
            v35 = v33;
            v36 = v128;
            v37 = v26;
            v38 = v25;
            do
            {
              v39 = v37->u16[v35] * v38->u16[v35];
              if (v39 >= 0xFFFF)
                LOWORD(v39) = -1;
              v40 = (uint64_t)v38->i64 + v35 * 2;
              v41 = (uint64_t)v37->i64 + v35 * 2;
              v42 = v37->u16[v35 + 1] * v38->u16[v35 + 1];
              if (v42 >= 0xFFFF)
                LOWORD(v42) = -1;
              v43 = &v36[v35 * 2];
              *((_WORD *)v43 - 2) = v39;
              *((_WORD *)v43 - 1) = v42;
              v44 = *(unsigned __int16 *)(v41 + 4) * *(unsigned __int16 *)(v40 + 4);
              if (v44 >= 0xFFFF)
                LOWORD(v44) = -1;
              v45 = *(unsigned __int16 *)(v41 + 6) * *(unsigned __int16 *)(v40 + 6);
              if (v45 >= 0xFFFF)
                LOWORD(v45) = -1;
              *(_WORD *)&v36[v35 * 2] = v44;
              v33 += 4;
              *((_WORD *)v43 + 1) = v45;
              v38 = (uint16x8_t *)((char *)v38 + 8);
              v37 = (uint16x8_t *)((char *)v37 + 8);
              v36 += 8;
            }
            while (v33 <= v15);
          }
          v28 = v33;
          v18 = v124;
          v16 = v125;
          v21 = v122;
          v20 = v123;
          v22 = v121;
          v23 = v32;
        }
        if (v28 < (int)a7)
        {
          v46 = v28;
          v47 = v16 - v28;
          if (v47 < 0x10)
            goto LABEL_79;
          v71 = 2 * v28;
          v72 = &v29[v71];
          if ((unint64_t)(v72 - &v30[v71]) < 0x20)
            goto LABEL_79;
          if ((unint64_t)(v72 - &v31[v71]) < 0x20)
            goto LABEL_79;
          v46 = (v47 & 0xFFFFFFFFFFFFFFF0) + v28;
          v73 = v47 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v74 = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)&v26[1].i8[v71], *(uint16x4_t *)&v25[1].i8[v71]), v24), (int16x8_t)vminq_s32((int32x4_t)vmull_high_u16(*(uint16x8_t *)((char *)&v26[1] + v71), *(uint16x8_t *)((char *)&v25[1] + v71)), v24));
            v75 = (int16x8_t *)&v27->i8[v71];
            *v75 = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)&v26->i8[v71], *(uint16x4_t *)&v25->i8[v71]), v24), (int16x8_t)vminq_s32((int32x4_t)vmull_high_u16(*(uint16x8_t *)((char *)v26 + v71), *(uint16x8_t *)((char *)v25 + v71)), v24));
            v75[1] = v74;
            v71 += 32;
            v73 -= 16;
          }
          while (v73);
          if (v47 != (v47 & 0xFFFFFFFFFFFFFFF0))
          {
LABEL_79:
            do
            {
              v48 = v26->u16[v46] * v25->u16[v46];
              if (v48 >= 0xFFFF)
                LOWORD(v48) = -1;
              v27->i16[v46++] = v48;
            }
            while (v16 != v46);
          }
        }
        v25 = (uint16x8_t *)((char *)v25 + v126);
        v26 = (uint16x8_t *)((char *)v26 + v23);
        v27 = (uint16x8_t *)((char *)v27 + v22);
        ++v19;
        v128 += v22;
        --a8;
      }
      while (a8);
    }
  }
  else if (a8)
  {
    v76 = (int)a7 - 4;
    v77 = (int)a7;
    v127 = 2 * v13;
    v129 = 2 * v12;
    v78 = &a5->i8[4];
    v79 = 2 * v14;
    do
    {
      v80 = a8;
      v81 = a5;
      v82 = a7;
      a9.n128_f32[0] = v11;
      v83 = a3;
      LODWORD(v84) = sub_1001F041C(a9, (uint64_t)v130, v10, a3, a5, a7);
      if ((int)v84 <= (int)v76)
      {
        v86 = (int)v84;
        v87 = 2 * (int)v84;
        v88 = v78;
        v89 = v83;
        v90 = v10;
        v84 = (int)v84;
        do
        {
          a9.n128_u16[0] = v90->u16[v86];
          LOWORD(v85) = v89->i16[v86];
          v91 = (float)LODWORD(v85);
          a9.n128_f32[0] = rintf((float)(v11 * (float)a9.n128_u32[0]) * v91);
          v92 = (uint64_t)a9.n128_f32[0] & ~((int)(uint64_t)a9.n128_f32[0] >> 31);
          if (v92 >= 0xFFFF)
            LOWORD(v92) = -1;
          v93 = &v90->i8[v87];
          a9.n128_u16[0] = v90->u16[(unint64_t)v87 / 2 + 1];
          v94 = (uint64_t)v89->i64 + v87;
          LOWORD(v91) = v89->i16[(unint64_t)v87 / 2 + 1];
          v95 = (float)LODWORD(v91);
          a9.n128_f32[0] = rintf((float)(v11 * (float)a9.n128_u32[0]) * v95);
          v96 = (uint64_t)a9.n128_f32[0] & ~((int)(uint64_t)a9.n128_f32[0] >> 31);
          if (v96 >= 0xFFFF)
            LOWORD(v96) = -1;
          v97 = &v88[v87];
          *((_WORD *)v97 - 2) = v92;
          *((_WORD *)v97 - 1) = v96;
          a9.n128_u16[0] = *((_WORD *)v93 + 2);
          LOWORD(v95) = *(_WORD *)(v94 + 4);
          *(float *)&v98 = (float)LODWORD(v95);
          *(float *)&v99 = rintf((float)(v11 * (float)a9.n128_u32[0]) * *(float *)&v98);
          v100 = (uint64_t)*(float *)&v99 & ~((int)(uint64_t)*(float *)&v99 >> 31);
          LOWORD(v99) = *((_WORD *)v93 + 3);
          LOWORD(v98) = *(_WORD *)(v94 + 6);
          v85 = (float)v98;
          a9.n128_f32[0] = rintf((float)(v11 * (float)v99) * v85);
          if (v100 >= 0xFFFF)
            LOWORD(v100) = -1;
          v101 = (uint64_t)a9.n128_f32[0] & ~((int)(uint64_t)a9.n128_f32[0] >> 31);
          if (v101 >= 0xFFFF)
            LOWORD(v101) = -1;
          *(_WORD *)&v88[2 * v86] = v100;
          v84 += 4;
          *((_WORD *)v97 + 1) = v101;
          v90 = (uint16x8_t *)((char *)v90 + 8);
          v89 = (uint16x8_t *)((char *)v89 + 8);
          v88 += 8;
        }
        while (v84 <= v76);
      }
      a7 = v82;
      if ((int)v84 < (int)v82)
      {
        v102 = (int)v84;
        do
        {
          a9.n128_u16[0] = v10->u16[v102];
          LOWORD(v85) = v83->i16[v102];
          v85 = (float)LODWORD(v85);
          a9.n128_f32[0] = rintf((float)(v11 * (float)a9.n128_u32[0]) * v85);
          v103 = (uint64_t)a9.n128_f32[0] & ~((int)(uint64_t)a9.n128_f32[0] >> 31);
          if (v103 >= 0xFFFF)
            LOWORD(v103) = -1;
          v81->i16[v102++] = v103;
        }
        while (v77 != v102);
      }
      v10 = (uint16x8_t *)((char *)v10 + v129);
      a3 = (uint16x8_t *)((char *)v83 + v127);
      a5 = (uint16x8_t *)((char *)v81 + v79);
      v78 += v79;
      a8 = v80 - 1;
    }
    while (v80 != 1);
  }
}

uint64_t sub_1001EAF08(uint64_t result, unint64_t a2, int16x8_t *a3, unint64_t a4, int16x8_t *a5, unint64_t a6, uint64_t a7, int a8, int16x8_t a9, unint64_t *a10)
{
  int16x8_t *v10;
  int16x8_t *v11;
  int16x8_t *v12;
  float v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int8 *v20;
  int16x8_t *v21;
  int16x8_t *v22;
  int16x8_t *v23;
  __int8 *v24;
  __int8 *v25;
  unint64_t v26;
  uint64_t v27;
  __int8 *v28;
  int16x8_t *v29;
  int16x8_t *v30;
  int v31;
  __int8 *v32;
  __int8 *v33;
  int v34;
  __int8 *v35;
  int v36;
  int v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  BOOL v45;
  BOOL v46;
  unint64_t v48;
  uint64_t v49;
  const __int16 *v50;
  const __int16 *v51;
  __int16 *v52;
  uint64_t v53;
  unint64_t v54;
  int16x8_t v55;
  int16x8_t *v56;
  uint64_t v57;
  uint64_t v58;
  __int8 *v59;
  int v60;
  uint64_t v61;
  int16x4_t v62;
  uint64_t v63;
  uint64_t v64;
  __int8 *v65;
  int16x8_t *v66;
  int16x8_t *v67;
  int16x4_t v68;
  uint64_t v69;
  __int8 *v70;
  __int8 *v71;
  int16x4_t v72;
  uint64_t v73;
  __int8 *v74;
  int16x4_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  __int8 *v88;
  __int8 *v89;
  __int8 *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  char v96;
  int16x8x4_t v97;
  int16x8x4_t v98;
  int16x8x4_t v99;

  v10 = a5;
  v11 = a3;
  v12 = (int16x8_t *)result;
  a9.i64[0] = *a10;
  v13 = *(double *)a10;
  v14 = a2 >> 1;
  v15 = a4 >> 1;
  v16 = a6 >> 1;
  v87 = a7;
  if (v13 == 1.0)
  {
    if (a8)
    {
      v17 = 0;
      v18 = (int)a7 - 4;
      v19 = (int)a7;
      v86 = a6 & 0xFFFFFFFFFFFFFFFELL;
      v85 = a2 & 0xFFFFFFFFFFFFFFFELL;
      v83 = 2 * v16;
      v84 = a4 & 0xFFFFFFFFFFFFFFFELL;
      v81 = 2 * v15;
      v82 = 2 * v14;
      v20 = &a5->i8[4];
      v21 = a3;
      v22 = (int16x8_t *)result;
      v23 = a5;
      do
      {
        v94 = a8;
        v89 = &v12->i8[v85 * v17];
        v90 = &v10->i8[v86 * v17];
        v92 = v17;
        v88 = &v11->i8[v84 * v17];
        a9.i32[0] = 1.0;
        v24 = v20;
        result = sub_1001F0770((__n128)a9, (uint64_t)&v96, v22, v21, v23, a7);
        v25 = v24;
        if ((int)result <= (int)v18)
        {
          result = (int)result;
          v26 = v18 - (int)result;
          if (v26 < 0x1C)
            goto LABEL_7;
          v41 = v26 >> 2;
          v42 = (int)result;
          v43 = v42 * 2 + 8 * v41;
          v44 = (unint64_t)&v90[v43 + 8];
          v45 = &v23->i8[v42 * 2] >= &v88[v43 + 8] || (unint64_t)v21 + 2 * (int)result >= v44;
          v46 = !v45;
          if ((unint64_t)v22 + 2 * (int)result < v44 && &v23->i8[v42 * 2] < &v89[v43 + 8])
            goto LABEL_7;
          if (v46)
            goto LABEL_7;
          v48 = v41 + 1;
          result = (int)result + 4 * (v48 & 0x7FFFFFFFFFFFFFF8);
          v49 = v48 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v50 = &v22->i16[v42];
            v51 = &v21->i16[v42];
            v97 = vld4q_s16(v50);
            v98 = vld4q_s16(v51);
            v99.val[0] = vqmovn_high_s32(vqmovn_s32(vmull_s16(*(int16x4_t *)v98.val[0].i8, *(int16x4_t *)v97.val[0].i8)), vmull_high_s16(v98.val[0], v97.val[0]));
            v99.val[1] = vqmovn_high_s32(vqmovn_s32(vmull_s16(*(int16x4_t *)v98.val[1].i8, *(int16x4_t *)v97.val[1].i8)), vmull_high_s16(v98.val[1], v97.val[1]));
            v99.val[2] = vqmovn_high_s32(vqmovn_s32(vmull_s16(*(int16x4_t *)v98.val[2].i8, *(int16x4_t *)v97.val[2].i8)), vmull_high_s16(v98.val[2], v97.val[2]));
            a9 = (int16x8_t)vmull_s16(*(int16x4_t *)v98.val[3].i8, *(int16x4_t *)v97.val[3].i8);
            v99.val[3] = vqmovn_high_s32(vqmovn_s32((int32x4_t)a9), vmull_high_s16(v98.val[3], v97.val[3]));
            v52 = &v23->i16[v42];
            vst4q_s16(v52, v99);
            v42 += 32;
            v49 -= 8;
          }
          while (v49);
          if (v48 != (v48 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_7:
            v27 = result;
            v28 = v24;
            v29 = v21;
            v30 = v22;
            do
            {
              v31 = v29->i16[v27] * v30->i16[v27];
              if (v31 <= -32768)
                v31 = -32768;
              if (v31 >= 0x7FFF)
                LOWORD(v31) = 0x7FFF;
              v32 = &v30->i8[v27 * 2];
              v33 = &v29->i8[v27 * 2];
              v34 = v29->i16[v27 + 1] * v30->i16[v27 + 1];
              if (v34 <= -32768)
                v34 = -32768;
              if (v34 >= 0x7FFF)
                LOWORD(v34) = 0x7FFF;
              v35 = &v28[v27 * 2];
              *((_WORD *)v35 - 2) = v31;
              *((_WORD *)v35 - 1) = v34;
              v36 = *((__int16 *)v33 + 2) * *((__int16 *)v32 + 2);
              if (v36 <= -32768)
                v36 = -32768;
              if (v36 >= 0x7FFF)
                LOWORD(v36) = 0x7FFF;
              v37 = *((__int16 *)v33 + 3) * *((__int16 *)v32 + 3);
              if (v37 <= -32768)
                v37 = -32768;
              if (v37 >= 0x7FFF)
                LOWORD(v37) = 0x7FFF;
              *(_WORD *)&v28[v27 * 2] = v36;
              *((_WORD *)v35 + 1) = v37;
              result += 4;
              v30 = (int16x8_t *)((char *)v30 + 8);
              v29 = (int16x8_t *)((char *)v29 + 8);
              v28 += 8;
            }
            while (result <= v18);
          }
        }
        LODWORD(a7) = v87;
        v10 = a5;
        if ((int)result < (int)v87)
        {
          v38 = (int)result;
          v39 = v19 - (int)result;
          if (v39 < 0x10)
            goto LABEL_88;
          v53 = 2 * (int)result;
          if ((unint64_t)(v90 - v89) < 0x20)
            goto LABEL_88;
          if ((unint64_t)(v90 - v88) < 0x20)
            goto LABEL_88;
          v38 = (v39 & 0xFFFFFFFFFFFFFFF0) + (int)result;
          v54 = v39 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            a9 = vqmovn_high_s32(vqmovn_s32(vmull_s16(*(int16x4_t *)&v21->i8[v53], *(int16x4_t *)&v22->i8[v53])), vmull_high_s16(*(int16x8_t *)((char *)v21 + v53), *(int16x8_t *)((char *)v22 + v53)));
            v55 = vqmovn_high_s32(vqmovn_s32(vmull_s16(*(int16x4_t *)&v21[1].i8[v53], *(int16x4_t *)&v22[1].i8[v53])), vmull_high_s16(*(int16x8_t *)((char *)&v21[1] + v53), *(int16x8_t *)((char *)&v22[1] + v53)));
            v56 = (int16x8_t *)((char *)v23 + v53);
            *v56 = a9;
            v56[1] = v55;
            v53 += 32;
            v54 -= 16;
          }
          while (v54);
          if (v39 != (v39 & 0xFFFFFFFFFFFFFFF0))
          {
LABEL_88:
            do
            {
              v40 = v21->i16[v38] * v22->i16[v38];
              if (v40 <= -32768)
                v40 = -32768;
              if (v40 >= 0x7FFF)
                LOWORD(v40) = 0x7FFF;
              v23->i16[v38++] = v40;
            }
            while (v19 != v38);
          }
        }
        v22 = (int16x8_t *)((char *)v22 + v82);
        v21 = (int16x8_t *)((char *)v21 + v81);
        v23 = (int16x8_t *)((char *)v23 + v83);
        v17 = v92 + 1;
        v20 = &v25[v83];
        a8 = v94 - 1;
      }
      while (v94 != 1);
    }
  }
  else if (a8)
  {
    v57 = (int)a7 - 4;
    v58 = (int)a7;
    v93 = 2 * v15;
    v95 = 2 * v14;
    v59 = &a5->i8[4];
    v91 = 2 * v16;
    do
    {
      v60 = a8;
      *(float *)a9.i32 = v13;
      v61 = a7;
      result = sub_1001F0770((__n128)a9, (uint64_t)&v96, v12, v11, v10, a7);
      if ((int)result <= (int)v57)
      {
        v63 = (int)result;
        v64 = 2 * (int)result;
        v65 = v59;
        v66 = v11;
        v67 = v12;
        result = (int)result;
        do
        {
          a9.i16[0] = v67->i16[v63];
          a9.i64[0] = vmovl_s16(*(int16x4_t *)a9.i8).u64[0];
          v62.i16[0] = v66->i16[v63];
          v68 = (int16x4_t)vmovl_s16(v62).u64[0];
          *(float *)v68.i32 = (float)v68.i32[0];
          *(float *)a9.i32 = rintf((float)(v13 * (float)a9.i32[0]) * *(float *)v68.i32);
          v69 = (uint64_t)*(float *)a9.i32;
          if ((int)(uint64_t)*(float *)a9.i32 <= -32768)
            LODWORD(v69) = -32768;
          if ((int)v69 >= 0x7FFF)
            LOWORD(v69) = 0x7FFF;
          v70 = &v67->i8[v64];
          a9.i16[0] = v67->i16[(unint64_t)v64 / 2 + 1];
          a9.i64[0] = vmovl_s16(*(int16x4_t *)a9.i8).u64[0];
          v71 = &v66->i8[v64];
          v68.i16[0] = v66->i16[(unint64_t)v64 / 2 + 1];
          v72 = (int16x4_t)vmovl_s16(v68).u64[0];
          *(float *)v72.i32 = (float)v72.i32[0];
          *(float *)a9.i32 = rintf((float)(v13 * (float)a9.i32[0]) * *(float *)v72.i32);
          v73 = (uint64_t)*(float *)a9.i32;
          if ((int)(uint64_t)*(float *)a9.i32 <= -32768)
            LODWORD(v73) = -32768;
          if ((int)v73 >= 0x7FFF)
            LOWORD(v73) = 0x7FFF;
          v74 = &v65[v64];
          *((_WORD *)v74 - 2) = v69;
          *((_WORD *)v74 - 1) = v73;
          a9.i16[0] = *((_WORD *)v70 + 2);
          a9.i64[0] = vmovl_s16(*(int16x4_t *)a9.i8).u64[0];
          v72.i16[0] = *((_WORD *)v71 + 2);
          v75 = (int16x4_t)vmovl_s16(v72).u64[0];
          *(float *)v75.i32 = (float)v75.i32[0];
          *(float *)a9.i32 = rintf((float)(v13 * (float)a9.i32[0]) * *(float *)v75.i32);
          v76 = (uint64_t)*(float *)a9.i32;
          if ((int)(uint64_t)*(float *)a9.i32 <= -32768)
            LODWORD(v76) = -32768;
          if ((int)v76 >= 0x7FFF)
            LOWORD(v76) = 0x7FFF;
          a9.i16[0] = *((_WORD *)v70 + 3);
          a9 = (int16x8_t)vmovl_s16(*(int16x4_t *)a9.i8);
          v75.i16[0] = *((_WORD *)v71 + 3);
          v62 = (int16x4_t)vmovl_s16(v75).u64[0];
          *(float *)v62.i32 = (float)v62.i32[0];
          *(float *)a9.i32 = rintf((float)(v13 * (float)a9.i32[0]) * *(float *)v62.i32);
          v77 = (uint64_t)*(float *)a9.i32;
          if ((int)(uint64_t)*(float *)a9.i32 <= -32768)
            LODWORD(v77) = -32768;
          if ((int)v77 >= 0x7FFF)
            LOWORD(v77) = 0x7FFF;
          *(_WORD *)&v65[2 * v63] = v76;
          result += 4;
          *((_WORD *)v74 + 1) = v77;
          v67 = (int16x8_t *)((char *)v67 + 8);
          v66 = (int16x8_t *)((char *)v66 + 8);
          v65 += 8;
        }
        while (result <= v57);
        v61 = v87;
      }
      a7 = v61;
      if ((int)result < (int)v61)
      {
        v78 = (int)result;
        do
        {
          a9.i16[0] = v12->i16[v78];
          a9 = (int16x8_t)vmovl_s16(*(int16x4_t *)a9.i8);
          v62.i16[0] = v11->i16[v78];
          v62 = (int16x4_t)vmovl_s16(v62).u64[0];
          *(float *)v62.i32 = (float)v62.i32[0];
          *(float *)a9.i32 = rintf((float)(v13 * (float)a9.i32[0]) * *(float *)v62.i32);
          v79 = (uint64_t)*(float *)a9.i32;
          if ((int)(uint64_t)*(float *)a9.i32 <= -32768)
            LODWORD(v79) = -32768;
          if ((int)v79 >= 0x7FFF)
            LOWORD(v79) = 0x7FFF;
          v10->i16[v78++] = v79;
        }
        while (v58 != v78);
      }
      v12 = (int16x8_t *)((char *)v12 + v95);
      v11 = (int16x8_t *)((char *)v11 + v93);
      v10 = (int16x8_t *)((char *)v10 + v91);
      v59 += v91;
      a8 = v60 - 1;
    }
    while (v60 != 1);
  }
  return result;
}

unint64_t sub_1001EB500(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  unint64_t v9;
  unint64_t v10;
  double v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  _DWORD *v20;
  uint64_t v21;
  unint64_t v22;
  _DWORD *v23;
  int *v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  unint64_t v47;
  int v48;
  unint64_t v49;
  unint64_t v50;
  BOOL v52;
  uint64_t v54;
  uint64_t v55;
  int32x4_t v56;
  int32x4_t v57;
  int32x4_t v58;
  int32x4_t *v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int32x4_t v63;
  int32x4_t *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  double v69;
  uint64_t v70;
  _DWORD *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;

  v9 = a3;
  v10 = result;
  v11 = *a9;
  v12 = a2 >> 2;
  v13 = a4 >> 2;
  v14 = a6 >> 2;
  v15 = a8 - 1;
  if (*a9 == 1.0)
  {
    if (!a8)
      return result;
    v16 = (a7 - 4);
    if (a7 < 4)
    {
      if (a7 >= 1)
      {
        v17 = (_DWORD *)(a5 + 8);
        v18 = (_DWORD *)(a3 + 8);
        v19 = 4 * v13;
        v20 = (_DWORD *)(result + 4);
        v21 = 4 * v12;
        do
        {
          *(v17 - 2) = *(v18 - 2) * *(v20 - 1);
          if (a7 != 1)
          {
            *(v17 - 1) = *(v18 - 1) * *v20;
            if (a7 != 2)
              *v17 = *v18 * v20[1];
          }
          v17 += v14;
          v18 = (_DWORD *)((char *)v18 + v19);
          v20 = (_DWORD *)((char *)v20 + v21);
          --a8;
        }
        while (a8);
      }
      return result;
    }
    v28 = 0;
    v29 = (4 * (a7 - 4)) & 0x3FFFFFFF0;
    v76 = v29 + a5 + 16;
    v79 = a6 & 0xFFFFFFFFFFFFFFFCLL;
    v75 = v29 + v10 + 16;
    v78 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v73 = v29 + a3 + 16;
    v30 = (v16 & 0xFFFFFFFC) + 5;
    if (v30 <= a7)
      v30 = a7;
    v31 = 16 * (v16 >> 2) + 16;
    v74 = (v16 >> 2) + 1;
    v77 = v30 - (v16 & 0xFFFFFFFC) - 4;
    v32 = 4 * v12;
    v33 = 4 * v13;
    v34 = 4 * v14;
    v35 = a5 + 8;
    v36 = a5;
    result = v10;
    while (1)
    {
      v37 = v15;
      v38 = v79 * v28;
      v39 = v78 * v28;
      v40 = (a4 & 0xFFFFFFFFFFFFFFFCLL) * v28;
      if (v16 >= 0xC)
      {
        v41 = 0;
        v50 = a5 + v31 + v38;
        v52 = v36 < v9 + v31 + v40 && a3 < v50;
        if ((result >= v50 || v36 >= v10 + v31 + v39) && !v52)
        {
          v54 = 0;
          v55 = v74 & 0x7FFFFFFC;
          do
          {
            v56 = vmulq_s32(*(int32x4_t *)(a3 + v54 + 16), *(int32x4_t *)(result + v54 + 16));
            v57 = vmulq_s32(*(int32x4_t *)(a3 + v54), *(int32x4_t *)(result + v54));
            v58 = vmulq_s32(*(int32x4_t *)(a3 + v54 + 48), *(int32x4_t *)(result + v54 + 48));
            v59 = (int32x4_t *)(v36 + v54);
            v59[2] = vmulq_s32(*(int32x4_t *)(a3 + v54 + 32), *(int32x4_t *)(result + v54 + 32));
            v59[3] = v58;
            *v59 = v57;
            v59[1] = v56;
            v54 += 64;
            v55 -= 4;
          }
          while (v55);
          v41 = 4 * (v74 & 0x7FFFFFFC);
          if (v74 == (v74 & 0x7FFFFFFC))
            goto LABEL_26;
        }
      }
      else
      {
        v41 = 0;
      }
      v42 = 4 * v41;
      v43 = v35;
      v44 = a3;
      v45 = result;
      do
      {
        v46 = *(_DWORD *)(v44 + v42 + 4) * *(_DWORD *)(v45 + v42 + 4);
        v47 = v43 + v42;
        *(_DWORD *)(v47 - 8) = *(_DWORD *)(v44 + v42) * *(_DWORD *)(v45 + v42);
        *(_DWORD *)(v47 - 4) = v46;
        v48 = *(_DWORD *)(v44 + v42 + 12) * *(_DWORD *)(v45 + v42 + 12);
        *(_DWORD *)(v43 + v42) = *(_DWORD *)(v44 + v42 + 8) * *(_DWORD *)(v45 + v42 + 8);
        v41 += 4;
        *(_DWORD *)(v47 + 4) = v48;
        v45 += 16;
        v44 += 16;
        v43 += 16;
      }
      while (v41 <= v16);
LABEL_26:
      if ((int)v41 < a7)
      {
        v49 = (v16 & 0xFFFFFFFC) + 4;
        if (v77 < 8)
          goto LABEL_61;
        v60 = v76 + v38;
        v49 = (v16 & 0xFFFFFFFC) + 4;
        if (v60 - (v75 + v39) < 0x20)
          goto LABEL_61;
        v49 = (v16 & 0xFFFFFFFC) + 4;
        if (v60 - (v73 + v40) < 0x20)
          goto LABEL_61;
        v61 = (4 * (a7 - 4)) & 0x3FFFFFFF0;
        v62 = v77 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          v63 = vmulq_s32(*(int32x4_t *)(a3 + v61 + 32), *(int32x4_t *)(result + v61 + 32));
          v64 = (int32x4_t *)(v36 + v61);
          v64[1] = vmulq_s32(*(int32x4_t *)(a3 + v61 + 16), *(int32x4_t *)(result + v61 + 16));
          v64[2] = v63;
          v61 += 32;
          v62 -= 8;
        }
        while (v62);
        v49 = (v16 & 0xFFFFFFFC) + 4 + (v77 & 0xFFFFFFFFFFFFFFF8);
        if (v77 != (v77 & 0xFFFFFFFFFFFFFFF8))
        {
LABEL_61:
          do
          {
            *(_DWORD *)(v36 + 4 * v49) = *(_DWORD *)(a3 + 4 * v49) * *(_DWORD *)(result + 4 * v49);
            ++v49;
          }
          while (v49 < a7);
        }
      }
      result += v32;
      a3 += v33;
      v36 += v34;
      v15 = v37 - 1;
      ++v28;
      v35 += v34;
      if (!v37)
        return result;
    }
  }
  if (a8)
  {
    v22 = (a7 - 4);
    if (a7 >= 4)
    {
      v65 = 4 * v12;
      do
      {
        v66 = 0;
        v67 = 0;
        v68 = v15;
        do
        {
          v69 = v11 * (double)*(int *)(v10 + v66 + 4);
          v70 = *(int *)(v9 + v66 + 4);
          v71 = (_DWORD *)(a5 + v66);
          *v71 = (uint64_t)rint(v11 * (double)*(int *)(v10 + v66) * (double)*(int *)(v9 + v66));
          v71[1] = (uint64_t)rint(v69 * (double)v70);
          result = (uint64_t)rint(v11 * (double)*(int *)(v10 + v66 + 12) * (double)*(int *)(v9 + v66 + 12));
          v71[2] = (uint64_t)rint(v11 * (double)*(int *)(v10 + v66 + 8) * (double)*(int *)(v9 + v66 + 8));
          v71[3] = result;
          v67 += 4;
          v66 += 16;
        }
        while (v67 <= v22);
        v72 = (v22 & 0xFFFFFFFC) + 4;
        if ((int)v67 < a7)
        {
          do
          {
            *(_DWORD *)(a5 + 4 * v72) = (uint64_t)rint(v11* (double)*(int *)(v10 + 4 * v72)* (double)*(int *)(v9 + 4 * v72));
            ++v72;
          }
          while (v72 < a7);
        }
        --v15;
        a5 += 4 * v14;
        v9 += 4 * v13;
        v10 += v65;
      }
      while (v68);
    }
    else if (a7 >= 1)
    {
      v23 = (_DWORD *)(a5 + 8);
      v24 = (int *)(a3 + 8);
      v25 = 4 * v13;
      v26 = (int *)(result + 4);
      v27 = 4 * v12;
      do
      {
        *(v23 - 2) = (uint64_t)rint(v11 * (double)*(v26 - 1) * (double)*(v24 - 2));
        if (a7 != 1)
        {
          *(v23 - 1) = (uint64_t)rint(v11 * (double)*v26 * (double)*(v24 - 1));
          if (a7 != 2)
            *v23 = (uint64_t)rint(v11 * (double)v26[1] * (double)*v24);
        }
        v23 += v14;
        v24 = (int *)((char *)v24 + v25);
        v26 = (int *)((char *)v26 + v27);
        --a8;
      }
      while (a8);
    }
  }
  return result;
}

uint64_t sub_1001EBAC0(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  float v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  float32x4_t v25;
  float32x4_t *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  float32x2_t *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  BOOL v41;
  BOOL v42;
  unint64_t v44;
  uint64_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t *v49;
  unint64_t v50;
  unint64_t v51;
  float32x4_t v52;
  float32x4_t *v53;
  int v54;
  unint64_t v55;
  unint64_t v56;
  float *v57;
  float *v58;
  float *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v68;
  char v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  int v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  float32x4_t v81;
  float32x4_t *v82;
  BOOL v83;
  BOOL v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  const float *v88;
  const float *v89;
  float *v90;
  uint64_t v91;
  float v92;
  float v93;
  uint64_t v94;
  float v95;
  float v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  float32x4_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  int v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  BOOL v120;
  uint64_t v122;
  uint64_t v123;
  const float *v124;
  const float *v125;
  float *v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  float v131;
  unint64_t v132;
  float v133;
  float v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  float32x4_t v138;
  float32x4_t *v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  float32x4x4_t v155;
  float32x4x4_t v156;
  float32x4x4_t v157;
  float32x4x4_t v158;
  float32x4x4_t v159;
  float32x4x4_t v160;

  v153 = a3;
  v154 = result;
  v9 = *a9;
  v10 = a2 >> 2;
  v11 = a4 >> 2;
  v12 = a6 >> 2;
  if (v9 == 1.0)
  {
    if (a8)
    {
      v13 = 0;
      v14 = a7 - 4;
      v15 = a6 & 0xFFFFFFFFFFFFFFFCLL;
      v16 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      v17 = a4 & 0xFFFFFFFFFFFFFFFCLL;
      v18 = 4 * v10;
      v19 = 4 * v12;
      v20 = 4 * v11;
      v21 = a3;
      v22 = result;
      v23 = a5;
      do
      {
        if (a7 >= 8)
        {
          v24 = 0;
          result = 0;
          do
          {
            v25 = vmulq_f32(*(float32x4_t *)(v22 + v24 + 16), *(float32x4_t *)(v21 + v24 + 16));
            v26 = (float32x4_t *)(v23 + v24);
            *v26 = vmulq_f32(*(float32x4_t *)(v22 + v24), *(float32x4_t *)(v21 + v24));
            v26[1] = v25;
            result += 8;
            v24 += 32;
          }
          while (result <= (unint64_t)(a7 - 8));
        }
        else
        {
          result = 0;
        }
        v27 = a5 + v15 * v13;
        v28 = v154 + v16 * v13;
        v29 = v153 + v17 * v13;
        if ((int)result <= (int)v14)
        {
          v30 = (int)result;
          v31 = v14 - (int)result;
          if (v31 < 0xC)
            goto LABEL_11;
          v36 = v31 >> 2;
          v37 = 4 * v30;
          v38 = v23 + 4 * v30;
          v39 = 4 * v30 + 16 * v36;
          v40 = v27 + 16 + v39;
          v41 = v38 >= v29 + 16 + v39 || v21 + 4 * v30 >= v40;
          v42 = !v41;
          if (v22 + 4 * v30 < v40 && v38 < v28 + 16 + v39)
            goto LABEL_11;
          if (v42)
            goto LABEL_11;
          v44 = v36 + 1;
          v30 += 4 * (v44 & 0x7FFFFFFFFFFFFFFCLL);
          v45 = v44 & 0x7FFFFFFFFFFFFFFCLL;
          do
          {
            v46 = vmulq_f32(*(float32x4_t *)(v22 + v37 + 16), *(float32x4_t *)(v21 + v37 + 16));
            v47 = vmulq_f32(*(float32x4_t *)(v22 + v37), *(float32x4_t *)(v21 + v37));
            v48 = vmulq_f32(*(float32x4_t *)(v22 + v37 + 48), *(float32x4_t *)(v21 + v37 + 48));
            v49 = (float32x4_t *)(v23 + v37);
            v49[2] = vmulq_f32(*(float32x4_t *)(v22 + v37 + 32), *(float32x4_t *)(v21 + v37 + 32));
            v49[3] = v48;
            *v49 = v47;
            v49[1] = v46;
            v37 += 64;
            v45 -= 4;
          }
          while (v45);
          if (v44 != (v44 & 0x7FFFFFFFFFFFFFFCLL))
          {
LABEL_11:
            v32 = 4 * v30;
            do
            {
              v33 = (float32x2_t *)(v23 + v32);
              *v33 = vmul_f32(*(float32x2_t *)(v22 + v32), *(float32x2_t *)(v21 + v32));
              v33[1] = vmul_f32(*(float32x2_t *)(v22 + v32 + 8), *(float32x2_t *)(v21 + v32 + 8));
              v30 += 4;
              v32 += 16;
            }
            while (v30 <= v14);
          }
          result = v30;
        }
        if ((int)result < a7)
        {
          v34 = (int)result;
          v35 = a7 - (uint64_t)(int)result;
          if (v35 < 0xC)
            goto LABEL_130;
          result = 4 * (int)result;
          v50 = v27 + 4 * v34;
          if (v50 - (v28 + 4 * v34) < 0x20)
            goto LABEL_130;
          if (v50 - (v29 + result) < 0x20)
            goto LABEL_130;
          v34 += v35 & 0xFFFFFFFFFFFFFFF8;
          v51 = v35 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v52 = vmulq_f32(*(float32x4_t *)(v22 + result + 16), *(float32x4_t *)(v21 + result + 16));
            v53 = (float32x4_t *)(v23 + result);
            *v53 = vmulq_f32(*(float32x4_t *)(v22 + result), *(float32x4_t *)(v21 + result));
            v53[1] = v52;
            result += 32;
            v51 -= 8;
          }
          while (v51);
          if (v35 != (v35 & 0xFFFFFFFFFFFFFFF8))
          {
LABEL_130:
            do
            {
              result = 4 * v34;
              *(float *)(v23 + 4 * v34) = *(float *)(v22 + 4 * v34) * *(float *)(v21 + 4 * v34);
              ++v34;
            }
            while (a7 != v34);
          }
        }
        v22 += v18;
        v21 += v20;
        v23 += v19;
        ++v13;
        --a8;
      }
      while (a8);
    }
    return result;
  }
  if (!a8)
    return result;
  v54 = a8 - 1;
  v55 = (a7 - 4);
  v56 = (a7 - 8);
  if (a7 < 8)
  {
    if (a7 < 4)
    {
      if (a7 >= 1)
      {
        v57 = (float *)(a5 + 8);
        v58 = (float *)(a3 + 8);
        v59 = (float *)(result + 4);
        do
        {
          *(v57 - 2) = (float)(*(v59 - 1) * v9) * *(v58 - 2);
          if (a7 != 1)
          {
            *(v57 - 1) = (float)(*v59 * v9) * *(v58 - 1);
            if (a7 != 2)
              *v57 = (float)(v59[1] * v9) * *v58;
          }
          v57 += v12;
          v58 += v11;
          v59 += v10;
          --a8;
        }
        while (a8);
      }
      return result;
    }
    v101 = 0;
    v102 = (4 * (a7 - 4)) & 0x3FFFFFFF0;
    v149 = v102 + a5 + 16;
    v103 = a6 & 0xFFFFFFFFFFFFFFFCLL;
    v147 = v102 + result + 16;
    v104 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v142 = v102 + a3 + 16;
    v105 = a4 & 0xFFFFFFFFFFFFFFFCLL;
    v106 = (v55 & 0xFFFFFFFC) + 5;
    if (v106 <= a7)
      v106 = a7;
    v107 = 16 * (v55 >> 2) + 16;
    v146 = (v55 >> 2) + 1;
    v152 = v106 - (v55 & 0xFFFFFFFC) - 4;
    v108 = 4 * v10;
    v109 = 4 * v11;
    v110 = 4 * v12;
    v111 = a5 + 8;
    v112 = a5;
    while (1)
    {
      v113 = v54;
      v114 = v103 * v101;
      v115 = v104 * v101;
      v116 = v105 * v101;
      if (v55 >= 0xC)
      {
        v117 = 0;
        v118 = a5 + v107 + v114;
        v120 = v112 < v153 + v107 + v116 && a3 < v118;
        if ((result >= v118 || v112 >= v154 + v107 + v115) && !v120)
        {
          v122 = 0;
          v123 = v146 & 0x7FFFFFFC;
          do
          {
            v124 = (const float *)(result + v122);
            v156 = vld4q_f32(v124);
            v125 = (const float *)(a3 + v122);
            v158 = vld4q_f32(v125);
            v160.val[0] = vmulq_f32(vmulq_n_f32(v156.val[0], v9), v158.val[0]);
            v160.val[1] = vmulq_f32(vmulq_n_f32(v156.val[1], v9), v158.val[1]);
            v160.val[2] = vmulq_f32(vmulq_n_f32(v156.val[2], v9), v158.val[2]);
            v160.val[3] = vmulq_f32(vmulq_n_f32(v156.val[3], v9), v158.val[3]);
            v126 = (float *)(v112 + v122);
            vst4q_f32(v126, v160);
            v122 += 64;
            v123 -= 4;
          }
          while (v123);
          v117 = 4 * (v146 & 0x7FFFFFFC);
          if (v146 == (v146 & 0x7FFFFFFC))
            goto LABEL_118;
        }
      }
      else
      {
        v117 = 0;
      }
      v127 = 4 * v117;
      v128 = v111;
      v129 = a3;
      v130 = result;
      do
      {
        v131 = (float)(*(float *)(v130 + v127 + 4) * v9) * *(float *)(v129 + v127 + 4);
        v132 = v128 + v127;
        *(float *)(v132 - 8) = (float)(*(float *)(v130 + v127) * v9) * *(float *)(v129 + v127);
        *(float *)(v132 - 4) = v131;
        v133 = *(float *)(v129 + v127 + 12);
        v134 = *(float *)(v130 + v127 + 12) * v9;
        *(float *)(v128 + v127) = (float)(*(float *)(v130 + v127 + 8) * v9) * *(float *)(v129 + v127 + 8);
        v117 += 4;
        *(float *)(v132 + 4) = v134 * v133;
        v130 += 16;
        v129 += 16;
        v128 += 16;
      }
      while (v117 <= v55);
LABEL_118:
      if ((int)v117 < a7)
      {
        v135 = (v55 & 0xFFFFFFFC) + 4;
        if (v152 < 8)
          goto LABEL_131;
        v135 = (v55 & 0xFFFFFFFC) + 4;
        if (v149 + v114 - (v147 + v115) < 0x20)
          goto LABEL_131;
        v135 = (v55 & 0xFFFFFFFC) + 4;
        if (v149 + v114 - (v142 + v116) < 0x20)
          goto LABEL_131;
        v136 = (4 * (a7 - 4)) & 0x3FFFFFFF0;
        v137 = v152 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          v138 = vmulq_f32(vmulq_n_f32(*(float32x4_t *)(result + v136 + 32), v9), *(float32x4_t *)(a3 + v136 + 32));
          v139 = (float32x4_t *)(v112 + v136);
          v139[1] = vmulq_f32(vmulq_n_f32(*(float32x4_t *)(result + v136 + 16), v9), *(float32x4_t *)(a3 + v136 + 16));
          v139[2] = v138;
          v136 += 32;
          v137 -= 8;
        }
        while (v137);
        v135 = (v55 & 0xFFFFFFFC) + 4 + (v152 & 0xFFFFFFFFFFFFFFF8);
        if (v152 != (v152 & 0xFFFFFFFFFFFFFFF8))
        {
LABEL_131:
          do
          {
            *(float *)(v112 + 4 * v135) = (float)(*(float *)(result + 4 * v135) * v9) * *(float *)(a3 + 4 * v135);
            ++v135;
          }
          while (v135 < a7);
        }
      }
      result += v108;
      a3 += v109;
      v112 += v110;
      v54 = v113 - 1;
      ++v101;
      v111 += v110;
      if (!v113)
        return result;
    }
  }
  v60 = 0;
  v61 = (v56 & 0xFFFFFFF8) + 8;
  v150 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  v151 = a6 & 0xFFFFFFFFFFFFFFFCLL;
  v148 = a4 & 0xFFFFFFFFFFFFFFFCLL;
  v62 = v61 | 4;
  if ((v61 | 4) <= (uint64_t)(v55 + 1))
    v62 = v55 + 1;
  v63 = v62 + ~v61;
  v64 = 4 * ((v56 & 0xFFFFFFF8) + 8);
  v65 = v64 + 16 * (v63 >> 2) + 16;
  v66 = (v63 >> 2) + 1;
  v68 = ((v63 >> 2) & 0xC0000000) == 0 && (int)(v61 + 4 * (v63 >> 2)) >= (int)v61 && v63 >> 34 == 0;
  v141 = (v63 >> 2) + 1;
  v143 = v66 & 0x7FFFFFFFFFFFFFFCLL;
  v70 = !v68 || v63 < 0xC;
  v144 = v70;
  v145 = 4 * v12;
  v140 = v61 + 4 * (v66 & 0x7FFFFFFFFFFFFFFCLL);
  v71 = a3;
  v72 = result;
  v73 = a5;
  do
  {
    result = 0;
    v74 = 0;
    v75 = v54;
    v76 = a5 + v151 * v60;
    v77 = v76 + v64;
    v78 = v76 + v65;
    v79 = v154 + v150 * v60;
    v80 = a3 + v148 * v60;
    do
    {
      v81 = vmulq_n_f32(vmulq_f32(*(float32x4_t *)(v72 + result + 16), *(float32x4_t *)(v71 + result + 16)), v9);
      v82 = (float32x4_t *)(v73 + result);
      *v82 = vmulq_n_f32(vmulq_f32(*(float32x4_t *)(v72 + result), *(float32x4_t *)(v71 + result)), v9);
      v82[1] = v81;
      v74 += 8;
      result += 32;
    }
    while (v74 <= v56);
    if ((int)v55 >= (int)v74)
    {
      v74 = (v56 & 0xFFFFFFF8) + 8;
      if ((v144 & 1) != 0)
        goto LABEL_84;
      v83 = v77 >= v80 + v65 || v80 + v64 >= v78;
      v84 = !v83;
      v85 = v79 + v64 >= v78 || v77 >= v79 + v65;
      v74 = (v56 & 0xFFFFFFF8) + 8;
      if (!v85)
        goto LABEL_84;
      v74 = (v56 & 0xFFFFFFF8) + 8;
      if (v84)
        goto LABEL_84;
      v86 = v143;
      result = v61 << 32;
      v87 = 4 * ((v56 & 0xFFFFFFF8) + 8);
      do
      {
        v88 = (const float *)(v72 + v87);
        v155 = vld4q_f32(v88);
        v89 = (const float *)(v71 + v87);
        v157 = vld4q_f32(v89);
        v159.val[0] = vmulq_f32(vmulq_n_f32(v155.val[0], v9), v157.val[0]);
        v159.val[1] = vmulq_f32(vmulq_n_f32(v155.val[1], v9), v157.val[1]);
        v159.val[2] = vmulq_f32(vmulq_n_f32(v155.val[2], v9), v157.val[2]);
        v159.val[3] = vmulq_f32(vmulq_n_f32(v155.val[3], v9), v157.val[3]);
        v90 = (float *)(v73 - 12 + ((result >> 30) | 0xC));
        vst4q_f32(v90, v159);
        v87 += 64;
        result += 0x1000000000;
        v86 -= 4;
      }
      while (v86);
      v74 = v140;
      if (v141 != v143)
      {
LABEL_84:
        v91 = v74 << 32;
        do
        {
          result = (v91 >> 30) | 4;
          v92 = *(float *)(v72 + result) * v9;
          v93 = *(float *)(v71 + result);
          *(float *)(v73 + 4 * v74) = (float)(*(float *)(v72 + 4 * v74) * v9) * *(float *)(v71 + 4 * v74);
          *(float *)(v73 + result) = v92 * v93;
          v94 = (v91 >> 30) | 0xC;
          v95 = *(float *)(v72 + v94) * v9;
          v96 = *(float *)(v71 + v94);
          *(float *)(v73 + ((v91 >> 30) | 8)) = (float)(*(float *)(v72 + ((v91 >> 30) | 8)) * v9)
                                              * *(float *)(v71 + ((v91 >> 30) | 8));
          *(float *)(v73 + v94) = v95 * v96;
          v74 += 4;
          v91 += 0x400000000;
        }
        while ((uint64_t)v74 <= (uint64_t)v55);
      }
    }
    if ((int)v74 < a7)
    {
      v74 = (int)v74;
      v97 = a7 - (uint64_t)(int)v74;
      if (v97 < 8)
        goto LABEL_132;
      v98 = 4 * (int)v74;
      if (v76 - v79 < 0x20)
        goto LABEL_132;
      if (v76 - v80 < 0x20)
        goto LABEL_132;
      v74 = (v97 & 0xFFFFFFFFFFFFFFF8) + (int)v74;
      v99 = v97 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        v100 = vmulq_f32(vmulq_n_f32(*(float32x4_t *)(v72 + v98 + 16), v9), *(float32x4_t *)(v71 + v98 + 16));
        result = v73 + v98;
        *(float32x4_t *)result = vmulq_f32(vmulq_n_f32(*(float32x4_t *)(v72 + v98), v9), *(float32x4_t *)(v71 + v98));
        *(float32x4_t *)(result + 16) = v100;
        v98 += 32;
        v99 -= 8;
      }
      while (v99);
      if (v97 != (v97 & 0xFFFFFFFFFFFFFFF8))
      {
LABEL_132:
        do
        {
          *(float *)(v73 + 4 * v74) = (float)(*(float *)(v72 + 4 * v74) * v9) * *(float *)(v71 + 4 * v74);
          ++v74;
        }
        while (a7 != v74);
      }
    }
    v72 += 4 * v10;
    v71 += 4 * v11;
    v73 += v145;
    v54 = v75 - 1;
    ++v60;
  }
  while (v75);
  return result;
}

unint64_t sub_1001EC400(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  double v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t result;
  unint64_t v13;
  unint64_t v14;
  double *v15;
  double *v16;
  double *v17;
  uint64_t v18;
  unint64_t v19;
  double *v20;
  double *v21;
  double *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  double v44;
  unint64_t v45;
  double v46;
  double v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  float64x2_t v52;
  float64x2_t *v53;
  unint64_t v54;
  BOOL v56;
  uint64_t v58;
  uint64_t v59;
  float64x2_t v60;
  float64x2_t v61;
  float64x2_t v62;
  float64x2_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  int v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  BOOL v85;
  uint64_t v87;
  const double *v88;
  const double *v89;
  double *v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  double v94;
  unint64_t v95;
  double v96;
  double v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  float64x2_t v102;
  float64x2_t *v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  float64x2x4_t v119;
  float64x2x4_t v120;
  float64x2x4_t v121;

  v9 = *a9;
  v10 = a2 >> 3;
  v11 = a4 >> 3;
  result = a6 >> 3;
  v13 = (a8 - 1);
  if (*a9 == 1.0)
  {
    if (!a8)
      return result;
    v14 = (a7 - 4);
    if (a7 < 4)
    {
      if (a7 >= 1)
      {
        v15 = (double *)(a5 + 16);
        v16 = (double *)(a3 + 16);
        v17 = (double *)(a1 + 8);
        v18 = 8 * v10;
        do
        {
          *(v15 - 2) = *(v17 - 1) * *(v16 - 2);
          if (a7 != 1)
          {
            *(v15 - 1) = *v17 * *(v16 - 1);
            if (a7 != 2)
              *v15 = v17[1] * *v16;
          }
          v15 += result;
          v16 += v11;
          v17 = (double *)((char *)v17 + v18);
          --a8;
        }
        while (a8);
      }
      return result;
    }
    v24 = 0;
    v25 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    v26 = a5;
    v112 = v25 + a5 + 32;
    v27 = a6 & 0xFFFFFFFFFFFFFFF8;
    v110 = v25 + a1 + 32;
    v28 = a3;
    v106 = v25 + a3 + 32;
    v29 = (v14 & 0xFFFFFFFC) + 5;
    if (v29 <= a7)
      v29 = a7;
    v30 = 32 * (v14 >> 2) + 32;
    v108 = (v14 >> 2) + 1;
    v114 = v29 - (v14 & 0xFFFFFFFC) - 4;
    v104 = v29 & 3;
    v31 = 8 * v10;
    v32 = 8 * v11;
    v33 = 8 * result;
    v34 = a5 + 16;
    v35 = a1;
    while (1)
    {
      result = v13;
      v36 = v27 * v24;
      v37 = (a2 & 0xFFFFFFFFFFFFFFF8) * v24;
      v38 = (a4 & 0xFFFFFFFFFFFFFFF8) * v24;
      if (v14 >= 4)
      {
        v39 = 0;
        v54 = a5 + v30 + v36;
        v56 = v26 < a3 + v30 + v38 && v28 < v54;
        if ((v35 >= v54 || v26 >= a1 + v30 + v37) && !v56)
        {
          v58 = 0;
          v59 = v108 & 0x7FFFFFFE;
          do
          {
            v60 = vmulq_f64(*(float64x2_t *)(v35 + v58 + 16), *(float64x2_t *)(v28 + v58 + 16));
            v61 = vmulq_f64(*(float64x2_t *)(v35 + v58), *(float64x2_t *)(v28 + v58));
            v62 = vmulq_f64(*(float64x2_t *)(v35 + v58 + 48), *(float64x2_t *)(v28 + v58 + 48));
            v63 = (float64x2_t *)(v26 + v58);
            v63[2] = vmulq_f64(*(float64x2_t *)(v35 + v58 + 32), *(float64x2_t *)(v28 + v58 + 32));
            v63[3] = v62;
            *v63 = v61;
            v63[1] = v60;
            v58 += 64;
            v59 -= 2;
          }
          while (v59);
          v39 = 4 * (v108 & 0x7FFFFFFE);
          if (v108 == (v108 & 0x7FFFFFFE))
            goto LABEL_26;
        }
      }
      else
      {
        v39 = 0;
      }
      v40 = 8 * v39;
      v41 = v34;
      v42 = v28;
      v43 = v35;
      do
      {
        v44 = *(double *)(v43 + v40 + 8) * *(double *)(v42 + v40 + 8);
        v45 = v41 + v40;
        *(double *)(v45 - 16) = *(double *)(v43 + v40) * *(double *)(v42 + v40);
        *(double *)(v45 - 8) = v44;
        v46 = *(double *)(v43 + v40 + 24);
        v47 = *(double *)(v42 + v40 + 24);
        *(double *)(v41 + v40) = *(double *)(v43 + v40 + 16) * *(double *)(v42 + v40 + 16);
        v39 += 4;
        *(double *)(v45 + 8) = v46 * v47;
        v43 += 32;
        v42 += 32;
        v41 += 32;
      }
      while (v39 <= v14);
LABEL_26:
      if ((int)v39 < a7)
      {
        v48 = (v14 & 0xFFFFFFFC) + 4;
        if (v114 < 6)
          goto LABEL_85;
        v49 = v112 + v36;
        v48 = (v14 & 0xFFFFFFFC) + 4;
        if (v49 - (v110 + v37) < 0x20)
          goto LABEL_85;
        v48 = (v14 & 0xFFFFFFFC) + 4;
        if (v49 - (v106 + v38) < 0x20)
          goto LABEL_85;
        v50 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        v51 = v114 - v104;
        do
        {
          v52 = vmulq_f64(*(float64x2_t *)(v35 + v50 + 48), *(float64x2_t *)(v28 + v50 + 48));
          v53 = (float64x2_t *)(v26 + v50);
          v53[2] = vmulq_f64(*(float64x2_t *)(v35 + v50 + 32), *(float64x2_t *)(v28 + v50 + 32));
          v53[3] = v52;
          v50 += 32;
          v51 -= 4;
        }
        while (v51);
        v48 = (v14 & 0xFFFFFFFC) + 4 + v114 - v104;
        if (v104)
        {
LABEL_85:
          do
          {
            *(double *)(v26 + 8 * v48) = *(double *)(v35 + 8 * v48) * *(double *)(v28 + 8 * v48);
            ++v48;
          }
          while (v48 < a7);
        }
      }
      v35 += v31;
      v28 += v32;
      v26 += v33;
      v13 = (result - 1);
      ++v24;
      v34 += v33;
      if (!(_DWORD)result)
        return result;
    }
  }
  if (!a8)
    return result;
  v19 = (a7 - 4);
  if (a7 >= 4)
  {
    v64 = 0;
    v65 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    v67 = a5;
    v66 = a1;
    v113 = v65 + a5 + 32;
    v68 = a6 & 0xFFFFFFFFFFFFFFF8;
    v111 = v65 + a1 + 32;
    v69 = a2 & 0xFFFFFFFFFFFFFFF8;
    v107 = v65 + a3 + 32;
    v70 = a4 & 0xFFFFFFFFFFFFFFF8;
    v71 = (v19 & 0xFFFFFFFC) + 5;
    if (v71 <= a7)
      v71 = a7;
    v72 = 32 * (v19 >> 2) + 32;
    v109 = (v19 >> 2) + 1;
    v115 = v71 - (v19 & 0xFFFFFFFC) - 4;
    v105 = v71 & 3;
    v73 = 8 * v10;
    v74 = 8 * v11;
    v75 = 8 * result;
    v76 = a5 + 16;
    v77 = a3;
    while (1)
    {
      v78 = v13;
      v79 = v68 * v64;
      v80 = v69 * v64;
      v81 = v70 * v64;
      if (v19 >= 4)
      {
        v82 = 0;
        v83 = a5 + v72 + v79;
        v85 = v67 < a3 + v72 + v81 && v77 < v83;
        if ((v66 >= v83 || v67 >= a1 + v72 + v80) && !v85)
        {
          v87 = 0;
          result = v109 & 0x7FFFFFFE;
          do
          {
            v88 = (const double *)(v66 + v87);
            v119 = vld4q_f64(v88);
            v89 = (const double *)(v77 + v87);
            v120 = vld4q_f64(v89);
            v121.val[0] = vmulq_f64(vmulq_n_f64(v119.val[0], v9), v120.val[0]);
            v121.val[1] = vmulq_f64(vmulq_n_f64(v119.val[1], v9), v120.val[1]);
            v121.val[2] = vmulq_f64(vmulq_n_f64(v119.val[2], v9), v120.val[2]);
            v121.val[3] = vmulq_f64(vmulq_n_f64(v119.val[3], v9), v120.val[3]);
            v90 = (double *)(v67 + v87);
            vst4q_f64(v90, v121);
            v87 += 64;
            result -= 2;
          }
          while (result);
          v82 = 4 * (v109 & 0x7FFFFFFE);
          if (v109 == (v109 & 0x7FFFFFFE))
            goto LABEL_74;
        }
      }
      else
      {
        v82 = 0;
      }
      v91 = 8 * v82;
      v92 = v76;
      v93 = v77;
      result = v66;
      do
      {
        v94 = v9 * *(double *)(result + v91 + 8) * *(double *)(v93 + v91 + 8);
        v95 = v92 + v91;
        *(double *)(v95 - 16) = v9 * *(double *)(result + v91) * *(double *)(v93 + v91);
        *(double *)(v95 - 8) = v94;
        v96 = *(double *)(v93 + v91 + 24);
        v97 = v9 * *(double *)(result + v91 + 24);
        *(double *)(v92 + v91) = v9 * *(double *)(result + v91 + 16) * *(double *)(v93 + v91 + 16);
        v82 += 4;
        *(double *)(v95 + 8) = v97 * v96;
        result += 32;
        v93 += 32;
        v92 += 32;
      }
      while (v82 <= v19);
LABEL_74:
      if ((int)v82 < a7)
      {
        v98 = (v19 & 0xFFFFFFFC) + 4;
        result = v115;
        if (v115 < 6)
          goto LABEL_86;
        v99 = v113 + v79;
        v98 = (v19 & 0xFFFFFFFC) + 4;
        if (v99 - (v111 + v80) < 0x20)
          goto LABEL_86;
        v98 = (v19 & 0xFFFFFFFC) + 4;
        if (v99 - (v107 + v81) < 0x20)
          goto LABEL_86;
        v100 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        v101 = v115 - v105;
        do
        {
          v102 = vmulq_f64(vmulq_n_f64(*(float64x2_t *)(v66 + v100 + 48), v9), *(float64x2_t *)(v77 + v100 + 48));
          v103 = (float64x2_t *)(v67 + v100);
          v103[2] = vmulq_f64(vmulq_n_f64(*(float64x2_t *)(v66 + v100 + 32), v9), *(float64x2_t *)(v77 + v100 + 32));
          v103[3] = v102;
          v100 += 32;
          v101 -= 4;
        }
        while (v101);
        v98 = (v19 & 0xFFFFFFFC) + 4 + v115 - v105;
        if (v105)
        {
LABEL_86:
          do
          {
            *(double *)(v67 + 8 * v98) = v9 * *(double *)(v66 + 8 * v98) * *(double *)(v77 + 8 * v98);
            ++v98;
          }
          while (v98 < a7);
        }
      }
      v66 += v73;
      v77 += v74;
      v67 += v75;
      LODWORD(v13) = v78 - 1;
      ++v64;
      v76 += v75;
      if (!v78)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v20 = (double *)(a5 + 16);
    v21 = (double *)(a3 + 16);
    v22 = (double *)(a1 + 8);
    v23 = 8 * v10;
    do
    {
      *(v20 - 2) = v9 * *(v22 - 1) * *(v21 - 2);
      if (a7 != 1)
      {
        *(v20 - 1) = v9 * *v22 * *(v21 - 1);
        if (a7 != 2)
          *v20 = v9 * v22[1] * *v21;
      }
      v20 += result;
      v21 += v11;
      v22 = (double *)((char *)v22 + v23);
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1001ECB04(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double a9, double a10, double a11, double a12, double a13, __n128 a14, double *a15)
{
  int v15;
  double v21;
  float v22;
  uint64_t v24;
  float v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  float v30;
  char v31;
  char v32;

  v15 = a8;
  v21 = *a15;
  v22 = *a15;
  if (result)
  {
    v31 = 1;
    if (a8)
    {
      v24 = result;
      do
      {
        result = sub_1001F0E08(&v31, v24, a3, a5, a7, v21, a10, a11, a12, a13, a14);
        if ((int)result < a7)
        {
          v26 = (int)result;
          do
          {
            v27 = *(unsigned __int8 *)(a3 + v26);
            if (*(_BYTE *)(a3 + v26))
            {
              LOBYTE(v25) = *(_BYTE *)(v24 + v26);
              *(float *)&a10 = (float)v27;
              v25 = rintf((float)(v22 * (float)LODWORD(v25)) / (float)v27);
              v27 = (uint64_t)v25 & ~((int)(uint64_t)v25 >> 31);
              if (v27 >= 255)
                LOBYTE(v27) = -1;
            }
            *(_BYTE *)(a5 + v26++) = v27;
          }
          while (a7 != v26);
        }
        v24 += a2;
        a3 += a4;
        a5 += a6;
        --v15;
      }
      while (v15);
    }
  }
  else
  {
    v32 = 1;
    if (a8)
    {
      do
      {
        result = sub_1001F11D8(&v32, a3, a5, a7, v21);
        if ((int)result < a7)
        {
          v28 = (int)result;
          do
          {
            v29 = *(unsigned __int8 *)(a3 + v28);
            if (*(_BYTE *)(a3 + v28))
            {
              v30 = rintf(v22 / (float)v29);
              v29 = (uint64_t)v30 & ~((int)(uint64_t)v30 >> 31);
              if (v29 >= 255)
                LOBYTE(v29) = -1;
            }
            *(_BYTE *)(a5 + v28++) = v29;
          }
          while (a7 != v28);
        }
        a3 += a4;
        a5 += a6;
        --v15;
      }
      while (v15);
    }
  }
  return result;
}

uint64_t sub_1001ECCA0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double a9, double a10, double a11, double a12, double a13, __n128 a14, double *a15)
{
  double v15;
  int v16;
  uint64_t v22;
  float v23;
  uint64_t v24;
  int8x8_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;

  v15 = *a15;
  v29 = 1;
  if (a8)
  {
    v16 = a8;
    v22 = result;
    v24 = a7;
    do
    {
      result = sub_1001F154C(&v29, v22, a3, a5, a7, v15, a10, a11, a12, a13, a14);
      if ((int)result < a7)
      {
        v26 = (int)result;
        do
        {
          LOBYTE(v27) = *(_BYTE *)(a3 + v26);
          if ((_BYTE)v27)
          {
            v25.i8[0] = *(_BYTE *)(v22 + v26);
            v25 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v25)).u64[0];
            *(float *)&a10 = (float)(char)v27;
            v23 = v15;
            *(float *)v25.i32 = rintf((float)(v23 * (float)v25.i32[0]) / *(float *)&a10);
            v27 = (uint64_t)*(float *)v25.i32;
            if ((int)(uint64_t)*(float *)v25.i32 <= -128)
              LODWORD(v27) = -128;
            if ((int)v27 >= 127)
              LOBYTE(v27) = 127;
          }
          *(_BYTE *)(a5 + v26++) = v27;
        }
        while (v24 != v26);
      }
      v22 += a2;
      a3 += a4;
      a5 += a6;
      --v16;
    }
    while (v16);
  }
  return result;
}

uint64_t sub_1001ECDC8(uint64_t result, unint64_t a2, int16x8_t *a3, unint64_t a4, int8x16_t *a5, unint64_t a6, int a7, int a8, double a9, double a10, double a11, double a12, __n128 a13, double *a14)
{
  double v14;
  int v15;
  uint16x8_t *v19;
  float v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  float v25;
  uint64_t v26;
  int v27;
  char v28;

  v14 = *a14;
  v28 = 1;
  if (a8)
  {
    v15 = a8;
    v19 = (uint16x8_t *)result;
    v21 = a7;
    v22 = 2 * (a6 >> 1);
    v23 = 2 * (a2 >> 1);
    v24 = 2 * (a4 >> 1);
    do
    {
      result = sub_1001F191C(&v28, v19, a3, a5, a7, v14, a10, a11, a12, a13);
      if ((int)result < a7)
      {
        v26 = (int)result;
        do
        {
          v27 = a3->u16[v26];
          if (a3->i16[v26])
          {
            LOWORD(v25) = v19->i16[v26];
            *(float *)&a10 = (float)v27;
            v20 = v14;
            v25 = rintf((float)(v20 * (float)LODWORD(v25)) / (float)v27);
            v27 = (uint64_t)v25 & ~((int)(uint64_t)v25 >> 31);
            if (v27 >= 0xFFFF)
              LOWORD(v27) = -1;
          }
          a5->i16[v26++] = v27;
        }
        while (v21 != v26);
      }
      v19 = (uint16x8_t *)((char *)v19 + v23);
      a3 = (int16x8_t *)((char *)a3 + v24);
      a5 = (int8x16_t *)((char *)a5 + v22);
      --v15;
    }
    while (v15);
  }
  return result;
}

uint64_t sub_1001ECEE4(uint64_t result, unint64_t a2, int16x8_t *a3, unint64_t a4, int8x16_t *a5, unint64_t a6, int a7, int a8, double a9, double a10, double a11, double a12, __n128 a13, double *a14)
{
  double v14;
  int v15;
  int16x8_t *v19;
  uint64_t v20;
  float v21;
  uint64_t v22;
  uint64_t v23;
  int16x4_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v14 = *a14;
  v28 = 1;
  if (a8)
  {
    v15 = a8;
    v19 = (int16x8_t *)result;
    v20 = a7;
    v27 = 2 * (a6 >> 1);
    v22 = 2 * (a2 >> 1);
    v23 = 2 * (a4 >> 1);
    do
    {
      result = sub_1001F1C94(&v28, v19, a3, a5, a7, v14, a10, a11, a12, a13);
      if ((int)result < a7)
      {
        v25 = (int)result;
        do
        {
          LOWORD(v26) = a3->i16[v25];
          if ((_WORD)v26)
          {
            v24.i16[0] = v19->i16[v25];
            v24 = (int16x4_t)vmovl_s16(v24).u64[0];
            *(float *)&a10 = (float)(__int16)v26;
            v21 = v14;
            *(float *)v24.i32 = rintf((float)(v21 * (float)v24.i32[0]) / *(float *)&a10);
            v26 = (uint64_t)*(float *)v24.i32;
            if ((int)(uint64_t)*(float *)v24.i32 <= -32768)
              LODWORD(v26) = -32768;
            if ((int)v26 >= 0x7FFF)
              LOWORD(v26) = 0x7FFF;
          }
          a5->i16[v25++] = v26;
        }
        while (v20 != v25);
      }
      v19 = (int16x8_t *)((char *)v19 + v22);
      a3 = (int16x8_t *)((char *)a3 + v23);
      a5 = (int8x16_t *)((char *)a5 + v27);
      --v15;
    }
    while (v15);
  }
  return result;
}

uint64_t sub_1001ED018(uint64_t result, unint64_t a2, int32x4_t *a3, unint64_t a4, int8x16_t *a5, unint64_t a6, int a7, int a8, double a9, double a10, double a11, double a12, __n128 a13, double *a14)
{
  double v14;
  int v15;
  int32x4_t *v19;
  float v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v14 = *a14;
  v27 = 1;
  if (a8)
  {
    v15 = a8;
    v19 = (int32x4_t *)result;
    v21 = a7;
    v22 = 4 * (a6 >> 2);
    v23 = 4 * (a2 >> 2);
    v24 = 4 * (a4 >> 2);
    do
    {
      result = sub_1001F200C(&v27, v19, a3, a5, a7, v14, a10, a11, a12, a13);
      if ((int)result < a7)
      {
        v25 = (int)result;
        do
        {
          LODWORD(v26) = a3->i32[v25];
          if ((_DWORD)v26)
          {
            *(float *)&a10 = (float)(int)v26;
            v20 = v14;
            v26 = (uint64_t)rintf((float)(v20 * (float)v19->i32[v25]) / (float)(int)v26);
          }
          a5->i32[v25++] = v26;
        }
        while (v21 != v25);
      }
      v19 = (int32x4_t *)((char *)v19 + v23);
      a3 = (int32x4_t *)((char *)a3 + v24);
      a5 = (int8x16_t *)((char *)a5 + v22);
      --v15;
    }
    while (v15);
  }
  return result;
}

uint64_t sub_1001ED124(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  unint64_t v9;
  float v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  float *v14;
  uint64_t v15;
  uint64_t v16;
  float *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  int8x16_t v26;
  int8x16_t *v27;
  uint64_t v28;
  float v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  float v36;

  if (a8)
  {
    v9 = a2 >> 2;
    v10 = *a9;
    v11 = a4 >> 2;
    v12 = a6 >> 2;
    v13 = (a7 - 8);
    if (a7 >= 8)
    {
      v19 = a8 - 1;
      v20 = 4 * v9;
      v21 = 4 * v12;
      v22 = 4 * v11;
      do
      {
        v23 = 0;
        v24 = 0;
        v25 = v19;
        do
        {
          v26 = vbicq_s8((int8x16_t)vdivq_f32(vmulq_n_f32(*(float32x4_t *)(result + v23 + 16), v10), *(float32x4_t *)(a3 + v23 + 16)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v23 + 16)));
          v27 = (int8x16_t *)(a5 + v23);
          *v27 = vbicq_s8((int8x16_t)vdivq_f32(vmulq_n_f32(*(float32x4_t *)(result + v23), v10), *(float32x4_t *)(a3 + v23)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v23)));
          v27[1] = v26;
          v24 += 8;
          v23 += 32;
        }
        while (v24 <= v13);
        if ((int)v24 < a7)
        {
          v28 = (int)((v13 & 0xFFFFFFF8) + 8);
          do
          {
            while (1)
            {
              v29 = *(float *)(a3 + 4 * v28);
              if (v29 == 0.0)
                break;
              *(float *)(a5 + 4 * v28) = (float)(*(float *)(result + 4 * v28) * v10) / v29;
              if (++v28 >= a7)
                goto LABEL_6;
            }
            *(_DWORD *)(a5 + 4 * v28++) = 0;
          }
          while (v28 < a7);
        }
LABEL_6:
        v19 = v25 - 1;
        result += v20;
        a5 += v21;
        a3 += v22;
      }
      while (v25);
    }
    else if (a7 >= 1)
    {
      v14 = (float *)(a3 + 12);
      v15 = a5 + 12;
      v16 = 4 * v12;
      v17 = (float *)(result + 12);
      v18 = 4 * v9;
      do
      {
        v31 = *(v14 - 3);
        if (v31 == 0.0)
        {
          *(_DWORD *)(v15 - 12) = 0;
          if (a7 == 1)
            goto LABEL_17;
        }
        else
        {
          *(float *)(v15 - 12) = (float)(*(v17 - 3) * v10) / v31;
          if (a7 == 1)
            goto LABEL_17;
        }
        v32 = *(v14 - 2);
        if (v32 == 0.0)
        {
          *(_DWORD *)(v15 - 8) = 0;
          if (a7 == 2)
            goto LABEL_17;
        }
        else
        {
          *(float *)(v15 - 8) = (float)(*(v17 - 2) * v10) / v32;
          if (a7 == 2)
            goto LABEL_17;
        }
        v33 = *(v14 - 1);
        if (v33 == 0.0)
        {
          *(_DWORD *)(v15 - 4) = 0;
          if (a7 == 3)
            goto LABEL_17;
        }
        else
        {
          *(float *)(v15 - 4) = (float)(*(v17 - 1) * v10) / v33;
          if (a7 == 3)
            goto LABEL_17;
        }
        if (*v14 == 0.0)
        {
          *(_DWORD *)v15 = 0;
          if (a7 == 4)
            goto LABEL_17;
        }
        else
        {
          *(float *)v15 = (float)(*v17 * v10) / *v14;
          if (a7 == 4)
            goto LABEL_17;
        }
        v34 = v14[1];
        if (v34 == 0.0)
        {
          *(_DWORD *)(v15 + 4) = 0;
          if (a7 == 5)
            goto LABEL_17;
        }
        else
        {
          *(float *)(v15 + 4) = (float)(v17[1] * v10) / v34;
          if (a7 == 5)
            goto LABEL_17;
        }
        v35 = v14[2];
        if (v35 == 0.0)
        {
          *(_DWORD *)(v15 + 8) = 0;
          if (a7 != 6)
          {
LABEL_42:
            v36 = v14[3];
            if (v36 == 0.0)
              v30 = 0.0;
            else
              v30 = (float)(v17[3] * v10) / v36;
            *(float *)(v15 + 12) = v30;
          }
        }
        else
        {
          *(float *)(v15 + 8) = (float)(v17[2] * v10) / v35;
          if (a7 != 6)
            goto LABEL_42;
        }
LABEL_17:
        v14 += v11;
        v15 += v16;
        v17 = (float *)((char *)v17 + v18);
        --a8;
      }
      while (a8);
    }
  }
  return result;
}

uint64_t sub_1001ED3D4(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  unint64_t v9;
  double v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  double *v14;
  double *v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  int8x16_t v29;
  int8x16_t *v30;
  uint64_t v31;
  double v32;

  if (a8)
  {
    v9 = a2 >> 3;
    v10 = *a9;
    v11 = a4 >> 3;
    v12 = a6 >> 3;
    v13 = (a7 - 4);
    if (a7 >= 4)
    {
      v22 = a8 - 1;
      v23 = 8 * v9;
      v24 = 8 * v12;
      v25 = 8 * v11;
      do
      {
        v26 = 0;
        v27 = 0;
        v28 = v22;
        do
        {
          v29 = vbicq_s8((int8x16_t)vdivq_f64(vmulq_n_f64(*(float64x2_t *)(result + v26 + 16), v10), *(float64x2_t *)(a3 + v26 + 16)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v26 + 16)));
          v30 = (int8x16_t *)(a5 + v26);
          *v30 = vbicq_s8((int8x16_t)vdivq_f64(vmulq_n_f64(*(float64x2_t *)(result + v26), v10), *(float64x2_t *)(a3 + v26)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v26)));
          v30[1] = v29;
          v27 += 4;
          v26 += 32;
        }
        while (v27 <= v13);
        if ((int)v27 < a7)
        {
          v31 = (int)((v13 & 0xFFFFFFFC) + 4);
          do
          {
            while (1)
            {
              v32 = *(double *)(a3 + 8 * v31);
              if (v32 == 0.0)
                break;
              *(double *)(a5 + 8 * v31) = v10 * *(double *)(result + 8 * v31) / v32;
              if (++v31 >= a7)
                goto LABEL_19;
            }
            *(_QWORD *)(a5 + 8 * v31++) = 0;
          }
          while (v31 < a7);
        }
LABEL_19:
        v22 = v28 - 1;
        result += v23;
        a5 += v24;
        a3 += v25;
      }
      while (v28);
    }
    else if (a7 >= 1)
    {
      v14 = (double *)(a3 + 16);
      v15 = (double *)(a5 + 16);
      v16 = 8 * v12;
      v17 = (double *)(result + 8);
      v18 = 8 * v9;
      do
      {
        v20 = *(v14 - 2);
        if (v20 == 0.0)
        {
          *(v15 - 2) = 0.0;
          if (a7 == 1)
            goto LABEL_7;
        }
        else
        {
          *(v15 - 2) = v10 * *(v17 - 1) / v20;
          if (a7 == 1)
            goto LABEL_7;
        }
        v21 = *(v14 - 1);
        if (v21 == 0.0)
        {
          *(v15 - 1) = 0.0;
          if (a7 != 2)
          {
LABEL_16:
            if (*v14 == 0.0)
              v19 = 0.0;
            else
              v19 = v10 * v17[1] / *v14;
            *v15 = v19;
          }
        }
        else
        {
          *(v15 - 1) = v10 * *v17 / v21;
          if (a7 != 2)
            goto LABEL_16;
        }
LABEL_7:
        v14 += v11;
        v15 = (double *)((char *)v15 + v16);
        v17 = (double *)((char *)v17 + v18);
        --a8;
      }
      while (a8);
    }
  }
  return result;
}

void sub_1001ED5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double *a9)
{
  double v9;
  int v10;
  float v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  float v21;
  char v22;

  v9 = *a9;
  v22 = 1;
  if (a8)
  {
    v10 = a8;
    v17 = a7;
    do
    {
      v18 = sub_1001F11D8(&v22, a3, a5, a7, v9);
      if (v18 < a7)
      {
        v19 = v18;
        do
        {
          v20 = *(unsigned __int8 *)(a3 + v19);
          if (*(_BYTE *)(a3 + v19))
          {
            v16 = v9;
            v21 = rintf(v16 / (float)v20);
            v20 = (uint64_t)v21 & ~((int)(uint64_t)v21 >> 31);
            if (v20 >= 255)
              LOBYTE(v20) = -1;
          }
          *(_BYTE *)(a5 + v19++) = v20;
        }
        while (v17 != v19);
      }
      a3 += a4;
      a5 += a6;
      --v10;
    }
    while (v10);
  }
}

void sub_1001ED68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double *a9)
{
  double v9;
  int v10;
  float v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v9 = *a9;
  v21 = 1;
  if (a8)
  {
    v10 = a8;
    v17 = a7;
    do
    {
      v18 = sub_1001F23B4(&v21, a3, a5, a7, v9);
      if (v18 < a7)
      {
        v19 = v18;
        do
        {
          LOBYTE(v20) = *(_BYTE *)(a3 + v19);
          if ((_BYTE)v20)
          {
            v16 = v9;
            v20 = (uint64_t)rintf(v16 / (float)(char)v20);
            if ((int)v20 <= -128)
              LODWORD(v20) = -128;
            if ((int)v20 >= 127)
              LOBYTE(v20) = 127;
          }
          *(_BYTE *)(a5 + v19++) = v20;
        }
        while (v17 != v19);
      }
      a3 += a4;
      a5 += a6;
      --v10;
    }
    while (v10);
  }
}

void sub_1001ED78C(uint64_t a1, uint64_t a2, int16x8_t *a3, unint64_t a4, int8x16_t *a5, unint64_t a6, int a7, int a8, double *a9)
{
  double v9;
  int v10;
  float v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  float v21;
  char v22;

  v9 = *a9;
  v22 = 1;
  if (a8)
  {
    v10 = a8;
    v15 = a7;
    v16 = 2 * (a6 >> 1);
    v17 = 2 * (a4 >> 1);
    do
    {
      v18 = sub_1001F2728(&v22, a3, a5, a7, v9);
      if (v18 < a7)
      {
        v19 = v18;
        do
        {
          v20 = a3->u16[v19];
          if (a3->i16[v19])
          {
            v14 = v9;
            v21 = rintf(v14 / (float)v20);
            v20 = (uint64_t)v21 & ~((int)(uint64_t)v21 >> 31);
            if (v20 >= 0xFFFF)
              LOWORD(v20) = -1;
          }
          a5->i16[v19++] = v20;
        }
        while (v15 != v19);
      }
      a3 = (int16x8_t *)((char *)a3 + v17);
      a5 = (int8x16_t *)((char *)a5 + v16);
      --v10;
    }
    while (v10);
  }
}

void sub_1001ED880(uint64_t a1, uint64_t a2, int16x8_t *a3, unint64_t a4, int8x16_t *a5, unint64_t a6, int a7, int a8, double *a9)
{
  double v9;
  int v10;
  uint64_t v14;
  float v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v9 = *a9;
  v21 = 1;
  if (a8)
  {
    v10 = a8;
    v14 = a7;
    v16 = 2 * (a6 >> 1);
    v17 = 2 * (a4 >> 1);
    do
    {
      v18 = sub_1001F2A24(&v21, a3, a5, a7, v9);
      if (v18 < a7)
      {
        v19 = v18;
        do
        {
          LOWORD(v20) = a3->i16[v19];
          if ((_WORD)v20)
          {
            v15 = v9;
            v20 = (uint64_t)rintf(v15 / (float)(__int16)v20);
            if ((int)v20 <= -32768)
              LODWORD(v20) = -32768;
            if ((int)v20 >= 0x7FFF)
              LOWORD(v20) = 0x7FFF;
          }
          a5->i16[v19++] = v20;
        }
        while (v14 != v19);
      }
      a3 = (int16x8_t *)((char *)a3 + v17);
      a5 = (int8x16_t *)((char *)a5 + v16);
      --v10;
    }
    while (v10);
  }
}

void sub_1001ED988(uint64_t a1, uint64_t a2, int32x4_t *a3, unint64_t a4, int8x16_t *a5, unint64_t a6, int a7, int a8, double *a9)
{
  double v9;
  int v10;
  float v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v9 = *a9;
  v21 = 1;
  if (a8)
  {
    v10 = a8;
    v15 = a7;
    v16 = 4 * (a6 >> 2);
    v17 = 4 * (a4 >> 2);
    do
    {
      v18 = sub_1001F2D20(&v21, a3, a5, a7, v9);
      if (v18 < a7)
      {
        v19 = v18;
        do
        {
          LODWORD(v20) = a3->i32[v19];
          if ((_DWORD)v20)
          {
            v14 = v9;
            v20 = (uint64_t)rintf(v14 / (float)(int)v20);
          }
          a5->i32[v19++] = v20;
        }
        while (v15 != v19);
      }
      a3 = (int32x4_t *)((char *)a3 + v17);
      a5 = (int8x16_t *)((char *)a5 + v16);
      --v10;
    }
    while (v10);
  }
}

void sub_1001EDA6C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, int a8, int32x2_t *a9)
{
  int32x2_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  float *v13;
  float *v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  float v25;
  float v26;
  float v27;
  int v28;
  float32x4_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  int8x16_t v36;
  int8x16_t *v37;
  unint64_t v38;
  float v39;
  float v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  float32x4_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int v54;
  int8x16_t v55;
  int8x16_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int8x16_t v60;
  int8x16_t *v61;
  float v62;
  float v63;

  if (a8)
  {
    v9 = *a9;
    *(float *)v9.i32 = *(double *)a9->i32;
    v10 = a4 >> 2;
    v11 = a6 >> 2;
    v12 = (a7 - 8);
    if (a7 >= 8)
    {
      v28 = a8 - 1;
      v29 = (float32x4_t)vdupq_lane_s32(v9, 0);
      v30 = (v12 & 0xFFFFFFF8) + 8;
      if ((v30 | 1) <= a7)
        v31 = a7;
      else
        v31 = v30 | 1;
      v32 = v31 - v30;
      if ((unint64_t)(v31 - v30) >= 8)
      {
        v41 = 0;
        v42 = 4 * ((v12 & 0xFFFFFFF8) + 8);
        v43 = v42 + a5;
        v44 = a6 & 0xFFFFFFFFFFFFFFFCLL;
        v45 = v42 + a3;
        v46 = a4 & 0xFFFFFFFFFFFFFFFCLL;
        v47 = v31 & 7;
        v48 = v32 - v47;
        v49 = (float32x4_t)vdupq_lane_s32(v9, 0);
        v50 = 4 * v11;
        v51 = 4 * v10;
        do
        {
          v52 = 0;
          v53 = 0;
          v54 = v28;
          do
          {
            v55 = vbicq_s8((int8x16_t)vdivq_f32(v29, *(float32x4_t *)(a3 + v52 + 16)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v52 + 16)));
            v56 = (int8x16_t *)(a5 + v52);
            *v56 = vbicq_s8((int8x16_t)vdivq_f32(v29, *(float32x4_t *)(a3 + v52)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v52)));
            v56[1] = v55;
            v53 += 8;
            v52 += 32;
          }
          while (v53 <= v12);
          if ((int)v53 < a7)
          {
            v57 = (v12 & 0xFFFFFFF8) + 8;
            if (v43 + v44 * v41 - (v45 + v46 * v41) < 0x20)
              goto LABEL_65;
            v58 = 4 * ((v12 & 0xFFFFFFF8) + 8);
            v59 = v48;
            do
            {
              v60 = vbicq_s8((int8x16_t)vdivq_f32(v49, *(float32x4_t *)(a3 + v58 + 16)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v58 + 16)));
              v61 = (int8x16_t *)(a5 + v58);
              *v61 = vbicq_s8((int8x16_t)vdivq_f32(v49, *(float32x4_t *)(a3 + v58)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v58)));
              v61[1] = v60;
              v58 += 32;
              v59 -= 8;
            }
            while (v59);
            v57 = v48 + v30;
            if (v47)
            {
LABEL_65:
              do
              {
                v62 = *(float *)(a3 + 4 * v57);
                if (v62 == 0.0)
                  v63 = 0.0;
                else
                  v63 = *(float *)v9.i32 / v62;
                *(float *)(a5 + 4 * v57++) = v63;
              }
              while (v57 < a7);
            }
          }
          v28 = v54 - 1;
          ++v41;
          a5 += v50;
          a3 += v51;
        }
        while (v54);
      }
      else
      {
        do
        {
          v33 = 0;
          v34 = 0;
          v35 = v28;
          do
          {
            v36 = vbicq_s8((int8x16_t)vdivq_f32(v29, *(float32x4_t *)(a3 + v33 + 16)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v33 + 16)));
            v37 = (int8x16_t *)(a5 + v33);
            *v37 = vbicq_s8((int8x16_t)vdivq_f32(v29, *(float32x4_t *)(a3 + v33)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v33)));
            v37[1] = v36;
            v34 += 8;
            v33 += 32;
          }
          while (v34 <= v12);
          if ((int)v34 < a7)
          {
            v38 = (v12 & 0xFFFFFFF8) + 8;
            do
            {
              v39 = *(float *)(a3 + 4 * v38);
              if (v39 == 0.0)
                v40 = 0.0;
              else
                v40 = *(float *)v9.i32 / v39;
              *(float *)(a5 + 4 * v38++) = v40;
            }
            while (v38 < a7);
          }
          --v28;
          a5 += 4 * v11;
          a3 += 4 * v10;
        }
        while (v35);
      }
    }
    else if (a7 >= 1)
    {
      v13 = (float *)(a5 + 12);
      v14 = (float *)(a3 + 12);
      do
      {
        v15 = *(v14 - 3);
        if (v15 == 0.0)
          v16 = 0.0;
        else
          v16 = *(float *)v9.i32 / v15;
        *(v13 - 3) = v16;
        if (a7 != 1)
        {
          v17 = *(v14 - 2);
          v18 = v17 == 0.0 ? 0.0 : *(float *)v9.i32 / v17;
          *(v13 - 2) = v18;
          if (a7 != 2)
          {
            v19 = *(v14 - 1);
            v20 = v19 == 0.0 ? 0.0 : *(float *)v9.i32 / v19;
            *(v13 - 1) = v20;
            if (a7 != 3)
            {
              v21 = *v14 == 0.0 ? 0.0 : *(float *)v9.i32 / *v14;
              *v13 = v21;
              if (a7 != 4)
              {
                v22 = v14[1];
                v23 = v22 == 0.0 ? 0.0 : *(float *)v9.i32 / v22;
                v13[1] = v23;
                if (a7 != 5)
                {
                  v24 = v14[2];
                  v25 = v24 == 0.0 ? 0.0 : *(float *)v9.i32 / v24;
                  v13[2] = v25;
                  if (a7 != 6)
                  {
                    v26 = v14[3];
                    if (v26 == 0.0)
                      v27 = 0.0;
                    else
                      v27 = *(float *)v9.i32 / v26;
                    v13[3] = v27;
                  }
                }
              }
            }
          }
        }
        v13 += v11;
        v14 += v10;
        --a8;
      }
      while (a8);
    }
  }
}

void sub_1001EDD78(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  double *v13;
  double *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  int v20;
  float64x2_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  int8x16_t v28;
  int8x16_t *v29;
  unint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  float64x2_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  int8x16_t v47;
  int8x16_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int8x16_t v52;
  int8x16_t *v53;
  double v54;
  double v55;

  if (a8)
  {
    v9 = *(uint64_t *)a9;
    v10 = a4 >> 3;
    v11 = a6 >> 3;
    v12 = (a7 - 4);
    if (a7 >= 4)
    {
      v20 = a8 - 1;
      v21 = (float64x2_t)vdupq_lane_s64(v9, 0);
      v22 = (v12 & 0xFFFFFFFC) + 4;
      if ((v22 | 1) <= a7)
        v23 = a7;
      else
        v23 = v22 | 1;
      v24 = v23 - v22;
      if ((unint64_t)(v23 - v22) >= 4)
      {
        v33 = 0;
        v34 = 8 * ((v12 & 0xFFFFFFFC) + 4);
        v35 = v34 + a5;
        v36 = a6 & 0xFFFFFFFFFFFFFFF8;
        v37 = v34 + a3;
        v38 = a4 & 0xFFFFFFFFFFFFFFF8;
        v39 = v23 & 3;
        v40 = v24 - v39;
        v41 = (float64x2_t)vdupq_lane_s64(v9, 0);
        v42 = 8 * v11;
        v43 = 8 * v10;
        do
        {
          v44 = 0;
          v45 = 0;
          v46 = v20;
          do
          {
            v47 = vbicq_s8((int8x16_t)vdivq_f64(v21, *(float64x2_t *)(a3 + v44 + 16)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v44 + 16)));
            v48 = (int8x16_t *)(a5 + v44);
            *v48 = vbicq_s8((int8x16_t)vdivq_f64(v21, *(float64x2_t *)(a3 + v44)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v44)));
            v48[1] = v47;
            v45 += 4;
            v44 += 32;
          }
          while (v45 <= v12);
          if ((int)v45 < a7)
          {
            v49 = (v12 & 0xFFFFFFFC) + 4;
            if (v35 + v36 * v33 - (v37 + v38 * v33) < 0x20)
              goto LABEL_49;
            v50 = 8 * ((v12 & 0xFFFFFFFC) + 4);
            v51 = v40;
            do
            {
              v52 = vbicq_s8((int8x16_t)vdivq_f64(v41, *(float64x2_t *)(a3 + v50 + 16)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v50 + 16)));
              v53 = (int8x16_t *)(a5 + v50);
              *v53 = vbicq_s8((int8x16_t)vdivq_f64(v41, *(float64x2_t *)(a3 + v50)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v50)));
              v53[1] = v52;
              v50 += 32;
              v51 -= 4;
            }
            while (v51);
            v49 = v40 + v22;
            if (v39)
            {
LABEL_49:
              do
              {
                v54 = *(double *)(a3 + 8 * v49);
                if (v54 == 0.0)
                  v55 = 0.0;
                else
                  v55 = *(double *)&v9 / v54;
                *(double *)(a5 + 8 * v49++) = v55;
              }
              while (v49 < a7);
            }
          }
          v20 = v46 - 1;
          ++v33;
          a5 += v42;
          a3 += v43;
        }
        while (v46);
      }
      else
      {
        do
        {
          v25 = 0;
          v26 = 0;
          v27 = v20;
          do
          {
            v28 = vbicq_s8((int8x16_t)vdivq_f64(v21, *(float64x2_t *)(a3 + v25 + 16)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v25 + 16)));
            v29 = (int8x16_t *)(a5 + v25);
            *v29 = vbicq_s8((int8x16_t)vdivq_f64(v21, *(float64x2_t *)(a3 + v25)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v25)));
            v29[1] = v28;
            v26 += 4;
            v25 += 32;
          }
          while (v26 <= v12);
          if ((int)v26 < a7)
          {
            v30 = (v12 & 0xFFFFFFFC) + 4;
            do
            {
              v31 = *(double *)(a3 + 8 * v30);
              if (v31 == 0.0)
                v32 = 0.0;
              else
                v32 = *(double *)&v9 / v31;
              *(double *)(a5 + 8 * v30++) = v32;
            }
            while (v30 < a7);
          }
          --v20;
          a5 += 8 * v11;
          a3 += 8 * v10;
        }
        while (v27);
      }
    }
    else if (a7 >= 1)
    {
      v13 = (double *)(a3 + 16);
      v14 = (double *)(a5 + 16);
      do
      {
        v15 = *(v13 - 2);
        if (v15 == 0.0)
          v16 = 0.0;
        else
          v16 = *(double *)&v9 / v15;
        *(v14 - 2) = v16;
        if (a7 != 1)
        {
          v17 = *(v13 - 1);
          v18 = v17 == 0.0 ? 0.0 : *(double *)&v9 / v17;
          *(v14 - 1) = v18;
          if (a7 != 2)
          {
            if (*v13 == 0.0)
              v19 = 0.0;
            else
              v19 = *(double *)&v9 / *v13;
            *v14 = v19;
          }
        }
        v13 += v10;
        v14 += v11;
        --a8;
      }
      while (a8);
    }
  }
}

void sub_1001EE010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double a9, double a10, double a11, double a12, __n128 a13, __n128 a14, __n128 a15, double *a16)
{
  float32x4_t v20;
  int v21;
  int v22;
  int8x16_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint8x8_t v26;
  uint8x8_t v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  int8x16_t v30;
  int8x16_t v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  uint16x8_t v34;
  uint16x8_t v35;
  float32x4_t v36;
  float32x4_t v37;
  int v38;
  __int128 v39;
  int v40;
  __int128 v41;
  int v42;
  __int128 v43;
  int v44;
  __int128 v45;
  uint64_t v46;
  float v47;
  float v48;
  int v49;
  float v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  float v54;
  float v55;
  int v56;
  float v57;
  int v58;
  uint64_t v59;
  float v60;
  int v61;
  int8x16_t v62;
  int8x16_t v63;
  __int128 v64;
  int8x16_t v65;
  int v66;
  int v67;
  int v68;
  int v69;
  float32x4_t v70;
  float32x4_t v71;
  float32x4_t v72;
  float32x4_t v73;
  __n128 v74;
  __n128 v75;
  __n128 v76;
  __n128 v77;
  __n128 v78;
  __n128 v79;
  __n128 v80;
  __n128 v81;
  __n128 v82;
  __n128 v83;
  __n128 v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  int v99;
  int v100;
  int v101;

  if (a8)
  {
    a13.n128_f32[0] = *a16;
    a14.n128_f32[0] = a16[1];
    a15.n128_f32[0] = a16[2];
    v20 = (float32x4_t)vdupq_lane_s32((int32x2_t)a15.n128_u64[0], 0);
    v21 = a7 - 8;
    v22 = a7 - 4;
    v23 = (int8x16_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
    while (a7 < 8)
    {
      v24 = 0;
      if (v22 >= 0)
        goto LABEL_23;
LABEL_33:
      if ((int)v24 < a7)
      {
        v59 = 0;
        do
        {
          v60 = rintf((float)((float)(flt_1003BE9A4[*(unsigned __int8 *)(a3 + v24 + v59) + 128] * a14.n128_f32[0])+ (float)(flt_1003BE9A4[*(unsigned __int8 *)(a1 + v24 + v59) + 128] * a13.n128_f32[0]))+ a15.n128_f32[0]);
          v61 = (uint64_t)v60 & ~((int)(uint64_t)v60 >> 31);
          if (v61 >= 255)
            LOBYTE(v61) = -1;
          *(_BYTE *)(a5 + v24 + v59++) = v61;
        }
        while ((int)v24 + (int)v59 < a7);
      }
      a1 += a2;
      a3 += a4;
      a5 += a6;
      if (!--a8)
        return;
    }
    v25 = 0;
    do
    {
      v26 = *(uint8x8_t *)(a1 + v25);
      v27 = *(uint8x8_t *)(a3 + v25);
      v28 = atomic_load((unsigned __int8 *)qword_10048AA00);
      if ((v28 & 1) == 0)
      {
        v98 = a8;
        v94 = a6;
        v86 = a2;
        v90 = a4;
        v78 = a14;
        v82 = a13;
        v70 = v20;
        v74 = a15;
        v66 = v21;
        v38 = __cxa_guard_acquire(qword_10048AA00);
        *(_QWORD *)&v39 = 0x8000000080000000;
        *((_QWORD *)&v39 + 1) = 0x8000000080000000;
        v23 = (int8x16_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
        v21 = v66;
        v20 = v70;
        a15 = v74;
        a14 = v78;
        a13 = v82;
        a2 = v86;
        a4 = v90;
        a6 = v94;
        a8 = v98;
        if (v38)
        {
          xmmword_10048A9F0 = v39;
          __cxa_guard_release(qword_10048AA00);
          v23 = (int8x16_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
          v21 = v66;
          v20 = v70;
          a15 = v74;
          a14 = v78;
          a13 = v82;
          a2 = v86;
          a4 = v90;
          a6 = v94;
          a8 = v98;
        }
      }
      v29 = atomic_load((unsigned __int8 *)qword_10048AA20);
      if ((v29 & 1) == 0)
      {
        v99 = a8;
        v95 = a6;
        v87 = a2;
        v91 = a4;
        v79 = a14;
        v83 = a13;
        v71 = v20;
        v75 = a15;
        v67 = v21;
        v40 = __cxa_guard_acquire(qword_10048AA20);
        *(_QWORD *)&v41 = 0x3F0000003F000000;
        *((_QWORD *)&v41 + 1) = 0x3F0000003F000000;
        v23 = (int8x16_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
        v21 = v67;
        v20 = v71;
        a15 = v75;
        a14 = v79;
        a13 = v83;
        a2 = v87;
        a4 = v91;
        a6 = v95;
        a8 = v99;
        if (v40)
        {
          xmmword_10048AA10 = v41;
          __cxa_guard_release(qword_10048AA20);
          v23 = (int8x16_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
          v21 = v67;
          v20 = v71;
          a15 = v75;
          a14 = v79;
          a13 = v83;
          a2 = v87;
          a4 = v91;
          a6 = v95;
          a8 = v99;
        }
      }
      v30 = (int8x16_t)xmmword_10048AA10;
      v31 = v23[159];
      v32 = atomic_load((unsigned __int8 *)qword_10048AA00);
      if ((v32 & 1) == 0)
      {
        v100 = a8;
        v96 = a6;
        v88 = a2;
        v92 = a4;
        v80 = a14;
        v84 = a13;
        v72 = v20;
        v76 = a15;
        v68 = v21;
        v62 = v23[159];
        v64 = xmmword_10048AA10;
        v42 = __cxa_guard_acquire(qword_10048AA00);
        v31 = v62;
        v30 = (int8x16_t)v64;
        *(_QWORD *)&v43 = 0x8000000080000000;
        *((_QWORD *)&v43 + 1) = 0x8000000080000000;
        v23 = (int8x16_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
        v21 = v68;
        v20 = v72;
        a15 = v76;
        a14 = v80;
        a13 = v84;
        a2 = v88;
        a4 = v92;
        a6 = v96;
        a8 = v100;
        if (v42)
        {
          xmmword_10048A9F0 = v43;
          __cxa_guard_release(qword_10048AA00);
          v31 = v62;
          v30 = (int8x16_t)v64;
          v23 = (int8x16_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
          v21 = v68;
          v20 = v72;
          a15 = v76;
          a14 = v80;
          a13 = v84;
          a2 = v88;
          a4 = v92;
          a6 = v96;
          a8 = v100;
        }
      }
      v33 = atomic_load((unsigned __int8 *)qword_10048AA20);
      if ((v33 & 1) == 0)
      {
        v101 = a8;
        v97 = a6;
        v89 = a2;
        v93 = a4;
        v81 = a14;
        v85 = a13;
        v73 = v20;
        v77 = a15;
        v69 = v21;
        v63 = v31;
        v65 = v30;
        v44 = __cxa_guard_acquire(qword_10048AA20);
        v31 = v63;
        v30 = v65;
        *(_QWORD *)&v45 = 0x3F0000003F000000;
        *((_QWORD *)&v45 + 1) = 0x3F0000003F000000;
        v23 = (int8x16_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
        v21 = v69;
        v20 = v73;
        a15 = v77;
        a14 = v81;
        a13 = v85;
        a2 = v89;
        a4 = v93;
        a6 = v97;
        a8 = v101;
        if (v44)
        {
          xmmword_10048AA10 = v45;
          __cxa_guard_release(qword_10048AA20);
          v31 = v63;
          v30 = v65;
          v23 = (int8x16_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
          v21 = v69;
          v20 = v73;
          a15 = v77;
          a14 = v81;
          a13 = v85;
          a2 = v89;
          a4 = v93;
          a6 = v97;
          a8 = v101;
        }
      }
      v34 = vmovl_u8(v26);
      v35 = vmovl_u8(v27);
      v36 = vaddq_f32(v20, vaddq_f32(vmulq_n_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v34.i8)), a13.n128_f32[0]), vmulq_n_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v35.i8)), a14.n128_f32[0])));
      v37 = vaddq_f32(v20, vaddq_f32(vmulq_n_f32(vcvtq_f32_u32(vmovl_high_u16(v34)), a13.n128_f32[0]), vmulq_n_f32(vcvtq_f32_u32(vmovl_high_u16(v35)), a14.n128_f32[0])));
      *(int8x8_t *)(a5 + v25) = vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vaddq_f32(v36, (float32x4_t)vorrq_s8(vandq_s8(v31, (int8x16_t)v36), v30)))), vcvtq_s32_f32(vaddq_f32(v37, (float32x4_t)vorrq_s8(vandq_s8(v23[159], (int8x16_t)v37), (int8x16_t)xmmword_10048AA10)))));
      v25 += 8;
    }
    while (v21 >= (int)v25);
    v24 = v25;
    if ((int)v25 > v22)
      goto LABEL_33;
    do
    {
LABEL_23:
      v46 = v24 & 0xFFFFFFFE | 1;
      v47 = (float)((float)(flt_1003BE9A4[*(unsigned __int8 *)(a3 + v46) + 128] * a14.n128_f32[0])
                  + (float)(flt_1003BE9A4[*(unsigned __int8 *)(a1 + v46) + 128] * a13.n128_f32[0]))
          + a15.n128_f32[0];
      v48 = rintf((float)((float)(flt_1003BE9A4[*(unsigned __int8 *)(a3 + v24) + 128] * a14.n128_f32[0])+ (float)(flt_1003BE9A4[*(unsigned __int8 *)(a1 + v24) + 128] * a13.n128_f32[0]))+ a15.n128_f32[0]);
      v49 = (uint64_t)v48 & ~((int)(uint64_t)v48 >> 31);
      if (v49 >= 255)
        LOBYTE(v49) = -1;
      *(_BYTE *)(a5 + v24) = v49;
      v50 = rintf(v47);
      v51 = (uint64_t)v50 & ~((int)(uint64_t)v50 >> 31);
      if (v51 >= 255)
        LOBYTE(v51) = -1;
      *(_BYTE *)(a5 + v46) = v51;
      v52 = v24 | 2;
      v53 = v24 & 0xFFFFFFFC | 3;
      v54 = (float)((float)(flt_1003BE9A4[*(unsigned __int8 *)(a3 + v53) + 128] * a14.n128_f32[0])
                  + (float)(flt_1003BE9A4[*(unsigned __int8 *)(a1 + v53) + 128] * a13.n128_f32[0]))
          + a15.n128_f32[0];
      v55 = rintf((float)((float)(flt_1003BE9A4[*(unsigned __int8 *)(a3 + v52) + 128] * a14.n128_f32[0])+ (float)(flt_1003BE9A4[*(unsigned __int8 *)(a1 + v52) + 128] * a13.n128_f32[0]))+ a15.n128_f32[0]);
      v56 = (uint64_t)v55 & ~((int)(uint64_t)v55 >> 31);
      if (v56 >= 255)
        LOBYTE(v56) = -1;
      *(_BYTE *)(a5 + v52) = v56;
      v57 = rintf(v54);
      v58 = (uint64_t)v57 & ~((int)(uint64_t)v57 >> 31);
      if (v58 >= 255)
        LOBYTE(v58) = -1;
      *(_BYTE *)(a5 + v53) = v58;
      v24 += 4;
    }
    while (v22 >= (int)v24);
    v24 = v24;
    goto LABEL_33;
  }
}

uint64_t sub_1001EE54C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double a9, __n128 a10, double a11, double a12, double a13, __n128 a14, uint64_t a15)
{
  int v15;
  uint64_t v20;
  float v21;
  float v22;
  float v23;
  uint64_t v24;
  uint64_t v25;
  int8x8_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int8x8_t v30;
  float v31;
  int8x8_t v32;
  int8x8_t v33;
  int32x2_t v34;
  _BYTE *v35;
  int8x8_t v36;
  int8x8_t v37;
  uint64_t v38;
  uint64_t v39;
  char v42;

  if (a8)
  {
    v15 = a8;
    v20 = result;
    a10.n128_u64[0] = *(_QWORD *)(a15 + 8);
    v21 = *(double *)a15;
    v22 = a10.n128_f64[0];
    v23 = *(double *)(a15 + 16);
    v24 = a7 - 4;
    v25 = a7;
    do
    {
      a10.n128_f32[0] = v22;
      *(float *)&a11 = v23;
      result = sub_1001F3050(v21, a10, *(int32x2_t *)&a11, a12, a13, a14, (uint64_t)&v42, v20, a3, a5, a7);
      if ((int)result <= (int)v24)
      {
        v27 = 0;
        v28 = v20 + (int)result;
        v29 = a3 + (int)result;
        do
        {
          v26.i8[0] = *(_BYTE *)(v28 + v27);
          a10.n128_u8[0] = *(_BYTE *)(v29 + v27);
          v30 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)a10.n128_u64[0])).u64[0];
          *(float *)v30.i32 = v22 * (float)v30.i32[0];
          v31 = *(float *)v30.i32 + (float)((float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v26)).i32[0] * v21);
          v30.i8[0] = *(_BYTE *)(v28 + v27 + 1);
          v32 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v30)).u64[0];
          LOBYTE(a11) = *(_BYTE *)(v29 + v27 + 1);
          v33 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)&a11)).u64[0];
          *(float *)v33.i32 = v22 * (float)v33.i32[0];
          *(float *)v32.i32 = rintf((float)(*(float *)v33.i32 + (float)((float)v32.i32[0] * v21)) + v23);
          v34.i32[0] = (uint64_t)rintf(v31 + v23);
          v34.i32[1] = (uint64_t)*(float *)v32.i32;
          v35 = (_BYTE *)(a5 + (int)result + v27);
          v36 = (int8x8_t)vmin_s32(vmax_s32(v34, (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
          v35[1] = v36.i8[4];
          *v35 = v36.i8[0];
          v36.i8[0] = *(_BYTE *)(v28 + v27 + 2);
          v32.i8[0] = *(_BYTE *)(v29 + v27 + 2);
          v37 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v32)).u64[0];
          *(float *)v37.i32 = v22 * (float)v37.i32[0];
          *(float *)v36.i32 = (float)(*(float *)v37.i32
                                    + (float)((float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v36)).i32[0] * v21))
                            + v23;
          v37.i8[0] = *(_BYTE *)(v28 + v27 + 3);
          a10 = (__n128)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v37));
          a10.n128_f32[0] = (float)a10.n128_i32[0];
          v33.i8[0] = *(_BYTE *)(v29 + v27 + 3);
          *(_QWORD *)&a11 = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v33)).u64[0];
          *(float *)&a11 = v22 * (float)SLODWORD(a11);
          v26 = (int8x8_t)vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rintf((float)(*(float *)&a11 + (float)(a10.n128_f32[0] * v21)) + v23), (uint64_t)rintf(*(float *)v36.i32)), (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
          v35[3] = v26.i8[4];
          v35[2] = v26.i8[0];
          v27 += 4;
        }
        while ((int)result + v27 <= v24);
        result = (result + v27);
      }
      if ((int)result < a7)
      {
        v38 = (int)result;
        do
        {
          v26.i8[0] = *(_BYTE *)(v20 + v38);
          v26 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v26)).u64[0];
          a10.n128_u8[0] = *(_BYTE *)(a3 + v38);
          a10 = (__n128)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)a10.n128_u64[0]));
          a10.n128_f32[0] = v22 * (float)a10.n128_i32[0];
          *(float *)v26.i32 = rintf((float)(a10.n128_f32[0] + (float)((float)v26.i32[0] * v21)) + v23);
          v39 = (uint64_t)*(float *)v26.i32;
          if ((int)(uint64_t)*(float *)v26.i32 <= -128)
            LODWORD(v39) = -128;
          if ((int)v39 >= 127)
            LOBYTE(v39) = 127;
          *(_BYTE *)(a5 + v38++) = v39;
        }
        while (v25 != v38);
      }
      v20 += a2;
      a3 += a4;
      a5 += a6;
      --v15;
    }
    while (v15);
  }
  return result;
}

void sub_1001EE7EC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, int a8, double a9, double a10, double a11, __n128 a12, __n128 a13, __n128 a14, uint64_t a15)
{
  uint32x4_t v18;
  uint16x8_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  float32x4_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint16x8_t v47;
  uint16x8_t v48;
  unsigned __int8 v49;
  float32x4_t v50;
  unsigned __int8 v51;
  int v52;
  __int128 v53;
  int v54;
  __int128 v55;
  __int128 v56;
  uint16x8_t v57;
  uint16x8_t v58;
  uint16x8_t v59;
  uint16x8_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  float32x4_t v69;
  float32x4_t v70;
  int v71;
  int v72;
  __n128 v73;
  __n128 v74;
  __n128 v75;
  __n128 v76;
  __n128 v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  int v82;

  if (a8)
  {
    v18.i64[0] = *(_QWORD *)(a15 + 8);
    a12.n128_f32[0] = *(double *)a15;
    a13.n128_f32[0] = *(double *)v18.i64;
    v19.i64[0] = *(_QWORD *)(a15 + 16);
    a14.n128_f32[0] = *(double *)v19.i64;
    v20 = a2 >> 1;
    v21 = a7 - 8;
    v22 = (int)a7 - 4;
    v23 = (int)a7;
    v24 = (float32x4_t)vdupq_lane_s32((int32x2_t)a14.n128_u64[0], 0);
    v25 = 2 * (a6 >> 1);
    v26 = 2 * (a4 >> 1);
    v27 = 2 * v20;
    v28 = a5 + 4;
    do
    {
      if ((int)a7 >= 8)
      {
        v46 = 0;
        LODWORD(v29) = 0;
        do
        {
          v47 = *(uint16x8_t *)(a1 + v46);
          v48 = *(uint16x8_t *)(a3 + v46);
          v49 = atomic_load((unsigned __int8 *)qword_10048AA40);
          if ((v49 & 1) == 0)
          {
            v81 = a8;
            v79 = a7;
            v77 = a12;
            v73 = a14;
            v75 = a13;
            v71 = v21;
            v69 = v24;
            v65 = v26;
            v67 = v25;
            v61 = v28;
            v63 = v27;
            v57 = *(uint16x8_t *)(a1 + v46);
            v59 = *(uint16x8_t *)(a3 + v46);
            v52 = __cxa_guard_acquire(qword_10048AA40);
            v47 = v57;
            v48 = v59;
            *(_QWORD *)&v53 = 0x3F0000003F000000;
            *((_QWORD *)&v53 + 1) = 0x3F0000003F000000;
            v28 = v61;
            v27 = v63;
            v26 = v65;
            v25 = v67;
            v24 = v69;
            v21 = v71;
            a14 = v73;
            a13 = v75;
            a12 = v77;
            a7 = v79;
            a8 = v81;
            if (v52)
            {
              xmmword_10048AA30 = v53;
              __cxa_guard_release(qword_10048AA40);
              v47 = v57;
              v48 = v59;
              v28 = v61;
              v27 = v63;
              v26 = v65;
              v25 = v67;
              v24 = v69;
              v21 = v71;
              a14 = v73;
              a13 = v75;
              a12 = v77;
              a7 = v79;
              a8 = v81;
            }
          }
          v50 = (float32x4_t)xmmword_10048AA30;
          v51 = atomic_load((unsigned __int8 *)qword_10048AA40);
          if ((v51 & 1) == 0)
          {
            v82 = a8;
            v80 = a7;
            v78 = a12;
            v74 = a14;
            v76 = a13;
            v72 = v21;
            v70 = v24;
            v66 = v26;
            v68 = v25;
            v62 = v28;
            v64 = v27;
            v58 = v47;
            v60 = v48;
            v56 = xmmword_10048AA30;
            v54 = __cxa_guard_acquire(qword_10048AA40);
            v50 = (float32x4_t)v56;
            v47 = v58;
            v48 = v60;
            *(_QWORD *)&v55 = 0x3F0000003F000000;
            *((_QWORD *)&v55 + 1) = 0x3F0000003F000000;
            v28 = v62;
            v27 = v64;
            v26 = v66;
            v25 = v68;
            v24 = v70;
            v21 = v72;
            a14 = v74;
            a13 = v76;
            a12 = v78;
            a7 = v80;
            a8 = v82;
            if (v54)
            {
              xmmword_10048AA30 = v55;
              __cxa_guard_release(qword_10048AA40);
              v50 = (float32x4_t)v56;
              v47 = v58;
              v48 = v60;
              v28 = v62;
              v27 = v64;
              v26 = v66;
              v25 = v68;
              v24 = v70;
              v21 = v72;
              a14 = v74;
              a13 = v76;
              a12 = v78;
              a7 = v80;
              a8 = v82;
            }
          }
          v18 = vcvtq_u32_f32(vaddq_f32(vaddq_f32(v24, vaddq_f32(vmulq_n_f32(vcvtq_f32_u32(vmovl_high_u16(v47)), a12.n128_f32[0]), vmulq_n_f32(vcvtq_f32_u32(vmovl_high_u16(v48)), a13.n128_f32[0]))), (float32x4_t)xmmword_10048AA30));
          v19 = vqmovn_high_u32(vqmovn_u32(vcvtq_u32_f32(vaddq_f32(vaddq_f32(v24, vaddq_f32(vmulq_n_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v47.i8)), a12.n128_f32[0]), vmulq_n_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v48.i8)), a13.n128_f32[0]))), v50))), v18);
          *(uint16x8_t *)(a5 + v46) = v19;
          LODWORD(v29) = v29 + 8;
          v46 += 16;
        }
        while (v21 >= (int)v29);
      }
      else
      {
        LODWORD(v29) = 0;
      }
      if ((int)v29 <= (int)v22)
      {
        v30 = (int)v29;
        v31 = 2 * (int)v29;
        v32 = v28;
        v33 = a3;
        v34 = a1;
        v29 = (int)v29;
        do
        {
          v19.i16[0] = *(_WORD *)(v34 + 2 * v30);
          v18.i16[0] = *(_WORD *)(v33 + 2 * v30);
          *(float *)v18.i32 = a13.n128_f32[0] * (float)v18.u32[0];
          *(float *)v19.i32 = rintf((float)(*(float *)v18.i32 + (float)((float)v19.u32[0] * a12.n128_f32[0]))+ a14.n128_f32[0]);
          v35 = (uint64_t)*(float *)v19.i32 & ~((int)(uint64_t)*(float *)v19.i32 >> 31);
          if (v35 >= 0xFFFF)
            LOWORD(v35) = -1;
          v36 = v34 + v31;
          v19.i16[0] = *(_WORD *)(v34 + v31 + 2);
          v37 = v33 + v31;
          v18.i16[0] = *(_WORD *)(v33 + v31 + 2);
          *(float *)v18.i32 = a13.n128_f32[0] * (float)v18.u32[0];
          *(float *)v19.i32 = rintf((float)(*(float *)v18.i32 + (float)((float)v19.u32[0] * a12.n128_f32[0]))+ a14.n128_f32[0]);
          v38 = (uint64_t)*(float *)v19.i32 & ~((int)(uint64_t)*(float *)v19.i32 >> 31);
          if (v38 >= 0xFFFF)
            LOWORD(v38) = -1;
          v39 = v32 + v31;
          *(_WORD *)(v39 - 4) = v35;
          *(_WORD *)(v39 - 2) = v38;
          v19.i16[0] = *(_WORD *)(v36 + 4);
          v18.i16[0] = *(_WORD *)(v37 + 4);
          *(float *)&v40 = a13.n128_f32[0] * (float)v18.u32[0];
          *(float *)&v41 = rintf((float)(*(float *)&v40 + (float)((float)v19.u32[0] * a12.n128_f32[0])) + a14.n128_f32[0]);
          v42 = (uint64_t)*(float *)&v41 & ~((int)(uint64_t)*(float *)&v41 >> 31);
          LOWORD(v41) = *(_WORD *)(v36 + 6);
          LOWORD(v40) = *(_WORD *)(v37 + 6);
          *(float *)v18.i32 = a13.n128_f32[0] * (float)v40;
          *(float *)v19.i32 = rintf((float)(*(float *)v18.i32 + (float)((float)v41 * a12.n128_f32[0])) + a14.n128_f32[0]);
          if (v42 >= 0xFFFF)
            LOWORD(v42) = -1;
          v43 = (uint64_t)*(float *)v19.i32 & ~((int)(uint64_t)*(float *)v19.i32 >> 31);
          if (v43 >= 0xFFFF)
            LOWORD(v43) = -1;
          *(_WORD *)(v32 + 2 * v30) = v42;
          v29 += 4;
          *(_WORD *)(v39 + 2) = v43;
          v34 += 8;
          v33 += 8;
          v32 += 8;
        }
        while (v29 <= v22);
      }
      if ((int)v29 < (int)a7)
      {
        v44 = (int)v29;
        do
        {
          v19.i16[0] = *(_WORD *)(a1 + 2 * v44);
          v18.i16[0] = *(_WORD *)(a3 + 2 * v44);
          *(float *)v18.i32 = a13.n128_f32[0] * (float)v18.u32[0];
          *(float *)v19.i32 = rintf((float)(*(float *)v18.i32 + (float)((float)v19.u32[0] * a12.n128_f32[0]))+ a14.n128_f32[0]);
          v45 = (uint64_t)*(float *)v19.i32 & ~((int)(uint64_t)*(float *)v19.i32 >> 31);
          if (v45 >= 0xFFFF)
            LOWORD(v45) = -1;
          *(_WORD *)(a5 + 2 * v44++) = v45;
        }
        while (v23 != v44);
      }
      a5 += v25;
      a3 += v26;
      a1 += v27;
      v28 += v25;
      --a8;
    }
    while (a8);
  }
}

uint64_t sub_1001EEBE4(uint64_t result, unint64_t a2, int16x8_t *a3, unint64_t a4, int16x8_t *a5, unint64_t a6, int a7, int a8, __n128 a9, double a10, int32x2_t a11, double a12, __n128 a13, uint64_t a14)
{
  int v14;
  int16x8_t *v16;
  int16x8_t *v18;
  float v19;
  float v20;
  uint64_t v21;
  uint64_t v22;
  float v23;
  __int8 *v24;
  int16x4_t v25;
  uint64_t v26;
  uint64_t v27;
  __int8 *v28;
  int16x8_t *v29;
  int16x8_t *v30;
  int16x4_t v31;
  uint64_t v32;
  __int8 *v33;
  __int8 *v34;
  int16x4_t v35;
  uint64_t v36;
  __int8 *v37;
  int16x4_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;

  if (a8)
  {
    v14 = a8;
    v16 = a5;
    v18 = (int16x8_t *)result;
    v19 = *(double *)a14;
    v20 = *(double *)(a14 + 8);
    a9.n128_u64[0] = *(_QWORD *)(a14 + 16);
    v21 = a7 - 4;
    v22 = a7;
    v44 = 2 * (a4 >> 1);
    v45 = 2 * (a2 >> 1);
    v23 = a9.n128_f64[0];
    v24 = &a5->i8[4];
    v43 = 2 * (a6 >> 1);
    do
    {
      a9.n128_f32[0] = v19;
      *(float *)a11.i32 = v23;
      result = sub_1001F3424(a9, v20, a11, a12, a13, (uint64_t)&v46, v18, a3, v16, a7);
      if ((int)result <= (int)v21)
      {
        v26 = (int)result;
        v27 = 2 * (int)result;
        v28 = v24;
        v29 = a3;
        v30 = v18;
        result = (int)result;
        do
        {
          a9.n128_u16[0] = v30->u16[v26];
          a9.n128_u64[0] = vmovl_s16((int16x4_t)a9.n128_u64[0]).u64[0];
          v25.i16[0] = v29->i16[v26];
          v31 = (int16x4_t)vmovl_s16(v25).u64[0];
          *(float *)v31.i32 = v20 * (float)v31.i32[0];
          a9.n128_f32[0] = rintf((float)(*(float *)v31.i32 + (float)((float)a9.n128_i32[0] * v19)) + v23);
          v32 = (uint64_t)a9.n128_f32[0];
          if ((int)(uint64_t)a9.n128_f32[0] <= -32768)
            LODWORD(v32) = -32768;
          v33 = &v30->i8[v27];
          a9.n128_u16[0] = v30->u16[(unint64_t)v27 / 2 + 1];
          a9.n128_u64[0] = vmovl_s16((int16x4_t)a9.n128_u64[0]).u64[0];
          v34 = &v29->i8[v27];
          v31.i16[0] = v29->i16[(unint64_t)v27 / 2 + 1];
          v35 = (int16x4_t)vmovl_s16(v31).u64[0];
          *(float *)v35.i32 = v20 * (float)v35.i32[0];
          a9.n128_f32[0] = rintf((float)(*(float *)v35.i32 + (float)((float)a9.n128_i32[0] * v19)) + v23);
          v36 = (uint64_t)a9.n128_f32[0];
          if ((int)v32 >= 0x7FFF)
            LOWORD(v32) = 0x7FFF;
          if ((int)v36 <= -32768)
            LODWORD(v36) = -32768;
          if ((int)v36 >= 0x7FFF)
            LOWORD(v36) = 0x7FFF;
          v37 = &v28[v27];
          *((_WORD *)v37 - 2) = v32;
          *((_WORD *)v37 - 1) = v36;
          a9.n128_u16[0] = *((_WORD *)v33 + 2);
          a9.n128_u64[0] = vmovl_s16((int16x4_t)a9.n128_u64[0]).u64[0];
          v35.i16[0] = *((_WORD *)v34 + 2);
          v38 = (int16x4_t)vmovl_s16(v35).u64[0];
          *(float *)v38.i32 = v20 * (float)v38.i32[0];
          a9.n128_f32[0] = rintf((float)(*(float *)v38.i32 + (float)((float)a9.n128_i32[0] * v19)) + v23);
          v39 = (uint64_t)a9.n128_f32[0];
          if ((int)(uint64_t)a9.n128_f32[0] <= -32768)
            LODWORD(v39) = -32768;
          if ((int)v39 >= 0x7FFF)
            LOWORD(v39) = 0x7FFF;
          a9.n128_u16[0] = *((_WORD *)v33 + 3);
          a9 = (__n128)vmovl_s16((int16x4_t)a9.n128_u64[0]);
          v38.i16[0] = *((_WORD *)v34 + 3);
          v25 = (int16x4_t)vmovl_s16(v38).u64[0];
          *(float *)v25.i32 = v20 * (float)v25.i32[0];
          a9.n128_f32[0] = rintf((float)(*(float *)v25.i32 + (float)((float)a9.n128_i32[0] * v19)) + v23);
          v40 = (uint64_t)a9.n128_f32[0];
          if ((int)(uint64_t)a9.n128_f32[0] <= -32768)
            LODWORD(v40) = -32768;
          if ((int)v40 >= 0x7FFF)
            LOWORD(v40) = 0x7FFF;
          *(_WORD *)&v28[2 * v26] = v39;
          result += 4;
          *((_WORD *)v37 + 1) = v40;
          v30 = (int16x8_t *)((char *)v30 + 8);
          v29 = (int16x8_t *)((char *)v29 + 8);
          v28 += 8;
        }
        while (result <= v21);
      }
      if ((int)result < a7)
      {
        v41 = (int)result;
        do
        {
          a9.n128_u16[0] = v18->u16[v41];
          a9 = (__n128)vmovl_s16((int16x4_t)a9.n128_u64[0]);
          v25.i16[0] = a3->i16[v41];
          v25 = (int16x4_t)vmovl_s16(v25).u64[0];
          *(float *)v25.i32 = v20 * (float)v25.i32[0];
          a9.n128_f32[0] = rintf((float)(*(float *)v25.i32 + (float)((float)a9.n128_i32[0] * v19)) + v23);
          v42 = (uint64_t)a9.n128_f32[0];
          if ((int)(uint64_t)a9.n128_f32[0] <= -32768)
            LODWORD(v42) = -32768;
          if ((int)v42 >= 0x7FFF)
            LOWORD(v42) = 0x7FFF;
          v16->i16[v41++] = v42;
        }
        while (v22 != v41);
      }
      v18 = (int16x8_t *)((char *)v18 + v45);
      a3 = (int16x8_t *)((char *)a3 + v44);
      v16 = (int16x8_t *)((char *)v16 + v43);
      v24 += v43;
      --v14;
    }
    while (v14);
  }
  return result;
}

uint64_t sub_1001EEE90(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  double v9;
  double v10;
  unint64_t v11;
  double v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  int *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  double v28;
  _DWORD *v29;
  double v30;
  unint64_t v31;

  if (a8)
  {
    v9 = *a9;
    v10 = a9[1];
    v11 = a2 >> 2;
    v12 = a9[2];
    v13 = a4 >> 2;
    v14 = a6 >> 2;
    v15 = (a7 - 4);
    if (a7 >= 4)
    {
      v22 = 4 * v14;
      v23 = a8 - 1;
      v24 = 4 * v13;
      do
      {
        v25 = 0;
        v26 = 0;
        v27 = v23;
        do
        {
          v28 = rint(v12 + v10 * (double)*(int *)(a3 + v25 + 4) + (double)*(int *)(result + v25 + 4) * v9);
          v29 = (_DWORD *)(a5 + v25);
          *v29 = (uint64_t)rint(v12 + v10 * (double)*(int *)(a3 + v25) + (double)*(int *)(result + v25) * v9);
          v29[1] = (uint64_t)v28;
          v30 = rint(v12 + v10 * (double)*(int *)(a3 + v25 + 12) + (double)*(int *)(result + v25 + 12) * v9);
          v29[2] = (uint64_t)rint(v12 + v10 * (double)*(int *)(a3 + v25 + 8) + (double)*(int *)(result + v25 + 8) * v9);
          v29[3] = (uint64_t)v30;
          v26 += 4;
          v25 += 16;
        }
        while (v26 <= v15);
        v31 = (v15 & 0xFFFFFFFC) + 4;
        if ((int)v26 < a7)
        {
          do
          {
            *(_DWORD *)(a5 + 4 * v31) = (uint64_t)rint(v12+ v10 * (double)*(int *)(a3 + 4 * v31)+ (double)*(int *)(result + 4 * v31) * v9);
            ++v31;
          }
          while (v31 < a7);
        }
        --v23;
        a5 += v22;
        a3 += v24;
        result += 4 * v11;
      }
      while (v27);
    }
    else if (a7 >= 1)
    {
      v16 = 4 * v14;
      v17 = (_DWORD *)(a5 + 8);
      v18 = (int *)(a3 + 8);
      v19 = 4 * v13;
      v20 = (int *)(result + 4);
      v21 = 4 * v11;
      do
      {
        *(v17 - 2) = (uint64_t)rint(v12 + v10 * (double)*(v18 - 2) + (double)*(v20 - 1) * v9);
        if (a7 != 1)
        {
          *(v17 - 1) = (uint64_t)rint(v12 + v10 * (double)*(v18 - 1) + (double)*v20 * v9);
          if (a7 != 2)
            *v17 = (uint64_t)rint(v12 + v10 * (double)*v18 + (double)v20[1] * v9);
        }
        v17 = (_DWORD *)((char *)v17 + v16);
        v18 = (int *)((char *)v18 + v19);
        v20 = (int *)((char *)v20 + v21);
        --a8;
      }
      while (a8);
    }
  }
  return result;
}

unint64_t sub_1001EF0E8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  uint64_t v9;
  double v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  float *v16;
  float *v17;
  float *v18;
  float v19;
  float v20;
  float v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  float64x2_t v29;
  float64x2_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  BOOL v44;
  uint64_t v46;
  uint64_t v47;
  const float *v48;
  const float *v49;
  float *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  float v54;
  float v55;
  unint64_t v56;
  float v57;
  double v58;
  float v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  float32x2_t v64;
  float32x2_t *v65;
  float v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v74;
  float32x2x4_t v75;
  float32x2x4_t v76;
  float32x2x4_t v77;

  v74 = result;
  if (!a8)
    return result;
  v9 = *(uint64_t *)a9;
  v10 = a9[1];
  v11 = a2 >> 2;
  v12 = *((uint64_t *)a9 + 2);
  v13 = a4 >> 2;
  v14 = a6 >> 2;
  v15 = (a7 - 4);
  if (a7 >= 4)
  {
    v22 = 0;
    v23 = a8 - 1;
    v24 = (4 * (a7 - 4)) & 0x3FFFFFFF0;
    v71 = v24 + a5 + 16;
    v25 = a6 & 0xFFFFFFFFFFFFFFFCLL;
    v26 = result;
    v70 = v24 + result + 16;
    v68 = v24 + a3 + 16;
    v27 = (v15 & 0xFFFFFFFC) + 5;
    if (v27 <= a7)
      v27 = a7;
    v28 = 16 * (v15 >> 2) + 16;
    v69 = (v15 >> 2) + 1;
    v72 = v27 - (v15 & 0xFFFFFFFC) - 4;
    v29 = (float64x2_t)vdupq_lane_s64(v9, 0);
    v30 = (float64x2_t)vdupq_lane_s64(v12, 0);
    v67 = v27 & 3;
    v31 = 4 * v11;
    v32 = 4 * v13;
    v33 = 4 * v14;
    v34 = a5 + 8;
    v35 = a5;
    v36 = a3;
    while (1)
    {
      v37 = v23;
      v38 = v25 * v22;
      v39 = (a2 & 0xFFFFFFFFFFFFFFFCLL) * v22;
      v40 = (a4 & 0xFFFFFFFFFFFFFFFCLL) * v22;
      if (v15 >= 4)
      {
        v41 = 0;
        v42 = a5 + v28 + v38;
        v44 = v35 < a3 + v28 + v40 && v36 < v42;
        if ((v26 >= v42 || v35 >= v74 + v28 + v39) && !v44)
        {
          v46 = 0;
          v47 = v69 & 0x7FFFFFFE;
          do
          {
            v48 = (const float *)(v26 + v46);
            v75 = vld4_f32(v48);
            v49 = (const float *)(v36 + v46);
            v76 = vld4_f32(v49);
            v77.val[0] = vcvt_f32_f64(vaddq_f64(v30, vmlaq_f64(vmulq_n_f64(vcvtq_f64_f32(v76.val[0]), v10), v29, vcvtq_f64_f32(v75.val[0]))));
            v77.val[1] = vcvt_f32_f64(vaddq_f64(v30, vmlaq_f64(vmulq_n_f64(vcvtq_f64_f32(v76.val[1]), v10), v29, vcvtq_f64_f32(v75.val[1]))));
            v77.val[2] = vcvt_f32_f64(vaddq_f64(v30, vmlaq_f64(vmulq_n_f64(vcvtq_f64_f32(v76.val[2]), v10), v29, vcvtq_f64_f32(v75.val[2]))));
            v77.val[3] = vcvt_f32_f64(vaddq_f64(v30, vmlaq_f64(vmulq_n_f64(vcvtq_f64_f32(v76.val[3]), v10), v29, vcvtq_f64_f32(v75.val[3]))));
            v50 = (float *)(v35 + v46);
            vst4_f32(v50, v77);
            v46 += 32;
            v47 -= 2;
          }
          while (v47);
          v41 = 4 * (v69 & 0x7FFFFFFE);
          result = v69 & 0x7FFFFFFE;
          if (v69 == result)
            goto LABEL_32;
        }
      }
      else
      {
        v41 = 0;
      }
      v51 = 4 * v41;
      v52 = v34;
      v53 = v36;
      result = v26;
      do
      {
        v54 = *(double *)&v12 + v10 * *(float *)(v53 + v51) + *(float *)(result + v51) * *(double *)&v9;
        v55 = *(double *)&v12 + v10 * *(float *)(v53 + v51 + 4) + *(float *)(result + v51 + 4) * *(double *)&v9;
        v56 = v52 + v51;
        *(float *)(v56 - 8) = v54;
        *(float *)(v56 - 4) = v55;
        v57 = *(double *)&v12 + v10 * *(float *)(v53 + v51 + 8) + *(float *)(result + v51 + 8) * *(double *)&v9;
        v58 = *(double *)&v12 + v10 * *(float *)(v53 + v51 + 12) + *(float *)(result + v51 + 12) * *(double *)&v9;
        *(float *)(v52 + v51) = v57;
        v41 += 4;
        v59 = v58;
        *(float *)(v56 + 4) = v59;
        result += 16;
        v53 += 16;
        v52 += 16;
      }
      while (v41 <= v15);
LABEL_32:
      if ((int)v41 < a7)
      {
        v60 = (v15 & 0xFFFFFFFC) + 4;
        result = v72;
        if (v72 < 4)
          goto LABEL_43;
        v61 = v71 + v38;
        v60 = (v15 & 0xFFFFFFFC) + 4;
        if (v61 - (v70 + v39) < 0x10)
          goto LABEL_43;
        v60 = (v15 & 0xFFFFFFFC) + 4;
        if (v61 - (v68 + v40) < 0x10)
          goto LABEL_43;
        v62 = (4 * (a7 - 4)) & 0x3FFFFFFF0;
        v63 = v72 - v67;
        do
        {
          v64 = vcvt_f32_f64(vaddq_f64(v30, vmlaq_f64(vmulq_n_f64(vcvtq_f64_f32(*(float32x2_t *)(v36 + v62 + 24)), v10), v29, vcvtq_f64_f32(*(float32x2_t *)(v26 + v62 + 24)))));
          v65 = (float32x2_t *)(v35 + v62);
          v65[2] = vcvt_f32_f64(vaddq_f64(v30, vmlaq_f64(vmulq_n_f64(vcvtq_f64_f32(*(float32x2_t *)(v36 + v62 + 16)), v10), v29, vcvtq_f64_f32(*(float32x2_t *)(v26 + v62 + 16)))));
          v65[3] = v64;
          v62 += 16;
          v63 -= 4;
        }
        while (v63);
        v60 = (v15 & 0xFFFFFFFC) + 4 + v72 - v67;
        if (v67)
        {
LABEL_43:
          do
          {
            v66 = *(double *)&v12 + v10 * *(float *)(v36 + 4 * v60) + *(float *)(v26 + 4 * v60) * *(double *)&v9;
            *(float *)(v35 + 4 * v60++) = v66;
          }
          while (v60 < a7);
        }
      }
      v26 += v31;
      v36 += v32;
      v35 += v33;
      v23 = v37 - 1;
      ++v22;
      v34 += v33;
      if (!v37)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v16 = (float *)(a5 + 8);
    v17 = (float *)(a3 + 8);
    v18 = (float *)(result + 4);
    do
    {
      v19 = *(double *)&v12 + v10 * *(v17 - 2) + *(v18 - 1) * *(double *)&v9;
      *(v16 - 2) = v19;
      if (a7 != 1)
      {
        v20 = *(double *)&v12 + v10 * *(v17 - 1) + *v18 * *(double *)&v9;
        *(v16 - 1) = v20;
        if (a7 != 2)
        {
          v21 = *(double *)&v12 + v10 * *v17 + v18[1] * *(double *)&v9;
          *v16 = v21;
        }
      }
      v16 += v14;
      v17 += v13;
      v18 += v11;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1001EF588(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  uint64_t v9;
  double v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  double *v15;
  double *v16;
  double *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  float64x2_t v25;
  float64x2_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  int v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  BOOL v40;
  uint64_t v42;
  uint64_t v43;
  const double *v44;
  const double *v45;
  double *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  double v50;
  unint64_t v51;
  double v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  float64x2_t v57;
  float64x2_t *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v66;
  float64x2x4_t v67;
  float64x2x4_t v68;
  float64x2x4_t v69;

  v66 = result;
  if (!a8)
    return result;
  v9 = *(uint64_t *)a9;
  v10 = a9[1];
  v11 = a2 >> 3;
  v12 = *((uint64_t *)a9 + 2);
  result = a4 >> 3;
  v13 = a6 >> 3;
  v14 = (a7 - 4);
  if (a7 >= 4)
  {
    v18 = 0;
    v19 = a8 - 1;
    v20 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    v63 = v20 + a5 + 32;
    v21 = a6 & 0xFFFFFFFFFFFFFFF8;
    v22 = v66;
    v62 = v20 + v66 + 32;
    v60 = v20 + a3 + 32;
    v23 = (v14 & 0xFFFFFFFC) + 5;
    if (v23 <= a7)
      v23 = a7;
    v24 = 32 * (v14 >> 2) + 32;
    v61 = (v14 >> 2) + 1;
    v64 = v23 - (v14 & 0xFFFFFFFC) - 4;
    v25 = (float64x2_t)vdupq_lane_s64(v9, 0);
    v26 = (float64x2_t)vdupq_lane_s64(v12, 0);
    v59 = v23 & 3;
    v27 = 8 * v11;
    v28 = 8 * result;
    v29 = 8 * v13;
    v30 = a5 + 16;
    v31 = a5;
    v32 = a3;
    while (1)
    {
      v33 = v19;
      v34 = v21 * v18;
      v35 = (a2 & 0xFFFFFFFFFFFFFFF8) * v18;
      v36 = (a4 & 0xFFFFFFFFFFFFFFF8) * v18;
      if (v14 >= 4)
      {
        v37 = 0;
        v38 = a5 + v24 + v34;
        v40 = v31 < a3 + v24 + v36 && v32 < v38;
        if ((v22 >= v38 || v31 >= v66 + v24 + v35) && !v40)
        {
          v42 = 0;
          v43 = v61 & 0x7FFFFFFE;
          do
          {
            v44 = (const double *)(v22 + v42);
            v67 = vld4q_f64(v44);
            v45 = (const double *)(v32 + v42);
            v68 = vld4q_f64(v45);
            v69.val[0] = vaddq_f64(v26, vmlaq_f64(vmulq_n_f64(v68.val[0], v10), v25, v67.val[0]));
            v69.val[1] = vaddq_f64(v26, vmlaq_f64(vmulq_n_f64(v68.val[1], v10), v25, v67.val[1]));
            v69.val[2] = vaddq_f64(v26, vmlaq_f64(vmulq_n_f64(v68.val[2], v10), v25, v67.val[2]));
            v69.val[3] = vaddq_f64(v26, vmlaq_f64(vmulq_n_f64(v68.val[3], v10), v25, v67.val[3]));
            v46 = (double *)(v31 + v42);
            vst4q_f64(v46, v69);
            v42 += 64;
            v43 -= 2;
          }
          while (v43);
          v37 = 4 * (v61 & 0x7FFFFFFE);
          result = v61 & 0x7FFFFFFE;
          if (v61 == result)
            goto LABEL_32;
        }
      }
      else
      {
        v37 = 0;
      }
      v47 = 8 * v37;
      v48 = v30;
      v49 = v32;
      result = v22;
      do
      {
        v50 = *(double *)&v12 + v10 * *(double *)(v49 + v47 + 8) + *(double *)(result + v47 + 8) * *(double *)&v9;
        v51 = v48 + v47;
        *(double *)(v51 - 16) = *(double *)&v12
                              + v10 * *(double *)(v49 + v47)
                              + *(double *)(result + v47) * *(double *)&v9;
        *(double *)(v51 - 8) = v50;
        v52 = v10 * *(double *)(v49 + v47 + 24) + *(double *)(result + v47 + 24) * *(double *)&v9;
        *(double *)(v48 + v47) = *(double *)&v12
                               + v10 * *(double *)(v49 + v47 + 16)
                               + *(double *)(result + v47 + 16) * *(double *)&v9;
        v37 += 4;
        *(double *)(v51 + 8) = *(double *)&v12 + v52;
        result += 32;
        v49 += 32;
        v48 += 32;
      }
      while (v37 <= v14);
LABEL_32:
      if ((int)v37 < a7)
      {
        v53 = (v14 & 0xFFFFFFFC) + 4;
        result = v64;
        if (v64 < 6)
          goto LABEL_43;
        v54 = v63 + v34;
        v53 = (v14 & 0xFFFFFFFC) + 4;
        if (v54 - (v62 + v35) < 0x20)
          goto LABEL_43;
        v53 = (v14 & 0xFFFFFFFC) + 4;
        if (v54 - (v60 + v36) < 0x20)
          goto LABEL_43;
        v55 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        v56 = v64 - v59;
        do
        {
          v57 = vaddq_f64(v26, vmlaq_f64(vmulq_n_f64(*(float64x2_t *)(v32 + v55 + 48), v10), v25, *(float64x2_t *)(v22 + v55 + 48)));
          v58 = (float64x2_t *)(v31 + v55);
          v58[2] = vaddq_f64(v26, vmlaq_f64(vmulq_n_f64(*(float64x2_t *)(v32 + v55 + 32), v10), v25, *(float64x2_t *)(v22 + v55 + 32)));
          v58[3] = v57;
          v55 += 32;
          v56 -= 4;
        }
        while (v56);
        v53 = (v14 & 0xFFFFFFFC) + 4 + v64 - v59;
        if (v59)
        {
LABEL_43:
          do
          {
            *(double *)(v31 + 8 * v53) = *(double *)&v12
                                       + v10 * *(double *)(v32 + 8 * v53)
                                       + *(double *)(v22 + 8 * v53) * *(double *)&v9;
            ++v53;
          }
          while (v53 < a7);
        }
      }
      v22 += v27;
      v32 += v28;
      v31 += v29;
      v19 = v33 - 1;
      ++v18;
      v30 += v29;
      if (!v33)
        return result;
    }
  }
  if (a7 >= 1)
  {
    v15 = (double *)(a5 + 16);
    v16 = (double *)(a3 + 16);
    v17 = (double *)(v66 + 8);
    do
    {
      *(v15 - 2) = *(double *)&v12 + v10 * *(v16 - 2) + *(v17 - 1) * *(double *)&v9;
      if (a7 != 1)
      {
        *(v15 - 1) = *(double *)&v12 + v10 * *(v16 - 1) + *v17 * *(double *)&v9;
        if (a7 != 2)
          *v15 = *(double *)&v12 + v10 * *v16 + v17[1] * *(double *)&v9;
      }
      v15 += v13;
      v16 += result;
      v17 += v11;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1001EF980(float a1, double a2, double a3, double a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  int v10;
  uint64_t result;
  int v12;
  float32x4_t *v13;
  uint8x8_t v14;
  uint8x8_t v15;
  unsigned __int8 v16;
  float32x4_t v17;
  unsigned __int8 v18;
  uint16x8_t v19;
  uint16x8_t v20;
  int v21;
  __int128 v22;
  int v23;
  int v24;
  __int128 v25;
  int v26;
  uint64_t v27;
  float32x4_t *v28;
  uint8x8_t v29;
  uint8x8_t v30;
  unsigned __int8 v31;
  float32x4_t v32;
  unsigned __int8 v33;
  uint16x8_t v34;
  uint16x8_t v35;
  int v36;
  __int128 v37;
  int v38;
  __int128 v39;
  float32x4_t v40;
  float32x4_t v41;
  __n128 v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint8x8_t v52;
  uint8x8_t v53;
  uint8x8_t v54;
  uint8x8_t v55;
  uint8x8_t v56;
  uint8x8_t v57;
  uint8x8_t v58;
  uint8x8_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  a5.n128_f32[0] = a1;
  if (a1 == 1.0)
  {
    v10 = a10 - 8;
    if (a10 >= 8)
    {
      result = 0;
      v13 = (float32x4_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
      do
      {
        v14 = *(uint8x8_t *)(a7 + result);
        v15 = *(uint8x8_t *)(a8 + result);
        v16 = atomic_load((unsigned __int8 *)qword_10048AA40);
        if ((v16 & 1) == 0)
        {
          v44 = result;
          v60 = a8;
          v64 = a9;
          v68 = a7;
          v48 = v10;
          v52 = *(uint8x8_t *)(a7 + result);
          v56 = *(uint8x8_t *)(a8 + result);
          v21 = __cxa_guard_acquire(qword_10048AA40);
          *(_QWORD *)&v22 = 0x3F0000003F000000;
          *((_QWORD *)&v22 + 1) = 0x3F0000003F000000;
          v14 = v52;
          v15 = v56;
          v13 = (float32x4_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
          v10 = v48;
          a9 = v64;
          a7 = v68;
          a8 = v60;
          v23 = v21;
          result = v44;
          if (v23)
          {
            xmmword_10048AA30 = v22;
            __cxa_guard_release(qword_10048AA40);
            v14 = v52;
            v15 = v56;
            v13 = (float32x4_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
            v10 = v48;
            result = v44;
            a9 = v64;
            a7 = v68;
            a8 = v60;
          }
        }
        v17 = v13[163];
        v18 = atomic_load((unsigned __int8 *)qword_10048AA40);
        if ((v18 & 1) == 0)
        {
          v45 = result;
          v61 = a8;
          v65 = a9;
          v69 = a7;
          v49 = v10;
          v53 = v14;
          v57 = v15;
          v41 = v13[163];
          v24 = __cxa_guard_acquire(qword_10048AA40);
          v17 = v41;
          *(_QWORD *)&v25 = 0x3F0000003F000000;
          *((_QWORD *)&v25 + 1) = 0x3F0000003F000000;
          v14 = v53;
          v15 = v57;
          v13 = (float32x4_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
          v10 = v49;
          a9 = v65;
          a7 = v69;
          a8 = v61;
          v26 = v24;
          result = v45;
          if (v26)
          {
            xmmword_10048AA30 = v25;
            __cxa_guard_release(qword_10048AA40);
            v17 = v41;
            v14 = v53;
            v15 = v57;
            v13 = (float32x4_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
            v10 = v49;
            result = v45;
            a9 = v65;
            a7 = v69;
            a8 = v61;
          }
        }
        v19 = vmovl_u8(v14);
        v20 = vmovl_u8(v15);
        *(uint8x8_t *)(a9 + result) = vqmovn_u16(vqmovn_high_u32(vqmovn_u32(vcvtq_u32_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v19.i8)), vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v20.i8))), v17))), vcvtq_u32_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32(vmovl_high_u16(v19)), vcvtq_f32_u32(vmovl_high_u16(v20))), v13[163]))));
        result += 8;
      }
      while (v10 >= (int)result);
    }
    else
    {
      return 0;
    }
  }
  else
  {
    v12 = a10 - 8;
    if (a10 >= 8)
    {
      v27 = 0;
      v28 = (float32x4_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
      do
      {
        v29 = *(uint8x8_t *)(a7 + v27);
        v30 = *(uint8x8_t *)(a8 + v27);
        v31 = atomic_load((unsigned __int8 *)qword_10048AA40);
        if ((v31 & 1) == 0)
        {
          v62 = a8;
          v66 = a9;
          v70 = a7;
          v46 = v12;
          v50 = v27;
          v54 = *(uint8x8_t *)(a7 + v27);
          v58 = *(uint8x8_t *)(a8 + v27);
          v42 = a5;
          v36 = __cxa_guard_acquire(qword_10048AA40);
          *(_QWORD *)&v37 = 0x3F0000003F000000;
          *((_QWORD *)&v37 + 1) = 0x3F0000003F000000;
          a5 = v42;
          v29 = v54;
          v30 = v58;
          v28 = (float32x4_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
          v27 = v50;
          v12 = v46;
          a9 = v66;
          a7 = v70;
          a8 = v62;
          if (v36)
          {
            xmmword_10048AA30 = v37;
            __cxa_guard_release(qword_10048AA40);
            a5 = v42;
            v29 = v54;
            v30 = v58;
            v28 = (float32x4_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
            v27 = v50;
            v12 = v46;
            a9 = v66;
            a7 = v70;
            a8 = v62;
          }
        }
        v32 = v28[163];
        v33 = atomic_load((unsigned __int8 *)qword_10048AA40);
        if ((v33 & 1) == 0)
        {
          v63 = a8;
          v67 = a9;
          v71 = a7;
          v47 = v12;
          v51 = v27;
          v55 = v29;
          v59 = v30;
          v40 = v28[163];
          v43 = a5;
          v38 = __cxa_guard_acquire(qword_10048AA40);
          v32 = v40;
          a5 = v43;
          *(_QWORD *)&v39 = 0x3F0000003F000000;
          *((_QWORD *)&v39 + 1) = 0x3F0000003F000000;
          v29 = v55;
          v30 = v59;
          v28 = (float32x4_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
          v27 = v51;
          v12 = v47;
          a9 = v67;
          a7 = v71;
          a8 = v63;
          if (v38)
          {
            xmmword_10048AA30 = v39;
            __cxa_guard_release(qword_10048AA40);
            v32 = v40;
            a5 = v43;
            v29 = v55;
            v30 = v59;
            v28 = (float32x4_t *)&OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel;
            v27 = v51;
            v12 = v47;
            a9 = v67;
            a7 = v71;
            a8 = v63;
          }
        }
        v34 = vmovl_u8(v29);
        v35 = vmovl_u8(v30);
        *(uint8x8_t *)(a9 + v27) = vqmovn_u16(vqmovn_high_u32(vqmovn_u32(vcvtq_u32_f32(vaddq_f32(vmulq_n_f32(vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v34.i8)), vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v35.i8))), a5.n128_f32[0]), v32))), vcvtq_u32_f32(vaddq_f32(vmulq_n_f32(vmulq_f32(vcvtq_f32_u32(vmovl_high_u16(v34)), vcvtq_f32_u32(vmovl_high_u16(v35))), a5.n128_f32[0]), v28[163]))));
        v27 += 8;
      }
      while (v12 >= (int)v27);
      return v27;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

