void sub_100005ADC(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[HUViewControllerRegistry sharedInstance](HUViewControllerRegistry, "sharedInstance"));
  objc_msgSend(v1, "registerViewControllerClass:forIdentifier:", objc_opt_class(HUServiceDetailsViewController), HUViewControllerClassIdentifierServiceLikeItemDetails);

}

void sub_100005B90(id a1)
{
  void *v1;
  id v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[HUTipsManager sharedManager](HUTipsManager, "sharedManager"));
  objc_msgSend(v1, "warmUp");

  v2 = (id)objc_claimAutoreleasedReturnValue(+[HUTipsManager sharedManager](HUTipsManager, "sharedManager"));
  objc_msgSend(v2, "donateAppLaunchEvent");

}

void sub_100005C44(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_reloadStateWithInvitation:home:", 0, v3);

}

void sub_100005E54(uint64_t a1)
{
  void *v2;
  id v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "itemManager"));
  v3 = objc_msgSend(v2, "reloadAndUpdateAllItemsFromSenderSelector:", *(_QWORD *)(a1 + 40));

}

id sub_100006010(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "latestResults"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("HOResultMainTabIdentifierKey")));
  v5 = objc_msgSend(v4, "isEqualToString:", *(_QWORD *)(a1 + 32));

  return v5;
}

void sub_100006074(uint64_t a1)
{
  void *v2;
  id v3;
  _QWORD v4[4];
  id v5[2];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[HMFScheduler mainScheduler](HMFScheduler, "mainScheduler"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100005E54;
  v4[3] = &unk_1000B5D38;
  objc_copyWeak(v5, (id *)(a1 + 32));
  v5[1] = *(id *)(a1 + 40);
  v3 = objc_msgSend(v2, "performBlock:", v4);

  objc_destroyWeak(v5);
}

void sub_10000611C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100006130(id a1)
{
  id v1;
  void *v2;
  dispatch_queue_global_t global_queue;
  NSObject *v4;

  v1 = objc_alloc_init((Class)NAFuture);
  v2 = (void *)qword_1000D2820;
  qword_1000D2820 = (uint64_t)v1;

  global_queue = dispatch_get_global_queue(2, 0);
  v4 = objc_claimAutoreleasedReturnValue(global_queue);
  dispatch_async(v4, &stru_1000B7CE0);

}

void sub_1000062EC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1000065AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000066A4(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "itemManager"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "home"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "hf_characteristicValueManager"));
  v5 = (uint64_t)objc_msgSend(v4, "_debug_totalNumberOfIssuedBatchReadRequests");

  if (v5 >= 2)
  {
    v6 = HFLogForCategory(56);
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1000787CC(v5, v7, v8, v9, v10, v11, v12, v13);

  }
}

void sub_100006958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL sub_100006AAC(id a1, id a2)
{
  id v2;
  uint64_t v3;
  char isKindOfClass;

  v2 = a2;
  v3 = objc_opt_class(UIApplicationShortcutItem);
  isKindOfClass = objc_opt_isKindOfClass(v2, v3);

  return isKindOfClass & 1;
}

void sub_100006AF4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NAScheduler mainThreadScheduler](NAScheduler, "mainThreadScheduler"));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000066A4;
  v9[3] = &unk_1000B60F0;
  objc_copyWeak(&v10, (id *)(a1 + 32));
  v8 = objc_msgSend(v7, "afterDelay:performBlock:", v9, 0.5);

  objc_destroyWeak(&v10);
}

void sub_100006BBC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100006BD0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  __int128 v6;
  id v7;
  _QWORD v8[4];
  id v9;
  __int128 v10;
  __int128 v11;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "hf_allVisibleServices"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "accessories"));

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10000B0CC;
  v8[3] = &unk_1000B63C0;
  v9 = v4;
  v6 = *(_OWORD *)(a1 + 48);
  v10 = *(_OWORD *)(a1 + 32);
  v11 = v6;
  v7 = v4;
  objc_msgSend(v5, "na_each:", v8);

}

id sub_100006DE0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[4];
  id v9;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dispatcher"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "homeFuture"));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100009E0C;
  v8[3] = &unk_1000B6008;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "addCompletionBlock:", v8));
  objc_destroyWeak(&v9);

  return v6;
}

void sub_100006EA4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000073D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t start(int a1, char **a2)
{
  void *v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  objc_class *v9;
  NSString *v10;
  NSString *v11;
  uint64_t v12;
  uint8_t v14[16];
  uint8_t buf[16];

  v4 = objc_autoreleasePoolPush();
  v5 = HFLogForCategory(8);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Home application launched", buf, 2u);
  }

  v7 = HFLogForCategory(49);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_signpost_enabled(v8))
  {
    *(_WORD *)v14 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_INTERVAL_BEGIN, 0x1F4uLL, "HomeAppLaunch", "App started launching from main", v14, 2u);
  }

  v9 = (objc_class *)objc_opt_class(HOAppDelegate);
  v10 = NSStringFromClass(v9);
  v11 = (NSString *)objc_claimAutoreleasedReturnValue(v10);
  v12 = UIApplicationMain(a1, a2, 0, v11);

  objc_autoreleasePoolPop(v4);
  return v12;
}

void sub_100007860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  _Block_object_dispose(&a18, 8);
  _Block_object_dispose(&a22, 8);
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v26 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_100007BA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100007E18(id a1, HMHome *a2)
{
  HMHome *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD v10[7];
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[4];
  _QWORD v24[4];

  v2 = a2;
  v19 = 0;
  v20 = &v19;
  v21 = 0x2020000000;
  v22 = 0;
  v15 = 0;
  v16 = &v15;
  v17 = 0x2020000000;
  v18 = 0;
  v11 = 0;
  v12 = &v11;
  v13 = 0x2020000000;
  v14 = 0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(-[HMHome accessories](v2, "accessories"));
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100009000;
  v10[3] = &unk_1000B6430;
  v10[4] = &v11;
  v10[5] = &v15;
  v10[6] = &v19;
  objc_msgSend(v3, "na_each:", v10);

  v23[0] = HFAnalyticsResumeSetupNonConfiguredAccessoryCountKey;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v20[3]));
  v24[0] = v4;
  v23[1] = HFAnalyticsResumeSetupNonConfiguredBridgeCountKey;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v16[3]));
  v24[1] = v5;
  v23[2] = HFAnalyticsResumeSetupNonConfiguredBridgedCountKey;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v12[3]));
  v24[2] = v6;
  v23[3] = HFAnalyticsDataHomeUUIDKey;
  v7 = (void *)objc_claimAutoreleasedReturnValue(-[HMHome uniqueIdentifier](v2, "uniqueIdentifier"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "UUIDString"));
  v24[3] = v8;
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v24, v23, 4));

  +[HFAnalytics sendEvent:withData:](HFAnalytics, "sendEvent:withData:", 30, v9);
  _Block_object_dispose(&v11, 8);
  _Block_object_dispose(&v15, 8);
  _Block_object_dispose(&v19, 8);

}

void sub_100008034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va2;

  va_start(va2, a8);
  va_start(va1, a8);
  va_start(va, a8);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v14 = va_arg(va2, _QWORD);
  v16 = va_arg(va2, _QWORD);
  v17 = va_arg(va2, _QWORD);
  v18 = va_arg(va2, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va2, 8);
  _Unwind_Resume(a1);
}

void sub_100008070(uint64_t a1)
{
  void *v2;
  id v3;
  _QWORD v4[4];
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[HMFScheduler mainScheduler](HMFScheduler, "mainScheduler"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10000E0F0;
  v4[3] = &unk_1000B5A50;
  v5 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "performWithQualityOfService:block:", 17, v4);

}

void sub_10000895C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_10000898C(uint64_t a1, void *a2)
{
  unsigned int v3;
  void *v4;
  uint64_t v5;
  id v6;

  v6 = a2;
  v3 = objc_msgSend(*(id *)(a1 + 32), "containsObject:", v6);
  v4 = v6;
  if (v3)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    if (objc_msgSend(v6, "hf_isOnForContextType:", 2))
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
    if (objc_msgSend(v6, "hf_isLegacyService"))
      v5 = *(_QWORD *)(a1 + 56);
    else
      v5 = *(_QWORD *)(a1 + 64);
    ++*(_QWORD *)(*(_QWORD *)(v5 + 8) + 24);
    v4 = v6;
  }

}

void sub_100008A2C(id a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *i;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  uint8_t v13[16];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSMapTable strongToStrongObjectsMapTable](NSMapTable, "strongToStrongObjectsMapTable"));
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = objc_msgSend(&off_1000BF3C8, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v15;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v4)
          objc_enumerationMutation(&off_1000BF3C8);
        v6 = *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
        v7 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage systemImageNamed:](UIImage, "systemImageNamed:", v6));
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "_imageThatSuppressesAccessibilityHairlineThickening"));

        objc_msgSend(v1, "setObject:forKey:", v8, v6);
      }
      v3 = objc_msgSend(&off_1000BF3C8, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v3);
  }
  v9 = (void *)qword_1000D2818;
  qword_1000D2818 = (uint64_t)v1;
  v10 = v1;

  v11 = HFLogForCategory(70);
  v12 = objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "HOMainTabBarController: Done preloading tab bar icons.", v13, 2u);
  }

  objc_msgSend((id)qword_1000D2820, "finishWithNoResult");
}

void sub_100009000(_QWORD *a1, void *a2)
{
  void *v3;
  id v4;

  v4 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "pendingConfigurationIdentifier"));
  if (objc_msgSend(v3, "length"))
  {
    if (objc_msgSend(v4, "isBridged"))
      ++*(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24);
    if (objc_msgSend(v4, "hf_isBridge"))
      ++*(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24);
    ++*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24);
  }

}

void sub_10000909C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  UIImage *v8;
  void *v9;
  id v10;
  NSData *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  _QWORD v16[2];
  _QWORD v17[2];

  v16[0] = CFSTR("HOHomeScreenQuickActionActionSetIdentifierKey");
  v16[1] = CFSTR("HOHomeScreenQuickActionHomeIdentifierKey");
  v2 = *(_QWORD *)(a1 + 40);
  v17[0] = *(_QWORD *)(a1 + 32);
  v17[1] = v2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v17, v16, 2));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "latestResults"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", HFResultDisplayIconDescriptorKey));

  v6 = objc_opt_class(HFImageIconDescriptor);
  if ((objc_opt_isKindOfClass(v5, v6) & 1) == 0)
    NSLog(CFSTR("All scene icon descriptors should be images. This scene's icon descriptor is: %@"), v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "identifier"));
  v8 = (UIImage *)objc_claimAutoreleasedReturnValue(+[UIImage _systemImageNamed:](UIImage, "_systemImageNamed:", v7));

  if (!v8)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "identifier"));
    NSLog(CFSTR("Could not find icon image for descriptor with identifier %@!"), v9);

  }
  v10 = objc_alloc((Class)SBSApplicationShortcutCustomImageIcon);
  v11 = UIImagePNGRepresentation(v8);
  v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  v13 = objc_msgSend(v10, "initWithImageData:dataType:isTemplate:", v12, 0, 1);

  v14 = objc_msgSend(objc_alloc((Class)UIApplicationShortcutIcon), "initWithSBSApplicationShortcutIcon:", v13);
  v15 = objc_msgSend(objc_alloc((Class)UIApplicationShortcutItem), "initWithType:localizedTitle:localizedSubtitle:icon:userInfo:", CFSTR("HOHomeScreenQuickActionExecuteSceneType"), *(_QWORD *)(a1 + 56), 0, v14, v3);
  objc_msgSend(*(id *)(a1 + 64), "finishWithResult:", v15);

}

void sub_100009DD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  id *v31;

  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100009E0C(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  id v11;
  const __CFString *v12;
  void *v13;
  int v14;
  id v15;
  __int16 v16;
  const __CFString *v17;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[HOOnboardingRootNavigationController onboardingStatesForHome:](HOOnboardingRootNavigationController, "onboardingStatesForHome:", v3));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "pendingHomeIDsFromInvitations"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[HOOnboardingRootNavigationController onboardingStatesForHome:pendingHomeIDsFromInvitations:](HOOnboardingRootNavigationController, "onboardingStatesForHome:pendingHomeIDsFromInvitations:", v3, v6));

  v8 = HFLogForCategory(9);
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    v10 = objc_msgSend(v7, "count");
    v11 = objc_msgSend(v7, "count");
    v12 = CFSTR("will not");
    if (!v11)
      v12 = CFSTR("will");
    v14 = 134218242;
    v15 = v10;
    v16 = 2112;
    v17 = v12;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Remaining App Onboarding states = %lu, %@ start feature onboarding", (uint8_t *)&v14, 0x16u);
  }

  if (!objc_msgSend(v7, "count"))
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    objc_msgSend(v13, "appOnboardingWillFinishForStateController:", WeakRetained);

  }
}

void sub_10000A1D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10000A5A8(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;

  v3 = a2;
  v4 = objc_opt_class(HFActionSetItem);
  v5 = v3;
  v6 = v5;
  if (v5)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0)
      v7 = v6;
    else
      v7 = 0;
    v8 = v7;
    if (!v8)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"));
      objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", v10, CFSTR("NSObject+NAAdditions.h"), 54, CFSTR("Expected class of %@ but was %@"), v4, objc_opt_class(v6));

    }
  }
  else
  {
    v8 = 0;
  }

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_generateShortcutItemForActionSetItem:", v8));
  return v11;
}

void sub_10000B0CC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  __objc2_prot *v5;
  id v6;
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;
  uint64_t *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char v17;

  v3 = a2;
  v14 = 0;
  v15 = &v14;
  v16 = 0x2020000000;
  v17 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "services"));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10000898C;
  v9[3] = &unk_1000B6398;
  v10 = *(id *)(a1 + 32);
  v11 = &v14;
  v12 = *(_OWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 56);
  objc_msgSend(v4, "na_each:", v9);

  if (!*((_BYTE *)v15 + 24))
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
  if (objc_msgSend(v3, "hf_isCamera"))
  {
    v5 = &OBJC_PROTOCOL___HFFavoritable;
    v6 = v3;
    if (objc_msgSend(v6, "conformsToProtocol:", v5))
      v7 = v6;
    else
      v7 = 0;
    v8 = v7;

    if (objc_msgSend(v8, "hf_effectiveIsFavorite"))
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);

  }
  NSLog(&stru_1000BBDF8.isa);

  _Block_object_dispose(&v14, 8);
}

void sub_10000B230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10000B24C(uint64_t a1)
{
  id v2;
  __CFString *v3;
  void *v4;
  NSSet *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  _QWORD v14[5];
  _QWORD v15[5];

  v2 = objc_alloc((Class)NSMutableDictionary);
  v14[0] = CFSTR("HOResultTabClassKey");
  v15[0] = objc_opt_class(HODiscoverWebViewController);
  v14[1] = CFSTR("HOResultTabTitleKey");
  v3 = sub_10000C100(CFSTR("HOTabDiscoverTitle"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v15[1] = v4;
  v15[2] = CFSTR("star.fill");
  v14[2] = HFResultDisplayIconNamesKey;
  v14[3] = CFSTR("HOResultMainTabIdentifierKey");
  v15[3] = HFHomeAppTabIdentifierDiscover;
  v14[4] = HFResultDependentHomeKitClassesKey;
  v5 = +[NSSet setWithObject:](NSSet, "setWithObject:", objc_opt_class(HMHome));
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v15[4] = v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v15, v14, 5));
  v8 = objc_msgSend(v2, "initWithDictionary:", v7);

  v9 = *(_QWORD *)(a1 + 32);
  if (v9
    && (objc_msgSend(v8, "setObject:forKeyedSubscript:", v9, HFResultStoreLocaleDictionaryArgumentsKey),
        *(_QWORD *)(a1 + 32))
    && (objc_msgSend(*(id *)(a1 + 40), "hf_shouldBlockCurrentUserFromHome") & 1) == 0)
  {
    v10 = (uint64_t)objc_msgSend(*(id *)(a1 + 40), "hf_currentUserIsRestrictedGuest");
  }
  else
  {
    v10 = 1;
  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v10));
  objc_msgSend(v8, "setObject:forKeyedSubscript:", v11, HFResultHiddenKey);

  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v8));
  return v12;
}

id sub_10000B438(uint64_t a1)
{
  id WeakRetained;
  NSSet *v3;
  void *v4;
  _QWORD *v5;
  _QWORD *v6;
  __CFString *v7;
  uint64_t v8;
  uint64_t v9;
  NSSet *v10;
  void *v11;
  _QWORD *v12;
  _QWORD *v13;
  __CFString *v14;
  uint64_t v15;
  NSSet *v16;
  void *v17;
  void *v18;
  NSSet *v19;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[5];
  _QWORD v24[5];
  _QWORD v25[5];
  _QWORD v26[5];
  _QWORD v27[2];
  _QWORD v28[2];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (objc_msgSend(*(id *)(a1 + 32), "hf_shouldBlockCurrentUserFromHome"))
  {
    v27[0] = HFResultDependentHomeKitClassesKey;
    v3 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", objc_opt_class(HMHome), 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    v27[1] = HFResultHiddenKey;
    v28[0] = v4;
    v28[1] = &__kCFBooleanTrue;
    v5 = v28;
    v6 = v27;
LABEL_9:
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v5, v6, 2));
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v11));
    goto LABEL_10;
  }
  if (objc_msgSend(WeakRetained, "_shouldShowTriggerListForHome:", *(_QWORD *)(a1 + 32)))
  {
    v25[0] = CFSTR("HOResultTabClassKey");
    v26[0] = objc_opt_class(HUTriggerListViewController);
    v25[1] = CFSTR("HOResultTabTitleKey");
    v7 = sub_10000C100(CFSTR("HOTabAutomationTitle"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(v7);
    v26[1] = v4;
    v26[2] = CFSTR("deskclock.fill");
    v25[2] = HFResultDisplayIconNamesKey;
    v25[3] = HFResultDependentHomeKitClassesKey;
    v8 = objc_opt_class(HMHome);
    v9 = objc_opt_class(HMTrigger);
    v10 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v8, v9, objc_opt_class(HMResidentDevice), 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    v25[4] = CFSTR("HOResultMainTabIdentifierKey");
    v26[3] = v11;
    v26[4] = HFHomeAppTabIdentifierTriggers;
    v12 = v26;
    v13 = v25;
  }
  else
  {
    if (!objc_msgSend(WeakRetained, "_shouldShowTriggerAboutPageForHome:", *(_QWORD *)(a1 + 32)))
    {
      v21[0] = HFResultDependentHomeKitClassesKey;
      v19 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", objc_opt_class(HMHome), 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue(v19);
      v21[1] = HFResultHiddenKey;
      v22[0] = v4;
      v22[1] = &__kCFBooleanTrue;
      v5 = v22;
      v6 = v21;
      goto LABEL_9;
    }
    v23[0] = CFSTR("HOResultTabClassKey");
    v24[0] = objc_opt_class(HUAboutResidentDeviceViewController);
    v23[1] = CFSTR("HOResultTabTitleKey");
    v14 = sub_10000C100(CFSTR("HOTabAutomationTitle"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(v14);
    v24[1] = v4;
    v24[2] = CFSTR("deskclock.fill");
    v23[2] = HFResultDisplayIconNamesKey;
    v23[3] = HFResultDependentHomeKitClassesKey;
    v15 = objc_opt_class(HMTrigger);
    v16 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v15, objc_opt_class(HMResidentDevice), 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue(v16);
    v23[4] = CFSTR("HOResultMainTabIdentifierKey");
    v24[3] = v11;
    v24[4] = HFHomeAppTabIdentifierTriggers;
    v12 = v24;
    v13 = v23;
  }
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v12, v13, 5));
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v17));

LABEL_10:
  return v18;
}

NAFuture *__cdecl sub_10000B7D4(id a1)
{
  __CFString *v1;
  void *v2;
  NSSet *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[6];
  _QWORD v9[6];

  v8[0] = CFSTR("HOResultTabClassKey");
  v9[0] = objc_opt_class(HUDashboardViewController);
  v8[1] = CFSTR("HOResultTabTitleKey");
  v1 = sub_10000C100(CFSTR("HOTabHomeTitle"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v9[1] = v2;
  v9[2] = CFSTR("house.fill");
  v8[2] = HFResultDisplayIconNamesKey;
  v8[3] = CFSTR("HOResultNavigationBarClassKey");
  v9[3] = objc_opt_class(HUDashboardNavigationBar);
  v9[4] = HFHomeAppTabIdentifierHome;
  v8[4] = CFSTR("HOResultMainTabIdentifierKey");
  v8[5] = HFResultDependentHomeKitClassesKey;
  v3 = +[NSSet setWithObject:](NSSet, "setWithObject:", objc_opt_class(HMHome));
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v9[5] = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v9, v8, 6));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v5));

  return (NAFuture *)v6;
}

void sub_10000BA1C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  __CFString *v9;
  __CFString *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  __CFString *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  id v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint8_t buf[4];
  id v32;

  if (a2)
    v3 = a2;
  else
    v3 = &__NSArray0__struct;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "na_filter:", &stru_1000B5DA0));
  v5 = objc_msgSend(v4, "mutableCopy");

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "itemManager"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "home"));

  if (v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v9 = CFSTR("HOHomeScreenQuickActionCreateSceneTitle");
    v10 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("HOHomeScreenQuickActionCreateSceneTitle"), CFSTR("_"), CFSTR("HOLocalizable")));

    if (objc_msgSend(CFSTR("_"), "isEqualToString:", v10))
    {
      v27 = 0u;
      v28 = 0u;
      v29 = 0u;
      v30 = 0u;
      v11 = sub_1000151B4();
      v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
      v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v27, buf, 16);
      if (v13)
      {
        v14 = v13;
        v25 = a1;
        v26 = v5;
        v15 = *(_QWORD *)v28;
LABEL_8:
        v16 = 0;
        while (1)
        {
          if (*(_QWORD *)v28 != v15)
            objc_enumerationMutation(v12);
          v17 = *(_QWORD *)(*((_QWORD *)&v27 + 1) + 8 * v16);
          v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
          v19 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "localizedStringForKey:value:table:", CFSTR("HOHomeScreenQuickActionCreateSceneTitle"), CFSTR("HOHomeScreenQuickActionCreateSceneTitle"), v17));

          if (!-[__CFString isEqualToString:](v19, "isEqualToString:", CFSTR("HOHomeScreenQuickActionCreateSceneTitle")))break;
          if (v14 == (id)++v16)
          {
            v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v27, buf, 16);
            if (v14)
              goto LABEL_8;
            v19 = CFSTR("_");
            break;
          }
        }
        a1 = v25;
        v5 = v26;
      }
      else
      {
        v19 = CFSTR("_");
      }

      v10 = v19;
    }
    if (objc_msgSend(CFSTR("_"), "isEqualToString:", v10))
      NSLog(CFSTR("Sensitive key '%@' not found!"), CFSTR("HOHomeScreenQuickActionCreateSceneTitle"));
    else
      v9 = v10;

    v20 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplicationShortcutIcon iconWithType:](UIApplicationShortcutIcon, "iconWithType:", 3));
    v21 = objc_msgSend(objc_alloc((Class)UIApplicationShortcutItem), "initWithType:localizedTitle:localizedSubtitle:icon:userInfo:", CFSTR("HOHomeScreenQuickActionCreateSceneType"), v9, 0, v20, 0);
    objc_msgSend(v5, "addObject:", v21);

  }
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "application"));
  objc_msgSend(v22, "setShortcutItems:", v5);

  v23 = HFLogForCategory(0);
  v24 = objc_claimAutoreleasedReturnValue(v23);
  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v32 = v5;
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "Updated home screen quick actions: %@", buf, 0xCu);
  }

}

__CFString *sub_10000BD30(void *a1)
{
  __CFString *v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  unsigned int v14;
  __CFString *v15;
  __CFString *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, CFSTR("_"), CFSTR("HOLocalizable")));

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v3))
  {
    v4 = v1;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = sub_100010E84();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
LABEL_4:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v4, v4, v11));

        if (!-[__CFString isEqualToString:](v13, "isEqualToString:", v4))
          break;

        if (v8 == (id)++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
          if (v8)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      v13 = CFSTR("_");
    }

    v3 = v13;
  }
  v14 = objc_msgSend(CFSTR("_"), "isEqualToString:", v3);
  v15 = v3;
  if (v14)
  {
    NSLog(CFSTR("Sensitive key '%@' not found!"), v1);
    v15 = v1;
  }
  v16 = v15;

  return v16;
}

__CFString *sub_10000BF18(void *a1)
{
  __CFString *v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  unsigned int v14;
  __CFString *v15;
  __CFString *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, CFSTR("_"), CFSTR("HOLocalizable")));

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v3))
  {
    v4 = v1;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = sub_100014438();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
LABEL_4:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v4, v4, v11));

        if (!-[__CFString isEqualToString:](v13, "isEqualToString:", v4))
          break;

        if (v8 == (id)++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
          if (v8)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      v13 = CFSTR("_");
    }

    v3 = v13;
  }
  v14 = objc_msgSend(CFSTR("_"), "isEqualToString:", v3);
  v15 = v3;
  if (v14)
  {
    NSLog(CFSTR("Sensitive key '%@' not found!"), v1);
    v15 = v1;
  }
  v16 = v15;

  return v16;
}

__CFString *sub_10000C100(void *a1)
{
  __CFString *v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  unsigned int v14;
  __CFString *v15;
  __CFString *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, CFSTR("_"), CFSTR("HOLocalizable")));

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v3))
  {
    v4 = v1;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = sub_100016A38();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
LABEL_4:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v4, v4, v11));

        if (!-[__CFString isEqualToString:](v13, "isEqualToString:", v4))
          break;

        if (v8 == (id)++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
          if (v8)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      v13 = CFSTR("_");
    }

    v3 = v13;
  }
  v14 = objc_msgSend(CFSTR("_"), "isEqualToString:", v3);
  v15 = v3;
  if (v14)
  {
    NSLog(CFSTR("Sensitive key '%@' not found!"), v1);
    v15 = v1;
  }
  v16 = v15;

  return v16;
}

__CFString *sub_10000C2E8(void *a1)
{
  __CFString *v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  unsigned int v14;
  __CFString *v15;
  __CFString *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, CFSTR("_"), CFSTR("HOLocalizable")));

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v3))
  {
    v4 = v1;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = sub_10001BE8C();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
LABEL_4:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v4, v4, v11));

        if (!-[__CFString isEqualToString:](v13, "isEqualToString:", v4))
          break;

        if (v8 == (id)++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
          if (v8)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      v13 = CFSTR("_");
    }

    v3 = v13;
  }
  v14 = objc_msgSend(CFSTR("_"), "isEqualToString:", v3);
  v15 = v3;
  if (v14)
  {
    NSLog(CFSTR("Sensitive key '%@' not found!"), v1);
    v15 = v1;
  }
  v16 = v15;

  return v16;
}

__CFString *sub_10000C4D0(void *a1)
{
  __CFString *v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  unsigned int v14;
  __CFString *v15;
  __CFString *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, CFSTR("_"), CFSTR("HOLocalizable")));

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v3))
  {
    v4 = v1;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = sub_10001CA2C();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
LABEL_4:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v4, v4, v11));

        if (!-[__CFString isEqualToString:](v13, "isEqualToString:", v4))
          break;

        if (v8 == (id)++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
          if (v8)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      v13 = CFSTR("_");
    }

    v3 = v13;
  }
  v14 = objc_msgSend(CFSTR("_"), "isEqualToString:", v3);
  v15 = v3;
  if (v14)
  {
    NSLog(CFSTR("Sensitive key '%@' not found!"), v1);
    v15 = v1;
  }
  v16 = v15;

  return v16;
}

__CFString *sub_10000C6B8(void *a1)
{
  __CFString *v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  unsigned int v14;
  __CFString *v15;
  __CFString *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, CFSTR("_"), CFSTR("HOLocalizable")));

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v3))
  {
    v4 = v1;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = sub_10002BDA0();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
LABEL_4:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v4, v4, v11));

        if (!-[__CFString isEqualToString:](v13, "isEqualToString:", v4))
          break;

        if (v8 == (id)++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
          if (v8)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      v13 = CFSTR("_");
    }

    v3 = v13;
  }
  v14 = objc_msgSend(CFSTR("_"), "isEqualToString:", v3);
  v15 = v3;
  if (v14)
  {
    NSLog(CFSTR("Sensitive key '%@' not found!"), v1);
    v15 = v1;
  }
  v16 = v15;

  return v16;
}

__CFString *sub_10000C8A0(void *a1)
{
  __CFString *v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  unsigned int v14;
  __CFString *v15;
  __CFString *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, CFSTR("_"), CFSTR("HOLocalizable")));

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v3))
  {
    v4 = v1;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = sub_100035768();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
LABEL_4:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v4, v4, v11));

        if (!-[__CFString isEqualToString:](v13, "isEqualToString:", v4))
          break;

        if (v8 == (id)++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
          if (v8)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      v13 = CFSTR("_");
    }

    v3 = v13;
  }
  v14 = objc_msgSend(CFSTR("_"), "isEqualToString:", v3);
  v15 = v3;
  if (v14)
  {
    NSLog(CFSTR("Sensitive key '%@' not found!"), v1);
    v15 = v1;
  }
  v16 = v15;

  return v16;
}

__CFString *sub_10000CA88(void *a1)
{
  __CFString *v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  unsigned int v14;
  __CFString *v15;
  __CFString *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, CFSTR("_"), CFSTR("HOLocalizable")));

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v3))
  {
    v4 = v1;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = sub_100037040();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
LABEL_4:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v4, v4, v11));

        if (!-[__CFString isEqualToString:](v13, "isEqualToString:", v4))
          break;

        if (v8 == (id)++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
          if (v8)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      v13 = CFSTR("_");
    }

    v3 = v13;
  }
  v14 = objc_msgSend(CFSTR("_"), "isEqualToString:", v3);
  v15 = v3;
  if (v14)
  {
    NSLog(CFSTR("Sensitive key '%@' not found!"), v1);
    v15 = v1;
  }
  v16 = v15;

  return v16;
}

__CFString *sub_10000CC70(void *a1)
{
  __CFString *v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  unsigned int v14;
  __CFString *v15;
  __CFString *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, CFSTR("_"), CFSTR("HOLocalizable")));

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v3))
  {
    v4 = v1;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = sub_10003C3A4();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
LABEL_4:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v4, v4, v11));

        if (!-[__CFString isEqualToString:](v13, "isEqualToString:", v4))
          break;

        if (v8 == (id)++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
          if (v8)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      v13 = CFSTR("_");
    }

    v3 = v13;
  }
  v14 = objc_msgSend(CFSTR("_"), "isEqualToString:", v3);
  v15 = v3;
  if (v14)
  {
    NSLog(CFSTR("Sensitive key '%@' not found!"), v1);
    v15 = v1;
  }
  v16 = v15;

  return v16;
}

__CFString *sub_10000CE58(void *a1)
{
  __CFString *v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  unsigned int v14;
  __CFString *v15;
  __CFString *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, CFSTR("_"), CFSTR("HOLocalizable")));

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v3))
  {
    v4 = v1;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = sub_10003CB4C();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
LABEL_4:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v4, v4, v11));

        if (!-[__CFString isEqualToString:](v13, "isEqualToString:", v4))
          break;

        if (v8 == (id)++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
          if (v8)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      v13 = CFSTR("_");
    }

    v3 = v13;
  }
  v14 = objc_msgSend(CFSTR("_"), "isEqualToString:", v3);
  v15 = v3;
  if (v14)
  {
    NSLog(CFSTR("Sensitive key '%@' not found!"), v1);
    v15 = v1;
  }
  v16 = v15;

  return v16;
}

__CFString *sub_10000D040(void *a1)
{
  __CFString *v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  unsigned int v14;
  __CFString *v15;
  __CFString *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, CFSTR("_"), CFSTR("HOLocalizable")));

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v3))
  {
    v4 = v1;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = sub_100042FE8();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
LABEL_4:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v4, v4, v11));

        if (!-[__CFString isEqualToString:](v13, "isEqualToString:", v4))
          break;

        if (v8 == (id)++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
          if (v8)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      v13 = CFSTR("_");
    }

    v3 = v13;
  }
  v14 = objc_msgSend(CFSTR("_"), "isEqualToString:", v3);
  v15 = v3;
  if (v14)
  {
    NSLog(CFSTR("Sensitive key '%@' not found!"), v1);
    v15 = v1;
  }
  v16 = v15;

  return v16;
}

__CFString *sub_10000D228(void *a1)
{
  __CFString *v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  unsigned int v14;
  __CFString *v15;
  __CFString *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, CFSTR("_"), CFSTR("HOLocalizable")));

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v3))
  {
    v4 = v1;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = sub_100043BD4();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
LABEL_4:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v4, v4, v11));

        if (!-[__CFString isEqualToString:](v13, "isEqualToString:", v4))
          break;

        if (v8 == (id)++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
          if (v8)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      v13 = CFSTR("_");
    }

    v3 = v13;
  }
  v14 = objc_msgSend(CFSTR("_"), "isEqualToString:", v3);
  v15 = v3;
  if (v14)
  {
    NSLog(CFSTR("Sensitive key '%@' not found!"), v1);
    v15 = v1;
  }
  v16 = v15;

  return v16;
}

__CFString *sub_10000D410(void *a1)
{
  __CFString *v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  unsigned int v14;
  __CFString *v15;
  __CFString *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, CFSTR("_"), CFSTR("HOLocalizable")));

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v3))
  {
    v4 = v1;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = sub_100046578();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
LABEL_4:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v4, v4, v11));

        if (!-[__CFString isEqualToString:](v13, "isEqualToString:", v4))
          break;

        if (v8 == (id)++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
          if (v8)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      v13 = CFSTR("_");
    }

    v3 = v13;
  }
  v14 = objc_msgSend(CFSTR("_"), "isEqualToString:", v3);
  v15 = v3;
  if (v14)
  {
    NSLog(CFSTR("Sensitive key '%@' not found!"), v1);
    v15 = v1;
  }
  v16 = v15;

  return v16;
}

__CFString *sub_10000D5F8(void *a1)
{
  __CFString *v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  unsigned int v14;
  __CFString *v15;
  __CFString *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, CFSTR("_"), CFSTR("HOLocalizable")));

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v3))
  {
    v4 = v1;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = sub_100049018();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
LABEL_4:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v4, v4, v11));

        if (!-[__CFString isEqualToString:](v13, "isEqualToString:", v4))
          break;

        if (v8 == (id)++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
          if (v8)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      v13 = CFSTR("_");
    }

    v3 = v13;
  }
  v14 = objc_msgSend(CFSTR("_"), "isEqualToString:", v3);
  v15 = v3;
  if (v14)
  {
    NSLog(CFSTR("Sensitive key '%@' not found!"), v1);
    v15 = v1;
  }
  v16 = v15;

  return v16;
}

__CFString *sub_10000D7E0(void *a1)
{
  __CFString *v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  unsigned int v14;
  __CFString *v15;
  __CFString *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, CFSTR("_"), CFSTR("HOLocalizable")));

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v3))
  {
    v4 = v1;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = sub_10004A754();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
LABEL_4:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v4, v4, v11));

        if (!-[__CFString isEqualToString:](v13, "isEqualToString:", v4))
          break;

        if (v8 == (id)++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
          if (v8)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      v13 = CFSTR("_");
    }

    v3 = v13;
  }
  v14 = objc_msgSend(CFSTR("_"), "isEqualToString:", v3);
  v15 = v3;
  if (v14)
  {
    NSLog(CFSTR("Sensitive key '%@' not found!"), v1);
    v15 = v1;
  }
  v16 = v15;

  return v16;
}

id sub_10000E0F0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishWithNoResult");
}

id sub_10000E0F8(uint64_t a1, void *a2)
{
  if (*(_BYTE *)(a1 + 32))
    return objc_msgSend(a2, "finishWithNoResult");
  else
    return objc_msgSend(a2, "cancel");
}

id sub_10000E13C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "_navigationControllerForItem:", a2);
}

void sub_10000E14C(id a1)
{
  +[HFUtilities warmUpStaticPreferences](HFUtilities, "warmUpStaticPreferences");
  +[HFAccessoryTypeGroup warmUp](HFAccessoryTypeGroup, "warmUp");
  +[HUGraphicsUtilities shouldReduceVisualEffects](HUGraphicsUtilities, "shouldReduceVisualEffects");
}

NSArray *__cdecl sub_10000E17C(id a1, HMHome *a2)
{
  return -[HMHome triggers](a2, "triggers");
}

void sub_10000E184(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("com.apple.Home.networkPathMonitorDispatchQueue", 0);
  v2 = (void *)qword_1000D2768;
  qword_1000D2768 = (uint64_t)v1;

}

id sub_10000E1B0()
{
  if (qword_1000D2760 != -1)
    dispatch_once(&qword_1000D2760, &stru_1000B61A0);
  return (id)qword_1000D2768;
}

void sub_10000E1F0(id a1)
{
  HODiscoverWebViewManager *v1;
  void *v2;

  v1 = objc_alloc_init(HODiscoverWebViewManager);
  v2 = (void *)qword_1000D27D8;
  qword_1000D27D8 = (uint64_t)v1;

}

void sub_10000E218(id a1, NSNull *a2, NSError *a3)
{
  +[HOMainTabBarController _checkForTestingFlags](HOMainTabBarController, "_checkForTestingFlags", a3);
}

void sub_10000E224(id a1)
{
  HOActivationManager *v1;
  void *v2;

  v1 = objc_opt_new(HOActivationManager);
  v2 = (void *)qword_1000D2810;
  qword_1000D2810 = (uint64_t)v1;

}

void sub_10000E28C(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "_logAccessoryCountMetricsWithHomes:", v4);
  objc_msgSend(*(id *)(a1 + 32), "_logUserAutomationNamingTypeProportions:", v4);
  objc_msgSend(*(id *)(a1 + 32), "_logNonConfiguredAccessoryMetricsWithHomes:", v4);

}

void sub_10000EE24(uint64_t a1, objc_class *a2)
{
  NSString *v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  v3 = NSStringFromClass(a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  objc_msgSend(v5, "registerClass:forCellReuseIdentifier:", a2, v4);

}

id sub_10000EE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _objc_msgSend(*(id *)(a1 + 32), "tableView:cellForRowAtIndexPath:rowIdentifier:", a2, a3, a4);
}

void sub_10000F3D4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

id sub_10000F400(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "savedButtonBarItem"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationItem"));
  objc_msgSend(v3, "setRightBarButtonItem:", v2);

  return objc_msgSend(*(id *)(a1 + 32), "setSavedButtonBarItem:", 0);
}

void sub_10000F45C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  objc_msgSend(v4, "setSelectedHome:userInitiated:", v3, 1);

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v5, "addLocationViewController:didFinishWithHome:", *(_QWORD *)(a1 + 32), v3);

}

void sub_10000F4DC(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  _QWORD v9[5];
  uint8_t buf[4];
  uint64_t v11;
  __int16 v12;
  id v13;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[HFErrorHandler sharedHandler](HFErrorHandler, "sharedHandler"));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10000F60C;
  v9[3] = &unk_1000B5A50;
  v9[4] = WeakRetained;
  objc_msgSend(v5, "handleError:retryBlock:cancelBlock:", v3, v9, 0);

  v6 = HFLogForCategory(0);
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412546;
    v11 = v8;
    v12 = 2112;
    v13 = v3;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Creating home \"%@\" failed with error %@", buf, 0x16u);
  }

}

id sub_10000F60C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "saveButtonPressed:", 0);
}

void sub_10000F9B4(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "wallpaper"));
  v4 = objc_msgSend(v3, "type");

  if (v4 == (id)1)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "processedImage"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "wallpaperPickerViewController"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "wallpaper"));
    objc_msgSend(v6, "setCustomWallpaper:image:", v7, v5);

  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "wallpaperPickerViewController"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "wallpaper"));
  objc_msgSend(v8, "setSelectedWallpaper:animated:", v9, *(unsigned __int8 *)(a1 + 40));

}

void sub_10000FFF0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = a2;
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "processedImage"));
  objc_msgSend(*(id *)(a1 + 32), "setImage:", v5);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "wallpaper"));

  LODWORD(v3) = objc_msgSend(v4, "type") != (id)2;
  objc_msgSend(*(id *)(a1 + 32), "setContentMode:", 2 * v3);

}

void sub_100010240(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v3 = a2;
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "originalImage"));
  v4 = objc_alloc((Class)HUWallpaperEditingViewController);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "wallpaper"));

  v6 = objc_msgSend(v4, "initWithWallpaper:image:delegate:", v5, v7, *(_QWORD *)(a1 + 32));
  objc_msgSend(v6, "setModalPresentationStyle:", 0);
  objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", v6, 1, 0);

}

void sub_1000108D8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  v3 = a2;
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "originalImage"));
  v4 = *(void **)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "wallpaper"));

  objc_msgSend(v4, "presentWallpaperEditingViewControllerWithImage:wallpaper:", v6, v5);
}

id sub_100010E84()
{
  if (qword_1000D26F0 != -1)
    dispatch_once(&qword_1000D26F0, &stru_1000B5B08);
  return (id)qword_1000D26F8;
}

void sub_100010EC4(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D26F8;
  qword_1000D26F8 = (uint64_t)&off_1000BF230;

}

BOOL sub_1000119F4(id a1, HMIncomingHomeInvitation *a2)
{
  return -[HMIncomingHomeInvitation invitationState](a2, "invitationState") == (id)2;
}

BOOL sub_100011A14(id a1, HMIncomingHomeInvitation *a2)
{
  return -[HMIncomingHomeInvitation isInviteeRestrictedGuest](a2, "isInviteeRestrictedGuest");
}

id sub_100011A1C(id a1, HMIncomingHomeInvitation *a2)
{
  return -[HMIncomingHomeInvitation hf_prettyDescription](a2, "hf_prettyDescription");
}

id sub_100011A6C(id a1, NSNumber *a2)
{
  return +[HOOnboardingRootNavigationController stringForOnboardingState:](HOOnboardingRootNavigationController, "stringForOnboardingState:", -[NSNumber unsignedIntegerValue](a2, "unsignedIntegerValue"));
}

void sub_100012AF8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

id sub_100012B20(uint64_t a1)
{
  unint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v2 = *(_QWORD *)(a1 + 48) + 1;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onboardingViewControllers"));
  v4 = objc_msgSend(v3, "count");

  if (v2 >= (unint64_t)v4)
    return 0;
  while (1)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onboardingViewControllers"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectAtIndexedSubscript:", v2));

    if (!*(_BYTE *)(a1 + 56))
      break;
    if ((objc_opt_respondsToSelector(v6, "segmentIdentifier") & 1) != 0)
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "segmentIdentifier"));
    else
      v7 = 0;
    v8 = *(void **)(a1 + 40);
    if (!v8 || (objc_msgSend(v8, "isEqualToString:", v7) & 1) == 0)
    {

      return v6;
    }

    ++v2;
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onboardingViewControllers"));
    v10 = objc_msgSend(v9, "count");

    if (v2 >= (unint64_t)v10)
      return 0;
  }
  return v6;
}

id sub_100012C28(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = a2;
  if (objc_msgSend(v3, "code") == (id)32
    && (v4 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher")),
        v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "homeManager")),
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "name")),
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "hf_homeForName:", v6)),
        v6,
        v5,
        v4,
        v7))
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v7));

  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithError:](NAFuture, "futureWithError:", v3));
  }

  return v8;
}

void sub_100012CFC(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  objc_msgSend(v4, "setSelectedHome:userInitiated:", v8, 1);

  v5 = objc_msgSend(v8, "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:", 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "homeManager"));
  objc_msgSend(v7, "hf_enableEventLogOnboardingFlag");

  objc_msgSend(WeakRetained, "_finishedOnboarding");
}

void sub_100012DAC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  id v11;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[HFErrorHandler sharedHandler](HFErrorHandler, "sharedHandler"));
  objc_msgSend(v4, "handleError:", v3);

  v5 = HFLogForCategory(9);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "name"));
    v8 = 138412546;
    v9 = v7;
    v10 = 2112;
    v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Creating first home \"%@\" failed with error %@", (uint8_t *)&v8, 0x16u);

  }
}

void sub_100012F50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100012F6C(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;
  id v5;
  void *v6;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  v5 = objc_msgSend(v3, "unsignedIntegerValue");

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_viewControllerForState:", v5));
  return v6;
}

id sub_100014438()
{
  if (qword_1000D2700 != -1)
    dispatch_once(&qword_1000D2700, &stru_1000B5D08);
  return (id)qword_1000D2708;
}

void sub_100014478(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2708;
  qword_1000D2708 = (uint64_t)&off_1000BF248;

}

id sub_100014EA8(id *a1, void *a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  void **v17;
  uint64_t v18;
  id (*v19)(uint64_t, void *);
  void *v20;
  id v21;
  _QWORD v22[4];
  id v23;

  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_1000150BC;
  v22[3] = &unk_1000B5E18;
  v23 = a1[4];
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "na_firstObjectPassingTest:", v22));
  v5 = v4;
  if (v4)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "actionSets"));
    v17 = _NSConcreteStackBlock;
    v18 = 3221225472;
    v19 = sub_100015114;
    v20 = &unk_1000B5E40;
    v21 = a1[6];
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "na_firstObjectPassingTest:", &v17));

    if (v7)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "hf_characteristicValueManager", v17, v18, v19, v20));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "executeActionSet:", v7));

      objc_msgSend(a1[7], "showHomeDashboardCellForActionSet:executeActionSetFuture:", v7, v9);
    }
    else
    {
      v13 = HFLogForCategory(0);
      v14 = objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        sub_100077C50();

      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSError hf_errorWithCode:](NSError, "hf_errorWithCode:", 30, v17, v18, v19, v20));
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithError:](NAFuture, "futureWithError:", v15));

    }
    v12 = v21;
  }
  else
  {
    v10 = HFLogForCategory(0);
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_100077BE4();

    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSError hf_errorWithCode:](NSError, "hf_errorWithCode:", 30));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithError:](NAFuture, "futureWithError:", v12));
  }

  return v9;
}

id sub_1000150BC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "uniqueIdentifier"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "UUIDString"));
  v5 = objc_msgSend(v4, "isEqualToString:", *(_QWORD *)(a1 + 32));

  return v5;
}

id sub_100015114(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "uniqueIdentifier"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "UUIDString"));
  v5 = objc_msgSend(v4, "isEqualToString:", *(_QWORD *)(a1 + 32));

  return v5;
}

id sub_1000151B4()
{
  if (qword_1000D2710 != -1)
    dispatch_once(&qword_1000D2710, &stru_1000B5E88);
  return (id)qword_1000D2718;
}

void sub_1000151F4(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2718;
  qword_1000D2718 = (uint64_t)&off_1000BF278;

}

void sub_10001520C(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

BOOL sub_100016118(id a1, UIWindow *a2)
{
  return -[UIWindow isKeyWindow](a2, "isKeyWindow");
}

id sub_100016908()
{
  if (qword_1000D2720 != -1)
    dispatch_once(&qword_1000D2720, &stru_1000B5EE8);
  return (id)qword_1000D2728;
}

void sub_100016948(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2728;
  qword_1000D2728 = (uint64_t)&off_1000BF290;

}

id sub_100016A38()
{
  if (qword_1000D2730 != -1)
    dispatch_once(&qword_1000D2730, &stru_1000B5FB8);
  return (id)qword_1000D2738;
}

void sub_100016A78(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2738;
  qword_1000D2738 = (uint64_t)&off_1000BF2A8;

}

void sub_100016A90(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id WeakRetained;
  uint8_t v5[16];

  v2 = HFLogForCategory(9);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Home preferences changed; reloading state",
      v5,
      2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "reloadState");

}

void sub_100016BF0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100016C14(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  objc_msgSend(WeakRetained, "_reloadStateWithInvitation:home:", *(_QWORD *)(a1 + 32), v4);

}

id sub_100016C6C(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  int v10;
  uint64_t v11;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_updateOnboardingCompleteFutureForNewPresentationState:", *(_QWORD *)(a1 + 48));
  v3 = HFLogForCategory(9);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    v5 = *(_QWORD *)(a1 + 48);
    v10 = 134217984;
    v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "desired onboarding state: %lu", (uint8_t *)&v10, 0xCu);
  }

  v6 = *(_QWORD *)(a1 + 48);
  switch(v6)
  {
    case 3:
      v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_presentOnboardingWithStates:", *(_QWORD *)(a1 + 32)));
      break;
    case 2:
      v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_presentDataSyncingControllerWithState:", *(_QWORD *)(a1 + 56)));
      break;
    case 1:
      v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_presentiCloudDisabledControllerWithState:andStatus:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64)));
      break;
    default:
      v7 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
      break;
  }
  v8 = (void *)v7;

  return v8;
}

id sub_100016DA4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performMigrationSuccessTasks");
}

void sub_100018014(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "_checkForAppOnboardingWillFinish");
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onboardingCompleteFuture"));
  objc_msgSend(v2, "finishWithNoResult");

}

id sub_100018220(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "uniqueIdentifier"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "homeUUID"));
  v5 = objc_msgSend(v3, "isEqual:", v4);

  return v5;
}

void sub_1000196E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100019714(uint64_t a1)
{
  id WeakRetained;
  uint64_t v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  int v11;
  const char *v12;
  __int16 v13;
  void *v14;
  __int16 v15;
  unsigned int v16;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = HFLogForCategory(9);
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "invitation"));
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "hf_prettyDescription"));
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "invitation"));
      v11 = 136315650;
      v12 = "-[HOOnboardingIncomingInvitationViewController invitationResponseController:stateDidChange:]_block_invoke";
      v13 = 2112;
      v14 = v5;
      v15 = 1024;
      v16 = objc_msgSend(v6, "isInviteeRestrictedGuest");
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "(%s) Two minutes time out reached for handling invitation. invitation = %@. isInviteeRestrictedGuest = %{BOOL}d", (uint8_t *)&v11, 0x1Cu);

    }
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "incomingInvitationDelegate"));
    v8 = objc_opt_respondsToSelector(v7, "invitationViewControllerDidDecideLaterInvitation:error:");

    if ((v8 & 1) != 0)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSError hf_errorWithCode:](NSError, "hf_errorWithCode:", 39));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "incomingInvitationDelegate"));
      objc_msgSend(v10, "invitationViewControllerDidDecideLaterInvitation:error:", WeakRetained, v9);

    }
    else
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "incomingInvitationDelegate"));
      objc_msgSend(v9, "invitationViewControllerDidDecideLaterInvitation:", WeakRetained);
    }

  }
}

void sub_10001A42C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  id *v11;
  uint64_t v12;

  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v12 - 144));
  _Unwind_Resume(a1);
}

void sub_10001A488(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  NSObject *v4;
  NSString *v5;
  void *v6;
  int v7;
  id v8;
  __int16 v9;
  void *v10;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = HFLogForCategory(68);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = NSStringFromSelector(*(SEL *)(a1 + 40));
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = 138412546;
    v8 = WeakRetained;
    v9 = 2112;
    v10 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%@:%@ User tapped ignore on the action sheet", (uint8_t *)&v7, 0x16u);

  }
  objc_msgSend(WeakRetained, "_ignoreInvitation:", 0);

}

void sub_10001A570(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  NSObject *v4;
  NSString *v5;
  void *v6;
  int v7;
  id v8;
  __int16 v9;
  void *v10;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = HFLogForCategory(68);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = NSStringFromSelector(*(SEL *)(a1 + 40));
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = 138412546;
    v8 = WeakRetained;
    v9 = 2112;
    v10 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%@:%@ User tapped report on the action sheet", (uint8_t *)&v7, 0x16u);

  }
  objc_msgSend(WeakRetained, "_reportJunk:", 0);

}

void sub_10001A658(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  void *v6;
  int v7;
  const char *v8;
  __int16 v9;
  void *v10;

  v3 = a2;
  v4 = HFLogForCategory(68);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "title"));
    v7 = 136315394;
    v8 = "-[HOOnboardingIncomingInvitationViewController _ignoreOrReportAlert:]_block_invoke";
    v9 = 2112;
    v10 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "(%s) User tapped cancel button '%@' from alert", (uint8_t *)&v7, 0x16u);

  }
  objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);

}

void sub_10001B318(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 144));
  _Unwind_Resume(a1);
}

void sub_10001B374(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  NSObject *v4;
  NSString *v5;
  void *v6;
  int v7;
  id v8;
  __int16 v9;
  void *v10;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = HFLogForCategory(68);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = NSStringFromSelector(*(SEL *)(a1 + 40));
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = 138412546;
    v8 = WeakRetained;
    v9 = 2112;
    v10 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%@:%@ User tapped Accept on the alert. Finally / really / accepting invitation.", (uint8_t *)&v7, 0x16u);

  }
  objc_msgSend(WeakRetained, "_reallyAcceptInvitation");

}

void sub_10001B458(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  NSObject *v4;
  NSString *v5;
  void *v6;
  int v7;
  id v8;
  __int16 v9;
  void *v10;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = HFLogForCategory(68);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = NSStringFromSelector(*(SEL *)(a1 + 40));
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = 138412546;
    v8 = WeakRetained;
    v9 = 2112;
    v10 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%@:%@ User tapped Ignore and Report on the alert", (uint8_t *)&v7, 0x16u);

  }
  objc_msgSend(WeakRetained, "_reportJunk:", 0);

}

void sub_10001B540(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  int v6;
  const char *v7;
  __int16 v8;
  id v9;

  v3 = a2;
  v4 = HFLogForCategory(68);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = 136315394;
    v7 = "-[HOOnboardingIncomingInvitationViewController _acceptInvitation]_block_invoke";
    v8 = 2114;
    v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "(%s) User tapped '%{public}@' from the alert popup", (uint8_t *)&v6, 0x16u);
  }

  objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);
}

id sub_10001BE8C()
{
  if (qword_1000D2740 != -1)
    dispatch_once(&qword_1000D2740, &stru_1000B6160);
  return (id)qword_1000D2748;
}

void sub_10001BECC(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2748;
  qword_1000D2748 = (uint64_t)&off_1000BF2D8;

}

id sub_10001CA2C()
{
  if (qword_1000D2750 != -1)
    dispatch_once(&qword_1000D2750, &stru_1000B6180);
  return (id)qword_1000D2758;
}

void sub_10001CA6C(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2758;
  qword_1000D2758 = (uint64_t)&off_1000BF2F0;

}

void sub_10001CAE8(uint64_t a1, nw_path_t path)
{
  id (*v3)(uint64_t);
  void ***v4;
  void **v5;
  void **v6;

  if (nw_path_get_status(path) == nw_path_status_satisfied)
  {
    v6 = _NSConcreteStackBlock;
    v3 = sub_10001CB74;
    v4 = &v6;
  }
  else
  {
    v5 = _NSConcreteStackBlock;
    v3 = sub_10001CBC4;
    v4 = &v5;
  }
  v4[1] = (void **)3221225472;
  v4[2] = (void **)v3;
  v4[3] = (void **)&unk_1000B5A50;
  v4[4] = *(void ***)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

id sub_10001CB74(uint64_t a1)
{
  void *v2;

  if (objc_msgSend(*(id *)(a1 + 32), "currentConnectionIssueState") == (id)2)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[HODiscoverWebViewManager sharedInstance](HODiscoverWebViewManager, "sharedInstance"));
    objc_msgSend(v2, "reloadWebViews");

  }
  return objc_msgSend(*(id *)(a1 + 32), "_updateNetworkConnectionState:", 0);
}

id sub_10001CBC4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateNetworkConnectionState:", 1);
}

void sub_10001E728(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[HODiscoverWebViewManager sharedInstance](HODiscoverWebViewManager, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "webView"));
  v4 = objc_msgSend(v2, "getWebViewNavigationStateForWebView:", v3);

  if (!v4)
  {
    v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "webViewActivityIndicator"));
    objc_msgSend(v5, "startAnimating");

  }
}

id sub_10001EE5C()
{
  if (qword_1000D2770 != -1)
    dispatch_once(&qword_1000D2770, &stru_1000B6210);
  return (id)qword_1000D2778;
}

void sub_10001EE9C(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2778;
  qword_1000D2778 = (uint64_t)&off_1000BF308;

}

void sub_10001EEB4(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  HOSplitViewController *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint8_t v13[16];

  if (a1)
  {
    v2 = HFLogForCategory(8);
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Navigation provider: HOSplitViewController", v13, 2u);
    }

    v4 = -[HOSplitViewController initWithStyle:]([HOSplitViewController alloc], "initWithStyle:", 1);
    objc_msgSend(a1, "setSplitViewController:", v4);

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "splitViewController"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "splitViewController"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "baseController"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[HOAppNavigator navigatorWithRootViewController:baseController:](HOAppNavigator, "navigatorWithRootViewController:baseController:", v5, v7));
    objc_msgSend(a1, "setNavigator:", v8);

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "navigator"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "splitViewController"));
    objc_msgSend(v10, "setAppNavigator:", v9);

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "window"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "splitViewController"));
    objc_msgSend(v11, "setRootViewController:", v12);

  }
}

void sub_10001F028(_QWORD *a1)
{
  uint64_t v2;
  NSObject *v3;
  HOMainTabBarController *v4;
  void *v5;
  void *v6;
  void *v7;
  uint8_t v8[16];

  if (a1)
  {
    v2 = HFLogForCategory(8);
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Navigation provider: HOMainTabBarController", v8, 2u);
    }

    v4 = objc_alloc_init(HOMainTabBarController);
    v5 = (void *)objc_claimAutoreleasedReturnValue(-[HOMainTabBarController baseController](v4, "baseController"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[HOAppNavigator navigatorWithRootViewController:baseController:](HOAppNavigator, "navigatorWithRootViewController:baseController:", v4, v5));
    objc_msgSend(a1, "setNavigator:", v6);

    -[HOMainTabBarController setNavigator:](v4, "setNavigator:", a1[5]);
    objc_msgSend(a1, "setTabBarController:", v4);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "window"));
    objc_msgSend(v7, "setRootViewController:", v4);

  }
}

void sub_10001F130(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  HOAdaptiveTabBarController *v4;
  void *v5;
  void *v6;
  uint8_t v7[16];

  if (a1)
  {
    v2 = HFLogForCategory(8);
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Navigation provider: HOAdaptiveTabBarController", v7, 2u);
    }

    v4 = objc_alloc_init(HOAdaptiveTabBarController);
    v5 = (void *)objc_claimAutoreleasedReturnValue(-[HOAdaptiveTabBarController dashboardNavigator](v4, "dashboardNavigator"));
    objc_msgSend(a1, "setNavigator:", v5);

    objc_msgSend(a1, "setTabBarController:", v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "window"));
    objc_msgSend(v6, "setRootViewController:", v4);

  }
}

void sub_10001F310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001F334(uint64_t a1)
{
  void *v2;
  id v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "URLHandler"));
  v3 = objc_msgSend(v2, "openURL:", *(_QWORD *)(a1 + 32));

}

uint64_t sub_10001F51C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, BOOL))(result + 16))(result, a3 == 0);
  return result;
}

void sub_10001F6D4(id a1, BOOL a2, NSError *a3)
{
  _BOOL4 v3;
  NSError *v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  int v9;
  NSError *v10;

  v3 = a2;
  v4 = a3;
  v5 = HFLogForCategory(0);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v9 = 67109120;
    LODWORD(v10) = v3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Notification authorization granted %{BOOL}d", (uint8_t *)&v9, 8u);
  }

  if (v4)
  {
    v7 = HFLogForCategory(0);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = 138412290;
      v10 = v4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Error in notification authorization %@", (uint8_t *)&v9, 0xCu);
    }

  }
}

void sub_10001F8F4(id a1, HMHome *a2)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(-[HMHome hf_characteristicValueManager](a2, "hf_characteristicValueManager"));
  objc_msgSend(v2, "cancelInFlightReadRequests");

}

void sub_10001FE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10001FE88(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;

  v2 = HFLogForCategory(0);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
    v7 = 138412546;
    v8 = v4;
    v9 = 2048;
    v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "expirationHandler called for itemID = %@ - taskID = %lu", (uint8_t *)&v7, 0x16u);
  }

  return objc_msgSend(*(id *)(a1 + 40), "_endBackgroundTaskWithTaskIdentifier:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
}

BOOL sub_1000200F0(id a1, HMTrigger *a2)
{
  void *v2;
  BOOL v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[HMTrigger configuredName](a2, "configuredName"));
  v3 = v2 != 0;

  return v3;
}

void sub_100020244(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_100022480(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 176));
  _Unwind_Resume(a1);
}

id sub_1000224BC(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "uniqueIdentifier"));
  v4 = objc_msgSend(v2, "isEqual:", v3);

  return v4;
}

id sub_100022500(id *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  NSObject *v31;
  id v32;
  void *v33;
  void **v35;
  uint64_t v36;
  BOOL (*v37)(uint64_t, void *);
  void *v38;
  id v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  void (*v45)(uint64_t);
  id v46;
  uint8_t buf[4];
  void *v48;
  __int16 v49;
  void *v50;
  __int16 v51;
  void *v52;
  __int16 v53;
  void *v54;

  v3 = a2;
  v41 = 0;
  v42 = &v41;
  v43 = 0x3032000000;
  v44 = sub_1000229A8;
  v45 = sub_1000229B8;
  v46 = 0;
  v35 = _NSConcreteStackBlock;
  v36 = 3221225472;
  v37 = sub_1000229C0;
  v38 = &unk_1000B64D8;
  v40 = &v41;
  v39 = a1[4];
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "na_firstObjectPassingTest:", &v35));
  if (v4)
  {
    if (objc_msgSend((id)v42[5], "isBridged", v35, v36, v37, v38))
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v42[5], "hf_owningBridgeAccessory"));
      v6 = HFLogForCategory(70);
      v7 = objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        v8 = a1[4];
        v9 = (void *)v42[5];
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "deviceIdentifier"));
        *(_DWORD *)buf = 138413058;
        v48 = v8;
        v49 = 2112;
        v50 = v9;
        v51 = 2112;
        v52 = v5;
        v53 = 2112;
        v54 = v10;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to reprovision device for deviceIdentifier %@. Corresponding accessory %@ is a bridged accessory. Opening its bridge %@ with deviceIdentifier %@ instead.", buf, 0x2Au);

      }
      v11 = (void *)v42[5];
      v42[5] = (uint64_t)v5;

    }
    v12 = HFLogForCategory(70);
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v42[5], "hf_prettyDescription"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "hf_prettyDescription"));
      *(_DWORD *)buf = 138412546;
      v48 = v14;
      v49 = 2112;
      v50 = v15;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to reprovision accessory %@ in home %@.", buf, 0x16u);

    }
    v16 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "navigator"));
    v17 = objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "showAccessory:secondaryDestination:", v42[5], 1));
LABEL_19:
    v28 = (void *)v17;

    goto LABEL_20;
  }
  if (+[HFUtilities supportsAccessorySetup](HFUtilities, "supportsAccessorySetup", v35, v36, v37, v38))
  {
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "homeManager"));
    v20 = objc_alloc((Class)NSUUID);
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "valueForParameter:", HFURLComponentsHome));
    v22 = objc_msgSend(v20, "initWithUUIDString:", v21);
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "hf_homeWithIdentifier:", v22));
    v24 = v23;
    if (v23)
    {
      v16 = v23;
    }
    else
    {
      v29 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
      v16 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "home"));

    }
    v30 = HFLogForCategory(70);
    v31 = objc_claimAutoreleasedReturnValue(v30);
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      v32 = a1[4];
      v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "hf_prettyDescription"));
      *(_DWORD *)buf = 138412546;
      v48 = v32;
      v49 = 2112;
      v50 = v33;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler request to reprovision device deviceIdentifier %@. Showing add new accessory UI for home %@ as no accessory found.", buf, 0x16u);

    }
    v17 = objc_claimAutoreleasedReturnValue(+[HFAddAndSetupNewAccessoriesHandler addAndSetupNewAccessoriesForHome:room:](HFAddAndSetupNewAccessoriesHandler, "addAndSetupNewAccessoriesForHome:room:", v16, 0));
    goto LABEL_19;
  }
  v25 = HFLogForCategory(70);
  v26 = objc_claimAutoreleasedReturnValue(v25);
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
  {
    v27 = a1[4];
    *(_DWORD *)buf = 138412290;
    v48 = v27;
    _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler request to reprovision device deviceIdentifier %@. Ignoring as no accessory found and we do not support adding accessories.", buf, 0xCu);
  }

  v28 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
LABEL_20:

  _Block_object_dispose(&v41, 8);
  return v28;
}

void sub_100022964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000229A8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000229B8(uint64_t a1)
{

}

BOOL sub_1000229C0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "hf_accessoryWithDeviceIdentifier:", *(_QWORD *)(a1 + 32)));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) != 0;
}

id sub_100022A14(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  int v12;
  id v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  uint64_t v17;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = HFLogForCategory(70);
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = *(_QWORD *)(a1 + 32);
    v12 = 138412802;
    v13 = WeakRetained;
    v14 = 2080;
    v15 = "-[HOAppNavigationURLHandler _openURLComponents:]_block_invoke";
    v16 = 2112;
    v17 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "(%@:%s) Opening user vc for %@", (uint8_t *)&v12, 0x20u);
  }

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "navigator"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "showUserDetails:", v4));

  return v10;
}

id sub_100022B2C(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  int v12;
  id v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  id v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v5 = HFLogForCategory(70);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 40);
    v12 = 138413314;
    v13 = WeakRetained;
    v14 = 2080;
    v15 = "-[HOAppNavigationURLHandler _openURLComponents:]_block_invoke";
    v16 = 2112;
    v17 = v3;
    v18 = 2112;
    v19 = v7;
    v20 = 2112;
    v21 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "(%@:%s) %@ occurred looking for user with uniqueIdentifier %@. Showing settings for current home %@", (uint8_t *)&v12, 0x34u);
  }

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "navigator"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "showHomeSettingsForHome:", *(_QWORD *)(a1 + 40)));

  return v10;
}

void sub_100022C50(id a1, NAPromise *a2)
{
  NAPromise *v2;
  dispatch_time_t v3;
  NAPromise *v4;
  _QWORD block[4];
  NAPromise *v6;

  v2 = a2;
  v3 = dispatch_time(0, 500000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100022CE4;
  block[3] = &unk_1000B5A50;
  v6 = v2;
  v4 = v2;
  dispatch_after(v3, (dispatch_queue_t)&_dispatch_main_q, block);

}

id sub_100022CE4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishWithNoResult");
}

id sub_100022CEC(uint64_t a1)
{
  int v2;
  uint64_t v3;
  NSObject *v4;
  _BOOL4 v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  int8x16_t v28;
  _QWORD v29[4];
  int8x16_t v30;
  uint64_t v31;
  _QWORD v32[4];
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint8_t buf[4];
  id v37;

  v2 = *(unsigned __int8 *)(a1 + 56);
  v3 = HFLogForCategory(70);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v5)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler request from HUIS to show accessory details", buf, 2u);
    }

    v6 = (id)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "allHomesFuture"));
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472;
    v32[2] = sub_10002305C;
    v32[3] = &unk_1000B65E0;
    v8 = *(id *)(a1 + 32);
    v9 = *(_QWORD *)(a1 + 48);
    v34 = *(_QWORD *)(a1 + 40);
    v35 = v9;
    v33 = v8;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "flatMap:", v32));

  }
  else
  {
    if (v5)
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "URL"));
      *(_DWORD *)buf = 138412290;
      v37 = v12;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request for destination: %@.", buf, 0xCu);

    }
    v13 = objc_msgSend(*(id *)(a1 + 32), "destination");
    v14 = *(void **)(a1 + 32);
    if (v13 != (id)8)
    {
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "homeKitObjectFuture"));
      v29[0] = _NSConcreteStackBlock;
      v29[1] = 3221225472;
      v29[2] = sub_1000235F8;
      v29[3] = &unk_1000B6608;
      v31 = *(_QWORD *)(a1 + 48);
      v28 = *(int8x16_t *)(a1 + 32);
      v25 = (id)v28.i64[0];
      v30 = vextq_s8(v28, v28, 8uLL);
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "flatMap:", v29));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "recover:", &stru_1000B6648));

      v27 = objc_msgSend(v10, "addFailureBlock:", &stru_1000B6688);
      return v10;
    }
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "URL"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "pathComponents"));
    v17 = objc_msgSend(v16, "count");

    if ((unint64_t)v17 < 2)
    {
      v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "navigator"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "showAutomationTab"));
      goto LABEL_6;
    }
    v18 = objc_alloc((Class)NSUUID);
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "URL"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "pathComponents"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "objectAtIndexedSubscript:", 1));
    v6 = objc_msgSend(v18, "initWithUUIDString:", v21);

    v22 = HFLogForCategory(70);
    v23 = objc_claimAutoreleasedReturnValue(v22);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v37 = v6;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request for trigger with identifier %@", buf, 0xCu);
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "navigator"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "presentConfirmationAlertForExecutingTriggerWithIdentifier:", v6));
  }

LABEL_6:
  return v10;
}

id sub_10002305C(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v31;
  NSObject *v32;
  char *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  _QWORD v37[4];
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  NSString *v42;
  id v43;
  uint8_t buf[4];
  const char *v45;
  __int16 v46;
  uint64_t v47;
  __int16 v48;
  uint64_t v49;

  v2 = HFLogForCategory(70);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler [HFHomeKitDispatcher.sharedDispatcher allHomesFuture] completed", buf, 2u);
  }

  v4 = objc_alloc((Class)NSUUID);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "valueForParameter:", HFURLComponentsHome));
  v6 = objc_msgSend(v4, "initWithUUIDString:", v5);

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "homeManager"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "hf_homeWithIdentifier:", v6));
  v10 = v9;
  if (v9)
  {
    v11 = v9;
  }
  else
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
    v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "home"));

  }
  v13 = objc_msgSend(*(id *)(a1 + 32), "secondaryDestination");
  v14 = *(_QWORD *)(a1 + 48);
  if (v14 <= 19)
  {
    v15 = (uint64_t)v13;
    if ((unint64_t)(v14 - 6) >= 2 && v14 != 4)
      goto LABEL_22;
LABEL_18:
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "URL"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "pathComponents"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "objectAtIndexedSubscript:", 1));

    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "navigator"));
    v24 = objc_msgSend(objc_alloc((Class)NSUUID), "initWithUUIDString:", v22);
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "showCardForHomeKitIdentifier:destination:secondaryDestination:inHome:", v24, *(_QWORD *)(a1 + 48), v15, v11));

    v25 = HFLogForCategory(70);
    v26 = objc_claimAutoreleasedReturnValue(v25);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      v27 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 136315650;
      v45 = "-[HOAppNavigationURLHandler _openURLComponents:]_block_invoke";
      v46 = 2048;
      v47 = v27;
      v48 = 2048;
      v49 = v15;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "%s Showing card destination: %lu, secondaryDestination: %lu", buf, 0x20u);
    }

    v37[0] = _NSConcreteStackBlock;
    v37[1] = 3221225472;
    v37[2] = sub_1000234F8;
    v37[3] = &unk_1000B65B8;
    v28 = *(_QWORD *)(a1 + 48);
    v38 = v22;
    v40 = v28;
    v41 = v15;
    v39 = v11;
    v18 = v22;
    v29 = objc_msgSend(v19, "addCompletionBlock:", v37);

    goto LABEL_21;
  }
  if (v14 != 20)
  {
    if (v14 == 21)
    {
      v15 = 1;
    }
    else
    {
      if (v14 != 29)
      {
LABEL_22:
        v31 = HFLogForCategory(70);
        v32 = objc_claimAutoreleasedReturnValue(v31);
        if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
        {
          v33 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "URL"));
          *(_DWORD *)buf = 138412290;
          v45 = v33;
          _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler got unhandled URL from HUIS: %@.", buf, 0xCu);

        }
        v34 = HFErrorDomain;
        v42 = NSURLErrorFailingURLErrorKey;
        v18 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "URL"));
        v43 = v18;
        v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v43, &v42, 1));
        v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", v34, 38, v35));
        v19 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithError:](NAFuture, "futureWithError:", v36));

        goto LABEL_21;
      }
      v15 = 3;
    }
    goto LABEL_18;
  }
  v16 = HFLogForCategory(70);
  v17 = objc_claimAutoreleasedReturnValue(v16);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v45 = (const char *)v11;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Home Hub Onboarding for home: %@", buf, 0xCu);
  }

  v18 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "navigator"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "showHH2OnboardingFlowForHome:", v11));
LABEL_21:

  return v19;
}

void sub_1000234F8(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  __int16 v21;
  id v22;
  __int16 v23;
  id v24;

  v5 = a2;
  v6 = a3;
  v7 = HFLogForCategory(70);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = a1[6];
    v10 = a1[7];
    v11 = a1[4];
    v12 = a1[5];
    v13 = 138413570;
    v14 = v11;
    v15 = 2048;
    v16 = v9;
    v17 = 2048;
    v18 = v10;
    v19 = 2112;
    v20 = v12;
    v21 = 2112;
    v22 = v5;
    v23 = 2112;
    v24 = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler showCard for {UUID %@, destination %lu, secondaryDestination %lu, home %@}, result %@ error %@", (uint8_t *)&v13, 0x3Eu);
  }

}

id sub_1000235F8(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  id v28;
  id v29;
  uint64_t v30;
  NSObject *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  void *v57;
  uint64_t v58;
  NSObject *v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  NSObject *v63;
  void *v64;
  void *v65;
  void *v66;
  unsigned int v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  NSErrorDomain v73;
  void **v74;
  NSString **v75;
  void *v76;
  id v77;
  void *v78;
  id v79;
  void *v80;
  void *v81;
  id v82;
  void *v83;
  id v84;
  void *v85;
  id v86;
  uint64_t v87;
  id v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  uint64_t v93;
  NSObject *v94;
  void *v95;
  void *v96;
  uint64_t v97;
  id v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  uint64_t v103;
  NSObject *v104;
  uint64_t v105;
  NSObject *v106;
  void *v108;
  void *v109;
  void *v110;
  NSString *v111;
  id v112;
  NSString *v113;
  void *v114;
  NSString *v115;
  void *v116;
  uint8_t buf[4];
  id v118;
  __int16 v119;
  void *v120;
  __int16 v121;
  id v122;

  v3 = a2;
  v4 = HFLogForCategory(70);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v118 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler HomeKit object lookup succeeded with: %@.", buf, 0xCu);
  }

  switch(*(_QWORD *)(a1 + 48))
  {
    case 0:
    case 8:
    case 0xBLL:
    case 0xCLL:
    case 0xDLL:
    case 0xFLL:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x14:
    case 0x16:
    case 0x17:
    case 0x1ELL:
      v6 = HFLogForCategory(70);
      v7 = objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "URL"));
        *(_DWORD *)buf = 138412290;
        v118 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler unable to handle request for destination: %@.", buf, 0xCu);

      }
      v111 = NSURLErrorFailingURLErrorKey;
      v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "URL"));
      v112 = v9;
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v112, &v111, 1));
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", NSURLErrorDomain, -1002, v10));
      a1 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithError:](NAFuture, "futureWithError:", v11));

      goto LABEL_88;
    case 1:
      v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
      v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "showHomeInvitation:", v3));
      goto LABEL_46;
    case 2:
      v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
      v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "showHome:", v3));
      goto LABEL_46;
    case 3:
      v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
      v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "showRoom:", v3));
      goto LABEL_46;
    case 4:
    case 0x1DLL:
      v9 = v3;
      v13 = HFLogForCategory(70);
      v14 = objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "hf_prettyDescription"));
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "home"));
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "hf_prettyDescription"));
        *(_DWORD *)buf = 138412546;
        v118 = v15;
        v119 = 2112;
        v120 = v17;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Accessory for accessory %@ in home %@.", buf, 0x16u);

      }
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
      if (*(_QWORD *)(a1 + 48) == 29)
        v19 = 3;
      else
        v19 = (uint64_t)objc_msgSend(*(id *)(a1 + 40), "secondaryDestination");
      v25 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "showAccessory:secondaryDestination:", v9, v19));
      goto LABEL_49;
    case 5:
      v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
      v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "showMediaSystem:secondaryDestination:", v3, objc_msgSend(*(id *)(a1 + 40), "secondaryDestination")));
      goto LABEL_46;
    case 6:
      v9 = v3;
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "accessory"));
      v30 = HFLogForCategory(70);
      v31 = objc_claimAutoreleasedReturnValue(v30);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
      {
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "hf_prettyDescription"));
        v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "hf_prettyDescription"));
        v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "home"));
        v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "hf_prettyDescription"));
        *(_DWORD *)buf = 138412802;
        v118 = v32;
        v119 = 2112;
        v120 = v33;
        v121 = 2112;
        v122 = v35;
        _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Camera Profile for camera profile %@ accessory %@ in home %@.", buf, 0x20u);

      }
      if (objc_msgSend(*(id *)(a1 + 40), "secondaryDestination") == (id)1)
      {
        v36 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
        v37 = objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "showSettingsForCameraProfile:", v9));
LABEL_44:
        a1 = v37;
      }
      else
      {
        v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "URL"));
        v65 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v64, "absoluteString"));
        v66 = (void *)objc_claimAutoreleasedReturnValue(+[HFCameraUtilities cameraFeedbackQueryString](HFCameraUtilities, "cameraFeedbackQueryString"));
        v67 = objc_msgSend(v65, "containsString:", v66);

        v68 = *(void **)(a1 + 32);
        if (v67)
        {
          v36 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v68, "navigator"));
          v69 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "valueForParameter:", HFNotificationCameraClipKey));
          v70 = objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "showFeedbackFlowForCameraClipID:cameraProfile:", v69, v9));
LABEL_84:
          a1 = v70;
        }
        else
        {
          v36 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v68, "_startDateForURLComponents:", *(_QWORD *)(a1 + 40)));
          v69 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_startDateForURLComponents:", *(_QWORD *)(a1 + 40)));
          v108 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
          v109 = v108;
          if (v36 && v69)
          {
            a1 = objc_claimAutoreleasedReturnValue(objc_msgSend(v108, "showRoomContainedCamera:startDate:endDate:", v9, v36, v69));
          }
          else
          {
            v110 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "valueForParameter:", HFNotificationCameraClipKey));
            a1 = objc_claimAutoreleasedReturnValue(objc_msgSend(v109, "showCameraProfile:clipID:", v9, v110));

          }
        }

      }
      goto LABEL_87;
    case 7:
      v9 = v3;
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "accessory"));
      v38 = HFLogForCategory(70);
      v39 = objc_claimAutoreleasedReturnValue(v38);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
      {
        v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "hf_prettyDescription"));
        v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "hf_prettyDescription"));
        v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "home"));
        v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v42, "hf_prettyDescription"));
        *(_DWORD *)buf = 138412802;
        v118 = v40;
        v119 = 2112;
        v120 = v41;
        v121 = 2112;
        v122 = v43;
        _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Service for service %@ accessory %@ in home %@.", buf, 0x20u);

      }
      v36 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
      v37 = objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "showService:secondaryDestination:", v9, objc_msgSend(*(id *)(a1 + 40), "secondaryDestination")));
      goto LABEL_44;
    case 9:
      v44 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
      v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v44, "homeManager"));
      v46 = objc_alloc((Class)NSUUID);
      v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "valueForParameter:", HFURLComponentsHome));
      v48 = objc_msgSend(v46, "initWithUUIDString:", v47);
      v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v45, "hf_homeWithIdentifier:", v48));
      v50 = v49;
      if (v49)
      {
        v9 = v49;
      }
      else
      {
        v76 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
        v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v76, "home"));

      }
      v77 = objc_alloc((Class)NSUUID);
      v78 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "valueForParameter:", HFURLComponentsPersonManager));
      v79 = objc_msgSend(v77, "initWithUUIDString:", v78);
      v80 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "hf_personManagerWithIdentifier:", v79));
      v81 = v80;
      if (v80)
        v82 = v80;
      else
        v82 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "personManager"));
      v18 = v82;

      v97 = objc_opt_class(HMPerson);
      v98 = v3;
      v99 = v98;
      if (v98)
      {
        if ((objc_opt_isKindOfClass(v98, v97) & 1) != 0)
          v100 = v99;
        else
          v100 = 0;
        v36 = v100;
        if (!v36)
        {
          v101 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
          v102 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"));
          objc_msgSend(v101, "handleFailureInFunction:file:lineNumber:description:", v102, CFSTR("NSObject+NAAdditions.h"), 54, CFSTR("Expected class of %@ but was %@"), v97, objc_opt_class(v99));

        }
      }
      else
      {
        v36 = 0;
      }

      v105 = HFLogForCategory(19);
      v106 = objc_claimAutoreleasedReturnValue(v105);
      if (os_log_type_enabled(v106, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412802;
        v118 = v36;
        v119 = 2112;
        v120 = v18;
        v121 = 2112;
        v122 = v9;
        _os_log_impl((void *)&_mh_execute_header, v106, OS_LOG_TYPE_DEFAULT, "Presenting face recognition settings for person:%@ personManager:%@ home:%@", buf, 0x20u);
      }

      v69 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
      v70 = objc_claimAutoreleasedReturnValue(objc_msgSend(v69, "showFaceRecognitionSettingsForPerson:personManager:inHome:", v36, v18, v9));
      goto LABEL_84;
    case 0xALL:
      v51 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
      v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v51, "homeManager"));
      v53 = objc_alloc((Class)NSUUID);
      v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "valueForParameter:", HFURLComponentsHome));
      v55 = objc_msgSend(v53, "initWithUUIDString:", v54);
      v56 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v52, "hf_homeWithIdentifier:", v55));
      v57 = v56;
      if (v56)
      {
        v9 = v56;
      }
      else
      {
        v83 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
        v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v83, "home"));

      }
      v84 = objc_alloc((Class)NSUUID);
      v85 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "valueForParameter:", HFURLComponentsCameraProfile));
      v86 = objc_msgSend(v84, "initWithUUIDString:", v85);
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "hf_cameraProfileWithIdentifier:", v86));

      v87 = objc_opt_class(HMCameraSignificantEvent);
      v88 = v3;
      v89 = v88;
      if (v88)
      {
        if ((objc_opt_isKindOfClass(v88, v87) & 1) != 0)
          v90 = v89;
        else
          v90 = 0;
        v36 = v90;
        if (!v36)
        {
          v91 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
          v92 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"));
          objc_msgSend(v91, "handleFailureInFunction:file:lineNumber:description:", v92, CFSTR("NSObject+NAAdditions.h"), 54, CFSTR("Expected class of %@ but was %@"), v87, objc_opt_class(v89));

        }
      }
      else
      {
        v36 = 0;
      }

      v103 = HFLogForCategory(19);
      v104 = objc_claimAutoreleasedReturnValue(v103);
      if (os_log_type_enabled(v104, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412802;
        v118 = v36;
        v119 = 2112;
        v120 = v18;
        v121 = 2112;
        v122 = v9;
        _os_log_impl((void *)&_mh_execute_header, v104, OS_LOG_TYPE_DEFAULT, "Presenting face recognition settings for unknown person event:%@ cameraProfile:%@ home:%@", buf, 0x20u);
      }

      v69 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
      v70 = objc_claimAutoreleasedReturnValue(objc_msgSend(v69, "showFaceRecognitionSettingsForUnknownPersonEvent:inHome:", v36, v9));
      goto LABEL_84;
    case 0xELL:
    case 0x13:
      v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
      v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "showSoftwareUpdateForHome:", v3));
      goto LABEL_46;
    case 0x15:
      v9 = v3;
      v20 = HFLogForCategory(70);
      v21 = objc_claimAutoreleasedReturnValue(v20);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "hf_prettyDescription"));
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "home"));
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "hf_prettyDescription"));
        *(_DWORD *)buf = 138412546;
        v118 = v22;
        v119 = 2112;
        v120 = v24;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Bridge Settings for accessory %@ in home %@.", buf, 0x16u);

      }
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
      v25 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "showBridgeSettingsForAccessory:", v9));
      goto LABEL_49;
    case 0x18:
      v58 = HFLogForCategory(70);
      v59 = objc_claimAutoreleasedReturnValue(v58);
      if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v118 = v3;
        _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open User settings for Locks for home %@.", buf, 0xCu);
      }

      v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
      v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "showUserLockSettingsForHome:", v3));
      goto LABEL_46;
    case 0x19:
      v26 = HFLogForCategory(70);
      v27 = objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v118 = v3;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Locks Onboarding for home %@.", buf, 0xCu);
      }

      v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "valueForParameter:", HFURLLocksOnboardingTypeParameter));
      v28 = objc_msgSend(*(id *)(a1 + 32), "lockOnboardingTypeForString:", v9);
      if (v28)
      {
        v29 = v28;
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
        v25 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "showLocksOnboardingForHome:onboardingType:", v3, v29));
        goto LABEL_49;
      }
      v71 = HFLogForCategory(70);
      v72 = objc_claimAutoreleasedReturnValue(v71);
      if (os_log_type_enabled(v72, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v118 = v9;
        _os_log_impl((void *)&_mh_execute_header, v72, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler unable to handle request for HFURLComponentsDestinationLocksOnboarding with type: %@.", buf, 0xCu);
      }

      v73 = NSURLErrorDomain;
      v115 = NSURLErrorFailingURLErrorKey;
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "URL"));
      v116 = v18;
      v74 = &v116;
      v75 = &v115;
      goto LABEL_68;
    case 0x1ALL:
      v60 = HFLogForCategory(70);
      v61 = objc_claimAutoreleasedReturnValue(v60);
      if (os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v118 = v3;
        _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Locks Firmware Setup for home %@.", buf, 0xCu);
      }

      v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "valueForParameter:", HFURLLocksOnboardingTypeParameter));
      if (objc_msgSend(*(id *)(a1 + 32), "lockOnboardingTypeForString:", v9))
      {
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
        v25 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "showLocksFirmwareSetupForHome:", v3));
LABEL_49:
        a1 = v25;
      }
      else
      {
        v93 = HFLogForCategory(70);
        v94 = objc_claimAutoreleasedReturnValue(v93);
        if (os_log_type_enabled(v94, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v118 = v9;
          _os_log_impl((void *)&_mh_execute_header, v94, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler unable to handle request for HFURLComponentsDestinationLocksFirmwareUpdateSetup with type: %@.", buf, 0xCu);
        }

        v73 = NSURLErrorDomain;
        v113 = NSURLErrorFailingURLErrorKey;
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "URL"));
        v114 = v18;
        v74 = &v114;
        v75 = &v113;
LABEL_68:
        v95 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v74, v75, 1));
        v96 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", v73, -1002, v95));
        a1 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithError:](NAFuture, "futureWithError:", v96));

      }
LABEL_87:

LABEL_88:
LABEL_89:

      return (id)a1;
    case 0x1BLL:
      v9 = v3;
      v62 = HFLogForCategory(70);
      v63 = objc_claimAutoreleasedReturnValue(v62);
      if (os_log_type_enabled(v63, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v118 = v9;
        _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Drop In UI for accessory %@.", buf, 0xCu);
      }

      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
      v36 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "home"));
      v37 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "showDropInUI:home:", v9, v36));
      goto LABEL_44;
    case 0x1CLL:
      v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigator"));
      v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "showDefaultAccountForHome:", v3));
LABEL_46:
      a1 = v12;
      goto LABEL_88;
    default:
      goto LABEL_89;
  }
}

NAFuture *__cdecl sub_100024630(id a1, NSError *a2)
{
  return +[NAFuture futureWithError:](NAFuture, "futureWithError:", a2);
}

void sub_100024640(id a1, NSError *a2)
{
  NSError *v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a2;
  v3 = HFLogForCategory(0);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_100077DDC((uint64_t)v2, v4, v5, v6, v7, v8, v9, v10);

}

id sub_10002487C(uint64_t a1, int a2)
{
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;

  if (a2)
  {
    v3 = HFLogForCategory(70);
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v15 = 138412290;
      v16 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler opened application URL: %@.", (uint8_t *)&v15, 0xCu);
    }

    return objc_msgSend(*(id *)(a1 + 40), "finishWithNoResult");
  }
  else
  {
    v7 = HFLogForCategory(0);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_100077E44(a1, v8, v9, v10, v11, v12, v13, v14);

    return objc_msgSend(*(id *)(a1 + 40), "finishWithError:", *(_QWORD *)(a1 + 48));
  }
}

void sub_100024A28(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  unint64_t v5;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  void *v17;
  id v18;
  _QWORD v19[4];
  id v20;
  uint64_t v21;
  uint8_t buf[4];
  id v23;
  __int16 v24;
  id v25;

  v3 = a2;
  if (*(_QWORD *)(a1 + 32))
  {
    v4 = objc_msgSend(objc_alloc((Class)HFURLComponents), "initWithURL:", *(_QWORD *)(a1 + 32));
    v5 = (unint64_t)objc_msgSend(v4, "destination");
    if (v5 > 7 || ((1 << v5) & 0xD0) == 0)
    {
      v15 = HFLogForCategory(70);
      v16 = objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        v17 = *(void **)(a1 + 32);
        *(_DWORD *)buf = 138412546;
        v23 = v17;
        v24 = 2112;
        v25 = v3;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handle show notification settings (URL: %@) for home: %@.", buf, 0x16u);
      }

      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "navigator"));
      v18 = objc_msgSend(v11, "showNotificationSettingsForHome:", v3);
    }
    else
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "homeKitObjectFuture"));
      v19[0] = _NSConcreteStackBlock;
      v19[1] = 3221225472;
      v19[2] = sub_100024C38;
      v19[3] = &unk_1000B6700;
      v8 = v3;
      v9 = *(_QWORD *)(a1 + 40);
      v20 = v8;
      v21 = v9;
      v10 = objc_msgSend(v7, "addSuccessBlock:", v19);

      v11 = v20;
    }

  }
  else
  {
    v12 = HFLogForCategory(70);
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v23 = v3;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handle show notification settings (missing objectURL) for home: %@.", buf, 0xCu);
    }

    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "navigator"));
    v14 = objc_msgSend(v4, "showNotificationSettingsForHome:", v3);
  }

}

void sub_100024C38(uint64_t a1, void *a2)
{
  id v3;
  __objc2_prot *v4;
  void *v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint8_t buf[4];
  id v14;
  __int16 v15;
  uint64_t v16;

  v3 = a2;
  v4 = &OBJC_PROTOCOL___HFUserNotificationServiceSettingsProviding;
  if (objc_msgSend(v3, "conformsToProtocol:", v4))
    v5 = v3;
  else
    v5 = 0;
  v6 = v5;

  if (v6)
  {
    v7 = HFLogForCategory(70);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      v14 = v3;
      v15 = 2112;
      v16 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handle show notification settings for object: %@ in home: %@.", buf, 0x16u);
    }

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "navigator"));
    v11 = objc_msgSend(v10, "showNotificationSettingsForHomeKitObject:inHome:", v6, *(_QWORD *)(a1 + 32));
  }
  else
  {
    NSLog(CFSTR("Received unexpected object %@ that does not support notifications!"), v3);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "navigator"));
    v12 = objc_msgSend(v10, "showNotificationSettingsForHome:", *(_QWORD *)(a1 + 32));
  }

}

id sub_1000250F4(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v3 = a2;
  v4 = objc_opt_class(HMService);
  v5 = v3;
  if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0)
    v6 = v5;
  else
    v6 = 0;
  v7 = v6;

  if (!v7)
    NSLog(CFSTR("Expected an HMService: %@"), v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "room"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "uniqueIdentifier"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "accessory"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "room"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "uniqueIdentifier"));
  v13 = objc_msgSend(v9, "isEqual:", v12);

  return v13;
}

id sub_1000251F4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishWithError:", a2);
}

void sub_100025200(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v3 = a2;
  v13 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "addedItems"));

  v5 = objc_msgSend(v4, "count");
  if (!v5)
    objc_msgSend(v13, "setObject:forKeyedSubscript:", &__kCFBooleanTrue, HFResultHiddenKey);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "room"));

  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "room"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "accessories"));
    objc_msgSend(v7, "addObjectsFromArray:", v9);

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "room"));
    objc_msgSend(v7, "addObject:", v10);

    objc_msgSend(v13, "setObject:forKeyedSubscript:", v7, HFResultDependentHomeKitObjectsKey);
  }
  v11 = *(void **)(a1 + 40);
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[HFItemUpdateOutcome outcomeWithResults:](HFItemUpdateOutcome, "outcomeWithResults:", v13));
  objc_msgSend(v11, "finishWithResult:", v12);

}

void sub_100025C68(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_100025C90(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  _QWORD v9[5];
  uint8_t buf[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ((objc_msgSend(WeakRetained, "initialLoadCompleted") & 1) != 0
    || (v3 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher")),
        v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "home")),
        v4,
        v3,
        !v4))
  {
    v7 = HFLogForCategory(59);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "sidebar item manager finishes its initial load but split view already did its intial load", buf, 2u);
    }

  }
  else
  {
    v5 = HFLogForCategory(59);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "initial load after sidebar item manager finishes intial load", buf, 2u);
    }

    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_100025DF0;
    v9[3] = &unk_1000B5A50;
    v9[4] = WeakRetained;
    objc_msgSend(WeakRetained, "_allowingMutationsInDelegateCallback:", v9);
    objc_msgSend(WeakRetained, "setInitialLoadCompleted:", 1);
    if (*(_BYTE *)(a1 + 40))
      objc_msgSend(WeakRetained, "setPreferredDisplayMode:", 0);
  }

}

id sub_100025DF0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_initialLoad");
}

void sub_100025DF8(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "primaryNavigationController"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sideBarViewController"));
  objc_msgSend(v3, "pushViewController:animated:", v2, 0);

}

void sub_1000262C0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1000262DC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  _QWORD v11[4];
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "hu_preloadContent"));
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1000263F0;
  v11[3] = &unk_1000B67F0;
  v8 = *(id *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v12 = v8;
  v13 = v9;
  objc_copyWeak(&v16, (id *)(a1 + 64));
  v14 = *(id *)(a1 + 32);
  v15 = *(id *)(a1 + 56);
  v10 = objc_msgSend(v7, "addCompletionBlock:", v11);

  objc_destroyWeak(&v16);
}

void sub_1000263DC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_1000263F0(id *a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  NSObject *WeakRetained;
  id v8;
  _QWORD v10[5];
  id v11;
  id v12;
  uint8_t buf[4];
  const char *v14;
  __int16 v15;
  id v16;

  v2 = a1[4];
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[HFStateRestorationSettings sharedInstance](HFStateRestorationSettings, "sharedInstance"));
  objc_msgSend(v3, "setSelectedHomeAppTabIdentifier:", v2);

  v4 = a1[4];
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[HUSideBarSelectionManager sharedManager](HUSideBarSelectionManager, "sharedManager"));
  objc_msgSend(v5, "setCurrentTabIdentifier:", v4);

  if (objc_msgSend(a1[5], "_isCollapsed"))
    NSLog(CFSTR("trying to select tab: %@ through SplitViewController while in compact mode"), a1[4]);
  if ((objc_msgSend(a1[5], "_isCollapsed") & 1) != 0)
  {
    v6 = HFLogForCategory(59);
    WeakRetained = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_DEFAULT))
    {
      v8 = a1[4];
      *(_DWORD *)buf = 136315394;
      v14 = "-[HOSplitViewController selectTabWithIdentifier:]_block_invoke";
      v15 = 2112;
      v16 = v8;
      _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_DEFAULT, "(%s) trying to select tab: %@ through SplitViewController while in compact mode", buf, 0x16u);
    }
  }
  else
  {
    WeakRetained = objc_loadWeakRetained(a1 + 8);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1000265A4;
    v10[3] = &unk_1000B67C8;
    v10[4] = WeakRetained;
    v11 = a1[6];
    v12 = a1[4];
    -[NSObject _allowingMutationsInDelegateCallback:](WeakRetained, "_allowingMutationsInDelegateCallback:", v10);

  }
  return objc_msgSend(a1[7], "finishWithResult:", a1[6]);
}

void sub_1000265A4(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  int v7;
  const char *v8;
  __int16 v9;
  uint64_t v10;

  objc_msgSend(*(id *)(a1 + 32), "showDetailViewController:sender:", *(_QWORD *)(a1 + 40), 0);
  v2 = HFLogForCategory(59);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 48);
    v7 = 136315394;
    v8 = "-[HOSplitViewController selectTabWithIdentifier:]_block_invoke_3";
    v9 = 2112;
    v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "(%s) select tab: %@", (uint8_t *)&v7, 0x16u);
  }

  if (*(_QWORD *)(a1 + 48) == HFHomeAppTabIdentifierDiscover)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 1));
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v6, HFAnalyticsDiscoverTabTapCountKey);

    +[HFAnalytics sendEvent:withData:](HFAnalytics, "sendEvent:withData:", 10, v5);
  }
}

void sub_100026F84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100026FA8(id *a1)
{
  uint64_t v2;
  NSObject *WeakRetained;
  uint8_t v4[16];
  _QWORD v5[5];
  id v6;

  if ((objc_msgSend(a1[4], "_isCollapsed") & 1) != 0)
  {
    v2 = HFLogForCategory(59);
    WeakRetained = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_DEFAULT, "skip initial VC presentation through SplitViewController since we are in compact mode", v4, 2u);
    }
  }
  else
  {
    WeakRetained = objc_loadWeakRetained(a1 + 6);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_100027080;
    v5[3] = &unk_1000B6840;
    v5[4] = WeakRetained;
    v6 = a1[5];
    -[NSObject _allowingMutationsInDelegateCallback:](WeakRetained, "_allowingMutationsInDelegateCallback:", v5);

  }
}

id sub_100027080(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "showDetailViewController:sender:", *(_QWORD *)(a1 + 40), 0);
}

NSMutableArray *sub_1000271A0(uint64_t a1)
{
  NSMutableArray *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  v2 = objc_opt_new(NSMutableArray);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "wallpaperView"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "leadingAnchor"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "leadingAnchor"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "constraintEqualToAnchor:", v6));
  -[NSMutableArray addObject:](v2, "addObject:", v7);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "wallpaperView"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "trailingAnchor"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "trailingAnchor"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "constraintEqualToAnchor:", v11));
  -[NSMutableArray addObject:](v2, "addObject:", v12);

  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "wallpaperView"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "bottomAnchor"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "bottomAnchor"));
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "constraintEqualToAnchor:", v16));
  -[NSMutableArray addObject:](v2, "addObject:", v17);

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "wallpaperView"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "topAnchor"));
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "topAnchor"));
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "constraintEqualToAnchor:", v21));
  -[NSMutableArray addObject:](v2, "addObject:", v22);

  return v2;
}

id sub_100027AF0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setPresentsWithGesture:", *(_QWORD *)(a1 + 40) != 2);
}

id sub_100027F84()
{
  if (qword_1000D2780 != -1)
    dispatch_once(&qword_1000D2780, &stru_1000B68D8);
  return (id)qword_1000D2788;
}

void sub_100027FC4(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2788;
  qword_1000D2788 = (uint64_t)&off_1000BF320;

}

id sub_100028230(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "startedTest:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 48), "selectTabWithIdentifier:", HFHomeAppTabIdentifierTriggers);
}

id sub_100028268(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "finishedTest:waitForCommit:extraResults:", *(_QWORD *)(a1 + 40), 1, 0);
}

id sub_10002827C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "failedTest:", *(_QWORD *)(a1 + 40));
}

void sub_10002845C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;

  v3 = a2;
  v4 = objc_opt_class(HUTriggerListViewController);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "topViewController"));

  v6 = v5;
  v7 = v6;
  if (v6)
  {
    if ((objc_opt_isKindOfClass(v6, v4) & 1) != 0)
      v8 = v7;
    else
      v8 = 0;
    v18 = v8;
    if (!v18)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"));
      objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", v10, CFSTR("NSObject+NAAdditions.h"), 54, CFSTR("Expected class of %@ but was %@"), v4, objc_opt_class(v7));

    }
  }
  else
  {
    v18 = 0;
  }

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "tableView"));
  v12 = objc_opt_class(UIScrollView);
  if ((objc_opt_isKindOfClass(v11, v12) & 1) == 0)
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
    objc_msgSend(v17, "handleFailureInMethod:object:file:lineNumber:description:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 32), CFSTR("HOAppDelegate+PerformanceTests.m"), 92, CFSTR("Oops - Expected a scroll view"));

  }
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "valueForKey:", CFSTR("iterations")));
  v14 = objc_msgSend(v13, "intValue");

  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "valueForKey:", CFSTR("offset")));
  v16 = objc_msgSend(v15, "intValue");

  objc_msgSend(v11, "_performScrollTest:iterations:delta:", *(_QWORD *)(a1 + 48), v14, v16);
}

id sub_10002862C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "failedTest:", *(_QWORD *)(a1 + 40));
}

id sub_1000288A8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedTest:", *(_QWORD *)(a1 + 40));
}

void sub_1000288B4(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "localizedDescription"));
  objc_msgSend(v2, "failedTest:withFailure:", v3, v4);

}

id sub_1000288FC(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_deleteRoomWithName:inHome:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

id sub_100028B74(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;

  v3 = a2;
  v4 = objc_alloc_init((Class)NAFuture);
  objc_msgSend(*(id *)(a1 + 32), "startedTest:", *(_QWORD *)(a1 + 40));
  v5 = *(void **)(a1 + 48);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "errorOnlyCompletionHandlerAdapter"));
  objc_msgSend(v5, "removeRoom:completionHandler:", v3, v6);

  return v4;
}

id sub_100028BEC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedTest:", *(_QWORD *)(a1 + 40));
}

void sub_100028BF8(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "localizedDescription"));
  objc_msgSend(v2, "failedTest:withFailure:", v3, v4);

}

void sub_100028DF8(id *a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  _QWORD v13[4];
  id v14;
  id v15;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "home"));

  v4 = a1[4];
  v5 = a1[5];
  if (v3)
  {
    objc_msgSend(v4, "startedTest:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "appNavigator"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "showHomeSettingsForHome:", v3));
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_100028F64;
    v13[3] = &unk_1000B6A18;
    v14 = a1[4];
    v15 = a1[5];
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "addSuccessBlock:", v13));
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100028F70;
    v10[3] = &unk_1000B6950;
    v11 = a1[4];
    v12 = a1[5];
    v9 = objc_msgSend(v8, "addFailureBlock:", v10);

  }
  else
  {
    objc_msgSend(v4, "failedTest:withFailure:", v5, CFSTR("Invalid home"));
  }

}

id sub_100028F64(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedTest:", *(_QWORD *)(a1 + 40));
}

id sub_100028F70(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "failedTest:withFailure:", *(_QWORD *)(a1 + 40), CFSTR("Presentation failed"));
}

id sub_100028F84(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "failedTest:", *(_QWORD *)(a1 + 40));
}

void sub_100029148(id *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "home"));

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "_networkRouterForTestingInHome:", v3));
    v5 = a1[4];
    v6 = a1[5];
    if (v4)
    {
      objc_msgSend(v5, "startedTest:", v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "appNavigator"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "showNetworkSettingsForHome:", v3));
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      v14[2] = sub_1000292EC;
      v14[3] = &unk_1000B6A18;
      v15 = a1[4];
      v16 = a1[5];
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "addSuccessBlock:", v14));
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_1000292F8;
      v11[3] = &unk_1000B6950;
      v12 = a1[4];
      v13 = a1[5];
      v10 = objc_msgSend(v9, "addFailureBlock:", v11);

    }
    else
    {
      objc_msgSend(v5, "failedTest:withFailure:", v6, CFSTR("Invalid network router"));
    }

  }
  else
  {
    objc_msgSend(a1[4], "failedTest:withFailure:", a1[5], CFSTR("Invalid home"));
  }

}

id sub_1000292EC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedTest:", *(_QWORD *)(a1 + 40));
}

id sub_1000292F8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "failedTest:withFailure:", *(_QWORD *)(a1 + 40), CFSTR("Presentation failed"));
}

id sub_10002930C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "failedTest:", *(_QWORD *)(a1 + 40));
}

void sub_1000294D0(id *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "home"));

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "_networkRouterForTestingInHome:", v3));
    v5 = a1[4];
    v6 = a1[5];
    if (v4)
    {
      objc_msgSend(v5, "startedTest:", v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "appNavigator"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "showNetworkSettingsForAccessory:home:", v4, v3));
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      v14[2] = sub_100029678;
      v14[3] = &unk_1000B6A18;
      v15 = a1[4];
      v16 = a1[5];
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "addSuccessBlock:", v14));
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_100029684;
      v11[3] = &unk_1000B6950;
      v12 = a1[4];
      v13 = a1[5];
      v10 = objc_msgSend(v9, "addFailureBlock:", v11);

    }
    else
    {
      objc_msgSend(v5, "failedTest:withFailure:", v6, CFSTR("Invalid network router profile"));
    }

  }
  else
  {
    objc_msgSend(a1[4], "failedTest:withFailure:", a1[5], CFSTR("Invalid home"));
  }

}

id sub_100029678(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedTest:", *(_QWORD *)(a1 + 40));
}

id sub_100029684(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "failedTest:withFailure:", *(_QWORD *)(a1 + 40), CFSTR("Presentation failed"));
}

id sub_100029698(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "failedTest:", *(_QWORD *)(a1 + 40));
}

void sub_100029880(id *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "home"));

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "_networkRouterForTestingInHome:", v3));
    if (v4)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "_networkConfigurationProfileForTestingInHome:", v3));
      v6 = a1[4];
      v7 = a1[5];
      if (v5)
      {
        objc_msgSend(v6, "startedTest:", v7);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "appNavigator"));
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "showNetworkSettingsForNetworkConfigurationProfile:home:", v5, v3));
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472;
        v15[2] = sub_100029A58;
        v15[3] = &unk_1000B6A18;
        v16 = a1[4];
        v17 = a1[5];
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "addSuccessBlock:", v15));
        v12[0] = _NSConcreteStackBlock;
        v12[1] = 3221225472;
        v12[2] = sub_100029A64;
        v12[3] = &unk_1000B6950;
        v13 = a1[4];
        v14 = a1[5];
        v11 = objc_msgSend(v10, "addFailureBlock:", v12);

      }
      else
      {
        objc_msgSend(v6, "failedTest:withFailure:", v7, CFSTR("Invalid network configuration profile"));
      }

    }
    else
    {
      objc_msgSend(a1[4], "failedTest:withFailure:", a1[5], CFSTR("Invalid network router"));
    }

  }
  else
  {
    objc_msgSend(a1[4], "failedTest:withFailure:", a1[5], CFSTR("Invalid home"));
  }

}

id sub_100029A58(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedTest:", *(_QWORD *)(a1 + 40));
}

id sub_100029A64(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "failedTest:withFailure:", *(_QWORD *)(a1 + 40), CFSTR("Presentation failed"));
}

id sub_100029A78(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "failedTest:", *(_QWORD *)(a1 + 40));
}

void sub_100029DFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100029E18(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100029E28(uint64_t a1)
{

}

id sub_100029E30(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  v3 = a2;
  v4 = objc_opt_class(HUDashboardViewController);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "topViewController"));

  v6 = v5;
  v7 = v6;
  if (v6)
  {
    if ((objc_opt_isKindOfClass(v6, v4) & 1) != 0)
      v8 = v7;
    else
      v8 = 0;
    v9 = v8;
    if (!v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"));
      objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, CFSTR("NSObject+NAAdditions.h"), 54, CFSTR("Expected class of %@ but was %@"), v4, objc_opt_class(v7));

    }
  }
  else
  {
    v9 = 0;
  }

  v12 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v13 = *(void **)(v12 + 40);
  *(_QWORD *)(v12 + 40) = v9;

  v14 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "home"));

  if (v15)
  {
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "_cameraProfileForTestingInHome:withUUID:", v15, *(_QWORD *)(a1 + 56)));
    if (v16)
    {
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "appNavigator"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "showCameraProfile:clipID:", v16, 0));

    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "failedTest:withFailure:", *(_QWORD *)(a1 + 40), CFSTR("Invalid camera profile"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
    }

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "failedTest:withFailure:", *(_QWORD *)(a1 + 40), CFSTR("Invalid home"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
  }

  return v18;
}

id sub_10002A00C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "ppt_cameraController"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "ppt_cameraController"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ppt_clipsLoadedFuture"));

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "failedTest:withFailure:", *(_QWORD *)(a1 + 40), CFSTR("The dashboard's camera controller is nil"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
  }
  return v4;
}

void sub_10002A09C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "ppt_cameraController"));
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "ppt_clipCollectionView"));

  if (v8)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "valueForKey:", CFSTR("iterations")));
    v4 = objc_msgSend(v3, "intValue");

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "valueForKey:", CFSTR("duration")));
    v6 = objc_alloc_init((Class)NSNumberFormatter);
    objc_msgSend(v6, "setNumberStyle:", 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "numberFromString:", v5));
    objc_msgSend(v8, "_performTranslationScrollTest:duration:iterations:scrollAxis:", *(_QWORD *)(a1 + 40), v4, 1, (double)(int)objc_msgSend(v7, "intValue"));

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "failedTest:withFailure:", *(_QWORD *)(a1 + 40), CFSTR("Failed to find clip collection view"));
  }

}

void sub_10002A1AC(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "localizedDescription"));
  objc_msgSend(v2, "failedTest:withFailure:", v3, v4);

}

void sub_10002A3A8(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;

  v3 = a2;
  v4 = objc_opt_class(HUDashboardViewController);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "topViewController"));

  if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0)
    v6 = v5;
  else
    v6 = 0;
  v7 = v6;

  if (v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "itemManager"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "allDisplayedItems"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "na_firstObjectPassingTest:", &stru_1000B6AF8));

    v11 = *(void **)(a1 + 32);
    v12 = *(_QWORD *)(a1 + 40);
    if (v10)
    {
      objc_msgSend(v11, "startedTest:", v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "_performTapActionForItem:tappedArea:", v10, HUTileCellTappableAreaStateToggleButton));
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      v15[2] = sub_10002A630;
      v15[3] = &unk_1000B6B20;
      v16 = *(id *)(a1 + 32);
      v17 = *(id *)(a1 + 40);
      v14 = objc_msgSend(v13, "addCompletionBlock:", v15);

    }
    else
    {
      objc_msgSend(v11, "failedTest:withFailure:", v12, CFSTR("cannot found any light service item"));
    }

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "failedTest:withFailure:", *(_QWORD *)(a1 + 40), CFSTR("cannot find dashboardViewController"));
  }

}

BOOL sub_10002A52C(id a1, HFItem *a2)
{
  HFItem *v2;
  HFItem *v3;
  HFItem *v4;
  HFItem *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;

  v2 = a2;
  if (-[HFItem conformsToProtocol:](v2, "conformsToProtocol:", &OBJC_PROTOCOL___HFAccessoryRepresentableItem))v3 = v2;
  else
    v3 = 0;
  v4 = v3;
  v5 = v4;
  if (v4)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(-[HFItem accessoryRepresentableObject](v4, "accessoryRepresentableObject"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "hf_containedServices"));
    if (objc_msgSend(v7, "count") == (id)1)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "hf_containedServices"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "allObjects"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "firstObject"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "serviceType"));
      v12 = objc_msgSend(v11, "isEqualToString:", HMServiceTypeLightbulb);

    }
    else
    {
      v12 = 0;
    }

  }
  else
  {
    v12 = 0;
  }

  return v12;
}

id sub_10002A630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;

  v5 = *(void **)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if (a3)
    return objc_msgSend(v5, "failedTest:withFailure:", v6, CFSTR("failed to tap light service item"));
  else
    return objc_msgSend(v5, "finishedTest:", v6);
}

id sub_10002A654(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "failedTest:", *(_QWORD *)(a1 + 40));
}

void sub_10002A814(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;

  v3 = a2;
  v4 = objc_opt_class(HUDashboardViewController);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "topViewController"));

  if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0)
    v6 = v5;
  else
    v6 = 0;
  v7 = v6;

  if (v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "itemManager"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "allDisplayedItems"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "na_firstObjectPassingTest:", &stru_1000B6B40));

    v11 = *(void **)(a1 + 32);
    v12 = *(_QWORD *)(a1 + 40);
    if (v10)
    {
      objc_msgSend(v11, "startedTest:", v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "_performTapActionForItem:tappedArea:", v10, HUTileCellTappableAreaStateToggleButton));
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      v15[2] = sub_10002A9E0;
      v15[3] = &unk_1000B6B20;
      v16 = *(id *)(a1 + 32);
      v17 = *(id *)(a1 + 40);
      v14 = objc_msgSend(v13, "addCompletionBlock:", v15);

    }
    else
    {
      objc_msgSend(v11, "failedTest:withFailure:", v12, CFSTR("cannot found any action set item"));
    }

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "failedTest:withFailure:", *(_QWORD *)(a1 + 40), CFSTR("cannot find dashboardViewController"));
  }

}

BOOL sub_10002A998(id a1, HFItem *a2)
{
  HFItem *v2;
  uint64_t v3;
  char isKindOfClass;

  v2 = a2;
  v3 = objc_opt_class(HFActionSetItem);
  isKindOfClass = objc_opt_isKindOfClass(v2, v3);

  return isKindOfClass & 1;
}

id sub_10002A9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;

  v5 = *(void **)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if (a3)
    return objc_msgSend(v5, "failedTest:withFailure:", v6, CFSTR("failed to tap action set item"));
  else
    return objc_msgSend(v5, "finishedTest:", v6);
}

id sub_10002AA04(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "failedTest:", *(_QWORD *)(a1 + 40));
}

NAFuture *__cdecl sub_10002AA70(id a1, HMHome *a2)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[HMHome hf_characteristicValueManager](a2, "hf_characteristicValueManager"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "firstReadCompleteFuture"));

  return (NAFuture *)v3;
}

NAFuture *__cdecl sub_10002AC54(id a1, NSArray *a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[NSArray objectAtIndexedSubscript:](a2, "objectAtIndexedSubscript:", 0));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v2));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NAScheduler schedulerWithDispatchQueue:](NAScheduler, "schedulerWithDispatchQueue:", &_dispatch_main_q));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "reschedule:", v4));

  return (NAFuture *)v5;
}

NAFuture *__cdecl sub_10002ACE4(id a1, UINavigationController *a2)
{
  UINavigationController *v2;
  __objc2_prot *v3;
  UINavigationController *v4;
  UINavigationController *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  _QWORD v12[4];
  UINavigationController *v13;

  v2 = a2;
  v3 = &OBJC_PROTOCOL___HUPreloadableViewController;
  if (-[UINavigationController conformsToProtocol:](v2, "conformsToProtocol:", v3))
    v4 = v2;
  else
    v4 = 0;
  v5 = v4;

  v6 = (void *)objc_claimAutoreleasedReturnValue(-[UINavigationController topViewController](v2, "topViewController"));
  if (objc_msgSend(v6, "conformsToProtocol:", &OBJC_PROTOCOL___HUPreloadableViewController))
    v7 = v6;
  else
    v7 = 0;
  v8 = v7;

  if (v8)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "hu_preloadContent"));
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_10002AE08;
    v12[3] = &unk_1000B6C28;
    v13 = v2;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "flatMap:", v12));

  }
  else
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v2));
  }

  return (NAFuture *)v10;
}

NAFuture *sub_10002AE08(uint64_t a1)
{
  return +[NAFuture futureWithResult:](NAFuture, "futureWithResult:", *(_QWORD *)(a1 + 32));
}

NAFuture *__cdecl sub_10002AE1C(id a1, UINavigationController *a2)
{
  UINavigationController *v2;
  void *v3;
  void *v4;
  char v5;
  void *v6;
  uint64_t v7;
  UINavigationController *v8;
  void *v9;
  _QWORD v11[4];
  UINavigationController *v12;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(-[UINavigationController topViewController](v2, "topViewController"));
  v5 = objc_opt_respondsToSelector(v4, "hu_performanceTestReadyFuture");

  if ((v5 & 1) != 0)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(-[UINavigationController topViewController](v2, "topViewController"));
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "hu_performanceTestReadyFuture"));

    v3 = (void *)v7;
  }
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10002AF10;
  v11[3] = &unk_1000B6C70;
  v12 = v2;
  v8 = v2;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "flatMap:", v11));

  return (NAFuture *)v9;
}

NAFuture *sub_10002AF10(uint64_t a1)
{
  return +[NAFuture futureWithResult:](NAFuture, "futureWithResult:", *(_QWORD *)(a1 + 32));
}

NAFuture *__cdecl sub_10002AF24(id a1, id a2)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  _QWORD v13[4];
  id v14;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "home"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "hf_characteristicValueManager"));

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "characteristicsWithPendingReads"));
  v8 = objc_msgSend(v7, "count");

  if (v8)
  {
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "firstReadCompleteFuture"));

    v3 = (void *)v9;
  }
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10002B040;
  v13[3] = &unk_1000B6C70;
  v14 = v2;
  v10 = v2;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "flatMap:", v13));

  return (NAFuture *)v11;
}

NAFuture *sub_10002B040(uint64_t a1)
{
  return +[NAFuture futureWithResult:](NAFuture, "futureWithResult:", *(_QWORD *)(a1 + 32));
}

int64_t sub_10002B0B0(id a1, HMAccessory *a2, HMAccessory *a3)
{
  HMAccessory *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[HMAccessory name](a2, "name"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[HMAccessory name](v4, "name"));

  v7 = objc_msgSend(v5, "compare:", v6);
  return (int64_t)v7;
}

int64_t sub_10002B178(id a1, HMNetworkConfigurationProfile *a2, HMNetworkConfigurationProfile *a3)
{
  HMNetworkConfigurationProfile *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[HMNetworkConfigurationProfile accessory](a2, "accessory"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "name"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(-[HMNetworkConfigurationProfile accessory](v4, "accessory"));

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "name"));
  v9 = objc_msgSend(v6, "compare:", v8);

  return (int64_t)v9;
}

int64_t sub_10002B254(id a1, HMAccessory *a2, HMAccessory *a3)
{
  HMAccessory *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[HMAccessory name](a2, "name"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[HMAccessory name](v4, "name"));

  v7 = objc_msgSend(v5, "compare:", v6);
  return (int64_t)v7;
}

void sub_10002B3E0(id a1, NSError *a2)
{
  NSError *v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a2;
  if (v2)
  {
    v3 = HFLogForCategory(0);
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_100078020((uint64_t)v2, v4, v5, v6, v7, v8, v9, v10);

  }
}

void sub_10002B5BC(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  objc_msgSend(v2, "finishedTest:", *(_QWORD *)(a1 + 32));

}

id *sub_10002B788(id *result, char a2)
{
  if ((a2 & 1) == 0)
    return (id *)objc_msgSend(result[4], "finishWithNoResult");
  return result;
}

id sub_10002B79C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishWithNoResult");
}

id sub_10002B7A4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_simulateScrollWithTranslation:numIterations:duration:reversed:", (*(_DWORD *)(a1 + 64) - 1), *(_BYTE *)(a1 + 68) == 0, *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56));
}

void sub_10002B7CC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

id sub_10002BDA0()
{
  if (qword_1000D2790 != -1)
    dispatch_once(&qword_1000D2790, &stru_1000B6E20);
  return (id)qword_1000D2798;
}

void sub_10002BDE0(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2798;
  qword_1000D2798 = (uint64_t)&off_1000BF338;

}

void sub_10002BF64(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

id sub_10002BF90(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  void *v7;
  _QWORD v9[5];
  id v10;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_selectTabWithIdentifier:animated:", HFHomeAppTabIdentifierHome, 1));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10002C050;
  v9[3] = &unk_1000B6E68;
  v9[4] = WeakRetained;
  v10 = v3;
  v6 = v3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "flatMap:", v9));

  return v7;
}

NAFuture *sub_10002C050(uint64_t a1)
{
  id v1;

  v1 = objc_msgSend(*(id *)(a1 + 32), "_selectHome:", *(_QWORD *)(a1 + 40));
  return +[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult");
}

id sub_10002C07C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  _QWORD v6[4];
  id v7;
  id v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_selectTabWithIdentifier:animated:", HFHomeAppTabIdentifierHome, 1));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10002C130;
  v6[3] = &unk_1000B6E68;
  v7 = *(id *)(a1 + 32);
  v8 = WeakRetained;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "flatMap:", v6));

  return v4;
}

NAFuture *sub_10002C130(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(void **)(a1 + 40);
  if (*(_QWORD *)(a1 + 32))
  {
    objc_msgSend(*(id *)(a1 + 40), "_createHomeWithName:");
  }
  else
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "home"));
    v4 = objc_msgSend(v1, "_selectHome:", v3);

  }
  return +[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult");
}

void sub_10002C248(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id sub_10002C264(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  void *v7;
  _QWORD v9[5];
  id v10;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_selectTabWithIdentifier:animated:", HFHomeAppTabIdentifierHome, 1));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10002C324;
  v9[3] = &unk_1000B6E68;
  v9[4] = WeakRetained;
  v10 = v3;
  v6 = v3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "flatMap:", v9));

  return v7;
}

NAFuture *sub_10002C324(uint64_t a1)
{
  id v1;

  v1 = objc_msgSend(*(id *)(a1 + 32), "_selectHome:", *(_QWORD *)(a1 + 40));
  return +[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult");
}

void sub_10002C488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10002C4A4(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "rooms"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("name LIKE[cd] %@"), *(_QWORD *)(a1 + 32)));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "filteredArrayUsingPredicate:", v6));

  if (objc_msgSend(v7, "count"))
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "firstObject"));
    v9 = objc_msgSend(WeakRetained, "showRoom:", v8);
    v10 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v8));
  }
  else
  {
    objc_msgSend(WeakRetained, "_createRoomWithName:home:", *(_QWORD *)(a1 + 32), v3);
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSError hf_errorWithCode:](NSError, "hf_errorWithCode:", 30));
    v10 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithError:](NAFuture, "futureWithError:", v8));
  }
  v11 = (void *)v10;

  return v11;
}

NAFuture *__cdecl sub_10002C5DC(id a1, NSError *a2)
{
  return +[NAFuture futureWithError:](NAFuture, "futureWithError:", a2);
}

void sub_10002C6C4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10002C6E0(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  id v7;
  _QWORD v8[5];
  id v9;
  id v10;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (*(_BYTE *)(a1 + 48))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_selectTabWithIdentifier:animated:", HFHomeAppTabIdentifierHome, 1));
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_10002C7D0;
    v8[3] = &unk_1000B6F28;
    v8[4] = v5;
    v9 = *(id *)(a1 + 32);
    v10 = v3;
    v7 = objc_msgSend(v6, "addCompletionBlock:", v8);

  }
  else
  {
    objc_msgSend(WeakRetained, "_showCreateOrEditActionSetViewControllerWithActionSetName:home:", *(_QWORD *)(a1 + 32), v3);
  }

}

id sub_10002C7D0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_showCreateOrEditActionSetViewControllerWithActionSetName:home:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_10002CAA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10002CAC8(_QWORD *a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v3 = (id *)(a1 + 7);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "hf_roomWithName:", a1[4]));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_serviceWithName:type:home:room:", a1[5], a1[6], v4, v6));

  if (v7)
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "showService:secondaryDestination:", v7, 0));
  else
    v8 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
  v9 = (void *)v8;

  return v9;
}

void sub_10002CD94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10002CDB8(id *a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  void *v7;
  _QWORD v9[4];
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained(a1 + 9);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_selectHome:", v3));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10002CED0;
  v9[3] = &unk_1000B6FC8;
  v10 = v3;
  v11 = a1[4];
  v12 = a1[5];
  v13 = WeakRetained;
  v14 = a1[6];
  v15 = a1[7];
  v16 = a1[8];
  v6 = v3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "flatMap:", v9));

  return v7;
}

id sub_10002CED0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  BOOL v8;
  void *v9;
  uint64_t v10;
  _QWORD v12[4];
  id v13;
  id v14;
  id v15;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "hf_roomWithName:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)v2;
  v4 = *(_QWORD *)(a1 + 48);
  if (v4 | v2)
  {
    if (!v4)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v2, "hf_allCameraProfiles"));
      if ((unint64_t)objc_msgSend(v6, "count") > 1)
      {
        v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "showRoom:", v3));
        goto LABEL_13;
      }

      v4 = *(_QWORD *)(a1 + 48);
    }
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "_cameraProfileWithName:home:room:", v4, *(_QWORD *)(a1 + 32), v3));
    v7 = *(void **)(a1 + 56);
    if (v6)
      v8 = v3 == 0;
    else
      v8 = 0;
    if (!v8)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "_showRoom:animated:", v3, 0));
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      v12[2] = sub_10002D054;
      v12[3] = &unk_1000B6FA0;
      v13 = v6;
      v14 = *(id *)(a1 + 72);
      v15 = *(id *)(a1 + 80);
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "flatMap:", v12));

LABEL_14:
      goto LABEL_15;
    }
    v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "showRoomContainedCamera:startDate:endDate:", v6, *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80)));
LABEL_13:
    v5 = (void *)v10;
    goto LABEL_14;
  }
  objc_msgSend(*(id *)(a1 + 56), "showHomeForName:", *(_QWORD *)(a1 + 64));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
LABEL_15:

  return v5;
}

id sub_10002D054(_QWORD *a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  int v10;
  uint64_t v11;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "presentCameraProfile:startDate:endDate:animated:") & 1) != 0)
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "presentCameraProfile:startDate:endDate:animated:", a1[4], a1[5], a1[6], 1));
  }
  else
  {
    v5 = HFLogForCategory(61);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = a1[4];
      v10 = 138412290;
      v11 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Invalid attempt to display camera %@", (uint8_t *)&v10, 0xCu);
    }

    v4 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
  }
  v8 = (void *)v4;

  return v8;
}

void sub_10002D240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002D264(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id WeakRetained;

  if ((objc_msgSend(a2, "hf_shouldBlockCurrentUserFromHome") & 1) == 0)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_selectTabWithIdentifier:animated:", HFHomeAppTabIdentifierHome, 1));
    v4 = objc_msgSend(v3, "addCompletionBlock:", &stru_1000B7030);

  }
}

void sub_10002D2E8(id a1, UINavigationController *a2, NSError *a3)
{
  id v3;

  v3 = -[UINavigationController popToRootViewControllerAnimated:](a2, "popToRootViewControllerAnimated:", 1);
}

void sub_10002D4A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10002D4C4(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[4];
  id v14;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "hf_allRooms"));

  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10002D5E0;
  v13[3] = &unk_1000B7058;
  v14 = *(id *)(a1 + 32);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "na_firstObjectPassingTest:", v13));

  if (v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "home"));
    objc_msgSend(v9, "hf_setSelectedRoom:", v7);

    v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_showRoom:animated:", v7, 1));
  }
  else
  {
    v10 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
  }
  v11 = (void *)v10;

  return v11;
}

id sub_10002D5E0(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "name"));
  v4 = objc_msgSend(v3, "isEqualToString:", *(_QWORD *)(a1 + 32));

  return v4;
}

NAFuture *__cdecl sub_10002D7BC(id a1, Class a2, id a3)
{
  id v4;
  NSString *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;

  v4 = a3;
  v5 = NSStringFromClass(a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("HOAppNavigator Class Mismatch. Expected %@, but got %@"), v6, v4));

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSError hf_errorWithCode:description:](NSError, "hf_errorWithCode:description:", -1, v7));
  v9 = HFLogForCategory(70);
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    sub_100078088();

  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithError:](NAFuture, "futureWithError:", v8));
  return (NAFuture *)v11;
}

id sub_10002D89C(uint64_t a1, void *a2)
{
  unsigned int v3;
  uint64_t v4;
  NSObject *v5;
  _BOOL4 v6;
  void *v7;
  int v9;
  const char *v10;

  v3 = objc_msgSend(a2, "BOOLValue");
  v4 = HFLogForCategory(70);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v6)
    {
      v9 = 136315138;
      v10 = "-[HOAppNavigator showCardForHomeKitIdentifier:destination:secondaryDestination:inHome:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s, home has changed, _showHomeTabForHome", (uint8_t *)&v9, 0xCu);
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_showHomeTabForHome:animated:", *(_QWORD *)(a1 + 40), 1));
  }
  else
  {
    if (v6)
    {
      v9 = 136315138;
      v10 = "-[HOAppNavigator showCardForHomeKitIdentifier:destination:secondaryDestination:inHome:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s, home has not changed, selectingCurrentTabAnimated", (uint8_t *)&v9, 0xCu);
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_selectCurrentTabAnimated:", 1));
  }
  return v7;
}

NAFuture *__cdecl sub_10002D9C8(id a1, Protocol *a2, id a3)
{
  id v4;
  NSString *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;

  v4 = a3;
  v5 = NSStringFromProtocol(a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("HOAppNavigator Nil Protocol. Expected %@, but got %@"), v6, v4));

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSError hf_errorWithCode:description:](NSError, "hf_errorWithCode:description:", -1, v7));
  v9 = HFLogForCategory(70);
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    sub_100078088();

  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithError:](NAFuture, "futureWithError:", v8));
  return (NAFuture *)v11;
}

id sub_10002DAA8(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  NSObject *v30;
  uint8_t buf[4];
  const char *v32;
  __int16 v33;
  id v34;

  v3 = a2;
  v4 = HFLogForCategory(70);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315394;
    v32 = "-[HOAppNavigator showCardForHomeKitIdentifier:destination:secondaryDestination:inHome:]_block_invoke";
    v33 = 2112;
    v34 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s, navControlFuture completed %@", buf, 0x16u);
  }

  v6 = objc_opt_class(UINavigationController);
  v7 = v3;
  if ((objc_opt_isKindOfClass(v7, v6) & 1) != 0)
    v8 = v7;
  else
    v8 = 0;
  v9 = v8;

  v10 = v7;
  if (v9)
    goto LABEL_7;
  v15 = objc_opt_class(UIViewController);
  v16 = v7;
  if ((objc_opt_isKindOfClass(v16, v15) & 1) != 0)
    v17 = v16;
  else
    v17 = 0;
  v10 = v17;

  if (!v10)
  {
    v24 = *(_QWORD *)(a1 + 48);
    v25 = objc_opt_class(UIViewController);
    v26 = (*(uint64_t (**)(uint64_t, uint64_t, id))(v24 + 16))(v24, v25, v16);
    v22 = (void *)objc_claimAutoreleasedReturnValue(v26);
    goto LABEL_22;
  }
  v18 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "navigationController"));
  if (v18)
  {
    v19 = (void *)v18;

    v10 = v19;
LABEL_7:
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "topViewController"));
    if (objc_msgSend(v11, "conformsToProtocol:", &OBJC_PROTOCOL___HUHomeKitObjectPresenting))
      v12 = v11;
    else
      v12 = 0;
    v13 = v12;

    if (v13)
    {
      v14 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v13));
    }
    else
    {
      v20 = HFLogForCategory(70);
      v21 = objc_claimAutoreleasedReturnValue(v20);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v32 = "-[HOAppNavigator showCardForHomeKitIdentifier:destination:secondaryDestination:inHome:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "%s, We are not in a tab capable of presenting homekit object. Select Home tab.", buf, 0xCu);
      }

      v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_showHomeTabForHome:animated:", *(_QWORD *)(a1 + 40), 1));
    }
    v22 = (void *)v14;

    goto LABEL_22;
  }
  v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("HOAppNavigator Error: No Navigation Controller found from View Controller: %@"), v10));
  v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSError hf_errorWithCode:description:](NSError, "hf_errorWithCode:description:", -1, v27));
  v29 = HFLogForCategory(70);
  v30 = objc_claimAutoreleasedReturnValue(v29);
  if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
    sub_100078088();

  v22 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithError:](NAFuture, "futureWithError:", v28));
LABEL_22:

  return v22;
}

id sub_10002DD98(_QWORD *a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  id v6;
  __objc2_prot *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  int v14;
  const char *v15;
  __int16 v16;
  id v17;

  v3 = a2;
  v4 = HFLogForCategory(70);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v14 = 136315394;
    v15 = "-[HOAppNavigator showCardForHomeKitIdentifier:destination:secondaryDestination:inHome:]_block_invoke";
    v16 = 2112;
    v17 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s, homeKitObjectPresentingFuture completed %@", (uint8_t *)&v14, 0x16u);
  }

  v6 = v3;
  v7 = &OBJC_PROTOCOL___HUHomeKitObjectPresenting;
  if (objc_msgSend(v6, "conformsToProtocol:", v7))
    v8 = v6;
  else
    v8 = 0;
  v9 = v8;

  if (v9)
  {
    v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "presentItemWithUUID:destination:secondaryDestination:animated:", a1[4], a1[6], a1[7], 1));
  }
  else
  {
    v11 = (*(uint64_t (**)(void))(a1[5] + 16))();
    v10 = objc_claimAutoreleasedReturnValue(v11);
  }
  v12 = (void *)v10;

  return v12;
}

id sub_10002DFEC(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  uint64_t v4;
  NSObject *v5;
  _BOOL4 v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD v15[4];
  id v16;
  uint8_t buf[4];
  void *v18;
  __int16 v19;
  void *v20;
  __int16 v21;
  uint64_t v22;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "items"));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10002E1E0;
  v15[3] = &unk_1000B7178;
  v16 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v2, "na_any:", v15);

  v4 = HFLogForCategory(70);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v6)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "hf_prettyDescription"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "hf_prettyDescription"));
      *(_DWORD *)buf = 138412546;
      v18 = v7;
      v19 = 2112;
      v20 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "HOAppNavigator handling request to open Accessory for accessory %@. Open Bridge Settings for home %@.", buf, 0x16u);

    }
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "showBridgeSettingsForAccessory:", *(_QWORD *)(a1 + 40)));
  }
  else
  {
    if (v6)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "hf_prettyDescription"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "hf_prettyDescription"));
      v12 = *(_QWORD *)(a1 + 64);
      *(_DWORD *)buf = 138412802;
      v18 = v10;
      v19 = 2112;
      v20 = v11;
      v21 = 2048;
      v22 = v12;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "HOAppNavigator handling request to open Accessory for accessory %@ in home %@ with secondary destination %lu.", buf, 0x20u);

    }
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "_showRoomContainedObject:secondaryDestination:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 64)));
  }
  v13 = (void *)v9;

  return v13;
}

id sub_10002E1E0(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "accessory"));
  v4 = objc_msgSend(v3, "isEqual:", *(_QWORD *)(a1 + 32));

  return v4;
}

void sub_10002E340(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10002E35C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id WeakRetained;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  void *v10;

  v4 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v6 = WeakRetained;
  if (v4)
  {
    v7 = HFLogForCategory(0);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
      sub_1000780E8();

  }
  else
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "homePodProfileInstaller"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "rootViewController"));
    objc_msgSend(v9, "showProfileInstallationFlowFromViewController:withSenderURLString:", v10, *(_QWORD *)(a1 + 32));

  }
}

void sub_10002E4EC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_10002E510(uint64_t a1)
{
  id WeakRetained;
  void *v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_showLocationListWithHome:customizationBlock:", *(_QWORD *)(a1 + 32), &stru_1000B7208));

  return v3;
}

void sub_10002E558(id a1, HUEditLocationViewController *a2)
{
  id v2;

  v2 = -[HUEditLocationViewController presentSoftwareUpdate:](a2, "presentSoftwareUpdate:", 0);
}

BOOL sub_10002E7F4(id a1, NSURLQueryItem *a2)
{
  void *v2;
  unsigned __int8 v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[NSURLQueryItem name](a2, "name"));
  v3 = objc_msgSend(v2, "isEqualToString:", CFSTR("payload"));

  return v3;
}

void sub_10002E834(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  id v15;

  v3 = a2;
  v4 = HULocalizedString(CFSTR("HUProximityCardSetupAccessoryHostVCUnsupportedSetupPayloadAlertMessage"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSError hf_errorWithCode:description:](NSError, "hf_errorWithCode:description:", 62, v5));

  if (*(_QWORD *)(a1 + 32))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "homeManager"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "accessorySetupCoordinator"));
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_10002E98C;
    v11[3] = &unk_1000B7298;
    v10 = *(_QWORD *)(a1 + 32);
    v12 = *(id *)(a1 + 40);
    v13 = *(id *)(a1 + 32);
    v14 = v3;
    v15 = v6;
    objc_msgSend(v9, "createSetupAccessoryPayloadWithSetupPayloadURLString:completionHandler:", v10, v11);

  }
  else
  {
    objc_msgSend(v3, "finishWithError:", v6);
  }

}

void sub_10002E98C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;

  v5 = a3;
  v6 = v5;
  if (!a2 || v5)
  {
    v7 = HFLogForCategory(58);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_100078154();

    objc_msgSend(*(id *)(a1 + 48), "finishWithError:", *(_QWORD *)(a1 + 56));
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 48), "finishWithResult:", a2);
  }

}

id sub_10002EA14(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  unsigned int v9;
  const __CFString *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  _QWORD v16[4];
  id v17;
  id v18;
  id v19;
  uint8_t buf[4];
  uint64_t v21;
  __int16 v22;
  const __CFString *v23;

  v3 = a2;
  v4 = HFLogForCategory(58);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "allHomesFuture"));
    v9 = objc_msgSend(v8, "isFinished");
    v10 = CFSTR("Not Done");
    if (v9)
      v10 = CFSTR("Done");
    *(_DWORD *)buf = 138412546;
    v21 = v6;
    v22 = 2112;
    v23 = v10;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Waiting for homeManager before opening the setup flow for URL: %@. (allHomesFuture = %@)", buf, 0x16u);

  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "allHomesFuture"));
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_10002EBD4;
  v16[3] = &unk_1000B7328;
  v17 = v3;
  v18 = *(id *)(a1 + 40);
  v19 = *(id *)(a1 + 32);
  v13 = v3;
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "addCompletionBlock:", v16));

  return v14;
}

void sub_10002EBD4(_QWORD *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "homeManager"));

  v7 = HFLogForCategory(58);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = v8;
  if (v4 || !v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1000781D0();

  }
  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v10 = a1[4];
      v11 = a1[5];
      v12 = a1[6];
      v13 = 138412802;
      v14 = v10;
      v15 = 2112;
      v16 = v11;
      v17 = 2112;
      v18 = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "homeManager loaded. addAndSetupAccessoriesWithPayload: %@, payload string, \"%@\", URL %@", (uint8_t *)&v13, 0x20u);
    }

    objc_msgSend(v6, "addAndSetupAccessoriesWithPayload:completionHandler:", a1[4], &stru_1000B7300);
  }

}

void sub_10002ED1C(id a1, NSError *a2, NSArray *a3)
{
  NSError *v4;
  NSArray *v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  int v9;
  NSError *v10;
  __int16 v11;
  void *v12;

  v4 = a2;
  v5 = a3;
  v6 = HFLogForCategory(58);
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(-[NSArray hf_prettyDescription](v5, "hf_prettyDescription"));
    v9 = 138412546;
    v10 = v4;
    v11 = 2112;
    v12 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "addAndSetupAccessoriesWithPayload finished with error: %@, addedAccessories: %@", (uint8_t *)&v9, 0x16u);

  }
}

NAFuture *__cdecl sub_10002EE00(id a1, NSError *a2)
{
  NSError *v2;
  void *v3;
  void *v4;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[HFErrorHandler sharedHandler](HFErrorHandler, "sharedHandler"));
  objc_msgSend(v3, "handleError:operationType:options:retryBlock:cancelBlock:", v2, HFOperationSetupAccessory, 0, 0, 0);

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithError:](NAFuture, "futureWithError:", v2));
  return (NAFuture *)v4;
}

id sub_10002EFC8(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "presentPersonalRequestsSettings:", *(_QWORD *)(a1 + 32));
}

id sub_10002F1A8(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "presentPersonalRequestsSettings:", *(_QWORD *)(a1 + 32));
}

id sub_10002F318(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "presentUserViewController:", *(_QWORD *)(a1 + 32));
}

id sub_10002F418(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "presentUserLockSettings:", *(_QWORD *)(a1 + 32));
}

void sub_10002F51C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  v3 = *(_QWORD *)(a1 + 40);
  if ((unint64_t)(v3 - 1) >= 2)
  {
    if (v3 != 3)
    {
      v5 = 0;
      goto LABEL_7;
    }
    v4 = objc_claimAutoreleasedReturnValue(+[HUHomeUIServiceLaunchUserInfo userInfoForLockAccessPinCodeSetupInHome:](HUHomeUIServiceLaunchUserInfo, "userInfoForLockAccessPinCodeSetupInHome:", *(_QWORD *)(a1 + 32)));
  }
  else
  {
    v4 = objc_claimAutoreleasedReturnValue(+[HUHomeUIServiceLaunchUserInfo userInfoForLockAccessWalletKeySetupInHome:](HUHomeUIServiceLaunchUserInfo, "userInfoForLockAccessWalletKeySetupInHome:", *(_QWORD *)(a1 + 32)));
  }
  v5 = (void *)v4;
LABEL_7:
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "homeManager"));
  objc_msgSend(v7, "launchHomeUIServiceToResumeSetupWithUserInfo:completionHandler:", v5, &stru_1000B73B8);

  objc_msgSend(v8, "finishWithNoResult");
}

void sub_10002F6C0(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = a2;
  v6 = (id)objc_claimAutoreleasedReturnValue(+[HUHomeUIServiceLaunchUserInfo userInfoForLockAccessFirmwareUpgradeSetupInHome:](HUHomeUIServiceLaunchUserInfo, "userInfoForLockAccessFirmwareUpgradeSetupInHome:", v2));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "homeManager"));
  objc_msgSend(v5, "launchHomeUIServiceToResumeSetupWithUserInfo:completionHandler:", v6, &stru_1000B7400);

  objc_msgSend(v3, "finishWithNoResult");
}

void sub_10002F83C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;
  id v10;
  id location;

  v3 = a2;
  objc_initWeak(&location, *(id *)(a1 + 32));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "homeManager"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10002F958;
  v7[3] = &unk_1000B7450;
  objc_copyWeak(&v10, &location);
  v8 = *(id *)(a1 + 40);
  v6 = v3;
  v9 = v6;
  objc_msgSend(v5, "fetchDevicesWithCompletionHandler:", v7);

  objc_destroyWeak(&v10);
  objc_destroyWeak(&location);

}

void sub_10002F934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002F958(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  int v15;
  const char *v16;
  __int16 v17;
  id v18;
  __int16 v19;
  uint64_t v20;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v8 = HFLogForCategory(33);
  v9 = objc_claimAutoreleasedReturnValue(v8);
  v10 = v9;
  if (v6)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_10007823C(a1, v10);

    objc_msgSend(*(id *)(a1 + 40), "finishWithError:", v6);
  }
  else
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v11 = *(_QWORD *)(a1 + 32);
      v15 = 136315650;
      v16 = "-[HOAppNavigator showHH2OnboardingFlowForHome:]_block_invoke";
      v17 = 2112;
      v18 = v5;
      v19 = 2112;
      v20 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%s Fetched devices:[%@] for home: %@", (uint8_t *)&v15, 0x20u);
    }

    v12 = *(_QWORD *)(a1 + 32);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentViewController"));
    v14 = +[HUHomeFeatureOnboardingUtilities home:onboardHomeHub2FromPresentingViewController:devices:usageOptions:](HUHomeFeatureOnboardingUtilities, "home:onboardHomeHub2FromPresentingViewController:devices:usageOptions:", v12, v13, v5, 0);

    objc_msgSend(*(id *)(a1 + 40), "finishWithNoResult");
  }

}

id sub_10002FBF0(uint64_t a1, void *a2)
{
  unsigned int v3;
  uint64_t v4;
  NSObject *v5;
  _BOOL4 v6;
  void *v7;
  int v9;
  const char *v10;

  v3 = objc_msgSend(a2, "BOOLValue");
  v4 = HFLogForCategory(70);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v6)
    {
      v9 = 136315138;
      v10 = "-[HOAppNavigator showDropInUI:home:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s, home has changed, _showHomeTabForHome", (uint8_t *)&v9, 0xCu);
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_showHomeTabForHome:animated:", *(_QWORD *)(a1 + 40), 1));
  }
  else
  {
    if (v6)
    {
      v9 = 136315138;
      v10 = "-[HOAppNavigator showDropInUI:home:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s, home has not changed, selectingCurrentTabAnimated", (uint8_t *)&v9, 0xCu);
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_selectCurrentTabAnimated:", 1));
  }
  return v7;
}

void sub_10002FD1C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  NSObject *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;

  v4 = a3;
  if (v4)
  {
    v5 = HFLogForCategory(0);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
      sub_10007830C();

  }
  else
  {
    v7 = objc_alloc((Class)HUHomeControlServiceContext);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "home"));
    v9 = *(_QWORD *)(a1 + 32);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "currentViewController"));
    v11 = objc_msgSend(v7, "initWithServiceType:home:accessory:presentingViewController:", 2, v8, v9, v10);

    v12 = (void *)objc_claimAutoreleasedReturnValue(+[HUHomeControlServiceManager sharedInstance](HUHomeControlServiceManager, "sharedInstance"));
    objc_msgSend(v12, "launchServiceWithContext:", v11);

  }
}

id sub_10002FEE0(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "presentDefaultMediaServiceSettings:", *(_QWORD *)(a1 + 32));
}

id sub_1000300C8(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  char isKindOfClass;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v19;
  uint64_t v20;
  __int16 v21;
  id v22;

  v3 = a2;
  if (v3
    && ((v4 = objc_opt_class(HMCameraClip),
         v5 = v3,
         isKindOfClass = objc_opt_isKindOfClass(v5, v4),
         (isKindOfClass & 1) == 0)
      ? (v7 = 0)
      : (v7 = v5),
        v8 = v7,
        v5,
        v8,
        (isKindOfClass & 1) != 0))
  {
    v9 = HFLogForCategory(14);
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = *(_QWORD *)(a1 + 32);
      v19 = 138412546;
      v20 = v11;
      v21 = 2112;
      v22 = v5;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Show camera profile:%@ for clip:%@.", (uint8_t *)&v19, 0x16u);
    }

    v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_showRoomContainedCamera:forCameraClip:", *(_QWORD *)(a1 + 32), v5));
  }
  else
  {
    v13 = HFLogForCategory(14);
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v15 = *(_QWORD *)(a1 + 32);
      v16 = *(void **)(a1 + 48);
      v19 = 138412546;
      v20 = v15;
      v21 = 2112;
      v22 = v16;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Show camera profile:%@ for missing clip with request clipID:%@.", (uint8_t *)&v19, 0x16u);
    }

    v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_showRoomContainedObject:secondaryDestination:", *(_QWORD *)(a1 + 32), 0));
  }
  v17 = (void *)v12;

  return v17;
}

id sub_100030448(uint64_t a1, void *a2)
{
  id v3;
  unsigned __int8 v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD v12[4];
  id v13;
  id v14;
  uint8_t buf[4];
  uint64_t v16;

  v3 = a2;
  v4 = objc_msgSend(v3, "canAskForUserFeedback");
  v5 = HFLogForCategory(20);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = v6;
  if ((v4 & 1) != 0)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v8 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v16 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Display dashboard for camera %@", buf, 0xCu);
    }

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_showDashboardForRoomContainedObject:animated:", *(_QWORD *)(a1 + 32), 1));
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1000305CC;
    v12[3] = &unk_1000B74A0;
    v13 = v3;
    v14 = *(id *)(a1 + 32);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "flatMap:", v12));

  }
  else
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_1000783B8();

    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
  }

  return v10;
}

id sub_1000305CC(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  int v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "presentFeedbackFlowForCameraClip:fromProfile:") & 1) != 0)
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "presentFeedbackFlowForCameraClip:fromProfile:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40)));
  }
  else
  {
    v5 = HFLogForCategory(20);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = *(_QWORD *)(a1 + 32);
      v8 = *(_QWORD *)(a1 + 40);
      v11 = 138412546;
      v12 = v7;
      v13 = 2112;
      v14 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Invalid attempt to display feedback flow for clip:%@ cameraProfile:%@", (uint8_t *)&v11, 0x16u);
    }

    v4 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
  }
  v9 = (void *)v4;

  return v9;
}

void sub_1000306E4(id a1, HUEditLocationViewController *a2)
{
  id v2;

  v2 = -[HUEditLocationViewController presentNetworkSettings:](a2, "presentNetworkSettings:", 0);
}

void sub_10003079C(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  _QWORD v5[4];
  id v6;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "presentNetworkSettings:", 0));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10003082C;
  v5[3] = &unk_1000B7510;
  v6 = *(id *)(a1 + 32);
  v4 = objc_msgSend(v3, "flatMap:", v5);

}

id sub_10003082C(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "presentNetworkConfigurationSettingsForProfile:animated:", *(_QWORD *)(a1 + 32), 0);
}

void sub_1000308D0(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  _QWORD v5[4];
  id v6;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "presentNetworkSettings:", 0));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100030960;
  v5[3] = &unk_1000B7510;
  v6 = *(id *)(a1 + 32);
  v4 = objc_msgSend(v3, "flatMap:", v5);

}

id sub_100030960(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "presentNetworkRouterSettingsForAccessory:animated:", *(_QWORD *)(a1 + 32), 0);
}

void sub_100030A14(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  _QWORD v5[4];
  id v6;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "presentBridgeSettings:", 0));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100030AA4;
  v5[3] = &unk_1000B7538;
  v6 = *(id *)(a1 + 32);
  v4 = objc_msgSend(v3, "flatMap:", v5);

}

id sub_100030AA4(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(a1 + 32);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "home"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[HUHomeHubsAndBridgesHelper presentBridgeDetailViewForAccessory:withHome:](HUHomeHubsAndBridgesHelper, "presentBridgeDetailViewForAccessory:withHome:", v1, v2));

  return v3;
}

void sub_100030B0C(id a1, HUEditLocationViewController *a2)
{
  id v2;

  v2 = -[HUEditLocationViewController presentBridgeSettings:](a2, "presentBridgeSettings:", 0);
}

void sub_100030B3C(id a1, HUEditLocationViewController *a2)
{
  -[HUEditLocationViewController scrollToNotificationTopicsAnimated:](a2, "scrollToNotificationTopicsAnimated:", 0);
}

id sub_100030BDC(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "showNotificationSettingsForHomeKitObject:animated:", *(_QWORD *)(a1 + 32), 0);
}

void sub_100030CAC(id a1, HUEditLocationViewController *a2)
{
  void *v2;
  id v3;
  HUEditLocationViewController *v4;

  v4 = a2;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[HFUserNotificationServiceTopic _cameraTopic](HFUserNotificationServiceTopic, "_cameraTopic"));
  v3 = -[HUEditLocationViewController presentNotificationSettingsForTopic:animated:](v4, "presentNotificationSettingsForTopic:animated:", v2, 0);

}

void sub_100030E24(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[HFUserNotificationServiceTopic _cameraTopic](HFUserNotificationServiceTopic, "_cameraTopic"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "presentNotificationSettingsForTopic:animated:", v4, 0));

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100030EFC;
  v7[3] = &unk_1000B75C0;
  v8 = *(id *)(a1 + 32);
  v9 = *(id *)(a1 + 40);
  v6 = objc_msgSend(v5, "flatMap:", v7);

}

id sub_100030EFC(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "presentFaceRecognitionPersonSettingsForPerson:personManager:animated:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 0);
}

void sub_100031008(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[HFUserNotificationServiceTopic _cameraTopic](HFUserNotificationServiceTopic, "_cameraTopic"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "presentNotificationSettingsForTopic:animated:", v4, 0));

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000310CC;
  v7[3] = &unk_1000B7610;
  v8 = *(id *)(a1 + 32);
  v6 = objc_msgSend(v5, "flatMap:", v7);

}

id sub_1000310CC(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "presentFaceRecognitionAddPersonSettingsForUnknownPersonEvent:animated:", *(_QWORD *)(a1 + 32), 0);
}

void sub_1000311A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000311C4(uint64_t a1)
{
  void *v1;
  id v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_selectTabWithIdentifier:animated:", HFHomeAppTabIdentifierTriggers, 1));
  v2 = objc_msgSend(v1, "addCompletionBlock:", &stru_1000B7630);

}

void sub_100031228(id a1, UINavigationController *a2, NSError *a3)
{
  UINavigationController *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v3 = a2;
  v4 = objc_opt_class(HUTriggerListViewController);
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[UINavigationController topViewController](v3, "topViewController"));

  if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0)
    v6 = v5;
  else
    v6 = 0;
  v8 = v6;

  v7 = v8;
  if (!v8)
  {
    NSLog(CFSTR("Please verify that this code runs if you can add an automation."));
    v7 = 0;
  }
  objc_msgSend(v7, "showAddTriggerView");

}

void sub_1000314A0(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v5 = (id)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "home"));
  objc_msgSend(v2, "_configureDashboardContextWithHome:navigationController:animated:", v4, v3, 1);

}

id sub_10003165C(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "baseController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "selectTabWithIdentifier:", *(_QWORD *)(a1 + 40)));

  return v3;
}

id sub_100031738(uint64_t a1)
{
  void *v1;
  void *v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "baseController"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "selectCurrentTab"));

  return v2;
}

id sub_1000318D0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;

  v3 = a2;
  v4 = v3;
  if (*(id *)(a1 + 32) != v3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
    objc_msgSend(v5, "setSelectedHome:userInitiated:", *(_QWORD *)(a1 + 32), 1);

    v4 = *(id *)(a1 + 32);
  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v4 != v3));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v6));

  return v7;
}

uint64_t sub_100031D30(uint64_t a1)
{
  id v2;
  __objc2_prot *v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  __objc2_prot *v8;
  void *v9;
  id v10;

  v2 = *(id *)(a1 + 32);
  v3 = &OBJC_PROTOCOL___HFShowInHomeDashboard;
  if (objc_msgSend(v2, "conformsToProtocol:", v3))
    v4 = v2;
  else
    v4 = 0;
  v5 = v4;

  if (v5 && (objc_msgSend(v5, "hf_effectiveShowInHomeDashboard") & 1) != 0)
  {
    v6 = 1;
  }
  else
  {
    v7 = *(id *)(a1 + 32);
    v8 = &OBJC_PROTOCOL___HFFavoritable;
    if (objc_msgSend(v7, "conformsToProtocol:", v8))
      v9 = v7;
    else
      v9 = 0;
    v10 = v9;

    v6 = (uint64_t)objc_msgSend(v10, "hf_effectiveIsFavorite");
  }

  return v6;
}

id sub_100031EC0(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;

  v3 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = a2;
  v6 = objc_msgSend(v3, "_selectHome:", v4);
  objc_msgSend(*(id *)(a1 + 32), "_configureDashboardContextWithHome:navigationController:animated:", *(_QWORD *)(a1 + 40), v5, *(unsigned __int8 *)(a1 + 48));
  v7 = objc_opt_class(HUDashboardViewController);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "topViewController"));

  v9 = v8;
  v10 = v9;
  if (v9)
  {
    if ((objc_opt_isKindOfClass(v9, v7) & 1) != 0)
      v11 = v10;
    else
      v11 = 0;
    v12 = v11;
    if (!v12)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"));
      objc_msgSend(v13, "handleFailureInFunction:file:lineNumber:description:", v14, CFSTR("NSObject+NAAdditions.h"), 54, CFSTR("Expected class of %@ but was %@"), v7, objc_opt_class(v10));

    }
  }
  else
  {
    v12 = 0;
  }

  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v12));
  return v15;
}

id sub_100032118(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_selectTabWithIdentifier:animated:", HFHomeAppTabIdentifierHome, *(unsigned __int8 *)(a1 + 40));
}

id sub_100032134(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;

  v3 = a2;
  v4 = v3;
  v5 = *(void **)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if (*(_BYTE *)(a1 + 48))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "viewControllers"));
    objc_msgSend(v5, "_configureDashboardContextWithRoom:navigationController:animated:", v6, v4, objc_msgSend(v7, "count") == (id)1);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "_configureDashboardContextWithRoom:navigationController:animated:", *(_QWORD *)(a1 + 40), v3, 0);
  }
  v8 = objc_opt_class(HUDashboardViewController);
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "topViewController"));
  v10 = v9;
  if (v9)
  {
    if ((objc_opt_isKindOfClass(v9, v8) & 1) != 0)
      v11 = v10;
    else
      v11 = 0;
    v12 = v11;
    if (!v12)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"));
      objc_msgSend(v13, "handleFailureInFunction:file:lineNumber:description:", v14, CFSTR("NSObject+NAAdditions.h"), 54, CFSTR("Expected class of %@ but was %@"), v8, objc_opt_class(v10));

    }
  }
  else
  {
    v12 = 0;
  }

  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v12));
  return v15;
}

id sub_100032370(uint64_t a1, void *a2)
{
  id v3;
  char v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  int v18;
  uint64_t v19;

  v3 = a2;
  v4 = objc_opt_respondsToSelector(v3, "presentCameraProfile:forCameraClip:animated:");
  v5 = HFLogForCategory(24);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = v6;
  if ((v4 & 1) != 0)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v8 = *(_QWORD *)(a1 + 32);
      v18 = 138412290;
      v19 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Present camera from dashboard for clip:%@", (uint8_t *)&v18, 0xCu);
    }

    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "presentCameraProfile:forCameraClip:animated:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), 1));
  }
  else
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_100078498(a1, v7, v10, v11, v12, v13, v14, v15);

    v9 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
  }
  v16 = (void *)v9;

  return v16;
}

id sub_100032598(_QWORD *a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  int v10;
  uint64_t v11;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "presentCameraProfile:startDate:endDate:animated:") & 1) != 0)
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "presentCameraProfile:startDate:endDate:animated:", a1[4], a1[5], a1[6], 1));
  }
  else
  {
    v5 = HFLogForCategory(61);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = a1[4];
      v10 = 138412290;
      v11 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Invalid attempt to display camera %@", (uint8_t *)&v10, 0xCu);
    }

    v4 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
  }
  v8 = (void *)v4;

  return v8;
}

id sub_100032748(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "presentHomeKitObject:destination:animated:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 1);
}

void sub_100032960(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;

  v3 = a2;
  v6 = objc_msgSend(objc_alloc((Class)UINavigationController), "initWithRootViewController:", v3);

  objc_msgSend(v6, "setModalPresentationStyle:", 2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "rootViewController"));
  v5 = objc_msgSend(v4, "hu_presentPreloadableViewController:animated:", v6, 1);

}

void sub_100032B78(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

id sub_100032BAC(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  void *v6;
  _QWORD v8[4];
  id v9;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100032C54;
  v8[3] = &unk_1000B7398;
  v9 = *(id *)(a1 + 32);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_showLocationListWithHome:customizationBlock:", v4, v8));

  return v6;
}

id sub_100032C54(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "presentUserViewController:", *(_QWORD *)(a1 + 32));
}

id sub_100032C78(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  void *v10;
  int v12;
  id v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  id v17;
  __int16 v18;
  void *v19;
  __int16 v20;
  void *v21;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "home"));

  v7 = HFLogForCategory(70);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "uniqueIdentifier"));
    v12 = 138413314;
    v13 = WeakRetained;
    v14 = 2080;
    v15 = "-[HOAppNavigator _showUser:customizationBlock:]_block_invoke_3";
    v16 = 2112;
    v17 = v3;
    v18 = 2112;
    v19 = v9;
    v20 = 2112;
    v21 = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "(%@:%s) %@ occurred looking for user with uniqueIdentifier %@. Showing settings for current home %@", (uint8_t *)&v12, 0x34u);

  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_showLocationListWithHome:customizationBlock:", v6, *(_QWORD *)(a1 + 40)));

  return v10;
}

id sub_100032EA8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[HOLocationListViewController viewControllerForPresentingLocationEditorForHome:delegate:customizationBlock:](HOLocationListViewController, "viewControllerForPresentingLocationEditorForHome:delegate:customizationBlock:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "rootViewController"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "hu_presentPreloadableViewController:animated:", v2, 1));

  return v4;
}

NAFuture *__cdecl sub_100032FE4(id a1, UINavigationController *a2)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[UINavigationController topViewController](a2, "topViewController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v2));

  return (NAFuture *)v3;
}

id sub_100033030(uint64_t a1, void *a2)
{
  id v3;
  __objc2_prot *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;

  v3 = a2;
  v4 = &OBJC_PROTOCOL___HURoomSettingsDelegate;
  if (objc_msgSend(v3, "conformsToProtocol:", v4))
    v5 = v3;
  else
    v5 = 0;
  v6 = v5;

  if (v6)
  {
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "presentRoomSettingsForRoom:", *(_QWORD *)(a1 + 32)));
  }
  else
  {
    v8 = HFLogForCategory(0);
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_100078500();

    v7 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
  }
  v10 = (void *)v7;

  return v10;
}

id sub_100033554(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "topViewController"));
  if (objc_msgSend(v3, "conformsToProtocol:", &OBJC_PROTOCOL___HUHomeKitObjectPresenting))
    v4 = v3;
  else
    v4 = 0;
  v5 = v4;

  if (v5 && (objc_opt_respondsToSelector(v5, "presentStatusDetailsForStatusItemClass:animated:") & 1) != 0)
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "presentStatusDetailsForStatusItemClass:animated:", *(_QWORD *)(a1 + 32), 1));
  else
    v6 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
  v7 = (void *)v6;

  return v7;
}

id sub_10003371C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_selectTabWithIdentifier:animated:", HFHomeAppTabIdentifierHome, *(unsigned __int8 *)(a1 + 40));
}

id sub_100033738(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(unsigned __int8 *)(a1 + 56);
  v6 = a2;
  objc_msgSend(v2, "_configureDashboardContextWithAccessoryTypeGroup:home:navigationController:animated:", v3, v4, v6, v5);
  v7 = objc_opt_class(HUDashboardViewController);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "topViewController"));

  v9 = v8;
  v10 = v9;
  if (v9)
  {
    if ((objc_opt_isKindOfClass(v9, v7) & 1) != 0)
      v11 = v10;
    else
      v11 = 0;
    v12 = v11;
    if (!v12)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"));
      objc_msgSend(v13, "handleFailureInFunction:file:lineNumber:description:", v14, CFSTR("NSObject+NAAdditions.h"), 54, CFSTR("Expected class of %@ but was %@"), v7, objc_opt_class(v10));

    }
  }
  else
  {
    v12 = 0;
  }

  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v12));
  return v15;
}

id sub_10003399C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_selectTabWithIdentifier:animated:", HFHomeAppTabIdentifierHome, *(unsigned __int8 *)(a1 + 40));
}

id sub_1000339B8(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(unsigned __int8 *)(a1 + 56);
  v6 = a2;
  objc_msgSend(v2, "_configureScenesDashboardContextWithTitle:home:navigationController:animated:", v3, v4, v6, v5);
  v7 = objc_opt_class(HUDashboardViewController);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "topViewController"));

  v9 = v8;
  v10 = v9;
  if (v9)
  {
    if ((objc_opt_isKindOfClass(v9, v7) & 1) != 0)
      v11 = v10;
    else
      v11 = 0;
    v12 = v11;
    if (!v12)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"));
      objc_msgSend(v13, "handleFailureInFunction:file:lineNumber:description:", v14, CFSTR("NSObject+NAAdditions.h"), 54, CFSTR("Expected class of %@ but was %@"), v7, objc_opt_class(v10));

    }
  }
  else
  {
    v12 = 0;
  }

  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v12));
  return v15;
}

id sub_100033C1C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_selectTabWithIdentifier:animated:", HFHomeAppTabIdentifierHome, *(unsigned __int8 *)(a1 + 40));
}

id sub_100033C38(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(unsigned __int8 *)(a1 + 56);
  v6 = a2;
  objc_msgSend(v2, "_configureSpeakersAndTVsDashboardContextWithTitle:home:navigationController:animated:", v3, v4, v6, v5);
  v7 = objc_opt_class(HUDashboardViewController);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "topViewController"));

  v9 = v8;
  v10 = v9;
  if (v9)
  {
    if ((objc_opt_isKindOfClass(v9, v7) & 1) != 0)
      v11 = v10;
    else
      v11 = 0;
    v12 = v11;
    if (!v12)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"));
      objc_msgSend(v13, "handleFailureInFunction:file:lineNumber:description:", v14, CFSTR("NSObject+NAAdditions.h"), 54, CFSTR("Expected class of %@ but was %@"), v7, objc_opt_class(v10));

    }
  }
  else
  {
    v12 = 0;
  }

  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v12));
  return v15;
}

id sub_100033E9C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_selectTabWithIdentifier:animated:", HFHomeAppTabIdentifierHome, *(unsigned __int8 *)(a1 + 40));
}

id sub_100033EB8(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(unsigned __int8 *)(a1 + 56);
  v6 = a2;
  objc_msgSend(v2, "_configureCameraDashboardContextWithTitle:home:navigationController:animated:", v3, v4, v6, v5);
  v7 = objc_opt_class(HUDashboardViewController);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "topViewController"));

  v9 = v8;
  v10 = v9;
  if (v9)
  {
    if ((objc_opt_isKindOfClass(v9, v7) & 1) != 0)
      v11 = v10;
    else
      v11 = 0;
    v12 = v11;
    if (!v12)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"));
      objc_msgSend(v13, "handleFailureInFunction:file:lineNumber:description:", v14, CFSTR("NSObject+NAAdditions.h"), 54, CFSTR("Expected class of %@ but was %@"), v7, objc_opt_class(v10));

    }
  }
  else
  {
    v12 = 0;
  }

  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v12));
  return v15;
}

void sub_10003408C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  void *v12;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "topViewController"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "contentScrollViewForEdge:", 1));
  v5 = HFLogForCategory(70);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = v6;
  if (v4)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v8 = *(_QWORD *)(a1 + 32);
      v9 = 138412546;
      v10 = v8;
      v11 = 2112;
      v12 = v3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@ Scrolling to the top of currently presented view controller: %@", (uint8_t *)&v9, 0x16u);
    }

    objc_msgSend(v4, "_scrollToTopIfPossible:", *(unsigned __int8 *)(a1 + 40));
  }
  else
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_100078560();

  }
}

void sub_100034714(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_100034724(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x20u);
}

id sub_100035768()
{
  if (qword_1000D27A8 != -1)
    dispatch_once(&qword_1000D27A8, &stru_1000B7870);
  return (id)qword_1000D27B0;
}

void sub_1000357A8(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D27B0;
  qword_1000D27B0 = (uint64_t)&off_1000BF350;

}

void sub_100035804(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_checkAndRunFeatureOnboardingWithHomeSwitch:", 0);

}

void sub_100035B08(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  __CFString *v9;
  void *v10;
  void *v11;
  id v12;
  __CFString *v13;
  void *v14;
  void *v15;
  __CFString *v16;
  void *v17;
  id v18;
  void *v19;
  __CFString *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  int8x16_t v25;
  int8x16_t v26;
  _QWORD v27[4];
  int8x16_t v28;
  _QWORD v29[4];
  int8x16_t v30;
  id v31[2];

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = HFLogForCategory(0);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1000785C8();

  }
  v9 = sub_10000CA88(CFSTR("HOLocationTriggerAlertDescription"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  v31[0] = 0;
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithValidatedFormat:validFormatSpecifiers:error:](NSString, "stringWithValidatedFormat:validFormatSpecifiers:error:", v10, CFSTR("%@"), v31, v5));
  v12 = v31[0];

  if (!v11)
    NSLog(CFSTR("Couldn't localize format string \"HOLocationTriggerAlertDescription\". Most likely, the format specifiers don't match. %@"), v12);
  v13 = sub_10000CA88(CFSTR("HOLocationTriggerAlertTitle"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v14, v11, 1));

  v16 = sub_10000CA88(CFSTR("HOLocationTriggerAlertRun"));
  v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_100035DA0;
  v29[3] = &unk_1000B78C0;
  v25 = *(int8x16_t *)(a1 + 32);
  v18 = (id)v25.i64[0];
  v30 = vextq_s8(v25, v25, 8uLL);
  v19 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v17, 0, v29));
  objc_msgSend(v15, "addAction:", v19);

  v20 = sub_10000CA88(CFSTR("HOLocationTriggerAlertCancel"));
  v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_100035DB0;
  v27[3] = &unk_1000B78C0;
  v26 = *(int8x16_t *)(a1 + 32);
  v22 = (id)v26.i64[0];
  v28 = vextq_s8(v26, v26, 8uLL);
  v23 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v21, 1, v27));
  objc_msgSend(v15, "addAction:", v23);

  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "rootViewController"));
  objc_msgSend(v24, "presentViewController:animated:completion:", v15, 1, 0);

}

id sub_100035DA0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_userDidConfirmExection:ofTriggerWithIdentifier:", 1, *(_QWORD *)(a1 + 40));
}

id sub_100035DB0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_userDidConfirmExection:ofTriggerWithIdentifier:", 0, *(_QWORD *)(a1 + 40));
}

void sub_100035E90(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  NSObject *v4;

  v2 = a2;
  if (v2)
  {
    v3 = HFLogForCategory(0);
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_100078630();

  }
}

id sub_1000361E4(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "rootViewController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "hu_presentPreloadableViewController:animated:", *(_QWORD *)(a1 + 40), 1));

  return v3;
}

void sub_1000367D4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  unsigned int v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "home"));

  if (!v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "rootViewController"));
    objc_msgSend(v3, "setLoadingViewController:", *(_QWORD *)(a1 + 48));

    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "rootViewController"));
    v5 = objc_msgSend((id)objc_opt_class(v4), "instancesRespondToSelector:", "didLoadLoadingViewController");

    if (v5)
    {
      v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "rootViewController"));
      objc_msgSend(v6, "didLoadLoadingViewController");

    }
  }
}

id sub_100037040()
{
  if (qword_1000D27B8 != -1)
    dispatch_once(&qword_1000D27B8, &stru_1000B7958);
  return (id)qword_1000D27C0;
}

void sub_100037080(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D27C0;
  qword_1000D27C0 = (uint64_t)&off_1000BF368;

}

void sub_100038274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000382A0(uint64_t a1)
{
  void *v1;
  void *v2;
  unsigned int v3;
  void *v4;
  void *v5;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ((objc_msgSend(WeakRetained, "didPushNextViewController") & 1) == 0)
  {
    v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "navigationController"));
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "visibleViewController"));
    v3 = objc_msgSend(v2, "isEqual:", WeakRetained);

    if (v3)
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "navigationController"));
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "joinedHomeVC"));
      objc_msgSend(v4, "pushViewController:animated:", v5, 1);

      objc_msgSend(WeakRetained, "setDidPushNextViewController:", 1);
    }
  }

}

void sub_1000384E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100038510(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;
  unsigned __int8 v5;
  uint64_t v6;
  NSObject *v7;
  _BOOL4 v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  int v18;
  const char *v19;
  __int16 v20;
  void *v21;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  v5 = objc_msgSend(v3, "BOOLValue");

  v6 = HFLogForCategory(69);
  v7 = objc_claimAutoreleasedReturnValue(v6);
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if ((v5 & 1) != 0)
  {
    if (v8)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "responseController"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "invitation"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "hf_prettyDescription"));
      v18 = 136315394;
      v19 = "-[HOOnboardingInvitationJoiningHomeViewController _handleAppDidForeground]_block_invoke";
      v20 = 2112;
      v21 = v11;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "(%s) At the moment when Home app got foregrounded, invitation's home was found. Moving onto next screen for %@.", (uint8_t *)&v18, 0x16u);

    }
    objc_msgSend(WeakRetained, "_moveToNextViewController");
  }
  else
  {
    if (v8)
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "responseController"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "invitation"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "hf_prettyDescription"));
      v18 = 136315394;
      v19 = "-[HOOnboardingInvitationJoiningHomeViewController _handleAppDidForeground]_block_invoke";
      v20 = 2112;
      v21 = v14;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "(%s) At the moment when Home app got foregrounded, invitation's home was NOT found. Starting timer for invitation %@.", (uint8_t *)&v18, 0x16u);

    }
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "acceptedPendingAddHomeTimeoutCancellationToken"));

    if (!v15)
      objc_msgSend(WeakRetained, "_startAddHomeTimeout");
  }
  v16 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));

  return v16;
}

void sub_1000387DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100038800(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  _QWORD v6[4];
  id v7;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_didHomeGetAdded"));
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1000388C4;
    v6[3] = &unk_1000B7980;
    objc_copyWeak(&v7, v1);
    v5 = objc_msgSend(v4, "flatMap:", v6);

    objc_destroyWeak(&v7);
  }

}

void sub_1000388B0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_1000388C4(uint64_t a1, void *a2)
{
  id v3;
  unsigned __int8 v4;
  id *v5;
  id *v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[4];
  id v11;
  _QWORD v12[4];
  id v13;

  v3 = a2;
  v4 = objc_msgSend(v3, "BOOLValue");
  v5 = (id *)(a1 + 32);
  if ((v4 & 1) != 0)
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100038B34;
    v10[3] = &unk_1000B79A8;
    v6 = &v11;
    objc_copyWeak(&v11, v5);
    v7 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithBlock:](NAFuture, "futureWithBlock:", v10));
  }
  else
  {
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1000389CC;
    v12[3] = &unk_1000B79A8;
    v6 = &v13;
    objc_copyWeak(&v13, v5);
    v7 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithBlock:](NAFuture, "futureWithBlock:", v12));
  }
  v8 = (void *)v7;
  objc_destroyWeak(v6);

  return v8;
}

void sub_1000389B4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000389CC(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  void *v4;
  void *v5;
  char v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  void *v13;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSError hf_errorWithCode:](NSError, "hf_errorWithCode:", 39));
  objc_msgSend(WeakRetained, "setAcceptInvitationError:", v4);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "incomingInvitationDelegate"));
  v6 = objc_opt_respondsToSelector(v5, "didDecideLaterForInvitation:viewController:error:");

  v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "incomingInvitationDelegate"));
  v8 = (void *)v7;
  if ((v6 & 1) != 0)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "responseController"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "invitation"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "acceptInvitationError"));
    objc_msgSend(v8, "didDecideLaterForInvitation:viewController:error:", v10, WeakRetained, v11);

  }
  else
  {
    v12 = objc_opt_respondsToSelector(v7, "invitationViewControllerDidDecideLaterInvitation:error:");

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "incomingInvitationDelegate"));
    v8 = v13;
    if ((v12 & 1) == 0)
    {
      objc_msgSend(v13, "invitationViewControllerDidDecideLaterInvitation:", WeakRetained);
      goto LABEL_7;
    }
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "acceptInvitationError"));
    objc_msgSend(v8, "invitationViewControllerDidDecideLaterInvitation:error:", WeakRetained, v9);
  }

LABEL_7:
  objc_msgSend(v3, "finishWithNoResult");

}

void sub_100038B34(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "setAcceptInvitationError:", 0);
  objc_msgSend(WeakRetained, "_moveToNextViewController");
  objc_msgSend(v3, "finishWithNoResult");

}

id sub_100038C24(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  _BOOL4 v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  const char *v15;
  void *v16;
  void *v17;
  _QWORD v19[5];
  uint8_t buf[4];
  const char *v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  void *v25;
  __int16 v26;
  void *v27;

  v3 = a2;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100038EDC;
  v19[3] = &unk_1000B5E18;
  v19[4] = *(_QWORD *)(a1 + 32);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "na_firstObjectPassingTest:", v19));
  v5 = HFLogForCategory(69);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (v7)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "responseController"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "invitation"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "homeName"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "responseController"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "invitation"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "homeUUID"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[HMHome hf_minimumDescriptionsOfHomes:](HMHome, "hf_minimumDescriptionsOfHomes:", v3));
      *(_DWORD *)buf = 136315906;
      v21 = "-[HOOnboardingInvitationJoiningHomeViewController _didHomeGetAdded]_block_invoke";
      v22 = 2112;
      v23 = v10;
      v24 = 2112;
      v25 = v13;
      v26 = 2112;
      v27 = v14;
      v15 = "(%s) New invited HMHome <name:%@, uuid: %@> was found. resultHomes = %@";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v15, buf, 0x2Au);

    }
  }
  else if (v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "responseController"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "invitation"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "homeName"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "responseController"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "invitation"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "homeUUID"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[HMHome hf_minimumDescriptionsOfHomes:](HMHome, "hf_minimumDescriptionsOfHomes:", v3));
    *(_DWORD *)buf = 136315906;
    v21 = "-[HOOnboardingInvitationJoiningHomeViewController _didHomeGetAdded]_block_invoke";
    v22 = 2112;
    v23 = v10;
    v24 = 2112;
    v25 = v13;
    v26 = 2112;
    v27 = v14;
    v15 = "(%s) New invited HMHome <name:%@, uuid: %@> was NOT found among %@";
    goto LABEL_6;
  }

  v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v4 != 0));
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v16));

  return v17;
}

id sub_100038EDC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "uuid"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "responseController"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "invitation"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "homeUUID"));
  v7 = objc_msgSend(v3, "hmf_isEqualToUUID:", v6);

  return v7;
}

id sub_100039498()
{
  if (qword_1000D27C8 != -1)
    dispatch_once(&qword_1000D27C8, &stru_1000B79F0);
  return (id)qword_1000D27D0;
}

void sub_1000394D8(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D27D0;
  qword_1000D27D0 = (uint64_t)&off_1000BF380;

}

void sub_100039E80(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  int v13;
  const char *v14;
  __int16 v15;
  id v16;

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", v5));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "getURLRequestForURL:", v7));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "webView"));

  v10 = objc_msgSend(v9, "loadRequest:", v8);
  v11 = HFLogForCategory(65);
  v12 = objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    v13 = 136315394;
    v14 = "-[HODiscoverWebViewManager reloadWebViews]_block_invoke";
    v15 = 2112;
    v16 = v5;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "(%s) Reloaded Discover webview with url:[%@]", (uint8_t *)&v13, 0x16u);
  }

}

BOOL sub_10003A380(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v4;
  _BOOL8 v5;

  v3 = *(void **)(a1 + 32);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "webView"));
  v5 = v3 == v4;

  return v5;
}

void sub_10003B878(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 144));
  _Unwind_Resume(a1);
}

void sub_10003B8D4(uint64_t a1)
{
  id WeakRetained;
  uint64_t v2;
  NSObject *v3;
  int v4;
  const char *v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = HFLogForCategory(68);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = 136315138;
    v5 = "-[HOOnboardingInvitationRestrictedGuestAccessViewController _continueButtonTapped:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "(%s) User tapped Accept on the alert", (uint8_t *)&v4, 0xCu);
  }

  objc_msgSend(WeakRetained, "_displayNextViewController");
}

void sub_10003B994(uint64_t a1)
{
  id WeakRetained;
  uint64_t v2;
  NSObject *v3;
  int v4;
  const char *v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = HFLogForCategory(68);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = 136315138;
    v5 = "-[HOOnboardingInvitationRestrictedGuestAccessViewController _continueButtonTapped:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "(%s) User tapped Ignore and Report on the alert", (uint8_t *)&v4, 0xCu);
  }

  objc_msgSend(WeakRetained, "_reportJunk");
}

void sub_10003BA54(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  void *v6;
  int v7;
  const char *v8;
  __int16 v9;
  void *v10;

  v3 = a2;
  v4 = HFLogForCategory(68);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "title"));
    v7 = 136315394;
    v8 = "-[HOOnboardingInvitationRestrictedGuestAccessViewController _continueButtonTapped:]_block_invoke";
    v9 = 2112;
    v10 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "(%s) User tapped cancel button '%@' from the alert popup", (uint8_t *)&v7, 0x16u);

  }
  objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);

}

id sub_10003C3A4()
{
  if (qword_1000D27E8 != -1)
    dispatch_once(&qword_1000D27E8, &stru_1000B7AA8);
  return (id)qword_1000D27F0;
}

void sub_10003C3E4(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D27F0;
  qword_1000D27F0 = (uint64_t)&off_1000BF398;

}

id sub_10003CB4C()
{
  if (qword_1000D27F8 != -1)
    dispatch_once(&qword_1000D27F8, &stru_1000B7AC8);
  return (id)qword_1000D2800;
}

void sub_10003CB8C(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2800;
  qword_1000D2800 = (uint64_t)&off_1000BF3B0;

}

void sub_10003CE70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003CE9C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  void *v17;
  id v18;
  id v19;
  _QWORD v20[4];
  id v21;
  id v22;
  id v23;
  uint8_t buf[4];
  const char *v25;
  __int16 v26;
  void *v27;
  __int16 v28;
  void *v29;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "presentedViewController"));
  if (v3)
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "dismissPresentedViewControllersAnimated:", 0));
  else
    v4 = objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));
  v5 = (void *)v4;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_navigationControllerForMainTabIdentifier:", *(_QWORD *)(a1 + 32)));
  if (!v6)
  {
    v7 = HFLogForCategory(70);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_100078830(a1 + 32, v8, v9, v10, v11, v12, v13, v14);

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_navigationControllerForMainTabIdentifier:", HFHomeAppTabIdentifierHome));
  }
  v15 = HFLogForCategory(70);
  v16 = objc_claimAutoreleasedReturnValue(v15);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "presentedViewController"));
    *(_DWORD *)buf = 136315650;
    v25 = "-[HOMainTabBarController selectTabWithIdentifier:]_block_invoke";
    v26 = 2112;
    v27 = v17;
    v28 = 2112;
    v29 = v6;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "%s, loadTabsFuture completed, presentedViewController: %@, nextNavigationController: %@", buf, 0x20u);

  }
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_10003D0A4;
  v20[3] = &unk_1000B7BC0;
  v21 = v6;
  v22 = WeakRetained;
  v23 = *(id *)(a1 + 40);
  v18 = v6;
  v19 = objc_msgSend(v5, "addCompletionBlock:", v20);

}

void sub_10003D0A4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  id v8;
  id v9;
  int8x16_t v10;
  _QWORD v11[4];
  int8x16_t v12;
  id v13;
  uint8_t buf[4];
  const char *v15;
  __int16 v16;
  id v17;

  v4 = a3;
  v5 = HFLogForCategory(70);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315394;
    v15 = "-[HOMainTabBarController selectTabWithIdentifier:]_block_invoke";
    v16 = 2112;
    v17 = v4;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s, dismissalFuture completion.  error: %@", buf, 0x16u);
  }

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "hu_preloadContent"));
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10003D1FC;
  v11[3] = &unk_1000B7B98;
  v10 = *(int8x16_t *)(a1 + 32);
  v8 = (id)v10.i64[0];
  v12 = vextq_s8(v10, v10, 8uLL);
  v13 = *(id *)(a1 + 48);
  v9 = objc_msgSend(v7, "addCompletionBlock:", v11);

}

void sub_10003D1FC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  void *v8;
  int v9;
  const char *v10;
  __int16 v11;
  id v12;

  v4 = a3;
  v5 = HFLogForCategory(70);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v9 = 136315394;
    v10 = "-[HOMainTabBarController selectTabWithIdentifier:]_block_invoke";
    v11 = 2112;
    v12 = v4;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s, preloadContent future completion.  error: %@", (uint8_t *)&v9, 0x16u);
  }

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "selectedViewController"));
  v8 = *(void **)(a1 + 40);

  if (v7 != v8)
    objc_msgSend(*(id *)(a1 + 32), "_setSelectedViewController:persistSelection:", *(_QWORD *)(a1 + 40), 1);
  objc_msgSend(*(id *)(a1 + 48), "finishWithResult:", *(_QWORD *)(a1 + 40));

}

void sub_10003D3BC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_10003D3E0(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = objc_opt_class(UINavigationController);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "selectedViewController"));
  if ((objc_opt_isKindOfClass(v4, v3) & 1) != 0)
    v5 = v4;
  else
    v5 = 0;
  v6 = v5;

  v7 = objc_msgSend(v6, "popToRootViewControllerAnimated:", *(unsigned __int8 *)(a1 + 40));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithNoResult](NAFuture, "futureWithNoResult"));

  return v8;
}

id sub_10003D730(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "latestResults"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("HOResultMainTabIdentifierKey")));
  v5 = objc_msgSend(v4, "isEqualToString:", *(_QWORD *)(a1 + 32));

  return v5;
}

id sub_10003D7F0(id a1, HFItem *a2)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[HFItem latestResults](a2, "latestResults"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("HOResultMainTabIdentifierKey")));

  return v3;
}

void sub_10003E6A4(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(+[UIBlurEffect effectWithStyle:](UIBlurEffect, "effectWithStyle:", 6));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blurView"));
  objc_msgSend(v2, "setEffect:", v3);

}

void sub_10003E7B0(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blurView"));
  objc_msgSend(v1, "setEffect:", 0);

}

void sub_10003E934(uint64_t a1)
{
  void *v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentedViewController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "view"));
  objc_msgSend(v3, "frame");
  v5 = v4;
  v7 = v6;

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentedViewController"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "view"));
  objc_msgSend(v9, "frame");
  v11 = v10;

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentedViewController"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "view"));
  objc_msgSend(v13, "setFrame:", v11, 40.0, v5, v7);

  v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentedViewController"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "view"));
  objc_msgSend(v14, "layoutIfNeeded");

}

id sub_10003EC28(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "pushViewController:animated:", *(_QWORD *)(a1 + 40), 0);
}

BOOL sub_10003EE38(id a1, HMIncomingHomeInvitation *a2)
{
  HMIncomingHomeInvitation *v2;
  BOOL v3;

  v2 = a2;
  v3 = -[HMIncomingHomeInvitation invitationState](v2, "invitationState") == (id)2
    || -[HMIncomingHomeInvitation invitationState](v2, "invitationState") == (id)5;

  return v3;
}

id sub_100040788(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "homeUUID"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "uuid"));
  v5 = objc_msgSend(v3, "isEqual:", v4);

  return v5;
}

id sub_1000408F8(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "uniqueIdentifier"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "uniqueIdentifier"));

  v6 = objc_msgSend(v4, "isEqual:", v5);
  return v6;
}

id sub_100041040(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "uniqueIdentifier"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "uniqueIdentifier"));

  v6 = objc_msgSend(v4, "isEqual:", v5);
  return v6;
}

void sub_100041C5C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v1);
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v3 - 144));
  _Unwind_Resume(a1);
}

void sub_100041CEC(uint64_t a1, void *a2)
{
  id v3;
  char *WeakRetained;
  uint64_t v5;
  NSObject *v6;
  NSString *v7;
  void *v8;
  void *v9;
  void *v10;
  unsigned int v11;
  void *v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  _BOOL4 v16;
  void *v17;
  void *v18;
  HOOnboardingInvitationRestrictedGuestAccessViewController *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  int v26;
  const char *v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  void *v31;

  v3 = a2;
  WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 48));
  v5 = HFLogForCategory(68);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = NSStringFromSelector(*(SEL *)(a1 + 56));
    v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "title"));
    v26 = 138412802;
    v27 = WeakRetained;
    v28 = 2112;
    v29 = v8;
    v30 = 2112;
    v31 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@:%@ User tapped %@ on the alert", (uint8_t *)&v26, 0x20u);

  }
  if (_os_feature_enabled_impl("Home", "RestrictedGuest")
    && (v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "invitation")),
        v11 = objc_msgSend(v10, "isInviteeRestrictedGuest"),
        v10,
        v11))
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "invitation"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "restrictedGuestSchedule"));

    v14 = HFLogForCategory(68);
    v15 = objc_claimAutoreleasedReturnValue(v14);
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);
    if (v13)
    {
      if (v16)
      {
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "invitation"));
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "hf_prettyDescription"));
        v26 = 136315394;
        v27 = "-[HOLocationListViewController invitationCell:didRespondToInvitationWithResponse:]_block_invoke";
        v28 = 2112;
        v29 = v18;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "(%s) Presenting invitation flow starting from 'Guest Access' screen. Invitation = %@", (uint8_t *)&v26, 0x16u);

      }
      v19 = -[HOOnboardingInvitationRestrictedGuestAccessViewController initWithIncomingInvitation:invitationHelper:incomingInvitationDelegate:]([HOOnboardingInvitationRestrictedGuestAccessViewController alloc], "initWithIncomingInvitation:invitationHelper:incomingInvitationDelegate:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), WeakRetained);
      -[HOOnboardingInvitationRestrictedGuestAccessViewController setDelegate:](v19, "setDelegate:", WeakRetained);
      -[HOOnboardingInvitationRestrictedGuestAccessViewController setDidUserTriggerOnboardingDismissal:](v19, "setDidUserTriggerOnboardingDismissal:", 0);
    }
    else
    {
      if (v16)
      {
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "invitation"));
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "hf_prettyDescription"));
        v26 = 136315394;
        v27 = "-[HOLocationListViewController invitationCell:didRespondToInvitationWithResponse:]_block_invoke";
        v28 = 2112;
        v29 = v23;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "(%s) Presenting invitation flow starting from 'Setting Up <Home Name>' screen. Invitation = %@", (uint8_t *)&v26, 0x16u);

      }
      v19 = -[HOOnboardingInvitationJoiningHomeViewController initWithIncomingInvitation:invitationHelper:incomingInvitationDelegate:]([HOOnboardingInvitationJoiningHomeViewController alloc], "initWithIncomingInvitation:invitationHelper:incomingInvitationDelegate:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), WeakRetained);
      -[HOOnboardingInvitationRestrictedGuestAccessViewController setDelegate:](v19, "setDelegate:", WeakRetained);
    }
    v24 = objc_msgSend(objc_alloc((Class)UINavigationController), "initWithRootViewController:", v19);
    v25 = objc_msgSend(WeakRetained, "hu_presentPreloadableViewController:animated:", v24, 1);

  }
  else
  {
    v19 = (HOOnboardingInvitationRestrictedGuestAccessViewController *)objc_msgSend(objc_alloc((Class)HUIncomingInvitationResponseController), "initWithDelegate:invitation:", WeakRetained, *(_QWORD *)(a1 + 40));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "invitationResponseControllersByHomeUUID"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "homeUUID"));
    objc_msgSend(v20, "setObject:forKeyedSubscript:", v19, v21);

    -[HOOnboardingInvitationRestrictedGuestAccessViewController respondToInvitationWithResponse:](v19, "respondToInvitationWithResponse:", *(_QWORD *)(a1 + 64));
  }

}

void sub_10004204C(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  NSObject *v4;
  NSString *v5;
  void *v6;
  int v7;
  id v8;
  __int16 v9;
  void *v10;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = HFLogForCategory(68);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = NSStringFromSelector(*(SEL *)(a1 + 48));
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = 138412546;
    v8 = WeakRetained;
    v9 = 2112;
    v10 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%@:%@ User tapped Cancel on the alert", (uint8_t *)&v7, 0x16u);

  }
  objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);

}

void sub_100042138(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  int v11;
  const char *v12;
  __int16 v13;
  void *v14;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = HFLogForCategory(68);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "title"));
    v11 = 136315394;
    v12 = "-[HOLocationListViewController invitationCell:didRespondToInvitationWithResponse:]_block_invoke";
    v13 = 2112;
    v14 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "(%s) User tapped delete and report button '%@' from alert", (uint8_t *)&v11, 0x16u);

  }
  v8 = objc_msgSend(objc_alloc((Class)HUIncomingInvitationResponseController), "initWithDelegate:invitation:", WeakRetained, *(_QWORD *)(a1 + 32));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "invitationResponseControllersByHomeUUID"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "homeUUID"));
  objc_msgSend(v9, "setObject:forKeyedSubscript:", v8, v10);

  objc_msgSend(v8, "respondToInvitationWithResponse:", *(_QWORD *)(a1 + 48));
}

void sub_100042294(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  void *v6;
  int v7;
  const char *v8;
  __int16 v9;
  void *v10;

  v3 = a2;
  v4 = HFLogForCategory(68);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "title"));
    v7 = 136315394;
    v8 = "-[HOLocationListViewController invitationCell:didRespondToInvitationWithResponse:]_block_invoke";
    v9 = 2112;
    v10 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "(%s) User tapped cancel button '%@' from alert", (uint8_t *)&v7, 0x16u);

  }
  objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);

}

void sub_100042504(uint64_t a1)
{
  id v2;

  if (*(_QWORD *)(a1 + 32))
  {
    v2 = (id)objc_claimAutoreleasedReturnValue(+[HFErrorHandler sharedHandler](HFErrorHandler, "sharedHandler"));
    objc_msgSend(v2, "handleError:operationType:options:retryBlock:cancelBlock:", *(_QWORD *)(a1 + 32), HFOperationAcceptInvitation, 0, 0, 0);

  }
}

id sub_100042938(id a1, HMIncomingHomeInvitation *a2)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[HMIncomingHomeInvitation identifier](a2, "identifier"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "UUIDString"));

  return v3;
}

id sub_100042A9C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "isEqualToString:", a2);
}

id sub_100042AE8(id a1, HMIncomingHomeInvitation *a2)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[HMIncomingHomeInvitation identifier](a2, "identifier"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "UUIDString"));

  return v3;
}

void sub_100042CD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100042CF4(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  unsigned int v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  v4 = objc_msgSend(WeakRetained, "locationSensingAvailable");
  v5 = objc_msgSend(v3, "BOOLValue");

  v6 = WeakRetained;
  if (v4 != (_DWORD)v5)
  {
    if (objc_msgSend(WeakRetained, "tableViewReady"))
    {
      if (v4)
      {
        v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSIndexSet indexSetWithIndex:](NSIndexSet, "indexSetWithIndex:", objc_msgSend(WeakRetained, "_indexOfSectionWithIdentifier:", CFSTR("HOLocationListHomeSensingSectionIdentifier"))));
        objc_msgSend(WeakRetained, "setLocationSensingAvailable:", 0);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "tableView"));
        objc_msgSend(v8, "deleteSections:withRowAnimation:", v7, 100);
      }
      else
      {
        v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSIndexSet indexSetWithIndex:](NSIndexSet, "indexSetWithIndex:", (char *)objc_msgSend(WeakRetained, "_indexOfSectionWithIdentifier:", CFSTR("HOLocationListLocationsSectionIdentifier"))+ 1));
        objc_msgSend(WeakRetained, "setLocationSensingAvailable:", 1);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "tableView"));
        objc_msgSend(v8, "insertSections:withRowAnimation:", v7, 100);
      }

    }
    else
    {
      objc_msgSend(WeakRetained, "setLocationSensingAvailable:", v5);
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "tableView"));
      objc_msgSend(v7, "reloadData");
    }

    v6 = WeakRetained;
  }

}

id sub_100042FE8()
{
  if (qword_1000D2830 != -1)
    dispatch_once(&qword_1000D2830, &stru_1000B7EA0);
  return (id)qword_1000D2838;
}

void sub_100043028(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2838;
  qword_1000D2838 = (uint64_t)&off_1000BF3E0;

}

id sub_100043BD4()
{
  if (qword_1000D2840 != -1)
    dispatch_once(&qword_1000D2840, &stru_1000B7EC0);
  return (id)qword_1000D2848;
}

void sub_100043C14(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2848;
  qword_1000D2848 = (uint64_t)&off_1000BF3F8;

}

void sub_1000449FC(uint64_t a1, char a2, void *a3)
{
  id v4;
  _QWORD v5[4];
  id v6;
  BOOL v7;

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000465D0;
  v5[3] = &unk_1000B7F70;
  v6 = a3;
  v7 = (a2 & 2) != 0;
  v4 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

}

void sub_100045BDC(id a1, NSError *a2)
{
  NSError *v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v2 = a2;
  if (v2)
  {
    v3 = HFLogForCategory(36);
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT))
      sub_1000789E0((uint64_t)v2, v4, v5);

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[HFOpenURLRouter sharedInstance](HFOpenURLRouter, "sharedInstance"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL hf_openiCloudPreferencesURL](NSURL, "hf_openiCloudPreferencesURL"));
    v8 = objc_msgSend(v6, "openURL:", v7);

  }
}

void sub_100045C90(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  objc_msgSend(v1, "terminateWithSuccess");

}

id sub_100045EE8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_resetButtonConfirmed");
}

void sub_100045F7C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  __CFString *v6;
  void *v7;
  __CFString *v8;
  void *v9;
  void *v10;
  __CFString *v11;
  void *v12;
  void *v13;
  void *v14;

  v3 = a2;
  if (v3)
  {
    v4 = HFLogForCategory(36);
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT))
      sub_100078A48(v3, v5);

    v6 = sub_10000D410(CFSTR("HODataSyncingAlertTitle"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    v8 = sub_10000D410(CFSTR("HODataSyncingResetBodyGeneric"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v7, v9, 1));

    v11 = sub_10000D410(CFSTR("HODataSyncingAlertOKButton"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v12, 0, 0));
    objc_msgSend(v10, "addAction:", v13);

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationController"));
    objc_msgSend(v14, "presentViewController:animated:completion:", v10, 1, 0);

  }
}

void sub_100046214(uint64_t a1, char a2, void *a3)
{
  id v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  uint8_t v10[16];

  v5 = a3;
  if ((a2 & 1) == 0)
  {
    v9 = HFLogForCategory(0);
    v8 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_100078B38();
    goto LABEL_7;
  }
  v6 = HFLogForCategory(0);
  v7 = objc_claimAutoreleasedReturnValue(v6);
  v8 = v7;
  if (v5)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_100078AD4();
LABEL_7:

    goto LABEL_8;
  }
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "CDPUIDeviceToDeviceEncryption succeed in reparing.", v10, 2u);
  }

  objc_msgSend(*(id *)(a1 + 40), "dismissViewControllerAnimated:completion:", 1, 0);
LABEL_8:

}

id sub_100046578()
{
  if (qword_1000D2850 != -1)
    dispatch_once(&qword_1000D2850, &stru_1000B7F48);
  return (id)qword_1000D2858;
}

void sub_1000465B8(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2858;
  qword_1000D2858 = (uint64_t)&off_1000BF410;

}

id sub_1000465D0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "setICloudURLIsReachable:", *(unsigned __int8 *)(a1 + 40));
}

void sub_1000465F4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, a5, 0xCu);
}

void sub_1000469CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100046A10(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (*(_BYTE *)(a1 + 40))
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "openSenderURL");
    WeakRetained = v3;
  }

}

void sub_100046D6C(uint64_t a1, char a2)
{
  uint64_t v3;
  NSObject *v4;

  if ((a2 & 1) == 0)
  {
    v3 = HFLogForCategory(0);
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_100078D68(a1, v4);

  }
}

id sub_100047108(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "setInstallProfileViewController:", 0);
  if (*(_BYTE *)(a1 + 40))
    return objc_msgSend(*(id *)(a1 + 32), "openSenderURL");
  return result;
}

id sub_1000471FC()
{
  if (qword_1000D2860 != -1)
    dispatch_once(&qword_1000D2860, &stru_1000B7FB8);
  return (id)qword_1000D2868;
}

void sub_10004723C(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2868;
  qword_1000D2868 = (uint64_t)&off_1000BF428;

}

void sub_100047254(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x20u);
}

void sub_100047284(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void sub_100047BCC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "na_filter:", &stru_1000B7FF8));
  v3 = objc_msgSend(v6, "count");
  v4 = *(void **)(a1 + 32);
  if ((unint64_t)v3 < 2)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "firstObject"));
    objc_msgSend(v4, "_handleProfileInstallationForHome:", v5);

  }
  else
  {
    objc_msgSend(v4, "_presentHomeSelectionAlertWithHomes:", v6);
  }

}

BOOL sub_100047C4C(id a1, HMHome *a2)
{
  HMHome *v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  char v5;

  v2 = a2;
  if (-[HMHome hf_isCurrentLocationHome](v2, "hf_isCurrentLocationHome"))
    v3 = -[HMHome hf_hasHomePods](v2, "hf_hasHomePods");
  else
    v3 = 0;
  v4 = -[HMHome hf_allHomePodsSupportRemoteProfileInstallation](v2, "hf_allHomePodsSupportRemoteProfileInstallation");
  v5 = (v3 | v4) & -[HMHome hf_currentUserIsOwner](v2, "hf_currentUserIsOwner");

  return v5;
}

void sub_100047DB0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  uint64_t v13;
  id v14;

  v5 = a2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100047E74;
  v10[3] = &unk_1000B8020;
  v11 = a3;
  v6 = *(id *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v12 = v6;
  v13 = v7;
  v14 = v5;
  v8 = v5;
  v9 = v11;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);

}

id sub_100047E74(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v8;
  void *v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  void *v13;

  v2 = (uint64_t *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = HFLogForCategory(43);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_100078EE4(a1, v2, v6);

    return objc_msgSend(*(id *)(a1 + 48), "_presentErrorAlert");
  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v8 = *(_QWORD *)(a1 + 56);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "hf_prettyDescription"));
      v10 = 138412546;
      v11 = v8;
      v12 = 2112;
      v13 = v9;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Profile: %@ successfully installed on HomePod: %@", (uint8_t *)&v10, 0x16u);

    }
    return objc_msgSend(*(id *)(a1 + 48), "_presentCompletionAlert");
  }
}

void sub_100048034(id *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id v11;
  id v12;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "profileData"));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000480F4;
  v8[3] = &unk_1000B8048;
  v9 = a1[5];
  v10 = v3;
  v5 = a1[6];
  v6 = a1[4];
  v11 = v5;
  v12 = v6;
  v7 = v3;
  objc_msgSend(v7, "installManagedConfigurationProfileWithData:completionHandler:", v4, v8);

}

void sub_1000480F4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  _QWORD block[4];
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;

  v5 = a2;
  if (a3)
    v6 = *(_QWORD *)(a1 + 40);
  else
    v6 = 0;
  objc_msgSend(*(id *)(a1 + 32), "na_safeAddObject:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "lastObject"));
  v8 = *(void **)(a1 + 40);

  if (v7 == v8)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000481F4;
    block[3] = &unk_1000B5DF0;
    v12 = *(id *)(a1 + 32);
    v13 = *(id *)(a1 + 48);
    v9 = *(id *)(a1 + 40);
    v10 = *(_QWORD *)(a1 + 56);
    v14 = v9;
    v15 = v10;
    v16 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
}

id sub_1000481F4(uint64_t a1)
{
  id *v2;
  id v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  _BOOL4 v7;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  int v14;
  uint64_t v15;
  __int16 v16;
  void *v17;

  v2 = (id *)(a1 + 32);
  if (objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    v3 = objc_msgSend(*(id *)(a1 + 32), "count");
    v4 = objc_msgSend(*(id *)(a1 + 40), "count");
    v5 = HFLogForCategory(43);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_ERROR);
    if (v3 == v4)
    {
      if (v7)
        sub_100078F84(a1, v6);

      return objc_msgSend(*(id *)(a1 + 56), "_presentErrorAlert");
    }
    else
    {
      if (v7)
        sub_100079020(v2, v6);

      return objc_msgSend(*(id *)(a1 + 56), "_presentPartialErrorAlertForHomePods:", *(_QWORD *)(a1 + 32));
    }
  }
  else
  {
    v9 = HFLogForCategory(43);
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = *(_QWORD *)(a1 + 64);
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "home"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "hf_prettyDescription"));
      v14 = 138412546;
      v15 = v11;
      v16 = 2112;
      v17 = v13;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Profile: %@ successfully installed on all HomePods in home: %@", (uint8_t *)&v14, 0x16u);

    }
    return objc_msgSend(*(id *)(a1 + 56), "_presentCompletionAlert");
  }
}

void sub_100048498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000484C4(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  uint64_t v5;
  NSObject *v6;
  __CFString *v7;
  void *v8;
  __CFString *v9;
  void *v10;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (v3)
  {
    v5 = HFLogForCategory(0);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_1000790C0();

    v7 = sub_10000D5F8(CFSTR("HOProfileHomePodSearchFailedTitle"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    v9 = sub_10000D5F8(CFSTR("HOProfileHomePodSearchFailedMessage"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    objc_msgSend(WeakRetained, "showProfileInstallationAlertViewWithTitle:message:shouldGoBackToSenderURL:", v8, v10, 1);

  }
}

int64_t sub_1000486A0(id a1, HMHome *a2, HMHome *a3)
{
  HMHome *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[HMHome name](a2, "name"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[HMHome name](v4, "name"));

  v7 = objc_msgSend(v5, "localizedCaseInsensitiveCompare:", v6);
  return (int64_t)v7;
}

void sub_10004870C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void **v7;
  uint64_t v8;
  id (*v9)(uint64_t);
  void *v10;
  uint64_t v11;
  id v12;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "name"));
  v7 = _NSConcreteStackBlock;
  v8 = 3221225472;
  v9 = sub_1000487CC;
  v10 = &unk_1000B78C0;
  v11 = *(_QWORD *)(a1 + 32);
  v12 = v3;
  v5 = v3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v4, 0, &v7));

  objc_msgSend(*(id *)(a1 + 40), "addAction:", v6, v7, v8, v9, v10, v11);
}

id sub_1000487CC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_handleProfileInstallationForHome:", *(_QWORD *)(a1 + 40));
}

id sub_1000489A0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_installProfileForHomePods:", *(_QWORD *)(a1 + 40));
}

int64_t sub_1000489AC(id a1, HMAccessory *a2, HMAccessory *a3)
{
  HMAccessory *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[HMAccessory name](a2, "name"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[HMAccessory name](v4, "name"));

  v7 = objc_msgSend(v5, "localizedCaseInsensitiveCompare:", v6);
  return (int64_t)v7;
}

void sub_100048A18(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void **v7;
  uint64_t v8;
  id (*v9)(uint64_t);
  void *v10;
  uint64_t v11;
  id v12;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "name"));
  v7 = _NSConcreteStackBlock;
  v8 = 3221225472;
  v9 = sub_100048AD8;
  v10 = &unk_1000B78C0;
  v11 = *(_QWORD *)(a1 + 32);
  v12 = v3;
  v5 = v3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v4, 0, &v7));

  objc_msgSend(*(id *)(a1 + 40), "addAction:", v6, v7, v8, v9, v10, v11);
}

id sub_100048AD8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_installProfileForHomePod:", *(_QWORD *)(a1 + 40));
}

id sub_100048BF0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dismissInstallProfileViewControllerWithAnimation:shouldOpenSenderURL:", 1, 1);
}

id sub_100048D24(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dismissInstallProfileViewControllerWithAnimation:shouldOpenSenderURL:", 1, 1);
}

id sub_100048F5C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dismissInstallProfileViewControllerWithAnimation:shouldOpenSenderURL:", 1, 1);
}

id sub_100049008(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dismissInstallProfileViewControllerWithAnimation:shouldOpenSenderURL:", 1, 1);
}

id sub_100049018()
{
  if (qword_1000D2870 != -1)
    dispatch_once(&qword_1000D2870, &stru_1000B8140);
  return (id)qword_1000D2878;
}

void sub_100049058(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2878;
  qword_1000D2878 = (uint64_t)&off_1000BF440;

}

void sub_100049090(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

id sub_100049E10(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  void *v13;
  void *v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v3 = a2;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v17;
    while (2)
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v17 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)i);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "name", (_QWORD)v16));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "entityName"));
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "description"));
        v12 = objc_msgSend(v9, "isEqualToString:", v11);

        if ((v12 & 1) != 0)
        {
          v14 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithResult:](NAFuture, "futureWithResult:", v8));
          v13 = v3;
          goto LABEL_11;
        }
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
      if (v5)
        continue;
      break;
    }
  }

  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSError hf_errorWithCode:](NSError, "hf_errorWithCode:", 30));
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[NAFuture futureWithError:](NAFuture, "futureWithError:", v13));
LABEL_11:

  return v14;
}

id sub_10004A754()
{
  if (qword_1000D2880 != -1)
    dispatch_once(&qword_1000D2880, &stru_1000B82B8);
  return (id)qword_1000D2888;
}

void sub_10004A794(id a1)
{
  void *v1;

  v1 = (void *)qword_1000D2888;
  qword_1000D2888 = (uint64_t)&off_1000BF458;

}

void sub_10004AAF8(void *a1, uint64_t a2)
{
  void *v2;
  _QWORD *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void **v19;
  uint64_t v20;
  void (*v21)(uint64_t, void *);
  void *v22;
  void (*v23)(void *);
  uint64_t v24;

  v5 = (_QWORD *)swift_allocObject(&unk_1000B8E18, 40, 7);
  v5[3] = 0;
  v5[4] = 0;
  v5[2] = v2;
  v6 = v2;
  v7 = sub_10004B510(1, (uint64_t)sub_10005DEC8, (uint64_t)v5);
  swift_release(v5);
  v8 = swift_allocObject(&unk_1000B8E40, 48, 7);
  *(_QWORD *)(v8 + 16) = v6;
  *(_BYTE *)(v8 + 24) = 5;
  *(_QWORD *)(v8 + 32) = a2;
  *(_QWORD *)(v8 + 40) = a1;
  v23 = sub_100059858;
  v24 = v8;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_10004AAF4;
  v22 = &unk_1000B8E58;
  v9 = _Block_copy(&v19);
  v10 = v24;
  v11 = v6;
  swift_bridgeObjectRetain(a2);
  v12 = a1;
  swift_release(v10);
  v13 = objc_msgSend(v7, "addSuccessBlock:", v9);
  _Block_release(v9);

  v14 = swift_allocObject(&unk_1000B8E90, 25, 7);
  *(_QWORD *)(v14 + 16) = v12;
  *(_BYTE *)(v14 + 24) = 5;
  v23 = (void (*)(void *))sub_10005E2D4;
  v24 = v14;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_10004AAF4;
  v22 = &unk_1000B8EA8;
  v15 = _Block_copy(&v19);
  v16 = v24;
  v17 = v12;
  swift_release(v16);
  v18 = objc_msgSend(v13, "addFailureBlock:", v15);
  _Block_release(v15);

}

void sub_10004ACD8(void *a1, uint64_t a2)
{
  void *v2;
  id v5;
  _QWORD *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  void **v20;
  uint64_t v21;
  void (*v22)(uint64_t, void *);
  void *v23;
  uint64_t (*v24)();
  uint64_t v25;

  v5 = objc_msgSend((id)objc_opt_self(HFAccessoryTypeGroup), "lightAccessoryTypeGroup");
  v6 = (_QWORD *)swift_allocObject(&unk_1000B94A8, 40, 7);
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v5;
  v7 = v5;
  v8 = sub_10004B510(1, (uint64_t)sub_1000599B0, (uint64_t)v6);
  swift_release(v6);
  v9 = swift_allocObject(&unk_1000B94D0, 48, 7);
  *(_QWORD *)(v9 + 16) = v2;
  *(_BYTE *)(v9 + 24) = 11;
  *(_QWORD *)(v9 + 32) = a2;
  *(_QWORD *)(v9 + 40) = a1;
  v24 = sub_10005DEFC;
  v25 = v9;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_10004AAF4;
  v23 = &unk_1000B94E8;
  v10 = _Block_copy(&v20);
  v11 = v25;
  v12 = v2;
  swift_bridgeObjectRetain(a2);
  v13 = a1;
  swift_release(v11);
  v14 = objc_msgSend(v8, "addSuccessBlock:", v10);
  _Block_release(v10);

  v15 = swift_allocObject(&unk_1000B9520, 25, 7);
  *(_QWORD *)(v15 + 16) = v13;
  *(_BYTE *)(v15 + 24) = 11;
  v24 = sub_10005E2D4;
  v25 = v15;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_10004AAF4;
  v23 = &unk_1000B9538;
  v16 = _Block_copy(&v20);
  v17 = v25;
  v18 = v13;
  swift_release(v17);
  v19 = objc_msgSend(v14, "addFailureBlock:", v16);
  _Block_release(v16);

}

id sub_10004AEDC(void *a1, void *a2, unsigned __int8 a3, void *a4)
{
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;

  v8 = objc_msgSend(a1, "itemManager");
  v9 = objc_msgSend(v8, "home");

  if (v9)
  {
    sub_10006CD60(a3);
    v11 = v10;
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
    objc_msgSend(a2, "startedTest:", v12);

    v13 = objc_msgSend(a4, "showHome:", v9);
  }
  else
  {
    v14 = sub_1000596B8();
    v15 = swift_allocError(&_s20PerformanceTestErrorON, v14, 0, 0);
    v17 = v16;
    v18 = objc_msgSend(a1, "itemManager");
    v19 = sub_10005D394(0, (unint64_t *)&unk_1000D1740, HUDashboardItemManager_ptr);
    *(_QWORD *)v17 = v18;
    *(_QWORD *)(v17 + 24) = v19;
    *(_QWORD *)(v17 + 32) = 1701670760;
    *(_QWORD *)(v17 + 40) = 0xE400000000000000;
    *(_BYTE *)(v17 + 48) = 3;
    v9 = (id)_convertErrorToNSError(_:)(v15);
    v13 = objc_msgSend((id)objc_opt_self(NAFuture), "futureWithError:", v9);
    swift_errorRelease(v15);
  }

  return v13;
}

void sub_10004B064(void *a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;

  sub_10006CD60(a2);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  objc_msgSend(a1, "startedTest:", v5);

}

void sub_10004B0BC(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  void **v18;
  uint64_t v19;
  void (*v20)(uint64_t, void *);
  void *v21;
  uint64_t (*v22)();
  uint64_t v23;

  v5 = swift_allocObject(&unk_1000B9160, 32, 7);
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  v6 = sub_10004B510(1, (uint64_t)sub_1000598F8, v5);
  swift_release(v5);
  v7 = swift_allocObject(&unk_1000B9188, 48, 7);
  *(_QWORD *)(v7 + 16) = v2;
  *(_BYTE *)(v7 + 24) = 8;
  *(_QWORD *)(v7 + 32) = a2;
  *(_QWORD *)(v7 + 40) = a1;
  v22 = sub_10005DEFC;
  v23 = v7;
  v18 = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_10004AAF4;
  v21 = &unk_1000B91A0;
  v8 = _Block_copy(&v18);
  v9 = v23;
  v10 = v2;
  swift_bridgeObjectRetain(a2);
  v11 = a1;
  swift_release(v9);
  v12 = objc_msgSend(v6, "addSuccessBlock:", v8);
  _Block_release(v8);

  v13 = swift_allocObject(&unk_1000B91D8, 25, 7);
  *(_QWORD *)(v13 + 16) = v11;
  *(_BYTE *)(v13 + 24) = 8;
  v22 = sub_10005E2D4;
  v23 = v13;
  v18 = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_10004AAF4;
  v21 = &unk_1000B91F0;
  v14 = _Block_copy(&v18);
  v15 = v23;
  v16 = v11;
  swift_release(v15);
  v17 = objc_msgSend(v12, "addFailureBlock:", v14);
  _Block_release(v14);

}

void sub_10004B284(void *a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  id v4;

  v4 = sub_10006FD38(a1, a3, a4);

}

id sub_10004B324(int a1, void *a2, id a3, void *a4, void (*a5)(id))
{
  uint64_t v5;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id result;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v10 = objc_msgSend(a3, "hf_activeRooms");
  v11 = sub_10005D394(0, &qword_1000D1650, HMRoom_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  if (v12 < 0 || (v12 & 0x4000000000000000) != 0)
  {
    v22 = a4;
    v23 = swift_bridgeObjectRetain(v12);
    v13 = (uint64_t)sub_100073028(v23);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v13 = v12 & 0xFFFFFFFFFFFFFF8;
    v14 = a4;
    swift_bridgeObjectRetain(v12);
  }
  v26 = v13;
  v15 = a4;
  sub_100059298(&v26, (void *)v15);
  if (v5)
    goto LABEL_22;
  swift_bridgeObjectRelease(v12);

  v15 = v26;
  if ((v26 & 0x8000000000000000) == 0 && (v26 & 0x4000000000000000) == 0)
  {
    if (*(_QWORD *)(v26 + 16))
      goto LABEL_8;
LABEL_17:
    swift_release(v15);
    v18 = objc_msgSend(a3, "roomForEntireHome");
    v17 = v18;
    if (!a5)
    {
LABEL_13:
      v19 = objc_msgSend(a2, "_showRoom:animated:", v17, 1);
      if (v19)
      {
        v20 = v19;

        return v20;
      }
      goto LABEL_21;
    }
LABEL_12:
    a5(v18);
    goto LABEL_13;
  }
  v24 = swift_bridgeObjectRetain(v26);
  v25 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_release(v15);
  if (!v25)
    goto LABEL_17;
LABEL_8:
  if ((v15 & 0xC000000000000001) != 0)
  {
    v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
LABEL_11:
    v17 = v16;
    v18 = (id)swift_release(v15);
    if (!a5)
      goto LABEL_13;
    goto LABEL_12;
  }
  if (*(_QWORD *)(v15 + 16))
  {
    v16 = *(id *)(v15 + 32);
    goto LABEL_11;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:

  result = (id)swift_release(v26);
  __break(1u);
  return result;
}

id sub_10004B510(char a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id result;
  void *v9;
  void *v10;
  id v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  void *v17;
  _QWORD *v18;
  id v19;
  id v20;
  void **v21;
  uint64_t v22;
  id (*v23)(uint64_t, void *);
  void *v24;
  id (*v25)(void *);
  _QWORD *v26;

  v4 = v3;
  result = objc_msgSend(v4, "_selectAndFinishFirstReadForTabWithIdentifier:", HFHomeAppTabIdentifierHome);
  if (result)
  {
    v9 = result;
    v25 = sub_1000728D8;
    v26 = 0;
    v21 = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_10004ACD0;
    v24 = &unk_1000B8BD8;
    v10 = _Block_copy(&v21);
    v11 = objc_msgSend(v9, "flatMap:", v10);
    _Block_release(v10);

    v12 = (_QWORD *)swift_allocObject(&unk_1000B8C10, 40, 7);
    v12[2] = v4;
    v12[3] = a2;
    v12[4] = a3;
    v25 = (id (*)(void *))sub_10005DEF4;
    v26 = v12;
    v21 = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_10004ACD0;
    v24 = &unk_1000B8C28;
    v13 = _Block_copy(&v21);
    v14 = v26;
    v15 = v4;
    swift_retain(a3);
    swift_release(v14);
    v16 = objc_msgSend(v11, "flatMap:", v13);
    _Block_release(v13);

    if ((a1 & 1) != 0)
    {
      v25 = sub_100054584;
      v26 = 0;
      v21 = _NSConcreteStackBlock;
      v22 = 1107296256;
      v23 = sub_1000547BC;
      v24 = &unk_1000B8C50;
      v17 = _Block_copy(&v21);
      v18 = v26;
      v19 = v16;
      swift_release(v18);
      v20 = objc_msgSend(v19, "flatMap:", v17);
      _Block_release(v17);

      return v20;
    }
    else
    {
      return v16;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10004B71C(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  void **v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t (*v29)();
  uint64_t v30;

  v5 = swift_allocObject(&unk_1000B9688, 24, 7);
  *(_QWORD *)(v5 + 16) = v2;
  v6 = HFHomeAppTabIdentifierHome;
  v7 = v2;
  v8 = objc_msgSend(v7, "_selectAndFinishFirstReadForTabWithIdentifier:", v6);
  if (v8)
  {
    v9 = v8;
    v10 = swift_allocObject(&unk_1000B96B0, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_100059A9C;
    *(_QWORD *)(v10 + 24) = v5;
    v29 = (uint64_t (*)())sub_100059AD8;
    v30 = v10;
    v25 = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_10004ACD0;
    v28 = &unk_1000B96C8;
    v11 = _Block_copy(&v25);
    v12 = v30;
    swift_retain(v5);
    swift_release(v12);
    v13 = objc_msgSend(v9, "flatMap:", v11);
    _Block_release(v11);
    swift_release(v5);

    v14 = swift_allocObject(&unk_1000B9700, 48, 7);
    *(_QWORD *)(v14 + 16) = v7;
    *(_BYTE *)(v14 + 24) = 13;
    *(_QWORD *)(v14 + 32) = a2;
    *(_QWORD *)(v14 + 40) = a1;
    v29 = (uint64_t (*)())sub_100059AE4;
    v30 = v14;
    v25 = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_10004AAF4;
    v28 = &unk_1000B9718;
    v15 = _Block_copy(&v25);
    v16 = v30;
    v17 = v7;
    swift_bridgeObjectRetain(a2);
    v18 = a1;
    swift_release(v16);
    v19 = objc_msgSend(v13, "addSuccessBlock:", v15);
    _Block_release(v15);

    v20 = swift_allocObject(&unk_1000B9750, 25, 7);
    *(_QWORD *)(v20 + 16) = v18;
    *(_BYTE *)(v20 + 24) = 13;
    v29 = sub_10005E2D4;
    v30 = v20;
    v25 = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_10004AAF4;
    v28 = &unk_1000B9768;
    v21 = _Block_copy(&v25);
    v22 = v30;
    v23 = v18;
    swift_release(v22);
    v24 = objc_msgSend(v19, "addFailureBlock:", v21);
    _Block_release(v21);

  }
  else
  {
    __break(1u);
  }
}

id sub_10004B9A0(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v4 = sub_100059334(a1);
  if (!v2)
  {
    v5 = (void *)v4;
    v6 = objc_msgSend(objc_allocWithZone((Class)HFActionSetBuilder), "initWithExistingObject:inHome:", v4, a1);
    v7 = _s23AccessoryPickerDelegateCMa();
    v8 = swift_allocObject(v7, 16, 7);
    objc_allocWithZone((Class)type metadata accessor for ActionSetAccessoryPickerViewController(0));
    v9 = v6;
    swift_retain(v8);
    v1 = (id)ActionSetAccessoryPickerViewController.init(actionSetBuilder:delegate:)(v9, v8);
    objc_msgSend(v1, "setModalPresentationStyle:", 2);

    swift_release(v8);
  }
  return v1;
}

void sub_10004BA7C(void *a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  id v22;

  v7 = type metadata accessor for ActionSetAccessoryPickerViewController(0);
  v8 = swift_dynamicCastClass(a1, v7);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = a1;
    v11 = objc_msgSend(v9, "collectionView");
    if (v11)
    {
      v12 = v11;
      v13 = sub_10006CD60(a3);
      v15 = v14;
      v22 = sub_10006FE70(v13, v14, v12, a4, 0);
      swift_bridgeObjectRelease(v15);
      v21 = objc_msgSend(v22, "asGeneric");

      return;
    }
    v19 = sub_1000596B8();
    v17 = swift_allocError(&_s20PerformanceTestErrorON, v19, 0, 0);
    *(_QWORD *)v20 = 0xD000000000000035;
    *(_QWORD *)(v20 + 8) = 0x8000000100090590;
    *(_BYTE *)(v20 + 48) = 4;
    swift_willThrow(v17);

  }
  else
  {
    v16 = sub_1000596B8();
    v17 = swift_allocError(&_s20PerformanceTestErrorON, v16, 0, 0);
    *(_QWORD *)v18 = 0xD000000000000036;
    *(_QWORD *)(v18 + 8) = 0x8000000100090550;
    *(_BYTE *)(v18 + 48) = 4;
    swift_willThrow(v17);
  }
  swift_errorRetain(v17);
  sub_10006CBF0(a3, v17);
  swift_errorRelease(v17);
  swift_errorRelease(v17);
}

void sub_10004BC64(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  void **v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void (*v29)(void *);
  uint64_t v30;

  v5 = swift_allocObject(&unk_1000B9890, 24, 7);
  *(_QWORD *)(v5 + 16) = v2;
  v6 = HFHomeAppTabIdentifierHome;
  v7 = v2;
  v8 = objc_msgSend(v7, "_selectAndFinishFirstReadForTabWithIdentifier:", v6);
  if (v8)
  {
    v9 = v8;
    v10 = swift_allocObject(&unk_1000B98B8, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_100059BB4;
    *(_QWORD *)(v10 + 24) = v5;
    v29 = (void (*)(void *))sub_10005E2E0;
    v30 = v10;
    v25 = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_10004ACD0;
    v28 = &unk_1000B98D0;
    v11 = _Block_copy(&v25);
    v12 = v30;
    swift_retain(v5);
    swift_release(v12);
    v13 = objc_msgSend(v9, "flatMap:", v11);
    _Block_release(v11);
    swift_release(v5);

    v14 = swift_allocObject(&unk_1000B9908, 48, 7);
    *(_QWORD *)(v14 + 16) = v7;
    *(_BYTE *)(v14 + 24) = 14;
    *(_QWORD *)(v14 + 32) = a2;
    *(_QWORD *)(v14 + 40) = a1;
    v29 = sub_100059C04;
    v30 = v14;
    v25 = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_10004AAF4;
    v28 = &unk_1000B9920;
    v15 = _Block_copy(&v25);
    v16 = v30;
    v17 = v7;
    swift_bridgeObjectRetain(a2);
    v18 = a1;
    swift_release(v16);
    v19 = objc_msgSend(v13, "addSuccessBlock:", v15);
    _Block_release(v15);

    v20 = swift_allocObject(&unk_1000B9958, 25, 7);
    *(_QWORD *)(v20 + 16) = v18;
    *(_BYTE *)(v20 + 24) = 14;
    v29 = (void (*)(void *))sub_10005E2D4;
    v30 = v20;
    v25 = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_10004AAF4;
    v28 = &unk_1000B9970;
    v21 = _Block_copy(&v25);
    v22 = v30;
    v23 = v18;
    swift_release(v22);
    v24 = objc_msgSend(v19, "addFailureBlock:", v21);
    _Block_release(v21);

  }
  else
  {
    __break(1u);
  }
}

id sub_10004BEE8(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v4;
  void *v5;
  id v6;

  v4 = sub_100059334(a1);
  if (!v1)
  {
    v5 = (void *)v4;
    v6 = objc_msgSend(objc_allocWithZone((Class)HFActionSetBuilder), "initWithExistingObject:inHome:", v4, a1);
    v2 = objc_msgSend(objc_allocWithZone((Class)HUSceneActionEditorViewController), "initWithActionSetBuilder:mode:", v6, 0);
    objc_msgSend(v2, "setModalPresentationStyle:", 2);

  }
  return v2;
}

void sub_10004BF8C(void *a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  Swift::String v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  id v29;

  v7 = objc_opt_self(HUSceneActionEditorViewController);
  v8 = swift_dynamicCastObjCClass(a1, v7);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = a1;
    v11 = objc_msgSend(v9, "tableView");
    if (v11)
    {
      v12 = v11;
      v13 = sub_10006CD60(a3);
      v15 = v14;
      v29 = sub_10006FE70(v13, v14, v12, a4, 0);
      swift_bridgeObjectRelease(v15);
      v28 = objc_msgSend(v29, "asGeneric");

      return;
    }
    v26 = sub_1000596B8();
    v25 = swift_allocError(&_s20PerformanceTestErrorON, v26, 0, 0);
    v17 = v25;
    *(_QWORD *)v27 = 0x656956656C626174;
    *(_QWORD *)(v27 + 8) = 0xE900000000000077;
    *(_QWORD *)(v27 + 16) = v9;
    *(_BYTE *)(v27 + 48) = 0;
  }
  else
  {
    v16 = sub_1000596B8();
    v17 = swift_allocError(&_s20PerformanceTestErrorON, v16, 0, 0);
    v19 = v18;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease(0xE000000000000000);
    v20 = objc_msgSend(a1, "description");
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    v24._countAndFlagsBits = v21;
    v24._object = v23;
    String.append(_:)(v24);
    v25 = swift_bridgeObjectRelease(v23);
    *(_QWORD *)v19 = 0xD00000000000002ELL;
    *(_QWORD *)(v19 + 8) = 0x8000000100090620;
    *(_BYTE *)(v19 + 48) = 4;
  }
  swift_willThrow(v25);
  swift_errorRetain(v17);
  sub_10006CBF0(a3, v17);
  swift_errorRelease(v17);
  swift_errorRelease(v17);
}

BOOL sub_10004C1D8(id *a1, void **a2)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;

  v2 = *a1;
  v3 = *a2;
  v4 = objc_msgSend(*a1, "hf_affectedServices");
  v5 = sub_10005D394(0, &qword_1000D1750, HMService_ptr);
  v6 = sub_1000597C8(&qword_1000D1758, &qword_1000D1750, HMService_ptr);
  v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6);

  if ((v7 & 0xC000000000000001) != 0)
  {
    if (v7 < 0)
      v8 = v7;
    else
      v8 = v7 & 0xFFFFFFFFFFFFFF8;
    v9 = __CocoaSet.count.getter(v8);
  }
  else
  {
    v9 = *(_QWORD *)(v7 + 16);
  }
  swift_bridgeObjectRelease(v7);
  v10 = objc_msgSend(v3, "hf_affectedServices");
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v10, v5, v6);

  if ((v11 & 0xC000000000000001) != 0)
  {
    if (v11 < 0)
      v12 = v11;
    else
      v12 = v11 & 0xFFFFFFFFFFFFFF8;
    v13 = __CocoaSet.count.getter(v12);
  }
  else
  {
    v13 = *(_QWORD *)(v11 + 16);
  }
  swift_bridgeObjectRelease(v11);
  if (v9 != v13)
    return v13 < v9;
  v14 = objc_msgSend(v2, "name");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18 = objc_msgSend(v3, "name");
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  if (v19 == v15 && v21 == v17)
  {
    swift_bridgeObjectRelease_n(v17, 2);
    return 0;
  }
  else
  {
    v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v15, v17, 1);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v21);
    return v23 & 1;
  }
}

id sub_10004C3C8(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  _QWORD *v18;
  void *v20;
  NSString v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  NSString v26;
  id v27;
  void *v28;
  id v29;
  _QWORD v30[5];
  _QWORD *v31;

  v6 = objc_msgSend(a1, "topViewController");
  if (!v6)
    goto LABEL_6;
  v7 = v6;
  v8 = objc_opt_self(HUDashboardViewController);
  v9 = (void *)swift_dynamicCastObjCClass(v7, v8);
  if (!v9)
  {

LABEL_6:
    v20 = (void *)objc_opt_self(NSError);
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v20, "hf_errorWithCode:description:", 30, v21);

    v23 = (void *)_convertErrorToNSError(_:)(v22);
    v24 = objc_msgSend((id)objc_opt_self(NAFuture), "futureWithError:", v23);

    return v24;
  }
  v10 = objc_msgSend(v9, "itemManager");
  v11 = objc_msgSend(v10, "home");

  if (v11)
  {
    v12 = (_QWORD *)swift_allocObject(&unk_1000B97A0, 48, 7);
    v12[2] = a2;
    v12[3] = a3;
    v12[4] = v11;
    v12[5] = a1;
    v30[4] = sub_100059B28;
    v31 = v12;
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 1107296256;
    v30[2] = sub_10004D8A8;
    v30[3] = &unk_1000B97B8;
    v13 = _Block_copy(v30);
    v14 = (void *)objc_opt_self(NAFuture);
    swift_retain(a3);
    v15 = v11;
    v16 = a1;
    v17 = objc_msgSend(v14, "futureWithBlock:", v13);
    _Block_release(v13);
    v18 = v31;

    swift_release(v18);
    return v17;
  }
  else
  {
    v25 = (void *)objc_opt_self(NSError);
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v25, "hf_errorWithCode:description:", 59, v26);

    v28 = (void *)_convertErrorToNSError(_:)(v27);
    v29 = objc_msgSend((id)objc_opt_self(NAFuture), "futureWithError:", v28);

    return v29;
  }
}

uint64_t sub_10004C680(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v10;
  _QWORD *v11;
  void *v12;
  _QWORD *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  _QWORD v19[5];
  _QWORD *v20;

  v10 = objc_msgSend((id)objc_opt_self(NAScheduler), "mainThreadScheduler");
  v11 = (_QWORD *)swift_allocObject(&unk_1000B97F0, 56, 7);
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a5;
  v11[6] = a1;
  v19[4] = sub_100059B70;
  v20 = v11;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_100070484;
  v19[3] = &unk_1000B9808;
  v12 = _Block_copy(v19);
  v13 = v20;
  swift_retain(a3);
  v14 = a4;
  v15 = a5;
  v16 = a1;
  swift_release(v13);
  v17 = objc_msgSend(v10, "afterDelay:performBlock:", v12, 0.3);
  _Block_release(v12);
  swift_unknownObjectRelease(v10);
  return swift_unknownObjectRelease(v17);
}

void sub_10004C7B8(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  _QWORD aBlock[5];
  uint64_t v17;

  v7 = (void *)a1(a3);
  v8 = objc_msgSend(a4, "hu_presentPreloadableViewController:animated:", v7, 1);
  if (v8)
  {
    v9 = v8;
    v10 = swift_allocObject(&unk_1000B9840, 32, 7);
    *(_QWORD *)(v10 + 16) = a5;
    *(_QWORD *)(v10 + 24) = v7;
    aBlock[4] = sub_100059BAC;
    v17 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10006B6AC;
    aBlock[3] = &unk_1000B9858;
    v11 = _Block_copy(aBlock);
    v12 = v17;
    v13 = a5;
    v14 = v7;
    swift_release(v12);
    v15 = objc_msgSend(v9, "addCompletionBlock:", v11);
    _Block_release(v11);

  }
  else
  {
    __break(1u);
  }
}

id sub_10004C920(int a1, uint64_t a2, id a3, uint64_t a4)
{
  void *v6;

  if (!a2)
    return objc_msgSend(a3, "finishWithResult:", a4);
  swift_errorRetain(a2);
  v6 = (void *)_convertErrorToNSError(_:)(a2);
  objc_msgSend(a3, "finishWithError:", v6);

  return (id)swift_errorRelease(a2);
}

uint64_t sub_10004C9B4()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

void sub_10004C9C4(void *a1, void *a2, unsigned __int8 a3, void *a4)
{
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void **aBlock;
  uint64_t v29;
  void (*v30)(uint64_t, void *);
  void *v31;
  void (*v32)(uint64_t);
  uint64_t v33;

  v7 = objc_msgSend(a1, "topViewController");
  if (v7
    && (v8 = v7,
        v9 = objc_opt_self(HUDashboardViewController),
        v10 = swift_dynamicCastObjCClass(v8, v9),
        v8,
        v10))
  {
    sub_10006CD60(a3);
    v12 = v11;
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    objc_msgSend(a2, "startedTest:", v13);

    v14 = objc_msgSend(a4, "firstReadCompleteFuture");
    v15 = swift_allocObject(&unk_1000B8990, 25, 7);
    *(_QWORD *)(v15 + 16) = a2;
    *(_BYTE *)(v15 + 24) = a3;
    v32 = sub_10005E2E4;
    v33 = v15;
    aBlock = _NSConcreteStackBlock;
    v29 = 1107296256;
    v30 = sub_10004AAF4;
    v31 = &unk_1000B89A8;
    v16 = _Block_copy(&aBlock);
    v17 = v33;
    v18 = a2;
    swift_release(v17);
    v19 = objc_msgSend(v14, "addSuccessBlock:", v16);
    _Block_release(v16);

    v20 = swift_allocObject(&unk_1000B89E0, 25, 7);
    *(_QWORD *)(v20 + 16) = v18;
    *(_BYTE *)(v20 + 24) = a3;
    v32 = (void (*)(uint64_t))sub_10005E2D4;
    v33 = v20;
    aBlock = _NSConcreteStackBlock;
    v29 = 1107296256;
    v30 = sub_10004AAF4;
    v31 = &unk_1000B89F8;
    v21 = _Block_copy(&aBlock);
    v22 = v33;
    v23 = v18;
    swift_release(v22);
    v24 = objc_msgSend(v19, "addFailureBlock:", v21);
    _Block_release(v21);

  }
  else
  {
    v25 = sub_1000596B8();
    v26 = swift_allocError(&_s20PerformanceTestErrorON, v25, 0, 0);
    *(_QWORD *)v27 = 0xD000000000000024;
    *(_QWORD *)(v27 + 8) = 0x8000000100090310;
    *(_BYTE *)(v27 + 48) = 4;
    swift_willThrow(v26);
    swift_errorRetain(v26);
    sub_10006CBF0(a3, v26);
    swift_errorRelease(v26);
    swift_errorRelease(v26);
  }
}

void sub_10004CC5C(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  _QWORD v14[5];
  uint64_t v15;

  v3 = v2;
  v6 = objc_msgSend(v3, "_selectAndFinishFirstReadForTabWithIdentifier:", HFHomeAppTabIdentifierHome);
  if (v6)
  {
    v7 = v6;
    v8 = swift_allocObject(&unk_1000B8A30, 48, 7);
    *(_QWORD *)(v8 + 16) = v3;
    *(_BYTE *)(v8 + 24) = 1;
    *(_QWORD *)(v8 + 32) = a2;
    *(_QWORD *)(v8 + 40) = a1;
    v14[4] = sub_100059700;
    v15 = v8;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_10004AAF4;
    v14[3] = &unk_1000B8A48;
    v9 = _Block_copy(v14);
    v10 = v15;
    v11 = v3;
    swift_bridgeObjectRetain(a2);
    v12 = a1;
    swift_release(v10);
    v13 = objc_msgSend(v7, "addSuccessBlock:", v9);
    _Block_release(v9);

  }
  else
  {
    __break(1u);
  }
}

void sub_10004CD7C(void *a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v6 = objc_msgSend(a1, "topViewController");
  if (v6)
  {
    v7 = v6;
    v8 = objc_opt_self(HUDashboardViewController);
    v9 = (void *)swift_dynamicCastObjCClass(v7, v8);
    if (v9)
    {
      v13 = sub_10006FD38(v9, a3, a4);

      return;
    }

  }
  v10 = sub_1000596B8();
  v11 = swift_allocError(&_s20PerformanceTestErrorON, v10, 0, 0);
  *(_QWORD *)v12 = 0xD000000000000024;
  *(_QWORD *)(v12 + 8) = 0x8000000100090310;
  *(_BYTE *)(v12 + 48) = 4;
  swift_willThrow(v11);
  swift_errorRetain(v11);
  sub_10006CBF0(a3, v11);
  swift_errorRelease(v11);
  swift_errorRelease(v11);
}

id sub_10004CEA8(int a1, id a2)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a2, "selectTabWithIdentifier:", HFHomeAppTabIdentifierTriggers);
  v3 = objc_msgSend(v2, "asGeneric");

  return v3;
}

id sub_10004CF08(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  void *v6;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = (void *)v4();
  swift_release(v3);

  return v6;
}

id sub_10004CF58(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  _QWORD v15[5];
  uint64_t v16;

  v7 = swift_allocObject(&unk_1000B9AE8, 40, 7);
  *(_QWORD *)(v7 + 16) = a2;
  *(_BYTE *)(v7 + 24) = a3;
  *(_QWORD *)(v7 + 32) = a4;
  v8 = (void *)objc_opt_self(NAScheduler);
  v9 = a2;
  v10 = a4;
  v11 = objc_msgSend(v8, "mainThreadScheduler");
  v15[4] = sub_10005A030;
  v16 = v7;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_10004D8A8;
  v15[3] = &unk_1000B9B00;
  v12 = _Block_copy(v15);
  v13 = objc_msgSend((id)objc_opt_self(NAFuture), "futureWithBlock:scheduler:", v12, v11);
  swift_unknownObjectRelease(v11);
  _Block_release(v12);
  swift_release(v16);
  return v13;
}

uint64_t sub_10004D070(void *a1, void *a2, char a3, void *a4)
{
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _QWORD v17[5];
  uint64_t v18;

  v8 = objc_msgSend((id)objc_opt_self(NAScheduler), "mainThreadScheduler");
  v9 = swift_allocObject(&unk_1000B9B38, 48, 7);
  *(_QWORD *)(v9 + 16) = a2;
  *(_BYTE *)(v9 + 24) = a3;
  *(_QWORD *)(v9 + 32) = a4;
  *(_QWORD *)(v9 + 40) = a1;
  v17[4] = sub_10005A074;
  v18 = v9;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_100070484;
  v17[3] = &unk_1000B9B50;
  v10 = _Block_copy(v17);
  v11 = v18;
  v12 = a2;
  v13 = a4;
  v14 = a1;
  swift_release(v11);
  v15 = objc_msgSend(v8, "afterDelay:performBlock:", v10, 0.5);
  _Block_release(v10);
  swift_unknownObjectRelease(v8);
  return swift_unknownObjectRelease(v15);
}

void sub_10004D18C(void *a1, unsigned __int8 a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  _QWORD v17[5];
  uint64_t v18;

  sub_10006CD60(a2);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  objc_msgSend(a1, "startedTest:", v9);

  v10 = objc_msgSend(a3, "selectTabWithIdentifier:", HFHomeAppTabIdentifierHome);
  v11 = objc_msgSend(v10, "asGeneric");

  v12 = objc_msgSend(a4, "completionHandlerAdapter");
  v13 = swift_allocObject(&unk_1000B9B88, 24, 7);
  *(_QWORD *)(v13 + 16) = v12;
  v14 = swift_allocObject(&unk_1000B9BB0, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_10005A0A8;
  *(_QWORD *)(v14 + 24) = v13;
  v17[4] = sub_10005A0B0;
  v18 = v14;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10006B6AC;
  v17[3] = &unk_1000B9BC8;
  v15 = _Block_copy(v17);
  swift_release(v18);
  v16 = objc_msgSend(v11, "addCompletionBlock:", v15);
  _Block_release(v15);

}

void sub_10004D314(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;

  sub_10005DB48(a1, (uint64_t)v11, &qword_1000D2120);
  v5 = v12;
  if (!v12)
  {
    v10 = 0;
    if (!a2)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = sub_10005A0B8(v11, v12);
  v7 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = _bridgeAnythingToObjectiveC<A>(_:)(v9, v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  sub_10005A0DC(v11);
  if (a2)
LABEL_3:
    a2 = (void *)_convertErrorToNSError(_:)(a2);
LABEL_4:
  (*(void (**)(uint64_t, uint64_t, void *))(a3 + 16))(a3, v10, a2);
  swift_unknownObjectRelease(v10);

}

uint64_t sub_10004D424(uint64_t a1, uint64_t a2, void (*a3)(__int128 *, uint64_t))
{
  __int128 v7;
  __int128 v8;

  if (a1)
  {
    *((_QWORD *)&v8 + 1) = swift_getObjectType();
    *(_QWORD *)&v7 = a1;
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
  }
  swift_unknownObjectRetain(a1);
  a3(&v7, a2);
  return sub_10005D3D4((uint64_t)&v7, &qword_1000D2120);
}

void sub_10004D4A0(uint64_t a1, void *a2, unsigned __int8 a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;

  sub_10006CD60(a3);
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  objc_msgSend(a2, "finishedTest:waitForCommit:extraResults:", v6, 1, 0);

}

void sub_10004D500(uint64_t a1, uint64_t a2, id a3, void *a4, char a5, uint64_t a6)
{
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  _QWORD v18[5];
  uint64_t v19;

  v11 = objc_msgSend(a3, "_selectAndFinishFirstReadForTabWithIdentifier:", HFHomeAppTabIdentifierHome);
  if (v11)
  {
    v12 = v11;
    v13 = swift_allocObject(&unk_1000B9C50, 56, 7);
    *(_QWORD *)(v13 + 16) = a4;
    *(_BYTE *)(v13 + 24) = a5;
    *(_QWORD *)(v13 + 32) = a6;
    *(_QWORD *)(v13 + 40) = a1;
    *(_QWORD *)(v13 + 48) = a2;
    v18[4] = sub_10005ABA0;
    v19 = v13;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    v18[2] = sub_10004AAF4;
    v18[3] = &unk_1000B9C68;
    v14 = _Block_copy(v18);
    v15 = v19;
    v16 = a4;
    swift_retain(a6);
    swift_retain(a2);
    swift_release(v15);
    v17 = objc_msgSend(v12, "addSuccessBlock:", v14);
    _Block_release(v14);

  }
  else
  {
    __break(1u);
  }
}

void sub_10004D630(void *a1, void *a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11;
  void *v12;
  uint64_t v13;
  id *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void **aBlock;
  uint64_t v30;
  void (*v31)(uint64_t, void *);
  void *v32;
  uint64_t (*v33)();
  uint64_t v34;
  char v35[24];

  v11 = objc_msgSend(a1, "topViewController");
  if (!v11)
    goto LABEL_6;
  v12 = v11;
  v13 = objc_opt_self(HUDashboardViewController);
  if (!swift_dynamicCastObjCClass(v12, v13))
  {

LABEL_6:
    v26 = sub_1000596B8();
    v27 = swift_allocError(&_s20PerformanceTestErrorON, v26, 0, 0);
    *(_QWORD *)v28 = 0xD000000000000024;
    *(_QWORD *)(v28 + 8) = 0x8000000100090310;
    *(_BYTE *)(v28 + 48) = 4;
    sub_10006CBF0(a3, v27);
    swift_errorRelease(v27);
    return;
  }
  v14 = (id *)(a4 + 16);
  swift_beginAccess(v14, v35, 0, 0);
  if (*v14)
  {
    v15 = *v14;
    v16 = sub_10006AF6C((uint64_t)v15);

    v17 = swift_allocObject(&unk_1000B9CA0, 32, 7);
    *(_QWORD *)(v17 + 16) = a5;
    *(_QWORD *)(v17 + 24) = a6;
    v33 = sub_10005ABB4;
    v34 = v17;
    aBlock = _NSConcreteStackBlock;
    v30 = 1107296256;
    v31 = sub_10004AAF4;
    v32 = &unk_1000B9CB8;
    v18 = _Block_copy(&aBlock);
    v19 = v34;
    swift_retain(a6);
    swift_release(v19);
    v20 = objc_msgSend(v16, "addSuccessBlock:", v18);
    _Block_release(v18);

    v21 = swift_allocObject(&unk_1000B9CF0, 25, 7);
    *(_QWORD *)(v21 + 16) = a2;
    *(_BYTE *)(v21 + 24) = a3;
    v33 = sub_10005E2D4;
    v34 = v21;
    aBlock = _NSConcreteStackBlock;
    v30 = 1107296256;
    v31 = sub_10004AAF4;
    v32 = &unk_1000B9D08;
    v22 = _Block_copy(&aBlock);
    v23 = v34;
    v24 = a2;
    swift_release(v23);
    v25 = objc_msgSend(v20, "addFailureBlock:", v22);
    _Block_release(v22);

  }
  else
  {
    __break(1u);
  }
}

void sub_10004D8A8(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

void sub_10004D8F8(int a1, id a2, void *a3, unsigned __int8 a4, char a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t inited;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  Class isa;
  void *v17;
  uint64_t v18;
  __int128 aBlock;
  uint64_t (*v20)(uint64_t);
  void *v21;
  void *(*v22)();
  uint64_t v23;
  _BYTE v24[104];

  objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, 0);
  v10 = sub_100059788(&qword_1000D1770);
  inited = swift_initStackObject(v10, v24);
  *(_OWORD *)(inited + 16) = xmmword_100089740;
  strcpy((char *)&aBlock, "usingBuilders");
  HIWORD(aBlock) = -4864;
  AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &aBlock, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for Bool;
  *(_BYTE *)(inited + 72) = a5;
  v12 = sub_10004DAD0(inited);
  sub_10006CD60(a4);
  v14 = v13;
  swift_retain_n(a6, 2);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v22 = sub_10005ABE4;
  v23 = a6;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v20 = sub_100070484;
  v21 = &unk_1000B9D80;
  v17 = _Block_copy(&aBlock);
  v18 = v23;
  swift_retain(a6);
  swift_release(v18);
  objc_msgSend(a3, "finishedTest:waitForCommit:extraResults:withTeardownBlock:", v15, 1, isa, v17);
  _Block_release(v17);
  swift_bridgeObjectRelease(v12);
  swift_release_n(a6, 2);

}

unint64_t sub_10004DAD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100059788(&qword_1000D1778);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10005DB48(v7, (uint64_t)v16, &qword_1000D1780);
    result = sub_100074310((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_10005AC04(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10004DC10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100059788(&qword_1000D1950);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10005DB48(v7, (uint64_t)&v16, &qword_1000D1958);
    v8 = v16;
    v9 = v17;
    result = sub_100074340(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_10005AC04(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_10004DD44(uint64_t a1, uint64_t a2, id a3, uint64_t a4, void *a5, char a6)
{
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  _QWORD v18[5];
  uint64_t v19;

  v11 = objc_msgSend(a3, "_selectAndFinishFirstReadForTabWithIdentifier:", HFHomeAppTabIdentifierTriggers);
  if (v11)
  {
    v12 = v11;
    v13 = swift_allocObject(&unk_1000B9EA8, 49, 7);
    *(_QWORD *)(v13 + 16) = a4;
    *(_QWORD *)(v13 + 24) = a1;
    *(_QWORD *)(v13 + 32) = a2;
    *(_QWORD *)(v13 + 40) = a5;
    *(_BYTE *)(v13 + 48) = a6;
    v18[4] = sub_10005B894;
    v19 = v13;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    v18[2] = sub_10004AAF4;
    v18[3] = &unk_1000B9EC0;
    v14 = _Block_copy(v18);
    v15 = v19;
    swift_retain(a4);
    swift_retain(a2);
    v16 = a5;
    swift_release(v15);
    v17 = objc_msgSend(v12, "addSuccessBlock:", v14);
    _Block_release(v14);

  }
  else
  {
    __break(1u);
  }
}

void sub_10004DE70(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  id v27;
  id v28;
  void **aBlock;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t (*v33)();
  _QWORD *v34;
  char v35[24];

  swift_beginAccess(a2 + 16, v35, 0, 0);
  v12 = *(void **)(a2 + 16);
  if (v12)
  {
    v13 = objc_msgSend(v12, "asGeneric");
    v14 = objc_msgSend(objc_allocWithZone((Class)HUTriggerSummaryViewController), "initWithTriggerBuilder:mode:isPresentedModally:delegate:", v13, 0, 1, 0);

    v15 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v14);
    v16 = objc_msgSend(a1, "topViewController");
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, "hu_presentPreloadableViewController:animated:", v15, 1);

      if (v18)
      {
        v19 = (_QWORD *)swift_allocObject(&unk_1000B9EF8, 40, 7);
        v19[2] = a3;
        v19[3] = a4;
        v19[4] = v14;
        v33 = sub_10005B8D0;
        v34 = v19;
        aBlock = _NSConcreteStackBlock;
        v30 = 1107296256;
        v31 = sub_10004ACD4;
        v32 = &unk_1000B9F10;
        v20 = _Block_copy(&aBlock);
        v21 = v34;
        v22 = v18;
        swift_retain(a4);
        v23 = v14;
        swift_release(v21);
        v14 = objc_msgSend(v22, "addSuccessBlock:", v20);
        _Block_release(v20);

        v24 = swift_allocObject(&unk_1000B9F48, 25, 7);
        *(_QWORD *)(v24 + 16) = a5;
        *(_BYTE *)(v24 + 24) = a6;
        v33 = sub_10005E2D4;
        v34 = (_QWORD *)v24;
        aBlock = _NSConcreteStackBlock;
        v30 = 1107296256;
        v31 = sub_10004AAF4;
        v32 = &unk_1000B9F60;
        v25 = _Block_copy(&aBlock);
        v26 = v34;
        v27 = a5;
        swift_release(v26);
        v28 = objc_msgSend(v14, "addFailureBlock:", v25);

        _Block_release(v25);
        v15 = v28;
      }
    }

  }
  else
  {
    __break(1u);
  }
}

void sub_10004E0F0(void *a1, void *a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  void *v18;
  id v19;
  unsigned __int8 v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  _QWORD aBlock[5];
  uint64_t v29;
  char v30[24];

  v14 = a4 + 16;
  sub_10006CD60(a3);
  v16 = v15;
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  objc_msgSend(a2, "startedTest:", v17);

  swift_beginAccess(v14, v30, 0, 0);
  v18 = *(void **)(a4 + 16);
  if (v18)
  {
    v19 = objc_msgSend(v18, "home");
    v20 = objc_msgSend(v19, "areAutomationBuildersSupported");

    v21 = objc_msgSend(a1, "commitChanges");
    v22 = swift_allocObject(a5, 48, 7);
    *(_QWORD *)(v22 + 16) = a1;
    *(_QWORD *)(v22 + 24) = a2;
    *(_BYTE *)(v22 + 32) = a3;
    *(_BYTE *)(v22 + 33) = v20;
    *(_QWORD *)(v22 + 40) = a4;
    aBlock[4] = a6;
    v29 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004ACD4;
    aBlock[3] = a7;
    v23 = _Block_copy(aBlock);
    v24 = v29;
    v25 = a1;
    v26 = a2;
    swift_retain(a4);
    swift_release(v24);
    v27 = objc_msgSend(v21, "addSuccessBlock:", v23);
    _Block_release(v23);

  }
  else
  {
    __break(1u);
  }
}

void sub_10004E28C(int a1, id a2, void *a3, unsigned __int8 a4, char a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t inited;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  Class isa;
  void *v17;
  uint64_t v18;
  __int128 aBlock;
  uint64_t (*v20)(uint64_t);
  void *v21;
  void *(*v22)();
  uint64_t v23;
  _BYTE v24[104];

  objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, 0);
  v10 = sub_100059788(&qword_1000D1770);
  inited = swift_initStackObject(v10, v24);
  *(_OWORD *)(inited + 16) = xmmword_100089740;
  strcpy((char *)&aBlock, "usingBuilders");
  HIWORD(aBlock) = -4864;
  AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &aBlock, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for Bool;
  *(_BYTE *)(inited + 72) = a5;
  v12 = sub_10004DAD0(inited);
  sub_10006CD60(a4);
  v14 = v13;
  swift_retain_n(a6, 2);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v22 = sub_10005B954;
  v23 = a6;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v20 = sub_100070484;
  v21 = &unk_1000B9FD8;
  v17 = _Block_copy(&aBlock);
  v18 = v23;
  swift_retain(a6);
  swift_release(v18);
  objc_msgSend(a3, "finishedTest:waitForCommit:extraResults:withTeardownBlock:", v15, 1, isa, v17);
  _Block_release(v17);
  swift_bridgeObjectRelease(v12);
  swift_release_n(a6, 2);

}

void *sub_10004E464(uint64_t a1, SEL *a2)
{
  void *result;
  _BYTE v5[24];

  swift_beginAccess(a1 + 16, v5, 0, 0);
  result = *(void **)(a1 + 16);
  if (result)
  {

    return (void *)sleep(3u);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10004E4C8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

uint64_t sub_10004E53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD v13[3];
  _BYTE v14[24];

  swift_beginAccess(a3 + 16, v14, 1, 0);
  v8 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(a3 + 16) = a2;
  swift_errorRetain(a2);
  swift_errorRelease(v8);
  if (!a1
    || (v13[0] = 0,
        v9 = sub_10005D394(0, &qword_1000D1798, HRERecommendation_ptr),
        static Array._conditionallyBridgeFromObjectiveC(_:result:)(a1, v13, v9),
        (v10 = (_QWORD *)v13[0]) == 0))
  {
    swift_bridgeObjectRelease(0);
    v10 = _swiftEmptyArrayStorage;
  }
  swift_beginAccess(a4 + 16, v13, 1, 0);
  v11 = *(_QWORD *)(a4 + 16);
  *(_QWORD *)(a4 + 16) = v10;
  return swift_bridgeObjectRelease(v11);
}

uint64_t sub_10004E610(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  os_log_type_t v19;
  NSObject *v20;
  _BOOL4 v21;
  _DWORD *v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  char v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  _QWORD v55[2];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  int v62;
  char *v63;
  void **aBlock;
  uint64_t v65;
  void *v66;
  void *v67;
  id (*v68)(void *);
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  __int128 v72;
  __int128 v73;

  v6 = v5;
  v57 = a5;
  v61 = a3;
  v62 = a2;
  v9 = sub_100059788(&qword_1000D1808);
  v58 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v59 = v10;
  v11 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100059788((uint64_t *)&unk_1000D1810);
  v56 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v56 + 64);
  v14 = __chkstk_darwin(v12);
  v15 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)v55 - v17;
  v19 = static os_log_type_t.default.getter(v16);
  sub_10005D394(0, (unint64_t *)&qword_1000D1760, OS_os_log_ptr);
  v20 = static OS_os_log.default.getter();
  v21 = os_log_type_enabled(v20, v19);
  v63 = v18;
  v60 = a1;
  if (v21)
  {
    v55[1] = v6;
    v22 = (_DWORD *)swift_slowAlloc(12, -1);
    aBlock = (void **)swift_slowAlloc(32, -1);
    *v22 = 136315138;
    __asm { BR              X10 }
  }

  v70 = 0x726F737365636361;
  v71 = 0xEB00000000444979;
  AnyHashable.init<A>(_:)(&aBlock, &v70, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a4 + 16) && (v23 = sub_100074310((uint64_t)&aBlock), (v24 & 1) != 0))
  {
    sub_10005BBA0(*(_QWORD *)(a4 + 56) + 32 * v23, (uint64_t)&v72);
  }
  else
  {
    v72 = 0u;
    v73 = 0u;
  }
  sub_10005B9BC((uint64_t)&aBlock);
  if (*((_QWORD *)&v73 + 1))
  {
    if ((swift_dynamicCast(&v70, &v72, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v25 = v71;
      if (v71)
      {
        UUID.init(uuidString:)(v70, v71);
        swift_bridgeObjectRelease(v25);
        goto LABEL_13;
      }
    }
  }
  else
  {
    sub_10005D3D4((uint64_t)&v72, &qword_1000D2120);
  }
  v26 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v18, 1, 1, v26);
LABEL_13:
  v27 = objc_msgSend(v6, "_selectAndFinishFirstReadForTabWithIdentifier:", HFHomeAppTabIdentifierHome);
  if (!v27)
  {
    __break(1u);
    JUMPOUT(0x10004EC74);
  }
  v28 = v27;
  v29 = v6;
  sub_10005DB48((uint64_t)v18, (uint64_t)v15, (uint64_t *)&unk_1000D1810);
  sub_10005DB48(v57, (uint64_t)v11, &qword_1000D1808);
  v30 = *(unsigned __int8 *)(v56 + 80);
  v31 = (v30 + 25) & ~v30;
  v32 = (v13 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = *(unsigned __int8 *)(v58 + 80);
  v34 = (v33 + v32 + 9) & ~v33;
  v35 = swift_allocObject(&unk_1000BA060, v34 + v59, v30 | v33 | 7);
  *(_QWORD *)(v35 + 16) = v29;
  *(_BYTE *)(v35 + 24) = v60;
  sub_10005C860((uint64_t)v15, v35 + v31, (uint64_t *)&unk_1000D1810);
  v36 = v35 + v32;
  v37 = v61;
  *(_QWORD *)v36 = v61;
  v38 = v62;
  *(_BYTE *)(v36 + 8) = v62;
  sub_10005C860((uint64_t)v11, v35 + v34, &qword_1000D1808);
  v68 = sub_10005BB10;
  v69 = v35;
  aBlock = _NSConcreteStackBlock;
  v65 = 1107296256;
  v66 = sub_10004ACD0;
  v67 = &unk_1000BA078;
  v39 = _Block_copy(&aBlock);
  v40 = v69;
  v41 = v29;
  v42 = v37;
  swift_release(v40);
  v43 = objc_msgSend(v28, "flatMap:", v39);
  _Block_release(v39);

  v44 = swift_allocObject(&unk_1000BA0B0, 25, 7);
  *(_QWORD *)(v44 + 16) = v42;
  *(_BYTE *)(v44 + 24) = v38;
  v68 = (id (*)(void *))sub_10005E2DC;
  v69 = v44;
  aBlock = _NSConcreteStackBlock;
  v65 = 1107296256;
  v66 = sub_10004ACD4;
  v67 = &unk_1000BA0C8;
  v45 = _Block_copy(&aBlock);
  v46 = v69;
  v47 = v42;
  swift_release(v46);
  v48 = objc_msgSend(v43, "addSuccessBlock:", v45);
  _Block_release(v45);

  v49 = swift_allocObject(&unk_1000BA100, 25, 7);
  *(_QWORD *)(v49 + 16) = v47;
  *(_BYTE *)(v49 + 24) = v38;
  v68 = (id (*)(void *))sub_10005E2D4;
  v69 = v49;
  aBlock = _NSConcreteStackBlock;
  v65 = 1107296256;
  v66 = sub_10004AAF4;
  v67 = &unk_1000BA118;
  v50 = _Block_copy(&aBlock);
  v51 = v69;
  v52 = v47;
  swift_release(v51);
  v53 = objc_msgSend(v48, "addFailureBlock:", v50);
  _Block_release(v50);

  return sub_10005D3D4((uint64_t)v63, (uint64_t *)&unk_1000D1810);
}

uint64_t sub_10004EC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);

  v6[2] = a5;
  v8 = type metadata accessor for MainActor(0);
  v6[3] = v8;
  v6[4] = static MainActor.shared.getter(v8);
  v11 = (uint64_t (*)(uint64_t))((char *)&dword_1000D1858 + dword_1000D1858);
  v9 = (_QWORD *)swift_task_alloc(unk_1000D185C);
  v6[5] = v9;
  *v9 = v6;
  v9[1] = sub_10004ED10;
  return v11(a6);
}

uint64_t sub_10004ED10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_10004EDC8;
  else
    v6 = sub_10004ED98;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10004ED98()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004EDC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 32));
  swift_errorRetain(v1);
  sub_10006CBF0(0x1Du, v1);
  swift_errorRelease(v1);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004EE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);

  v6[2] = a5;
  v8 = type metadata accessor for MainActor(0);
  v6[3] = v8;
  v6[4] = static MainActor.shared.getter(v8);
  v11 = (uint64_t (*)(uint64_t))((char *)&dword_1000D1918 + dword_1000D1918);
  v9 = (_QWORD *)swift_task_alloc(unk_1000D191C);
  v6[5] = v9;
  *v9 = v6;
  v9[1] = sub_10004EEB0;
  return v11(a6);
}

uint64_t sub_10004EEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_10004EF38;
  else
    v6 = sub_10005DEC4;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10004EF38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 32));
  swift_errorRetain(v1);
  sub_10006CBF0(0x1Eu, v1);
  swift_errorRelease(v1);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004EF94()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[3] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[4] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[5] = v3;
  v1[6] = v4;
  return swift_task_switch(sub_10004F000, v3, v4);
}

id sub_10004F000()
{
  uint64_t v0;
  id result;
  id v2;
  _QWORD *v3;
  uint64_t v4;

  result = objc_msgSend(*(id *)(v0 + 24), "_selectAndFinishFirstReadForTabWithIdentifier:", HFHomeAppTabIdentifierHome);
  *(_QWORD *)(v0 + 56) = result;
  if (result)
  {
    v2 = result;
    v3 = (_QWORD *)swift_task_alloc(async function pointer to static NAFutureHelper.continuation<A>(_:)[1]);
    *(_QWORD *)(v0 + 64) = v3;
    v4 = sub_10005D394(0, &qword_1000D1D00, UINavigationController_ptr);
    *v3 = v0;
    v3[1] = sub_10004F0A0;
    return (id)static NAFutureHelper.continuation<A>(_:)(v2, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10004F0A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 64);
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = *(_QWORD *)(v3 + 40);
    v6 = *(_QWORD *)(v3 + 48);
    v7 = sub_10004F294;
  }
  else
  {

    v5 = *(_QWORD *)(v3 + 40);
    v6 = *(_QWORD *)(v3 + 48);
    v7 = sub_10004F114;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_10004F114()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  void *object;
  uint64_t v16;

  v1 = *(void **)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 32));
  v2 = objc_msgSend(v1, "topViewController");
  if (v2)
  {
    v3 = v2;
    v4 = objc_opt_self(HUDashboardViewController);
    v5 = swift_dynamicCastObjCClass(v3, v4);
    if (v5)
    {
      v6 = v5;

      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
    }

  }
  v8 = *(void **)(v0 + 72);
  v9 = sub_1000596B8();
  swift_allocError(&_s20PerformanceTestErrorON, v9, 0, 0);
  v11 = v10;
  _StringGuts.grow(_:)(83);
  v12._object = (void *)0x8000000100090700;
  v12._countAndFlagsBits = 0xD000000000000051;
  String.append(_:)(v12);
  *(_QWORD *)(v0 + 16) = objc_msgSend(v8, "topViewController");
  v13 = sub_100059788((uint64_t *)&unk_1000D2540);
  v14._countAndFlagsBits = String.init<A>(describing:)(v0 + 16, v13);
  object = v14._object;
  String.append(_:)(v14);
  v16 = swift_bridgeObjectRelease(object);
  *(_QWORD *)v11 = 0;
  *(_QWORD *)(v11 + 8) = 0xE000000000000000;
  *(_BYTE *)(v11 + 48) = 4;
  swift_willThrow(v16);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004F294()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 32));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004F2D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, unint64_t, uint64_t);
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = type metadata accessor for Device.Control.Kind.Primitive(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v40 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - v6;
  v8 = type metadata accessor for Device.Control.Kind(0);
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Device.Control(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = static Device.ControlModule.controls(in:)(a1);
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v32 = v15;
    v18 = v15 + v17;
    v35 = enum case for Device.Control.Kind.Primitive.incremental(_:);
    v19 = *(_QWORD *)(v12 + 72);
    v36 = v12;
    v37 = v11;
    v20 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v12 + 16);
    v33 = v19;
    v34 = v20;
    while (1)
    {
      v21 = v34(v14, v18, v11);
      v22 = Device.Control.kind.getter(v21);
      Device.Control.Kind.primitive.getter(v22);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v39);
      v23 = v3;
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v40, v35, v2);
      v24 = sub_100054BAC((unint64_t *)&unk_1000D1900, (uint64_t (*)(uint64_t))&type metadata accessor for Device.Control.Kind.Primitive, (uint64_t)&protocol conformance descriptor for Device.Control.Kind.Primitive);
      dispatch thunk of RawRepresentable.rawValue.getter(&v43, v2, v24);
      dispatch thunk of RawRepresentable.rawValue.getter(&v41, v2, v24);
      v25 = v44;
      v26 = v42;
      if (v43 == v41 && v44 == v42)
        break;
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v44, v41, v42, 0);
      swift_bridgeObjectRelease(v25);
      swift_bridgeObjectRelease(v26);
      v3 = v23;
      v28 = *(void (**)(char *, uint64_t))(v23 + 8);
      v28(v40, v2);
      v28(v7, v2);
      v11 = v37;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v37);
      if ((v27 & 1) != 0)
        goto LABEL_10;
      v18 += v33;
      if (!--v16)
      {
        v15 = v32;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease_n(v44, 2);
    v30 = *(void (**)(char *, uint64_t))(v23 + 8);
    v30(v40, v2);
    v30(v7, v2);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v37);
LABEL_10:
    swift_bridgeObjectRelease(v32);
    return 1;
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease(v15);
    return 0;
  }
}

uint64_t sub_10004F598(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  Class isa;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  Class v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[5];
  uint64_t v41;

  v5 = v4;
  v38 = a3;
  v39 = a4;
  v7 = sub_100059788((uint64_t *)&unk_1000D1810);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v11 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v38 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v38 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v38 - v18;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v21 = objc_msgSend(v5, "homeKitObjectIDFrom:userDefaultsEnabled:", isa, 1);

  if (v21)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v21);

    v22 = type metadata accessor for UUID(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v17, 0, 1, v22);
  }
  else
  {
    v22 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v17, 1, 1, v22);
  }
  sub_10005C860((uint64_t)v17, (uint64_t)v19, (uint64_t *)&unk_1000D1810);
  v23 = objc_msgSend(a2, "itemManager");
  sub_10005DB48((uint64_t)v19, (uint64_t)v14, (uint64_t *)&unk_1000D1810);
  type metadata accessor for UUID(0);
  v24 = *(_QWORD *)(v22 - 8);
  v25 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v22) != 1)
  {
    v25 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v22);
  }
  sub_10005DB48((uint64_t)v19, (uint64_t)v11, (uint64_t *)&unk_1000D1810);
  v26 = *(unsigned __int8 *)(v8 + 80);
  v27 = (v26 + 16) & ~v26;
  v28 = (v9 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_1000BA448, v28 + 16, v26 | 7);
  sub_10005C860((uint64_t)v11, v29 + v27, (uint64_t *)&unk_1000D1810);
  v30 = (_QWORD *)(v29 + v28);
  v31 = v39;
  *v30 = v38;
  v30[1] = v31;
  v32 = swift_allocObject(&unk_1000BA470, 32, 7);
  *(_QWORD *)(v32 + 16) = sub_10005C99C;
  *(_QWORD *)(v32 + 24) = v29;
  aBlock[4] = sub_10005E2E8;
  v41 = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100050694;
  aBlock[3] = &unk_1000BA488;
  v33 = _Block_copy(aBlock);
  v34 = v41;
  swift_retain(v32);
  swift_release(v34);
  v35 = objc_msgSend(v5, "findAccessoryWithItemManager:accessoryID:testBlock:", v23, v25, v33);
  _Block_release(v33);

  sub_10005D3D4((uint64_t)v19, (uint64_t *)&unk_1000D1810);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v32, "", 104, 682, 9, 1);
  swift_release(v29);
  result = swift_release(v32);
  if ((isEscapingClosureAtFileLocation & 1) == 0)
    return (uint64_t)v35;
  __break(1u);
  return result;
}

uint64_t sub_10004F910()
{
  sub_100059788(&qword_1000D1868);
  return static AccessoryControlViewController.test_performanceTestingEnded()();
}

uint64_t sub_10004F93C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v2 = type metadata accessor for Device.Control.ViewSize(0);
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  __chkstk_darwin(v2);
  v51 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Device.Control.ViewSizeConstraint(0);
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  __chkstk_darwin(v4);
  v48 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100059788(&qword_1000D1920);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ControlViewType(0);
  v54 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v47 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v46 = (char *)&v46 - v12;
  v13 = type metadata accessor for Device.Control.Kind.Primitive(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v46 - v18;
  v20 = type metadata accessor for Device.Control.Kind(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = a1;
  v25 = Device.Control.kind.getter(v22);
  Device.Control.Kind.primitive.getter(v25);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v17, enum case for Device.Control.Kind.Primitive.binary(_:), v13);
  v26 = sub_100054BAC((unint64_t *)&unk_1000D1900, (uint64_t (*)(uint64_t))&type metadata accessor for Device.Control.Kind.Primitive, (uint64_t)&protocol conformance descriptor for Device.Control.Kind.Primitive);
  dispatch thunk of RawRepresentable.rawValue.getter(&v58, v13, v26);
  dispatch thunk of RawRepresentable.rawValue.getter(&v56, v13, v26);
  v27 = v59;
  v28 = v57;
  if (v58 == v56 && v59 == v57)
  {
    swift_bridgeObjectRelease_n(v59, 2);
    v29 = *(void (**)(char *, uint64_t))(v14 + 8);
    v29(v17, v13);
    v30 = ((uint64_t (*)(char *, uint64_t))v29)(v19, v13);
  }
  else
  {
    v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v58, v59, v56, v57, 0);
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRelease(v28);
    v32 = *(void (**)(char *, uint64_t))(v14 + 8);
    v32(v17, v13);
    v30 = ((uint64_t (*)(char *, uint64_t))v32)(v19, v13);
    v33 = 0;
    if ((v31 & 1) == 0)
      return v33 & 1;
  }
  Device.Control.preferredViewType.getter(v30);
  v34 = v54;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v8, 1, v9) == 1)
  {
    v35 = sub_10005D3D4((uint64_t)v8, &qword_1000D1920);
  }
  else
  {
    v36 = v46;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v46, v8, v9);
    v37 = v47;
    (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v47, enum case for ControlViewType.largeSwitch(_:), v9);
    v38 = sub_100054BAC(&qword_1000D1928, (uint64_t (*)(uint64_t))&type metadata accessor for ControlViewType, (uint64_t)&protocol conformance descriptor for ControlViewType);
    v39 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v37, v9, v38);
    v40 = *(void (**)(char *, uint64_t))(v34 + 8);
    v40(v37, v9);
    v35 = ((uint64_t (*)(char *, uint64_t))v40)(v36, v9);
    if ((v39 & 1) == 0)
    {
      v33 = 0;
      return v33 & 1;
    }
  }
  v41 = v48;
  Device.Control.sizeConstraint.getter(v35);
  v43 = v51;
  v42 = v52;
  v44 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v51, enum case for Device.Control.ViewSize.large(_:), v53);
  v33 = Device.Control.ViewSizeConstraint.allows(size:)(v43);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v41, v50);
  return v33 & 1;
}

uint64_t sub_10004FD78(uint64_t a1, uint64_t (*a2)(unint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = static Device.ControlModule.controls(in:)();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = *(_QWORD *)(type metadata accessor for Device.Control(0) - 8);
    v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    while ((a2(v6) & 1) == 0)
    {
      v6 += v7;
      if (!--v4)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease(v3);
    return 1;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease(v3);
    return 0;
  }
}

uint64_t sub_10004FE20(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  char *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  void *v35;
  uint64_t v36;
  uint64_t result;
  BOOL v38;
  id v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  void *v46;
  id v47;
  _QWORD *v48;
  _QWORD *v49;
  __objc2_prot *v50;

  v8 = sub_100059788((uint64_t *)&unk_1000D1810);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v42 - v12;
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = &OBJC_PROTOCOL___HFAccessoryRepresentableItem;
  v18 = swift_dynamicCastObjCProtocolConditional(a1, 1, &v50);
  if (!v18)
    goto LABEL_8;
  v19 = (void *)v18;
  v43 = v11;
  v44 = a4;
  v45 = a3;
  v47 = a1;
  v20 = objc_msgSend(v19, "accessoryRepresentableObject");
  ObjectType = swift_getObjectType();
  v22 = HFAccessoryRepresentable.containedServices.getter(ObjectType);
  swift_unknownObjectRelease(v20);
  v48 = sub_1000501CC(v22);
  swift_bridgeObjectRelease(v22);
  v23 = sub_100059788(&qword_1000D18E8);
  v24 = *(unsigned __int8 *)(v15 + 80);
  v25 = (v24 + 32) & ~v24;
  v26 = swift_allocObject(v23, v25 + *(_QWORD *)(v15 + 72), v24 | 7);
  *(_OWORD *)(v26 + 16) = xmmword_100089740;
  v46 = v19;
  v27 = objc_msgSend(v19, "homeKitObject");
  v28 = a2;
  v29 = v27;
  v30 = v13;
  v31 = objc_msgSend(v27, "uniqueIdentifier");
  swift_unknownObjectRelease(v29);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v31);

  v32 = (uint64_t)v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v26 + v25, v17, v14);
  v49 = v48;
  sub_10005649C(v26);
  v33 = (uint64_t)v49;
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v30) = v34(v28, 1, v14);
  sub_10005DB48(v28, v32, (uint64_t *)&unk_1000D1810);
  if ((_DWORD)v30 == 1)
  {
    sub_10005D3D4(v32, (uint64_t *)&unk_1000D1810);
    swift_bridgeObjectRelease(v33);
    v35 = v46;
LABEL_6:
    type metadata accessor for AccessoryControlsHelper(0);
    v39 = objc_msgSend(v35, "accessoryRepresentableObject");
    v40 = static AccessoryControlsHelper.controlModules(for:)();
    swift_unknownObjectRelease(v39);
    v41 = v45(v40);

    swift_bridgeObjectRelease(v40);
    return v41 & 1;
  }
  v36 = (uint64_t)v43;
  sub_10005DB48(v32, (uint64_t)v43, (uint64_t *)&unk_1000D1810);
  result = v34(v36, 1, v14);
  if ((_DWORD)result != 1)
  {
    __chkstk_darwin(result);
    *(&v42 - 2) = v36;
    v38 = sub_100070624((uint64_t (*)(char *))sub_10005CA04, (_BOOL8)(&v42 - 4), v33);
    sub_10005D3D4(v32, (uint64_t *)&unk_1000D1810);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v36, v14);
    swift_bridgeObjectRelease(v33);
    v35 = v46;
    if (v38)
      goto LABEL_6;

LABEL_8:
    v41 = 0;
    return v41 & 1;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1000501CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char **v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  void *v26;
  void *v27;
  id v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  void (*v35)(_BYTE *, _QWORD);
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[32];
  _QWORD *v43;
  uint64_t v44;
  char v45;
  _QWORD *v46;

  v41 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    v7 = __CocoaSet.count.getter(v6);
  }
  else
  {
    v7 = *(_QWORD *)(a1 + 16);
  }
  result = _swiftEmptyArrayStorage;
  if (v7)
  {
    v46 = _swiftEmptyArrayStorage;
    sub_100056610(0, v7 & ~(v7 >> 63), 0);
    if (v5)
    {
      if (a1 < 0)
        v9 = a1;
      else
        v9 = a1 & 0xFFFFFFFFFFFFFF8;
      result = (_QWORD *)__CocoaSet.startIndex.getter(v9);
      v11 = 1;
    }
    else
    {
      result = (_QWORD *)sub_100074FC4(a1);
      v11 = v12 & 1;
    }
    v43 = result;
    v44 = v10;
    v45 = v11;
    if (v7 < 0)
    {
      __break(1u);
LABEL_32:
      __break(1u);
    }
    else
    {
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
      if (a1 < 0)
        v13 = a1;
      v39 = v2;
      v40 = v13;
      v14 = &selRef_setItems_filteringToDisplayedItems_;
      v38 = a1 & 0xC000000000000001;
      do
      {
        while (1)
        {
          sub_100074D50((uint64_t)v43, v44, v45, a1);
          v27 = v26;
          v28 = objc_msgSend(v26, v14[289]);
          static UUID._unconditionallyBridgeFromObjectiveC(_:)(v28);

          v29 = v46;
          if ((swift_isUniquelyReferenced_nonNull_native(v46) & 1) == 0)
          {
            sub_100056610(0, v29[2] + 1, 1);
            v29 = v46;
          }
          v31 = v29[2];
          v30 = v29[3];
          if (v31 >= v30 >> 1)
          {
            sub_100056610(v30 > 1, v31 + 1, 1);
            v29 = v46;
          }
          v29[2] = v31 + 1;
          result = (_QWORD *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))((unint64_t)v29+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v31, v4, v41);
          v46 = v29;
          if (v5)
            break;
          v15 = (uint64_t)v43;
          v16 = v44;
          v17 = v45;
          v18 = sub_10005680C((int64_t)v43, v44, v45, a1);
          v19 = v4;
          v21 = v20;
          v22 = a1;
          v24 = v23;
          sub_10005D388(v15, v16, v17);
          v43 = (_QWORD *)v18;
          v44 = v21;
          v14 = &selRef_setItems_filteringToDisplayedItems_;
          v4 = v19;
          v25 = v24 & 1;
          a1 = v22;
          v5 = v38;
          v2 = v39;
          v45 = v25;
          if (!--v7)
            goto LABEL_29;
        }
        if ((v45 & 1) == 0)
          goto LABEL_32;
        v32 = __CocoaSet.Index.handleBitPattern.getter(v43, v44);
        if (v32)
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v32);
        else
          isUniquelyReferenced_nonNull_native = 1;
        v34 = sub_100059788(&qword_1000D18F8);
        v35 = (void (*)(_BYTE *, _QWORD))Set.Index._asCocoa.modify(v42, v34);
        __CocoaSet.formIndex(after:isUnique:)(v36, isUniquelyReferenced_nonNull_native, v40);
        v35(v42, 0);
        --v7;
      }
      while (v7);
LABEL_29:
      sub_10005D388((uint64_t)v43, v44, v45);
      return v46;
    }
  }
  return result;
}

uint64_t sub_1000504A0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100050504(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    v5 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v6 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v7 = v6;
      sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
      v8 = static NSObject.== infix(_:_:)(v7, a1);

      if ((v8 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (v4 == 1)
        goto LABEL_18;
      if (v5)
        break;
      v5 = 5;
      while (1)
      {
        v15 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
          break;
        v16 = *(id *)(a2 + 8 * v5);
        v17 = static NSObject.== infix(_:_:)(v16, a1);

        if ((v17 & 1) != 0)
          goto LABEL_6;
        ++v5;
        if (v15 == v4)
          goto LABEL_18;
      }
      __break(1u);
    }
    v10 = 1;
    while (1)
    {
      v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a2);
      v12 = v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      v13 = v11;
      v14 = static NSObject.== infix(_:_:)(v11, a1);
      swift_unknownObjectRelease(v13);
      if ((v14 & 1) != 0)
        goto LABEL_6;
      ++v10;
      if (v12 == v4)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v18 = a2;
    else
      v18 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
  }
LABEL_18:
  swift_bridgeObjectRelease(a2);
  return 0;
}

uint64_t sub_10005068C()
{
  return 1;
}

uint64_t sub_100050694(uint64_t a1, void *a2)
{
  uint64_t (*v2)(void);
  id v3;
  char v4;

  v2 = *(uint64_t (**)(void))(a1 + 32);
  v3 = a2;
  v4 = v2();

  return v4 & 1;
}

uint64_t sub_1000506D0(void *a1, double a2, double a3, double a4, double a5, double a6, double a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11)
{
  uint64_t i;
  double MinY;
  double v27;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  objc_msgSend((id)swift_unknownObjectRetain(), "tap:", a2, a3);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a2, a3, a4, a5, 2.0);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 2.0);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a6, a7, a4, a5, 0.5);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 0.5);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a6, a7, a4, a5, 0.5);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 0.5);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a6, a7, a4, a5, 0.5);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 0.5);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a6, a7, a4, a5, 0.5);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 0.5);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a6, a7, a4, a5, 0.5);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 0.5);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a6, a7, a4, a5);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a6, a7, a4, a5, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a6, a7, a4, a5, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a6, a7, a4, a5, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a6, a7, a4, a5, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a6, a7, a4, a5, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a6, a7, a4, a5, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a6, a7, a4, a5, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a6, a7, a4, a5, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a6, a7, a4, a5, 0.1);
  objc_msgSend(a1, "dragWithStartPoint:endPoint:duration:", a4, a5, a6, a7, 0.1);
  for (i = 0; i != 11; ++i)
  {
    v31.origin.x = a8;
    v31.origin.y = a9;
    v31.size.width = a10;
    v31.size.height = a11;
    MinY = CGRectGetMinY(v31);
    v32.origin.x = a8;
    v32.origin.y = a9;
    v32.size.width = a10;
    v32.size.height = a11;
    v27 = MinY + CGRectGetHeight(v32) / 10.0 * (double)i;
    v33.origin.x = a8;
    v33.origin.y = a9;
    v33.size.width = a10;
    v33.size.height = a11;
    objc_msgSend(a1, "tap:", CGRectGetMidX(v33), v27);
    objc_msgSend(a1, "advanceTime:", 0.2);
  }
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_100050C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  _QWORD *v12;

  *(_QWORD *)(v7 + 16) = a6;
  *(_BYTE *)(v7 + 56) = a5;
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 24) = v11;
  *(_QWORD *)(v7 + 32) = static MainActor.shared.getter(v11);
  v12 = (_QWORD *)swift_task_alloc(dword_1000D193C);
  *(_QWORD *)(v7 + 40) = v12;
  *v12 = v7;
  v12[1] = sub_100050D0C;
  return sub_100050D94(a5, a6, a7);
}

uint64_t sub_100050D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_10005DEF0;
  else
    v6 = sub_10005DEC4;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100050D94(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 144) = a3;
  *(_QWORD *)(v4 + 152) = v3;
  *(_QWORD *)(v4 + 136) = a2;
  *(_BYTE *)(v4 + 288) = a1;
  v5 = sub_100059788((uint64_t *)&unk_1000D1810);
  *(_QWORD *)(v4 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 168) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 176) = v7;
  *(_QWORD *)(v4 + 184) = v8;
  return swift_task_switch(sub_100050E2C, v7, v8);
}

id sub_100050E2C(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  NSObject *v3;
  os_log_type_t v4;
  unsigned __int8 v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id result;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v2 = static os_log_type_t.default.getter(a1);
  *(_QWORD *)(v1 + 192) = sub_10005D394(0, (unint64_t *)&qword_1000D1760, OS_os_log_ptr);
  v3 = static OS_os_log.default.getter();
  v4 = v2;
  if (os_log_type_enabled(v3, v2))
  {
    v5 = *(_BYTE *)(v1 + 288);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v21 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = sub_10006CD60(v5);
    v10 = v9;
    *(_QWORD *)(v1 + 128) = sub_100068064(v8, v9, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 128, v1 + 136, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "PPT - Launching accessory settings for %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }

  v11 = *(_QWORD *)(v1 + 144);
  *(_QWORD *)(v1 + 88) = 0x726F737365636361;
  *(_QWORD *)(v1 + 96) = 0xEB00000000444979;
  AnyHashable.init<A>(_:)((_QWORD *)(v1 + 16), v1 + 88, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v11 + 16) && (v12 = sub_100074310(v1 + 16), (v13 & 1) != 0))
  {
    sub_10005BBA0(*(_QWORD *)(*(_QWORD *)(v1 + 144) + 56) + 32 * v12, v1 + 56);
  }
  else
  {
    *(_OWORD *)(v1 + 56) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
  }
  sub_10005B9BC(v1 + 16);
  if (*(_QWORD *)(v1 + 80))
  {
    if ((swift_dynamicCast(v1 + 104, v1 + 56, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v14 = *(_QWORD *)(v1 + 112);
      if (v14)
      {
        UUID.init(uuidString:)(*(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
        swift_bridgeObjectRelease(v14);
        goto LABEL_13;
      }
    }
  }
  else
  {
    sub_10005D3D4(v1 + 56, &qword_1000D2120);
  }
  v15 = *(_QWORD *)(v1 + 160);
  v16 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
LABEL_13:
  result = objc_msgSend(*(id *)(v1 + 152), "_selectAndFinishFirstReadForTabWithIdentifier:", HFHomeAppTabIdentifierHome, v21);
  *(_QWORD *)(v1 + 200) = result;
  if (result)
  {
    v18 = result;
    v19 = (_QWORD *)swift_task_alloc(async function pointer to static NAFutureHelper.continuation<A>(_:)[1]);
    *(_QWORD *)(v1 + 208) = v19;
    v20 = sub_10005D394(0, &qword_1000D1D00, UINavigationController_ptr);
    *v19 = v1;
    v19[1] = sub_10005111C;
    return (id)static NAFutureHelper.continuation<A>(_:)(v18, v20);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10005111C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 208);
  v3[27] = a1;
  v3[28] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100051A10;
  else
    v5 = sub_100051184;
  return swift_task_switch(v5, v3[22], v3[23]);
}

id sub_100051184()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id result;
  void *v11;
  uint64_t v12;
  void *v13;
  unsigned __int8 v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  Swift::String v27;
  void *object;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  id v44;
  _QWORD *v45;

  v1 = objc_msgSend(*(id *)(v0 + 216), "topViewController");
  *(_QWORD *)(v0 + 232) = v1;
  if (!v1)
    goto LABEL_10;
  v2 = v1;
  v3 = objc_opt_self(HUDashboardViewController);
  v4 = swift_dynamicCastObjCClass(v2, v3);
  *(_QWORD *)(v0 + 240) = v4;
  if (!v4)
  {

LABEL_10:
    v21 = *(void **)(v0 + 216);
    v2 = *(void **)(v0 + 200);
    swift_release(*(_QWORD *)(v0 + 168));
    v22 = sub_1000596B8();
    swift_allocError(&_s20PerformanceTestErrorON, v22, 0, 0);
    v24 = v23;
    _StringGuts.grow(_:)(83);
    v25._countAndFlagsBits = 0xD000000000000051;
    v25._object = (void *)0x8000000100090700;
    String.append(_:)(v25);
    *(_QWORD *)(v0 + 120) = objc_msgSend(v21, "topViewController");
    v26 = sub_100059788((uint64_t *)&unk_1000D2540);
    v27._countAndFlagsBits = String.init<A>(describing:)(v0 + 120, v26);
    object = v27._object;
    String.append(_:)(v27);
    v29 = swift_bridgeObjectRelease(object);
    *(_QWORD *)v24 = 0;
    *(_QWORD *)(v24 + 8) = 0xE000000000000000;
    *(_BYTE *)(v24 + 48) = 4;
    swift_willThrow(v29);
LABEL_14:

    v37 = *(_QWORD *)(v0 + 160);
    sub_10005D3D4(v37, (uint64_t *)&unk_1000D1810);
    swift_task_dealloc(v37);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = (void *)v4;
  v6 = objc_msgSend(*(id *)(v0 + 152), "appNavigator");
  *(_QWORD *)(v0 + 248) = v6;
  if (!v6)
  {
    v30 = *(void **)(v0 + 216);
    v21 = *(void **)(v0 + 200);
    swift_release(*(_QWORD *)(v0 + 168));
    v31 = sub_1000596B8();
    v32 = swift_allocError(&_s20PerformanceTestErrorON, v31, 0, 0);
    *(_QWORD *)v33 = 1;
    *(_OWORD *)(v33 + 8) = 0u;
    *(_OWORD *)(v33 + 24) = 0u;
    *(_QWORD *)(v33 + 40) = 0;
    *(_BYTE *)(v33 + 48) = 5;
    swift_willThrow(v32);
LABEL_13:

    goto LABEL_14;
  }
  v7 = v6;
  v8 = static os_log_type_t.default.getter(v6);
  v9 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v8, &_mh_execute_header, v9, "Select and load done", 20, 2, _swiftEmptyArrayStorage);

  result = objc_msgSend(v5, "collectionView");
  if (result)
  {
    v11 = result;
    v13 = *(void **)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 160);
    v14 = *(_BYTE *)(v0 + 288);
    v15 = objc_msgSend(v5, "itemManager");
    v16 = (void *)sub_10005D410(v14, (uint64_t)v15, v13, v12, (uint64_t)&off_1000B82D8);
    *(_QWORD *)(v0 + 256) = v16;

    if (v16)
    {
      v17 = sub_10006CD60(*(_BYTE *)(v0 + 288));
      v19 = v18;
      if (v17 == 0xD000000000000018 && v18 == 0x8000000100090180)
      {
        v20 = v16;
        swift_bridgeObjectRelease(0x8000000100090180);
      }
      else
      {
        v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, 0xD000000000000018, 0x8000000100090180, 0);
        v39 = v16;
        swift_bridgeObjectRelease(v19);
        if ((v38 & 1) == 0)
        {
LABEL_17:
          v44 = objc_msgSend(v7, "showAccessory:secondaryDestination:", v16, 1);
          *(_QWORD *)(v0 + 264) = v44;
          v45 = (_QWORD *)swift_task_alloc(async function pointer to static NAFutureHelper.continuation<A>(_:)[1]);
          *(_QWORD *)(v0 + 272) = v45;
          *v45 = v0;
          v45[1] = sub_1000515D8;
          return (id)static NAFutureHelper.continuation<A>(_:)(v44, (char *)&type metadata for Swift.AnyObject + 8);
        }
      }
      v40 = *(void **)(v0 + 136);
      sub_10006CD60(*(_BYTE *)(v0 + 288));
      v42 = v41;
      v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v42);
      objc_msgSend(v40, "startedTest:", v43);

      goto LABEL_17;
    }
    v30 = *(void **)(v0 + 216);
    v21 = *(void **)(v0 + 200);
    swift_release(*(_QWORD *)(v0 + 168));
    v34 = sub_1000596B8();
    v35 = swift_allocError(&_s20PerformanceTestErrorON, v34, 0, 0);
    *(_QWORD *)v36 = 0xD000000000000031;
    *(_QWORD *)(v36 + 8) = 0x8000000100090A10;
    *(_BYTE *)(v36 + 48) = 4;
    swift_willThrow(v35);

    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000515D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 272);
  *(_QWORD *)(*v2 + 280) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 176);
    v7 = *(_QWORD *)(v4 + 184);
    v8 = sub_100051A68;
  }
  else
  {
    swift_unknownObjectRelease(a1);
    v6 = *(_QWORD *)(v4 + 176);
    v7 = *(_QWORD *)(v4 + 184);
    v8 = sub_100051650;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100051650()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t (*v47)(void);
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;

  v1 = *(_BYTE *)(v0 + 288);
  swift_release(*(_QWORD *)(v0 + 168));
  v2 = sub_10006CD60(v1);
  v4 = v3;
  if (v2 == 0xD000000000000018 && v3 == 0x8000000100090180)
  {
    swift_bridgeObjectRelease(0x8000000100090180);
LABEL_5:
    v6 = *(void **)(v0 + 136);
    sub_10006CD60(*(_BYTE *)(v0 + 288));
    v8 = v7;
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
    objc_msgSend(v6, "finishedTest:waitForCommit:extraResults:", v9, 1, 0);

    goto LABEL_6;
  }
  v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v3, 0xD000000000000018, 0x8000000100090180, 0);
  swift_bridgeObjectRelease(v4);
  if ((v5 & 1) != 0)
    goto LABEL_5;
LABEL_6:
  v10 = sub_10006CD60(*(_BYTE *)(v0 + 288));
  v12 = v11;
  v13 = 0x80000001000901A0;
  if (v10 == 0xD000000000000017 && v11 == 0x80000001000901A0)
    goto LABEL_8;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, 0xD000000000000017, 0x80000001000901A0, 0);
  swift_bridgeObjectRelease(v12);
  if ((v14 & 1) == 0)
  {
    v15 = sub_10006CD60(*(_BYTE *)(v0 + 288));
    v17 = v16;
    v13 = 0x80000001000901C0;
    if (v15 == 0xD00000000000001ELL && v16 == 0x80000001000901C0)
    {
LABEL_8:
      swift_bridgeObjectRelease(v13);
      goto LABEL_13;
    }
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, 0xD00000000000001ELL, 0x80000001000901C0, 0);
    swift_bridgeObjectRelease(v17);
    if ((v18 & 1) == 0)
    {
      v49 = *(void **)(v0 + 256);
      v50 = *(void **)(v0 + 264);
      v51 = *(void **)(v0 + 248);
      v52 = *(void **)(v0 + 232);
      v53 = *(void **)(v0 + 216);
      v54 = *(void **)(v0 + 200);
      sub_10005D3D4(*(_QWORD *)(v0 + 160), (uint64_t *)&unk_1000D1810);

LABEL_26:
      swift_task_dealloc(*(_QWORD *)(v0 + 160));
      v47 = *(uint64_t (**)(void))(v0 + 8);
      return v47();
    }
  }
LABEL_13:
  v19 = objc_msgSend(*(id *)(v0 + 240), "presentedViewController");
  if (!v19)
  {
LABEL_21:
    v37 = *(void **)(v0 + 256);
    v38 = *(void **)(v0 + 264);
    v39 = *(void **)(v0 + 240);
    v40 = *(void **)(v0 + 248);
    v36 = *(void **)(v0 + 232);
    v41 = *(void **)(v0 + 216);
    v31 = *(void **)(v0 + 200);
    v42 = sub_1000596B8();
    swift_allocError(&_s20PerformanceTestErrorON, v42, 0, 0);
    v44 = v43;
    v45 = objc_msgSend(v39, "presentedViewController");
    *(_QWORD *)v44 = 0xD00000000000001ELL;
    *(_QWORD *)(v44 + 8) = 0x8000000100090A50;
    *(_QWORD *)(v44 + 16) = v45;
    *(_BYTE *)(v44 + 48) = 0;
    swift_willThrow(v45);

    goto LABEL_22;
  }
  v20 = v19;
  v21 = objc_opt_self(UINavigationController);
  v22 = (void *)swift_dynamicCastObjCClass(v20, v21);
  if (!v22 || (v23 = objc_msgSend(v22, "topViewController")) == 0)
  {
LABEL_20:

    goto LABEL_21;
  }
  v24 = v23;
  v25 = objc_opt_self(HUServiceDetailsViewController);
  v26 = (void *)swift_dynamicCastObjCClass(v24, v25);
  if (!v26)
  {

    goto LABEL_20;
  }
  v27 = *(_QWORD *)(v0 + 280);
  v28 = sub_100070B7C(v26, *(_BYTE *)(v0 + 288), *(_QWORD *)(v0 + 144));
  v29 = v27;
  v31 = *(void **)(v0 + 256);
  v30 = *(void **)(v0 + 264);
  v32 = *(void **)(v0 + 248);
  v33 = *(void **)(v0 + 232);
  v34 = *(void **)(v0 + 216);
  v35 = *(void **)(v0 + 200);
  if (!v29)
  {
    v56 = *(_QWORD *)(v0 + 160);
    v55 = v28;

    sub_10005D3D4(v56, (uint64_t *)&unk_1000D1810);
    goto LABEL_26;
  }

  v36 = v31;
LABEL_22:

  v46 = *(_QWORD *)(v0 + 160);
  sub_10005D3D4(v46, (uint64_t *)&unk_1000D1810);
  swift_task_dealloc(v46);
  v47 = *(uint64_t (**)(void))(v0 + 8);
  return v47();
}

uint64_t sub_100051A10()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 168));

  v2 = *(_QWORD *)(v0 + 160);
  sub_10005D3D4(v2, (uint64_t *)&unk_1000D1810);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100051A68()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 256);
  v2 = *(void **)(v0 + 264);
  v3 = *(void **)(v0 + 248);
  v4 = *(void **)(v0 + 232);
  v5 = *(void **)(v0 + 216);
  v6 = *(void **)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 168));

  v7 = *(_QWORD *)(v0 + 160);
  sub_10005D3D4(v7, (uint64_t *)&unk_1000D1810);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100051AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  _QWORD *v12;

  *(_QWORD *)(v7 + 16) = a6;
  *(_BYTE *)(v7 + 56) = a5;
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 24) = v11;
  *(_QWORD *)(v7 + 32) = static MainActor.shared.getter(v11);
  v12 = (_QWORD *)swift_task_alloc(dword_1000D193C);
  *(_QWORD *)(v7 + 40) = v12;
  *v12 = v7;
  v12[1] = sub_100051B8C;
  return sub_100050D94(a5, a6, a7);
}

uint64_t sub_100051B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100051C14;
  else
    v6 = sub_10004ED98;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100051C14()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(void **)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 32));
  sub_10006CD60(v3);
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v2, "failedTest:withFailure:", v6, 0);

  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100051C98(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  void *v6;
  id v7;
  char v8;

  v4 = objc_opt_self(HFMediaAccessoryItem);
  result = swift_dynamicCastObjCClass(a1, v4);
  if (result)
  {
    v6 = (void *)result;
    v7 = a1;
    v8 = sub_1000504A0((uint64_t)objc_msgSend(v6, "mediaAccessoryItemType"), a2);

    return v8 & 1;
  }
  return result;
}

BOOL sub_100051D0C(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(a1, "services");
  v2 = sub_10005D394(0, &qword_1000D1750, HMService_ptr);
  v3 = sub_1000597C8(&qword_1000D1758, &qword_1000D1750, HMService_ptr);
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

  if ((v4 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = v4;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    v6 = __CocoaSet.count.getter(v5);
  }
  else
  {
    v6 = *(_QWORD *)(v4 + 16);
  }
  swift_bridgeObjectRelease(v4);
  return v6 == 1;
}

uint64_t sub_100051DC8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100051E04 + 4 * byte_100089760[a1]))(0xD000000000000016, 0x800000010008FE10);
}

uint64_t sub_100051E04()
{
  return 0x7365636341796E61;
}

unint64_t sub_100051E24()
{
  return 0xD000000000000015;
}

uint64_t sub_100051E40()
{
  return 0x617373696D736964;
}

void sub_100051E5C(char *a1)
{
  sub_10006EB44(*a1);
}

void sub_100051E68()
{
  char *v0;

  sub_10006ED40(*v0);
}

void sub_100051E70(uint64_t a1)
{
  char *v1;

  sub_10006EE80(a1, *v1);
}

void sub_100051E78(uint64_t a1)
{
  char *v1;

  sub_10006EFD8(a1, *v1);
}

unint64_t sub_100051E80@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10005D94C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100051EAC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100051DC8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id sub_100051ED4(void *a1, void *a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  Class v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  char isEscapingClosureAtFileLocation;
  void *v46;
  id v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  uint64_t v53;
  Swift::String v54;
  void *object;
  unint64_t v56;
  void *v57;
  id v58;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  Class isa;
  void *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  Swift::String v74;
  unint64_t v75;
  void *v76;
  _QWORD v77[2];
  void (*v78)(uint64_t);
  id v79;
  void *v80;
  uint64_t v81;
  id v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  void **aBlock;
  unint64_t v91;
  void *v92;
  void *v93;
  void *v94;
  uint64_t v95;
  _QWORD v96[2];

  v85 = a7;
  v88 = a6;
  v89 = a5;
  v11 = sub_100059788(&qword_1000D1808);
  __chkstk_darwin(v11);
  v12 = type metadata accessor for DispatchTimeInterval(0);
  v86 = *(_QWORD *)(v12 - 8);
  v87 = v12;
  v13 = *(_QWORD *)(v86 + 64);
  v14 = __chkstk_darwin(v12);
  v83 = (char *)v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v84 = (char *)v77 - v15;
  v16 = sub_100059788((uint64_t *)&unk_1000D1810);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)v77 - v20;
  v22 = objc_msgSend(a1, "topViewController");
  if (!v22)
    goto LABEL_11;
  v23 = v22;
  v24 = objc_opt_self(HUDashboardViewController);
  v25 = swift_dynamicCastObjCClass(v23, v24);
  v26 = v23;
  if (!v25)
  {

LABEL_11:
    v48 = sub_1000596B8();
    v49 = swift_allocError(&_s20PerformanceTestErrorON, v48, 0, 0);
    v51 = v50;
    aBlock = 0;
    v91 = 0xE000000000000000;
    _StringGuts.grow(_:)(83);
    v52._countAndFlagsBits = 0xD000000000000051;
    v52._object = (void *)0x8000000100090700;
    String.append(_:)(v52);
    v96[0] = objc_msgSend(a1, "topViewController");
    v53 = sub_100059788((uint64_t *)&unk_1000D2540);
    v54._countAndFlagsBits = String.init<A>(describing:)(v96, v53);
    object = v54._object;
    String.append(_:)(v54);
    swift_bridgeObjectRelease(object);
    v56 = v91;
    *(_QWORD *)v51 = aBlock;
    *(_QWORD *)(v51 + 8) = v56;
    *(_BYTE *)(v51 + 48) = 4;
    v57 = (void *)_convertErrorToNSError(_:)(v49);
    v58 = objc_msgSend((id)objc_opt_self(NAFuture), "futureWithError:", v57);
    swift_errorRelease(v49);

    return v58;
  }
  v27 = (void *)v25;
  v82 = v26;
  v28 = objc_msgSend(a2, "appNavigator");
  if (v28)
  {
    v29 = v28;
    v30 = objc_msgSend(a2, "baseViewController");
    if (v30)
    {
      v79 = v30;
      v80 = v29;
      v31 = a3;
      v32 = static os_log_type_t.default.getter();
      sub_10005D394(0, (unint64_t *)&qword_1000D1760, OS_os_log_ptr);
      v33 = (void *)static OS_os_log.default.getter();
      os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Select and load done", 20, 2, _swiftEmptyArrayStorage);

      v81 = v31;
      v34 = objc_msgSend(v27, "itemManager");
      v35 = v34;
      if ((v31 - 1) >= 2)
      {
        sub_10005DB48(a4, (uint64_t)v21, (uint64_t *)&unk_1000D1810);
        v65 = type metadata accessor for UUID(0);
        v66 = *(_QWORD *)(v65 - 8);
        v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48))(v21, 1, v65);
        isa = 0;
        v47 = v82;
        if (v67 != 1)
        {
          isa = UUID._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v66 + 8))(v21, v65);
        }
        v94 = sub_100052BA0;
        v95 = 0;
        aBlock = _NSConcreteStackBlock;
        v91 = 1107296256;
        v92 = sub_100052BA4;
        v93 = &unk_1000BA258;
        v69 = _Block_copy(&aBlock);
        swift_release(v95);
        v44 = objc_msgSend(a2, "findPreferredAccessoryWithItemManager:accessoryID:with:", v35, isa, v69);

        _Block_release(v69);
        if ((swift_isEscapingClosureAtFileLocation(0, "", 104, 859, 119, 1) & 1) == 0)
        {
          v78 = 0;
          v40 = 0;
          v46 = v80;
          goto LABEL_18;
        }
      }
      else
      {
        v36 = v34;
        sub_10005DB48(a4, (uint64_t)v19, (uint64_t *)&unk_1000D1810);
        v37 = type metadata accessor for UUID(0);
        v38 = *(_QWORD *)(v37 - 8);
        v39 = 0;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v19, 1, v37) != 1)
        {
          v39 = UUID._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v37);
        }
        v40 = swift_allocObject(&unk_1000BA150, 17, 7);
        *(_BYTE *)(v40 + 16) = v81;
        v41 = swift_allocObject(&unk_1000BA178, 32, 7);
        v78 = sub_10005BBEC;
        *(_QWORD *)(v41 + 16) = sub_10005BBEC;
        *(_QWORD *)(v41 + 24) = v40;
        v94 = sub_10005BC04;
        v95 = v41;
        aBlock = _NSConcreteStackBlock;
        v91 = 1107296256;
        v92 = sub_100050694;
        v93 = &unk_1000BA190;
        v42 = _Block_copy(&aBlock);
        v43 = v95;
        swift_retain(v41);
        swift_release(v43);
        v44 = objc_msgSend(a2, "findAccessoryWithItemManager:accessoryID:testBlock:", v36, v39, v42);

        _Block_release(v42);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v41, "", 104, 863, 110, 1);
        swift_release(v41);
        if ((isEscapingClosureAtFileLocation & 1) == 0)
        {
          v46 = v80;
          v47 = v82;
LABEL_18:
          if (v44)
          {
            v77[1] = v40;
            __asm { BR              X9 }
          }
          v70 = sub_1000596B8();
          v71 = swift_allocError(&_s20PerformanceTestErrorON, v70, 0, 0);
          v73 = v72;
          aBlock = 0;
          v91 = 0xE000000000000000;
          _StringGuts.grow(_:)(44);
          v74._countAndFlagsBits = 0xD00000000000002ALL;
          v74._object = (void *)0x80000001000907B0;
          String.append(_:)(v74);
          LOBYTE(v96[0]) = v81;
          _print_unlocked<A, B>(_:_:)(v96, &aBlock, &_s25AccessoryControlsTestTypeON, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
          v75 = v91;
          *(_QWORD *)v73 = aBlock;
          *(_QWORD *)(v73 + 8) = v75;
          *(_BYTE *)(v73 + 48) = 4;
          v76 = (void *)_convertErrorToNSError(_:)(v71);
          v64 = objc_msgSend((id)objc_opt_self(NAFuture), "futureWithError:", v76);
          swift_errorRelease(v71);

          sub_10005BC28((uint64_t)v78, v40);
          return v64;
        }
        __break(1u);
      }
      __break(1u);
      JUMPOUT(0x100052A5CLL);
    }

  }
  v60 = sub_1000596B8();
  v61 = swift_allocError(&_s20PerformanceTestErrorON, v60, 0, 0);
  *(_QWORD *)v62 = 1;
  *(_OWORD *)(v62 + 8) = 0u;
  *(_OWORD *)(v62 + 24) = 0u;
  *(_QWORD *)(v62 + 40) = 0;
  *(_BYTE *)(v62 + 48) = 5;
  v63 = (void *)_convertErrorToNSError(_:)(v61);
  v64 = objc_msgSend((id)objc_opt_self(NAFuture), "futureWithError:", v63);
  swift_errorRelease(v61);

  return v64;
}

BOOL sub_100052A7C(void *a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = objc_msgSend(a1, "services");
  v4 = sub_10005D394(0, &qword_1000D1750, HMService_ptr);
  v5 = sub_1000597C8(&qword_1000D1758, &qword_1000D1750, HMService_ptr);
  v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v3, v4, v5);

  if ((v6 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = v6;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    v8 = __CocoaSet.count.getter(v7);
  }
  else
  {
    v8 = *(_QWORD *)(v6 + 16);
  }
  swift_bridgeObjectRelease(v6);
  v9 = objc_msgSend(a2, "services");
  v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v9, v4, v5);

  if ((v10 & 0xC000000000000001) != 0)
  {
    if (v10 < 0)
      v11 = v10;
    else
      v11 = v10 & 0xFFFFFFFFFFFFFF8;
    v12 = __CocoaSet.count.getter(v11);
  }
  else
  {
    v12 = *(_QWORD *)(v10 + 16);
  }
  swift_bridgeObjectRelease(v10);
  return v12 < v8;
}

uint64_t sub_100052BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  char v6;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_unknownObjectRetain(a2);
  swift_unknownObjectRetain(a3);
  v6 = v5(a2, a3);
  swift_unknownObjectRelease(a3);
  swift_unknownObjectRelease(a2);
  return v6 & 1;
}

void sub_100052C04(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

BOOL sub_100052C38(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v17 = objc_msgSend(v16, "services");
  v18 = sub_10005D394(0, &qword_1000D1750, HMService_ptr);
  v19 = sub_1000597C8(&qword_1000D1758, &qword_1000D1750, HMService_ptr);
  v20 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v17, v18, v19);

  if ((v20 & 0xC000000000000001) != 0)
  {
    if (v20 < 0)
      v21 = v20;
    else
      v21 = v20 & 0xFFFFFFFFFFFFFF8;
    v22 = __CocoaSet.count.getter(v21);
  }
  else
  {
    v22 = *(_QWORD *)(v20 + 16);
  }
  swift_bridgeObjectRelease(v20);
  return v22 > 0;
}

id sub_100052EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  _QWORD aBlock[5];
  uint64_t v14;

  v3 = type metadata accessor for DispatchTimeInterval(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_1000BA290, v7 + v5, v6 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  aBlock[4] = sub_10005BCEC;
  v14 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004D8A8;
  aBlock[3] = &unk_1000BA2A8;
  v9 = _Block_copy(aBlock);
  v10 = objc_msgSend((id)objc_opt_self(NAFuture), "futureWithBlock:", v9);
  _Block_release(v9);
  swift_release(v14);
  v11 = objc_msgSend(v10, "asGeneric");

  return v11;
}

uint64_t sub_100053040(void *a1, void (*a2)(char *, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v26 = a2;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v6 - 8);
  v28 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v26 - v14;
  sub_10005D394(0, &qword_1000D1820, OS_dispatch_queue_ptr);
  v16 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  DispatchTime.advanced(by:)(v26);
  v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  v26(v13, v9);
  v17 = swift_allocObject(&unk_1000BA2E0, 24, 7);
  *(_QWORD *)(v17 + 16) = a1;
  aBlock[4] = sub_10005BD28;
  v31 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070484;
  aBlock[3] = &unk_1000BA2F8;
  v18 = _Block_copy(aBlock);
  v19 = v31;
  v20 = a1;
  v21 = swift_release(v19);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_100054BAC(&qword_1000D1828, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_100059788(&qword_1000D1830);
  v24 = sub_10005BD38(&qword_1000D1838, &qword_1000D1830, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v3, v22);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v8, v5, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v28);
  return ((uint64_t (*)(char *, uint64_t))v26)(v15, v9);
}

id sub_1000532E4(uint64_t a1, void *a2, unsigned __int8 a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  _QWORD v16[5];
  uint64_t v17;

  sub_10006CD60(a3);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  objc_msgSend(a2, "startedTest:", v8);

  v9 = swift_allocObject(&unk_1000BA330, 24, 7);
  *(_QWORD *)(v9 + 16) = a4;
  v16[4] = sub_10005BD78;
  v17 = v9;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10004D8A8;
  v16[3] = &unk_1000BA348;
  v10 = _Block_copy(v16);
  v11 = (void *)objc_opt_self(NAFuture);
  v12 = a4;
  v13 = objc_msgSend(v11, "futureWithBlock:", v10);
  _Block_release(v10);
  swift_release(v17);
  v14 = objc_msgSend(v13, "asGeneric");

  return v14;
}

void sub_10005340C(void *a1, void *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  v4 = swift_allocObject(&unk_1000BA380, 24, 7);
  *(_QWORD *)(v4 + 16) = a1;
  v8[4] = sub_10005E140;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100070484;
  v8[3] = &unk_1000BA398;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = a1;
  swift_release(v6);
  objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, v5);
  _Block_release(v5);
}

id sub_1000534C8(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id result;
  void *v21;
  void *v22;
  id v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;
  id v37;
  id v38;
  void **aBlock;
  uint64_t v40;
  void *v41;
  void *v42;
  id (*v43)(void *);
  _QWORD *v44;

  v5 = sub_100059788((uint64_t *)&unk_1000D1810);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v5);
  v9 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&aBlock - v10;
  sub_100053864(a2, (uint64_t)&aBlock - v10);
  sub_10005DB48((uint64_t)v11, (uint64_t)v9, (uint64_t *)&unk_1000D1810);
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = (v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject(&unk_1000BA588, v14 + 9, v12 | 7);
  *(_QWORD *)(v15 + 16) = v2;
  sub_10005C860((uint64_t)v9, v15 + v13, (uint64_t *)&unk_1000D1810);
  v16 = v15 + v14;
  *(_QWORD *)v16 = a1;
  *(_BYTE *)(v16 + 8) = 34;
  v17 = HFHomeAppTabIdentifierHome;
  v18 = v2;
  v19 = a1;
  result = objc_msgSend(v18, "_selectAndFinishFirstReadForTabWithIdentifier:", v17);
  if (result)
  {
    v21 = result;
    v43 = sub_1000728D8;
    v44 = 0;
    aBlock = _NSConcreteStackBlock;
    v40 = 1107296256;
    v41 = sub_10004ACD0;
    v42 = &unk_1000BA5A0;
    v22 = _Block_copy(&aBlock);
    v23 = objc_msgSend(v21, "flatMap:", v22);
    _Block_release(v22);

    v24 = (_QWORD *)swift_allocObject(&unk_1000BA5D8, 40, 7);
    v24[2] = v18;
    v24[3] = sub_10005D92C;
    v24[4] = v15;
    v43 = (id (*)(void *))sub_10005DEF4;
    v44 = v24;
    aBlock = _NSConcreteStackBlock;
    v40 = 1107296256;
    v41 = sub_10004ACD0;
    v42 = &unk_1000BA5F0;
    v25 = _Block_copy(&aBlock);
    v26 = v44;
    v27 = v18;
    swift_retain(v15);
    swift_release(v26);
    v28 = objc_msgSend(v23, "flatMap:", v25);
    _Block_release(v25);
    swift_release(v15);

    v29 = swift_allocObject(&unk_1000BA628, 25, 7);
    *(_QWORD *)(v29 + 16) = v19;
    *(_BYTE *)(v29 + 24) = 34;
    v43 = (id (*)(void *))sub_10005E2DC;
    v44 = (_QWORD *)v29;
    aBlock = _NSConcreteStackBlock;
    v40 = 1107296256;
    v41 = sub_10004ACD4;
    v42 = &unk_1000BA640;
    v30 = _Block_copy(&aBlock);
    v31 = v44;
    v32 = v19;
    swift_release(v31);
    v33 = objc_msgSend(v28, "addSuccessBlock:", v30);
    _Block_release(v30);

    v34 = swift_allocObject(&unk_1000BA678, 25, 7);
    *(_QWORD *)(v34 + 16) = v32;
    *(_BYTE *)(v34 + 24) = 34;
    v43 = (id (*)(void *))sub_10005E2D4;
    v44 = (_QWORD *)v34;
    aBlock = _NSConcreteStackBlock;
    v40 = 1107296256;
    v41 = sub_10004AAF4;
    v42 = &unk_1000BA690;
    v35 = _Block_copy(&aBlock);
    v36 = v44;
    v37 = v32;
    swift_release(v36);
    v38 = objc_msgSend(v33, "addFailureBlock:", v35);
    _Block_release(v35);

    return (id)sub_10005D3D4((uint64_t)v11, (uint64_t *)&unk_1000D1810);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100053864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[5];
  __int128 v12;
  __int128 v13;

  v9 = 0x55556172656D6163;
  v10 = 0xEA00000000004449;
  AnyHashable.init<A>(_:)(v11, &v9, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v4 = sub_100074310((uint64_t)v11), (v5 & 1) != 0))
  {
    sub_10005BBA0(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v12);
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  sub_10005B9BC((uint64_t)v11);
  if (*((_QWORD *)&v13 + 1))
  {
    if ((swift_dynamicCast(&v9, &v12, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v6 = v10;
      UUID.init(uuidString:)(v9, v10);
      return swift_bridgeObjectRelease(v6);
    }
  }
  else
  {
    sub_10005D3D4((uint64_t)&v12, &qword_1000D2120);
  }
  v8 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 1, 1, v8);
}

void sub_10005397C(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6, unsigned __int8 a7)
{
  uint64_t v7;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];
  uint64_t v31;

  v12 = sub_1000750B8(a3, a5);
  if (!v7)
  {
    v13 = (void *)v12;
    if (v12)
    {
      v14 = objc_msgSend(a4, "baseViewController");
      if (v14)
      {
        v15 = v14;
        sub_10006CD60(a7);
        v17 = v16;
        v18 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v17);
        objc_msgSend(a6, "startedTest:", v18);

        v19 = objc_msgSend(a2, "showCameraProfile:clipID:", v13, 0);
        v20 = swift_allocObject(&unk_1000BA6C8, 24, 7);
        *(_QWORD *)(v20 + 16) = v15;
        v30[4] = sub_10005D994;
        v31 = v20;
        v30[0] = _NSConcreteStackBlock;
        v30[1] = 1107296256;
        v30[2] = sub_1000704B0;
        v30[3] = &unk_1000BA6E0;
        v21 = _Block_copy(v30);
        v22 = v31;
        v23 = v15;
        swift_release(v22);
        objc_msgSend(v19, "flatMap:", v21);
        _Block_release(v21);

      }
      else
      {
        v27 = sub_1000596B8();
        v28 = swift_allocError(&_s20PerformanceTestErrorON, v27, 0, 0);
        *(_QWORD *)v29 = 1;
        *(_OWORD *)(v29 + 8) = 0u;
        *(_OWORD *)(v29 + 24) = 0u;
        *(_QWORD *)(v29 + 40) = 0;
        *(_BYTE *)(v29 + 48) = 5;
        swift_willThrow(v28);

      }
    }
    else
    {
      v24 = sub_1000596B8();
      v25 = swift_allocError(&_s20PerformanceTestErrorON, v24, 0, 0);
      strcpy(v26, "cameraProfile");
      *((_WORD *)v26 + 7) = -4864;
      v26[48] = 2;
      swift_willThrow(v25);
    }
  }
}

id sub_100053BAC(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id result;
  void *v21;
  void *v22;
  id v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;
  id v37;
  id v38;
  void **aBlock;
  uint64_t v40;
  void *v41;
  void *v42;
  id (*v43)(void *);
  _QWORD *v44;

  v5 = sub_100059788((uint64_t *)&unk_1000D1810);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v5);
  v9 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&aBlock - v10;
  sub_100053864(a2, (uint64_t)&aBlock - v10);
  sub_10005DB48((uint64_t)v11, (uint64_t)v9, (uint64_t *)&unk_1000D1810);
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = (v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject(&unk_1000BA718, v14 + 9, v12 | 7);
  *(_QWORD *)(v15 + 16) = v2;
  sub_10005C860((uint64_t)v9, v15 + v13, (uint64_t *)&unk_1000D1810);
  v16 = v15 + v14;
  *(_QWORD *)v16 = a1;
  *(_BYTE *)(v16 + 8) = 35;
  v17 = HFHomeAppTabIdentifierHome;
  v18 = v2;
  v19 = a1;
  result = objc_msgSend(v18, "_selectAndFinishFirstReadForTabWithIdentifier:", v17);
  if (result)
  {
    v21 = result;
    v43 = sub_1000728D8;
    v44 = 0;
    aBlock = _NSConcreteStackBlock;
    v40 = 1107296256;
    v41 = sub_10004ACD0;
    v42 = &unk_1000BA730;
    v22 = _Block_copy(&aBlock);
    v23 = objc_msgSend(v21, "flatMap:", v22);
    _Block_release(v22);

    v24 = (_QWORD *)swift_allocObject(&unk_1000BA768, 40, 7);
    v24[2] = v18;
    v24[3] = sub_10005DA6C;
    v24[4] = v15;
    v43 = (id (*)(void *))sub_10005DEF4;
    v44 = v24;
    aBlock = _NSConcreteStackBlock;
    v40 = 1107296256;
    v41 = sub_10004ACD0;
    v42 = &unk_1000BA780;
    v25 = _Block_copy(&aBlock);
    v26 = v44;
    v27 = v18;
    swift_retain(v15);
    swift_release(v26);
    v28 = objc_msgSend(v23, "flatMap:", v25);
    _Block_release(v25);
    swift_release(v15);

    v29 = swift_allocObject(&unk_1000BA7B8, 25, 7);
    *(_QWORD *)(v29 + 16) = v19;
    *(_BYTE *)(v29 + 24) = 35;
    v43 = (id (*)(void *))sub_10005E2DC;
    v44 = (_QWORD *)v29;
    aBlock = _NSConcreteStackBlock;
    v40 = 1107296256;
    v41 = sub_10004ACD4;
    v42 = &unk_1000BA7D0;
    v30 = _Block_copy(&aBlock);
    v31 = v44;
    v32 = v19;
    swift_release(v31);
    v33 = objc_msgSend(v28, "addSuccessBlock:", v30);
    _Block_release(v30);

    v34 = swift_allocObject(&unk_1000BA808, 25, 7);
    *(_QWORD *)(v34 + 16) = v32;
    *(_BYTE *)(v34 + 24) = 35;
    v43 = (id (*)(void *))sub_10005E2D4;
    v44 = (_QWORD *)v34;
    aBlock = _NSConcreteStackBlock;
    v40 = 1107296256;
    v41 = sub_10004AAF4;
    v42 = &unk_1000BA820;
    v35 = _Block_copy(&aBlock);
    v36 = v44;
    v37 = v32;
    swift_release(v36);
    v38 = objc_msgSend(v33, "addFailureBlock:", v35);
    _Block_release(v35);

    return (id)sub_10005D3D4((uint64_t)v11, (uint64_t *)&unk_1000D1810);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100053F48(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6, unsigned __int8 a7)
{
  uint64_t v7;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];
  uint64_t v31;

  v12 = sub_1000750B8(a3, a5);
  if (!v7)
  {
    v13 = (void *)v12;
    if (v12)
    {
      v14 = objc_msgSend(a4, "baseViewController");
      if (v14)
      {
        v15 = v14;
        sub_10006CD60(a7);
        v17 = v16;
        v18 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v17);
        objc_msgSend(a6, "startedTest:", v18);

        v19 = objc_msgSend(a2, "showSettingsForCameraProfile:", v13);
        v20 = swift_allocObject(&unk_1000BA858, 24, 7);
        *(_QWORD *)(v20 + 16) = v15;
        v30[4] = sub_10005DEEC;
        v31 = v20;
        v30[0] = _NSConcreteStackBlock;
        v30[1] = 1107296256;
        v30[2] = sub_1000704B0;
        v30[3] = &unk_1000BA870;
        v21 = _Block_copy(v30);
        v22 = v31;
        v23 = v15;
        swift_release(v22);
        objc_msgSend(v19, "flatMap:", v21);
        _Block_release(v21);

      }
      else
      {
        v27 = sub_1000596B8();
        v28 = swift_allocError(&_s20PerformanceTestErrorON, v27, 0, 0);
        *(_QWORD *)v29 = 1;
        *(_OWORD *)(v29 + 8) = 0u;
        *(_OWORD *)(v29 + 24) = 0u;
        *(_QWORD *)(v29 + 40) = 0;
        *(_BYTE *)(v29 + 48) = 5;
        swift_willThrow(v28);

      }
    }
    else
    {
      v24 = sub_1000596B8();
      v25 = swift_allocError(&_s20PerformanceTestErrorON, v24, 0, 0);
      strcpy(v26, "cameraProfile");
      *((_WORD *)v26 + 7) = -4864;
      v26[48] = 2;
      swift_willThrow(v25);
    }
  }
}

id sub_100054174(int a1, id a2)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a2, "hu_dismissViewControllerAnimated:", 1);
  v3 = objc_msgSend(v2, "asGeneric");

  return v3;
}

void sub_1000541CC(uint64_t a1, void *a2, unsigned __int8 a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;

  sub_10006CD60(a3);
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  objc_msgSend(a2, "finishedTest:waitForCommit:extraResults:", v6, 0, 0);

}

uint64_t variable initialization expression of AdaptiveTabBarController.$__lazy_storage_$_navigator()
{
  return 0;
}

uint64_t variable initialization expression of AdaptiveTabBarController.hideRooms()
{
  return 0;
}

void *variable initialization expression of AdaptiveTabBarController.controllers()
{
  return &_swiftEmptyDictionarySingleton;
}

uint64_t variable initialization expression of AdaptiveTabBarController.localeAvailability()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(HFStoreLocaleAvailability), "getAvailabilityDictionary");
  v1 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v1;
}

uint64_t _s23AccessoryPickerDelegateCMa()
{
  return objc_opt_self(_TtCE7HomeAppCSo13HOAppDelegateP33_7A70AA26557A234AD1ECC62AF06435C423AccessoryPickerDelegate);
}

void type metadata accessor for HFHomeAppTabIdentifier(uint64_t a1)
{
  sub_10005DE80(a1, &qword_1000D15B8, (uint64_t)&unk_1000B88C8);
}

uint64_t sub_1000542E4(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100074D3C(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_100054F18(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

id sub_10005435C(void *a1, id a2, uint64_t (*a3)(void *, void *, id))
{
  id v5;
  void *v6;
  id v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  NSString v14;
  id v15;
  id v16;

  v5 = objc_msgSend(a2, "appNavigator");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(a1, "itemManager");
    v8 = objc_msgSend(v7, "home");

    if (v8)
    {
      v15 = (id)a3(a1, v6, v8);
      v16 = objc_msgSend(v15, "asGeneric");
    }
    else
    {
      v13 = (void *)objc_opt_self(NSError);
      v14 = String._bridgeToObjectiveC()();
      v15 = objc_msgSend(v13, "hf_errorWithCode:description:", 30, v14);

      v8 = (id)_convertErrorToNSError(_:)(v15);
      v16 = objc_msgSend((id)objc_opt_self(NAFuture), "futureWithError:", v8);
    }
    v12 = v16;

  }
  else
  {
    v9 = sub_1000596B8();
    v10 = swift_allocError(&_s20PerformanceTestErrorON, v9, 0, 0);
    *(_QWORD *)v11 = 1;
    *(_OWORD *)(v11 + 8) = 0u;
    *(_OWORD *)(v11 + 24) = 0u;
    *(_QWORD *)(v11 + 40) = 0;
    *(_BYTE *)(v11 + 48) = 5;
    v15 = (id)_convertErrorToNSError(_:)(v10);
    v12 = objc_msgSend((id)objc_opt_self(NAFuture), "futureWithError:", v15);
    swift_errorRelease(v10);
  }

  return v12;
}

id sub_100054584(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id result;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  void **v19;
  uint64_t v20;
  id (*v21)(uint64_t, void *);
  void *v22;
  uint64_t (*v23)();
  uint64_t v24;
  __objc2_prot *v25;
  __objc2_prot *v26;

  v26 = &OBJC_PROTOCOL___HUPerformanceTestableViewController;
  v2 = swift_dynamicCastObjCProtocolConditional(a1, 1, &v26);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = a1;
    v5 = objc_msgSend(v3, "hu_performanceTestReadyFuture");
    v6 = swift_allocObject(&unk_1000B8CD8, 24, 7);
    *(_QWORD *)(v6 + 16) = v4;
    v23 = sub_10005980C;
    v24 = v6;
    v19 = _NSConcreteStackBlock;
    v20 = 1107296256;
    v21 = sub_10004ACD0;
    v22 = &unk_1000B8CF0;
    v7 = _Block_copy(&v19);
    v8 = v24;
    v9 = v4;
    swift_release(v8);
    v10 = objc_msgSend(v5, "flatMap:", v7);
    _Block_release(v7);

LABEL_6:
    return v10;
  }
  v25 = &OBJC_PROTOCOL___HUPreloadableViewController;
  v11 = swift_dynamicCastObjCProtocolConditional(a1, 1, &v25);
  if (!v11)
    return objc_msgSend((id)objc_opt_self(NAFuture), "futureWithResult:", a1);
  v12 = (void *)v11;
  v13 = a1;
  result = objc_msgSend(v12, "hu_preloadContent");
  if (result)
  {
    v5 = result;
    v15 = swift_allocObject(&unk_1000B8C88, 24, 7);
    *(_QWORD *)(v15 + 16) = v13;
    v23 = sub_10005980C;
    v24 = v15;
    v19 = _NSConcreteStackBlock;
    v20 = 1107296256;
    v21 = sub_10004ACD0;
    v22 = &unk_1000B8CA0;
    v16 = _Block_copy(&v19);
    v17 = v24;
    v18 = v13;
    swift_release(v17);
    v10 = objc_msgSend(v5, "flatMap:", v16);
    _Block_release(v16);

    goto LABEL_6;
  }
  __break(1u);
  return result;
}

id sub_1000547BC(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t (*v5)(void);
  id v6;
  void *v7;

  sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
  v5 = *(uint64_t (**)(void))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  swift_retain(v4);
  v6 = a2;
  v7 = (void *)v5();
  swift_release(v4);

  return v7;
}

uint64_t sub_100054828(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

uint64_t sub_100054870(uint64_t a1, uint64_t a2)
{
  return sub_100054C24(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10005487C(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_1000548F0(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_10005496C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a1 = v4;
  return result;
}

uint64_t sub_1000549AC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_1000549F0@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100054A18(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

BOOL sub_100054AA0(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_100054AB4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_100054AC4(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_100054AD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100054BAC(&qword_1000D15D8, (uint64_t (*)(uint64_t))type metadata accessor for HFHomeAppTabIdentifier, (uint64_t)&unk_100089888);
  v3 = sub_100054BAC(&qword_1000D15E0, (uint64_t (*)(uint64_t))type metadata accessor for HFHomeAppTabIdentifier, (uint64_t)&unk_100089828);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100054B54()
{
  return sub_100054BAC(&qword_1000D15C0, (uint64_t (*)(uint64_t))type metadata accessor for HFHomeAppTabIdentifier, (uint64_t)&unk_1000897EC);
}

uint64_t sub_100054B80()
{
  return sub_100054BAC(&qword_1000D15C8, (uint64_t (*)(uint64_t))type metadata accessor for HFHomeAppTabIdentifier, (uint64_t)&unk_1000897C0);
}

uint64_t sub_100054BAC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100054BEC()
{
  return sub_100054BAC(&qword_1000D15D0, (uint64_t (*)(uint64_t))type metadata accessor for HFHomeAppTabIdentifier, (uint64_t)&unk_10008985C);
}

uint64_t sub_100054C18(uint64_t a1, uint64_t a2)
{
  return sub_100054C24(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100054C24(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100054C60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100054CA0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_100054D10(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100059788(&qword_1000D18E8);
  v11 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
    goto LABEL_29;
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(_QWORD *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }
    else if (v15 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_10005D26C(0, v8, v21, a4);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

void sub_100054F18(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::Int v11;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  Swift::Int v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t *v43;
  Swift::Int v44;
  Swift::Int v45;
  uint64_t *v46;
  uint64_t v47;
  Swift::Int v48;
  uint64_t v49;
  void *v50;
  Swift::Int v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  Swift::Int v74;
  void *v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  char v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  unint64_t v125;
  char *v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  Swift::Int v140;
  Swift::Int v141;
  Swift::Int v142;
  Swift::Int v143;
  _BOOL4 v144;
  uint64_t v145;
  void **__dst;
  uint64_t v147;
  Swift::Int v148;
  Swift::Int v149;
  Swift::Int v150;
  void *v151;
  id v152;
  uint64_t v153;

  v2 = v1;
  v4 = a1[1];
  v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_172;
    if (v4)
      sub_1000559D8(0, v4, 1, a1);
    return;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_180;
  v140 = v5;
  v142 = v4;
  v135 = a1;
  if (v4 < 2)
  {
    v10 = (char *)_swiftEmptyArrayStorage;
    v153 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v78 = _swiftEmptyArrayStorage[2];
LABEL_136:
      if (v78 >= 2)
      {
        v127 = *v135;
        do
        {
          v128 = v78 - 2;
          if (v78 < 2)
            goto LABEL_166;
          if (!v127)
            goto LABEL_179;
          v129 = *(_QWORD *)&v10[16 * v128 + 32];
          v130 = *(_QWORD *)&v10[16 * v78 + 24];
          sub_100055C70((void **)(v127 + 8 * v129), (void **)(v127 + 8 * *(_QWORD *)&v10[16 * v78 + 16]), v127 + 8 * v130, __dst);
          if (v2)
            break;
          if (v130 < v129)
            goto LABEL_168;
          if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
            v10 = sub_1000742FC((uint64_t)v10);
          if (v128 >= *((_QWORD *)v10 + 2))
            goto LABEL_169;
          v131 = &v10[16 * v128 + 32];
          *(_QWORD *)v131 = v129;
          *((_QWORD *)v131 + 1) = v130;
          v132 = *((_QWORD *)v10 + 2);
          if (v78 > v132)
            goto LABEL_170;
          memmove(&v10[16 * v78 + 16], &v10[16 * v78 + 32], 16 * (v132 - v78));
          *((_QWORD *)v10 + 2) = v132 - 1;
          v78 = v132 - 1;
        }
        while (v132 > 2);
      }
LABEL_147:
      v133 = swift_bridgeObjectRelease(v10);
      goto LABEL_148;
    }
  }
  else
  {
    v7 = v6 >> 1;
    v8 = sub_10005D394(0, &qword_1000D2520, HMActionSet_ptr);
    v9 = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    __dst = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v153 = v9;
  }
  v11 = 0;
  v12 = *a1;
  v136 = *a1 + 16;
  v137 = *a1 - 8;
  v10 = (char *)_swiftEmptyArrayStorage;
  v13 = v142;
  v147 = *a1;
  while (1)
  {
    v14 = v11 + 1;
    v143 = v11;
    if (v11 + 1 >= v13)
      goto LABEL_48;
    v15 = v11;
    v16 = *(void **)(v12 + 8 * v14);
    v151 = *(void **)(v12 + 8 * v11);
    v17 = v151;
    v152 = v16;
    v18 = v16;
    v19 = v17;
    v144 = sub_10004C1D8(&v152, &v151);
    if (v2)
    {
      swift_bridgeObjectRelease(v10);

LABEL_148:
      *(_QWORD *)((v153 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v133);
      swift_bridgeObjectRelease(v153);
      return;
    }

    v14 = v15 + 2;
    if (v15 + 2 < v142)
    {
      v138 = v10;
      v20 = (id *)(v136 + 8 * v15);
      while (1)
      {
        v148 = v14;
        v21 = *(v20 - 1);
        v22 = *v20;
        v23 = v21;
        v24 = objc_msgSend(v22, "hf_affectedServices");
        v25 = sub_10005D394(0, &qword_1000D1750, HMService_ptr);
        v26 = sub_1000597C8(&qword_1000D1758, &qword_1000D1750, HMService_ptr);
        v27 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v24, v25, v26);

        if ((v27 & 0xC000000000000001) != 0)
        {
          v28 = v27 < 0 ? v27 : v27 & 0xFFFFFFFFFFFFFF8;
          v29 = __CocoaSet.count.getter(v28);
        }
        else
        {
          v29 = *(_QWORD *)(v27 + 16);
        }
        swift_bridgeObjectRelease(v27);
        v30 = objc_msgSend(v23, "hf_affectedServices");
        v31 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v30, v25, v26);

        if ((v31 & 0xC000000000000001) != 0)
        {
          v32 = v31 < 0 ? v31 : v31 & 0xFFFFFFFFFFFFFF8;
          v33 = __CocoaSet.count.getter(v32);
        }
        else
        {
          v33 = *(_QWORD *)(v31 + 16);
        }
        swift_bridgeObjectRelease(v31);
        if (v29 == v33)
        {
          v34 = objc_msgSend(v22, "name");
          v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
          v37 = v36;

          v38 = objc_msgSend(v23, "name");
          v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
          v41 = v40;

          if (v39 != v35)
            goto LABEL_34;
          if (v41 == v37)
          {
            v42 = 0;
            v41 = v37;
          }
          else
          {
LABEL_34:
            v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v35, v37, 1);
          }
          v14 = v148;
          swift_bridgeObjectRelease(v37);
          swift_bridgeObjectRelease(v41);

        }
        else
        {

          v42 = v33 < v29;
          v14 = v148;
        }
        if (((v144 ^ v42) & 1) != 0)
          break;
        ++v14;
        ++v20;
        if (v142 == v14)
        {
          v14 = v142;
          break;
        }
      }
      v10 = v138;
    }
    v12 = v147;
    if (v144)
    {
      if (v14 < v143)
        goto LABEL_175;
      if (v143 < v14)
      {
        v43 = (uint64_t *)(v137 + 8 * v14);
        v44 = v14;
        v45 = v143;
        v46 = (uint64_t *)(v147 + 8 * v143);
        do
        {
          if (v45 != --v44)
          {
            if (!v147)
              goto LABEL_178;
            v47 = *v46;
            *v46 = *v43;
            *v43 = v47;
          }
          ++v45;
          --v43;
          ++v46;
        }
        while (v45 < v44);
      }
    }
LABEL_48:
    if (v14 < v142)
    {
      if (__OFSUB__(v14, v143))
        goto LABEL_171;
      if (v14 - v143 < v140)
        break;
    }
LABEL_85:
    if (v14 < v143)
      goto LABEL_167;
LABEL_86:
    v150 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      v10 = sub_100074158(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v77 = *((_QWORD *)v10 + 2);
    v76 = *((_QWORD *)v10 + 3);
    v78 = v77 + 1;
    v12 = v147;
    if (v77 >= v76 >> 1)
    {
      v126 = sub_100074158((char *)(v76 > 1), v77 + 1, 1, v10);
      v12 = v147;
      v10 = v126;
    }
    *((_QWORD *)v10 + 2) = v78;
    v79 = v10 + 32;
    v80 = &v10[16 * v77 + 32];
    *(_QWORD *)v80 = v143;
    *((_QWORD *)v80 + 1) = v150;
    if (v77)
    {
      while (1)
      {
        v81 = v78 - 1;
        if (v78 >= 4)
        {
          v86 = &v79[16 * v78];
          v87 = *((_QWORD *)v86 - 8);
          v88 = *((_QWORD *)v86 - 7);
          v92 = __OFSUB__(v88, v87);
          v89 = v88 - v87;
          if (v92)
            goto LABEL_155;
          v91 = *((_QWORD *)v86 - 6);
          v90 = *((_QWORD *)v86 - 5);
          v92 = __OFSUB__(v90, v91);
          v84 = v90 - v91;
          v85 = v92;
          if (v92)
            goto LABEL_156;
          v93 = v78 - 2;
          v94 = &v79[16 * v78 - 32];
          v96 = *(_QWORD *)v94;
          v95 = *((_QWORD *)v94 + 1);
          v92 = __OFSUB__(v95, v96);
          v97 = v95 - v96;
          if (v92)
            goto LABEL_158;
          v92 = __OFADD__(v84, v97);
          v98 = v84 + v97;
          if (v92)
            goto LABEL_161;
          if (v98 >= v89)
          {
            v116 = &v79[16 * v81];
            v118 = *(_QWORD *)v116;
            v117 = *((_QWORD *)v116 + 1);
            v92 = __OFSUB__(v117, v118);
            v119 = v117 - v118;
            if (v92)
              goto LABEL_165;
            v109 = v84 < v119;
            goto LABEL_122;
          }
        }
        else
        {
          if (v78 != 3)
          {
            v110 = *((_QWORD *)v10 + 4);
            v111 = *((_QWORD *)v10 + 5);
            v92 = __OFSUB__(v111, v110);
            v103 = v111 - v110;
            v104 = v92;
            goto LABEL_116;
          }
          v83 = *((_QWORD *)v10 + 4);
          v82 = *((_QWORD *)v10 + 5);
          v92 = __OFSUB__(v82, v83);
          v84 = v82 - v83;
          v85 = v92;
        }
        if ((v85 & 1) != 0)
          goto LABEL_157;
        v93 = v78 - 2;
        v99 = &v79[16 * v78 - 32];
        v101 = *(_QWORD *)v99;
        v100 = *((_QWORD *)v99 + 1);
        v102 = __OFSUB__(v100, v101);
        v103 = v100 - v101;
        v104 = v102;
        if (v102)
          goto LABEL_160;
        v105 = &v79[16 * v81];
        v107 = *(_QWORD *)v105;
        v106 = *((_QWORD *)v105 + 1);
        v92 = __OFSUB__(v106, v107);
        v108 = v106 - v107;
        if (v92)
          goto LABEL_163;
        if (__OFADD__(v103, v108))
          goto LABEL_164;
        if (v103 + v108 >= v84)
        {
          v109 = v84 < v108;
LABEL_122:
          if (v109)
            v81 = v93;
          goto LABEL_124;
        }
LABEL_116:
        if ((v104 & 1) != 0)
          goto LABEL_159;
        v112 = &v79[16 * v81];
        v114 = *(_QWORD *)v112;
        v113 = *((_QWORD *)v112 + 1);
        v92 = __OFSUB__(v113, v114);
        v115 = v113 - v114;
        if (v92)
          goto LABEL_162;
        if (v115 < v103)
          goto LABEL_133;
LABEL_124:
        v120 = v81 - 1;
        if (v81 - 1 >= v78)
        {
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
          goto LABEL_174;
        }
        if (!v12)
          goto LABEL_177;
        v121 = &v79[16 * v120];
        v122 = *(_QWORD *)v121;
        v123 = &v79[16 * v81];
        v124 = *((_QWORD *)v123 + 1);
        sub_100055C70((void **)(v12 + 8 * *(_QWORD *)v121), (void **)(v12 + 8 * *(_QWORD *)v123), v12 + 8 * v124, __dst);
        if (v2)
          goto LABEL_147;
        if (v124 < v122)
          goto LABEL_152;
        if (v81 > *((_QWORD *)v10 + 2))
          goto LABEL_153;
        *(_QWORD *)v121 = v122;
        *(_QWORD *)&v79[16 * v120 + 8] = v124;
        v125 = *((_QWORD *)v10 + 2);
        if (v81 >= v125)
          goto LABEL_154;
        v78 = v125 - 1;
        memmove(&v79[16 * v81], v123 + 16, 16 * (v125 - 1 - v81));
        *((_QWORD *)v10 + 2) = v125 - 1;
        v12 = v147;
        if (v125 <= 2)
          goto LABEL_133;
      }
    }
    v78 = 1;
LABEL_133:
    v13 = v142;
    v11 = v150;
    if (v150 >= v142)
      goto LABEL_136;
  }
  if (__OFADD__(v143, v140))
    goto LABEL_173;
  v48 = v142;
  if (v143 + v140 < v142)
    v48 = v143 + v140;
  if (v48 >= v143)
  {
    if (v14 == v48)
    {
      if (v14 < v143)
        goto LABEL_167;
      goto LABEL_86;
    }
    v139 = v10;
    v134 = v2;
    v49 = v137 + 8 * v14;
    v141 = v48;
LABEL_61:
    v50 = *(void **)(v12 + 8 * v14);
    v51 = v143;
    v145 = v49;
    v149 = v14;
    while (1)
    {
      v52 = *(void **)v49;
      v53 = v50;
      v54 = v52;
      v55 = objc_msgSend(v53, "hf_affectedServices");
      v56 = sub_10005D394(0, &qword_1000D1750, HMService_ptr);
      v57 = sub_1000597C8(&qword_1000D1758, &qword_1000D1750, HMService_ptr);
      v58 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v55, v56, v57);

      if ((v58 & 0xC000000000000001) != 0)
      {
        if (v58 < 0)
          v59 = v58;
        else
          v59 = v58 & 0xFFFFFFFFFFFFFF8;
        v60 = __CocoaSet.count.getter(v59);
      }
      else
      {
        v60 = *(_QWORD *)(v58 + 16);
      }
      swift_bridgeObjectRelease(v58);
      v61 = objc_msgSend(v54, "hf_affectedServices");
      v62 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v61, v56, v57);

      if ((v62 & 0xC000000000000001) != 0)
      {
        if (v62 < 0)
          v63 = v62;
        else
          v63 = v62 & 0xFFFFFFFFFFFFFF8;
        v64 = __CocoaSet.count.getter(v63);
      }
      else
      {
        v64 = *(_QWORD *)(v62 + 16);
      }
      swift_bridgeObjectRelease(v62);
      if (v60 == v64)
      {
        v65 = objc_msgSend(v53, "name");
        v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
        v68 = v67;

        v69 = objc_msgSend(v54, "name");
        v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
        v72 = v71;

        if (v70 == v66 && v72 == v68)
        {

          swift_bridgeObjectRelease_n(v68, 2);
          v12 = v147;
          v74 = v149;
LABEL_60:
          v14 = v74 + 1;
          v49 = v145 + 8;
          if (v14 == v141)
          {
            v14 = v141;
            v2 = v134;
            v10 = v139;
            goto LABEL_85;
          }
          goto LABEL_61;
        }
        v73 = _stringCompareWithSmolCheck(_:_:expecting:)(v70, v72, v66, v68, 1);

        swift_bridgeObjectRelease(v68);
        swift_bridgeObjectRelease(v72);
        v74 = v149;
        if ((v73 & 1) == 0)
          goto LABEL_59;
      }
      else
      {

        v74 = v149;
        if (v64 >= v60)
        {
LABEL_59:
          v12 = v147;
          goto LABEL_60;
        }
      }
      v12 = v147;
      if (!v147)
        goto LABEL_176;
      v75 = *(void **)v49;
      v50 = *(void **)(v49 + 8);
      *(_QWORD *)v49 = v50;
      *(_QWORD *)(v49 + 8) = v75;
      v49 -= 8;
      if (v74 == ++v51)
        goto LABEL_60;
    }
  }
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  __break(1u);
LABEL_180:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1000559D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void *v30;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  if (a3 != a2)
  {
    v4 = a3;
    v35 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_6:
    v6 = *(void **)(v35 + 8 * v4);
    v7 = a1;
    v33 = v5;
    v34 = v4;
    while (1)
    {
      v8 = *(void **)v5;
      v9 = v6;
      v10 = v8;
      v11 = objc_msgSend(v9, "hf_affectedServices");
      v12 = sub_10005D394(0, &qword_1000D1750, HMService_ptr);
      v13 = sub_1000597C8(&qword_1000D1758, &qword_1000D1750, HMService_ptr);
      v14 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v11, v12, v13);

      if ((v14 & 0xC000000000000001) != 0)
      {
        v15 = v14 < 0 ? v14 : v14 & 0xFFFFFFFFFFFFFF8;
        v16 = __CocoaSet.count.getter(v15);
      }
      else
      {
        v16 = *(_QWORD *)(v14 + 16);
      }
      swift_bridgeObjectRelease(v14);
      v17 = objc_msgSend(v10, "hf_affectedServices");
      v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v17, v12, v13);

      if ((v18 & 0xC000000000000001) != 0)
      {
        v19 = v18 < 0 ? v18 : v18 & 0xFFFFFFFFFFFFFF8;
        v20 = __CocoaSet.count.getter(v19);
      }
      else
      {
        v20 = *(_QWORD *)(v18 + 16);
      }
      swift_bridgeObjectRelease(v18);
      if (v16 == v20)
      {
        v21 = objc_msgSend(v9, "name");
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v24 = v23;

        v25 = objc_msgSend(v10, "name");
        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        v28 = v27;

        if (v26 == v22 && v28 == v24)
        {

          swift_bridgeObjectRelease_n(v24, 2);
          v4 = v34;
LABEL_5:
          ++v4;
          v5 = v33 + 8;
          if (v4 == a2)
            return;
          goto LABEL_6;
        }
        v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v22, v24, 1);

        swift_bridgeObjectRelease(v24);
        swift_bridgeObjectRelease(v28);
        v4 = v34;
        if ((v29 & 1) == 0)
          goto LABEL_5;
      }
      else
      {

        if (v20 >= v16)
          goto LABEL_5;
      }
      if (!v35)
        break;
      v30 = *(void **)v5;
      v6 = *(void **)(v5 + 8);
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v30;
      v5 -= 8;
      if (v4 == ++v7)
        goto LABEL_5;
    }
    __break(1u);
  }
}

uint64_t sub_100055C70(void **__src, void **a2, unint64_t a3, void **__dst)
{
  id *v5;
  void **v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  BOOL v18;
  BOOL v19;
  id *v20;
  void **v21;
  id *v22;
  id *v23;
  id *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  BOOL v29;
  BOOL v30;
  id *v31;
  void **v32;
  uint64_t result;
  void **v34;
  void **v35;
  uint64_t v36;
  void *v37;
  id v38;
  void **v39;
  void **v40;
  void **v41;

  v35 = __dst;
  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v41 = __src;
  v40 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (__dst != a2 || &a2[v12] <= __dst)
      {
        memmove(__dst, a2, 8 * v12);
        __dst = v35;
      }
      v21 = &__dst[v12];
      v39 = v21;
      v41 = v5;
      if (v6 < v5 && v10 >= 8)
      {
        v22 = (id *)(a3 - 8);
        v23 = v5;
        v34 = v6;
        while (1)
        {
          v24 = v21;
          v25 = *--v21;
          v38 = v25;
          v26 = *--v23;
          v37 = v26;
          v27 = v38;
          v28 = v26;
          v29 = sub_10004C1D8(&v38, &v37);
          if (v36)
            break;
          v30 = v29;
          v36 = 0;
          v31 = v22 + 1;

          if (v30)
          {
            v32 = v35;
            if (v31 != v5 || v22 >= v5)
              *v22 = *v23;
            v41 = v23;
            v21 = v24;
          }
          else
          {
            v39 = v21;
            v32 = v35;
            if (v31 < v24 || v22 >= v24 || v31 != v24)
              *v22 = *v21;
            v23 = v5;
          }
          if (v23 > v34)
          {
            --v22;
            v5 = v23;
            if (v21 > v32)
              continue;
          }
          goto LABEL_48;
        }

      }
      goto LABEL_48;
    }
  }
  else if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst)
    {
      memmove(__dst, __src, 8 * v9);
      __dst = v35;
    }
    v13 = &__dst[v9];
    v39 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      while (1)
      {
        v38 = *v5;
        v14 = __dst;
        v37 = *__dst;
        v15 = v37;
        v16 = v38;
        v17 = v15;
        v18 = sub_10004C1D8(&v38, &v37);
        if (v36)
          break;
        v19 = v18;

        if (v19)
        {
          v20 = v5 + 1;
          if (v6 < v5 || v6 >= v20 || v6 != v5)
            *v6 = *v5;
          __dst = v14;
        }
        else
        {
          if (v6 != v14)
            *v6 = *v14;
          __dst = v14 + 1;
          v40 = v14 + 1;
          v20 = v5;
        }
        v36 = 0;
        v41 = ++v6;
        if (__dst < v13)
        {
          v5 = v20;
          if ((unint64_t)v20 < a3)
            continue;
        }
        goto LABEL_48;
      }

    }
LABEL_48:
    sub_100074250(&v41, &v40, &v39);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

Swift::Int sub_100055FA4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  Swift::Int result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100059788(&qword_1000D1670);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v8 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain(v3);
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_36;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_36;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_36;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_36:
                swift_release(v3);
                v2 = v30;
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_42;
                  if (v14 >= v11)
                    goto LABEL_36;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_26;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_26:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v17);
      result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v6 + 40));
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release(v3);
  *v2 = v6;
  return result;
}

Swift::Int sub_100056240(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;

  v4 = a4;
  if (!a3)
  {
    v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v4);
    return (Swift::Int)v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_100059788(&qword_1000D1670);
  result = static _SetStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)result;
  v29 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v29[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v29[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = v9[5];
    v19 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = NSObject._rawHashValue(seed:)(v18);
    v20 = -1 << *((_BYTE *)v9 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v29[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v29[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10005649C(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;
  char v26;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_100054D10(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for UUID(0);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy(v15);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v26 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v26, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100056610(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10005662C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_10005662C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100059788(&qword_1000D18E8);
  v11 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v15 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v15 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v21, v22, v8, v18);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v21);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v8;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy(v21);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v15;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

int64_t sub_10005680C(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1000568F0(void *a1)
{
  void *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  id v25;
  id v26;
  void **v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t (*v31)();
  _QWORD *v32;

  v3 = swift_allocObject(&unk_1000B8A80, 25, 7);
  *(_QWORD *)(v3 + 16) = a1;
  *(_BYTE *)(v3 + 24) = 3;
  v4 = (_QWORD *)swift_allocObject(&unk_1000B8AA8, 40, 7);
  v4[2] = v1;
  v4[3] = sub_100059710;
  v4[4] = v3;
  v5 = HFHomeAppTabIdentifierHome;
  v6 = a1;
  v7 = v1;
  swift_retain(v3);
  v8 = objc_msgSend(v7, "_selectAndFinishFirstReadForTabWithIdentifier:", v5);
  if (v8)
  {
    v9 = v8;
    v31 = (uint64_t (*)())sub_1000728D8;
    v32 = 0;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10004ACD0;
    v30 = &unk_1000B8AC0;
    v10 = _Block_copy(&v27);
    v11 = objc_msgSend(v9, "flatMap:", v10);
    _Block_release(v10);

    v12 = (_QWORD *)swift_allocObject(&unk_1000B8AF8, 40, 7);
    v12[2] = v7;
    v12[3] = sub_100059730;
    v12[4] = v4;
    v31 = (uint64_t (*)())sub_100059750;
    v32 = v12;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10004ACD0;
    v30 = &unk_1000B8B10;
    v13 = _Block_copy(&v27);
    v14 = v32;
    v15 = v7;
    swift_retain(v4);
    swift_release(v14);
    v16 = objc_msgSend(v11, "flatMap:", v13);
    _Block_release(v13);
    swift_release(v3);
    swift_release(v4);

    v17 = swift_allocObject(&unk_1000B8B48, 25, 7);
    *(_QWORD *)(v17 + 16) = v6;
    *(_BYTE *)(v17 + 24) = 3;
    v31 = (uint64_t (*)())sub_10005976C;
    v32 = (_QWORD *)v17;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10004AAF4;
    v30 = &unk_1000B8B60;
    v18 = _Block_copy(&v27);
    v19 = v32;
    v20 = v6;
    swift_release(v19);
    v21 = objc_msgSend(v16, "addSuccessBlock:", v18);
    _Block_release(v18);

    v22 = swift_allocObject(&unk_1000B8B98, 25, 7);
    *(_QWORD *)(v22 + 16) = v20;
    *(_BYTE *)(v22 + 24) = 3;
    v31 = sub_10005E2D4;
    v32 = (_QWORD *)v22;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10004AAF4;
    v30 = &unk_1000B8BB0;
    v23 = _Block_copy(&v27);
    v24 = v32;
    v25 = v20;
    swift_release(v24);
    v26 = objc_msgSend(v21, "addFailureBlock:", v23);
    _Block_release(v23);

  }
  else
  {
    __break(1u);
  }
}

void sub_100056C0C(void *a1)
{
  void *v1;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  void **v18;
  uint64_t v19;
  void (*v20)(uint64_t, void *);
  void *v21;
  uint64_t (*v22)();
  uint64_t v23;

  v3 = swift_allocObject(&unk_1000B8D28, 25, 7);
  *(_QWORD *)(v3 + 16) = a1;
  *(_BYTE *)(v3 + 24) = 4;
  v4 = (_QWORD *)swift_allocObject(&unk_1000B8D50, 40, 7);
  v4[2] = v1;
  v4[3] = sub_10005DEE4;
  v4[4] = v3;
  v5 = a1;
  v6 = v1;
  swift_retain(v3);
  v7 = sub_10004B510(1, (uint64_t)sub_10005DEC8, (uint64_t)v4);
  swift_release(v3);
  swift_release(v4);
  v8 = swift_allocObject(&unk_1000B8D78, 25, 7);
  *(_QWORD *)(v8 + 16) = v5;
  *(_BYTE *)(v8 + 24) = 4;
  v22 = sub_10005E2DC;
  v23 = v8;
  v18 = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_10004AAF4;
  v21 = &unk_1000B8D90;
  v9 = _Block_copy(&v18);
  v10 = v23;
  v11 = v5;
  swift_release(v10);
  v12 = objc_msgSend(v7, "addSuccessBlock:", v9);
  _Block_release(v9);

  v13 = swift_allocObject(&unk_1000B8DC8, 25, 7);
  *(_QWORD *)(v13 + 16) = v11;
  *(_BYTE *)(v13 + 24) = 4;
  v22 = sub_10005E2D4;
  v23 = v13;
  v18 = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_10004AAF4;
  v21 = &unk_1000B8DE0;
  v14 = _Block_copy(&v18);
  v15 = v23;
  v16 = v11;
  swift_release(v15);
  v17 = objc_msgSend(v12, "addFailureBlock:", v14);
  _Block_release(v14);

}

void sub_100056E04(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  _QWORD *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id (*v31)(void *);
  uint64_t v32;

  v3 = objc_msgSend(v1, "appNavigator");
  if (v3)
  {
    v4 = v3;
    v5 = (_QWORD *)swift_allocObject(&unk_1000B8EE0, 40, 7);
    v5[3] = 0;
    v5[4] = 0;
    v5[2] = v1;
    v6 = v1;
    v7 = sub_10004B510(1, (uint64_t)sub_10005DEC8, (uint64_t)v5);
    swift_release(v5);
    v8 = swift_allocObject(&unk_1000B8F08, 40, 7);
    *(_QWORD *)(v8 + 16) = a1;
    *(_BYTE *)(v8 + 24) = 6;
    *(_QWORD *)(v8 + 32) = v4;
    v31 = sub_1000598D4;
    v32 = v8;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10004ACD0;
    v30 = &unk_1000B8F20;
    v9 = _Block_copy(&v27);
    v10 = v32;
    v11 = a1;
    v12 = v4;
    swift_release(v10);
    v13 = objc_msgSend(v7, "flatMap:", v9);
    _Block_release(v9);

    v14 = swift_allocObject(&unk_1000B8F58, 25, 7);
    *(_QWORD *)(v14 + 16) = v11;
    *(_BYTE *)(v14 + 24) = 6;
    v31 = (id (*)(void *))sub_10005E2DC;
    v32 = v14;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10004ACD4;
    v30 = &unk_1000B8F70;
    v15 = _Block_copy(&v27);
    v16 = v32;
    v17 = v11;
    swift_release(v16);
    v18 = objc_msgSend(v13, "addSuccessBlock:", v15);
    _Block_release(v15);

    v19 = swift_allocObject(&unk_1000B8FA8, 25, 7);
    *(_QWORD *)(v19 + 16) = v17;
    *(_BYTE *)(v19 + 24) = 6;
    v31 = (id (*)(void *))sub_10005E2D4;
    v32 = v19;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10004AAF4;
    v30 = &unk_1000B8FC0;
    v20 = _Block_copy(&v27);
    v21 = v32;
    v22 = v17;
    swift_release(v21);
    v23 = objc_msgSend(v18, "addFailureBlock:", v20);
    _Block_release(v20);

  }
  else
  {
    v24 = sub_1000596B8();
    v25 = swift_allocError(&_s20PerformanceTestErrorON, v24, 0, 0);
    *(_QWORD *)v26 = 1;
    *(_OWORD *)(v26 + 8) = 0u;
    *(_OWORD *)(v26 + 24) = 0u;
    *(_QWORD *)(v26 + 40) = 0;
    *(_BYTE *)(v26 + 48) = 5;
    sub_10006CBF0(6u, v25);
    swift_errorRelease(v25);
  }
}

void sub_1000570F8(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  id v26;
  id v27;
  id v28;
  void **aBlock;
  uint64_t v30;
  void *v31;
  void *v32;
  id (*v33)(void *);
  _QWORD *v34;

  v2 = v1;
  v4 = objc_msgSend((id)objc_opt_self(HFAccessoryTypeGroup), "lightAccessoryTypeGroup");
  v5 = swift_allocObject(&unk_1000B9340, 25, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_BYTE *)(v5 + 24) = 10;
  v6 = (_QWORD *)swift_allocObject(&unk_1000B9368, 40, 7);
  v6[2] = sub_10005DEE4;
  v6[3] = v5;
  v6[4] = v4;
  v7 = HFHomeAppTabIdentifierHome;
  v8 = a1;
  swift_retain(v5);
  v28 = v4;
  v9 = objc_msgSend(v2, "_selectAndFinishFirstReadForTabWithIdentifier:", v7);
  if (v9)
  {
    v10 = v9;
    v33 = sub_1000728D8;
    v34 = 0;
    aBlock = _NSConcreteStackBlock;
    v30 = 1107296256;
    v31 = sub_10004ACD0;
    v32 = &unk_1000B9380;
    v11 = _Block_copy(&aBlock);
    v12 = objc_msgSend(v10, "flatMap:", v11);
    _Block_release(v11);

    v13 = (_QWORD *)swift_allocObject(&unk_1000B93B8, 40, 7);
    v13[2] = v2;
    v13[3] = sub_1000599B0;
    v13[4] = v6;
    v33 = (id (*)(void *))sub_10005DEF4;
    v34 = v13;
    aBlock = _NSConcreteStackBlock;
    v30 = 1107296256;
    v31 = sub_10004ACD0;
    v32 = &unk_1000B93D0;
    v14 = _Block_copy(&aBlock);
    v15 = v34;
    v16 = v2;
    swift_retain(v6);
    swift_release(v15);
    v17 = objc_msgSend(v12, "flatMap:", v14);
    _Block_release(v14);
    swift_release(v5);
    swift_release(v6);

    v18 = swift_allocObject(&unk_1000B9408, 25, 7);
    *(_QWORD *)(v18 + 16) = v8;
    *(_BYTE *)(v18 + 24) = 10;
    v33 = (id (*)(void *))sub_10005E2DC;
    v34 = (_QWORD *)v18;
    aBlock = _NSConcreteStackBlock;
    v30 = 1107296256;
    v31 = sub_10004AAF4;
    v32 = &unk_1000B9420;
    v19 = _Block_copy(&aBlock);
    v20 = v34;
    v21 = v8;
    swift_release(v20);
    v22 = objc_msgSend(v17, "addSuccessBlock:", v19);
    _Block_release(v19);

    v23 = swift_allocObject(&unk_1000B9458, 25, 7);
    *(_QWORD *)(v23 + 16) = v21;
    *(_BYTE *)(v23 + 24) = 10;
    v33 = (id (*)(void *))sub_10005E2D4;
    v34 = (_QWORD *)v23;
    aBlock = _NSConcreteStackBlock;
    v30 = 1107296256;
    v31 = sub_10004AAF4;
    v32 = &unk_1000B9470;
    v24 = _Block_copy(&aBlock);
    v25 = v34;
    v26 = v21;
    swift_release(v25);
    v27 = objc_msgSend(v22, "addFailureBlock:", v24);
    _Block_release(v24);

  }
  else
  {
    __break(1u);
  }
}

void sub_100057444(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  _QWORD *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t (*v32)();
  uint64_t v33;

  v3 = objc_msgSend(v1, "appNavigator");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(HFAccessoryTypeGroup), "lightAccessoryTypeGroup");
    v6 = (_QWORD *)swift_allocObject(&unk_1000B9570, 40, 7);
    v6[2] = 0;
    v6[3] = 0;
    v6[4] = v5;
    v7 = v5;
    v8 = sub_10004B510(1, (uint64_t)sub_1000599B0, (uint64_t)v6);
    swift_release(v6);
    v9 = swift_allocObject(&unk_1000B9598, 40, 7);
    *(_QWORD *)(v9 + 16) = a1;
    *(_BYTE *)(v9 + 24) = 12;
    *(_QWORD *)(v9 + 32) = v4;
    v32 = sub_10005DEF8;
    v33 = v9;
    v28 = _NSConcreteStackBlock;
    v29 = 1107296256;
    v30 = sub_10004ACD0;
    v31 = &unk_1000B95B0;
    v10 = _Block_copy(&v28);
    v11 = v33;
    v12 = a1;
    v13 = v4;
    swift_release(v11);
    v14 = objc_msgSend(v8, "flatMap:", v10);
    _Block_release(v10);

    v15 = swift_allocObject(&unk_1000B95E8, 25, 7);
    *(_QWORD *)(v15 + 16) = v12;
    *(_BYTE *)(v15 + 24) = 12;
    v32 = sub_10005E2DC;
    v33 = v15;
    v28 = _NSConcreteStackBlock;
    v29 = 1107296256;
    v30 = sub_10004ACD4;
    v31 = &unk_1000B9600;
    v16 = _Block_copy(&v28);
    v17 = v33;
    v18 = v12;
    swift_release(v17);
    v19 = objc_msgSend(v14, "addSuccessBlock:", v16);
    _Block_release(v16);

    v20 = swift_allocObject(&unk_1000B9638, 25, 7);
    *(_QWORD *)(v20 + 16) = v18;
    *(_BYTE *)(v20 + 24) = 12;
    v32 = sub_10005E2D4;
    v33 = v20;
    v28 = _NSConcreteStackBlock;
    v29 = 1107296256;
    v30 = sub_10004AAF4;
    v31 = &unk_1000B9650;
    v21 = _Block_copy(&v28);
    v22 = v33;
    v23 = v18;
    swift_release(v22);
    v24 = objc_msgSend(v19, "addFailureBlock:", v21);
    _Block_release(v21);

  }
  else
  {
    v25 = sub_1000596B8();
    v26 = swift_allocError(&_s20PerformanceTestErrorON, v25, 0, 0);
    *(_QWORD *)v27 = 1;
    *(_OWORD *)(v27 + 8) = 0u;
    *(_OWORD *)(v27 + 24) = 0u;
    *(_QWORD *)(v27 + 40) = 0;
    *(_BYTE *)(v27 + 48) = 5;
    sub_10006CBF0(0xCu, v26);
    swift_errorRelease(v26);
  }
}

void sub_10005776C(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  id v25;
  id v26;
  void **v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id (*v31)(void *);
  _QWORD *v32;

  v2 = v1;
  v4 = swift_allocObject(&unk_1000B8FF8, 25, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 24) = 7;
  v5 = swift_allocObject(&unk_1000B9020, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_10005DEE4;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = HFHomeAppTabIdentifierHome;
  v7 = a1;
  swift_retain(v4);
  v8 = objc_msgSend(v2, "_selectAndFinishFirstReadForTabWithIdentifier:", v6);
  if (v8)
  {
    v9 = v8;
    v31 = sub_1000728D8;
    v32 = 0;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10004ACD0;
    v30 = &unk_1000B9038;
    v10 = _Block_copy(&v27);
    v11 = objc_msgSend(v9, "flatMap:", v10);
    _Block_release(v10);

    v12 = (_QWORD *)swift_allocObject(&unk_1000B9070, 40, 7);
    v12[2] = v2;
    v12[3] = sub_1000598F8;
    v12[4] = v5;
    v31 = (id (*)(void *))sub_10005DEF4;
    v32 = v12;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10004ACD0;
    v30 = &unk_1000B9088;
    v13 = _Block_copy(&v27);
    v14 = v32;
    v15 = v2;
    swift_retain(v5);
    swift_release(v14);
    v16 = objc_msgSend(v11, "flatMap:", v13);
    _Block_release(v13);
    swift_release(v4);
    swift_release(v5);

    v17 = swift_allocObject(&unk_1000B90C0, 25, 7);
    *(_QWORD *)(v17 + 16) = v7;
    *(_BYTE *)(v17 + 24) = 7;
    v31 = (id (*)(void *))sub_10005E2DC;
    v32 = (_QWORD *)v17;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10004AAF4;
    v30 = &unk_1000B90D8;
    v18 = _Block_copy(&v27);
    v19 = v32;
    v20 = v7;
    swift_release(v19);
    v21 = objc_msgSend(v16, "addSuccessBlock:", v18);
    _Block_release(v18);

    v22 = swift_allocObject(&unk_1000B9110, 25, 7);
    *(_QWORD *)(v22 + 16) = v20;
    *(_BYTE *)(v22 + 24) = 7;
    v31 = (id (*)(void *))sub_10005E2D4;
    v32 = (_QWORD *)v22;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10004AAF4;
    v30 = &unk_1000B9128;
    v23 = _Block_copy(&v27);
    v24 = v32;
    v25 = v20;
    swift_release(v24);
    v26 = objc_msgSend(v21, "addFailureBlock:", v23);
    _Block_release(v23);

  }
  else
  {
    __break(1u);
  }
}

void sub_100057A80(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t (*v30)();
  uint64_t v31;

  v3 = objc_msgSend(v1, "appNavigator");
  if (v3)
  {
    v4 = v3;
    v5 = swift_allocObject(&unk_1000B9228, 32, 7);
    *(_QWORD *)(v5 + 16) = 0;
    *(_QWORD *)(v5 + 24) = 0;
    v6 = sub_10004B510(1, (uint64_t)sub_1000598F8, v5);
    swift_release(v5);
    v7 = swift_allocObject(&unk_1000B9250, 40, 7);
    *(_QWORD *)(v7 + 16) = a1;
    *(_BYTE *)(v7 + 24) = 9;
    *(_QWORD *)(v7 + 32) = v4;
    v30 = sub_10005DEF8;
    v31 = v7;
    v26 = _NSConcreteStackBlock;
    v27 = 1107296256;
    v28 = sub_10004ACD0;
    v29 = &unk_1000B9268;
    v8 = _Block_copy(&v26);
    v9 = v31;
    v10 = a1;
    v11 = v4;
    swift_release(v9);
    v12 = objc_msgSend(v6, "flatMap:", v8);
    _Block_release(v8);

    v13 = swift_allocObject(&unk_1000B92A0, 25, 7);
    *(_QWORD *)(v13 + 16) = v10;
    *(_BYTE *)(v13 + 24) = 9;
    v30 = sub_10005E2DC;
    v31 = v13;
    v26 = _NSConcreteStackBlock;
    v27 = 1107296256;
    v28 = sub_10004ACD4;
    v29 = &unk_1000B92B8;
    v14 = _Block_copy(&v26);
    v15 = v31;
    v16 = v10;
    swift_release(v15);
    v17 = objc_msgSend(v12, "addSuccessBlock:", v14);
    _Block_release(v14);

    v18 = swift_allocObject(&unk_1000B92F0, 25, 7);
    *(_QWORD *)(v18 + 16) = v16;
    *(_BYTE *)(v18 + 24) = 9;
    v30 = sub_10005E2D4;
    v31 = v18;
    v26 = _NSConcreteStackBlock;
    v27 = 1107296256;
    v28 = sub_10004AAF4;
    v29 = &unk_1000B9308;
    v19 = _Block_copy(&v26);
    v20 = v31;
    v21 = v16;
    swift_release(v20);
    v22 = objc_msgSend(v17, "addFailureBlock:", v19);
    _Block_release(v19);

  }
  else
  {
    v23 = sub_1000596B8();
    v24 = swift_allocError(&_s20PerformanceTestErrorON, v23, 0, 0);
    *(_QWORD *)v25 = 1;
    *(_OWORD *)(v25 + 8) = 0u;
    *(_OWORD *)(v25 + 24) = 0u;
    *(_QWORD *)(v25 + 40) = 0;
    *(_BYTE *)(v25 + 48) = 5;
    sub_10006CBF0(9u, v24);
    swift_errorRelease(v24);
  }
}

void sub_100057D68(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  char v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v20;

  v20 = 0;
  v4 = 0;
  v5 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v9)
      goto LABEL_24;
    v15 = *(_QWORD *)(v5 + 8 * v14);
    ++v4;
    if (!v15)
    {
      v4 = v14 + 1;
      if (v14 + 1 >= v9)
        goto LABEL_24;
      v15 = *(_QWORD *)(v5 + 8 * v4);
      if (!v15)
      {
        v4 = v14 + 2;
        if (v14 + 2 >= v9)
          goto LABEL_24;
        v15 = *(_QWORD *)(v5 + 8 * v4);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v4 << 6);
LABEL_5:
    v12 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v11);
    v13 = dispatch thunk of DashboardContext.accessoryRepresentableHasStandardTileRepresentation(_:)();

    if ((v13 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v20++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain(a3);
        sub_100056240(a1, a2, v20, a3);
        return;
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v9)
    goto LABEL_24;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v9)
      goto LABEL_24;
    v15 = *(_QWORD *)(v5 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_100057F18(uint64_t a1, void *a2)
{
  uint64_t v2;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t isStackAllocationSafe;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v18;

  v4 = *(_BYTE *)(a1 + 32);
  v5 = v4 & 0x3F;
  v6 = (unint64_t)((1 << v4) + 63) >> 6;
  isStackAllocationSafe = a2;
  v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * v6, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    v9 = (char *)&v18 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    v10 = v8;
    sub_100057D68((unint64_t *)v9, v6, a1);
    v12 = v11;
    swift_release(a1);

    if (v2)
      swift_willThrow(v13);

  }
  else
  {
    v14 = (void *)swift_slowAlloc(8 * v6, -1);
    bzero(v14, 8 * v6);
    v15 = v8;
    sub_100057D68((unint64_t *)v14, v6, a1);
    v12 = v16;
    swift_release(a1);

    swift_slowDealloc(v14, -1, -1);
  }
  return v12;
}

Swift::Int sub_1000580C4(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  char v10;
  id v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;

  if ((a1 & 0xC000000000000001) == 0)
    return sub_100057F18(a1, a2);
  v2 = &_swiftEmptySetSingleton;
  v25 = &_swiftEmptySetSingleton;
  if (a1 < 0)
    v3 = a1;
  else
    v3 = a1 & 0xFFFFFFFFFFFFFF8;
  v4 = a2;
  v5 = __CocoaSet.makeIterator()(v3);
  v6 = __CocoaSet.Iterator.next()(v5);
  if (v6)
  {
    v7 = v6;
    v8 = sub_10005D394(0, &qword_1000D1660, HFAccessoryLikeObject_ptr);
    do
    {
      v23 = v7;
      swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
      v10 = dispatch thunk of DashboardContext.accessoryRepresentableHasStandardTileRepresentation(_:)(v24);
      v11 = v24;
      if ((v10 & 1) != 0)
      {
        v12 = v25;
        v13 = v25[2];
        if (v25[3] <= v13)
        {
          sub_100055FA4(v13 + 1);
          v12 = v25;
        }
        result = NSObject._rawHashValue(seed:)(v12[5]);
        v14 = v12 + 7;
        v15 = -1 << *((_BYTE *)v12 + 32);
        v16 = result & ~v15;
        v17 = v16 >> 6;
        if (((-1 << v16) & ~v12[(v16 >> 6) + 7]) != 0)
        {
          v18 = __clz(__rbit64((-1 << v16) & ~v12[(v16 >> 6) + 7])) | v16 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v19 = 0;
          v20 = (unint64_t)(63 - v15) >> 6;
          do
          {
            if (++v17 == v20 && (v19 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v21 = v17 == v20;
            if (v17 == v20)
              v17 = 0;
            v19 |= v21;
            v22 = v14[v17];
          }
          while (v22 == -1);
          v18 = __clz(__rbit64(~v22)) + (v17 << 6);
        }
        *(_QWORD *)((char *)v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
        *(_QWORD *)(v12[6] + 8 * v18) = v11;
        ++v12[2];
      }
      else
      {

      }
      v7 = __CocoaSet.Iterator.next()(result);
    }
    while (v7);
    v2 = v25;
  }

  swift_release(v5);
  return (Swift::Int)v2;
}

uint64_t sub_1000582DC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Swift::Int v14;
  uint64_t v15;
  os_log_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_t *v22;
  uint64_t v23;
  uint64_t v24;
  os_log_t *v26;
  os_log_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, "home");
  if (v6)
  {
    v7 = v6;
    type metadata accessor for DashboardContext(0);
    v8 = (void *)dispatch thunk of static DashboardContext.roomDashboard(for:in:)(a1, v7);
    v9 = objc_msgSend(a1, "hf_accessoryLikeObjects");
    v10 = sub_10005D394(0, &qword_1000D1660, HFAccessoryLikeObject_ptr);
    v11 = sub_1000597C8(&qword_1000D1668, &qword_1000D1660, HFAccessoryLikeObject_ptr);
    v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v9, v10, v11);

    v13 = v8;
    v14 = sub_1000580C4(v12, v13);

    if ((v14 & 0xC000000000000001) != 0)
      v15 = __CocoaSet.count.getter(v14);
    else
      v15 = *(_QWORD *)(v14 + 16);

    swift_release(v14);
  }
  else
  {
    if (qword_1000D14E8 != -1)
      swift_once(&qword_1000D14E8, sub_10006F53C);
    Logger.init(_:)((id)qword_1000D36D0);
    v16 = a1;
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc(22, -1);
      v27 = v17;
      v20 = v19;
      v26 = (os_log_t *)swift_slowAlloc(8, -1);
      v28 = swift_slowAlloc(32, -1);
      v30 = v28;
      *(_DWORD *)v20 = 136315394;
      v29 = sub_100068064(0xD000000000000024, 0x8000000100090470, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v20 + 4, v20 + 12);
      *(_WORD *)(v20 + 12) = 2112;
      v29 = (uint64_t)v16;
      v21 = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v20 + 14, v20 + 22);
      v22 = v26;
      *v26 = v16;

      v16 = v27;
      _os_log_impl((void *)&_mh_execute_header, v27, v18, "%s nil home for room %@", (uint8_t *)v20, 0x16u);
      v23 = sub_100059788(&qword_1000D1658);
      swift_arrayDestroy(v22, 1, v23);
      swift_slowDealloc(v22, -1, -1);
      v24 = v28;
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  return v15;
}

uint64_t sub_10005863C(void **__src, id *a2, unint64_t a3, void **a4, void *a5)
{
  id *v5;
  void **v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  id *v21;
  id *v22;
  id *v23;
  id *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  void **v31;
  id *v34;
  char *v35;
  void **v36;
  id *v37;

  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v37 = __src;
  v36 = a4;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (a4 != a2 || &a2[v12] <= a4)
        memmove(a4, a2, 8 * v12);
      v21 = &a4[v12];
      v35 = (char *)v21;
      v37 = v5;
      if (v6 < v5 && v10 >= 8)
      {
        v22 = (id *)(a3 - 8);
        v23 = v5;
        v31 = v6;
        do
        {
          v34 = v5;
          v24 = v22 + 1;
          v25 = *--v23;
          v26 = *(v21 - 1);
          v27 = v25;
          v28 = sub_1000582DC(v26);
          v29 = sub_1000582DC(v27);

          if (v29 >= v28)
          {
            v35 = (char *)(v21 - 1);
            if (v24 < v21 || v22 >= v21 || v24 != v21)
              *v22 = *(v21 - 1);
            v23 = v34;
            --v21;
          }
          else
          {
            if (v24 != v34 || v22 >= v34)
              *v22 = *v23;
            v37 = v23;
          }
          if (v23 <= v31)
            break;
          --v22;
          v5 = v23;
        }
        while (v21 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v7 >= -7)
  {
    if (a4 != __src || &__src[v9] <= a4)
      memmove(a4, __src, 8 * v9);
    v13 = &a4[v9];
    v35 = (char *)v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      v14 = a4;
      do
      {
        v15 = *v14;
        v16 = *v5;
        v17 = v15;
        v18 = sub_1000582DC(v16);
        v19 = sub_1000582DC(v17);

        if (v19 >= v18)
        {
          if (v6 != v14)
            *v6 = *v14;
          v36 = ++v14;
          v20 = v5;
        }
        else
        {
          v20 = v5 + 1;
          if (v6 < v5 || v6 >= v20 || v6 != v5)
            *v6 = *v5;
        }
        ++v6;
        if (v14 >= v13)
          break;
        v5 = v20;
      }
      while ((unint64_t)v20 < a3);
      v37 = v6;
    }
LABEL_43:
    sub_100074250(&v37, &v36, &v35);
    return 1;
  }

  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_100058938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(void **)(v5 + 8 * v4);
    v8 = a1;
    v9 = v6;
    while (1)
    {
      v10 = *(void **)v9;
      v11 = v7;
      v12 = v10;
      v13 = sub_1000582DC(v11);
      v14 = sub_1000582DC(v12);

      if (v14 >= v13)
      {
LABEL_4:
        ++v4;
        v6 += 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v15 = *(void **)v9;
      v7 = *(void **)(v9 + 8);
      *(_QWORD *)v9 = v7;
      *(_QWORD *)(v9 + 8) = v15;
      v9 -= 8;
      if (v4 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
}

void sub_100058A18(uint64_t *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  Swift::Int v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  Swift::Int v12;
  uint64_t v13;
  Swift::Int v14;
  unint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  id *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  Swift::Int v32;
  Swift::Int v33;
  uint64_t *v34;
  uint64_t v35;
  Swift::Int v36;
  uint64_t v37;
  Swift::Int v38;
  void *v39;
  Swift::Int v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  id v98;
  unint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  id v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  Swift::Int v118;
  Swift::Int v119;
  Swift::Int v120;
  uint64_t v121;
  uint64_t v122;
  void **v123;
  id v124;
  char *v125;
  char *v126;
  unint64_t v127;
  Swift::Int v128;
  id *v129;
  uint64_t v130;
  Swift::Int v131;
  void **v132;
  id *v133;
  uint64_t v134;
  void **v135;
  uint64_t v136;

  v3 = v2;
  v5 = a1[1];
  v124 = a2;
  v6 = _minimumMergeRunLength(_:)(v5);
  if (v6 >= v5)
  {
    if ((v5 & 0x8000000000000000) == 0)
    {
      if (v5)
        sub_100058938(0, v5, 1, a1);

      return;
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:

    __break(1u);
LABEL_141:

    __break(1u);
LABEL_142:

    __break(1u);
LABEL_143:

    __break(1u);
LABEL_144:

    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_144;
  v118 = v6;
  v115 = a1;
  if (v5 < 2)
  {
    v11 = (char *)_swiftEmptyArrayStorage;
    v136 = (uint64_t)_swiftEmptyArrayStorage;
    v123 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v5 != 1)
    {
      v15 = _swiftEmptyArrayStorage[2];
LABEL_101:
      if (v15 < 2)
      {
LABEL_112:
        v114 = swift_bridgeObjectRelease(v11);
        *(_QWORD *)((v136 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
        specialized Array._endMutation()(v114);
        v104 = v136;

        goto LABEL_113;
      }
      v105 = *v115;
      v130 = *v115;
      while (1)
      {
        v106 = v15 - 2;
        if (v15 < 2)
          goto LABEL_131;
        if (!v105)
          goto LABEL_143;
        v107 = (uint64_t)v11;
        v108 = *(_QWORD *)&v11[16 * v106 + 32];
        v109 = *(_QWORD *)&v11[16 * v15 + 24];
        v133 = (id *)(v105 + 8 * *(_QWORD *)&v11[16 * v15 + 16]);
        v135 = (void **)(v105 + 8 * v108);
        v110 = v105 + 8 * v109;
        v111 = v124;
        sub_10005863C(v135, v133, v110, v123, v111);
        if (v3)
        {
          v102 = v107;
          goto LABEL_99;
        }

        if (v109 < v108)
          goto LABEL_132;
        v11 = (char *)v107;
        if ((swift_isUniquelyReferenced_nonNull_native(v107) & 1) == 0)
          v11 = sub_1000742FC(v107);
        if (v106 >= *((_QWORD *)v11 + 2))
          goto LABEL_133;
        v112 = &v11[16 * v106 + 32];
        *(_QWORD *)v112 = v108;
        *((_QWORD *)v112 + 1) = v109;
        v113 = *((_QWORD *)v11 + 2);
        if (v15 > v113)
          goto LABEL_134;
        memmove(&v11[16 * v15 + 16], &v11[16 * v15 + 32], 16 * (v113 - v15));
        *((_QWORD *)v11 + 2) = v113 - 1;
        v15 = v113 - 1;
        v105 = v130;
        if (v113 <= 2)
          goto LABEL_112;
      }
    }
  }
  else
  {
    v8 = v7 >> 1;
    v9 = sub_10005D394(0, &qword_1000D1650, HMRoom_ptr);
    v10 = static Array._allocateBufferUninitialized(minimumCapacity:)(v8, v9);
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    v123 = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v136 = v10;
  }
  v12 = 0;
  v13 = *a1;
  v116 = *a1 - 8;
  v117 = *a1 + 16;
  v11 = (char *)_swiftEmptyArrayStorage;
  v14 = v5;
  v120 = v5;
  v134 = *a1;
  while (1)
  {
    v16 = v12;
    v17 = v12 + 1;
    v131 = v12;
    if (v12 + 1 < v14)
    {
      v125 = v11;
      v18 = *(void **)(v13 + 8 * v17);
      v19 = *(void **)(v13 + 8 * v12);
      v20 = v18;
      v21 = v19;
      v22 = sub_1000582DC(v20);
      v23 = sub_1000582DC(v21);

      v24 = v16 + 2;
      if (v16 + 2 < v14)
      {
        v121 = v3;
        v25 = (id *)(v117 + 8 * v16);
        while (1)
        {
          v26 = *(v25 - 1);
          v27 = *v25;
          v28 = v26;
          v29 = sub_1000582DC(v27);
          v30 = sub_1000582DC(v28);

          if (v23 < v22 == v30 >= v29)
            break;
          ++v25;
          if (v120 == ++v24)
          {
            v24 = v120;
            break;
          }
        }
        v3 = v121;
        v16 = v131;
      }
      v11 = v125;
      v13 = v134;
      if (v23 >= v22)
      {
        v14 = v120;
        v17 = v24;
      }
      else
      {
        v14 = v120;
        if (v24 < v16)
          goto LABEL_137;
        v17 = v24;
        if (v16 < v24)
        {
          v31 = (uint64_t *)(v116 + 8 * v24);
          v32 = v24;
          v33 = v16;
          v34 = (uint64_t *)(v134 + 8 * v16);
          do
          {
            if (v33 != --v32)
            {
              if (!v134)
                goto LABEL_142;
              v35 = *v34;
              *v34 = *v31;
              *v31 = v35;
            }
            ++v33;
            --v31;
            ++v34;
          }
          while (v33 < v32);
        }
      }
    }
    if (v17 < v14)
    {
      if (__OFSUB__(v17, v16))
        goto LABEL_135;
      if (v17 - v16 < v118)
      {
        if (__OFADD__(v16, v118))
          goto LABEL_138;
        if (v16 + v118 >= v14)
          v36 = v14;
        else
          v36 = v16 + v118;
        if (v36 < v16)
          goto LABEL_139;
        if (v17 != v36)
        {
          v126 = v11;
          v128 = v36;
          v122 = v3;
          v37 = v116 + 8 * v17;
          do
          {
            v38 = v17;
            v39 = *(void **)(v13 + 8 * v17);
            v40 = v16;
            v41 = v37;
            while (1)
            {
              v42 = *(void **)v41;
              v43 = v39;
              v44 = v42;
              v45 = sub_1000582DC(v43);
              v46 = sub_1000582DC(v44);

              if (v46 >= v45)
                break;
              v13 = v134;
              if (!v134)
                goto LABEL_140;
              v47 = *(void **)v41;
              v39 = *(void **)(v41 + 8);
              *(_QWORD *)v41 = v39;
              *(_QWORD *)(v41 + 8) = v47;
              v41 -= 8;
              if (v38 == ++v40)
                goto LABEL_44;
            }
            v13 = v134;
LABEL_44:
            v17 = v38 + 1;
            v37 += 8;
            v16 = v131;
          }
          while (v38 + 1 != v128);
          v17 = v128;
          v3 = v122;
          v11 = v126;
        }
      }
    }
    if (v17 < v16)
    {
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    v119 = v17;
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_100074158(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v49 = *((_QWORD *)v11 + 2);
    v48 = *((_QWORD *)v11 + 3);
    v15 = v49 + 1;
    v13 = v134;
    if (v49 >= v48 >> 1)
    {
      v101 = sub_100074158((char *)(v48 > 1), v49 + 1, 1, v11);
      v13 = v134;
      v11 = v101;
    }
    *((_QWORD *)v11 + 2) = v15;
    v50 = v11 + 32;
    v51 = &v11[16 * v49 + 32];
    *(_QWORD *)v51 = v16;
    *((_QWORD *)v51 + 1) = v119;
    if (v49)
      break;
    v15 = 1;
LABEL_15:
    v12 = v119;
    v14 = v120;
    if (v119 >= v120)
      goto LABEL_101;
  }
  while (1)
  {
    v52 = v15 - 1;
    if (v15 >= 4)
    {
      v57 = &v50[16 * v15];
      v58 = *((_QWORD *)v57 - 8);
      v59 = *((_QWORD *)v57 - 7);
      v63 = __OFSUB__(v59, v58);
      v60 = v59 - v58;
      if (v63)
        goto LABEL_119;
      v62 = *((_QWORD *)v57 - 6);
      v61 = *((_QWORD *)v57 - 5);
      v63 = __OFSUB__(v61, v62);
      v55 = v61 - v62;
      v56 = v63;
      if (v63)
        goto LABEL_120;
      v64 = v15 - 2;
      v65 = &v50[16 * v15 - 32];
      v67 = *(_QWORD *)v65;
      v66 = *((_QWORD *)v65 + 1);
      v63 = __OFSUB__(v66, v67);
      v68 = v66 - v67;
      if (v63)
        goto LABEL_122;
      v63 = __OFADD__(v55, v68);
      v69 = v55 + v68;
      if (v63)
        goto LABEL_125;
      if (v69 >= v60)
      {
        v87 = &v50[16 * v52];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v63 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v63)
          goto LABEL_129;
        v80 = v55 < v90;
        goto LABEL_88;
      }
    }
    else
    {
      if (v15 != 3)
      {
        v81 = *((_QWORD *)v11 + 4);
        v82 = *((_QWORD *)v11 + 5);
        v63 = __OFSUB__(v82, v81);
        v74 = v82 - v81;
        v75 = v63;
        goto LABEL_82;
      }
      v54 = *((_QWORD *)v11 + 4);
      v53 = *((_QWORD *)v11 + 5);
      v63 = __OFSUB__(v53, v54);
      v55 = v53 - v54;
      v56 = v63;
    }
    if ((v56 & 1) != 0)
      goto LABEL_121;
    v64 = v15 - 2;
    v70 = &v50[16 * v15 - 32];
    v72 = *(_QWORD *)v70;
    v71 = *((_QWORD *)v70 + 1);
    v73 = __OFSUB__(v71, v72);
    v74 = v71 - v72;
    v75 = v73;
    if (v73)
      goto LABEL_124;
    v76 = &v50[16 * v52];
    v78 = *(_QWORD *)v76;
    v77 = *((_QWORD *)v76 + 1);
    v63 = __OFSUB__(v77, v78);
    v79 = v77 - v78;
    if (v63)
      goto LABEL_127;
    if (__OFADD__(v74, v79))
      goto LABEL_128;
    if (v74 + v79 >= v55)
    {
      v80 = v55 < v79;
LABEL_88:
      if (v80)
        v52 = v64;
      goto LABEL_90;
    }
LABEL_82:
    if ((v75 & 1) != 0)
      goto LABEL_123;
    v83 = &v50[16 * v52];
    v85 = *(_QWORD *)v83;
    v84 = *((_QWORD *)v83 + 1);
    v63 = __OFSUB__(v84, v85);
    v86 = v84 - v85;
    if (v63)
      goto LABEL_126;
    if (v86 < v74)
      goto LABEL_15;
LABEL_90:
    v91 = v52 - 1;
    if (v52 - 1 >= v15)
    {
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
      goto LABEL_130;
    }
    if (!v13)
      goto LABEL_141;
    v92 = v50;
    v93 = &v50[16 * v91];
    v94 = *(_QWORD *)v93;
    v95 = v52;
    v96 = &v92[16 * v52];
    v97 = *((_QWORD *)v96 + 1);
    v132 = (void **)(v13 + 8 * *(_QWORD *)v93);
    v127 = v13 + 8 * v97;
    v129 = (id *)(v13 + 8 * *(_QWORD *)v96);
    v98 = v124;
    sub_10005863C(v132, v129, v127, v123, v98);
    if (v3)
      break;

    if (v97 < v94)
      goto LABEL_116;
    if (v95 > *((_QWORD *)v11 + 2))
      goto LABEL_117;
    v99 = v95;
    *(_QWORD *)v93 = v94;
    v50 = v11 + 32;
    *(_QWORD *)&v11[16 * v91 + 40] = v97;
    v100 = *((_QWORD *)v11 + 2);
    if (v99 >= v100)
      goto LABEL_118;
    v15 = v100 - 1;
    memmove(v96, v96 + 16, 16 * (v100 - 1 - v99));
    *((_QWORD *)v11 + 2) = v100 - 1;
    v13 = v134;
    if (v100 <= 2)
      goto LABEL_15;
  }
  v102 = (uint64_t)v11;
LABEL_99:
  swift_bridgeObjectRelease(v102);

  *(_QWORD *)((v136 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  specialized Array._endMutation()(v103);
  v104 = v136;

LABEL_113:
  swift_bridgeObjectRelease(v104);
}

void sub_100059298(uint64_t *a1, void *a2)
{
  uint64_t v3;
  id v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9[2];

  v3 = *a1;
  v4 = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
  *a1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v3 = sub_100076D9C(v3);
    *a1 = v3;
  }
  v6 = *(_QWORD *)(v3 + 16);
  v9[0] = v3 + 32;
  v9[1] = v6;
  v7 = v4;
  sub_100058A18(v9, v7);

  specialized ContiguousArray._endMutation()(v8);
}

uint64_t sub_100059334(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = objc_msgSend(a1, "actionSets");
  v3 = sub_10005D394(0, &qword_1000D2520, HMActionSet_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    v10 = swift_bridgeObjectRetain(v4);
    v5 = (uint64_t)sub_100073034(v10);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
  }
  v16 = v5;
  sub_1000542E4(&v16);
  if (!v1)
  {
    swift_bridgeObjectRelease(v4);
    v6 = v16;
    if (v16 < 0 || (v16 & 0x4000000000000000) != 0)
    {
      v11 = swift_bridgeObjectRetain(v16);
      v12 = _CocoaArrayWrapper.endIndex.getter(v11);
      swift_release(v6);
      if (v12)
        goto LABEL_8;
    }
    else if (*(_QWORD *)(v16 + 16))
    {
LABEL_8:
      if ((v6 & 0xC000000000000001) != 0)
      {
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
        goto LABEL_11;
      }
      if (*(_QWORD *)(v6 + 16))
      {
        v7 = *(id *)(v6 + 32);
LABEL_11:
        v8 = v7;
        swift_release(v6);
        return (uint64_t)v8;
      }
      __break(1u);
      goto LABEL_17;
    }
    swift_release(v6);
    v13 = sub_1000596B8();
    v14 = swift_allocError(&_s20PerformanceTestErrorON, v13, 0, 0);
    *(_QWORD *)v15 = 0x65536E6F69746361;
    *(_QWORD *)(v15 + 8) = 0xE900000000000074;
    *(_BYTE *)(v15 + 48) = 2;
    return swift_willThrow(v14);
  }
LABEL_17:
  result = swift_release(v16);
  __break(1u);
  return result;
}

void sub_1000594C0(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  void **v16;
  uint64_t v17;
  void (*v18)(uint64_t, void *);
  void *v19;
  void (*v20)(void *);
  uint64_t v21;

  v3 = objc_msgSend(v1, "_selectAndFinishFirstReadForTabWithIdentifier:", HFHomeAppTabIdentifierHome);
  if (v3)
  {
    v4 = v3;
    v5 = swift_allocObject(&unk_1000B88F0, 40, 7);
    *(_QWORD *)(v5 + 16) = a1;
    *(_BYTE *)(v5 + 24) = 0;
    *(_QWORD *)(v5 + 32) = v1;
    v20 = sub_100059690;
    v21 = v5;
    v16 = _NSConcreteStackBlock;
    v17 = 1107296256;
    v18 = sub_10004AAF4;
    v19 = &unk_1000B8908;
    v6 = _Block_copy(&v16);
    v7 = v21;
    v8 = a1;
    v9 = v1;
    swift_release(v7);
    v10 = objc_msgSend(v4, "addSuccessBlock:", v6);
    _Block_release(v6);

    v11 = swift_allocObject(&unk_1000B8940, 25, 7);
    *(_QWORD *)(v11 + 16) = v8;
    *(_BYTE *)(v11 + 24) = 0;
    v20 = (void (*)(void *))sub_10005E2D4;
    v21 = v11;
    v16 = _NSConcreteStackBlock;
    v17 = 1107296256;
    v18 = sub_10004AAF4;
    v19 = &unk_1000B8958;
    v12 = _Block_copy(&v16);
    v13 = v21;
    v14 = v8;
    swift_release(v13);
    v15 = objc_msgSend(v10, "addFailureBlock:", v12);
    _Block_release(v12);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100059664()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_100059690(void *a1)
{
  uint64_t v1;

  sub_10004C9C4(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1000596A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000596B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_1000596B8()
{
  unint64_t result;

  result = qword_1000D24E0;
  if (!qword_1000D24E0)
  {
    result = swift_getWitnessTable(&unk_100089FF0, &_s20PerformanceTestErrorON);
    atomic_store(result, (unint64_t *)&qword_1000D24E0);
  }
  return result;
}

void sub_100059700(void *a1)
{
  uint64_t v1;

  sub_10004CD7C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_100059710()
{
  uint64_t v0;

  sub_10004B064(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

id sub_100059730(int a1, void *a2, void *a3)
{
  uint64_t v3;

  return sub_10004B324(a1, a2, a3, *(void **)(v3 + 16), *(void (**)(id))(v3 + 24));
}

id sub_100059750(void *a1)
{
  uint64_t v1;

  return sub_10005435C(a1, *(id *)(v1 + 16), *(uint64_t (**)(void *, void *, id))(v1 + 24));
}

void sub_10005976C(uint64_t a1)
{
  uint64_t v1;

  sub_1000541CC(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_100059788(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1000597C8(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_10005D394(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

id sub_100059810()
{
  uint64_t v0;

  return objc_msgSend((id)objc_opt_self(NAFuture), "futureWithResult:", *(_QWORD *)(v0 + 16));
}

void sub_100059858(void *a1)
{
  uint64_t v1;

  sub_10004B284(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100059878()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1000598A0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

id sub_1000598D4(void *a1)
{
  uint64_t v1;

  return sub_10004AEDC(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(void **)(v1 + 32));
}

id sub_1000598F8(int a1, void *a2, uint64_t a3)
{
  return sub_100059948(a1, a2, a3);
}

uint64_t sub_10005991C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_100059948(int a1, id a2, uint64_t a3)
{
  uint64_t v3;
  void (*v6)(void);

  v6 = *(void (**)(void))(v3 + 16);
  if (v6)
    v6();
  return objc_msgSend(a2, "showSpeakersAndTVsSectionWithTitle:forHome:animated:", 0, a3, 1);
}

id sub_1000599B0(int a1, void *a2, uint64_t a3)
{
  return sub_100059A08(a1, a2, a3);
}

uint64_t sub_1000599D4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

id sub_100059A08(int a1, id a2, uint64_t a3)
{
  uint64_t v3;
  void (*v6)(void);
  uint64_t v7;

  v6 = *(void (**)(void))(v3 + 16);
  v7 = *(_QWORD *)(v3 + 32);
  if (v6)
    v6();
  return objc_msgSend(a2, "showAccessoryTypeGroup:forHome:animated:", v7, a3, 1);
}

uint64_t sub_100059A78()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100059A9C(void *a1)
{
  return sub_10004B9A0(a1);
}

uint64_t sub_100059AB4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_100059AD8(void *a1)
{
  uint64_t v1;

  return sub_10004C3C8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_100059AE4(void *a1)
{
  uint64_t v1;

  sub_10004BA7C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100059AF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100059B28(void *a1)
{
  uint64_t v1;

  return sub_10004C680(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_100059B34()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 56, 7);
}

void sub_100059B70()
{
  uint64_t v0;

  sub_10004C7B8(*(uint64_t (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_100059B80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100059BAC(int a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10004C920(a1, a2, *(id *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

id sub_100059BB4(void *a1)
{
  return sub_10004BEE8(a1);
}

uint64_t sub_100059BD0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100059C04(void *a1)
{
  uint64_t v1;

  sub_10004BF8C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_100059C14(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void **v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;

  v2 = v1;
  v4 = static os_log_type_t.default.getter(a1);
  sub_10005D394(0, (unint64_t *)&qword_1000D1760, OS_os_log_ptr);
  v5 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v4, &_mh_execute_header, v5, "PPT - Switch to home tab", 24, 2, _swiftEmptyArrayStorage);

  v6 = objc_msgSend(v2, "baseViewController");
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v2, "firstReadCompleteFuture");
    v9 = swift_allocObject(&unk_1000B99A8, 24, 7);
    *(_QWORD *)(v9 + 16) = v7;
    v37 = sub_100059FD0;
    v38 = v9;
    v33 = _NSConcreteStackBlock;
    v34 = 1107296256;
    v35 = sub_10004ACD0;
    v36 = &unk_1000B99C0;
    v10 = _Block_copy(&v33);
    v11 = v38;
    v12 = v7;
    swift_release(v11);
    v13 = objc_msgSend(v8, "flatMap:", v10);
    _Block_release(v10);

    v14 = swift_allocObject(&unk_1000B99F8, 40, 7);
    *(_QWORD *)(v14 + 16) = a1;
    *(_BYTE *)(v14 + 24) = 16;
    *(_QWORD *)(v14 + 32) = v12;
    v37 = sub_100059FD8;
    v38 = v14;
    v33 = _NSConcreteStackBlock;
    v34 = 1107296256;
    v35 = sub_1000704B0;
    v36 = &unk_1000B9A10;
    v15 = _Block_copy(&v33);
    v16 = v38;
    v17 = v12;
    v18 = a1;
    swift_release(v16);
    v19 = objc_msgSend(v13, "flatMap:", v15);
    _Block_release(v15);

    v20 = swift_allocObject(&unk_1000B9A48, 25, 7);
    *(_QWORD *)(v20 + 16) = v18;
    *(_BYTE *)(v20 + 24) = 16;
    v37 = sub_100059FE8;
    v38 = v20;
    v33 = _NSConcreteStackBlock;
    v34 = 1107296256;
    v35 = sub_10004ACD4;
    v36 = &unk_1000B9A60;
    v21 = _Block_copy(&v33);
    v22 = v38;
    v23 = v18;
    swift_release(v22);
    v24 = objc_msgSend(v19, "addSuccessBlock:", v21);
    _Block_release(v21);

    v25 = swift_allocObject(&unk_1000B9A98, 25, 7);
    *(_QWORD *)(v25 + 16) = v23;
    *(_BYTE *)(v25 + 24) = 16;
    v37 = sub_10005A004;
    v38 = v25;
    v33 = _NSConcreteStackBlock;
    v34 = 1107296256;
    v35 = sub_10004AAF4;
    v36 = &unk_1000B9AB0;
    v26 = _Block_copy(&v33);
    v27 = v38;
    v28 = v23;
    swift_release(v27);
    v29 = objc_msgSend(v24, "addFailureBlock:", v26);
    _Block_release(v26);

  }
  else
  {
    v30 = sub_1000596B8();
    v31 = swift_allocError(&_s20PerformanceTestErrorON, v30, 0, 0);
    *(_QWORD *)v32 = 1;
    *(_OWORD *)(v32 + 8) = 0u;
    *(_OWORD *)(v32 + 24) = 0u;
    *(_QWORD *)(v32 + 40) = 0;
    *(_BYTE *)(v32 + 48) = 5;
    sub_10006CBF0(0x10u, v31);
    swift_errorRelease(v31);
  }
}

id sub_100059FD0(int a1)
{
  uint64_t v1;

  return sub_10004CEA8(a1, *(id *)(v1 + 16));
}

id sub_100059FD8(uint64_t a1)
{
  uint64_t v1;

  return sub_10004CF58(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(void **)(v1 + 32));
}

void sub_100059FE8(uint64_t a1)
{
  uint64_t v1;

  sub_10004D4A0(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24));
}

void sub_10005A004(uint64_t a1)
{
  uint64_t v1;

  sub_10006CBF0(*(_BYTE *)(v1 + 24), a1);
}

uint64_t sub_10005A030(void *a1)
{
  uint64_t v1;

  return sub_10004D070(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10005A040()
{
  id *v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_10005A074()
{
  uint64_t v0;

  sub_10004D18C(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_10005A084()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10005A0A8(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_10004D314(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10005A0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10004D424(a1, a2, *(void (**)(__int128 *, uint64_t))(v2 + 16));
}

_QWORD *sub_10005A0B8(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10005A0DC(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_10005A0FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  void *v27;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_100059788(&qword_1000D1788);
    v5 = sub_10005BD38(&qword_1000D1790, &qword_1000D1788, (uint64_t)&protocol conformance descriptor for NSObject);
    v6 = Set.Iterator.init(_cocoa:)(v26, v3, v4, v5);
    v1 = v26[0];
    v24 = v26[1];
    v7 = v26[2];
    v8 = v26[3];
    v9 = v26[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v24 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v13 = (unint64_t)(v7 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v9)
    {
      v14 = (v9 - 1) & v9;
      v15 = __clz(__rbit64(v9)) | (v8 << 6);
      v16 = v8;
      goto LABEL_32;
    }
    v21 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v21 >= v13)
      goto LABEL_35;
    v22 = *(_QWORD *)(v24 + 8 * v21);
    v16 = v8 + 1;
    if (!v22)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_35;
      v22 = *(_QWORD *)(v24 + 8 * v16);
      if (!v22)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v13)
          goto LABEL_35;
        v22 = *(_QWORD *)(v24 + 8 * v16);
        if (!v22)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= v13)
            goto LABEL_35;
          v22 = *(_QWORD *)(v24 + 8 * v16);
          if (!v22)
          {
            v16 = v8 + 5;
            if (v8 + 5 >= v13)
              goto LABEL_35;
            v22 = *(_QWORD *)(v24 + 8 * v16);
            if (!v22)
            {
              v23 = v8 + 6;
              while (v13 != v23)
              {
                v22 = *(_QWORD *)(v24 + 8 * v23++);
                if (v22)
                {
                  v16 = v23 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_10005ACA4(v1);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v14 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_32:
    v20 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v20)
      goto LABEL_35;
    while (1)
    {
      HFActionSetBuilder.add(actionBuilder:)(v20);

      v8 = v16;
      v9 = v14;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v17 = __CocoaSet.Iterator.next()(v6);
      if (v17)
      {
        v18 = v17;
        v25 = v17;
        swift_unknownObjectRetain(v17);
        v19 = sub_100059788(&qword_1000D1788);
        swift_dynamicCast(&v27, &v25, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
        v20 = v27;
        swift_unknownObjectRelease(v18);
        v16 = v8;
        v14 = v9;
        if (v20)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

uint64_t sub_10005A3AC(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t j;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t i;
  uint64_t v41;
  void *v42;
  BOOL v43;
  id v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSString v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  char v75[24];
  _QWORD aBlock[5];
  uint64_t v77;
  uint64_t v78;

  v4 = type metadata accessor for UUID(0);
  v5 = __chkstk_darwin(v4);
  v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    v22 = sub_1000596B8();
    v23 = swift_allocError(&_s20PerformanceTestErrorON, v22, 0, 0);
    *(_QWORD *)v24 = 1701670760;
    *(_QWORD *)(v24 + 8) = 0xE400000000000000;
    *(_BYTE *)(v24 + 48) = 2;
    swift_willThrow(v23);
    return (uint64_t)v2;
  }
  v71 = v5;
  v72 = v1;
  v69 = v8;
  v70 = v6;
  v9 = objc_allocWithZone((Class)HRERecommendationEngine);
  v10 = a1;
  v11 = objc_msgSend(v9, "init");
  v12 = objc_msgSend(v11, "generateRecommendationsForHome:options:", v10, 113);

  v13 = swift_allocObject(&unk_1000B9DB8, 24, 7);
  *(_QWORD *)(v13 + 16) = _swiftEmptyArrayStorage;
  v14 = (uint64_t *)(v13 + 16);
  v15 = swift_allocObject(&unk_1000B9DE0, 24, 7);
  *(_QWORD *)(v15 + 16) = 0;
  v16 = swift_allocObject(&unk_1000B9E08, 32, 7);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v13;
  aBlock[4] = sub_10005E2B8;
  v77 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004E4C8;
  aBlock[3] = &unk_1000B9E20;
  v17 = _Block_copy(aBlock);
  v18 = v77;
  swift_retain(v15);
  swift_retain(v13);
  swift_release(v18);
  v2 = objc_msgSend(v12, "addCompletionBlock:", v17);
  _Block_release(v17);

  swift_beginAccess(v15 + 16, aBlock, 0, 0);
  v19 = *(_QWORD *)(v15 + 16);
  if (v19)
  {
    v20 = swift_errorRetain(v19);
    swift_willThrow(v20);

    swift_release(v13);
    v21 = v15;
LABEL_43:
    swift_release(v21);
    return (uint64_t)v2;
  }
  v73 = (void *)v15;
  v74 = v13;
  swift_beginAccess(v14, v75, 0, 0);
  v25 = *v14;
  v78 = (uint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v25 >> 62))
  {
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n(v25, 2);
    v67 = v12;
    v68 = v10;
    if (v26)
      goto LABEL_7;
LABEL_23:
    swift_bridgeObjectRelease(v25);
    v37 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_24:
    swift_bridgeObjectRelease(v25);
    if ((unint64_t)v37 >> 62)
      goto LABEL_38;
    v39 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v37);
    v2 = v73;
    for (i = v74; v39; i = v74)
    {
      v41 = 4;
      while (1)
      {
        v44 = (v37 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v41 - 4, v37)
            : *(id *)(v37 + 8 * v41);
        v45 = v44;
        v46 = v41 - 3;
        if (__OFADD__(v41 - 4, 1))
          break;
        v47 = objc_msgSend(v44, "sourceTemplate");
        if (v47)
        {
          v42 = v47;
          v48 = objc_opt_self(HREArriveHomeTemplate);
          if (swift_dynamicCastObjCClass(v42, v48))
          {
            swift_bridgeObjectRelease_n(v37, 2);

            v49 = objc_allocWithZone((Class)HFActionSetBuilder);
            v50 = v45;
            v51 = v68;
            v52 = objc_msgSend(v49, "initWithHome:", v68);
            v53 = v69;
            v54 = UUID.init()();
            UUID.uuidString.getter(v54);
            v56 = v55;
            (*(void (**)(char *, uint64_t))(v70 + 8))(v53, v71);
            v57 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v56);
            objc_msgSend(v52, "setName:", v57);

            v58 = objc_msgSend(v50, "actions");
            v59 = sub_100059788(&qword_1000D1788);
            v60 = sub_10005BD38(&qword_1000D1790, &qword_1000D1788, (uint64_t)&protocol conformance descriptor for NSObject);
            v61 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v58, v59, v60);

            v2 = v52;
            sub_10005A0FC(v61);
            swift_release(v74);
            swift_release(v73);
            swift_bridgeObjectRelease(v61);

            return (uint64_t)v2;
          }

        }
        else
        {
          v42 = v45;
        }

        ++v41;
        v43 = v46 == v39;
        v2 = v73;
        i = v74;
        if (v43)
          goto LABEL_42;
      }
      __break(1u);
LABEL_38:
      if (v37 < 0)
        v62 = v37;
      else
        v62 = v37 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v37);
      v39 = _CocoaArrayWrapper.endIndex.getter(v62);
      v2 = v73;
    }
LABEL_42:
    swift_bridgeObjectRelease_n(v37, 2);
    v63 = sub_1000596B8();
    v64 = swift_allocError(&_s20PerformanceTestErrorON, v63, 0, 0);
    *(_QWORD *)v65 = 0xD000000000000031;
    *(_QWORD *)(v65 + 8) = 0x80000001000906C0;
    *(_BYTE *)(v65 + 48) = 4;
    swift_willThrow(v64);

    swift_release(i);
    v21 = (uint64_t)v2;
    goto LABEL_43;
  }
  if (v25 < 0)
    v38 = v25;
  else
    v38 = v25 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v25, 2);
  result = _CocoaArrayWrapper.endIndex.getter(v38);
  v26 = result;
  v67 = v12;
  v68 = v10;
  if (!result)
    goto LABEL_23;
LABEL_7:
  if (v26 >= 1)
  {
    for (j = 0; j != v26; ++j)
    {
      if ((v25 & 0xC000000000000001) != 0)
        v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v25);
      else
        v29 = *(id *)(v25 + 8 * j + 32);
      v30 = v29;
      v31 = objc_opt_self(HREActionSetRecommendation);
      v32 = swift_dynamicCastObjCClass(v30, v31);
      if (v32)
      {
        v33 = v32;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
        v35 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v34 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v35 >= v34 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
        v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
        specialized Array._endMutation()(v36);
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease(v25);
    v37 = v78;
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_10005A9F4(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v2 = v1;
  v4 = swift_allocObject(&unk_1000B9C00, 24, 7);
  *(_QWORD *)(v4 + 16) = 0;
  v5 = objc_msgSend((id)objc_opt_self(HFHomeKitDispatcher), "sharedDispatcher");
  v6 = objc_msgSend(v5, "home");

  v7 = sub_10005A3AC(v6);
  *(_QWORD *)(v4 + 16) = v7;
  v8 = swift_allocObject(&unk_1000B9C28, 40, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_BYTE *)(v8 + 24) = 21;
  *(_QWORD *)(v8 + 32) = v4;
  v9 = a1;
  swift_retain(v4);
  sub_10004D500((uint64_t)sub_10005AB34, v8, v2, v9, 21, v4);
  swift_release(v4);
  return swift_release(v8);
}

void sub_10005AB34(void *a1)
{
  uint64_t v1;

  sub_10004E0F0(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_1000B9D40, (uint64_t)sub_10005ABD8, (uint64_t)&unk_1000B9D58);
}

uint64_t sub_10005AB6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_10005ABA0(void *a1)
{
  uint64_t v1;

  sub_10004D630(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_10005ABB4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10005ABD8(uint64_t a1)
{
  return sub_10005B93C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004D8F8);
}

void *sub_10005ABE4()
{
  uint64_t v0;

  return sub_10004E464(v0, (SEL *)&selRef_deleteActionSet);
}

_OWORD *sub_10005AC04(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10005AC14()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005AC38()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005AC60(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_10005ACA4(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

void sub_10005ACAC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  void *v30;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = sub_100059788(&qword_1000D1788);
    v7 = sub_10005BD38(&qword_1000D1790, &qword_1000D1788, (uint64_t)&protocol conformance descriptor for NSObject);
    v8 = Set.Iterator.init(_cocoa:)(v29, v5, v6, v7);
    v3 = v29[0];
    v27 = v29[1];
    v9 = v29[2];
    v10 = v29[3];
    v11 = v29[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v27 = a1 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(a1 + 56);
    v8 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v10 = 0;
  }
  v26 = (unint64_t)(v9 + 64) >> 6;
  if (v3 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v11)
    {
      v15 = (v11 - 1) & v11;
      v16 = __clz(__rbit64(v11)) | (v10 << 6);
      v17 = v10;
      goto LABEL_32;
    }
    v22 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v22 >= v26)
      goto LABEL_35;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    v17 = v10 + 1;
    if (!v23)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v26)
        goto LABEL_35;
      v23 = *(_QWORD *)(v27 + 8 * v17);
      if (!v23)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v26)
          goto LABEL_35;
        v23 = *(_QWORD *)(v27 + 8 * v17);
        if (!v23)
        {
          v17 = v10 + 4;
          if (v10 + 4 >= v26)
            goto LABEL_35;
          v23 = *(_QWORD *)(v27 + 8 * v17);
          if (!v23)
          {
            v17 = v10 + 5;
            if (v10 + 5 >= v26)
              goto LABEL_35;
            v23 = *(_QWORD *)(v27 + 8 * v17);
            if (!v23)
            {
              v24 = v10 + 6;
              while (v26 != v24)
              {
                v23 = *(_QWORD *)(v27 + 8 * v24++);
                if (v23)
                {
                  v17 = v24 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_10005ACA4(v3);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v15 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_32:
    v21 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    if (!v21)
      goto LABEL_35;
    while (1)
    {
      v25 = objc_msgSend(a2, "triggerActionSets");
      objc_msgSend(v25, "addAnonymousActionBuilder:", v21);

      v10 = v17;
      v11 = v15;
      if ((v3 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v18 = __CocoaSet.Iterator.next()(v8);
      if (v18)
      {
        v19 = v18;
        v28 = v18;
        swift_unknownObjectRetain(v18);
        v20 = sub_100059788(&qword_1000D1788);
        swift_dynamicCast(&v30, &v28, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
        v21 = v30;
        swift_unknownObjectRelease(v19);
        v17 = v10;
        v15 = v11;
        if (v21)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

uint64_t sub_10005AF94(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t i;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  Class isa;
  id v63;
  id v64;
  void *v65;
  uint64_t ObjectType;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  __objc2_prot *v83;
  char v84[24];
  _QWORD aBlock[5];
  uint64_t v86;
  uint64_t v87;

  v4 = type metadata accessor for Date(0);
  v5 = __chkstk_darwin(v4);
  v6 = __chkstk_darwin(v5);
  if (!a1)
  {
    v23 = sub_1000596B8();
    v24 = swift_allocError(&_s20PerformanceTestErrorON, v23, 0, 0);
    *(_QWORD *)v25 = 1701670760;
    *(_QWORD *)(v25 + 8) = 0xE400000000000000;
    *(_BYTE *)(v25 + 48) = 2;
    swift_willThrow(v24);
    return (uint64_t)v2;
  }
  v77 = v1;
  v78 = v9;
  v79 = (char *)&v73 - v7;
  v80 = v8;
  v81 = v6;
  v10 = objc_allocWithZone((Class)HRERecommendationEngine);
  v11 = a1;
  v12 = objc_msgSend(v10, "init");
  v13 = objc_msgSend(v12, "generateRecommendationsForHome:options:", v11, 114);

  v14 = swift_allocObject(&unk_1000B9DB8, 24, 7);
  *(_QWORD *)(v14 + 16) = _swiftEmptyArrayStorage;
  v15 = (uint64_t *)(v14 + 16);
  v16 = swift_allocObject(&unk_1000B9DE0, 24, 7);
  *(_QWORD *)(v16 + 16) = 0;
  v17 = swift_allocObject(&unk_1000BA010, 32, 7);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v14;
  aBlock[4] = sub_10005B9A4;
  v86 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004E4C8;
  aBlock[3] = &unk_1000BA028;
  v2 = _Block_copy(aBlock);
  v18 = v86;
  swift_retain(v16);
  swift_retain(v14);
  swift_release(v18);
  v19 = objc_msgSend(v13, "addCompletionBlock:", v2);
  _Block_release(v2);

  swift_beginAccess(v16 + 16, aBlock, 0, 0);
  v20 = *(_QWORD *)(v16 + 16);
  if (v20)
  {
    v21 = swift_errorRetain(v20);
    swift_willThrow(v21);

    v22 = v14;
LABEL_44:
    swift_release(v22);
    swift_release(v16);
    return (uint64_t)v2;
  }
  v82 = v11;
  swift_beginAccess(v15, v84, 0, 0);
  v26 = *v15;
  v87 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v26 >> 62)
  {
    if (v26 < 0)
      v39 = v26;
    else
      v39 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v26, 2);
    result = _CocoaArrayWrapper.endIndex.getter(v39);
    v27 = result;
    v75 = v14;
    v76 = v13;
    if (result)
      goto LABEL_7;
LABEL_23:
    swift_bridgeObjectRelease(v26);
    v38 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_24;
  }
  v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain_n(v26, 2);
  v75 = v14;
  v76 = v13;
  if (!v27)
    goto LABEL_23;
LABEL_7:
  v74 = v16;
  if (v27 < 1)
  {
    __break(1u);
LABEL_47:
    __break(1u);
    return result;
  }
  for (i = 0; i != v27; ++i)
  {
    if ((v26 & 0xC000000000000001) != 0)
      v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v26);
    else
      v30 = *(id *)(v26 + 8 * i + 32);
    v31 = v30;
    v32 = objc_opt_self(HRETriggerRecommendation);
    v33 = swift_dynamicCastObjCClass(v31, v32);
    if (v33)
    {
      v34 = v33;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
      v36 = *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v35 = *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v36 >= v35 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
      v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
      specialized Array._endMutation()(v37);
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease(v26);
  v38 = v87;
  v16 = v74;
LABEL_24:
  swift_bridgeObjectRelease(v26);
  v2 = v82;
  if ((unint64_t)v38 >> 62)
  {
LABEL_39:
    if (v38 < 0)
      v69 = v38;
    else
      v69 = v38 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v38);
    v40 = _CocoaArrayWrapper.endIndex.getter(v69);
    if (v40)
      goto LABEL_26;
LABEL_43:
    swift_bridgeObjectRelease_n(v38, 2);
    v70 = sub_1000596B8();
    v71 = swift_allocError(&_s20PerformanceTestErrorON, v70, 0, 0);
    *(_QWORD *)v72 = 0xD000000000000031;
    *(_QWORD *)(v72 + 8) = 0x80000001000906C0;
    *(_BYTE *)(v72 + 48) = 4;
    swift_willThrow(v71);

    v22 = v75;
    goto LABEL_44;
  }
  v40 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v38);
  if (!v40)
    goto LABEL_43;
LABEL_26:
  v41 = 4;
  while (1)
  {
    if ((v38 & 0xC000000000000001) != 0)
      v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v41 - 4, v38);
    else
      v43 = *(id *)(v38 + 8 * v41);
    v2 = v43;
    v44 = v41 - 3;
    if (__OFADD__(v41 - 4, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    v45 = v16;
    v46 = objc_msgSend(v43, "sourceTemplate");
    if (v46)
      break;
    v42 = v2;
LABEL_28:

    ++v41;
    v16 = v45;
    v2 = v82;
    if (v44 == v40)
      goto LABEL_43;
  }
  v42 = v46;
  v47 = objc_opt_self(HREAutoArriveHomeTemplate);
  if (!swift_dynamicCastObjCClass(v42, v47))
  {

    goto LABEL_28;
  }
  swift_bridgeObjectRelease_n(v38, 2);

  v48 = v2;
  v49 = objc_msgSend(v48, "actions");
  v50 = sub_100059788(&qword_1000D1788);
  v51 = sub_10005BD38(&qword_1000D1790, &qword_1000D1788, (uint64_t)&protocol conformance descriptor for NSObject);
  v74 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v49, v50, v51);

  v52 = objc_allocWithZone((Class)HUTriggerBuilderContext);
  v53 = v82;
  v54 = objc_msgSend(v52, "init");
  v55 = objc_msgSend(objc_allocWithZone((Class)HFEventTriggerBuilder), "initWithHome:context:", v53, v54);

  v56 = objc_msgSend(objc_allocWithZone((Class)HFCalendarEventBuilder), "init");
  v57 = v78;
  v58 = Date.init()();
  v59 = v79;
  Date.addingTimeInterval(_:)(v58, 3600.0);
  v60 = v81;
  v61 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
  v61(v57, v81);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v61((uint64_t)v59, v60);
  objc_msgSend(v56, "setFireDate:", isa);

  v63 = objc_msgSend(v55, "timeInterface");
  v83 = &OBJC_PROTOCOL___HFTimeEventBuilder;
  v64 = v56;
  v65 = (void *)swift_dynamicCastObjCProtocolUnconditional();
  ObjectType = swift_getObjectType();
  v67 = sub_100059788(&qword_1000D1800);
  result = swift_dynamicCastMetatype(ObjectType, v67);
  if (!result)
    goto LABEL_47;
  objc_msgSend(v63, "setEventBuilder:", v65);

  v2 = v55;
  v68 = v74;
  sub_10005ACAC(v74, v2);
  swift_release(v75);
  swift_release(v45);
  swift_bridgeObjectRelease(v68);

  return (uint64_t)v2;
}

uint64_t sub_10005B6E8(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v2 = v1;
  v4 = swift_allocObject(&unk_1000B9E58, 24, 7);
  *(_QWORD *)(v4 + 16) = 0;
  v5 = objc_msgSend((id)objc_opt_self(HFHomeKitDispatcher), "sharedDispatcher");
  v6 = objc_msgSend(v5, "home");

  v7 = sub_10005AF94(v6);
  *(_QWORD *)(v4 + 16) = v7;
  v8 = swift_allocObject(&unk_1000B9E80, 40, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_BYTE *)(v8 + 24) = 22;
  *(_QWORD *)(v8 + 32) = v4;
  v9 = a1;
  swift_retain(v4);
  sub_10004DD44((uint64_t)sub_10005B828, v8, v2, v4, v9, 22);
  swift_release(v4);
  return swift_release(v8);
}

void sub_10005B828(void *a1)
{
  uint64_t v1;

  sub_10004E0F0(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_1000B9F98, (uint64_t)sub_10005B930, (uint64_t)&unk_1000B9FB0);
}

uint64_t sub_10005B860()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 49, 7);
}

void sub_10005B894(void *a1)
{
  uint64_t v1;

  sub_10004DE70(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_BYTE *)(v1 + 48));
}

uint64_t sub_10005B8A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10005B8D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_10005B8FC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10005B930(uint64_t a1)
{
  return sub_10005B93C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004E28C);
}

uint64_t sub_10005B93C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(unsigned __int8 *)(v2 + 33), *(_QWORD *)(v2 + 40));
}

void *sub_10005B954()
{
  uint64_t v0;

  return sub_10004E464(v0, (SEL *)&selRef_deleteTrigger);
}

uint64_t sub_10005B978()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005B9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10004E53C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10005B9BC(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_10005B9F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(sub_100059788((uint64_t *)&unk_1000D1810) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 25) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(sub_100059788(&qword_1000D1808) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + v6 + 9) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);

  v9 = v0 + v3;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);

  v12 = type metadata accessor for DispatchTimeInterval(0);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v0 + v7, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0 + v7, v12);
  return swift_deallocObject(v0, v7 + v8, v2 | v6 | 7);
}

id sub_10005BB10(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_100059788((uint64_t *)&unk_1000D1810) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_100059788(&qword_1000D1808) - 8) + 80);
  return sub_100051ED4(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + v5), *(unsigned __int8 *)(v1 + v5 + 8), v1 + ((v5 + v6 + 9) & ~v6));
}

uint64_t sub_10005BBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10005BBDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_10005BBEC(uint64_t a1)
{
  uint64_t v1;

  sub_100052C04(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_10005BBF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005BC04()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_10005BC28(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

id sub_10005BC38(uint64_t a1)
{
  uint64_t v1;

  return sub_1000532E4(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(void **)(v1 + 32));
}

id sub_10005BC4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DispatchTimeInterval(0) - 8) + 80);
  return sub_100052EE8(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_10005BC8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for DispatchTimeInterval(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10005BCEC(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DispatchTimeInterval(0) - 8) + 80);
  return sub_100053040(a1, (void (*)(char *, uint64_t))(v1 + ((v3 + 16) & ~v3)));
}

id sub_10005BD28()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "finishWithNoResult");
}

uint64_t sub_10005BD38(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10005AC60(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_10005BD78(void *a1)
{
  uint64_t v1;

  sub_10005340C(a1, *(void **)(v1 + 16));
}

id sub_10005BD80(unsigned __int8 a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, __n128 a6, double a7)
{
  CGFloat v9;
  CGFloat v10;
  CGFloat v12;
  CGFloat v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  CGFloat MinY;
  CGFloat MaxY;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  void **v28;
  NSString v29;
  NSArray v30;
  void *v31;
  id v32;
  void **v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t (*v38)(void *);
  uint64_t v39;
  CGRect v40;
  CGRect v41;

  v9 = a6.n128_f64[0];
  v10 = a4.n128_f64[0];
  v12 = a5 + 5.0;
  v13 = a7 + -10.0;
  v14 = CGRect.center.getter(a4, a5 + 5.0, a6, a7 + -10.0);
  v16 = v15;
  v40.origin.x = v10;
  v40.origin.y = v12;
  v40.size.width = v9;
  v40.size.height = v13;
  MinY = CGRectGetMinY(v40);
  v41.origin.x = v10;
  v41.origin.y = v12;
  v41.size.width = v9;
  v41.size.height = v13;
  MaxY = CGRectGetMaxY(v41);
  sub_10006CD60(a1);
  v20 = v19;
  v21 = sub_100059788((uint64_t *)&unk_1000D1CD0);
  v22 = swift_allocObject(v21, 40, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100089750;
  v23 = swift_allocObject(&unk_1000BA3D0, 96, 7);
  *(double *)(v23 + 16) = v14;
  *(_QWORD *)(v23 + 24) = v16;
  *(double *)(v23 + 32) = v14;
  *(CGFloat *)(v23 + 40) = MinY;
  *(double *)(v23 + 48) = v14;
  *(CGFloat *)(v23 + 56) = MaxY;
  *(CGFloat *)(v23 + 64) = v10;
  *(CGFloat *)(v23 + 72) = v12;
  *(CGFloat *)(v23 + 80) = v9;
  *(CGFloat *)(v23 + 88) = v13;
  v24 = objc_allocWithZone((Class)RPTBlockInteraction);
  v38 = sub_10005C8B4;
  v39 = v23;
  v34 = _NSConcreteStackBlock;
  v35 = 1107296256;
  v36 = sub_10004ACD4;
  v37 = &unk_1000BA3E8;
  v25 = _Block_copy(&v34);
  v26 = objc_msgSend(v24, "initWithActions:", v25);
  _Block_release(v25);
  v27 = swift_release(v39);
  *(_QWORD *)(v22 + 32) = v26;
  v34 = (void **)v22;
  specialized Array._endMutation()(v27);
  v28 = v34;
  sub_10005C8E8(a2, a3);
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  sub_100059788(&qword_1000D18E0);
  v30.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v28);
  if (a2)
  {
    v38 = (uint64_t (*)(void *))a2;
    v39 = a3;
    v34 = _NSConcreteStackBlock;
    v35 = 1107296256;
    v36 = sub_100070484;
    v37 = &unk_1000BA410;
    v31 = _Block_copy(&v34);
    swift_release(v39);
  }
  else
  {
    v31 = 0;
  }
  v32 = objc_msgSend(objc_allocWithZone((Class)RPTInteractionTestParameters), "initWithTestName:interactions:completionHandler:", v29, v30.super.isa, v31);
  _Block_release(v31);

  return v32;
}

uint64_t sub_10005BFFC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[12] = a1;
  v2[13] = v1;
  v3 = type metadata accessor for Device.Control.Kind.Primitive(0);
  v2[14] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[15] = v4;
  v2[16] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v2[17] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v2[18] = v6;
  v2[19] = v7;
  return swift_task_switch(sub_10005C090, v6, v7);
}

uint64_t sub_10005C090()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD *v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v1 = (void *)objc_opt_self(RPTTestRunner);
  *(_QWORD *)(v0 + 160) = v1;
  if (objc_msgSend(v1, "isRecapAvailable"))
  {
    v2 = objc_msgSend(*(id *)(v0 + 104), "appNavigator");
    *(_QWORD *)(v0 + 168) = v2;
    if (v2)
    {
      v3 = (_QWORD *)swift_task_alloc(dword_1000D1864);
      *(_QWORD *)(v0 + 176) = v3;
      *v3 = v0;
      v3[1] = sub_10005C1C0;
      return sub_10004EF94();
    }
    swift_release(*(_QWORD *)(v0 + 136));
    v9 = sub_1000596B8();
    v6 = swift_allocError(&_s20PerformanceTestErrorON, v9, 0, 0);
    v8 = 1;
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 136));
    v5 = sub_1000596B8();
    v6 = swift_allocError(&_s20PerformanceTestErrorON, v5, 0, 0);
    v8 = 3;
  }
  *(_QWORD *)v7 = v8;
  *(_QWORD *)(v7 + 40) = 0;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 8) = 0u;
  *(_BYTE *)(v7 + 48) = 5;
  swift_willThrow(v6);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005C1C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 176);
  v3[23] = a1;
  v3[24] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_10005C758;
  else
    v5 = sub_10005C228;
  return swift_task_switch(v5, v3[18], v3[19]);
}

uint64_t sub_10005C228()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  _QWORD *v6;
  void *v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;

  v1 = sub_10004F598(*(_QWORD *)(v0 + 96), *(void **)(v0 + 184), (uint64_t)sub_10004F2D0, 0);
  *(_QWORD *)(v0 + 200) = v1;
  if (v1)
  {
    v2 = (void *)v1;
    v3 = *(void **)(v0 + 168);
    sub_100059788(&qword_1000D1868);
    v4 = v2;
    static AccessoryControlViewController.test_prepareForPerformanceTesting()();
    v5 = objc_msgSend(v3, "showAccessory:secondaryDestination:", v4, 0);
    *(_QWORD *)(v0 + 208) = v5;
    v6 = (_QWORD *)swift_task_alloc(async function pointer to static NAFutureHelper.continuation<A>(_:)[1]);
    *(_QWORD *)(v0 + 216) = v6;
    *v6 = v0;
    v6[1] = sub_10005C3DC;
    return static NAFutureHelper.continuation<A>(_:)(v5, (char *)&type metadata for Swift.AnyObject + 8);
  }
  else
  {
    v8 = *(void **)(v0 + 184);
    v9 = *(void **)(v0 + 168);
    swift_release(*(_QWORD *)(v0 + 136));
    v10 = sub_1000596B8();
    swift_allocError(&_s20PerformanceTestErrorON, v10, 0, 0);
    v12 = v11;
    _StringGuts.grow(_:)(69);
    v13._countAndFlagsBits = 0xD000000000000043;
    v13._object = (void *)0x8000000100090820;
    String.append(_:)(v13);
    v14._object = (void *)0x8000000100090140;
    v14._countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v14);
    *(_QWORD *)v12 = 0;
    *(_QWORD *)(v12 + 8) = 0xE000000000000000;
    *(_BYTE *)(v12 + 48) = 4;
    swift_willThrow(v15);

    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10005C3DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  void *v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 216);
  v5 = *(_QWORD **)v2;
  v5[28] = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_10005C79C, v5[18], v5[19]);
  v7 = (void *)v5[26];
  swift_unknownObjectRelease(a1);

  v8 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep(nanoseconds:)[1]);
  v5[29] = v8;
  *v8 = v5;
  v8[1] = sub_10005C48C;
  return static Task<>.sleep(nanoseconds:)(1000000000);
}

uint64_t sub_10005C48C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 232);
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10005C800;
  else
    v4 = sub_10005C4EC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 152));
}

uint64_t sub_10005C4EC()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  __n128 v9;
  void *v10;
  void *v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t (*v21)(void);
  void *v22;
  uint64_t v23;
  id v24;

  v1 = *(void **)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 136));
  v2 = objc_msgSend(v1, "presentedViewController");
  if (!v2)
    goto LABEL_6;
  v3 = v2;
  v4 = type metadata accessor for DataModelAccessoryControlViewController(0);
  if (!swift_dynamicCastClass(v3, v4))
  {

LABEL_6:
    v10 = *(void **)(v0 + 200);
    v11 = *(void **)(v0 + 184);
    v12 = *(void **)(v0 + 168);
    v17 = sub_1000596B8();
    swift_allocError(&_s20PerformanceTestErrorON, v17, 0, 0);
    v19 = v18;
    v20 = objc_msgSend(v11, "presentedViewController");
    *(_QWORD *)v19 = 0xD00000000000001ELL;
    *(_QWORD *)(v19 + 8) = 0x8000000100090870;
    *(_QWORD *)(v19 + 16) = v20;
    *(_BYTE *)(v19 + 48) = 0;
    swift_willThrow(v20);
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, enum case for Device.Control.Kind.Primitive.incremental(_:), v7);
  AccessoryControlViewController.test_firstControlFrame(for:)(v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  sub_10005C860(v0 + 56, v0 + 16, (uint64_t *)&unk_1000D1870);
  v10 = *(void **)(v0 + 200);
  v11 = *(void **)(v0 + 184);
  v12 = *(void **)(v0 + 168);
  if ((*(_BYTE *)(v0 + 48) & 1) == 0)
  {
    v22 = *(void **)(v0 + 160);
    v23 = *(_QWORD *)(v0 + 128);
    v8.n128_u64[0] = *(_QWORD *)(v0 + 16);
    v9.n128_u64[0] = *(_QWORD *)(v0 + 32);
    v24 = sub_10005BD80(0x1Du, (uint64_t)sub_10004F910, 0, v8, *(double *)(v0 + 24), v9, *(double *)(v0 + 40));
    objc_msgSend(v22, "runTestWithParameters:", v24);
    swift_unknownObjectRelease(v24);

    swift_task_dealloc(v23);
    v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
  v13 = sub_1000596B8();
  swift_allocError(&_s20PerformanceTestErrorON, v13, 0, 0);
  v15 = v14;
  v16 = objc_msgSend(v11, "presentedViewController");
  *(_QWORD *)v15 = 0xD000000000000036;
  *(_QWORD *)(v15 + 8) = 0x8000000100090890;
  *(_QWORD *)(v15 + 16) = v16;
  *(_BYTE *)(v15 + 48) = 0;
  swift_willThrow(v16);

LABEL_7:
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_10005C758()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 168);
  swift_release(*(_QWORD *)(v0 + 136));

  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005C79C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 200);
  v2 = *(void **)(v0 + 208);
  v3 = *(void **)(v0 + 184);
  v4 = *(void **)(v0 + 168);
  swift_release(*(_QWORD *)(v0 + 136));

  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005C800()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 200);
  v2 = *(void **)(v0 + 184);
  v3 = *(void **)(v0 + 168);
  swift_release(*(_QWORD *)(v0 + 136));

  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005C860(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100059788(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005C8A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_10005C8B4(void *a1)
{
  double *v1;

  return sub_1000506D0(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11]);
}

uint64_t sub_10005C8E8(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_10005C8F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_100059788((uint64_t *)&unk_1000D1810) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_10005C99C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(sub_100059788((uint64_t *)&unk_1000D1810) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_10004FE20(a1, v1 + v4, *(uint64_t (**)(uint64_t))v5, *(_QWORD *)(v5 + 8));
}

uint64_t sub_10005C9F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005CA04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = type metadata accessor for UUID(0);
  v5 = sub_100054BAC(&qword_1000D18F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, v3, v4, v5) & 1;
}

uint64_t sub_10005CA78(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[12] = a1;
  v2[13] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[14] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[15] = v4;
  v2[16] = v5;
  return swift_task_switch(sub_10005CAE4, v4, v5);
}

uint64_t sub_10005CAE4()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD *v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v1 = (void *)objc_opt_self(RPTTestRunner);
  *(_QWORD *)(v0 + 136) = v1;
  if (objc_msgSend(v1, "isRecapAvailable"))
  {
    v2 = objc_msgSend(*(id *)(v0 + 104), "appNavigator");
    *(_QWORD *)(v0 + 144) = v2;
    if (v2)
    {
      v3 = (_QWORD *)swift_task_alloc(dword_1000D1864);
      *(_QWORD *)(v0 + 152) = v3;
      *v3 = v0;
      v3[1] = sub_10005CC0C;
      return sub_10004EF94();
    }
    swift_release(*(_QWORD *)(v0 + 112));
    v9 = sub_1000596B8();
    v6 = swift_allocError(&_s20PerformanceTestErrorON, v9, 0, 0);
    v8 = 1;
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 112));
    v5 = sub_1000596B8();
    v6 = swift_allocError(&_s20PerformanceTestErrorON, v5, 0, 0);
    v8 = 3;
  }
  *(_QWORD *)v7 = v8;
  *(_QWORD *)(v7 + 40) = 0;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 8) = 0u;
  *(_BYTE *)(v7 + 48) = 5;
  swift_willThrow(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005CC0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 152);
  v3[20] = a1;
  v3[21] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_10005D17C;
  else
    v5 = sub_10005CC74;
  return swift_task_switch(v5, v3[15], v3[16]);
}

uint64_t sub_10005CC74()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  _QWORD *v8;
  void *v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = swift_task_alloc(32);
  *(_QWORD *)(v3 + 16) = sub_10004F93C;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = (void *)sub_10004F598(v2, v1, (uint64_t)sub_10005D3CC, v3);
  *(_QWORD *)(v0 + 176) = v4;
  swift_task_dealloc(v3);
  if (v4)
  {
    v5 = *(void **)(v0 + 144);
    sub_100059788(&qword_1000D1868);
    v6 = v4;
    static AccessoryControlViewController.test_prepareForPerformanceTesting()();
    v7 = objc_msgSend(v5, "showAccessory:secondaryDestination:", v6, 0);
    *(_QWORD *)(v0 + 184) = v7;
    v8 = (_QWORD *)swift_task_alloc(async function pointer to static NAFutureHelper.continuation<A>(_:)[1]);
    *(_QWORD *)(v0 + 192) = v8;
    *v8 = v0;
    v8[1] = sub_10005CE48;
    return static NAFutureHelper.continuation<A>(_:)(v7, (char *)&type metadata for Swift.AnyObject + 8);
  }
  else
  {
    v10 = *(void **)(v0 + 160);
    v11 = *(void **)(v0 + 144);
    swift_release(*(_QWORD *)(v0 + 112));
    v12 = sub_1000596B8();
    swift_allocError(&_s20PerformanceTestErrorON, v12, 0, 0);
    v14 = v13;
    _StringGuts.grow(_:)(64);
    v15._countAndFlagsBits = 0xD00000000000003ELL;
    v15._object = (void *)0x80000001000909D0;
    String.append(_:)(v15);
    v16._object = (void *)0x8000000100090160;
    v16._countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v16);
    *(_QWORD *)v14 = 0;
    *(_QWORD *)(v14 + 8) = 0xE000000000000000;
    *(_BYTE *)(v14 + 48) = 4;
    swift_willThrow(v17);

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10005CE48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  void *v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 192);
  v5 = *(_QWORD **)v2;
  v5[25] = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_10005D1B8, v5[15], v5[16]);
  v7 = (void *)v5[23];
  swift_unknownObjectRelease(a1);

  v8 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep(nanoseconds:)[1]);
  v5[26] = v8;
  *v8 = v5;
  v8[1] = sub_10005CEF8;
  return static Task<>.sleep(nanoseconds:)(1000000000);
}

uint64_t sub_10005CEF8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10005D214;
  else
    v4 = sub_10005CF58;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128));
}

uint64_t sub_10005CF58()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  __n128 v5;
  __n128 v6;
  void *v7;
  void *v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t (*v18)(void);
  void *v19;
  id v20;

  v1 = *(void **)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 112));
  v2 = objc_msgSend(v1, "presentedViewController");
  if (!v2)
    goto LABEL_6;
  v3 = v2;
  v4 = type metadata accessor for DataModelAccessoryControlViewController(0);
  if (!swift_dynamicCastClass(v3, v4))
  {

LABEL_6:
    v7 = *(void **)(v0 + 176);
    v8 = *(void **)(v0 + 160);
    v9 = *(void **)(v0 + 144);
    v14 = sub_1000596B8();
    swift_allocError(&_s20PerformanceTestErrorON, v14, 0, 0);
    v16 = v15;
    v17 = objc_msgSend(v8, "presentedViewController");
    *(_QWORD *)v16 = 0xD00000000000001ELL;
    *(_QWORD *)(v16 + 8) = 0x8000000100090870;
    *(_QWORD *)(v16 + 16) = v17;
    *(_BYTE *)(v16 + 48) = 0;
    swift_willThrow(v17);
    goto LABEL_7;
  }
  AccessoryControlViewController.test_firstControlFrame(_:)(sub_10004F93C, 0);
  sub_10005C860(v0 + 56, v0 + 16, (uint64_t *)&unk_1000D1870);
  v7 = *(void **)(v0 + 176);
  v8 = *(void **)(v0 + 160);
  v9 = *(void **)(v0 + 144);
  if ((*(_BYTE *)(v0 + 48) & 1) == 0)
  {
    v19 = *(void **)(v0 + 136);
    v5.n128_u64[0] = *(_QWORD *)(v0 + 16);
    v6.n128_u64[0] = *(_QWORD *)(v0 + 32);
    v20 = sub_10005BD80(0x1Eu, (uint64_t)sub_10005E13C, 0, v5, *(double *)(v0 + 24), v6, *(double *)(v0 + 40));
    objc_msgSend(v19, "runTestWithParameters:", v20);
    swift_unknownObjectRelease(v20);

    v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  v10 = sub_1000596B8();
  swift_allocError(&_s20PerformanceTestErrorON, v10, 0, 0);
  v12 = v11;
  v13 = objc_msgSend(v8, "presentedViewController");
  *(_QWORD *)v12 = 0xD000000000000036;
  *(_QWORD *)(v12 + 8) = 0x8000000100090890;
  *(_QWORD *)(v12 + 16) = v13;
  *(_BYTE *)(v12 + 48) = 0;
  swift_willThrow(v13);

LABEL_7:
  v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_10005D17C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);
  swift_release(*(_QWORD *)(v0 + 112));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005D1B8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 176);
  v2 = *(void **)(v0 + 184);
  v3 = *(void **)(v0 + 160);
  v4 = *(void **)(v0 + 144);
  swift_release(*(_QWORD *)(v0 + 112));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005D214()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 176);
  v2 = *(void **)(v0 + 160);
  v3 = *(void **)(v0 + 144);
  swift_release(*(_QWORD *)(v0 + 112));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005D26C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 72);
  v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  v12 = v10 * v4;
  v13 = a3 + v12;
  v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10005D388(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_10005D394(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10005D3CC(uint64_t a1)
{
  uint64_t v1;

  return sub_10004FD78(a1, *(uint64_t (**)(unint64_t))(v1 + 16));
}

uint64_t sub_10005D3D4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100059788(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10005D410(unsigned __int8 a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  Class isa;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  Class v38;
  void *v39;
  Class v40;
  void *v41;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  void **aBlock;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, void *);
  void *v47;
  void *v48;
  uint64_t v49;

  v10 = sub_100059788((uint64_t *)&unk_1000D1810);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v42 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v42 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v42 - v20;
  v22 = sub_10006CD60(a1);
  v24 = v23;
  if (v22 == 0xD00000000000001ELL && v23 == 0x80000001000901C0)
  {
    swift_bridgeObjectRelease(0x80000001000901C0);
    goto LABEL_5;
  }
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, 0xD00000000000001ELL, 0x80000001000901C0, 0);
  swift_bridgeObjectRelease(v24);
  if ((v25 & 1) != 0)
  {
LABEL_5:
    sub_10005DB48(a4, (uint64_t)v21, (uint64_t *)&unk_1000D1810);
    v26 = type metadata accessor for UUID(0);
    v27 = *(_QWORD *)(v26 - 8);
    isa = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v21, 1, v26) != 1)
    {
      isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v26);
    }
    v29 = swift_allocObject(&unk_1000BA510, 24, 7);
    *(_QWORD *)(v29 + 16) = a5;
    v30 = swift_allocObject(&unk_1000BA538, 32, 7);
    *(_QWORD *)(v30 + 16) = sub_10005D910;
    *(_QWORD *)(v30 + 24) = v29;
    v48 = sub_10005E2E8;
    v49 = v30;
    aBlock = _NSConcreteStackBlock;
    v45 = 1107296256;
    v46 = sub_100050694;
    v47 = &unk_1000BA550;
    v31 = _Block_copy(&aBlock);
    v32 = v49;
    swift_bridgeObjectRetain(a5);
    swift_retain(v30);
    swift_release(v32);
    v33 = objc_msgSend(a3, "findAccessoryWithItemManager:accessoryID:testBlock:", a2, isa, v31);

    _Block_release(v31);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v30, "", 104, 781, 105, 1);
    swift_release(v29);
    result = swift_release(v30);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return (uint64_t)v33;
    goto LABEL_19;
  }
  sub_10005DB48(a4, (uint64_t)v19, (uint64_t *)&unk_1000D1810);
  v36 = type metadata accessor for UUID(0);
  v37 = *(_QWORD *)(v36 - 8);
  v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  v38 = 0;
  if (v43(v19, 1, v36) != 1)
  {
    v38 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v36);
  }
  v48 = sub_100050688;
  v49 = 0;
  aBlock = _NSConcreteStackBlock;
  v45 = 1107296256;
  v46 = sub_100050694;
  v47 = &unk_1000BA4B0;
  v39 = _Block_copy(&aBlock);
  swift_release(v49);
  v33 = objc_msgSend(a3, "findAccessoryWithItemManager:accessoryID:testBlock:", a2, v38, v39);

  _Block_release(v39);
  result = swift_isEscapingClosureAtFileLocation(0, "", 104, 788, 114, 1);
  if ((result & 1) != 0)
    goto LABEL_20;
  sub_10005DB48(a4, (uint64_t)v16, (uint64_t *)&unk_1000D1810);
  if (v33)
  {
    sub_10005D3D4((uint64_t)v16, (uint64_t *)&unk_1000D1810);
    return (uint64_t)v33;
  }
  sub_10005DB48((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_1000D1810);
  if (v43(v13, 1, v36) == 1)
  {
    v40 = 0;
  }
  else
  {
    v40 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v36);
  }
  v48 = sub_10005068C;
  v49 = 0;
  aBlock = _NSConcreteStackBlock;
  v45 = 1107296256;
  v46 = sub_100050694;
  v47 = &unk_1000BA4D8;
  v41 = _Block_copy(&aBlock);
  swift_release(v49);
  v33 = objc_msgSend(a3, "findAccessoryWithItemManager:accessoryID:testBlock:", a2, v40, v41);

  _Block_release(v41);
  sub_10005D3D4((uint64_t)v16, (uint64_t *)&unk_1000D1810);
  result = swift_isEscapingClosureAtFileLocation(0, "", 104, 791, 39, 1);
  if ((result & 1) == 0)
    return (uint64_t)v33;
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_10005D910(void *a1)
{
  uint64_t v1;

  return sub_100051C98(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10005D918()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005D92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005DA88(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, _QWORD))sub_10005397C);
}

unint64_t sub_10005D94C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000B8308, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

id sub_10005D994(int a1)
{
  uint64_t v1;

  return sub_100054174(a1, *(id *)(v1 + 16));
}

uint64_t sub_10005D9B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_100059788((uint64_t *)&unk_1000D1810) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 9;

  return swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_10005DA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005DA88(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, _QWORD))sub_100053F48);
}

uint64_t sub_10005DA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v9 = *(_QWORD *)(sub_100059788((uint64_t *)&unk_1000D1810) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a4(a1, a2, a3, *(_QWORD *)(v4 + 16), v4 + v10, *(_QWORD *)v11, *(unsigned __int8 *)(v11 + 8));
}

uint64_t sub_10005DB1C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10005DB48(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100059788(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void type metadata accessor for HFMediaAccessoryItemType(uint64_t a1)
{
  sub_10005DE80(a1, &qword_1000D1960, (uint64_t)&unk_1000BA8A8);
}

__n128 sub_10005DBA0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_10005DE80(a1, &qword_1000D1968, (uint64_t)&unk_1000BA920);
}

uint64_t _s20PerformanceTestErrorOwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

__n128 sub_10005DBF4(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_10005DC00(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10005DC20(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_10005DE80(a1, &qword_1000D1970, (uint64_t)&unk_1000BA9A0);
}

_BYTE *_s25AccessoryControlsTestTypeOwCP(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s25AccessoryControlsTestTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s25AccessoryControlsTestTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10005DD48 + 4 * byte_100089769[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10005DD7C + 4 * byte_100089764[v4]))();
}

uint64_t sub_10005DD7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005DD84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10005DD8CLL);
  return result;
}

uint64_t sub_10005DD98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10005DDA0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10005DDA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005DDAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005DDB8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_10005DDC4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s25AccessoryControlsTestTypeOMa()
{
  return &_s25AccessoryControlsTestTypeON;
}

unint64_t sub_10005DDE0()
{
  unint64_t result;

  result = qword_1000D1978;
  if (!qword_1000D1978)
  {
    result = swift_getWitnessTable(&unk_100089A04, &_s25AccessoryControlsTestTypeON);
    atomic_store(result, (unint64_t *)&qword_1000D1978);
  }
  return result;
}

uint64_t sub_10005DE24(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10005DE44(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_10005DE80(a1, (unint64_t *)&unk_1000D1980, (uint64_t)&unk_1000BAAB0);
}

void sub_10005DE80(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

id sub_10005DEC8(int a1, void *a2, void *a3)
{
  return sub_100059730(a1, a2, a3);
}

void *sub_10005E2EC(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *result;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  result = &_swiftEmptyArrayStorage;
  v17 = (unint64_t)&_swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v8 = *(_QWORD *)(type metadata accessor for SidebarTabElementBuilder(0) - 8);
    v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain(a3);
    do
    {
      v12 = a1(&v16, v9);
      if (v3)
      {
        swift_bridgeObjectRelease(a3);
        return (void *)swift_bridgeObjectRelease(v17);
      }
      v13 = v16;
      if (v16)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v15 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v14 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v15 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
        specialized Array._endMutation()(v11);
      }
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(a3);
    return (void *)v17;
  }
  return result;
}

uint64_t sub_10005E424()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10006AB04(v0, qword_1000D1C30);
  sub_100067F28(v0, (uint64_t)qword_1000D1C30);
  return Logger.init(subsystem:category:)(0x6C7070612E6D6F63, 0xEE00656D6F482E65, 0xD000000000000019, 0x80000001000912E0);
}

uint64_t sub_10005E4A4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 80) = v1;
  *(_BYTE *)(v2 + 144) = a1;
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 88) = v3;
  *(_QWORD *)(v2 + 96) = static MainActor.shared.getter();
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 104) = v4;
  *(_QWORD *)(v2 + 112) = v5;
  return swift_task_switch(sub_10005E518, v4, v5);
}

uint64_t sub_10005E518()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_BYTE *)(v0 + 144);
  v3 = static MainActor.shared.getter();
  *(_QWORD *)(v0 + 120) = v3;
  v4 = swift_allocObject(&unk_1000BAC10, 24, 7);
  *(_QWORD *)(v0 + 128) = v4;
  swift_unknownObjectWeakInit(v4 + 16, v1);
  v5 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 136) = v5;
  *(_QWORD *)(v5 + 16) = v4;
  *(_BYTE *)(v5 + 24) = v2;
  if (v3)
  {
    ObjectType = swift_getObjectType();
    v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v9 = v8;
  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  return swift_task_switch(sub_10005E5CC, v7, v9);
}

uint64_t sub_10005E5CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[17];
  v0[2] = v0;
  v0[3] = sub_10005E620;
  v2 = swift_continuation_init(v0 + 2, 0);
  sub_10005E6B8(v2, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_10005E620()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 136);
  v3 = *(_QWORD *)(*v0 + 120);
  swift_release(*(_QWORD *)(*v0 + 128));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10005E688, *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
}

uint64_t sub_10005E688()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 96));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10005E6B8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[5];
  uint64_t v11;
  _BYTE v12[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = swift_allocObject(&unk_1000BAC38, 24, 7);
    *(_QWORD *)(v8 + 16) = a1;
    aBlock[4] = sub_10006AAC8;
    v11 = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070484;
    aBlock[3] = &unk_1000BAC50;
    v9 = _Block_copy(aBlock);
    swift_release(v11);
    objc_msgSend(v7, "dismissViewControllerAnimated:completion:", a3 & 1, v9);
    _Block_release(v9);

  }
}

uint64_t static AdaptiveTabBarController.isAdaptiveTabBarEnabled.getter()
{
  char v0;
  char v1;
  _QWORD v3[3];
  ValueMetadata *v4;
  unint64_t v5;

  v4 = &type metadata for UIKitFeatures;
  v5 = sub_10005E8A8();
  v0 = isFeatureEnabled(_:)(v3);
  sub_10005A0DC(v3);
  if ((v0 & 1) != 0)
  {
    v4 = &type metadata for HomeAppFeatures;
    v5 = sub_10005E8EC();
    LOBYTE(v3[0]) = 5;
    v1 = isFeatureEnabled(_:)(v3);
    sub_10005A0DC(v3);
  }
  else
  {
    v1 = 0;
  }
  return v1 & 1;
}

unint64_t sub_10005E8A8()
{
  unint64_t result;

  result = qword_1000D1C48;
  if (!qword_1000D1C48)
  {
    result = swift_getWitnessTable(&unk_100089F34, &type metadata for UIKitFeatures);
    atomic_store(result, (unint64_t *)&qword_1000D1C48);
  }
  return result;
}

unint64_t sub_10005E8EC()
{
  unint64_t result;

  result = qword_1000D1C50;
  if (!qword_1000D1C50)
  {
    result = swift_getWitnessTable(&unk_100089F04, &type metadata for HomeAppFeatures);
    atomic_store(result, (unint64_t *)&qword_1000D1C50);
  }
  return result;
}

id AdaptiveTabBarController.baseController.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController;
  v2 = *(void **)(v0 + OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)HOBaseController), "initWithRootController:", v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id _s7HomeApp24AdaptiveTabBarControllerC18dashboardNavigatorSo011HUDashboardH0_pSgvg_0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  char *v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___navigator;
  v2 = *(void **)&v0[OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___navigator];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___navigator];
  }
  else
  {
    v4 = AdaptiveTabBarController.baseController.getter();
    v5 = (void *)objc_opt_self(HOAppNavigator);
    v6 = v0;
    v7 = objc_msgSend(v5, "navigatorWithRootViewController:baseController:", v6, v4);

    v8 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_10005EAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  os_log_t v45;
  NSObject *v46;
  uint64_t v47;
  _QWORD *v48;
  void *v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  uint64_t v59;
  NSObject *v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  NSObject *v71;
  _QWORD *v72;
  os_log_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  NSObject *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  void *v98;
  id v99;
  id v100;
  void *v101;
  id v102;
  id v103;
  uint64_t v104;
  void *v105;
  id v106;
  uint64_t v107;
  os_log_t v108;
  _QWORD *v109;
  void *v110;
  id v111;
  NSObject *v112;
  char *v113;
  uint64_t v114;
  NSObject *v115;
  uint64_t v116;
  uint64_t v117[2];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v107 - v8;
  v10 = objc_msgSend((id)objc_opt_self(HFStateRestorationSettings), "sharedInstance");
  v11 = objc_msgSend(v10, "selectedHomeAppTabIdentifier");

  v12 = HFHomeAppTabIdentifierHome;
  if (!v11)
    v11 = HFHomeAppTabIdentifierHome;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v15 = v14;
  v115 = v12;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  if (v13 == v16 && v15 == v17)
  {

    swift_bridgeObjectRelease_n(v15, 2);
  }
  else
  {
    v19 = v17;
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);

    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v19);
    if ((v20 & 1) == 0)
      return;
  }
  if ((*(_BYTE *)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_hideRooms) & 1) == 0)
  {
    v21 = *(void **)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext);
    if (v21)
    {
      v22 = v21;
      v23 = (id)DashboardContext.room.getter();

      if (v23)
      {
        v24 = *(void **)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_roomsElements);
        if (v24)
        {
          v113 = v24;
          v25 = objc_msgSend(v113, "_children");
          v26 = sub_10005D394(0, (unint64_t *)&qword_1000D2138, _UITab_ptr);
          v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

          v28 = v23;
          v29 = sub_10006914C(v27, v28);
          v30 = v27;
          v31 = v29;
          swift_bridgeObjectRelease(v30);

          if (v31)
          {
            v32 = objc_opt_self(_UITabElement);
            v33 = swift_dynamicCastObjCClass(v31, v32);
            if (v33)
            {
              v115 = v33;
              if (qword_1000D14D0 != -1)
                swift_once(&qword_1000D14D0, sub_10005E424);
              v34 = sub_100067F28(v3, (uint64_t)qword_1000D1C30);
              (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v34, v3);
              v35 = v28;
              v36 = Logger.logObject.getter();
              v37 = static os_log_type_t.default.getter();
              v38 = v37;
              v112 = v36;
              if (os_log_type_enabled(v36, v37))
              {
                v39 = ObjectType;
                v40 = swift_slowAlloc(32, -1);
                v108 = (os_log_t)swift_slowAlloc(8, -1);
                v109 = (_QWORD *)swift_slowAlloc(64, -1);
                v117[0] = (uint64_t)v109;
                *(_DWORD *)v40 = 136315650;
                v110 = v31;
                v41 = sub_1000655E0(v39);
                v43 = v42;
                v116 = sub_100068064(v41, v42, v117);
                v111 = v35;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117, v40 + 4, v40 + 12);
                swift_bridgeObjectRelease(v43);
                *(_WORD *)(v40 + 12) = 2080;
                v116 = sub_100068064(0xD000000000000012, 0x8000000100090F90, v117);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117, v40 + 14, v40 + 22);
                *(_WORD *)(v40 + 22) = 2112;
                LODWORD(v107) = v38;
                v116 = (uint64_t)v111;
                v44 = v111;
                v31 = v110;
                v35 = v111;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117, v40 + 24, v40 + 32);
                v45 = v108;
                v108->isa = (Class)v23;

                v46 = v112;
                _os_log_impl((void *)&_mh_execute_header, v112, (os_log_type_t)v107, "<%s: %s> Room Selected: %@", (uint8_t *)v40, 0x20u);
                v47 = sub_100059788(&qword_1000D1658);
                swift_arrayDestroy(v45, 1, v47);
                swift_slowDealloc(v45, -1, -1);
                v48 = v109;
                swift_arrayDestroy(v109, 2, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v48, -1, -1);
                swift_slowDealloc(v40, -1, -1);

              }
              else
              {

              }
              (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
              v97 = v113;
              objc_msgSend(v113, "_setSelectedElement:", v115);
              v98 = *(void **)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_homeElements);
              if (v98)
              {
                v99 = v97;
                v100 = v98;
                objc_msgSend(v100, "_setSelectedElement:", v99);

              }
              else
              {

              }
              return;
            }

          }
          v23 = v113;
        }

      }
    }
  }
  if ((*(_BYTE *)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_hideCategories) & 1) != 0
    || (v49 = *(void **)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext)) == 0
    || (v50 = v49,
        v51 = (void *)dispatch thunk of DashboardContext.accessoryTypeGroup.getter(),
        v50,
        !v51))
  {
LABEL_38:
    v76 = (char *)OBJC_IVAR___HOAdaptiveTabBarController_homeElements;
    v77 = *(NSObject **)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_homeElements);
    if (!v77)
    {
LABEL_75:

      return;
    }
    v78 = -[NSObject _children](v77, "_children");
    v79 = sub_10005D394(0, (unint64_t *)&qword_1000D2138, _UITab_ptr);
    v80 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v78, v79);

    v114 = v1;
    if ((unint64_t)v80 >> 62)
    {
LABEL_68:
      if (v80 < 0)
        v104 = v80;
      else
        v104 = v80 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v80);
      v81 = _CocoaArrayWrapper.endIndex.getter(v104);
      if (v81)
      {
LABEL_41:
        v113 = v76;
        v82 = 4;
        while (1)
        {
          v76 = (char *)(v82 - 4);
          if ((v80 & 0xC000000000000001) != 0)
            v83 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v82 - 4, v80);
          else
            v83 = *(id *)(v80 + 8 * v82);
          v84 = v83;
          v85 = v82 - 3;
          if (__OFADD__(v76, 1))
          {
            __break(1u);
            goto LABEL_68;
          }
          v86 = objc_msgSend(v83, "_identifier");
          v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(v86);
          v89 = v88;

          v90 = static String._unconditionallyBridgeFromObjectiveC(_:)(v115);
          if (v87 == v90 && v89 == v91)
          {
            swift_bridgeObjectRelease_n(v80, 2);
            goto LABEL_55;
          }
          v93 = v91;
          v94 = _stringCompareWithSmolCheck(_:_:expecting:)(v87, v89, v90, v91, 0);
          swift_bridgeObjectRelease(v89);
          swift_bridgeObjectRelease(v93);
          if ((v94 & 1) != 0)
            break;

          ++v82;
          if (v85 == v81)
          {
            swift_bridgeObjectRelease_n(v80, 2);
            v77 = 0;
            v76 = v113;
            v95 = v114;
            goto LABEL_73;
          }
        }
        v89 = v80;
LABEL_55:
        swift_bridgeObjectRelease_n(v89, 2);
        v96 = objc_opt_self(_UITabElement);
        v77 = swift_dynamicCastObjCClass(v84, v96);
        v76 = v113;
        v95 = v114;
        if (!v77)
        {

          v77 = 0;
        }
        goto LABEL_73;
      }
    }
    else
    {
      v81 = *(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v80);
      if (v81)
        goto LABEL_41;
    }
    swift_bridgeObjectRelease_n(v80, 2);
    v77 = 0;
    v95 = v114;
LABEL_73:
    v105 = *(void **)&v76[v95];
    if (v105)
    {
      v115 = v77;
      v106 = v105;
      objc_msgSend(v106, "_setSelectedElement:", v115);

      v77 = v115;
    }
    goto LABEL_75;
  }
  v52 = *(void **)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_categoriesElements);
  if (!v52)
  {
    v53 = v51;
LABEL_37:

    goto LABEL_38;
  }
  v53 = v52;
  v54 = objc_msgSend(v53, "_children");
  v55 = sub_10005D394(0, (unint64_t *)&qword_1000D2138, _UITab_ptr);
  v56 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, v55);

  v57 = v51;
  v58 = (char *)sub_10006914C(v56, v57);
  swift_bridgeObjectRelease(v56);

  v113 = v58;
  if (!v58)
  {
LABEL_36:

    goto LABEL_37;
  }
  v59 = objc_opt_self(_UITabElement);
  v60 = swift_dynamicCastObjCClass(v113, v59);
  if (!v60)
  {

    goto LABEL_36;
  }
  v112 = v60;
  if (qword_1000D14D0 != -1)
    swift_once(&qword_1000D14D0, sub_10005E424);
  v61 = sub_100067F28(v3, (uint64_t)qword_1000D1C30);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v61, v3);
  v115 = v57;
  v62 = Logger.logObject.getter();
  v63 = static os_log_type_t.default.getter();
  v64 = v63;
  if (os_log_type_enabled(v62, v63))
  {
    v65 = swift_slowAlloc(32, -1);
    LODWORD(v110) = v64;
    v66 = ObjectType;
    v67 = v65;
    v109 = (_QWORD *)swift_slowAlloc(8, -1);
    v111 = (id)swift_slowAlloc(64, -1);
    v117[0] = (uint64_t)v111;
    *(_DWORD *)v67 = 136315650;
    v108 = v62;
    v68 = sub_1000655E0(v66);
    v70 = v69;
    v116 = sub_100068064(v68, v69, v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117, v67 + 4, v67 + 12);
    swift_bridgeObjectRelease(v70);
    *(_WORD *)(v67 + 12) = 2080;
    v116 = sub_100068064(0xD000000000000012, 0x8000000100090F90, v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117, v67 + 14, v67 + 22);
    *(_WORD *)(v67 + 22) = 2112;
    v107 = v67 + 32;
    v116 = (uint64_t)v115;
    v71 = v115;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117, v67 + 24, v107);
    v72 = v109;
    *v109 = v51;

    v73 = v108;
    _os_log_impl((void *)&_mh_execute_header, v108, (os_log_type_t)v110, "<%s: %s> Category Selected: %@", (uint8_t *)v67, 0x20u);
    v74 = sub_100059788(&qword_1000D1658);
    swift_arrayDestroy(v72, 1, v74);
    swift_slowDealloc(v72, -1, -1);
    v75 = v111;
    swift_arrayDestroy(v111, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v75, -1, -1);
    swift_slowDealloc(v67, -1, -1);
  }
  else
  {

    v73 = v115;
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  objc_msgSend(v53, "_setSelectedElement:", v112);
  v101 = *(void **)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_homeElements);
  if (v101)
  {
    v102 = v53;
    v103 = v101;
    objc_msgSend(v103, "_setSelectedElement:", v102);

  }
  else
  {

  }
}

void sub_10005F5B4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  char v7;
  id v8;

  v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext);
  *(_QWORD *)(v2 + OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext) = a1;
  v8 = a1;
  if (!a1)
  {
    if (!v4)
    {
LABEL_7:
      v5 = v4;
      goto LABEL_8;
    }
LABEL_6:
    sub_10005EAB4();
    goto LABEL_7;
  }
  if (!v4)
    goto LABEL_6;
  type metadata accessor for DashboardContext(0);
  v5 = v4;
  v6 = v8;
  v7 = static NSObject.== infix(_:_:)();

  if ((v7 & 1) == 0)
    goto LABEL_6;
LABEL_8:

}

uint64_t property wrapper backing initializer of AdaptiveTabBarController.viewIsVisible(char a1)
{
  char v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for Bool);
}

uint64_t sub_10005F68C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100089AB0);
  v2 = swift_getKeyPath(&unk_100089AD8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

id AdaptiveTabBarController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

NSObject *AdaptiveTabBarController.init()()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_signpost_type_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint8_t *v26;
  os_signpost_id_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  objc_class *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  _QWORD *v48;
  id v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  objc_class *ObjectType;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  id v59;
  _QWORD v60[4];
  objc_super v61;

  ObjectType = (objc_class *)swift_getObjectType();
  v1 = type metadata accessor for Logger(0);
  v56 = *(_QWORD *)(v1 - 8);
  v57 = v1;
  ((void (*)(void))__chkstk_darwin)();
  v58 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for OSSignpostID(0);
  v54 = *(_QWORD *)(v3 - 8);
  v4 = ((uint64_t (*)(void))__chkstk_darwin)();
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v52 - v7;
  v9 = sub_100059788(&qword_1000D1C60);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___navigator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HOAdaptiveTabBarController_roomsElements] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HOAdaptiveTabBarController_categoriesElements] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HOAdaptiveTabBarController_homeElements] = 0;
  v0[OBJC_IVAR___HOAdaptiveTabBarController_scrollToTop] = 0;
  v13 = &v0[OBJC_IVAR___HOAdaptiveTabBarController__viewIsVisible];
  LOBYTE(v59) = 0;
  v14 = v0;
  Published.init(initialValue:)(&v59, &type metadata for Bool);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  *(_QWORD *)&v14[OBJC_IVAR___HOAdaptiveTabBarController_controllers] = &_swiftEmptyDictionarySingleton;
  v15 = OBJC_IVAR___HOAdaptiveTabBarController_initialLoadSignPost;
  *(_QWORD *)&v14[OBJC_IVAR___HOAdaptiveTabBarController_initialLoadSignPost] = 0;
  v16 = OBJC_IVAR___HOAdaptiveTabBarController_localeAvailability;
  v17 = objc_msgSend((id)objc_opt_self(HFStoreLocaleAvailability), "getAvailabilityDictionary");
  v18 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v17, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  *(_QWORD *)&v14[v16] = v18;
  v14[OBJC_IVAR___HOAdaptiveTabBarController_hideCategories] = 0;
  v14[OBJC_IVAR___HOAdaptiveTabBarController_hideRooms] = 0;
  if (qword_1000D14D8 != -1)
    swift_once(&qword_1000D14D8, sub_100067E84);
  v19 = type metadata accessor for OSSignposter(0);
  sub_100067F28(v19, (uint64_t)qword_1000D36A0);
  v20 = static OSSignpostID.exclusive.getter();
  v21 = OSSignposter.logHandle.getter(v20);
  v22 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v53 = v15;
    v23 = v3;
    v24 = v54;
    v25 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
    v25(v6, v8, v23);
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    v27 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v21, v22, v27, "AdaptiveTabBarInitialLoad", "", v26, 2u);
    swift_slowDealloc(v26, -1, -1);

    v28 = v24;
    v3 = v23;
    v15 = v53;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
  }
  else
  {

    v28 = v54;
    v25 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  }
  v29 = v56;
  v25(v6, v8, v3);
  v30 = type metadata accessor for OSSignpostIntervalState(0);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v31 = OSSignpostIntervalState.init(id:isOpen:)(v6, 1);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v3);
  v32 = *(_QWORD *)&v14[v15];
  *(_QWORD *)&v14[v15] = v31;

  swift_release(v32);
  v33 = ObjectType;
  v61.receiver = v14;
  v61.super_class = ObjectType;
  v34 = objc_msgSendSuper2(&v61, "initWithNibName:bundle:", 0, 0);
  type metadata accessor for DashboardPresentationManager(0);
  v35 = v34;
  v36 = (void *)static DashboardPresentationManager.shared.getter();
  v60[2] = v33;
  v60[3] = sub_100054BAC((unint64_t *)&unk_1000D1CC0, type metadata accessor for AdaptiveTabBarController, (uint64_t)&protocol conformance descriptor for AdaptiveTabBarController);
  v59 = v35;
  v37 = v35;
  dispatch thunk of DashboardPresentationManager.delegate.setter(&v59);

  objc_msgSend(v37, "setDelegate:", v37);
  v38 = (void *)objc_opt_self(HFHomeKitDispatcher);
  v39 = objc_msgSend(v38, "sharedDispatcher");
  objc_msgSend(v39, "addHomeObserver:", v37);

  v40 = objc_msgSend(v38, "sharedDispatcher");
  objc_msgSend(v40, "addUserObserver:", v37);

  v41 = objc_msgSend(v38, "sharedDispatcher");
  objc_msgSend(v41, "addResidentDeviceObserver:", v37);

  if (qword_1000D14D0 != -1)
    swift_once(&qword_1000D14D0, sub_10005E424);
  v42 = v57;
  v43 = sub_100067F28(v57, (uint64_t)qword_1000D1C30);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v58, v43, v42);
  v44 = v37;
  v45 = Logger.logObject.getter();
  v46 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc(12, -1);
    v48 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v47 = 138412290;
    v49 = _s7HomeApp24AdaptiveTabBarControllerC18dashboardNavigatorSo011HUDashboardH0_pSgvg_0();
    v59 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, v60, v47 + 4, v47 + 12);
    *v48 = v49;

    _os_log_impl((void *)&_mh_execute_header, v45, v46, "navigator create %@", v47, 0xCu);
    v50 = sub_100059788(&qword_1000D1658);
    swift_arrayDestroy(v48, 1, v50);
    swift_slowDealloc(v48, -1, -1);
    swift_slowDealloc(v47, -1, -1);
  }
  else
  {

    v45 = v44;
  }

  (*(void (**)(char *, uint64_t))(v29 + 8))(v58, v42);
  return v44;
}

uint64_t sub_10005FD7C(void *a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t ObjectType;
  char v26;

  v24 = a1;
  ObjectType = swift_getObjectType();
  v2 = sub_100059788(&qword_1000D1C60);
  v3 = *(_QWORD *)(v2 - 8);
  v18 = v2;
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController;
  *(_QWORD *)&v1[OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController] = 0;
  v7 = OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___navigator;
  *(_QWORD *)&v1[OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___navigator] = 0;
  v20 = OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext;
  *(_QWORD *)&v1[OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext] = 0;
  v21 = OBJC_IVAR___HOAdaptiveTabBarController_roomsElements;
  *(_QWORD *)&v1[OBJC_IVAR___HOAdaptiveTabBarController_roomsElements] = 0;
  v22 = OBJC_IVAR___HOAdaptiveTabBarController_categoriesElements;
  *(_QWORD *)&v1[OBJC_IVAR___HOAdaptiveTabBarController_categoriesElements] = 0;
  v23 = OBJC_IVAR___HOAdaptiveTabBarController_homeElements;
  *(_QWORD *)&v1[OBJC_IVAR___HOAdaptiveTabBarController_homeElements] = 0;
  v1[OBJC_IVAR___HOAdaptiveTabBarController_scrollToTop] = 0;
  v8 = &v1[OBJC_IVAR___HOAdaptiveTabBarController__viewIsVisible];
  v19 = &v1[OBJC_IVAR___HOAdaptiveTabBarController__viewIsVisible];
  v26 = 0;
  v9 = v1;
  Published.init(initialValue:)(&v26, &type metadata for Bool);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
  v10 = OBJC_IVAR___HOAdaptiveTabBarController_controllers;
  *(_QWORD *)((char *)v9 + OBJC_IVAR___HOAdaptiveTabBarController_controllers) = &_swiftEmptyDictionarySingleton;
  v11 = OBJC_IVAR___HOAdaptiveTabBarController_initialLoadSignPost;
  *(_QWORD *)((char *)v9 + OBJC_IVAR___HOAdaptiveTabBarController_initialLoadSignPost) = 0;
  v12 = OBJC_IVAR___HOAdaptiveTabBarController_localeAvailability;
  v13 = objc_msgSend((id)objc_opt_self(HFStoreLocaleAvailability), "getAvailabilityDictionary");
  v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  *(_QWORD *)((char *)v9 + v12) = v14;
  *((_BYTE *)v9 + OBJC_IVAR___HOAdaptiveTabBarController_hideCategories) = 0;
  *((_BYTE *)v9 + OBJC_IVAR___HOAdaptiveTabBarController_hideRooms) = 0;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v19, v18);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10));
  swift_release(*(_QWORD *)((char *)v9 + v11));
  v15 = *(_QWORD *)((char *)v9 + v12);

  swift_bridgeObjectRelease(v15);
  swift_deallocPartialClassInstance(v9, ObjectType, *(unsigned int *)((swift_isaMask & *v9) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v9) + 0x34));
  return 0;
}

id AdaptiveTabBarController.__deallocating_deinit()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  uint64_t v3;
  objc_super v5;
  char v6[24];

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v2 = &v0[OBJC_IVAR___HOAdaptiveTabBarController_controllers];
  swift_beginAccess(&v0[OBJC_IVAR___HOAdaptiveTabBarController_controllers], v6, 1, 0);
  v3 = *(_QWORD *)v2;
  *(_QWORD *)v2 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v3);
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, "dealloc");
}

Swift::Void __swiftcall AdaptiveTabBarController.viewDidLoad()()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  unsigned int v17;
  id v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  NSObject **v25;
  NSObject *v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  NSObject *v33;
  Class isa;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  NSObject **v40;
  id v41;
  unsigned int v42;
  id v43;
  NSObject *v44;
  NSObject *v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  char *v50;
  uint64_t v51;
  NSObject *v52;
  objc_super v53;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v48 - v8;
  v53.receiver = v1;
  v53.super_class = ObjectType;
  objc_msgSendSuper2(&v53, "viewDidLoad");
  v10 = String._bridgeToObjectiveC()();
  v11 = (id)HFLocalizedString();

  if (!v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v13 = v12;
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
  }
  objc_msgSend(v1, "setTitle:", v11);

  v14 = objc_msgSend(v1, "_uip_sidebar");
  objc_msgSend(v14, "_setEditable:", 1);

  v15 = (void *)objc_opt_self(HFHomeKitDispatcher);
  v16 = objc_msgSend(v15, "sharedDispatcher");
  v17 = objc_msgSend(v16, "hasLoadedHomes");

  if (v17
    && (v18 = objc_msgSend(v15, "sharedDispatcher"),
        v19 = objc_msgSend(v18, "home"),
        v19,
        v18,
        v19))
  {
    if (qword_1000D14D0 != -1)
      swift_once(&qword_1000D14D0, sub_10005E424);
    v20 = sub_100067F28(v3, (uint64_t)qword_1000D1C30);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v20, v3);
    v21 = v1;
    v50 = v7;
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v25 = (NSObject **)swift_slowAlloc(8, -1);
      v51 = v4;
      v52 = v21;
      *(_DWORD *)v24 = 138412290;
      v26 = v21;
      v4 = v51;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v24 + 4, v24 + 12);
      *v25 = v21;

      _os_log_impl((void *)&_mh_execute_header, v22, v23, "%@ viewDidLoad", v24, 0xCu);
      v27 = sub_100059788(&qword_1000D1658);
      swift_arrayDestroy(v25, 1, v27);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }
    else
    {

      v22 = v21;
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v50, v3);
    sub_100060800();
  }
  else
  {
    v28 = AdaptiveTabBarController.baseController.getter();
    v29 = objc_msgSend(v28, "loadLoadingViewController");

    v30 = sub_100059788((uint64_t *)&unk_1000D1CD0);
    v31 = swift_allocObject(v30, 40, 7);
    *(_OWORD *)(v31 + 16) = xmmword_100089750;
    *(_QWORD *)(v31 + 32) = v29;
    v52 = v31;
    specialized Array._endMutation()(v31);
    v32 = v52;
    sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
    v33 = v29;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v32);
    objc_msgSend(v1, "setViewControllers:", isa);

    if (qword_1000D14D0 != -1)
      swift_once(&qword_1000D14D0, sub_10005E424);
    v35 = sub_100067F28(v3, (uint64_t)qword_1000D1C30);
    v51 = v4;
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v35, v3);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      v49 = v33;
      v50 = (char *)v3;
      v39 = swift_slowAlloc(18, -1);
      v40 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v39 = 67109378;
      v41 = objc_msgSend(v15, "sharedDispatcher");
      v42 = objc_msgSend(v41, "hasLoadedHomes");

      LODWORD(v52) = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, (char *)&v52 + 4, v39 + 4, v39 + 8);
      *(_WORD *)(v39 + 8) = 2112;
      v43 = objc_msgSend(v15, "sharedDispatcher");
      v44 = objc_msgSend(v43, "home");

      if (v44)
        v52 = v44;
      else
        v52 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v39 + 10, v39 + 18);
      v46 = v49;
      *v40 = v44;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Showing loading screen and hide sidebar, hasLoadedHomes:%{BOOL}d, hasHome: %@", (uint8_t *)v39, 0x12u);
      v47 = sub_100059788(&qword_1000D1658);
      swift_arrayDestroy(v40, 1, v47);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
      v45 = v46;
      v3 = (uint64_t)v50;
    }
    else
    {
      v45 = v37;
      v37 = v33;
    }

    (*(void (**)(char *, uint64_t))(v51 + 8))(v9, v3);
  }
}

void sub_100060800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t updated;
  uint64_t v12;
  uint64_t v13;
  void (**v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  unsigned __int8 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  Class isa;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_signpost_type_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint8_t *v48;
  os_signpost_id_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, _QWORD, uint64_t);
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  NSObject *v67;
  char *v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  const char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint8_t *v80;
  os_signpost_id_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  Class v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  char *v97;
  uint64_t v98;
  os_signpost_type_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  os_signpost_type_t v103;
  const char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint8_t *v110;
  os_signpost_id_t v111;
  void (*v112)(char *, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  void *v117;
  uint64_t (*v118)(char *, unint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  void *v121;
  id v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  unint64_t v140;
  char v141;
  void *v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v149;
  void (*v150)(char *, uint64_t);
  uint64_t v151;
  void (*v152)(char *, char *, uint64_t);
  uint64_t v153;
  id v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  void (**v167)(_QWORD, _QWORD, _QWORD, _QWORD);
  char *v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(char *, uint64_t, uint64_t, uint64_t);
  char *v172;
  _BYTE v173[40];

  v0 = sub_100059788(&qword_1000D2140);
  __chkstk_darwin(v0);
  v160 = (char *)&v148 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for SidebarTabElementBuilder(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v172 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v161 = (char *)&v148 - v6;
  v7 = type metadata accessor for OSSignpostError(0);
  v156 = *(_QWORD *)(v7 - 8);
  v157 = v7;
  v8 = __chkstk_darwin(v7);
  v162 = (char *)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v155 = (char *)&v148 - v10;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v12 = *(_QWORD *)(updated - 8);
  __chkstk_darwin(updated);
  v14 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v169 = type metadata accessor for StateSnapshot(0);
  v167 = *(void (***)(_QWORD, _QWORD, _QWORD, _QWORD))(v169 - 8);
  __chkstk_darwin(v169);
  v165 = (char *)&v148 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = type metadata accessor for OSSignpostID(0);
  v164 = *(_QWORD *)(v166 - 8);
  v16 = __chkstk_darwin(v166);
  v159 = (char *)&v148 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v158 = (char *)&v148 - v19;
  v20 = __chkstk_darwin(v18);
  v163 = (char *)&v148 - v21;
  __chkstk_darwin(v20);
  v23 = (char *)&v148 - v22;
  v24 = sub_100059788(&qword_1000D2170);
  __chkstk_darwin(v24);
  v26 = (char *)&v148 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (void *)objc_opt_self(HFHomeKitDispatcher);
  v28 = objc_msgSend(v27, "sharedDispatcher");
  v171 = (void (*)(char *, uint64_t, uint64_t, uint64_t))objc_msgSend(v28, "home");

  if (v171)
  {
    v29 = objc_msgSend(v27, "sharedDispatcher");
    v30 = objc_msgSend(v29, "homeManager");

    if (v30)
    {
      v31 = objc_msgSend((id)objc_opt_self(HFUtilities), "isAnIPhone");
      v154 = v30;
      v170 = v3;
      if ((v31 & 1) != 0)
      {
        ((void (**)(char *, uint64_t, uint64_t, uint64_t))v167)[7](v26, 1, 1, v169);
        v32 = static SidebarTabElementBuilder.createBaseLevelTabs(with:)(v171);
        __chkstk_darwin(v32);
        v33 = v168;
        *(&v148 - 4) = (void (*)(char *, uint64_t, uint64_t, uint64_t))v168;
        *(&v148 - 3) = (void (*)(char *, uint64_t, uint64_t, uint64_t))v26;
        *(&v148 - 2) = v171;
        v34 = (uint64_t)sub_10005E2EC((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_10006AB64, (uint64_t)(&v148 - 6), v32);
        swift_bridgeObjectRelease(v32);
        sub_10005D3D4((uint64_t)v26, &qword_1000D2170);
        if ((unint64_t)v34 >> 62)
        {
          if (v34 < 0)
            v144 = v34;
          else
            v144 = v34 & 0xFFFFFFFFFFFFFF8;
          v145 = sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
          swift_bridgeObjectRetain(v34);
          v36 = _bridgeCocoaArray<A>(_:)(v144, v145);
          swift_bridgeObjectRelease(v34);
        }
        else
        {
          v35 = swift_bridgeObjectRetain(v34);
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v35);
          sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
          v36 = v34;
        }
        v37 = v172;
        v38 = v162;
        swift_bridgeObjectRelease(v34);
        sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v36);
        objc_msgSend(v33, "setViewControllers:animated:", isa, 0);

      }
      else
      {
        if (qword_1000D14D8 != -1)
          swift_once(&qword_1000D14D8, sub_100067E84);
        v40 = type metadata accessor for OSSignposter(0);
        v41 = sub_100067F28(v40, (uint64_t)qword_1000D36A0);
        v42 = static OSSignpostID.exclusive.getter();
        v149 = v41;
        v43 = OSSignposter.logHandle.getter(v42);
        v44 = static os_signpost_type_t.begin.getter();
        v45 = OS_os_log.signpostsEnabled.getter();
        v151 = v2;
        if ((v45 & 1) != 0)
        {
          v152 = *(void (**)(char *, char *, uint64_t))(v164 + 16);
          v46 = v163;
          v47 = v166;
          v152(v163, v23, v166);
          v48 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v48 = 0;
          v49 = OSSignpostID.rawValue.getter();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v43, v44, v49, "AdaptiveTabBarBuildSnapshot", "", v48, 2u);
          v50 = v48;
          v2 = v151;
          swift_slowDealloc(v50, -1, -1);

          v51 = v164;
          v52 = v47;
          v53 = v46;
          (*(void (**)(char *, uint64_t))(v164 + 8))(v46, v52);
          v54 = v152;
        }
        else
        {

          v53 = v163;
          v51 = v164;
          v54 = *(void (**)(char *, char *, uint64_t))(v164 + 16);
          v52 = v166;
        }
        v152 = v54;
        v54(v53, v23, v52);
        v55 = type metadata accessor for OSSignpostIntervalState(0);
        swift_allocObject(v55, *(unsigned int *)(v55 + 48), *(unsigned __int16 *)(v55 + 52));
        v153 = OSSignpostIntervalState.init(id:isOpen:)(v53, 1);
        v150 = *(void (**)(char *, uint64_t))(v51 + 8);
        v150(v23, v52);
        *v14 = v171;
        (*(void (**)(void (**)(char *, uint64_t, uint64_t, uint64_t), _QWORD, uint64_t))(v12 + 104))(v14, enum case for StateSnapshot.UpdateType.all(_:), updated);
        v56 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v167[7];
        v56(v26, 1, 1, v169);
        v57 = sub_100059788(&qword_1000D2188);
        v58 = type metadata accessor for StateSnapshot.Coverage(0);
        v59 = *(_QWORD *)(v58 - 8);
        v60 = *(unsigned __int8 *)(v59 + 80);
        v61 = (v60 + 32) & ~v60;
        v62 = swift_allocObject(v57, v61 + *(_QWORD *)(v59 + 72), v60 | 7);
        *(_OWORD *)(v62 + 16) = xmmword_100089740;
        v63 = *(void (**)(uint64_t, _QWORD, uint64_t))(v59 + 104);
        v64 = v153;
        v63(v62 + v61, enum case for StateSnapshot.Coverage.everythingElse(_:), v58);
        v65 = v171;
        v66 = StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v14, v154, v65, v26, v62);
        v67 = OSSignposter.logHandle.getter(v66);
        v68 = v158;
        v69 = OSSignpostIntervalState.signpostID.getter();
        v70 = static os_signpost_type_t.end.getter(v69);
        if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
        {
          LODWORD(v149) = v70;
          v71 = swift_retain(v64);
          v72 = v155;
          checkForErrorAndConsumeState(state:)(v71);
          swift_release(v64);
          v74 = v156;
          v73 = v157;
          v75 = (*(uint64_t (**)(char *, uint64_t))(v156 + 88))(v72, v157);
          v148 = v56;
          if (v75 == enum case for OSSignpostError.doubleEnd(_:))
          {
            v76 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v73);
            v76 = "";
          }
          v3 = v170;
          v77 = v163;
          v78 = v158;
          v79 = v166;
          v152(v163, v158, v166);
          v80 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v80 = 0;
          v81 = OSSignpostID.rawValue.getter();
          v82 = v79;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v67, (os_signpost_type_t)v149, v81, "AdaptiveTabBarBuildSnapshot", v76, v80, 2u);
          swift_slowDealloc(v80, -1, -1);

          v83 = v79;
          v84 = v150;
          v150(v78, v83);
          v2 = v151;
          v56 = v148;
          v84(v77, v82);
        }
        else
        {

          v3 = v170;
          v150(v68, v166);
        }
        v85 = v169;
        ((void (*)(char *, char *, uint64_t))v167[2])(v26, v165, v169);
        v56(v26, 0, 1, v85);
        v86 = static SidebarTabElementBuilder.createBaseLevelTabs(with:)(v65);
        __chkstk_darwin(v86);
        v33 = v168;
        *(&v148 - 4) = (void (*)(char *, uint64_t, uint64_t, uint64_t))v168;
        *(&v148 - 3) = (void (*)(char *, uint64_t, uint64_t, uint64_t))v26;
        *(&v148 - 2) = v65;
        v87 = (uint64_t)sub_10005E2EC((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_10006AB64, (uint64_t)(&v148 - 6), v86);
        swift_bridgeObjectRelease(v86);
        sub_10005D3D4((uint64_t)v26, &qword_1000D2170);
        v37 = v172;
        if ((unint64_t)v87 >> 62)
        {
          if (v87 < 0)
            v146 = v87;
          else
            v146 = v87 & 0xFFFFFFFFFFFFFF8;
          v147 = sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
          swift_bridgeObjectRetain(v87);
          v89 = _bridgeCocoaArray<A>(_:)(v146, v147);
          swift_bridgeObjectRelease(v87);
        }
        else
        {
          v88 = swift_bridgeObjectRetain(v87);
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v88);
          sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
          v89 = v87;
        }
        v38 = v162;
        v90 = v153;
        swift_bridgeObjectRelease(v87);
        sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
        v91 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v89);
        objc_msgSend(v33, "setViewControllers:animated:", v91, 0);
        swift_release(v90);

        ((void (*)(char *, uint64_t))v167[1])(v165, v169);
      }
      v92 = *(_QWORD *)&v33[OBJC_IVAR___HOAdaptiveTabBarController_initialLoadSignPost];
      if (v92)
      {
        v93 = qword_1000D14D8;
        swift_retain(*(_QWORD *)&v33[OBJC_IVAR___HOAdaptiveTabBarController_initialLoadSignPost]);
        if (v93 != -1)
          swift_once(&qword_1000D14D8, sub_100067E84);
        v94 = type metadata accessor for OSSignposter(0);
        v95 = sub_100067F28(v94, (uint64_t)qword_1000D36A0);
        v96 = OSSignposter.logHandle.getter(v95);
        v97 = v159;
        v98 = OSSignpostIntervalState.signpostID.getter();
        v99 = static os_signpost_type_t.end.getter(v98);
        if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
        {
          v100 = swift_retain(v92);
          checkForErrorAndConsumeState(state:)(v100);
          swift_release(v92);
          v102 = v156;
          v101 = v157;
          if ((*(unsigned int (**)(char *, uint64_t))(v156 + 88))(v38, v157) == enum case for OSSignpostError.doubleEnd(_:))
          {
            v103 = v99;
            v104 = "[Error] Interval already ended";
          }
          else
          {
            v105 = v38;
            v103 = v99;
            (*(void (**)(char *, uint64_t))(v102 + 8))(v105, v101);
            v104 = "";
          }
          v169 = (uint64_t)v104;
          v107 = v163;
          v106 = v164;
          v108 = v97;
          v109 = v166;
          (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v163, v108, v166);
          v110 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v110 = 0;
          v111 = OSSignpostID.rawValue.getter();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v96, v103, v111, "AdaptiveTabBarInitialLoad", (const char *)v169, v110, 2u);
          swift_slowDealloc(v110, -1, -1);

          v112 = *(void (**)(char *, uint64_t))(v106 + 8);
          v112(v159, v109);
          swift_release(v92);
          v112(v107, v109);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v164 + 8))(v97, v166);
          swift_release(v92);
        }
        v33 = v168;
      }
      v113 = static SidebarTabElementBuilder.createBaseLevelTabs(with:)(v171);
      v114 = v113;
      v115 = *(_QWORD *)(v113 + 16);
      if (v115)
      {
        v116 = v113 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
        v117 = (void *)objc_opt_self(HFStateRestorationSettings);
        v166 = v114;
        v167 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))HFHomeAppTabIdentifierHome;
        v169 = *(_QWORD *)(v3 + 72);
        v118 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v3 + 16);
        swift_bridgeObjectRetain(v114);
        while (1)
        {
          v119 = v2;
          v120 = v118(v37, v116, v2);
          v121 = (void *)SidebarTabElementBuilder.homeAppTabIdentifier.getter(v120);
          v122 = objc_msgSend(v117, "sharedInstance");
          v123 = objc_msgSend(v122, "selectedHomeAppTabIdentifier");

          if (!v123)
            v123 = v167;
          v124 = static String._unconditionallyBridgeFromObjectiveC(_:)(v121);
          v126 = v125;
          v127 = static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
          if (v124 == v127 && v126 == v128)
            break;
          v130 = v128;
          v131 = _stringCompareWithSmolCheck(_:_:expecting:)(v124, v126, v127, v128, 0);

          swift_bridgeObjectRelease(v126);
          swift_bridgeObjectRelease(v130);
          if ((v131 & 1) != 0)
            goto LABEL_46;
          v37 = v172;
          v2 = v119;
          (*(void (**)(char *, uint64_t))(v170 + 8))(v172, v119);
          v116 += v169;
          if (!--v115)
          {
            v114 = v166;
            swift_bridgeObjectRelease(v166);
            v132 = 1;
            v3 = v170;
            v33 = v168;
            goto LABEL_44;
          }
        }

        swift_bridgeObjectRelease_n(v126, 2);
LABEL_46:
        v114 = v166;
        swift_bridgeObjectRelease(v166);
        v133 = (uint64_t)v160;
        v2 = v119;
        v3 = v170;
        (*(void (**)(char *, char *, uint64_t))(v170 + 32))(v160, v172, v2);
        v132 = 0;
        v33 = v168;
      }
      else
      {
        v132 = 1;
LABEL_44:
        v133 = (uint64_t)v160;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v133, v132, 1, v2);
      swift_bridgeObjectRelease(v114);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v133, 1, v2) == 1)
      {

        sub_10005D3D4(v133, &qword_1000D2140);
      }
      else
      {
        v134 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 32))(v161, v133, v2);
        v135 = SidebarTabElementBuilder.id.getter(v134);
        v137 = v136;
        v138 = &v33[OBJC_IVAR___HOAdaptiveTabBarController_controllers];
        swift_beginAccess(&v33[OBJC_IVAR___HOAdaptiveTabBarController_controllers], v173, 32, 0);
        v139 = *(_QWORD *)v138;
        if (*(_QWORD *)(v139 + 16) && (v140 = sub_100074340(v135, v137), (v141 & 1) != 0))
        {
          v142 = *(void **)(*(_QWORD *)(v139 + 56) + 8 * v140);
          swift_endAccess(v173);
          v143 = v142;
          swift_bridgeObjectRelease(v137);
          objc_msgSend(v33, "setSelectedViewController:", v143);

        }
        else
        {
          swift_bridgeObjectRelease(v137);
          swift_endAccess(v173);

        }
        (*(void (**)(char *, uint64_t))(v3 + 8))(v161, v2);
      }
    }
    else
    {

    }
  }
}

id sub_10006175C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v37;
  _BYTE v38[56];
  _OWORD v39[2];
  uint64_t v40;

  v4 = v3;
  v40 = 0;
  memset(v39, 0, sizeof(v39));
  v7 = sub_10006AC5C(a1, (uint64_t)v39, 0);
  objc_msgSend(v7, "_setTabBarPlacement:", 2);
  v8 = sub_100061958(a2, a3);
  v9 = OBJC_IVAR___HOAdaptiveTabBarController_roomsElements;
  v10 = *(void **)(v3 + OBJC_IVAR___HOAdaptiveTabBarController_roomsElements);
  *(_QWORD *)(v3 + OBJC_IVAR___HOAdaptiveTabBarController_roomsElements) = v8;

  v11 = sub_100061D78(a2, a3);
  v12 = OBJC_IVAR___HOAdaptiveTabBarController_categoriesElements;
  v13 = *(void **)(v3 + OBJC_IVAR___HOAdaptiveTabBarController_categoriesElements);
  *(_QWORD *)(v3 + OBJC_IVAR___HOAdaptiveTabBarController_categoriesElements) = v11;

  v37 = SidebarTabElementBuilder.id.getter(v14);
  v16 = v15;
  v17 = String._bridgeToObjectiveC()();
  v18 = (id)HFLocalizedString();

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22 = SidebarTabElementBuilder.accessibilityIdentifier.getter();
  v24 = v23;
  v25 = sub_100059788(&qword_1000D2178);
  inited = swift_initStackObject(v25, v38);
  *(_OWORD *)(inited + 16) = xmmword_100089AA0;
  *(_QWORD *)(inited + 32) = v7;
  v27 = *(void **)(v4 + v12);
  *(_QWORD *)(inited + 40) = v27;
  v28 = *(void **)(v4 + v9);
  *(_QWORD *)(inited + 48) = v28;
  *(_QWORD *)&v39[0] = inited;
  specialized Array._endMutation()(inited);
  v29 = *(_QWORD *)&v39[0];
  v30 = v28;
  v31 = v7;
  v32 = v27;
  v33 = sub_100068D3C(0, v37, v16, v19, v21, v22, v24, v29, v4);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v24);
  objc_msgSend(v33, "_setTabBarPlacement:", 4);
  v34 = *(void **)(v4 + OBJC_IVAR___HOAdaptiveTabBarController_homeElements);
  *(_QWORD *)(v4 + OBJC_IVAR___HOAdaptiveTabBarController_homeElements) = v33;
  v35 = v33;

  sub_10005EAB4();
  return v35;
}

id sub_100061958(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  _OWORD v49[2];
  uint64_t v50;
  _QWORD *v51;

  v4 = sub_100059788(&qword_1000D2140);
  __chkstk_darwin(v4);
  v47 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SidebarTabElementBuilder(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100059788(&qword_1000D2170);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StateSnapshot(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005DB48(a1, (uint64_t)v12, &qword_1000D2170);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10005D3D4((uint64_t)v12, &qword_1000D2170);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  if (objc_msgSend(a2, "hf_shouldBlockCurrentRestrictedGuestFromHome")
    || (objc_msgSend(a2, "hf_shouldBlockCurrentUserFromHome") & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return 0;
  }
  v46 = v16;
  v19 = static SidebarTabElementBuilder.createRooms(with:)(v16);
  v20 = v19;
  v21 = *(_QWORD *)(v19 + 16);
  if (!v21)
  {
    swift_bridgeObjectRelease(v19);
    v30 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2])
      goto LABEL_12;
LABEL_15:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v46, v13);
    swift_bridgeObjectRelease(v30);
    return 0;
  }
  v43 = a2;
  v44 = v14;
  v45 = v13;
  v51 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v21);
  v22 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v42 = v20;
  v23 = v20 + v22;
  v24 = *(_QWORD *)(v7 + 72);
  v25 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
  do
  {
    v25(v9, v23, v6);
    v50 = 0;
    memset(v49, 0, sizeof(v49));
    v26 = sub_10006AC5C((uint64_t)v9, (uint64_t)v49, 0);
    objc_msgSend(v26, "_setTabBarPlacement:", 4);
    v27 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v27);
    v28 = v51[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v28);
    v29 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
    specialized ContiguousArray._endMutation()(v29);
    v23 += v24;
    --v21;
  }
  while (v21);
  v30 = v51;
  swift_bridgeObjectRelease(v42);
  v14 = v44;
  v13 = v45;
  a2 = v43;
  if (!v30[2])
    goto LABEL_15;
LABEL_12:
  v31 = String._bridgeToObjectiveC()();
  v32 = (id)HULocalizedString(v31);

  v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v34 = v33;

  v35 = HFHomeAppTabIdentifierHome;
  v36 = a2;
  v37 = (uint64_t)v47;
  SidebarTabElementBuilder.init(from:home:)(v35, v36);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v37, 1, v6) == 1)
  {
    sub_10005D3D4(v37, &qword_1000D2140);
    v38 = 0;
    v39 = 0xE000000000000000;
  }
  else
  {
    v38 = SidebarTabElementBuilder.accessibilityIdentifier.getter();
    v39 = v40;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v37, v6);
  }
  swift_bridgeObjectRetain(v30);
  v17 = sub_100068D3C(2, 0, 0, v45, v34, v38, v39, (uint64_t)v30, v48);
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v30);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v46, v13);
  return v17;
}

id sub_100061D78(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  _OWORD v56[2];
  uint64_t v57;
  _QWORD *v58;

  v54 = a2;
  v3 = sub_100059788(&qword_1000D2140);
  __chkstk_darwin(v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SidebarTabElementBuilder(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100059788(&qword_1000D2170);
  __chkstk_darwin(v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StateSnapshot(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005DB48(a1, (uint64_t)v12, &qword_1000D2170);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10005D3D4((uint64_t)v12, &qword_1000D2170);
    return 0;
  }
  v55 = v7;
  v52 = v5;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  v17 = v54;
  if (objc_msgSend(v54, "hf_currentUserIsRestrictedGuest")
    || (objc_msgSend(v17, "hf_shouldBlockCurrentUserFromHome") & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return 0;
  }
  v50 = v14;
  v20 = static SidebarTabElementBuilder.createCategories(with:home:)(v16, v17);
  v21 = _swiftEmptyArrayStorage;
  v58 = _swiftEmptyArrayStorage;
  v22 = *(_QWORD *)(v20 + 16);
  v51 = v16;
  if (v22)
  {
    v48 = v20;
    v49 = v13;
    v23 = v20 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
    v24 = *(_QWORD *)(v55 + 72);
    v25 = *(void (**)(char *, unint64_t, uint64_t))(v55 + 16);
    do
    {
      v25(v9, v23, v6);
      v57 = 0;
      memset(v56, 0, sizeof(v56));
      v26 = sub_10006AC5C((uint64_t)v9, (uint64_t)v56, 0);
      objc_msgSend(v26, "_setTabBarPlacement:", 4);
      v27 = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v9, v6);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
      v29 = v58[2];
      v28 = v58[3];
      if (v29 >= v28 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
      v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v26);
      specialized Array._endMutation()(v30);
      v23 += v24;
      --v22;
    }
    while (v22);
    v21 = v58;
    v20 = v48;
    v13 = v49;
    v16 = v51;
  }
  swift_bridgeObjectRelease(v20);
  v31 = v50;
  if (!v21[2])
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v13);
    swift_bridgeObjectRelease(v21);
    return 0;
  }
  v32 = String._bridgeToObjectiveC()();
  v33 = (id)HULocalizedString(v32);

  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v36 = v35;

  v37 = HFHomeAppTabIdentifierHome;
  v38 = v17;
  v39 = (uint64_t)v52;
  SidebarTabElementBuilder.init(from:home:)(v37, v38);
  v40 = v55;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v39, 1, v6) == 1)
  {
    sub_10005D3D4(v39, &qword_1000D2140);
    v41 = 0;
    v42 = 0xE000000000000000;
  }
  else
  {
    v43 = v34;
    v44 = v39;
    v41 = SidebarTabElementBuilder.accessibilityIdentifier.getter();
    v42 = v45;
    v46 = v44;
    v34 = v43;
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v46, v6);
  }
  v47 = v53;
  swift_bridgeObjectRetain(v21);
  v18 = sub_100068D3C(1, 0, 0, v34, v36, v41, v42, (uint64_t)v21, v47);
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v21);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v51, v13);
  return v18;
}

void sub_1000621A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  void *v28;
  id v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  _OWORD v56[2];
  uint64_t v57;
  uint64_t v58;

  v10 = SidebarTabElementBuilder.id.getter(a1);
  v12 = v11;
  v13 = (void *)HFHomeAppTabIdentifierHome;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(HFHomeAppTabIdentifierHome);
  if (v10 == v14 && v12 == v15)
  {
    swift_bridgeObjectRelease_n(v12, 2);
    goto LABEL_8;
  }
  v17 = v15;
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v14, v15, 0);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v17);
  if ((v18 & 1) != 0)
  {
LABEL_8:
    v20 = sub_10006175C(a1, a3, a4);
    v19 = v20;
    goto LABEL_9;
  }
  v57 = 0;
  memset(v56, 0, sizeof(v56));
  v19 = sub_10006AC5C(a1, (uint64_t)v56, 0);
  v20 = objc_msgSend(v19, "_setTabBarPlacement:", 2);
LABEL_9:
  v21 = SidebarTabElementBuilder.id.getter(v20);
  v23 = v22;
  v24 = (_QWORD *)(a2 + OBJC_IVAR___HOAdaptiveTabBarController_controllers);
  swift_beginAccess(a2 + OBJC_IVAR___HOAdaptiveTabBarController_controllers, v56, 32, 0);
  v25 = *v24;
  if (!*(_QWORD *)(*v24 + 16) || (v26 = sub_100074340(v21, v23), (v27 & 1) == 0))
  {
    swift_bridgeObjectRelease(v23);
    v32 = swift_endAccess(v56);
    v33 = SidebarTabElementBuilder.navigationBarClass.getter(v32);
    v34 = objc_msgSend(objc_allocWithZone((Class)HUDashboardNavigationController), "initWithNavigationBarClass:toolbarClass:", swift_getObjCClassFromMetadata(v33), 0);
    v35 = objc_msgSend(v34, "setShouldUseCustomTabBarAppearance:", SidebarTabElementBuilder.shouldUseCustomTabBarAppearance.getter() & 1);
    v36 = SidebarTabElementBuilder.id.getter(v35);
    v38 = v37;
    swift_beginAccess(v24, v56, 33, 0);
    v39 = v34;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v24);
    v58 = *v24;
    *v24 = 0x8000000000000000;
    sub_100068A30((uint64_t)v39, v36, v38, isUniquelyReferenced_nonNull_native);
    v41 = *v24;
    *v24 = v58;
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v41);
    swift_endAccess(v56);
    v42 = SidebarTabElementBuilder.viewController.getter();
    if (!v42)
    {

      v30 = 0;
      v31 = a5;
      goto LABEL_24;
    }
    v43 = v42;
    v44 = (void *)SidebarTabElementBuilder.homeAppTabIdentifier.getter();
    v45 = objc_msgSend((id)objc_opt_self(HFStateRestorationSettings), "sharedInstance");
    v46 = objc_msgSend(v45, "selectedHomeAppTabIdentifier");

    if (v46)
    {
      v47 = v46;
    }
    else
    {
      v47 = v13;
      v46 = v13;
    }
    v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    v50 = v49;
    v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
    v53 = v51;
    if (v48 == v52 && v50 == v51)
    {

      swift_bridgeObjectRelease_n(v50, 2);
    }
    else
    {
      v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v50, v52, v51, 0);

      swift_bridgeObjectRelease(v50);
      swift_bridgeObjectRelease(v53);
      if ((v54 & 1) == 0)
      {
        objc_msgSend(v39, "pushViewController:animated:", v43, 0);
        goto LABEL_23;
      }
    }

LABEL_23:
    v31 = a5;
    v30 = v39;
    objc_msgSend(v30, "_uip_setTabElement:", v19);

    goto LABEL_24;
  }
  v28 = *(void **)(*(_QWORD *)(v25 + 56) + 8 * v26);
  swift_endAccess(v56);
  v29 = v28;
  swift_bridgeObjectRelease(v23);
  v30 = v29;
  objc_msgSend(v30, "_uip_setTabElement:", v19);

  v31 = a5;
LABEL_24:
  *v31 = v30;
}

Swift::Void __swiftcall AdaptiveTabBarController.viewDidAppear(_:)(Swift::Bool a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  id v5;
  char v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, "viewDidAppear:", a1);
  KeyPath = swift_getKeyPath(&unk_100089AB0);
  v4 = swift_getKeyPath(&unk_100089AD8);
  v6 = 1;
  static Published.subscript.setter(&v6, v1, KeyPath, v4);
  v5 = AdaptiveTabBarController.baseController.getter();
  objc_msgSend(v5, "reloadInitialSetup");

}

Swift::Void __swiftcall AdaptiveTabBarController.viewDidDisappear(_:)(Swift::Bool a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  objc_super v7;
  char v8;

  ObjectType = (objc_class *)swift_getObjectType();
  KeyPath = swift_getKeyPath(&unk_100089AB0);
  v5 = swift_getKeyPath(&unk_100089AD8);
  v8 = 0;
  v6 = v1;
  static Published.subscript.setter(&v8, v6, KeyPath, v5);
  v7.receiver = v6;
  v7.super_class = ObjectType;
  objc_msgSendSuper2(&v7, "viewDidDisappear:", a1);
}

UINavigationController_optional __swiftcall AdaptiveTabBarController.selectCurrentTab()()
{
  void *v0;
  objc_class *v1;
  Swift::Bool v2;
  UINavigationController_optional result;

  v1 = (objc_class *)objc_msgSend(v0, "navigationController");
  result.value.super.super.super.isa = v1;
  result.is_nil = v2;
  return result;
}

void _s7HomeApp24AdaptiveTabBarControllerC4home_9didUpdate3forySo6HMHomeC_So6HMRoomCSo11HMAccessoryCtF_0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Class isa;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Class v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27[2];

  v1 = v0;
  swift_getObjectType();
  v2 = type metadata accessor for StateSnapshot(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100059788(&qword_1000D2170);
  __chkstk_darwin(v6);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)objc_opt_self(HFHomeKitDispatcher);
  v10 = objc_msgSend(v9, "sharedDispatcher");
  v27[0] = objc_msgSend(v10, "home");

  if (v27[0])
  {
    v11 = objc_msgSend(v9, "sharedDispatcher");
    v12 = objc_msgSend(v11, "homeManager");

    if (v12)
    {
      if ((objc_msgSend((id)objc_opt_self(HFUtilities), "isAnIPhone") & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
        v13 = static SidebarTabElementBuilder.createBaseLevelTabs(with:)(v27[0]);
        __chkstk_darwin(v13);
        v27[-4] = v1;
        v27[-3] = v8;
        v27[-2] = v27[0];
        v14 = (uint64_t)sub_10005E2EC((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_10006AB64, (uint64_t)&v27[-6], v13);
        swift_bridgeObjectRelease(v13);
        sub_10005D3D4((uint64_t)v8, &qword_1000D2170);
        if ((unint64_t)v14 >> 62)
        {
          if (v14 < 0)
            v23 = v14;
          else
            v23 = v14 & 0xFFFFFFFFFFFFFF8;
          v24 = sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
          swift_bridgeObjectRetain(v14);
          v16 = _bridgeCocoaArray<A>(_:)(v23, v24);
          swift_bridgeObjectRelease(v14);
        }
        else
        {
          v15 = swift_bridgeObjectRetain(v14);
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v15);
          sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
          v16 = v14;
        }
        swift_bridgeObjectRelease(v14);
        sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v16);
        objc_msgSend(v1, "setViewControllers:animated:", isa, 0);

      }
      else
      {
        sub_100062D20(v27[0], v12, (uint64_t)v5);
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
        v18 = static SidebarTabElementBuilder.createBaseLevelTabs(with:)(v27[0]);
        __chkstk_darwin(v18);
        v27[-4] = v1;
        v27[-3] = v8;
        v27[-2] = v27[0];
        v19 = (uint64_t)sub_10005E2EC((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_10006AAE8, (uint64_t)&v27[-6], v18);
        swift_bridgeObjectRelease(v18);
        sub_10005D3D4((uint64_t)v8, &qword_1000D2170);
        if ((unint64_t)v19 >> 62)
        {
          if (v19 < 0)
            v25 = v19;
          else
            v25 = v19 & 0xFFFFFFFFFFFFFF8;
          v26 = sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
          swift_bridgeObjectRetain(v19);
          v21 = _bridgeCocoaArray<A>(_:)(v25, v26);
          swift_bridgeObjectRelease(v19);
        }
        else
        {
          v20 = swift_bridgeObjectRetain(v19);
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v20);
          sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
          v21 = v19;
        }
        swift_bridgeObjectRelease(v19);
        sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
        v22 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v21);
        objc_msgSend(v1, "setViewControllers:animated:", v22, 0);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      }
    }
    else
    {

    }
  }
}

uint64_t sub_100062D20@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t updated;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_signpost_type_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint8_t *v26;
  os_signpost_id_t v27;
  uint8_t *v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  NSObject *v45;
  char *v46;
  uint64_t v47;
  os_signpost_type_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  const char *v55;
  char *v57;
  uint8_t *v58;
  os_signpost_id_t v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  char *v67;
  void *v68;
  id v69;
  uint64_t v70;
  char *v71;

  v68 = a1;
  v69 = a2;
  v70 = a3;
  v3 = type metadata accessor for OSSignpostError(0);
  v63 = *(_QWORD *)(v3 - 8);
  v64 = v3;
  __chkstk_darwin(v3);
  v62 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100059788(&qword_1000D2170);
  __chkstk_darwin(v5);
  v67 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v8 = *(void (**)(char *, char *, uint64_t))(updated - 8);
  __chkstk_darwin(updated);
  v65 = (char **)((char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for OSSignpostID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v71 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v60 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v60 - v17;
  if (qword_1000D14D8 != -1)
    swift_once(&qword_1000D14D8, sub_100067E84);
  v19 = type metadata accessor for OSSignposter(0);
  v20 = sub_100067F28(v19, (uint64_t)qword_1000D36A0);
  v21 = static OSSignpostID.exclusive.getter();
  v66 = v20;
  v22 = OSSignposter.logHandle.getter(v21);
  v23 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v61 = v8;
    v24 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v24(v16, v18, v10);
    v25 = updated;
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    v27 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, v23, v27, "AdaptiveTabBarFollowUpBuildSnapshot", "", v26, 2u);
    v28 = v26;
    updated = v25;
    swift_slowDealloc(v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    v29 = v24;
    v8 = v61;
  }
  else
  {

    v29 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  }
  v61 = v29;
  v29(v16, v18, v10);
  v30 = type metadata accessor for OSSignpostIntervalState(0);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v60 = v16;
  v31 = OSSignpostIntervalState.init(id:isOpen:)(v16, 1);
  v32 = *(void (**)(char *, uint64_t))(v11 + 8);
  v32(v18, v10);
  v33 = v68;
  v34 = v65;
  *v65 = v68;
  (*((void (**)(_QWORD *, _QWORD, uint64_t))v8 + 13))(v34, enum case for StateSnapshot.UpdateType.all(_:), updated);
  v35 = type metadata accessor for StateSnapshot(0);
  v36 = v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v67, 1, 1, v35);
  v37 = sub_100059788(&qword_1000D2188);
  v38 = type metadata accessor for StateSnapshot.Coverage(0);
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(unsigned __int8 *)(v39 + 80);
  v41 = (v40 + 32) & ~v40;
  v42 = swift_allocObject(v37, v41 + *(_QWORD *)(v39 + 72), v40 | 7);
  *(_OWORD *)(v42 + 16) = xmmword_100089740;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 104))(v42 + v41, enum case for StateSnapshot.Coverage.everythingElse(_:), v38);
  v43 = v33;
  v44 = StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v34, v69, v43, v36, v42);
  v45 = OSSignposter.logHandle.getter(v44);
  v46 = v71;
  v47 = OSSignpostIntervalState.signpostID.getter();
  v48 = static os_signpost_type_t.end.getter(v47);
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v49 = v10;
    v50 = v32;
    v51 = swift_retain(v31);
    v52 = v62;
    checkForErrorAndConsumeState(state:)(v51);
    swift_release(v31);
    v54 = v63;
    v53 = v64;
    if ((*(unsigned int (**)(char *, uint64_t))(v63 + 88))(v52, v64) == enum case for OSSignpostError.doubleEnd(_:))
    {
      v55 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v53);
      v55 = "";
    }
    v57 = v60;
    v61(v60, v46, v49);
    v58 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v58 = 0;
    v59 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v45, v48, v59, "AdaptiveTabBarFollowUpBuildSnapshot", v55, v58, 2u);
    swift_slowDealloc(v58, -1, -1);

    v50(v46, v49);
    swift_release(v31);
    return ((uint64_t (*)(char *, uint64_t))v50)(v57, v49);
  }
  else
  {

    v32(v46, v10);
    return swift_release(v31);
  }
}

Swift::Void __swiftcall AdaptiveTabBarController.switchTo(room:)(HMRoom room)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  objc_class *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t MetatypeMetadata;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  objc_class *v20;
  objc_class **v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  objc_class **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D14D0 != -1)
    swift_once(&qword_1000D14D0, sub_10005E424);
  v9 = sub_100067F28(v5, (uint64_t)qword_1000D1C30);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  v10 = room.super.isa;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(32, -1);
    v27 = v6;
    v14 = v13;
    v25 = (objc_class **)swift_slowAlloc(8, -1);
    v15 = swift_slowAlloc(64, -1);
    v26 = v15;
    *(_DWORD *)v14 = 136315650;
    v28 = v2;
    v29 = v15;
    v30 = ObjectType;
    MetatypeMetadata = swift_getMetatypeMetadata(ObjectType);
    v17 = String.init<A>(describing:)(&v30, MetatypeMetadata);
    v19 = v18;
    v30 = sub_100068064(v17, v18, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease(v19);
    *(_WORD *)(v14 + 12) = 2080;
    v30 = sub_100068064(0x6F54686374697773, 0xEF293A6D6F6F7228, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v14 + 14, v14 + 22);
    *(_WORD *)(v14 + 22) = 2112;
    v30 = (uint64_t)v10;
    v20 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v14 + 24, v14 + 32);
    v21 = v25;
    *v25 = v10;

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "<%s: %s> show room: %@", (uint8_t *)v14, 0x20u);
    v22 = sub_100059788(&qword_1000D1658);
    swift_arrayDestroy(v21, 1, v22);
    swift_slowDealloc(v21, -1, -1);
    v23 = v26;
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v5);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v24 = _s7HomeApp24AdaptiveTabBarControllerC18dashboardNavigatorSo011HUDashboardH0_pSgvg_0();

}

void AdaptiveTabBarController.switchTo(accessoryTypeGroup:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t MetatypeMetadata;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D14D0 != -1)
    swift_once(&qword_1000D14D0, sub_10005E424);
  v9 = sub_100067F28(v5, (uint64_t)qword_1000D1C30);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  v10 = a1;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(32, -1);
    v30 = v2;
    v14 = v13;
    v27 = (_QWORD *)swift_slowAlloc(8, -1);
    v28 = swift_slowAlloc(64, -1);
    v31 = v28;
    v32 = ObjectType;
    *(_DWORD *)v14 = 136315650;
    v29 = v6;
    MetatypeMetadata = swift_getMetatypeMetadata(ObjectType);
    v16 = String.init<A>(describing:)(&v32, MetatypeMetadata);
    v18 = v17;
    v32 = sub_100068064(v16, v17, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease(v18);
    *(_WORD *)(v14 + 12) = 2080;
    v32 = sub_100068064(0xD00000000000001DLL, 0x8000000100090B30, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v14 + 14, v14 + 22);
    *(_WORD *)(v14 + 22) = 2112;
    v32 = (uint64_t)v10;
    v19 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v14 + 24, v14 + 32);
    v20 = v27;
    *v27 = v10;

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "<%s: %s> show accessory type group: %@", (uint8_t *)v14, 0x20u);
    v21 = sub_100059788(&qword_1000D1658);
    swift_arrayDestroy(v20, 1, v21);
    swift_slowDealloc(v20, -1, -1);
    v22 = v28;
    swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v5);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v23 = objc_msgSend((id)objc_opt_self(HFHomeKitDispatcher), "sharedDispatcher");
  v24 = objc_msgSend(v23, "home");

  if (v24)
  {
    v25 = _s7HomeApp24AdaptiveTabBarControllerC18dashboardNavigatorSo011HUDashboardH0_pSgvg_0();
    v26 = objc_msgSend(v25, "showAccessoryTypeGroup:forHome:animated:", v10, v24, 1);

  }
}

Swift::Void __swiftcall AdaptiveTabBarController.switchTo(home:)(HMHome home)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  objc_class *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t MetatypeMetadata;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  objc_class *v20;
  objc_class **v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  objc_class **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D14D0 != -1)
    swift_once(&qword_1000D14D0, sub_10005E424);
  v9 = sub_100067F28(v5, (uint64_t)qword_1000D1C30);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  v10 = home.super.isa;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(32, -1);
    v27 = v6;
    v14 = v13;
    v25 = (objc_class **)swift_slowAlloc(8, -1);
    v15 = swift_slowAlloc(64, -1);
    v26 = v15;
    *(_DWORD *)v14 = 136315650;
    v28 = v2;
    v29 = v15;
    v30 = ObjectType;
    MetatypeMetadata = swift_getMetatypeMetadata(ObjectType);
    v17 = String.init<A>(describing:)(&v30, MetatypeMetadata);
    v19 = v18;
    v30 = sub_100068064(v17, v18, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease(v19);
    *(_WORD *)(v14 + 12) = 2080;
    v30 = sub_100068064(0x6F54686374697773, 0xEF293A656D6F6828, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v14 + 14, v14 + 22);
    *(_WORD *)(v14 + 22) = 2112;
    v30 = (uint64_t)v10;
    v20 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v14 + 24, v14 + 32);
    v21 = v25;
    *v25 = v10;

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "<%s: %s> Switching to home %@", (uint8_t *)v14, 0x20u);
    v22 = sub_100059788(&qword_1000D1658);
    swift_arrayDestroy(v21, 1, v22);
    swift_slowDealloc(v21, -1, -1);
    v23 = v26;
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v5);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v24 = _s7HomeApp24AdaptiveTabBarControllerC18dashboardNavigatorSo011HUDashboardH0_pSgvg_0();

}

void sub_100063C8C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSObject *v47;
  int v48;
  uint64_t v49;
  uint64_t MetatypeMetadata;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  char v72;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t inited;
  uint64_t v77;
  id v78;
  unint64_t v79;
  Class isa;
  uint64_t v81;
  int v82;
  id v83;
  char *v84;
  uint64_t (*v85)(char *, uint64_t, char *);
  uint64_t v86;
  NSObject *v87;
  id v88;
  uint64_t ObjectType;
  NSObject *v90;
  uint64_t v91;
  uint64_t v92;
  char v93[80];
  uint64_t v94;
  uint64_t v95;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = type metadata accessor for Logger(0);
  v91 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v81 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v81 - v9;
  v11 = sub_100059788(&qword_1000D2140);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v81 - v16;
  __chkstk_darwin(v15);
  v90 = ((char *)&v81 - v18);
  v19 = (unint64_t)objc_msgSend(v1, "selectedIndex");
  v20 = objc_msgSend((id)objc_opt_self(HFHomeKitDispatcher), "sharedDispatcher");
  v21 = objc_msgSend(v20, "home");

  if (v21)
  {
    if (v19 == NSNotFound.getter())
    {
      if (qword_1000D14D0 != -1)
        swift_once(&qword_1000D14D0, sub_10005E424);
      v22 = sub_100067F28(v2, (uint64_t)qword_1000D1C30);
      v23 = v91;
      v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v91 + 16))(v8, v22, v2);
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v27 = 134217984;
        v94 = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v27 + 4, v27 + 12);
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "UITabBarController doesn't have a selected tab: %ld", v27, 0xCu);
        swift_slowDealloc(v27, -1, -1);
        v28 = v21;
      }
      else
      {
        v28 = v25;
        v25 = v21;
      }

      (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v2);
      return;
    }
    v35 = static SidebarTabElementBuilder.DefaultTabs.getter();
    if ((v19 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v36 = v35;
      if (v19 < *(_QWORD *)(v35 + 16))
      {
        v37 = *(id *)(v35 + 8 * v19 + 32);
        swift_bridgeObjectRelease(v36);
        v38 = v37;
        v39 = v21;
        v21 = v90;
        v87 = v39;
        v88 = v38;
        SidebarTabElementBuilder.init(from:home:)(v38, v39);
        sub_10005DB48((uint64_t)v21, (uint64_t)v17, &qword_1000D2140);
        v5 = (char *)type metadata accessor for SidebarTabElementBuilder(0);
        v40 = *((_QWORD *)v5 - 1);
        v85 = *(uint64_t (**)(char *, uint64_t, char *))(v40 + 48);
        v41 = v85(v17, 1, v5);
        v86 = v40;
        if ((_DWORD)v41 == 1)
        {
          sub_10005D3D4((uint64_t)v17, &qword_1000D2140);
          v42 = HFHomeAppTabIdentifierHome;
        }
        else
        {
          v42 = (id)SidebarTabElementBuilder.homeAppTabIdentifier.getter(v41);
          (*(void (**)(char *, char *))(v40 + 8))(v17, v5);
        }
        v19 = objc_opt_self(HFStateRestorationSettings);
        v43 = objc_msgSend((id)v19, "sharedInstance");
        objc_msgSend(v43, "setSelectedHomeAppTabIdentifier:", v42);

        if (qword_1000D14D0 == -1)
        {
LABEL_20:
          v44 = sub_100067F28(v2, (uint64_t)qword_1000D1C30);
          v45 = v91;
          (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v10, v44, v2);
          v46 = v1;
          v47 = Logger.logObject.getter(v46);
          v48 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v47, (os_log_type_t)v48))
          {
            v82 = v48;
            v83 = v46;
            v84 = v5;
            v49 = swift_slowAlloc(32, -1);
            v81 = swift_slowAlloc(96, -1);
            v92 = v81;
            *(_DWORD *)v49 = 136315650;
            v94 = ObjectType;
            MetatypeMetadata = swift_getMetatypeMetadata(ObjectType);
            v51 = String.init<A>(describing:)(&v94, MetatypeMetadata);
            v53 = v52;
            v94 = sub_100068064(v51, v52, &v92);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v49 + 4, v49 + 12);
            swift_bridgeObjectRelease(v53);
            *(_WORD *)(v49 + 12) = 2080;
            v94 = sub_100068064(0xD000000000000018, 0x8000000100090FD0, &v92);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v49 + 14, v49 + 22);
            *(_WORD *)(v49 + 22) = 2080;
            v54 = objc_msgSend((id)v19, "sharedInstance");
            v55 = objc_msgSend(v54, "selectedHomeAppTabIdentifier");

            if (!v55)
              v55 = HFHomeAppTabIdentifierHome;
            v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
            v58 = v57;

            v94 = sub_100068064(v56, v58, &v92);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v49 + 24, v49 + 32);
            v59 = v83;

            swift_bridgeObjectRelease(v58);
            _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v82, "<%s: %s> Persisting last selected tab %s", (uint8_t *)v49, 0x20u);
            v60 = v81;
            swift_arrayDestroy(v81, 3, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v60, -1, -1);
            swift_slowDealloc(v49, -1, -1);

            (*(void (**)(char *, uint64_t))(v91 + 8))(v10, v2);
            v21 = v90;
            v5 = v84;
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v2);
          }
          sub_10005DB48((uint64_t)v21, (uint64_t)v14, &qword_1000D2140);
          v61 = v85(v14, 1, v5);
          v62 = v86;
          if ((_DWORD)v61 == 1)
          {
            sub_10005D3D4((uint64_t)v14, &qword_1000D2140);
LABEL_32:
            sub_10005D3D4((uint64_t)v21, &qword_1000D2140);

            return;
          }
          v63 = (void *)SidebarTabElementBuilder.homeAppTabIdentifier.getter(v61);
          (*(void (**)(char *, char *))(v62 + 8))(v14, v5);
          v64 = (void *)HFHomeAppTabIdentifierDiscover;
          v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
          v67 = v66;
          v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
          v70 = v68;
          if (v65 == v69 && v67 == v68)
          {
            v71 = v64;

            swift_bridgeObjectRelease_n(v67, 2);
          }
          else
          {
            v72 = _stringCompareWithSmolCheck(_:_:expecting:)(v65, v67, v69, v68, 0);
            v73 = v64;

            swift_bridgeObjectRelease(v67);
            swift_bridgeObjectRelease(v70);
            if ((v72 & 1) == 0)
              goto LABEL_32;
          }
          v74 = (void *)objc_opt_self(HFAnalytics);
          v75 = sub_100059788(&qword_1000D2148);
          inited = swift_initStackObject(v75, v93);
          *(_OWORD *)(inited + 16) = xmmword_100089740;
          *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(HFAnalyticsDiscoverTabTapCountKey);
          *(_QWORD *)(inited + 40) = v77;
          v78 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", 1);
          *(_QWORD *)(inited + 72) = sub_10005D394(0, &qword_1000D2150, NSNumber_ptr);
          *(_QWORD *)(inited + 48) = v78;
          v79 = sub_10004DC10(inited);
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v79);
          objc_msgSend(v74, "sendEvent:withData:", 10, isa);

          sub_10005D3D4((uint64_t)v21, &qword_1000D2140);
          return;
        }
LABEL_35:
        swift_once(&qword_1000D14D0, sub_10005E424);
        goto LABEL_20;
      }
    }
    __break(1u);
    goto LABEL_35;
  }
  if (qword_1000D14D0 != -1)
    swift_once(&qword_1000D14D0, sub_10005E424);
  v29 = sub_100067F28(v2, (uint64_t)qword_1000D1C30);
  v30 = v91;
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v91 + 16))(v5, v29, v2);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v34 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Adapative Tabbar don't have a current Home", v34, 2u);
    swift_slowDealloc(v34, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v2);
}

id AdaptiveTabBarController.__allocating_init(tabs:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  Class isa;
  id v5;

  v3 = objc_allocWithZone(v1);
  sub_10005D394(0, (unint64_t *)&unk_1000D1CE0, UITab_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v5 = objc_msgSend(v3, "initWithTabs:", isa);

  return v5;
}

void AdaptiveTabBarController.init(tabs:)()
{
  _swift_stdlib_reportUnimplementedInitializer("HomeApp.AdaptiveTabBarController", 32, "init(tabs:)", 11, 0);
  __break(1u);
}

id AdaptiveTabBarController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

void AdaptiveTabBarController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("HomeApp.AdaptiveTabBarController", 32, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t sub_100064794@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t ObjectType;
  uint64_t result;

  ObjectType = swift_getObjectType();
  result = ObservableObject<>.objectWillChange.getter(ObjectType, a1);
  *a2 = result;
  return result;
}

UIViewController_optional __swiftcall AdaptiveTabBarController.currentViewController()()
{
  void *v0;
  Swift::Bool v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  uint64_t v7;
  UIViewController_optional result;

  v2 = (char *)objc_msgSend(v0, "viewControllers");
  if (!v2)
    goto LABEL_11;
  v3 = sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v7 = v4;
    else
      v7 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v2 = (char *)_CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease(v4);
    if (!v2)
      goto LABEL_10;
LABEL_4:
    v5 = (objc_class *)(v2 - 1);
    if (__OFSUB__(v2, 1))
    {
      __break(1u);
    }
    else if ((v4 & 0xC000000000000001) == 0)
    {
      if (((unint64_t)v5 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v5 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v6 = (char *)*(id *)(v4 + 8 * (_QWORD)v5 + 32);
LABEL_9:
        v2 = v6;
        goto LABEL_10;
      }
      __break(1u);
      goto LABEL_21;
    }
    v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v4);
    goto LABEL_9;
  }
  v2 = *(char **)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
    goto LABEL_4;
LABEL_10:
  swift_bridgeObjectRelease(v4);
LABEL_11:
  v5 = (objc_class *)v2;
LABEL_21:
  result.value.super.super.isa = v5;
  result.is_nil = v1;
  return result;
}

Swift::Void __swiftcall AdaptiveTabBarController.setLoading(_:)(UIViewController a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  Class isa;
  uint64_t v7;

  v3 = sub_100059788((uint64_t *)&unk_1000D1CD0);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100089750;
  *(UIViewController *)(v4 + 32) = a1;
  v7 = v4;
  specialized Array._endMutation()(v4);
  sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
  v5 = a1.super.super.isa;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  objc_msgSend(v1, "setViewControllers:", isa);

}

uint64_t sub_100064A88(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[15] = a1;
  v2[16] = v1;
  v3 = sub_100059788(&qword_1000D2140);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SidebarTabElementBuilder(0);
  v2[18] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[19] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[20] = swift_task_alloc(v6);
  v2[21] = swift_task_alloc(v6);
  v7 = type metadata accessor for MainActor(0);
  v2[22] = static MainActor.shared.getter();
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v2[23] = v8;
  v2[24] = v9;
  return swift_task_switch(sub_100064B50, v8, v9);
}

id sub_100064B50()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD, unint64_t, _QWORD);
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  _QWORD *v42;
  id result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;

  v1 = objc_msgSend((id)objc_opt_self(HFHomeKitDispatcher), "sharedDispatcher");
  v2 = objc_msgSend(v1, "home");
  *(_QWORD *)(v0 + 200) = v2;

  if (!v2)
  {
    swift_release(*(_QWORD *)(v0 + 176));
    objc_msgSend((id)objc_opt_self(NSError), "hf_errorWithCode:", 59);
    swift_willThrow();
LABEL_23:
    v48 = *(_QWORD *)(v0 + 160);
    v49 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = static SidebarTabElementBuilder.createBaseLevelTabs(with:)(v2);
  v4 = v3;
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + 152);
    v54 = v2;
    v55 = *(_QWORD *)(v0 + 120);
    v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(_QWORD *)(v6 + 72);
    v9 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v6 + 16);
    v53 = v3;
    swift_bridgeObjectRetain(v3);
    while (1)
    {
      v10 = v9(*(_QWORD *)(v0 + 160), v7, *(_QWORD *)(v0 + 144));
      v11 = (void *)SidebarTabElementBuilder.homeAppTabIdentifier.getter(v10);
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
      if (v12 == v15 && v14 == v16)
      {
        swift_bridgeObjectRelease(v14);

        v4 = v53;
        swift_bridgeObjectRelease(v53);
        goto LABEL_15;
      }
      v18 = v16;
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v14);

      if ((v19 & 1) != 0)
        break;
      (*(void (**)(_QWORD, _QWORD))(v6 + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
      v7 += v8;
      if (!--v5)
      {
        v4 = v53;
        swift_bridgeObjectRelease(v53);
        v20 = 1;
        v2 = v54;
        goto LABEL_16;
      }
    }
    v4 = v53;
    v14 = v53;
LABEL_15:
    v2 = v54;
    v21 = *(_QWORD *)(v0 + 152);
    v22 = *(_QWORD *)(v0 + 160);
    v24 = *(_QWORD *)(v0 + 136);
    v23 = *(_QWORD *)(v0 + 144);
    swift_bridgeObjectRelease(v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v24, v22, v23);
    v20 = 0;
  }
  else
  {
    v20 = 1;
  }
LABEL_16:
  v26 = *(_QWORD *)(v0 + 144);
  v25 = *(_QWORD *)(v0 + 152);
  v27 = *(_QWORD *)(v0 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v27, v20, 1, v26);
  swift_bridgeObjectRelease(v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v27, 1, v26) == 1)
  {
    v28 = *(_QWORD *)(v0 + 136);
    swift_release(*(_QWORD *)(v0 + 176));
    sub_10005D3D4(v28, &qword_1000D2140);
    objc_msgSend((id)objc_opt_self(NSError), "hf_errorWithCode:", 30);
    swift_willThrow();

    goto LABEL_23;
  }
  v29 = *(_QWORD *)(v0 + 128);
  v30 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 32))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
  v31 = SidebarTabElementBuilder.id.getter(v30);
  v33 = v32;
  v34 = (uint64_t *)(v29 + OBJC_IVAR___HOAdaptiveTabBarController_controllers);
  swift_beginAccess(v29 + OBJC_IVAR___HOAdaptiveTabBarController_controllers, v0 + 96, 32, 0);
  v35 = *v34;
  if (!*(_QWORD *)(v35 + 16) || (v36 = sub_100074340(v31, v33), (v37 & 1) == 0))
  {
    v45 = *(_QWORD *)(v0 + 168);
    v44 = *(_QWORD *)(v0 + 176);
    v47 = *(_QWORD *)(v0 + 144);
    v46 = *(_QWORD *)(v0 + 152);
    swift_bridgeObjectRelease(v33);
    swift_endAccess(v0 + 96);
    swift_release(v44);
    objc_msgSend((id)objc_opt_self(NSError), "hf_errorWithCode:", 30);
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
    goto LABEL_23;
  }
  v38 = *(void **)(v0 + 128);
  v39 = *(void **)(*(_QWORD *)(v35 + 56) + 8 * v36);
  *(_QWORD *)(v0 + 208) = v39;
  swift_endAccess(v0 + 96);
  v40 = v39;
  swift_bridgeObjectRelease(v33);
  v41 = objc_msgSend(v38, "presentedViewController");
  *(_QWORD *)(v0 + 216) = v41;
  if (v41)
  {
    v42 = (_QWORD *)swift_task_alloc(dword_1000D216C);
    *(_QWORD *)(v0 + 224) = v42;
    *v42 = v0;
    v42[1] = sub_100064FF4;
    return (id)sub_10005E4A4(1);
  }
  else
  {
    result = objc_msgSend(*(id *)(v0 + 208), "hu_preloadContent");
    *(_QWORD *)(v0 + 232) = result;
    if (result)
    {
      v50 = result;
      v51 = (_QWORD *)swift_task_alloc(async function pointer to static NAFutureHelper.continuation<A>(_:)[1]);
      *(_QWORD *)(v0 + 240) = v51;
      v52 = sub_10005D394(0, &qword_1000D2160, NSNull_ptr);
      *v51 = v0;
      v51[1] = sub_1000650DC;
      return (id)static NAFutureHelper.continuation<A>(_:)(v50, v52);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100064FF4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 224));
  return swift_task_switch(sub_100065040, *(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 192));
}

id sub_100065040()
{
  uint64_t v0;
  id result;
  id v2;
  _QWORD *v3;
  uint64_t v4;

  result = objc_msgSend(*(id *)(v0 + 208), "hu_preloadContent");
  *(_QWORD *)(v0 + 232) = result;
  if (result)
  {
    v2 = result;
    v3 = (_QWORD *)swift_task_alloc(async function pointer to static NAFutureHelper.continuation<A>(_:)[1]);
    *(_QWORD *)(v0 + 240) = v3;
    v4 = sub_10005D394(0, &qword_1000D2160, NSNull_ptr);
    *v3 = v0;
    v3[1] = sub_1000650DC;
    return (id)static NAFutureHelper.continuation<A>(_:)(v2, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000650DC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 240);
  *(_QWORD *)(*(_QWORD *)v2 + 248) = v1;
  swift_task_dealloc(v5);
  v6 = (void *)v4[29];
  if (v1)
  {

    v7 = v4[23];
    v8 = v4[24];
    v9 = sub_100065560;
  }
  else
  {

    v7 = v4[23];
    v8 = v4[24];
    v9 = sub_10006515C;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_10006515C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t inited;
  uint64_t v49;
  id v50;
  unint64_t v51;
  Class isa;

  swift_release(*(_QWORD *)(v0 + 176));
  v1 = (void *)objc_opt_self(HFStateRestorationSettings);
  v2 = objc_msgSend(v1, "sharedInstance");
  v3 = objc_msgSend(v2, "selectedHomeAppTabIdentifier");

  if (!v3)
    v3 = HFHomeAppTabIdentifierHome;
  v4 = *(_QWORD *)(v0 + 120);
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  if (v5 == v8 && v7 == v9)
  {
    swift_bridgeObjectRelease_n(v7, 2);

    goto LABEL_14;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v7);

  if ((v12 & 1) == 0)
  {
    v13 = *(void **)(v0 + 128);
    v14 = *(id *)(v0 + 120);
    v15 = objc_msgSend(v1, "sharedInstance");
    objc_msgSend(v15, "setSelectedHomeAppTabIdentifier:", v14);

    v16 = objc_msgSend(v13, "viewControllers");
    if (v16)
    {
      v17 = v16;
      v18 = *(_QWORD *)(v0 + 208);
      v19 = *(void **)(v0 + 128);
      v20 = sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
      v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v20);

      sub_100050504(v18, v21);
      swift_bridgeObjectRelease(v21);
      objc_msgSend(v19, "setSelectedViewController:", v18);
    }
    v22 = HFHomeAppTabIdentifierHome;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v25 = v24;
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v28 = v26;
    if (v23 == v27 && v25 == v26)
    {
      swift_bridgeObjectRelease_n(v25, 2);
    }
    else
    {
      v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v27, v26, 0);
      swift_bridgeObjectRelease(v28);
      swift_bridgeObjectRelease(v25);
      if ((v33 & 1) == 0)
        goto LABEL_18;
    }
    sub_10005EAB4();
LABEL_18:
    v34 = HFHomeAppTabIdentifierDiscover;
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v37 = v36;
    v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v40 = v38;
    if (v35 == v39 && v37 == v38)
    {
      swift_bridgeObjectRelease_n(v37, 2);
LABEL_22:
      v42 = *(void **)(v0 + 200);
      v43 = *(_QWORD *)(v0 + 168);
      v44 = *(_QWORD *)(v0 + 144);
      v45 = *(_QWORD *)(v0 + 152);
      v46 = (void *)objc_opt_self(HFAnalytics);
      v47 = sub_100059788(&qword_1000D2148);
      inited = swift_initStackObject(v47, v0 + 16);
      *(_OWORD *)(inited + 16) = xmmword_100089740;
      *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(HFAnalyticsDiscoverTabTapCountKey);
      *(_QWORD *)(inited + 40) = v49;
      v50 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", 1);
      *(_QWORD *)(inited + 72) = sub_10005D394(0, &qword_1000D2150, NSNumber_ptr);
      *(_QWORD *)(inited + 48) = v50;
      v51 = sub_10004DC10(inited);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v51);
      objc_msgSend(v46, "sendEvent:withData:", 10, isa);

      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
      goto LABEL_15;
    }
    v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v37, v39, v38, 0);
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v37);
    if ((v41 & 1) != 0)
      goto LABEL_22;
  }
LABEL_14:
  v29 = *(void **)(v0 + 200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 144));

LABEL_15:
  v30 = *(_QWORD *)(v0 + 160);
  v31 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 208));
}

uint64_t sub_100065560()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(void **)(v0 + 200);
  v1 = *(void **)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  swift_release(*(_QWORD *)(v0 + 176));

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000655E0(uint64_t a1)
{
  uint64_t MetatypeMetadata;
  uint64_t v3;

  v3 = a1;
  MetatypeMetadata = swift_getMetatypeMetadata();
  return String.init<A>(describing:)(&v3, MetatypeMetadata);
}

uint64_t AdaptiveTabBarController.selectTab(withIdentifier:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = sub_100059788(&qword_1000D23E0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = swift_allocObject(&unk_1000BAB88, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v2);
  v9 = swift_allocObject(&unk_1000BABB0, 32, 7);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = a1;
  v10 = sub_10005D394(0, &qword_1000D1D00, UINavigationController_ptr);
  v11 = a1;
  v12 = static NAFutureHelper.futureOnMainActor<A>(priority:descriptor:with:)(v6, 0, 0, &unk_1000D1CF8, v9, v10);
  swift_release(v9);
  sub_10005D3D4((uint64_t)v6, &qword_1000D23E0);
  return v12;
}

uint64_t sub_10006573C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[5] = a1;
  v2[6] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[7] = static MainActor.shared.getter();
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[8] = v4;
  v2[9] = v5;
  return swift_task_switch(sub_1000657A8, v4, v5);
}

uint64_t sub_1000657A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 80) = Strong;
  if (!Strong)
    goto LABEL_4;
  v3 = (void *)Strong;
  if ((static Task<>.isCancelled.getter() & 1) != 0)
  {

LABEL_4:
    swift_release(*(_QWORD *)(v0 + 56));
    objc_msgSend((id)objc_opt_self(NSError), "hf_errorWithCode:", 37);
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = (_QWORD *)swift_task_alloc(dword_1000D215C);
  *(_QWORD *)(v0 + 88) = v5;
  *v5 = v0;
  v5[1] = sub_100065888;
  return sub_100064A88(*(_QWORD *)(v0 + 48));
}

uint64_t sub_100065888(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  *(_QWORD *)(*(_QWORD *)v2 + 96) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[8];
    v7 = v4[9];
    v8 = sub_100065940;
  }
  else
  {
    v4[13] = a1;
    v6 = v4[8];
    v7 = v4[9];
    v8 = sub_1000658FC;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1000658FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);

  swift_release(v1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 104));
}

uint64_t sub_100065940()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 56));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *AdaptiveTabBarController.adaptiveViewController.getter()
{
  void *v0;
  id v1;

  v1 = v0;
  return v0;
}

id AdaptiveTabBarController.wantsAccessoryControlsCard.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  id v4;

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "traitCollection");

    if (objc_msgSend(v3, "userInterfaceIdiom"))
    {
      v4 = objc_msgSend(v3, "horizontalSizeClass");

      return (id)(v4 != (id)1);
    }
    else
    {

      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void AdaptiveTabBarController._tabElementGroup(_:didSelect:)(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  void (*v43)(_QWORD);
  id v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  int v52;
  char **v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t MetatypeMetadata;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  id v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _BYTE v74[4];
  int v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  _BYTE *v81;
  _BYTE *v82;
  _BYTE *v83;
  _BYTE *v84;
  _BYTE *v85;
  _BYTE *v86;
  _BYTE *v87;
  _BYTE *v88;
  _BYTE *v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  _BYTE *v93;
  _BYTE *v94;
  _BYTE *v95;
  _BYTE *v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(_QWORD);
  uint64_t ObjectType;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  ObjectType = swift_getObjectType();
  v90 = sub_100059788(&qword_1000D1D08);
  v4 = __chkstk_darwin(v90);
  v86 = &v74[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v85 = &v74[-v6];
  v7 = sub_100059788((uint64_t *)&unk_1000D1810);
  v8 = __chkstk_darwin(v7);
  v82 = &v74[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __chkstk_darwin(v8);
  v83 = &v74[-v11];
  v12 = __chkstk_darwin(v10);
  v84 = &v74[-v13];
  v14 = __chkstk_darwin(v12);
  v94 = &v74[-v15];
  v16 = __chkstk_darwin(v14);
  v81 = &v74[-v17];
  v18 = __chkstk_darwin(v16);
  v88 = &v74[-v19];
  v20 = __chkstk_darwin(v18);
  v89 = &v74[-v21];
  __chkstk_darwin(v20);
  v93 = &v74[-v22];
  v23 = type metadata accessor for UUID(0);
  v102 = *(_QWORD *)(v23 - 8);
  v24 = __chkstk_darwin(v23);
  v26 = &v74[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = __chkstk_darwin(v24);
  v80 = &v74[-v28];
  __chkstk_darwin(v27);
  v91 = &v74[-v29];
  v30 = type metadata accessor for Logger(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = __chkstk_darwin(v30);
  v97 = &v74[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = __chkstk_darwin(v32);
  v96 = &v74[-v35];
  v36 = __chkstk_darwin(v34);
  v95 = &v74[-v37];
  v38 = __chkstk_darwin(v36);
  v87 = &v74[-v39];
  __chkstk_darwin(v38);
  v41 = &v74[-v40];
  if (qword_1000D14D0 != -1)
    swift_once(&qword_1000D14D0, sub_10005E424);
  v42 = sub_100067F28(v30, (uint64_t)qword_1000D1C30);
  v43 = *(void (**)(_QWORD))(v31 + 16);
  v99 = v42;
  v100 = v43;
  v43(v41);
  v44 = a1;
  v45 = v31;
  v46 = v44;
  v47 = a2;
  v48 = v46;
  v49 = v47;
  v50 = Logger.logObject.getter(v49);
  v51 = static os_log_type_t.default.getter();
  v52 = v51;
  v53 = &selRef_setNavBar_;
  if (os_log_type_enabled(v50, v51))
  {
    v54 = swift_slowAlloc(42, -1);
    v78 = v45;
    v55 = v54;
    v76 = (_QWORD *)swift_slowAlloc(8, -1);
    v77 = swift_slowAlloc(96, -1);
    v103 = v77;
    *(_DWORD *)v55 = 136315906;
    v92 = v26;
    v104 = ObjectType;
    MetatypeMetadata = swift_getMetatypeMetadata(ObjectType);
    v57 = String.init<A>(describing:)(&v104, MetatypeMetadata);
    v79 = v23;
    v59 = v58;
    v104 = sub_100068064(v57, v58, &v103);
    v75 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v55 + 4, v55 + 12);
    swift_bridgeObjectRelease(v59);
    *(_WORD *)(v55 + 12) = 2080;
    v104 = sub_100068064(0xD00000000000001ELL, 0x8000000100090BA0, &v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v55 + 14, v55 + 22);
    *(_WORD *)(v55 + 22) = 2080;
    v60 = objc_msgSend(v48, "_identifier");
    v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    v98 = v30;
    v63 = v62;

    v104 = sub_100068064(v61, v63, &v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v55 + 24, v55 + 32);

    swift_bridgeObjectRelease(v63);
    *(_WORD *)(v55 + 32) = 2112;
    v104 = (uint64_t)v49;
    v64 = v49;
    v53 = &selRef_setNavBar_;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v55 + 34, v55 + 42);
    v65 = v76;
    *v76 = v49;

    v66 = v98;
    _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v75, "<%s: %s> group = %s | element = %@", (uint8_t *)v55, 0x2Au);
    v67 = sub_100059788(&qword_1000D1658);
    swift_arrayDestroy(v65, 1, v67);
    swift_slowDealloc(v65, -1, -1);
    v68 = v77;
    swift_arrayDestroy(v77, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v68, -1, -1);
    swift_slowDealloc(v55, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v78 + 8))(v41, v66);
  }
  else
  {

    (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v41, v30);
  }
  v69 = objc_msgSend(v48, v53[181]);
  v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
  v72 = v71;

  v73 = (char *)&loc_1000661F0 + dword_10006727C[sub_10006F1B0(v70, v72)];
  __asm { BR              X10 }
}

void AdaptiveTabBarController._tabElementGroup(_:didCustomizeDisplayOrder:)(uint64_t a1, uint64_t a2)
{
  sub_100069A20(a2);
}

id AdaptiveTabBarController.finishPresentation(_:animated:)(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v4;
  id v5;
  _QWORD v7[3];
  _BYTE v8[16];
  uint64_t v9;

  v9 = a1;
  v7[2] = a1;
  v4 = debug_assert(_:_:file:line:)(sub_100069C90, v8, sub_100069C98, v7, "/Library/Caches/com.apple.xbs/Sources/Home/HomeApp/AdaptiveChrome/AdaptiveTabBar/AdaptiveTabBarController.swift", 111, 2, 551);
  if (HUIsPhoneIdiom(v4))
  {
    v5 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    objc_msgSend(v5, "setOrientation:animated:", 1, 0);

  }
  return objc_msgSend(v2, "hu_dismissViewControllerAnimated:", a2 & 1);
}

id sub_10006759C(void *a1, id a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a2, "presentedViewController");
  v4 = objc_msgSend(a1, "naui_isDescendantOfViewController:", v3);

  return v4;
}

uint64_t sub_1000675F8(uint64_t a1, void *a2)
{
  Swift::String v4;
  uint64_t ObjectType;
  uint64_t WitnessTable;
  Swift::String v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v16 = 0;
  v17 = 0xE000000000000000;
  _StringGuts.grow(_:)(85);
  v4._object = (void *)0x8000000100090FF0;
  v4._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v4);
  ObjectType = swift_getObjectType();
  v15 = a1;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, ObjectType);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v15, ObjectType, WitnessTable);
  v7._countAndFlagsBits = 0xD000000000000036;
  v7._object = (void *)0x8000000100091010;
  String.append(_:)(v7);
  v8 = objc_msgSend(a2, "description");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12._countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v11);
  v13._countAndFlagsBits = 33;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  return v16;
}

Swift::Bool __swiftcall AdaptiveTabBarController.tabBarController(_:shouldSelect:)(UITabBarController _, UIViewController shouldSelect)
{
  return sub_100069CA0(shouldSelect.super.super.isa);
}

Swift::Void __swiftcall AdaptiveTabBarController.tabBarController(_:didSelect:)(UITabBarController _, UIViewController didSelect)
{
  sub_100069E68(didSelect.super.super.isa);
}

id AdaptiveTabBarController.tabBarController(_:animationControllerForTransitionFrom:to:)()
{
  return objc_msgSend(objc_allocWithZone((Class)HUPreloadedTransitionController), "init");
}

void AdaptiveTabBarController.didUpdateDashboarContext(dashboardContext:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  char *v12;
  id v13;
  NSObject *v14;
  int v15;
  uint64_t v16;
  uint64_t MetatypeMetadata;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  os_log_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  os_log_t v31;
  _QWORD *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D14D0 != -1)
    swift_once(&qword_1000D14D0, sub_10005E424);
  v9 = sub_100067F28(v5, (uint64_t)qword_1000D1C30);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  v10 = v2;
  v11 = a1;
  v12 = (char *)v10;
  v13 = v11;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, (os_log_type_t)v15))
  {
    v33 = v15;
    v35 = v6;
    v16 = swift_slowAlloc(42, -1);
    v32 = (_QWORD *)swift_slowAlloc(16, -1);
    v34 = swift_slowAlloc(64, -1);
    v36 = ObjectType;
    v37 = v34;
    *(_DWORD *)v16 = 136315906;
    MetatypeMetadata = swift_getMetatypeMetadata(ObjectType);
    v18 = String.init<A>(describing:)(&v36, MetatypeMetadata);
    v20 = v19;
    v36 = sub_100068064(v18, v19, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v16 + 4, v16 + 12);
    swift_bridgeObjectRelease(v20);
    *(_WORD *)(v16 + 12) = 2080;
    v36 = sub_100068064(0xD00000000000002BLL, 0x8000000100090C30, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v16 + 14, v16 + 22);
    *(_WORD *)(v16 + 22) = 2112;
    v21 = *(void **)&v12[OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext];
    v31 = v14;
    if (v21)
    {
      v36 = (uint64_t)v21;
      v22 = v21;
      v23 = v16 + 24;
      v24 = v16 + 32;
    }
    else
    {
      v24 = v16 + 32;
      v36 = 0;
      v23 = v16 + 24;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v23, v24);
    v25 = v32;
    *v32 = v21;

    *(_WORD *)(v16 + 32) = 2112;
    v36 = (uint64_t)v13;
    v26 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v16 + 34, v16 + 42);
    v25[1] = v13;

    v27 = v31;
    _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v33, "<%s: %s> Changing context from %@ to %@", (uint8_t *)v16, 0x2Au);
    v28 = sub_100059788(&qword_1000D1658);
    swift_arrayDestroy(v25, 2, v28);
    swift_slowDealloc(v25, -1, -1);
    v29 = v34;
    swift_arrayDestroy(v34, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v5);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v30 = v13;
  sub_10005F5B4(v13);
}

void sub_100067D28(void *a1)
{
  AdaptiveTabBarController.didUpdateDashboarContext(dashboardContext:)(a1);
}

void AdaptiveTabBarController._uip_tabBarController(_:tab:operationForAcceptingItemsFrom:)(uint64_t a1, void *a2, void *a3)
{
  sub_10006A184(a2, a3);
}

void AdaptiveTabBarController._uip_tabBarController(_:tab:acceptItemsFrom:)(int a1, void *a2, id a3)
{
  sub_10006A420(a2, a3);
}

uint64_t sub_100067E84()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v4;

  type metadata accessor for Logger(0);
  __chkstk_darwin();
  v1 = (char *)&v4 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for OSSignposter(0);
  sub_10006AB04(v2, qword_1000D36A0);
  sub_100067F28(v2, (uint64_t)qword_1000D36A0);
  type metadata accessor for DataModel(0);
  static DataModel.modelLogger.getter();
  return OSSignposter.init(logger:)(v1);
}

uint64_t sub_100067F28(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_100067F40@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100089AB0);
  v5 = swift_getKeyPath(&unk_100089AD8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100067FBC(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100089AB0);
  v5 = swift_getKeyPath(&unk_100089AD8);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t type metadata accessor for AdaptiveTabBarController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D1D38;
  if (!qword_1000D1D38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AdaptiveTabBarController);
  return result;
}

uint64_t sub_100068064(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_100068134(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_10005BBA0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_10005BBA0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_10005A0DC(v12);
  return v7;
}

uint64_t sub_100068134(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1000682EC(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_1000682EC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_100068380(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_100068558(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_100068558(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_100068380(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_1000684F4(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return &_swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_1000684F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return &_swiftEmptyArrayStorage;
  v4 = sub_100059788((uint64_t *)&unk_1000D2190);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_100068558(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100059788((uint64_t *)&unk_1000D2190);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000686AC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000686D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1000D1CF4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10006AB78;
  return sub_10006573C(v2, v3);
}

Swift::Int sub_100068724(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::Int result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100059788(&qword_1000D2180);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_34;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_36;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_36:
          swift_release(v5);
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v14 >= v37)
              goto LABEL_36;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v14 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      v34 = v33;
    }
    Hasher.init(_seed:)(v40, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v40, v32, v31);
    result = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

void sub_100068A30(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_100074340(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100068B8C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_100068724(v15, a4 & 1);
  v20 = sub_100074340(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

id sub_100068B8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100059788(&qword_1000D2180);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_100068D3C(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  NSString v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  void *v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  Class isa;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  id v34;
  NSString v35;
  char v36;
  uint64_t v40;

  v13 = 0xEA00000000007075;
  v40 = 0x6F72672E656D6F68;
  if (a3)
  {
    v14 = a3;
    if (!a1)
      goto LABEL_10;
LABEL_8:
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(a5);
    v15 = 0;
    goto LABEL_11;
  }
  if (a1)
  {
    if (a1 == 1)
      v14 = 0xEA00000000007365;
    else
      v14 = 0xE500000000000000;
    goto LABEL_8;
  }
  v14 = 0xEA00000000007075;
LABEL_10:
  v16 = (void *)objc_opt_self(UIImage);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a5);
  v17 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v16, "hu_systemTabImageWithNamed:filled:", v17, 0);

LABEL_11:
  v18 = objc_allocWithZone((Class)_UITabElementGroup);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a5);
  v21 = objc_msgSend(v18, "initWithIdentifier:title:image:", v19, v20, v15);

  v22 = *(_QWORD *)(a8 + 16);
  if (v22)
  {
    swift_bridgeObjectRetain(a8);
    for (i = 0; i != v22; ++i)
    {
      v25 = *(void **)(a8 + 8 * i + 32);
      if (v25)
      {
        v26 = v25;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
        v28 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v27 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v28 >= v27 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
        v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
        specialized Array._endMutation()(v24);
      }
    }
    swift_bridgeObjectRelease(a8);
  }
  swift_bridgeObjectRelease(a8);
  sub_10005D394(0, (unint64_t *)&qword_1000D2138, _UITab_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(&_swiftEmptyArrayStorage);
  objc_msgSend(v21, "_setChildren:", isa);

  if (a1)
  {
    if (a1 == 1)
      v30 = 0x69726F6765746163;
    else
      v30 = 0x736D6F6F72;
    if (a1 == 1)
      v31 = 0xEA00000000007365;
    else
      v31 = 0xE500000000000000;
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, 0x6F72672E656D6F68, 0xEA00000000007075, 0);
    swift_bridgeObjectRelease(v31);
    if ((v32 & 1) != 0)
      v33 = 1;
    else
      v33 = 2;
  }
  else
  {
    swift_bridgeObjectRelease(0xEA00000000007075);
    v33 = 1;
  }
  objc_msgSend(v21, "_setSidebarAppearance:", v33, a6, a7);
  objc_msgSend(v21, "_setDelegate:", a9);
  v34 = v21;
  v35 = String._bridgeToObjectiveC()();
  objc_msgSend(v34, "setAccessibilityIdentifier:", v35);

  if (a1)
  {
    if (a1 != 1)
    {
      v36 = 1;
      v13 = 0xE500000000000000;
      goto LABEL_35;
    }
    v13 = 0xEA00000000007365;
    v40 = 0x69726F6765746163;
  }
  v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v13, 0x736D6F6F72, 0xE500000000000000, 0);
LABEL_35:
  swift_bridgeObjectRelease(v13);
  objc_msgSend(v34, "_setAllowsReordering:", v36 & 1);
  return v34;
}

void *sub_10006914C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;

  v3 = v2;
  v31 = a2;
  v5 = type metadata accessor for UUID(0);
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  __chkstk_darwin();
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v8; v8 = _CocoaArrayWrapper.endIndex.getter(v24))
  {
    v26[1] = v3;
    v27 = a1;
    v28 = a1 & 0xC000000000000001;
    v9 = 4;
    while (1)
    {
      v3 = v9 - 4;
      v10 = v28 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, a1) : *(id *)(a1 + 8 * v9);
      v11 = v10;
      v12 = v9 - 3;
      if (__OFADD__(v3, 1))
        break;
      v13 = v8;
      v14 = objc_msgSend(v10, "_identifier");
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v17 = v16;

      v18 = objc_msgSend(v31, "uniqueIdentifier");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v19 = UUID.uuidString.getter();
      v21 = v20;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v30);
      if (v15 == v19 && v17 == v21)
      {
        swift_bridgeObjectRelease(v27);
        swift_bridgeObjectRelease(v17);
LABEL_16:
        swift_bridgeObjectRelease(v17);
        return v11;
      }
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v19, v21, 0);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v17);
      if ((v22 & 1) != 0)
      {
        v17 = v27;
        goto LABEL_16;
      }

      ++v9;
      v8 = v13;
      v23 = v12 == v13;
      a1 = v27;
      if (v23)
      {
        swift_bridgeObjectRelease(v27);
        return 0;
      }
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t sub_100069370(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  void *v21;

  if ((unint64_t)a1 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v3)
  {
    for (i = 4; ; ++i)
    {
      v5 = i - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
      v7 = i - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_19;
LABEL_9:
      v21 = v6;
      v8 = objc_msgSend(v6, "_identifier");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v11 = v10;

      v12 = objc_msgSend(a2, "_identifier");
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;

      if (v9 == v13 && v11 == v15)
      {
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease(v11);
LABEL_18:
        v3 = (uint64_t)v21;
        swift_bridgeObjectRelease(v11);
        return v3;
      }
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v13, v15, 0);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v15);
      if ((v17 & 1) != 0)
      {
        v11 = a1;
        goto LABEL_18;
      }

      if (v7 == v3)
      {
        swift_bridgeObjectRelease(a1);
        return 0;
      }
    }
    v6 = *(id *)(a1 + 8 * i);
    v7 = i - 3;
    if (!__OFADD__(v5, 1))
      goto LABEL_9;
LABEL_19:
    __break(1u);
LABEL_20:
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v18);
  }
  swift_bridgeObjectRelease(a1);
  return v3;
}

void *sub_100069530(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;

  v3 = v2;
  v30 = a2;
  v5 = type metadata accessor for UUID(0);
  v28 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  __chkstk_darwin();
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v8; v8 = _CocoaArrayWrapper.endIndex.getter(v22))
  {
    v24 = v3;
    v25 = v8;
    v26 = a1;
    v27 = a1 & 0xC000000000000001;
    for (i = 4; ; ++i)
    {
      v3 = i - 4;
      v10 = v27 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1) : *(id *)(a1 + 8 * i);
      v11 = v10;
      v12 = i - 3;
      if (__OFADD__(v3, 1))
        break;
      v13 = objc_msgSend(v10, "uniqueIdentifier");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v14 = UUID.uuidString.getter();
      v16 = v15;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v29);
      v17 = objc_msgSend(v30, "_identifier");
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v20 = v19;

      if (v14 == v18 && v16 == v20)
      {
        swift_bridgeObjectRelease(v26);
        swift_bridgeObjectRelease(v16);
LABEL_15:
        swift_bridgeObjectRelease(v16);
        return v11;
      }
      v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v18, v20, 0);
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v20);
      if ((v21 & 1) != 0)
      {
        v16 = v26;
        goto LABEL_15;
      }

      a1 = v26;
      if (v12 == v25)
      {
        swift_bridgeObjectRelease(v26);
        return 0;
      }
    }
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v22 = a1;
    else
      v22 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(a1);
  return 0;
}

void sub_10006974C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[5];
  void *v29;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = sub_10005D394(0, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
    v7 = sub_10006AA60();
    v8 = Set.Iterator.init(_cocoa:)(v28, v5, v6, v7);
    v3 = v28[0];
    v26 = v28[1];
    v9 = v28[2];
    v10 = v28[3];
    v11 = v28[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v26 = a1 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(a1 + 56);
    v8 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v10 = 0;
  }
  v25 = (unint64_t)(v9 + 64) >> 6;
  if (v3 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v11)
    {
      v15 = (v11 - 1) & v11;
      v16 = __clz(__rbit64(v11)) | (v10 << 6);
      v17 = v10;
      goto LABEL_32;
    }
    v22 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v22 >= v25)
      goto LABEL_35;
    v23 = *(_QWORD *)(v26 + 8 * v22);
    v17 = v10 + 1;
    if (!v23)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v25)
        goto LABEL_35;
      v23 = *(_QWORD *)(v26 + 8 * v17);
      if (!v23)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v25)
          goto LABEL_35;
        v23 = *(_QWORD *)(v26 + 8 * v17);
        if (!v23)
        {
          v17 = v10 + 4;
          if (v10 + 4 >= v25)
            goto LABEL_35;
          v23 = *(_QWORD *)(v26 + 8 * v17);
          if (!v23)
          {
            v17 = v10 + 5;
            if (v10 + 5 >= v25)
              goto LABEL_35;
            v23 = *(_QWORD *)(v26 + 8 * v17);
            if (!v23)
            {
              v24 = v10 + 6;
              while (v25 != v24)
              {
                v23 = *(_QWORD *)(v26 + 8 * v24++);
                if (v23)
                {
                  v17 = v24 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_10005ACA4(v3);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v15 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_32:
    v21 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    if (!v21)
      goto LABEL_35;
    while (1)
    {
      objc_msgSend(a2, "addAccessory:", v21);

      v10 = v17;
      v11 = v15;
      if ((v3 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v18 = __CocoaSet.Iterator.next()(v8);
      if (v18)
      {
        v19 = v18;
        v27 = v18;
        v20 = sub_10005D394(0, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
        swift_unknownObjectRetain(v19);
        swift_dynamicCast(&v29, &v27, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
        v21 = v29;
        swift_unknownObjectRelease(v19);
        v17 = v10;
        v15 = v11;
        if (v21)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

void sub_100069A20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char *v24;

  v2 = sub_100059788((uint64_t *)&unk_1000D1810);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v24 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v21 - v9;
  v11 = objc_msgSend((id)objc_opt_self(HFHomeKitDispatcher), "sharedDispatcher");
  v12 = objc_msgSend(v11, "home");

  if (v12)
  {
    v13 = *(_QWORD *)(a1 + 16);
    if (v13)
    {
      v22 = v12;
      swift_bridgeObjectRetain(a1);
      v23 = a1;
      v14 = (_QWORD *)(a1 + 40);
      v15 = (char *)_swiftEmptyArrayStorage;
      do
      {
        v16 = *(v14 - 1);
        v17 = *v14;
        swift_bridgeObjectRetain(*v14);
        UUID.init(uuidString:)(v16, v17);
        swift_bridgeObjectRelease(v17);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
        {
          sub_10005D3D4((uint64_t)v4, (uint64_t *)&unk_1000D1810);
        }
        else
        {
          v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
          v18(v10, v4, v5);
          v18(v24, v10, v5);
          if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
            v15 = (char *)sub_100054D10(0, *((_QWORD *)v15 + 2) + 1, 1, (unint64_t)v15);
          v20 = *((_QWORD *)v15 + 2);
          v19 = *((_QWORD *)v15 + 3);
          if (v20 >= v19 >> 1)
            v15 = (char *)sub_100054D10(v19 > 1, v20 + 1, 1, (unint64_t)v15);
          *((_QWORD *)v15 + 2) = v20 + 1;
          v18(&v15[((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v20], v24, v5);
        }
        v14 += 2;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease(v23);
      v12 = v22;
    }
    else
    {
      v15 = (char *)_swiftEmptyArrayStorage;
    }
    HMHome.sidebarRoomsSortOrder.setter(v15);

  }
}

id sub_100069C90()
{
  uint64_t v0;

  return sub_10006759C(*(void **)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_100069C98()
{
  uint64_t v0;

  return sub_1000675F8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100069CA0(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  id v4;
  void *v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  char v20;
  uint64_t v22;

  v2 = v1;
  v4 = objc_msgSend(v1, "selectedViewController");
  if (v4)
  {
    v5 = v4;
    sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
    v6 = a1;
    v7 = static NSObject.== infix(_:_:)();

  }
  else
  {
    v7 = 0;
  }
  v8 = OBJC_IVAR___HOAdaptiveTabBarController_scrollToTop;
  v2[OBJC_IVAR___HOAdaptiveTabBarController_scrollToTop] = v7 & 1;
  v9 = objc_opt_self(UINavigationController);
  v10 = swift_dynamicCastObjCClass(a1, v9);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = a1;
    v13 = objc_msgSend(v11, "viewControllers");
    v14 = sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
    v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

    if ((unint64_t)v15 >> 62)
    {
      if (v15 < 0)
        v22 = v15;
      else
        v22 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v15);
      v16 = _CocoaArrayWrapper.endIndex.getter(v22);
      swift_bridgeObjectRelease(v15);
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v15);
    if (v16 == 1 && (v17 = objc_msgSend(v2, "selectedViewController")) != 0)
    {
      v18 = v17;
      v19 = v12;
      v20 = static NSObject.== infix(_:_:)();

      v12 = v18;
    }
    else
    {
      v20 = 0;
    }

    v2[v8] = v20 & 1;
  }
  return 1;
}

void sub_100069E68(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t MetatypeMetadata;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D14D0 != -1)
    swift_once(&qword_1000D14D0, sub_10005E424);
  v9 = sub_100067F28(v5, (uint64_t)qword_1000D1C30);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  v10 = a1;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(32, -1);
    v29 = v2;
    v14 = v13;
    v26 = (_QWORD *)swift_slowAlloc(8, -1);
    v27 = swift_slowAlloc(64, -1);
    v30 = v27;
    v31 = ObjectType;
    *(_DWORD *)v14 = 136315650;
    MetatypeMetadata = swift_getMetatypeMetadata(ObjectType);
    v28 = v6;
    v16 = String.init<A>(describing:)(&v31, MetatypeMetadata);
    v18 = v17;
    v31 = sub_100068064(v16, v17, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease(v18);
    *(_WORD *)(v14 + 12) = 2080;
    v31 = sub_100068064(0xD00000000000001ELL, 0x8000000100090FB0, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v14 + 14, v14 + 22);
    *(_WORD *)(v14 + 22) = 2112;
    v31 = (uint64_t)v10;
    v19 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v14 + 24, v14 + 32);
    v20 = v26;
    *v26 = v10;

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "<%s: %s> %@", (uint8_t *)v14, 0x20u);
    v21 = sub_100059788(&qword_1000D1658);
    swift_arrayDestroy(v20, 1, v21);
    swift_slowDealloc(v20, -1, -1);
    v22 = v27;
    swift_arrayDestroy(v27, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    v23 = v14;
    v2 = v29;
    swift_slowDealloc(v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v5);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_100063C8C();
  v24 = OBJC_IVAR___HOAdaptiveTabBarController_scrollToTop;
  if (*(_BYTE *)(v2 + OBJC_IVAR___HOAdaptiveTabBarController_scrollToTop) == 1)
  {
    v25 = _s7HomeApp24AdaptiveTabBarControllerC18dashboardNavigatorSo011HUDashboardH0_pSgvg_0();
    objc_msgSend(v25, "scrollToDefaultPositionInCurrentContextAnimated:", 1);

  }
  *(_BYTE *)(v2 + v24) = 0;
}

void sub_10006A184(void *a1, void *a2)
{
  uint64_t v2;
  void *v4;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[2];
  __int128 v23;
  __int128 v24;

  v4 = *(void **)(v2 + OBJC_IVAR___HOAdaptiveTabBarController_roomsElements);
  if (!v4)
    return;
  v6 = objc_msgSend(v4, "_children");
  v7 = sub_10005D394(0, (unint64_t *)&qword_1000D2138, _UITab_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  v9 = a1;
  v10 = (void *)sub_100069370(v8, v9);
  swift_bridgeObjectRelease(v8);

  if (!v10)
    return;

  v11 = objc_msgSend(a2, "items");
  v12 = sub_10005D394(0, &qword_1000D2118, UIDragItem_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  if (!((unint64_t)v13 >> 62))
  {
    if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_19:
    swift_bridgeObjectRelease(v13);
    v23 = 0u;
    v24 = 0u;
LABEL_20:
    sub_10005D3D4((uint64_t)&v23, &qword_1000D2120);
    return;
  }
  if (v13 < 0)
    v20 = v13;
  else
    v20 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v21 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v13);
  if (!v21)
    goto LABEL_19;
LABEL_5:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
  }
  else
  {
    if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v14 = *(id *)(v13 + 32);
  }
  v15 = v14;
  swift_bridgeObjectRelease(v13);
  v16 = objc_msgSend(v15, "localObject");

  if (v16)
  {
    _bridgeAnyObjectToAny(_:)(v22, v16);
    swift_unknownObjectRelease(v16);
  }
  else
  {
    memset(v22, 0, sizeof(v22));
  }
  sub_10006AA18((uint64_t)v22, (uint64_t)&v23);
  if (!*((_QWORD *)&v24 + 1))
    goto LABEL_20;
  v17 = sub_100059788(&qword_1000D2128);
  if ((swift_dynamicCast(v22, &v23, (char *)&type metadata for Any + 8, v17, 6) & 1) != 0)
  {
    swift_unknownObjectRelease(*(_QWORD *)&v22[0]);
    v18 = objc_msgSend((id)objc_opt_self(HFHomeKitDispatcher), "sharedDispatcher");
    v19 = objc_msgSend(v18, "home");

    if (v19)
    {
      objc_msgSend(v19, "hf_currentUserIsAdministrator");

    }
  }
}

void sub_10006A420(void *a1, id a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD v30[2];
  __int128 v31;
  __int128 v32;

  v3 = objc_msgSend(a2, "items");
  v4 = sub_10005D394(0, &qword_1000D2118, UIDragItem_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if (!((unint64_t)v5 >> 62))
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease(v5);
    v31 = 0u;
    v32 = 0u;
LABEL_21:
    sub_10005D3D4((uint64_t)&v31, &qword_1000D2120);
    return;
  }
  if (v5 < 0)
    v28 = v5;
  else
    v28 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v29 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v5);
  if (!v29)
    goto LABEL_20;
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v6 = *(id *)(v5 + 32);
  }
  v7 = v6;
  swift_bridgeObjectRelease(v5);
  v8 = objc_msgSend(v7, "localObject");

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)(v30, v8);
    swift_unknownObjectRelease(v8);
  }
  else
  {
    memset(v30, 0, sizeof(v30));
  }
  sub_10006AA18((uint64_t)v30, (uint64_t)&v31);
  if (!*((_QWORD *)&v32 + 1))
    goto LABEL_21;
  v9 = sub_100059788(&qword_1000D2128);
  if ((swift_dynamicCast(v30, &v31, (char *)&type metadata for Any + 8, v9, 6) & 1) != 0)
  {
    v10 = *(void **)&v30[0];
    v11 = objc_msgSend((id)objc_opt_self(HFHomeKitDispatcher), "sharedDispatcher");
    v12 = objc_msgSend(v11, "home");

    if (v12)
    {
      v13 = objc_msgSend(v12, "rooms");
      v14 = sub_10005D394(0, &qword_1000D1650, HMRoom_ptr);
      v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

      v16 = a1;
      v17 = sub_100069530(v15, v16);
      swift_bridgeObjectRelease(v15);

      if (v17)
      {
        v18 = objc_msgSend(objc_allocWithZone((Class)HFRoomItem), "initWithHome:room:", v12, v17);
        v19 = objc_msgSend(v18, "room");
        v20 = objc_msgSend(v18, "home");
        v21 = objc_msgSend(objc_allocWithZone((Class)HFRoomBuilder), "initWithExistingObject:inHome:", v19, v20);

        v22 = objc_msgSend(v10, "accessories");
        v23 = sub_10005D394(0, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
        v24 = sub_10006AA60();
        v25 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v22, v23, v24);

        v26 = v21;
        sub_10006974C(v25, v26);
        swift_bridgeObjectRelease(v25);

        v27 = objc_msgSend(v26, "commitItem");
        swift_unknownObjectRelease(v10);

      }
      else
      {
        swift_unknownObjectRelease(v10);

      }
    }
    else
    {
      swift_unknownObjectRelease(v10);
    }
  }
}

void *sub_10006A7D4()
{
  return &protocol witness table for ObservableObjectPublisher;
}

id sub_10006A7E0@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = AdaptiveTabBarController.baseController.getter();
  *a1 = result;
  return result;
}

void sub_10006A808(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController);
  *(_QWORD *)(*a2 + OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController) = *a1;
  v3 = v2;

}

uint64_t sub_10006A844()
{
  return type metadata accessor for AdaptiveTabBarController(0);
}

void sub_10006A84C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = "\b";
  v4[3] = "\b";
  v4[4] = "\b";
  v4[5] = "\b";
  v4[6] = &unk_100089BA8;
  sub_10006A8F4();
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[9] = "\b";
    v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[11] = &unk_100089BA8;
    v4[12] = &unk_100089BA8;
    swift_updateClassMetadata2(a1, 256, 13, v4, a1 + 80);
  }
}

void sub_10006A8F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1000D1D48)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1000D1D48);
  }
}

uint64_t sub_10006A94C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006A978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1000D1CF4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10006A9C8;
  return sub_10006573C(v2, v3);
}

uint64_t sub_10006A9C8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_10006AA18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100059788(&qword_1000D2120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10006AA60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2130;
  if (!qword_1000D2130)
  {
    v1 = sub_10005D394(255, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2130);
  }
  return result;
}

uint64_t sub_10006AAB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10006AAC8()
{
  uint64_t v0;

  return swift_continuation_throwingResume(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10006AAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006AAE0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10006AAE8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1000621A8(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), a2);
}

uint64_t *sub_10006AB04(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

void sub_10006AB64(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_10006AAE8(a1, a2);
}

uint64_t _UITab.id.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, "_identifier");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v2;
}

void *sub_10006ABD0()
{
  return &protocol witness table for String;
}

void sub_10006ABDC(uint64_t *a1@<X8>)
{
  id *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*v1, "_identifier");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

id sub_10006AC30@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = *a1;
  return v2;
}

id sub_10006AC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Class isa;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  NSString v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;

  if (*(_QWORD *)(a2 + 24))
  {
    v4 = sub_10006AF18((__int128 *)a2, (uint64_t)v36);
    SidebarTabElementBuilder.id.getter(v4);
    v6 = v5;
    SidebarTabElementBuilder.title.getter();
    v8 = v7;
    v9 = (void *)SidebarTabElementBuilder.tabIcon.getter();
    v10 = objc_allocWithZone((Class)_UITabElementGroup);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
    v13 = objc_msgSend(v10, "initWithIdentifier:title:image:", v11, v12, v9);

    v14 = v37;
    v15 = v38;
    sub_10005A0B8(v36, v37);
    v16 = sub_10006AF30();
    v17 = Sequence.compactMap<A>(_:)(sub_10006AC30, 0, v14, v16, v15);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v17);
    objc_msgSend(v13, "_setChildren:", isa);

    objc_msgSend(v13, "_setDelegate:", a3);
    objc_msgSend(v13, "_setAllowsReordering:", SidebarTabElementBuilder.allowsReordering.getter(objc_msgSend(v13, "_setSelectedElement:", 0)) & 1);
    v19 = v13;
    SidebarTabElementBuilder.accessibilityIdentifier.getter();
    v21 = v20;
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21);
    objc_msgSend(v19, "setAccessibilityIdentifier:", v22);

    sub_10005A0DC(v36);
  }
  else
  {
    ((void (*)(void))SidebarTabElementBuilder.id.getter)();
    v24 = v23;
    SidebarTabElementBuilder.title.getter();
    v26 = v25;
    v27 = (void *)SidebarTabElementBuilder.tabIcon.getter();
    v28 = objc_allocWithZone((Class)_UITabElement);
    v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v24);
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
    v31 = objc_msgSend(v28, "initWithIdentifier:title:image:", v29, v30, v27);

    v19 = v31;
    SidebarTabElementBuilder.accessibilityIdentifier.getter();
    v33 = v32;
    v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v33);
    objc_msgSend(v19, "setAccessibilityIdentifier:", v34);

  }
  return v19;
}

uint64_t sub_10006AF18(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_10006AF30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2138;
  if (!qword_1000D2138)
  {
    v1 = objc_opt_self(_UITab);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000D2138);
  }
  return result;
}

id sub_10006AF6C(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;
  id v4;
  id result;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;

  v2 = v1;
  v3 = objc_msgSend(objc_allocWithZone((Class)HUSceneActionEditorViewController), "initWithActionSetBuilder:mode:", a1, 2);
  v4 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v3);
  result = objc_msgSend(v2, "hu_presentPreloadableViewController:animated:", v4, 1);
  if (result)
  {
    v6 = result;
    v7 = (void *)objc_opt_self(NAFuture);
    v8 = v6;
    v9 = objc_msgSend(v7, "futureWithResult:", v3);
    v10 = objc_msgSend(v9, "asGeneric");

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id SidebarTabElementBuilder.viewController.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  int v5;
  id v7;
  id v8;
  Class isa;
  id v10;
  Class *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  id result;
  uint64_t v17;

  v0 = type metadata accessor for SidebarTabElementBuilder.Kind(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  SidebarTabElementBuilder.kind.getter(v2);
  v5 = (*(uint64_t (**)(_BYTE *, uint64_t))(v1 + 88))(v4, v0);
  if (v5 == enum case for SidebarTabElementBuilder.Kind.category(_:)
    || v5 == enum case for SidebarTabElementBuilder.Kind.room(_:))
  {
    (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v4, v0);
    goto LABEL_7;
  }
  if (v5 == enum case for SidebarTabElementBuilder.Kind.automation(_:))
  {
    (*(void (**)(_BYTE *, uint64_t))(v1 + 96))(v4, v0);
    v11 = (Class *)HUTriggerListViewController_ptr;
    if (!*v4)
      v11 = (Class *)HUAboutResidentDeviceViewController_ptr;
    return objc_msgSend(objc_allocWithZone(*v11), "init");
  }
  if (v5 == enum case for SidebarTabElementBuilder.Kind.home(_:))
  {
LABEL_7:
    v7 = objc_msgSend((id)objc_opt_self(HFHomeKitDispatcher), "sharedDispatcher");
    v8 = objc_msgSend(v7, "home");

    if (v8)
    {
      type metadata accessor for DashboardContext(0);
      isa = (Class)dispatch thunk of static DashboardContext.homeDashboard(for:)(v8);
      v10 = objc_msgSend(objc_allocWithZone((Class)HUDashboardViewController), "initWithContext:delegate:", isa, 0);

LABEL_9:
      return v10;
    }
    return 0;
  }
  if (v5 == enum case for SidebarTabElementBuilder.Kind.learn(_:))
  {
    v12 = objc_msgSend((id)objc_opt_self(HFStoreLocaleAvailability), "getAvailabilityDictionary");
    v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v12, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    v14 = sub_10006B2FC(v13);
    swift_bridgeObjectRelease(v13);
    if (v14)
    {
      v15 = objc_allocWithZone((Class)HODiscoverWebViewController);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v14);
      v10 = objc_msgSend(v15, "initWithLocalizationDictionary:", isa);
      goto LABEL_9;
    }
    return 0;
  }
  result = (id)_diagnoseUnexpectedEnumCase<A>(type:)(v0, v0);
  __break(1u);
  return result;
}

unint64_t sub_10006B2FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  unint64_t result;
  int64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[32];
  _QWORD v40[2];
  uint64_t v41;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100059788(&qword_1000D2320);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v34 = v1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v1 + 64);
  v7 = &v41;
  v33 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain(v1);
  v9 = 0;
  v10 = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v6)
    {
      v36 = (v6 - 1) & v6;
      v17 = __clz(__rbit64(v6)) | (v9 << 6);
      v18 = v9;
    }
    else
    {
      v19 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_37;
      if (v19 >= v33)
      {
LABEL_33:
        sub_10005ACA4(v1);
        return (unint64_t)v3;
      }
      v20 = *(_QWORD *)(v34 + 8 * v19);
      v18 = v9 + 1;
      if (!v20)
      {
        v18 = v9 + 2;
        if (v9 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v34 + 8 * v18);
        if (!v20)
        {
          v18 = v9 + 3;
          if (v9 + 3 >= v33)
            goto LABEL_33;
          v20 = *(_QWORD *)(v34 + 8 * v18);
          if (!v20)
          {
            v18 = v9 + 4;
            if (v9 + 4 >= v33)
              goto LABEL_33;
            v20 = *(_QWORD *)(v34 + 8 * v18);
            if (!v20)
            {
              v21 = v9 + 5;
              if (v9 + 5 >= v33)
                goto LABEL_33;
              v20 = *(_QWORD *)(v34 + 8 * v21);
              if (!v20)
              {
                while (1)
                {
                  v18 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_38;
                  if (v18 >= v33)
                    goto LABEL_33;
                  v20 = *(_QWORD *)(v34 + 8 * v18);
                  ++v21;
                  if (v20)
                    goto LABEL_26;
                }
              }
              v18 = v9 + 5;
            }
          }
        }
      }
LABEL_26:
      v36 = (v20 - 1) & v20;
      v17 = __clz(__rbit64(v20)) + (v18 << 6);
    }
    v22 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v17);
    v23 = *v22;
    v24 = v22[1];
    sub_10005BBA0(*(_QWORD *)(v1 + 56) + 32 * v17, (uint64_t)v7);
    v40[0] = v23;
    v40[1] = v24;
    sub_10005BBA0((uint64_t)v7, (uint64_t)v39);
    swift_bridgeObjectRetain_n(v24, 2);
    sub_10006B66C((uint64_t)v40);
    if (!swift_dynamicCast(&v37, v39, v10, &type metadata for String, 6))
    {
      v37 = 0;
      v38 = 0;
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v38);
      sub_10005ACA4(v1);
      swift_release(v3);
      return 0;
    }
    v35 = v18;
    v26 = v37;
    v25 = v38;
    result = sub_100074340(v23, v24);
    if ((v27 & 1) != 0)
    {
      v11 = v10;
      v12 = 16 * result;
      v13 = v7;
      v14 = v1;
      v15 = (uint64_t *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease(v15[1]);
      *v15 = v23;
      v15[1] = v24;
      v16 = (_QWORD *)(v3[7] + v12);
      v10 = v11;
      result = swift_bridgeObjectRelease(v16[1]);
      *v16 = v26;
      v16[1] = v25;
      v1 = v14;
      v7 = v13;
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v28 = (uint64_t *)(v3[6] + 16 * result);
    *v28 = v23;
    v28[1] = v24;
    v29 = (_QWORD *)(v3[7] + 16 * result);
    *v29 = v26;
    v29[1] = v25;
    v30 = v3[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_36;
    v3[2] = v32;
LABEL_8:
    v9 = v35;
    v6 = v36;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_10006B66C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100059788(&qword_1000D2328);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006B6AC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  swift_unknownObjectRetain(a2);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

  return swift_unknownObjectRelease(a2);
}

uint64_t sub_10006B944(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char a6, uint64_t (*a7)(uint64_t, uint64_t, id))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void *v18;

  if (a3)
  {
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v14 = v13;
  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  type metadata accessor for DashboardContext(0);
  v15 = a4;
  v16 = a5;
  v17 = a1;
  v18 = (void *)a7(v12, v14, v15);
  sub_10006BF24(v18, v16, 0, a6);

  return swift_bridgeObjectRelease(v14);
}

Swift::String_optional __swiftcall HOAppNavigator.dashboardContextTypeDescriptionForAnalytics()()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  Swift::String_optional result;

  v1 = objc_msgSend(v0, "currentViewController");
  v2 = objc_opt_self(HUDashboardViewController);
  v3 = (void *)swift_dynamicCastObjCClass(v1, v2);
  if (v3)
  {
    v4 = objc_msgSend(v3, "context");
    v5 = dispatch thunk of DashboardContext.typeDescriptionForAnalytics.getter();
    v7 = v6;

  }
  else
  {

    v5 = 0;
    v7 = 0;
  }
  v8 = v5;
  v9 = v7;
  result.value._object = v9;
  result.value._countAndFlagsBits = v8;
  return result;
}

void sub_10006BBF0(int a1, int a2, id a3, uint64_t a4, char a5)
{
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD v13[5];
  uint64_t v14;

  v6 = objc_msgSend(a3, "hu_pushPreloadableViewController:animated:waitForPreload:", a4, a5 & 1, 1);
  if (v6)
  {
    v7 = v6;
    v8 = swift_allocObject(&unk_1000BAD28, 24, 7);
    *(_QWORD *)(v8 + 16) = a3;
    v13[4] = sub_10006C9DC;
    v14 = v8;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_10004E4C8;
    v13[3] = &unk_1000BAD40;
    v9 = _Block_copy(v13);
    v10 = v14;
    v11 = a3;
    swift_release(v10);
    v12 = objc_msgSend(v7, "addCompletionBlock:", v9);
    _Block_release(v9);

  }
  else
  {
    __break(1u);
  }
}

void sub_10006BCEC(void *a1, int a2, id a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  objc_class *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  objc_class *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Class isa;
  uint64_t v20;

  v5 = objc_msgSend(a3, "viewControllers");
  v6 = sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v16 = v7;
    else
      v16 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v7);
  if (v8 < 3)
    return;
  v9 = objc_msgSend(a3, "viewControllers");
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v6);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v17 = v10;
    else
      v17 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v18 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(v10);
    if (v18)
      goto LABEL_6;
LABEL_21:
    swift_bridgeObjectRelease(v10);
    return;
  }
  if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_21;
LABEL_6:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v11 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
  }
  else
  {
    if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v11 = (objc_class *)*(id *)(v10 + 32);
  }
  isa = v11;
  swift_bridgeObjectRelease(v10);
  if (a1)
  {
    v12 = sub_100059788((uint64_t *)&unk_1000D1CD0);
    v13 = swift_allocObject(v12, 48, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100089C20;
    *(_QWORD *)(v13 + 32) = isa;
    *(_QWORD *)(v13 + 40) = a1;
    v20 = v13;
    specialized Array._endMutation()(v13);
    v14 = a1;
    v15 = isa;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v20);
    objc_msgSend(a3, "setViewControllers:", isa);

  }
}

void sub_10006BF24(void *a1, id a2, char a3, char a4)
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  unsigned int v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  _QWORD aBlock[5];
  uint64_t v37;

  v8 = objc_msgSend(a2, "viewControllers");
  v9 = sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if (!((unint64_t)v10 >> 62))
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease(v10);
    return;
  }
  if (v10 < 0)
    v33 = v10;
  else
    v33 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v34 = _CocoaArrayWrapper.endIndex.getter(v33);
  swift_bridgeObjectRelease(v10);
  if (!v34)
    goto LABEL_20;
LABEL_3:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
  }
  else
  {
    if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v11 = *(id *)(v10 + 32);
  }
  v35 = v11;
  swift_bridgeObjectRelease(v10);
  v12 = objc_opt_self(HUDashboardViewController);
  v13 = swift_dynamicCastObjCClass(v35, v12);
  if (!v13)
  {
LABEL_14:

    return;
  }
  v14 = (void *)v13;
  v15 = objc_msgSend(a2, "topViewController");
  if (v15)
  {
    v16 = v15;
    v17 = objc_opt_self(HUDashboardViewController);
    v18 = swift_dynamicCastObjCClass(v16, v17);
    if (v18)
    {
      v19 = (void *)v18;
      sub_10005D394(0, &qword_1000D2330, NSObject_ptr);
      v20 = objc_msgSend(v19, "context");
      LOBYTE(v19) = static NSObject.== infix(_:_:)(v20, a1);

      if ((v19 & 1) != 0)
        goto LABEL_14;
    }
    else
    {

    }
  }
  v21 = (void *)DashboardContext.home.getter();
  v22 = objc_msgSend(v21, "hf_currentUserIsRestrictedGuest");

  if (v22 && (dispatch thunk of DashboardContext.shouldHideForGuests.getter() & 1) != 0)
    goto LABEL_14;
  v23 = a1;
  v24 = objc_msgSend(v14, "delegate");
  v25 = objc_msgSend(objc_allocWithZone((Class)HUDashboardViewController), "initWithContext:asOverlay:delegate:", v23, a3 & 1, v24);

  swift_unknownObjectRelease(v24);
  v26 = objc_msgSend(v14, "viewFirstTimeFullyVisibleFuture");
  v27 = swift_allocObject(&unk_1000BACD8, 33, 7);
  *(_QWORD *)(v27 + 16) = a2;
  *(_QWORD *)(v27 + 24) = v25;
  *(_BYTE *)(v27 + 32) = a4 & 1;
  aBlock[4] = sub_10006C994;
  v37 = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10006B6AC;
  aBlock[3] = &unk_1000BACF0;
  v28 = _Block_copy(aBlock);
  v29 = v37;
  v30 = a2;
  v31 = v25;
  swift_release(v29);
  v32 = objc_msgSend(v26, "addCompletionBlock:", v28);
  _Block_release(v28);

}

void sub_10006C290(void *a1, void *a2, void *a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  void (*v18)(char *, uint64_t);
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v29 - v13;
  v15 = objc_msgSend(a1, "uniqueIdentifier");
  ((void (*)(void))static UUID._unconditionallyBridgeFromObjectiveC(_:))();

  v16 = objc_msgSend((id)objc_opt_self(HFAccessoryTypeGroup), "energyAccessoryTypeGroup");
  v17 = objc_msgSend(v16, "uniqueIdentifier");

  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v17);
  LOBYTE(v16) = static UUID.== infix(_:_:)(v14, v12);
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, v8);
  v18(v14, v8);
  if ((v16 & 1) == 0 || objc_msgSend(a2, "hf_isHomeEnergyVisible"))
  {
    type metadata accessor for DashboardContext(0);
    v19 = (void *)dispatch thunk of static DashboardContext.categoryDashboard(for:in:room:)(a1, a2, 0);
    v20 = objc_msgSend(a3, "viewControllers");
    v21 = sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
    v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

    if ((unint64_t)v22 >> 62)
    {
      if (v22 < 0)
        v28 = v22;
      else
        v28 = v22 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v22);
      v23 = _CocoaArrayWrapper.endIndex.getter(v28);
      swift_bridgeObjectRelease(v22);
    }
    else
    {
      v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v22);
    if (v23 >= 2)
    {
      v24 = objc_msgSend(a3, "topViewController");
      if (v24)
      {
        v25 = v24;
        v26 = objc_opt_self(HUDashboardViewController);
        v27 = (void *)swift_dynamicCastObjCClass(v25, v26);
        if (v27)
        {
          if ((objc_msgSend(v27, "isOverlay") & 1) == 0)

          a4 = 0;
        }

      }
    }
    sub_10006BF24(v19, a3, 1, a4 & 1);

  }
}

void sub_10006C52C(void *a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  os_log_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_t *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  os_log_t *v22;
  os_log_t v23;
  void *v24;
  uint64_t v25;
  void *v26;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, "home");
  if (v10)
  {
    v11 = v10;
    type metadata accessor for DashboardContext(0);
    v24 = (void *)dispatch thunk of static DashboardContext.roomDashboard(for:in:)(a1, v11);
    sub_10006BF24(v24, a2, 0, a3 & 1);

  }
  else
  {
    if (qword_1000D14E8 != -1)
      swift_once(&qword_1000D14E8, sub_10006F53C);
    Logger.init(_:)((id)qword_1000D36D0);
    v12 = a1;
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc(22, -1);
      v23 = v13;
      v16 = v15;
      v22 = (os_log_t *)swift_slowAlloc(8, -1);
      v24 = (void *)swift_slowAlloc(32, -1);
      v26 = v24;
      *(_DWORD *)v16 = 136315394;
      v25 = sub_100068064(0xD00000000000003ELL, 0x8000000100091380, (uint64_t *)&v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v16 + 4, v16 + 12);
      *(_WORD *)(v16 + 12) = 2112;
      v25 = (uint64_t)v12;
      v17 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v16 + 14, v16 + 22);
      v18 = v22;
      *v22 = v12;

      v12 = v23;
      _os_log_impl((void *)&_mh_execute_header, v23, v14, "%s nil home for room %@", (uint8_t *)v16, 0x16u);
      v19 = sub_100059788(&qword_1000D1658);
      swift_arrayDestroy(v18, 1, v19);
      swift_slowDealloc(v18, -1, -1);
      v20 = v24;
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

void _sSo14HOAppNavigatorC7HomeAppE25configureDashboardContext4with20navigationController8animatedy0C2UI0fG0CSg_So012UINavigationJ0CSbtF_0(void *a1, void *a2, char a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  char v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;

  if (a1)
  {
    v18 = a1;
    if ((dispatch thunk of DashboardContext.allowsHomeNavigation.getter() & 1) != 0)
    {
      v5 = (void *)DashboardContext.room.getter();

      if (!v5)
      {
        dispatch thunk of DashboardContext.overrideDashboardTitle.getter();
        v7 = v6;
        swift_bridgeObjectRelease(v6);
        if (!v7)
        {
          v13 = objc_msgSend(a2, "viewControllers");
          v14 = sub_10005D394(0, &qword_1000D1678, UIViewController_ptr);
          v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

          if ((unint64_t)v15 >> 62)
          {
            if (v15 < 0)
              v17 = v15;
            else
              v17 = v15 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v15);
            v16 = _CocoaArrayWrapper.endIndex.getter(v17);
            swift_bridgeObjectRelease(v15);
          }
          else
          {
            v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease(v15);
          v12 = v18;
          if (v16 < 2)
            goto LABEL_10;

LABEL_9:
          v12 = v18;
LABEL_10:

          return;
        }
      }
      v8 = a3 & 1;
      v9 = v18;
      v10 = a2;
      v11 = 0;
    }
    else
    {
      v8 = a3 & 1;
      v9 = v18;
      v10 = a2;
      v11 = 1;
    }
    sub_10006BF24(v9, v10, v11, v8);
    goto LABEL_9;
  }
}

uint64_t sub_10006C968()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

void sub_10006C994(int a1, int a2)
{
  uint64_t v2;

  sub_10006BBF0(a1, a2, *(id *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32));
}

uint64_t sub_10006C9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006C9B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10006C9B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10006C9DC(void *a1, int a2)
{
  uint64_t v2;

  sub_10006BCEC(a1, a2, *(id *)(v2 + 16));
}

id HOWidgetUpdater.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HOWidgetUpdater();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for HOWidgetUpdater()
{
  return objc_opt_self(_TtC7HomeApp15HOWidgetUpdater);
}

id HOWidgetUpdater.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HOWidgetUpdater();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10006CBF0(unsigned __int8 a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  _QWORD v16[3];
  _BYTE v17[8];
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v3 = v2;
  sub_10006CD60(a1);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  if (a2)
  {
    v18 = a2;
    swift_errorRetain(a2);
    v8 = sub_100059788(&qword_1000D23C8);
    v9 = sub_100059788((uint64_t *)&unk_1000D23D0);
    if ((swift_dynamicCast(&v19, &v18, v8, v9, 6) & 1) != 0)
    {
      v10 = *((_QWORD *)&v20 + 1);
      if (*((_QWORD *)&v20 + 1))
      {
        v11 = v21;
        sub_10005A0B8(&v19, *((uint64_t *)&v20 + 1));
        dispatch thunk of CustomStringConvertible.description.getter(v10, v11);
        v13 = v12;
        sub_10005A0DC(&v19);
LABEL_8:
        v14 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v13);
        goto LABEL_9;
      }
    }
    else
    {
      v21 = 0;
      v19 = 0u;
      v20 = 0u;
    }
    sub_10005D3D4((uint64_t)&v19, &qword_1000D23C0);
    swift_getErrorValue(a2, v17, v16);
    Error.localizedDescription.getter(v16[1], v16[2]);
    v13 = v15;
    goto LABEL_8;
  }
  v21 = 0;
  v19 = 0u;
  v20 = 0u;
  sub_10005D3D4((uint64_t)&v19, &qword_1000D23C0);
  v14 = 0;
LABEL_9:
  objc_msgSend(v3, "failedTest:withFailure:", v7, v14);

}

uint64_t sub_10006CD60(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10006CD9C + 4 * byte_100089C40[a1]))(0xD000000000000010, 0x800000010008FE70);
}

uint64_t sub_10006CD9C()
{
  return 0x706D6F4364616572;
}

uint64_t sub_10006CDBC()
{
  return 0x6F486C6C6F726373;
}

uint64_t sub_10006CDD8()
{
  return 0x6D6F6F526E65706FLL;
}

uint64_t sub_10006CDFC()
{
  uint64_t v0;

  return v0 - 2;
}

uint64_t sub_10006D05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10005D3D4(a1, &qword_1000D23E0);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v9);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_1000BB4D0, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, (char *)&type metadata for () + 8, &unk_1000D23F8, v16);
}

Swift::Bool __swiftcall HOAppDelegate.application(_:runTest:options:)(UIApplication_optional _, Swift::String_optional runTest, Swift::OpaquePointer_optional options)
{
  Class isa;
  void *object;
  void *countAndFlagsBits;
  uint64_t v6;
  char v7;
  uint64_t v8;
  NSString v9;
  Swift::String v10;
  NSString v11;
  _QWORD v13[2];

  isa = _.value.super.super.isa;
  LOBYTE(_.value.super.super.isa) = UIApp;
  if (!UIApp)
  {
    __break(1u);
    goto LABEL_11;
  }
  object = runTest.value._object;
  countAndFlagsBits = (void *)runTest.value._countAndFlagsBits;
  v6 = *(_QWORD *)&_.is_nil;
  LOBYTE(_.value.super.super.isa) = objc_msgSend(UIApp, "rotateIfNeeded:", 1, runTest.value._object, options.value._rawValue, *(_QWORD *)&options.is_nil);
  if (!countAndFlagsBits)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain(countAndFlagsBits);
  LOBYTE(_.value.super.super.isa) = sub_10006DA44(v6, (uint64_t)countAndFlagsBits);
  v7 = (char)_.value.super.super.isa;
  if (LOBYTE(_.value.super.super.isa) == 37)
  {
    if (isa)
    {
      v9 = String._bridgeToObjectiveC()();
      strcpy((char *)v13, "Unknown test ");
      HIWORD(v13[1]) = -4864;
      swift_bridgeObjectRetain(countAndFlagsBits);
      v10._countAndFlagsBits = v6;
      v10._object = countAndFlagsBits;
      String.append(_:)(v10);
      swift_bridgeObjectRelease(countAndFlagsBits);
      v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v13[1]);
      -[objc_class failedTest:withFailure:](isa, "failedTest:withFailure:", v9, v11, v13[0]);

      goto LABEL_9;
    }
LABEL_14:
    __break(1u);
    return (Swift::Bool)_.value.super.super.isa;
  }
  if (!isa)
    goto LABEL_12;
  sub_10006DA94((char)_.value.super.super.isa);
  if (!object)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v8 = *(_QWORD *)&_.is_nil;
  ((void (*)(Class, void *))_.value.super.super.isa)(isa, object);
  swift_release(v8);
LABEL_9:
  LOBYTE(_.value.super.super.isa) = v7 != 37;
  return (Swift::Bool)_.value.super.super.isa;
}

void sub_10006D3DC(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  NSDictionary v7;
  Class isa;

  if (a2)
    v7.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  else
    v7.super.isa = 0;
  isa = v7.super.isa;
  objc_msgSend(a3, *a4, a1);

}

uint64_t sub_10006D460(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v9 = sub_100059788(&qword_1000D1808);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v11 = 1;
  v12 = enum case for DispatchTimeInterval.seconds(_:);
  v13 = type metadata accessor for DispatchTimeInterval(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v14 + 104))(v11, v12, v13);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  sub_10004E610(a4, a5, a1, a2, (uint64_t)v11);
  return sub_10005D3D4((uint64_t)v11, &qword_1000D1808);
}

uint64_t sub_10006D564(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;

  v10 = sub_100059788(&qword_1000D23E0);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  type metadata accessor for MainActor(0);
  v14 = a3;
  v15 = a1;
  v16 = swift_bridgeObjectRetain(a2);
  v17 = static MainActor.shared.getter(v16);
  v18 = (_QWORD *)swift_allocObject(a4, 56, 7);
  v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  v18[4] = v14;
  v18[5] = v15;
  v18[6] = a2;
  v19 = sub_10006D05C((uint64_t)v12, a5, (uint64_t)v18);
  return swift_release(v19);
}

uint64_t sub_10006D670(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = sub_100059788(&qword_1000D23E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor(0);
  v10 = a3;
  v11 = a1;
  v12 = swift_bridgeObjectRetain(a2);
  v13 = static MainActor.shared.getter(v12);
  v14 = swift_allocObject(&unk_1000BB520, 64, 7);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v14 + 32) = v10;
  *(_BYTE *)(v14 + 40) = 31;
  *(_QWORD *)(v14 + 48) = v11;
  *(_QWORD *)(v14 + 56) = a2;
  v15 = sub_10006D05C((uint64_t)v8, (uint64_t)&unk_1000D2408, v14);
  return swift_release(v15);
}

uint64_t sub_10006D77C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = sub_100059788(&qword_1000D23E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor(0);
  v10 = a3;
  v11 = a1;
  v12 = swift_bridgeObjectRetain(a2);
  v13 = static MainActor.shared.getter(v12);
  v14 = swift_allocObject(&unk_1000BB548, 64, 7);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v14 + 32) = v10;
  *(_BYTE *)(v14 + 40) = 32;
  *(_QWORD *)(v14 + 48) = v11;
  *(_QWORD *)(v14 + 56) = a2;
  v15 = sub_10006D05C((uint64_t)v8, (uint64_t)&unk_1000D2410, v14);
  return swift_release(v15);
}

uint64_t sub_10006D888(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = sub_100059788(&qword_1000D23E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor(0);
  v10 = a3;
  v11 = a1;
  v12 = swift_bridgeObjectRetain(a2);
  v13 = static MainActor.shared.getter(v12);
  v14 = swift_allocObject(&unk_1000BB570, 64, 7);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v14 + 32) = v10;
  *(_BYTE *)(v14 + 40) = 33;
  *(_QWORD *)(v14 + 48) = v11;
  *(_QWORD *)(v14 + 56) = a2;
  v15 = sub_10006D05C((uint64_t)v8, (uint64_t)&unk_1000D2418, v14);
  return swift_release(v15);
}

uint64_t sub_10006D994(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10006D9F8;
  return v6(a1);
}

uint64_t sub_10006D9F8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10006DA44(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_1000B8388, a1, a2, &unk_1000D1508);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x25)
    return 37;
  else
    return v3;
}

void sub_10006DA94(char a1)
{
  __asm { BR              X10 }
}

void (*sub_10006DAC0())(void *a1)
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject(&unk_1000BB480, 24, 7) + 16) = v0;
  v1 = v0;
  return sub_10006E674;
}

uint64_t sub_10006E1E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10006E208(void *a1, uint64_t a2)
{
  return sub_100053BAC(a1, a2);
}

id sub_10006E228(void *a1, uint64_t a2)
{
  return sub_1000534C8(a1, a2);
}

uint64_t sub_10006E248(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10006D888(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10006E250(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10006D77C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10006E258(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10006D670(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10006E260(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10006D564(a1, a2, *(void **)(v2 + 16), (uint64_t)&unk_1000BB4F8, (uint64_t)&unk_1000D2400);
}

uint64_t sub_10006E288(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10006D564(a1, a2, *(void **)(v2 + 16), (uint64_t)&unk_1000BB4A8, (uint64_t)&unk_1000D23E8);
}

uint64_t sub_10006E2B0(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10006D460(a1, a2, *(_QWORD *)(v2 + 16), 3, 28);
}

uint64_t sub_10006E2D0(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10006D460(a1, a2, *(_QWORD *)(v2 + 16), 2, 27);
}

uint64_t sub_10006E2F0(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10006D460(a1, a2, *(_QWORD *)(v2 + 16), 1, 26);
}

uint64_t sub_10006E310(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10006D460(a1, a2, *(_QWORD *)(v2 + 16), 0, 25);
}

void sub_10006E330(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10006D3DC(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runScrollCameraClipsInPlayerTestWithApplication_options_);
}

void sub_10006E350(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10006D3DC(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runPresentNetworkSettingsTestWithApplication_options_);
}

void sub_10006E370(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10006D3DC(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runPresentHomeSettingsTestWithApplication_options_);
}

uint64_t sub_10006E390(void *a1)
{
  return sub_10005B6E8(a1);
}

uint64_t sub_10006E3B0(void *a1)
{
  return sub_10005A9F4(a1);
}

void sub_10006E3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10006D3DC(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runToggleSceneTestWithApplication_options_);
}

void sub_10006E3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10006D3DC(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runToggleLightTestWithApplication_options_);
}

void sub_10006E410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10006D3DC(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runDeleteRoomTestWithApplication_options_);
}

void sub_10006E430(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10006D3DC(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runAddRoomTestWithApplication_options_);
}

void sub_10006E450(void *a1)
{
  sub_100059C14(a1);
}

void sub_10006E470(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10006D3DC(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runTabSwitchToAutomationTestWithApplication_options_);
}

void sub_10006E490(void *a1, uint64_t a2)
{
  sub_10004BC64(a1, a2);
}

void sub_10006E4B0(void *a1, uint64_t a2)
{
  sub_10004B71C(a1, a2);
}

void sub_10006E4D0(void *a1)
{
  sub_100057444(a1);
}

void sub_10006E4F0(void *a1, uint64_t a2)
{
  sub_10004ACD8(a1, a2);
}

void sub_10006E510(void *a1)
{
  sub_1000570F8(a1);
}

void sub_10006E530(void *a1)
{
  sub_100057A80(a1);
}

void sub_10006E550(void *a1, uint64_t a2)
{
  sub_10004B0BC(a1, a2);
}

void sub_10006E570(void *a1)
{
  sub_10005776C(a1);
}

void sub_10006E590(void *a1)
{
  sub_100056E04(a1);
}

void sub_10006E5B0(void *a1, uint64_t a2)
{
  sub_10004AAF8(a1, a2);
}

void sub_10006E5D0(void *a1)
{
  sub_100056C0C(a1);
}

void sub_10006E5F0(void *a1)
{
  sub_1000568F0(a1);
}

void sub_10006E610(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10006D3DC(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runScrollAutomationTestWithApplication_options_);
}

uint64_t sub_10006E630()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10006E654(void *a1, uint64_t a2)
{
  sub_10004CC5C(a1, a2);
}

void sub_10006E674(void *a1)
{
  sub_1000594C0(a1);
}

uint64_t sub_10006E698(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1000D1854);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006EA8C;
  return sub_10004EC84(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10006E718(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1000D23F4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006E788;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1000D23F0 + dword_1000D23F0))(a1, v4);
}

uint64_t sub_10006E788()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10006E7D4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10006E810(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1000D1914);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006EA8C;
  return sub_10004EE24(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10006E894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_BYTE *)(v1 + 40);
  v10 = (_QWORD *)swift_task_alloc(dword_1000D1934);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006EA8C;
  return sub_100050C78(a1, v4, v5, v6, v9, v7, v8);
}

uint64_t sub_10006E928(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_BYTE *)(v1 + 40);
  v10 = (_QWORD *)swift_task_alloc(dword_1000D1944);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006EA8C;
  return sub_100050C78(a1, v4, v5, v6, v9, v7, v8);
}

uint64_t sub_10006E9BC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10006E9F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_BYTE *)(v1 + 40);
  v10 = (_QWORD *)swift_task_alloc(dword_1000D194C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006E788;
  return sub_100051AF8(a1, v4, v5, v6, v9, v7, v8);
}

void sub_10006EB44(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_10006EB90(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10006EC08 + 4 * byte_100089CD4[a2]))(0x7365636341796E61);
}

uint64_t sub_10006EC08(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7365636341796E61 && v1 == 0xEC00000079726F73)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x7365636341796E61, 0xEC00000079726F73, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEC00000079726F73);
  return v2 & 1;
}

uint64_t sub_10006ECBC(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = 8 * a1;
  v3 = *(_QWORD *)&aHomeGrocategor[v2];
  v4 = *(_QWORD *)&aUp[v2];
  v5 = 8 * a2;
  v6 = *(_QWORD *)&aHomeGrocategor[v5];
  v7 = *(_QWORD *)&aUp[v5];
  if (v3 == v6 && v4 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v6, *(_QWORD *)&aUp[8 * a2], 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v7);
  return v9 & 1;
}

void sub_10006ED40(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_10006ED98()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x7365636341796E61, 0xEC00000079726F73);
  swift_bridgeObjectRelease(0xEC00000079726F73);
  return Hasher._finalize()();
}

Swift::Int sub_10006EE18(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  v2 = 8 * a1;
  v3 = *(_QWORD *)&aUp[v2];
  String.hash(into:)(v5, *(_QWORD *)&aHomeGrocategor[v2], v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

void sub_10006EE80(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_10006EEC8(uint64_t a1)
{
  String.hash(into:)(a1, 0x7365636341796E61, 0xEC00000079726F73);
  return swift_bridgeObjectRelease(0xEC00000079726F73);
}

uint64_t sub_10006EF34(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8 * a2;
  v3 = *(_QWORD *)&aUp[v2];
  String.hash(into:)(a1, *(_QWORD *)&aHomeGrocategor[v2], v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_10006EF74(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  v3 = 8 * a2;
  v4 = *(_QWORD *)&aUp[v3];
  String.hash(into:)(v6, *(_QWORD *)&aHomeGrocategor[v3], v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

void sub_10006EFD8(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_10006F02C()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x7365636341796E61, 0xEC00000079726F73);
  swift_bridgeObjectRelease(0xEC00000079726F73);
  return Hasher._finalize()();
}

uint64_t AdaptiveTabBarSection.rawValue.getter(char a1)
{
  return *(_QWORD *)&aHomeGrocategor[8 * a1];
}

uint64_t sub_10006F0D0(char *a1, char *a2)
{
  return sub_10006ECBC(*a1, *a2);
}

Swift::Int sub_10006F0DC()
{
  char *v0;

  return sub_10006EE18(*v0);
}

uint64_t sub_10006F0E4(uint64_t a1)
{
  char *v1;

  return sub_10006EF34(a1, *v1);
}

Swift::Int sub_10006F0EC(uint64_t a1)
{
  char *v1;

  return sub_10006EF74(a1, *v1);
}

unint64_t sub_10006F0F4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s7HomeApp21AdaptiveTabBarSectionO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10006F120@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = AdaptiveTabBarSection.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10006F148()
{
  AdaptiveTabBarSectionIdentifier._countAndFlagsBits = 0x6F72672E656D6F68;
  AdaptiveTabBarSectionIdentifier._object = (void *)0xEA00000000007075;
}

Swift::String *AdaptiveTabBarSectionIdentifier.unsafeMutableAddressor()
{
  if (qword_1000D14E0 != -1)
    swift_once(&qword_1000D14E0, sub_10006F148);
  return &AdaptiveTabBarSectionIdentifier;
}

uint64_t sub_10006F1B0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;

  v3 = a1 == 0x6F72672E656D6F68 && a2 == 0xEA00000000007075;
  if (v3
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6F72672E656D6F68, 0xEA00000000007075, a1, a2, 0) & 1) != 0)
  {
    goto LABEL_6;
  }
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(HFHomeAppTabIdentifierHome);
  if (v6 == a1 && v7 == a2)
  {
    swift_bridgeObjectRelease_n(a2, 2);
    return 0;
  }
  v9 = v7;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, a1, a2, 0);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) != 0)
  {
LABEL_6:
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  if (a1 == 0x69726F6765746163 && a2 == 0xEA00000000007365
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x69726F6765746163, 0xEA00000000007365, a1, a2, 0) & 1) != 0)
  {
    swift_bridgeObjectRelease(a2);
    return 1;
  }
  else if (a1 == 0x736D6F6F72 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 2;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(0x736D6F6F72, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v11 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t _s7HomeApp21AdaptiveTabBarSectionO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000B8720, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

unint64_t sub_10006F39C()
{
  unint64_t result;

  result = qword_1000D2480;
  if (!qword_1000D2480)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AdaptiveTabBarSection, &type metadata for AdaptiveTabBarSection);
    atomic_store(result, (unint64_t *)&qword_1000D2480);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AdaptiveTabBarSection(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AdaptiveTabBarSection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10006F4BC + 4 * byte_100089CE9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10006F4F0 + 4 * byte_100089CE4[v4]))();
}

uint64_t sub_10006F4F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006F4F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10006F500);
  return result;
}

uint64_t sub_10006F50C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10006F514);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10006F518(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006F520(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdaptiveTabBarSection()
{
  return &type metadata for AdaptiveTabBarSection;
}

uint64_t sub_10006F53C()
{
  uint64_t result;

  sub_10006F59C();
  result = OS_os_log.init(subsystem:category:)(0xD000000000000018, 0x8000000100091500, 0x75616665445F4648, 0xEA0000000000746CLL);
  qword_1000D36D0 = result;
  return result;
}

unint64_t sub_10006F59C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D1760;
  if (!qword_1000D1760)
  {
    v1 = objc_opt_self(OS_os_log);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000D1760);
  }
  return result;
}

_QWORD *HUSideBarItemManager.roomItems.getter()
{
  return sub_10006F720((SEL *)&selRef_roomItems, &qword_1000D2490, HFRoomItem_ptr);
}

_QWORD *sub_10006F5F4(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v14;
  _BYTE v15[32];
  _QWORD *v16;

  v16 = _swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)(v6);
  if (!v6)
    return v16;
  for (i = a1 + 32; ; i += 32)
  {
    sub_10005BBA0(i, (uint64_t)v15);
    v8 = sub_10005D394(0, a2, a3);
    v9 = swift_dynamicCast(&v14, v15, (char *)&type metadata for Any + 8, v8, 6);
    if (!(_DWORD)v9)
      break;
    v10 = v14;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
    v11 = v16[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
    v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
    specialized ContiguousArray._endMutation()(v12);
    if (!--v6)
      return v16;
  }
  v14 = 0;
  swift_release(v16);

  return 0;
}

_QWORD *HUSideBarItemManager.categoryItems.getter()
{
  return sub_10006F720((SEL *)&selRef_categoryItems, &qword_1000D2488, HFAccessoryCategoryStatusItem_ptr);
}

_QWORD *sub_10006F720(SEL *a1, unint64_t *a2, _QWORD *a3)
{
  void *v3;
  id v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = objc_msgSend(v3, *a1);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, (char *)&type metadata for Any + 8);

  v8 = sub_10006F5F4(v7, a2, a3);
  swift_bridgeObjectRelease(v7);
  if (v8)
    return v8;
  else
    return _swiftEmptyArrayStorage;
}

uint64_t FeatureFlagsKey.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD v6[5];

  v3 = a1;
  v6[3] = a1;
  v6[4] = a2;
  v4 = sub_10006F800(v6);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v4, v2, v3);
  LOBYTE(v3) = isFeatureEnabled(_:)(v6);
  sub_10005A0DC(v6);
  return v3 & 1;
}

_QWORD *sub_10006F800(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t getEnumTagSinglePayload for HomeAppFeatures(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeAppFeatures(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_10006F918 + 4 * byte_100089DF1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10006F94C + 4 * byte_100089DEC[v4]))();
}

uint64_t sub_10006F94C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006F954(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10006F95CLL);
  return result;
}

uint64_t sub_10006F968(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10006F970);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_10006F974(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006F97C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HomeAppFeatures()
{
  return &type metadata for HomeAppFeatures;
}

uint64_t getEnumTagSinglePayload for UIKitFeatures(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for UIKitFeatures(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10006FA2C + 4 * byte_100089DF6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10006FA4C + 4 * byte_100089DFB[v4]))();
}

_BYTE *sub_10006FA2C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10006FA4C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10006FA54(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10006FA5C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10006FA64(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10006FA6C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UIKitFeatures()
{
  return &type metadata for UIKitFeatures;
}

unint64_t sub_10006FA8C()
{
  unint64_t result;

  result = qword_1000D2498;
  if (!qword_1000D2498)
  {
    result = swift_getWitnessTable(&unk_100089E74, &type metadata for UIKitFeatures);
    atomic_store(result, (unint64_t *)&qword_1000D2498);
  }
  return result;
}

BOOL sub_10006FAD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10006FAE4()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10006FB28()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10006FB50(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

const char *sub_10006FB90()
{
  return "HomeApp";
}

uint64_t sub_10006FBA4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_10006FBCC + 4 * byte_100089E00[*v0]))("redesign_media", 14);
}

const char *sub_10006FBCC()
{
  return "nativeMatter";
}

const char *sub_10006FBE0()
{
  return "fullMatterSnapshots";
}

Swift::Int sub_10006FC28()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void sub_10006FC68()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_10006FC8C(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

unint64_t sub_10006FCCC()
{
  unint64_t result;

  result = qword_1000D24A0;
  if (!qword_1000D24A0)
  {
    result = swift_getWitnessTable(&unk_100089EDC, &type metadata for HomeAppFeatures);
    atomic_store(result, (unint64_t *)&qword_1000D24A0);
  }
  return result;
}

const char *sub_10006FD10()
{
  return "UIKit";
}

const char *sub_10006FD24()
{
  return "uip_floating_tab_bar";
}

id sub_10006FD38(void *a1, unsigned __int8 a2, uint64_t a3)
{
  return sub_100070B98(a1, a2, a3, (SEL *)&selRef_collectionView);
}

uint64_t sub_10006FD54(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    v4 = __CocoaSet.startIndex.getter(v3);
    v6 = v5;
    v7 = __CocoaSet.endIndex.getter(v3);
    v9 = static __CocoaSet.Index.== infix(_:_:)(v4, v6, v7, v8);
    swift_bridgeObjectRelease(v7);
    if ((v9 & 1) != 0)
      goto LABEL_6;
    goto LABEL_10;
  }
  result = sub_100074FC8(a1);
  if ((v13 & 1) == 0)
  {
    v6 = v12;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v12)
    {
      v4 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
      {
LABEL_6:
        sub_10005D388(v4, v6, v2 != 0);
        return 0;
      }
LABEL_10:
      sub_100074D64(v4, v6, v2 != 0, a1, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
      v10 = v14;
      sub_10005D388(v4, v6, v2 != 0);
      return v10;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_10006FE70(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  NSString v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  NSString v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  unint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  double v38;
  id v39;
  NSString v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t ObjectType;
  void **aBlock;
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  __int128 v63;
  __int128 v64;

  ObjectType = swift_getObjectType();
  if (a5)
  {
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(a5, "disableExternalUpdatesWithReason:", v9);

  }
  v10 = objc_msgSend(objc_allocWithZone((Class)NAFuture), "init");
  v11 = (void *)objc_opt_self(RPTTestRunner);
  if (!objc_msgSend(v11, "isRecapAvailable"))
  {
    v61 = 0x6F69746172657469;
    v62 = 0xEA0000000000736ELL;
    AnyHashable.init<A>(_:)(&aBlock, &v61, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(a4 + 16) && (v34 = sub_100074310((uint64_t)&aBlock), (v35 & 1) != 0))
    {
      sub_10005BBA0(*(_QWORD *)(a4 + 56) + 32 * v34, (uint64_t)&v63);
    }
    else
    {
      v63 = 0u;
      v64 = 0u;
    }
    sub_10005B9BC((uint64_t)&aBlock);
    if (*((_QWORD *)&v64 + 1))
    {
      v53 = a3;
      if ((swift_dynamicCast(&v61, &v63, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) == 0)
        goto LABEL_21;
      v52 = v61;
      v61 = 0x74736566666FLL;
      v62 = 0xE600000000000000;
      AnyHashable.init<A>(_:)(&aBlock, &v61, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(a4 + 16) && (v36 = sub_100074310((uint64_t)&aBlock), (v37 & 1) != 0))
      {
        sub_10005BBA0(*(_QWORD *)(a4 + 56) + 32 * v36, (uint64_t)&v63);
      }
      else
      {
        v63 = 0u;
        v64 = 0u;
      }
      sub_10005B9BC((uint64_t)&aBlock);
      if (*((_QWORD *)&v64 + 1))
      {
        if ((swift_dynamicCast(&v61, &v63, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6) & 1) != 0)
        {
          v38 = *(double *)&v61;
          v39 = objc_msgSend(objc_allocWithZone((Class)UIScrollTestParameters), "init");
          v40 = String._bridgeToObjectiveC()();
          objc_msgSend(v39, "setTestName:", v40);

          objc_msgSend(v39, "setIterations:", v52);
          objc_msgSend(v39, "setDelta:", v38);
          v41 = swift_allocObject(&unk_1000BB7F0, 24, 7);
          *(_QWORD *)(v41 + 16) = v10;
          v59 = sub_10005BD28;
          v60 = v41;
          aBlock = _NSConcreteStackBlock;
          v56 = 1107296256;
          v57 = sub_100072324;
          v58 = &unk_1000BB808;
          v42 = _Block_copy(&aBlock);
          v43 = v60;
          v44 = v10;
          v45 = v39;
          swift_release(v43);
          objc_msgSend(v53, "_performScrollTestWithParameters:completionBlock:", v45, v42);
          _Block_release(v42);

          if (a5)
            goto LABEL_5;
          return v10;
        }
LABEL_21:
        v46 = sub_1000596B8();
        swift_allocError(&_s20PerformanceTestErrorON, v46, 0, 0);
        v48 = v47;
        v49 = sub_100059788(&qword_1000D24F0);
        v50 = swift_allocObject(v49, 64, 7);
        *(_OWORD *)(v50 + 16) = xmmword_100089F70;
        *(_QWORD *)(v50 + 32) = 0x6F69746172657469;
        *(_QWORD *)(v50 + 40) = 0xEA0000000000736ELL;
        *(_QWORD *)(v50 + 48) = 0x74657366666FLL;
        *(_QWORD *)(v50 + 56) = 0xE600000000000000;
        *(_QWORD *)v48 = a4;
        *(_QWORD *)(v48 + 8) = v50;
        *(_BYTE *)(v48 + 48) = 1;
        v51 = swift_bridgeObjectRetain(a4);
        swift_willThrow(v51);

        return v10;
      }
    }
    sub_10005D3D4((uint64_t)&v63, &qword_1000D2120);
    goto LABEL_21;
  }
  v12 = swift_allocObject(&unk_1000BB8E0, 24, 7);
  *(_QWORD *)(v12 + 16) = v10;
  v13 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
  v14 = a3;
  v15 = v13;
  v16 = v14;
  v17 = v10;
  swift_bridgeObjectRetain(a2);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v59 = sub_10005BD28;
  v60 = v12;
  aBlock = _NSConcreteStackBlock;
  v56 = 1107296256;
  v57 = sub_100070484;
  v58 = &unk_1000BB8F8;
  v19 = _Block_copy(&aBlock);
  swift_release(v60);
  v20 = objc_msgSend(v15, "initWithTestName:scrollView:completionHandler:", v18, v16, v19);

  _Block_release(v19);
  objc_msgSend(v11, "runTestWithParameters:", v20);

  if (a5)
  {
LABEL_5:
    v21 = swift_allocObject(&unk_1000BB840, 32, 7);
    *(_QWORD *)(v21 + 16) = a5;
    *(_QWORD *)(v21 + 24) = ObjectType;
    v59 = sub_100076628;
    v60 = v21;
    aBlock = _NSConcreteStackBlock;
    v56 = 1107296256;
    v57 = sub_1000704B0;
    v58 = &unk_1000BB858;
    v22 = _Block_copy(&aBlock);
    v23 = v60;
    v24 = a5;
    v25 = v10;
    v26 = v24;
    swift_release(v23);
    v27 = objc_msgSend(v25, "flatMap:", v22);
    _Block_release(v22);
    v28 = swift_allocObject(&unk_1000BB890, 32, 7);
    *(_QWORD *)(v28 + 16) = v26;
    *(_QWORD *)(v28 + 24) = ObjectType;
    v59 = sub_100076630;
    v60 = v28;
    aBlock = _NSConcreteStackBlock;
    v56 = 1107296256;
    v57 = sub_10004ACD0;
    v58 = &unk_1000BB8A8;
    v29 = _Block_copy(&aBlock);
    v30 = v60;
    v31 = v26;
    swift_release(v30);
    v32 = objc_msgSend(v27, "recover:", v29);

    _Block_release(v29);
    return v32;
  }
  return v10;
}

uint64_t sub_100070484(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

id sub_1000704B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  void *v6;

  v4 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v6 = (void *)v4(v5);
  swift_release(v3);
  swift_unknownObjectRelease(a2);
  return v6;
}

void *sub_100070504(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  id v15;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v7; v7 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    v8 = 4;
    while (1)
    {
      v9 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, a3)
         : *(id *)(a3 + 8 * v8);
      v10 = v9;
      v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      v15 = v9;
      v12 = a1(&v15);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return v10;
      }
      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease(a3);
        return v10;
      }

      ++v8;
      if (v11 == v7)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    if (a3 < 0)
      v14 = a3;
    else
      v14 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
LABEL_11:
  swift_bridgeObjectRelease(a3);
  return 0;
}

BOOL sub_100070624(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  int v16;
  BOOL v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  _BOOL8 v31;
  uint64_t (*v32)(char *);
  uint64_t v33;

  v4 = v3;
  v31 = a2;
  v32 = a1;
  v33 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100059788((uint64_t *)&unk_1000D1810);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v13 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v28 = *(_QWORD *)(v6 + 72);
    v29 = v8;
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v26 = a3;
    swift_bridgeObjectRetain(a3);
    while (1)
    {
      v14 = v33;
      v30(v11, v13, v33);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v15(v11, 0, 1, v14);
      v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v14);
      v17 = v16 != 1;
      if (v16 == 1)
      {
        a3 = v26;
        goto LABEL_13;
      }
      v27 = 1;
      v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v19 = v6;
      v20 = v29;
      v18(v29, v11, v14);
      v17 = v31;
      v21 = v32(v20);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v14);
        swift_bridgeObjectRelease(v26);
        return v17;
      }
      v22 = v21;
      v23 = v15;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v14);
      if ((v22 & 1) != 0)
        break;
      v13 += v28;
      --v12;
      v4 = 0;
      v6 = v19;
      if (!v12)
      {
        a3 = v26;
        goto LABEL_9;
      }
    }
    a3 = v26;
    v17 = v27;
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain(a3);
LABEL_9:
    v23(v11, 1, 1, v33);
    v17 = 0;
  }
LABEL_13:
  swift_bridgeObjectRelease(a3);
  return v17;
}

void sub_10007084C(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];
  id v34;

  v4 = v3;
  v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    if (a3 < 0)
      v7 = a3;
    else
      v7 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v8 = __CocoaSet.makeIterator()(v7);
    v9 = sub_10005D394(0, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
    v10 = sub_1000597C8((unint64_t *)&qword_1000D2130, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
    v11 = Set.Iterator.init(_cocoa:)(v33, v8, v9, v10);
    v5 = v33[0];
    v31 = v33[1];
    v12 = v33[2];
    v13 = v33[3];
    v14 = v33[4];
  }
  else
  {
    v15 = -1 << *(_BYTE *)(a3 + 32);
    v31 = a3 + 56;
    v16 = ~v15;
    v17 = -v15;
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v14 = v18 & *(_QWORD *)(a3 + 56);
    v11 = (_QWORD *)swift_bridgeObjectRetain(a3);
    v12 = v16;
    v13 = 0;
  }
  v30 = (unint64_t)(v12 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v19 = __CocoaSet.Iterator.next()(v11);
  if (v19)
  {
    v20 = v19;
    v32 = v19;
    v21 = sub_10005D394(0, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
    swift_unknownObjectRetain(v20);
    swift_dynamicCast(&v34, &v32, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
    v22 = v34;
    swift_unknownObjectRelease(v20);
    v23 = v13;
    v24 = v14;
    while (v22)
    {
      v34 = v22;
      v28 = a1(&v34);

      if (v4 || (v28 & 1) != 0)
        break;
      v13 = v23;
      v14 = v24;
      if (v5 < 0)
        goto LABEL_11;
LABEL_14:
      if (v14)
      {
        v24 = (v14 - 1) & v14;
        v25 = __clz(__rbit64(v14)) | (v13 << 6);
        v23 = v13;
      }
      else
      {
        v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
          return;
        }
        if (v23 >= v30)
          break;
        v26 = *(_QWORD *)(v31 + 8 * v23);
        if (!v26)
        {
          v27 = v13 + 2;
          if (v13 + 2 >= v30)
            break;
          v26 = *(_QWORD *)(v31 + 8 * v27);
          if (v26)
            goto LABEL_25;
          v27 = v13 + 3;
          if (v13 + 3 >= v30)
            break;
          v26 = *(_QWORD *)(v31 + 8 * v27);
          if (v26)
            goto LABEL_25;
          v27 = v13 + 4;
          if (v13 + 4 >= v30)
            break;
          v26 = *(_QWORD *)(v31 + 8 * v27);
          if (v26)
          {
LABEL_25:
            v23 = v27;
          }
          else
          {
            v23 = v13 + 5;
            if (v13 + 5 >= v30)
              break;
            v26 = *(_QWORD *)(v31 + 8 * v23);
            if (!v26)
            {
              v29 = v13 + 6;
              while (v30 != v29)
              {
                v26 = *(_QWORD *)(v31 + 8 * v29++);
                if (v26)
                {
                  v23 = v29 - 1;
                  goto LABEL_26;
                }
              }
              break;
            }
          }
        }
LABEL_26:
        v24 = (v26 - 1) & v26;
        v25 = __clz(__rbit64(v26)) + (v23 << 6);
      }
      v22 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v25);
    }
  }
  sub_10005ACA4(v5);
}

id sub_100070B7C(void *a1, unsigned __int8 a2, uint64_t a3)
{
  return sub_100070B98(a1, a2, a3, (SEL *)&selRef_tableView);
}

id sub_100070B98(void *a1, unsigned __int8 a2, uint64_t a3, SEL *a4)
{
  id v4;
  uint64_t v5;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  unint64_t v16;
  char *v17;

  v9 = objc_msgSend(a1, *a4);
  if (v9)
  {
    v10 = v9;
    v11 = sub_10006CD60(a2);
    v13 = v12;
    v14 = objc_msgSend(a1, "itemManager");
    v15 = sub_10006FE70(v11, v13, v10, a3, v14);
    if (!v5)
      v4 = v15;

    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v16 = sub_1000596B8();
    swift_allocError(&_s20PerformanceTestErrorON, v16, 0, 0);
    strcpy(v17, "collectionView");
    v17[15] = -18;
    *((_QWORD *)v17 + 2) = a1;
    v17[48] = 0;
    swift_willThrow(a1);
  }
  return v4;
}

void sub_100070CFC(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "hf_characteristicValueManager");
  v2 = objc_msgSend(v1, "firstReadCompleteFuture");

  if (!v2)
    __break(1u);
}

id sub_100070D54()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(NAFuture), "futureWithNoResult");
  v1 = objc_msgSend(v0, "asGeneric");

  return v1;
}

id HOAppDelegate.baseViewController.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  __objc2_prot *v4;

  result = objc_msgSend(v0, "window");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v2 = result;
  v3 = objc_msgSend(result, "rootViewController");

  if (v3)
  {
    v4 = &OBJC_PROTOCOL___HOBaseControllerDelegate;
    result = (id)swift_dynamicCastObjCProtocolConditional(v3, 1, &v4);
    if (result)
      return result;

  }
  return 0;
}

id HOAppDelegate.appNavigator.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  __objc2_prot *v12;

  result = objc_msgSend(v0, "window");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "rootViewController");

    if (v3)
    {
      v12 = &OBJC_PROTOCOL___HUVendsDashboardNavigator;
      v4 = (void *)swift_dynamicCastObjCProtocolConditional(v3, 1, &v12);
      if (v4)
      {
        v5 = objc_msgSend(v4, "dashboardNavigator");
        if (v5)
        {
          v6 = v5;
          v7 = objc_opt_self(HOAppNavigator);
          v8 = (id)swift_dynamicCastObjCClass(v6, v7);
          if (v8)
          {
LABEL_9:
            v11 = v8;

            return v11;
          }
          swift_unknownObjectRelease(v6);
        }
      }
      v9 = objc_opt_self(HOSplitViewController);
      v10 = (void *)swift_dynamicCastObjCClass(v3, v9);
      if (v10)
      {
        v8 = objc_msgSend(v10, "appNavigator");
        goto LABEL_9;
      }

    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t HOAppDelegate.findPreferredAccessory(itemManager:accessoryID:with:)(void *a1, uint64_t a2, uint64_t (*a3)(id, id), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Class isa;
  id v36;
  id v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t result;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(id, id);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  void *v59;
  unint64_t v60;
  _QWORD v61[6];

  v56 = a2;
  v49 = a3;
  v50 = a4;
  v5 = sub_100059788((uint64_t *)&unk_1000D1810);
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = (unint64_t)_swiftEmptyArrayStorage;
  v8 = objc_msgSend(a1, "allDisplayedItems");
  v9 = sub_10005D394(0, &qword_1000D24A8, HFItem_ptr);
  v10 = sub_1000597C8((unint64_t *)&unk_1000D24B0, &qword_1000D24A8, HFItem_ptr);
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v9, v10);

  v52 = v9;
  if ((v11 & 0xC000000000000001) != 0)
  {
    if (v11 < 0)
      v13 = v11;
    else
      v13 = v11 & 0xFFFFFFFFFFFFFF8;
    v14 = __CocoaSet.makeIterator()(v13);
    v12 = Set.Iterator.init(_cocoa:)(v61, v14, v9, v10);
    v11 = v61[0];
    v55 = v61[1];
    v15 = v61[2];
    v16 = v61[3];
    v17 = v61[4];
  }
  else
  {
    v16 = 0;
    v18 = -1 << *(_BYTE *)(v11 + 32);
    v19 = *(_QWORD *)(v11 + 56);
    v55 = v11 + 56;
    v20 = ~v18;
    v21 = -v18;
    if (v21 < 64)
      v22 = ~(-1 << v21);
    else
      v22 = -1;
    v17 = v22 & v19;
    v15 = v20;
  }
  v48 = v15;
  v53 = v11 & 0x7FFFFFFFFFFFFFFFLL;
  v54 = (unint64_t)(v15 + 64) >> 6;
  v51 = (char *)&type metadata for Swift.AnyObject + 8;
  while (v11 < 0)
  {
    v28 = __CocoaSet.Iterator.next()(v12);
    if (!v28)
      goto LABEL_39;
    v29 = v28;
    v58 = v28;
    swift_unknownObjectRetain(v28);
    swift_dynamicCast(&v59, &v58, v51, v52, 7);
    v24 = v59;
    swift_unknownObjectRelease(v29);
    v27 = v16;
    v25 = v17;
    if (!v24)
      goto LABEL_39;
LABEL_34:
    sub_100076128(v56, (uint64_t)v7);
    v33 = type metadata accessor for UUID(0);
    v34 = *(_QWORD *)(v33 - 8);
    isa = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v7, 1, v33) != 1)
    {
      isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v33);
    }
    v36 = objc_msgSend(v57, "serviceLikeItemWithItem:itemManager:withID:", v24, a1, isa, v48, v49, v50);

    if (v36)
    {
      v37 = v36;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
      v39 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v38 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v39 >= v38 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1);
      v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v37);
      specialized Array._endMutation()(v23);

      v24 = v37;
    }

    v16 = v27;
    v17 = v25;
  }
  if (v17)
  {
    v25 = (v17 - 1) & v17;
    v26 = __clz(__rbit64(v17)) | (v16 << 6);
    v27 = v16;
    goto LABEL_33;
  }
  v30 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v30 >= v54)
    goto LABEL_39;
  v31 = *(_QWORD *)(v55 + 8 * v30);
  v27 = v16 + 1;
  if (v31)
    goto LABEL_32;
  v27 = v16 + 2;
  if (v16 + 2 >= v54)
    goto LABEL_39;
  v31 = *(_QWORD *)(v55 + 8 * v27);
  if (v31)
    goto LABEL_32;
  v27 = v16 + 3;
  if (v16 + 3 >= v54)
    goto LABEL_39;
  v31 = *(_QWORD *)(v55 + 8 * v27);
  if (v31)
    goto LABEL_32;
  v27 = v16 + 4;
  if (v16 + 4 >= v54)
    goto LABEL_39;
  v31 = *(_QWORD *)(v55 + 8 * v27);
  if (v31)
  {
LABEL_32:
    v25 = (v31 - 1) & v31;
    v26 = __clz(__rbit64(v31)) + (v27 << 6);
LABEL_33:
    v24 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v26);
    if (!v24)
      goto LABEL_39;
    goto LABEL_34;
  }
  v32 = v16 + 5;
  while (v54 != v32)
  {
    v31 = *(_QWORD *)(v55 + 8 * v32++);
    if (v31)
    {
      v27 = v32 - 1;
      goto LABEL_32;
    }
  }
LABEL_39:
  sub_10005ACA4(v11);
  result = sub_10007608C((uint64_t *)&v60, v49);
  v17 = v60;
  if (!(v60 >> 62))
  {
    v41 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v41)
      goto LABEL_41;
LABEL_45:
    swift_bridgeObjectRelease(v17);
    return v41;
  }
LABEL_47:
  if (v17 < 0)
    v47 = v17;
  else
    v47 = v17 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v17);
  v41 = _CocoaArrayWrapper.endIndex.getter(v47);
  result = swift_bridgeObjectRelease(v17);
  if (!v41)
    goto LABEL_45;
LABEL_41:
  if ((v17 & 0xC000000000000001) != 0)
  {
    v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
    goto LABEL_44;
  }
  if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v42 = *(id *)(v17 + 32);
LABEL_44:
    v43 = v42;
    swift_bridgeObjectRelease(v17);
    v44 = objc_msgSend(v43, "accessories", v48);

    v45 = sub_10005D394(0, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
    v46 = sub_1000597C8((unint64_t *)&qword_1000D2130, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
    v17 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v44, v45, v46);

    v41 = sub_10006FD54(v17);
    goto LABEL_45;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007164C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100074D3C(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_100073140(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void HOAppDelegate.findAccessory(itemManager:accessoryID:testBlock:)(void *a1, uint64_t a2, uint64_t (*a3)(id), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Class isa;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t (*v45)(id);
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  void *v51;
  _QWORD v52[5];

  v48 = a2;
  v45 = a3;
  v46 = a4;
  v5 = sub_100059788((uint64_t *)&unk_1000D1810);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a1;
  v8 = objc_msgSend(a1, "allDisplayedItems");
  v9 = sub_10005D394(0, &qword_1000D24A8, HFItem_ptr);
  v10 = sub_1000597C8((unint64_t *)&unk_1000D24B0, &qword_1000D24A8, HFItem_ptr);
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v9, v10);

  v41 = v9;
  if ((v11 & 0xC000000000000001) != 0)
  {
    if (v11 < 0)
      v13 = v11;
    else
      v13 = v11 & 0xFFFFFFFFFFFFFF8;
    v14 = __CocoaSet.makeIterator()(v13);
    v12 = Set.Iterator.init(_cocoa:)(v52, v14, v9, v10);
    v11 = v52[0];
    v44 = v52[1];
    v15 = v52[2];
    v16 = v52[3];
    v17 = v52[4];
  }
  else
  {
    v16 = 0;
    v18 = -1 << *(_BYTE *)(v11 + 32);
    v19 = *(_QWORD *)(v11 + 56);
    v44 = v11 + 56;
    v15 = ~v18;
    v20 = -v18;
    if (v20 < 64)
      v21 = ~(-1 << v20);
    else
      v21 = -1;
    v17 = v21 & v19;
  }
  v39 = v15;
  v42 = v11 & 0x7FFFFFFFFFFFFFFFLL;
  v43 = (unint64_t)(v15 + 64) >> 6;
  v40 = (char *)&type metadata for Swift.AnyObject + 8;
  while (v11 < 0)
  {
    v25 = __CocoaSet.Iterator.next()(v12);
    v26 = v25;
    if (!v25)
      goto LABEL_39;
    v50 = v25;
    swift_unknownObjectRetain(v25);
    swift_dynamicCast(&v51, &v50, v40, v41, 7);
    v27 = v51;
    swift_unknownObjectRelease(v26);
    v24 = v16;
    v22 = v17;
    if (!v27)
      goto LABEL_39;
LABEL_33:
    sub_100076128(v48, (uint64_t)v7);
    v31 = type metadata accessor for UUID(0);
    v32 = *(_QWORD *)(v31 - 8);
    isa = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v7, 1, v31) != 1)
    {
      isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v31);
    }
    v34 = objc_msgSend(v49, "serviceLikeItemWithItem:itemManager:withID:", v27, v47, isa, v39);

    if (v34)
    {
      if ((v45(v34) & 1) != 0)
      {
        v35 = objc_msgSend(v34, "accessories");
        v36 = sub_10005D394(0, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
        v37 = sub_1000597C8((unint64_t *)&qword_1000D2130, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
        v38 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v35, v36, v37);

        sub_10006FD54(v38);
        swift_bridgeObjectRelease(v38);

LABEL_39:
        sub_10005ACA4(v11);
        return;
      }

    }
    v16 = v24;
    v17 = v22;
  }
  if (v17)
  {
    v22 = (v17 - 1) & v17;
    v23 = __clz(__rbit64(v17)) | (v16 << 6);
    v24 = v16;
LABEL_32:
    v27 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v23);
    if (!v27)
      goto LABEL_39;
    goto LABEL_33;
  }
  v28 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    if (v28 >= v43)
      goto LABEL_39;
    v29 = *(_QWORD *)(v44 + 8 * v28);
    v24 = v16 + 1;
    if (!v29)
    {
      v24 = v16 + 2;
      if (v16 + 2 >= v43)
        goto LABEL_39;
      v29 = *(_QWORD *)(v44 + 8 * v24);
      if (!v29)
      {
        v24 = v16 + 3;
        if (v16 + 3 >= v43)
          goto LABEL_39;
        v29 = *(_QWORD *)(v44 + 8 * v24);
        if (!v29)
        {
          v24 = v16 + 4;
          if (v16 + 4 >= v43)
            goto LABEL_39;
          v29 = *(_QWORD *)(v44 + 8 * v24);
          if (!v29)
          {
            v30 = v16 + 5;
            while (v43 != v30)
            {
              v29 = *(_QWORD *)(v44 + 8 * v30++);
              if (v29)
              {
                v24 = v30 - 1;
                goto LABEL_31;
              }
            }
            goto LABEL_39;
          }
        }
      }
    }
LABEL_31:
    v22 = (v29 - 1) & v29;
    v23 = __clz(__rbit64(v29)) + (v24 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t HOAppDelegate.homeKitObjectID(from:userDefaultsEnabled:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  unint64_t v6;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD v17[5];
  __int128 v18;
  __int128 v19;

  v15 = 0x726F737365636361;
  v16 = 0xEB00000000444979;
  AnyHashable.init<A>(_:)(v17, &v15, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v4 = sub_100074310((uint64_t)v17), (v5 & 1) != 0))
  {
    sub_10005BBA0(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v18);
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  sub_10005B9BC((uint64_t)v17);
  if (*((_QWORD *)&v19 + 1))
  {
    if ((swift_dynamicCast(&v15, &v18, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v6 = v16;
      UUID.init(uuidString:)(v15, v16);
      return swift_bridgeObjectRelease(v6);
    }
  }
  else
  {
    sub_10005D3D4((uint64_t)&v18, &qword_1000D2120);
  }
  v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "stringForKey:", v9);

  if (v10)
  {
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    UUID.init(uuidString:)(v11, v13);
    return swift_bridgeObjectRelease(v13);
  }
  else
  {
    v14 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

id HOAppDelegate._runScrollTest(testName:scrollView:options:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_10006FE70(a1, a2, a3, a4, 0);
}

uint64_t HOAppDelegate._cameraProfileForTesting(in:with:)(void *a1, uint64_t a2)
{
  return sub_1000750B8(a1, a2);
}

uint64_t sub_100072324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (a2)
    v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  else
    v4 = 0;
  swift_retain(v2);
  v3(v4);
  swift_release(v2);
  return swift_bridgeObjectRelease(v4);
}

id sub_10007239C(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  _QWORD v13[5];
  _QWORD *v14;

  v6 = (_QWORD *)swift_allocObject(&unk_1000BB9D0, 40, 7);
  v6[2] = a2;
  v6[3] = a1;
  v6[4] = a3;
  v7 = (void *)objc_opt_self(NAScheduler);
  v8 = a2;
  swift_unknownObjectRetain(a1);
  v9 = objc_msgSend(v7, "globalAsyncScheduler");
  v13[4] = sub_1000766AC;
  v14 = v6;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10004D8A8;
  v13[3] = &unk_1000BB9E8;
  v10 = _Block_copy(v13);
  v11 = objc_msgSend((id)objc_opt_self(NAFuture), "futureWithBlock:scheduler:", v10, v9);
  swift_unknownObjectRelease(v9);
  _Block_release(v10);
  swift_release(v14);
  return v11;
}

uint64_t sub_1000724B4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v8;
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  id v12;
  id v13;
  _QWORD v15[5];
  _QWORD *v16;

  v8 = objc_msgSend((id)objc_opt_self(NAScheduler), "mainThreadScheduler");
  v9 = (_QWORD *)swift_allocObject(&unk_1000BBA20, 48, 7);
  v9[2] = a2;
  v9[3] = a1;
  v9[4] = a3;
  v9[5] = a4;
  v15[4] = sub_100076704;
  v16 = v9;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_100070484;
  v15[3] = &unk_1000BBA38;
  v10 = _Block_copy(v15);
  v11 = v16;
  v12 = a2;
  v13 = a1;
  swift_unknownObjectRetain(a3);
  swift_release(v11);
  objc_msgSend(v8, "performBlock:", v10);
  _Block_release(v10);
  return swift_unknownObjectRelease(v8);
}

id sub_1000725B8(void *a1, void *a2, uint64_t a3)
{
  NSString v6;

  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "endDisableExternalUpdatesWithReason:", v6);

  return objc_msgSend(a2, "finishWithResult:", a3);
}

id sub_10007262C(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  _QWORD v13[5];
  _QWORD *v14;

  v6 = (_QWORD *)swift_allocObject(&unk_1000BB930, 40, 7);
  v6[2] = a2;
  v6[3] = a1;
  v6[4] = a3;
  v7 = (void *)objc_opt_self(NAScheduler);
  v8 = a2;
  swift_errorRetain(a1);
  v9 = objc_msgSend(v7, "globalAsyncScheduler");
  v13[4] = sub_100076644;
  v14 = v6;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10004D8A8;
  v13[3] = &unk_1000BB948;
  v10 = _Block_copy(v13);
  v11 = objc_msgSend((id)objc_opt_self(NAFuture), "futureWithBlock:scheduler:", v10, v9);
  swift_unknownObjectRelease(v9);
  _Block_release(v10);
  swift_release(v14);
  return v11;
}

uint64_t sub_100072744(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v8;
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  id v12;
  id v13;
  _QWORD v15[5];
  _QWORD *v16;

  v8 = objc_msgSend((id)objc_opt_self(NAScheduler), "mainThreadScheduler");
  v9 = (_QWORD *)swift_allocObject(&unk_1000BB980, 48, 7);
  v9[2] = a2;
  v9[3] = a1;
  v9[4] = a3;
  v9[5] = a4;
  v15[4] = sub_10007665C;
  v16 = v9;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_100070484;
  v15[3] = &unk_1000BB998;
  v10 = _Block_copy(v15);
  v11 = v16;
  v12 = a2;
  v13 = a1;
  swift_errorRetain(a3);
  swift_release(v11);
  objc_msgSend(v8, "performBlock:", v10);
  _Block_release(v10);
  return swift_unknownObjectRelease(v8);
}

void sub_100072848(void *a1, void *a2, uint64_t a3)
{
  NSString v6;
  id v7;

  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "endDisableExternalUpdatesWithReason:", v6);

  v7 = (id)_convertErrorToNSError(_:)(a3);
  objc_msgSend(a2, "finishWithError:", v7);

}

id sub_1000728D8(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  NSString v8;
  id v9;

  v1 = objc_msgSend(a1, "topViewController");
  if (!v1)
    goto LABEL_5;
  v2 = v1;
  v3 = objc_opt_self(HUDashboardViewController);
  v4 = swift_dynamicCastObjCClass(v2, v3);
  if (!v4)
  {

LABEL_5:
    v7 = (void *)objc_opt_self(NSError);
    v8 = String._bridgeToObjectiveC()();
    v5 = objc_msgSend(v7, "hf_errorWithCode:description:", 30, v8);

    v2 = (void *)_convertErrorToNSError(_:)(v5);
    v6 = objc_msgSend((id)objc_opt_self(NAFuture), "futureWithError:", v2);
    goto LABEL_6;
  }
  v5 = objc_msgSend((id)objc_opt_self(NAFuture), "futureWithResult:", v4);
  v6 = objc_msgSend(v5, "asGeneric");
LABEL_6:
  v9 = v6;

  return v9;
}

uint64_t sub_100072A0C(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v10;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(*a1, "uniqueIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(a2) = static UUID.== infix(_:_:)(v7, a2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return a2 & 1;
}

uint64_t sub_100072ACC(id *a1, void **a2)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *a1;
  v3 = *a2;
  v4 = objc_msgSend(*a1, "accessory");
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  v6 = objc_msgSend(v3, "accessory");
  if (!v6)
  {

LABEL_9:
    v19 = sub_1000596B8();
    swift_allocError(&_s20PerformanceTestErrorON, v19, 0, 0);
    v21 = v20;
    v22 = sub_10005D394(0, (unint64_t *)&unk_1000D24C0, HMCameraProfile_ptr);
    *(_QWORD *)v21 = v2;
    *(_QWORD *)(v21 + 24) = v22;
    *(_QWORD *)(v21 + 32) = 0x726F737365636361;
    *(_QWORD *)(v21 + 40) = 0xE900000000000079;
    *(_BYTE *)(v21 + 48) = 3;
    swift_willThrow(v2);
    return 0;
  }
  v7 = v6;
  v8 = objc_msgSend(v5, "name");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = objc_msgSend(v7, "name");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  if (v13 != v9 || v15 != v11)
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v9, v11, 1);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v15);

    return v17 & 1;
  }
  swift_bridgeObjectRelease_n(v11, 2);

  return 0;
}

void sub_100072C78()
{
  uint64_t *v0;
  _QWORD v1[6];

  sub_100076D24(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

unint64_t sub_100072CBC()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  id v3;
  uint64_t v4;
  Swift::String v5;
  void *object;
  id v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;

  _StringGuts.grow(_:)(46);
  swift_bridgeObjectRelease(0xE000000000000000);
  v9 = 0xD000000000000015;
  v10 = 0x8000000100091880;
  v1._countAndFlagsBits = v0;
  v1._object = v11;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(v11);
  v2._object = (void *)0x80000001000918A0;
  v2._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v2);
  v8 = v12;
  v3 = v12;
  v4 = sub_100059788((uint64_t *)&unk_1000D2540);
  v5._countAndFlagsBits = String.init<A>(describing:)(&v8, v4);
  object = v5._object;
  String.append(_:)(v5);

  swift_bridgeObjectRelease(object);
  return v9;
}

_QWORD *sub_100073028(uint64_t a1)
{
  return sub_100073040(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_100074548);
}

_QWORD *sub_100073034(uint64_t a1)
{
  return sub_100073040(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_10007475C);
}

_QWORD *sub_100073040(uint64_t a1, uint64_t (*a2)(_QWORD *, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v4 <= 0)
    {
      v6 = _swiftEmptyArrayStorage;
    }
    else
    {
      v5 = sub_100059788((uint64_t *)&unk_1000D1CD0);
      v6 = (_QWORD *)swift_allocObject(v5, 8 * v4 + 32, 7);
      v7 = j__malloc_size(v6);
      v8 = v7 - 32;
      if (v7 < 32)
        v8 = v7 - 25;
      v6[2] = v4;
      v6[3] = (2 * (v8 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(a1);
    v9 = a2(v6 + 4, v4, a1);
    a2 = v10;
    swift_bridgeObjectRelease(v9);
    if (a2 == (uint64_t (*)(_QWORD *, uint64_t, uint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(a1);
    if (!v4)
      return _swiftEmptyArrayStorage;
  }
  return v6;
}

void sub_100073140(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  Swift::Int v12;
  uint64_t v13;
  Swift::Int v14;
  Swift::Int v15;
  Swift::Int v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  int v21;
  int v22;
  void **v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t *v28;
  Swift::Int v29;
  Swift::Int v30;
  uint64_t *v31;
  uint64_t v32;
  Swift::Int v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  void *v85;
  Swift::Int v86;
  void *v87;
  id v88;
  id v89;
  void *v90;
  id v91;
  void *v92;
  void *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v103;
  Swift::Int v104;
  void *v105;
  char *v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  char *v120;
  Swift::Int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  Swift::Int v126;
  Swift::Int v127;
  Swift::Int v128;
  Swift::Int v129;
  void *v130;
  Swift::Int v131;
  Swift::Int v132;
  void **v133;
  uint64_t v134;
  void *v135;
  id v136[2];
  uint64_t v137;

  v2 = v1;
  v4 = a1[1];
  v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_144;
    if (v4)
      sub_1000739FC(0, v4, 1, a1);
    return;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_153;
  v7 = v5;
  v124 = a1;
  if (v4 < 2)
  {
    v11 = (char *)_swiftEmptyArrayStorage;
    v137 = (uint64_t)_swiftEmptyArrayStorage;
    v133 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v36 = _swiftEmptyArrayStorage[2];
      goto LABEL_106;
    }
  }
  else
  {
    v8 = v6 >> 1;
    v9 = sub_10005D394(0, (unint64_t *)&unk_1000D24C0, HMCameraProfile_ptr);
    v10 = static Array._allocateBufferUninitialized(minimumCapacity:)(v8, v9);
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    v133 = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v137 = v10;
  }
  v12 = 0;
  v13 = *a1;
  v125 = *a1 + 16;
  v126 = v7;
  v123 = *a1 - 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v14 = v4;
  v127 = v4;
  v134 = *a1;
  do
  {
    v15 = v12;
    v16 = v12 + 1;
    v128 = v12;
    if (v12 + 1 < v14)
    {
      v17 = *(void **)(v13 + 8 * v16);
      v135 = *(void **)(v13 + 8 * v12);
      v18 = v135;
      v136[0] = v17;
      v19 = v17;
      v20 = v18;
      v21 = sub_100072ACC(v136, &v135);
      if (v2)
      {
        swift_bridgeObjectRelease(v11);

LABEL_121:
        goto LABEL_122;
      }
      v22 = v21;

      v16 = v15 + 2;
      if (v15 + 2 < v14)
      {
        v23 = (void **)(v125 + 8 * v15);
        while (1)
        {
          v24 = *v23;
          v135 = *(v23 - 1);
          v25 = v135;
          v136[0] = v24;
          v26 = v24;
          v27 = v25;
          LODWORD(v25) = sub_100072ACC(v136, &v135);

          if (((v22 ^ v25) & 1) != 0)
            break;
          ++v16;
          ++v23;
          if (v14 == v16)
          {
            v16 = v14;
            break;
          }
        }
        v15 = v128;
      }
      v13 = v134;
      if ((v22 & 1) != 0)
      {
        if (v16 < v15)
          goto LABEL_148;
        if (v15 < v16)
        {
          v28 = (uint64_t *)(v123 + 8 * v16);
          v29 = v16;
          v30 = v15;
          v31 = (uint64_t *)(v134 + 8 * v15);
          do
          {
            if (v30 != --v29)
            {
              if (!v134)
                goto LABEL_150;
              v32 = *v31;
              *v31 = *v28;
              *v28 = v32;
            }
            ++v30;
            --v28;
            ++v31;
          }
          while (v30 < v29);
        }
      }
    }
    if (v16 >= v14)
      goto LABEL_38;
    if (__OFSUB__(v16, v15))
      goto LABEL_145;
    if (v16 - v15 >= v126)
    {
LABEL_38:
      if (v16 < v15)
        goto LABEL_143;
      goto LABEL_39;
    }
    if (__OFADD__(v15, v126))
      goto LABEL_146;
    if (v15 + v126 >= v14)
      v33 = v14;
    else
      v33 = v15 + v126;
    if (v33 < v15)
    {
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
      __break(1u);
      return;
    }
    if (v16 == v33)
      goto LABEL_38;
    v119 = v2;
    v120 = v11;
    v84 = v123 + 8 * v16;
    v121 = v33;
    do
    {
      v85 = *(void **)(v13 + 8 * v16);
      v86 = v15;
      v122 = v84;
      v132 = v16;
      while (1)
      {
        v87 = *(void **)v84;
        v88 = v85;
        v20 = v87;
        v89 = objc_msgSend(v88, "accessory");
        if (!v89)
          goto LABEL_120;
        v90 = v89;
        v91 = objc_msgSend(v20, "accessory");
        if (!v91)
        {

LABEL_120:
          v114 = sub_1000596B8();
          swift_allocError(&_s20PerformanceTestErrorON, v114, 0, 0);
          v116 = v115;
          v117 = sub_10005D394(0, (unint64_t *)&unk_1000D24C0, HMCameraProfile_ptr);
          *(_QWORD *)v116 = v88;
          *(_QWORD *)(v116 + 24) = v117;
          *(_QWORD *)(v116 + 32) = 0x726F737365636361;
          *(_QWORD *)(v116 + 40) = 0xE900000000000079;
          *(_BYTE *)(v116 + 48) = 3;
          v118 = v88;
          swift_willThrow(v118);
          swift_bridgeObjectRelease(v120);

          goto LABEL_121;
        }
        v92 = v91;
        v93 = v88;
        v129 = v86;
        v130 = v20;
        v94 = objc_msgSend(v90, "name");
        v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v94);
        v97 = v96;

        v98 = objc_msgSend(v92, "name");
        v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
        v101 = v100;

        if (v99 == v95 && v101 == v97)
        {

          swift_bridgeObjectRelease_n(v97, 2);
          v13 = v134;
          v104 = v132;
          goto LABEL_102;
        }
        v103 = _stringCompareWithSmolCheck(_:_:expecting:)(v99, v101, v95, v97, 1);

        swift_bridgeObjectRelease(v97);
        swift_bridgeObjectRelease(v101);

        v104 = v132;
        if ((v103 & 1) == 0)
          break;
        v13 = v134;
        if (!v134)
          goto LABEL_151;
        v105 = *(void **)v84;
        v85 = *(void **)(v84 + 8);
        *(_QWORD *)v84 = v85;
        *(_QWORD *)(v84 + 8) = v105;
        v84 -= 8;
        v86 = v129 + 1;
        if (v132 == v129 + 1)
          goto LABEL_102;
      }
      v13 = v134;
LABEL_102:
      v16 = v104 + 1;
      v84 = v122 + 8;
      v15 = v128;
    }
    while (v16 != v121);
    v16 = v121;
    v2 = v119;
    v11 = v120;
    if (v121 < v128)
      goto LABEL_143;
LABEL_39:
    v131 = v16;
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_100074158(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v35 = *((_QWORD *)v11 + 2);
    v34 = *((_QWORD *)v11 + 3);
    v36 = v35 + 1;
    v13 = v134;
    if (v35 >= v34 >> 1)
    {
      v106 = sub_100074158((char *)(v34 > 1), v35 + 1, 1, v11);
      v13 = v134;
      v11 = v106;
    }
    *((_QWORD *)v11 + 2) = v36;
    v37 = v11 + 32;
    v38 = &v11[16 * v35 + 32];
    *(_QWORD *)v38 = v128;
    *((_QWORD *)v38 + 1) = v131;
    if (v35)
    {
      while (2)
      {
        v39 = v36 - 1;
        if (v36 >= 4)
        {
          v44 = &v37[16 * v36];
          v45 = *((_QWORD *)v44 - 8);
          v46 = *((_QWORD *)v44 - 7);
          v50 = __OFSUB__(v46, v45);
          v47 = v46 - v45;
          if (v50)
            goto LABEL_128;
          v49 = *((_QWORD *)v44 - 6);
          v48 = *((_QWORD *)v44 - 5);
          v50 = __OFSUB__(v48, v49);
          v42 = v48 - v49;
          v43 = v50;
          if (v50)
            goto LABEL_129;
          v51 = v36 - 2;
          v52 = &v37[16 * v36 - 32];
          v54 = *(_QWORD *)v52;
          v53 = *((_QWORD *)v52 + 1);
          v50 = __OFSUB__(v53, v54);
          v55 = v53 - v54;
          if (v50)
            goto LABEL_131;
          v50 = __OFADD__(v42, v55);
          v56 = v42 + v55;
          if (v50)
            goto LABEL_134;
          if (v56 >= v47)
          {
            v74 = &v37[16 * v39];
            v76 = *(_QWORD *)v74;
            v75 = *((_QWORD *)v74 + 1);
            v50 = __OFSUB__(v75, v76);
            v77 = v75 - v76;
            if (v50)
              goto LABEL_138;
            v67 = v42 < v77;
          }
          else
          {
LABEL_57:
            if ((v43 & 1) != 0)
              goto LABEL_130;
            v51 = v36 - 2;
            v57 = &v37[16 * v36 - 32];
            v59 = *(_QWORD *)v57;
            v58 = *((_QWORD *)v57 + 1);
            v60 = __OFSUB__(v58, v59);
            v61 = v58 - v59;
            v62 = v60;
            if (v60)
              goto LABEL_133;
            v63 = &v37[16 * v39];
            v65 = *(_QWORD *)v63;
            v64 = *((_QWORD *)v63 + 1);
            v50 = __OFSUB__(v64, v65);
            v66 = v64 - v65;
            if (v50)
              goto LABEL_136;
            if (__OFADD__(v61, v66))
              goto LABEL_137;
            if (v61 + v66 < v42)
              goto LABEL_69;
            v67 = v42 < v66;
          }
          if (v67)
            v39 = v51;
        }
        else
        {
          if (v36 == 3)
          {
            v41 = *((_QWORD *)v11 + 4);
            v40 = *((_QWORD *)v11 + 5);
            v50 = __OFSUB__(v40, v41);
            v42 = v40 - v41;
            v43 = v50;
            goto LABEL_57;
          }
          v68 = *((_QWORD *)v11 + 4);
          v69 = *((_QWORD *)v11 + 5);
          v50 = __OFSUB__(v69, v68);
          v61 = v69 - v68;
          v62 = v50;
LABEL_69:
          if ((v62 & 1) != 0)
            goto LABEL_132;
          v70 = &v37[16 * v39];
          v72 = *(_QWORD *)v70;
          v71 = *((_QWORD *)v70 + 1);
          v50 = __OFSUB__(v71, v72);
          v73 = v71 - v72;
          if (v50)
            goto LABEL_135;
          if (v73 < v61)
            goto LABEL_86;
        }
        v78 = v39 - 1;
        if (v39 - 1 >= v36)
        {
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
          goto LABEL_147;
        }
        if (!v13)
          goto LABEL_149;
        v79 = &v37[16 * v78];
        v80 = *(_QWORD *)v79;
        v81 = &v37[16 * v39];
        v82 = *((_QWORD *)v81 + 1);
        sub_100073AE8((void **)(v13 + 8 * *(_QWORD *)v79), (void **)(v13 + 8 * *(_QWORD *)v81), v13 + 8 * v82, v133);
        if (v2)
          goto LABEL_117;
        if (v82 < v80)
          goto LABEL_125;
        if (v39 > *((_QWORD *)v11 + 2))
          goto LABEL_126;
        *(_QWORD *)v79 = v80;
        *(_QWORD *)&v37[16 * v78 + 8] = v82;
        v83 = *((_QWORD *)v11 + 2);
        if (v39 >= v83)
          goto LABEL_127;
        v36 = v83 - 1;
        memmove(&v37[16 * v39], v81 + 16, 16 * (v83 - 1 - v39));
        *((_QWORD *)v11 + 2) = v83 - 1;
        v13 = v134;
        if (v83 <= 2)
          goto LABEL_86;
        continue;
      }
    }
    v36 = 1;
LABEL_86:
    v14 = v127;
    v12 = v131;
  }
  while (v131 < v127);
LABEL_106:
  if (v36 >= 2)
  {
    v107 = *v124;
    do
    {
      v108 = v36 - 2;
      if (v36 < 2)
        goto LABEL_139;
      if (!v107)
        goto LABEL_152;
      v109 = *(_QWORD *)&v11[16 * v108 + 32];
      v110 = *(_QWORD *)&v11[16 * v36 + 24];
      sub_100073AE8((void **)(v107 + 8 * v109), (void **)(v107 + 8 * *(_QWORD *)&v11[16 * v36 + 16]), v107 + 8 * v110, v133);
      if (v2)
        break;
      if (v110 < v109)
        goto LABEL_140;
      if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
        v11 = sub_1000742FC((uint64_t)v11);
      if (v108 >= *((_QWORD *)v11 + 2))
        goto LABEL_141;
      v111 = &v11[16 * v108 + 32];
      *(_QWORD *)v111 = v109;
      *((_QWORD *)v111 + 1) = v110;
      v112 = *((_QWORD *)v11 + 2);
      if (v36 > v112)
        goto LABEL_142;
      memmove(&v11[16 * v36 + 16], &v11[16 * v36 + 32], 16 * (v112 - v36));
      *((_QWORD *)v11 + 2) = v112 - 1;
      v36 = v112 - 1;
    }
    while (v112 > 2);
  }
LABEL_117:
  v113 = swift_bridgeObjectRelease(v11);
LABEL_122:
  *(_QWORD *)((v137 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  specialized Array._endMutation()(v113);
  swift_bridgeObjectRelease(v137);
}

void sub_1000739FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  void *v15;
  void *v18;
  id v19;

  if (a3 != a2)
  {
    v5 = a3;
    v6 = a1;
    v7 = *a4;
    v8 = *a4 + 8 * a3 - 8;
LABEL_4:
    v9 = *(void **)(v7 + 8 * v5);
    v10 = v8;
    while (1)
    {
      v19 = v9;
      v18 = *(void **)v10;
      v11 = v18;
      v12 = v9;
      v13 = v11;
      v14 = sub_100072ACC(&v19, &v18);

      if (v4)
        break;
      if ((v14 & 1) != 0)
      {
        if (!v7)
        {
          __break(1u);
          return;
        }
        v15 = *(void **)v10;
        v9 = *(void **)(v10 + 8);
        *(_QWORD *)v10 = v9;
        *(_QWORD *)(v10 + 8) = v15;
        v10 -= 8;
        if (v5 != ++v6)
          continue;
      }
      ++v5;
      v8 += 8;
      v6 = a1;
      if (v5 != a2)
        goto LABEL_4;
      return;
    }
  }
}

uint64_t sub_100073AE8(void **__src, void **a2, unint64_t a3, void **__dst)
{
  id *v5;
  void **v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  char v18;
  char v19;
  id *v20;
  void **v21;
  id *v22;
  id *v23;
  id *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  char v29;
  char v30;
  id *v31;
  void **v32;
  uint64_t result;
  void **v34;
  void **v35;
  uint64_t v36;
  void *v37;
  id v38;
  void **v39;
  void **v40;
  void **v41;

  v35 = __dst;
  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v41 = __src;
  v40 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (__dst != a2 || &a2[v12] <= __dst)
      {
        memmove(__dst, a2, 8 * v12);
        __dst = v35;
      }
      v21 = &__dst[v12];
      v39 = v21;
      v41 = v5;
      if (v6 < v5 && v10 >= 8)
      {
        v22 = (id *)(a3 - 8);
        v23 = v5;
        v34 = v6;
        while (1)
        {
          v24 = v21;
          v25 = *--v21;
          v38 = v25;
          v26 = *--v23;
          v37 = v26;
          v27 = v38;
          v28 = v26;
          v29 = sub_100072ACC(&v38, &v37);
          if (v36)
            break;
          v30 = v29;
          v36 = 0;
          v31 = v22 + 1;

          if ((v30 & 1) != 0)
          {
            v32 = v35;
            if (v31 != v5 || v22 >= v5)
              *v22 = *v23;
            v41 = v23;
            v21 = v24;
          }
          else
          {
            v39 = v21;
            v32 = v35;
            if (v31 < v24 || v22 >= v24 || v31 != v24)
              *v22 = *v21;
            v23 = v5;
          }
          if (v23 > v34)
          {
            --v22;
            v5 = v23;
            if (v21 > v32)
              continue;
          }
          goto LABEL_48;
        }

      }
      goto LABEL_48;
    }
  }
  else if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst)
    {
      memmove(__dst, __src, 8 * v9);
      __dst = v35;
    }
    v13 = &__dst[v9];
    v39 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      while (1)
      {
        v38 = *v5;
        v14 = __dst;
        v37 = *__dst;
        v15 = v37;
        v16 = v38;
        v17 = v15;
        v18 = sub_100072ACC(&v38, &v37);
        if (v36)
          break;
        v19 = v18;

        if ((v19 & 1) != 0)
        {
          v20 = v5 + 1;
          if (v6 < v5 || v6 >= v20 || v6 != v5)
            *v6 = *v5;
          __dst = v14;
        }
        else
        {
          if (v6 != v14)
            *v6 = *v14;
          __dst = v14 + 1;
          v40 = v14 + 1;
          v20 = v5;
        }
        v36 = 0;
        v41 = ++v6;
        if (__dst < v13)
        {
          v5 = v20;
          if ((unint64_t)v20 < a3)
            continue;
        }
        goto LABEL_48;
      }

    }
LABEL_48:
    sub_100074254((void **)&v41, (const void **)&v40, &v39);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100073E1C(id *__src, id *a2, unint64_t a3, void **a4, uint64_t (*a5)(id, id))
{
  uint64_t v5;
  uint64_t v6;
  id *v7;
  id *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  char *v16;
  void **v17;
  id *v18;
  void *v19;
  id v20;
  id v21;
  char v22;
  char v23;
  id *v24;
  void **v25;
  char *v26;
  id *v27;
  id *v28;
  unint64_t v29;
  char *v30;
  void *v31;
  char v32;
  char v33;
  id *v34;
  unint64_t v35;
  uint64_t result;
  id *v37;
  id *v40;
  char *v42;
  void **v43;
  id *v44;

  v6 = v5;
  v7 = a2;
  v8 = __src;
  v9 = (char *)a2 - (char *)__src;
  v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v10 = (char *)a2 - (char *)__src;
  v11 = v10 >> 3;
  v12 = a3 - (_QWORD)a2;
  v13 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v13 = a3 - (_QWORD)a2;
  v14 = v13 >> 3;
  v44 = __src;
  v43 = a4;
  if (v11 >= v13 >> 3)
  {
    if (v12 >= -7)
    {
      if (a4 != a2 || &a2[v14] <= a4)
        memmove(a4, a2, 8 * v14);
      v26 = (char *)&a4[v14];
      v42 = v26;
      v44 = v7;
      if (v8 >= v7 || v12 < 8)
        goto LABEL_46;
      v27 = (id *)(a3 - 8);
      v28 = v7;
      v37 = v8;
      while (1)
      {
        v40 = v7;
        v29 = (unint64_t)v26;
        v30 = v26 - 8;
        v31 = *--v28;
        v20 = *((id *)v26 - 1);
        v21 = v31;
        v32 = a5(v20, v21);
        if (v6)
          goto LABEL_45;
        v33 = v32;
        v34 = v27 + 1;

        if ((v33 & 1) != 0)
        {
          v35 = (unint64_t)v37;
          v26 = (char *)v29;
          if (v34 != v40 || v27 >= v40)
            *v27 = *v28;
          v44 = v28;
        }
        else
        {
          v42 = v30;
          v35 = (unint64_t)v37;
          v28 = v40;
          if ((unint64_t)v34 < v29 || (unint64_t)v27 >= v29 || v34 != (id *)v29)
            *v27 = *(id *)v30;
          v26 = v30;
        }
        v6 = 0;
        if ((unint64_t)v28 > v35)
        {
          --v27;
          v7 = v28;
          if (v26 > (char *)a4)
            continue;
        }
        goto LABEL_46;
      }
    }
  }
  else if (v9 >= -7)
  {
    v15 = a4;
    if (a4 != __src || &__src[v11] <= a4)
      memmove(a4, __src, 8 * v11);
    v16 = (char *)&a4[v11];
    v42 = v16;
    if ((unint64_t)v7 >= a3 || v9 < 8)
      goto LABEL_46;
    while (1)
    {
      v17 = v8;
      v18 = v7;
      v19 = *v15;
      v20 = *v7;
      v21 = v19;
      v22 = a5(v20, v21);
      if (v5)
        break;
      v23 = v22;

      if ((v23 & 1) != 0)
      {
        v24 = v18 + 1;
        v25 = v17;
        if (v17 < v18 || v17 >= v24 || v17 != v18)
          *v17 = *v18;
      }
      else
      {
        v25 = v17;
        if (v17 != v15)
          *v17 = *v15;
        v43 = ++v15;
        v24 = v18;
      }
      v8 = v25 + 1;
      v44 = v8;
      if (v15 < (void **)v16)
      {
        v7 = v24;
        if ((unint64_t)v24 < a3)
          continue;
      }
      goto LABEL_46;
    }
LABEL_45:

LABEL_46:
    sub_100074254((void **)&v44, (const void **)&v43, &v42);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_100074158(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100059788(&qword_1000D24E8);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_100074254(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1000742FC(uint64_t a1)
{
  return sub_100074158(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_100074310(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_1000743A4(a1, v4);
}

unint64_t sub_100074340(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_100074468(a1, a2, v5);
}

unint64_t sub_1000743A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_100076710(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_10005B9BC((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_100074468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_100074548(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100076768(&qword_1000D2518, &qword_1000D2510);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100059788(&qword_1000D2510);
          v13 = sub_100074B84(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10005D394(0, &qword_1000D1650, HMRoom_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10007475C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100076768((unint64_t *)&unk_1000D2530, &qword_1000D2528);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100059788(&qword_1000D2528);
          v13 = sub_100074BDC(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10005D394(0, &qword_1000D2520, HMActionSet_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100074970(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100076768(&qword_1000D24D8, &qword_1000D24D0);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100059788(&qword_1000D24D0);
          v13 = sub_100074B84(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10005D394(0, (unint64_t *)&unk_1000D24C0, HMCameraProfile_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void (*sub_100074B84(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100074C5C(v6, a2, a3);
  return sub_100074BD8;
}

void (*sub_100074BDC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100074CC8(v6, a2, a3);
  return sub_100074BD8;
}

void sub_100074C30(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_100074C5C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_100076DC4;
  }
  __break(1u);
  return result;
}

void (*sub_100074CC8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_100074D34;
  }
  __break(1u);
  return result;
}

void sub_100074D34(id *a1)
{

}

uint64_t sub_100074D3C(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

void sub_100074D50(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_100074D64(a1, a2, a3, a4, &qword_1000D1750, HMService_ptr);
}

void sub_100074D64(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5, _QWORD *a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  id v23;
  uint64_t v24;
  unint64_t *v25;

  v10 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        v14 = __CocoaSet.Index.element.getter(v10, a2);
        v24 = v14;
        v15 = sub_10005D394(0, a5, a6);
        swift_unknownObjectRetain(v14);
        swift_dynamicCast(&v25, &v24, (char *)&type metadata for Swift.AnyObject + 8, v15, 7);
        a5 = v25;
        swift_unknownObjectRelease(v14);
        v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
        v17 = -1 << *(_BYTE *)(a4 + 32);
        v10 = v16 & ~v17;
        if (((*(_QWORD *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
        {
          v18 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
          v19 = static NSObject.== infix(_:_:)(v18, a5);

          if ((v19 & 1) == 0)
          {
            v20 = ~v17;
            do
            {
              v10 = (v10 + 1) & v20;
              if (((*(_QWORD *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
                goto LABEL_24;
              v21 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
              v22 = static NSObject.== infix(_:_:)(v21, a5);

            }
            while ((v22 & 1) == 0);
          }

LABEL_20:
          v23 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v11 = a4;
  else
    v11 = a4 & 0xFFFFFFFFFFFFFF8;
  v12 = __CocoaSet.element(at:)(a1, a2, v11);
  v24 = v12;
  v13 = sub_10005D394(0, a5, a6);
  swift_unknownObjectRetain(v12);
  swift_dynamicCast(&v25, &v24, (char *)&type metadata for Swift.AnyObject + 8, v13, 7);
  swift_unknownObjectRelease(v12);
}

uint64_t sub_100074FC8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_100075050(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

uint64_t sub_1000750B8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = sub_100059788((uint64_t *)&unk_1000D1810);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100076128(a2, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v17 = objc_msgSend(a1, "hf_allCameraProfiles");
    v18 = sub_10005D394(0, (unint64_t *)&unk_1000D24C0, HMCameraProfile_ptr);
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

    __chkstk_darwin(v20);
    *(&v27 - 2) = (uint64_t)v11;
    a1 = sub_100070504(sub_100076D58, (uint64_t)(&v27 - 4), v19);
    swift_bridgeObjectRelease(v19);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (uint64_t)a1;
  }
  sub_10005D3D4((uint64_t)v7, (uint64_t *)&unk_1000D1810);
  v12 = objc_msgSend(a1, "hf_allCameraProfiles");
  v13 = sub_10005D394(0, (unint64_t *)&unk_1000D24C0, HMCameraProfile_ptr);
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  if (v14 < 0 || (v14 & 0x4000000000000000) != 0)
  {
    v24 = swift_bridgeObjectRetain(v14);
    v15 = (uint64_t)sub_100073040(v24, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_100074970);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v15 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
  }
  v28 = v15;
  sub_10007164C(&v28);
  if (v2)
  {
    v16 = v28;
    swift_bridgeObjectRelease(v14);
    swift_release(v16);
    return (uint64_t)a1;
  }
  result = swift_bridgeObjectRelease(v14);
  v22 = v28;
  if ((v28 & 0x8000000000000000) == 0 && (v28 & 0x4000000000000000) == 0)
  {
    if (*(_QWORD *)(v28 + 16))
      goto LABEL_12;
LABEL_18:
    swift_release(v22);
    return 0;
  }
  v25 = swift_bridgeObjectRetain(v28);
  v26 = _CocoaArrayWrapper.endIndex.getter(v25);
  result = swift_release(v22);
  if (!v26)
    goto LABEL_18;
LABEL_12:
  if ((v22 & 0xC000000000000001) != 0)
  {
    v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v22);
    goto LABEL_15;
  }
  if (*(_QWORD *)(v22 + 16))
  {
    v23 = *(id *)(v22 + 32);
LABEL_15:
    a1 = v23;
    swift_release(v22);
    return (uint64_t)a1;
  }
  __break(1u);
  return result;
}

id _sSo13HOAppDelegateC7HomeAppE23firstReadCompleteFutureSo8NAFutureCySo6NSNullCGyF_0()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void **v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v0 = objc_msgSend((id)objc_opt_self(HFHomeKitDispatcher), "sharedDispatcher");
  v1 = objc_msgSend(v0, "homeFuture");

  if (!v1)
    return objc_msgSend((id)objc_opt_self(NAFuture), "futureWithNoResult");
  v11 = sub_100070CFC;
  v12 = 0;
  v7 = _NSConcreteStackBlock;
  v8 = 1107296256;
  v9 = sub_10004ACD0;
  v10 = &unk_1000BBA60;
  v2 = _Block_copy(&v7);
  v3 = objc_msgSend(v1, "flatMap:", v2);
  _Block_release(v2);
  v11 = sub_100070D54;
  v12 = 0;
  v7 = _NSConcreteStackBlock;
  v8 = 1107296256;
  v9 = sub_1000704B0;
  v10 = &unk_1000BBA88;
  v4 = _Block_copy(&v7);
  v5 = objc_msgSend(v3, "flatMap:", v4);

  _Block_release(v4);
  return v5;
}

void *_sSo13HOAppDelegateC7HomeAppE15serviceLikeItem4item0H7Manager6withIDSo09HFServicefG0_So6HFItemCXcSgAJ_So0mI0C10Foundation4UUIDVSgtF_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v31;
  char *v32;
  __objc2_prot *v33;

  v6 = sub_100059788((uint64_t *)&unk_1000D1810);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = &OBJC_PROTOCOL___HFServiceLikeItem;
  v13 = (void *)swift_dynamicCastObjCProtocolConditional(a1, 1, &v33);
  if (v13)
  {
    v32 = v12;
    v14 = sub_10005D394(0, (unint64_t *)&unk_1000D2500, HFControlItem_ptr);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v14);
    v16 = a1;
    v17 = objc_msgSend(a2, "childItemsForItem:ofClass:", v13, ObjCClassFromMetadata);
    v18 = sub_10005D394(0, &qword_1000D24A8, HFItem_ptr);
    v19 = sub_1000597C8((unint64_t *)&unk_1000D24B0, &qword_1000D24A8, HFItem_ptr);
    v20 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v17, v18, v19);

    if ((v20 & 0xC000000000000001) != 0)
    {
      if (v20 < 0)
        v21 = v20;
      else
        v21 = v20 & 0xFFFFFFFFFFFFFF8;
      v22 = __CocoaSet.count.getter(v21);
    }
    else
    {
      v22 = *(_QWORD *)(v20 + 16);
    }
    swift_bridgeObjectRelease(v20);
    if (v22 >= 1)
    {
      sub_100076128(a3, (uint64_t)v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_10005D3D4((uint64_t)v8, (uint64_t *)&unk_1000D1810);
        return v13;
      }
      v23 = v32;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v32, v8, v9);
      v24 = objc_msgSend(v13, "accessories");
      v25 = sub_10005D394(0, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
      v26 = sub_1000597C8((unint64_t *)&qword_1000D2130, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
      v27 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v24, v25, v26);

      __chkstk_darwin(v28);
      *(&v31 - 2) = (uint64_t)v23;
      sub_10007084C(sub_10007674C, (uint64_t)(&v31 - 4), v27);
      LOBYTE(v24) = v29;
      swift_bridgeObjectRelease(v27);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
      if ((v24 & 1) != 0)
        return v13;
    }

    return 0;
  }
  return v13;
}

void sub_1000757F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(id, id))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  void *v15;
  uint64_t v18;

  if (a3 != a2)
  {
    v6 = a3;
    v7 = a1;
    v8 = *a4;
    v9 = *a4 + 8 * a3 - 8;
LABEL_4:
    v10 = *(void **)(v8 + 8 * v6);
    v18 = v9;
    while (1)
    {
      v11 = *(void **)v9;
      v12 = v10;
      v13 = v11;
      v14 = a5(v12, v13);

      if (v5)
        break;
      if ((v14 & 1) != 0)
      {
        if (!v8)
        {
          __break(1u);
          return;
        }
        v15 = *(void **)v9;
        v10 = *(void **)(v9 + 8);
        *(_QWORD *)v9 = v10;
        *(_QWORD *)(v9 + 8) = v15;
        v9 -= 8;
        if (v6 != ++v7)
          continue;
      }
      ++v6;
      v9 = v18 + 8;
      v7 = a1;
      if (v6 != a2)
        goto LABEL_4;
      return;
    }
  }
}

void sub_1000758E4(uint64_t *a1, uint64_t (*a2)(id, id))
{
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::Int v11;
  uint64_t v12;
  Swift::Int v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  int v18;
  int v19;
  id *v20;
  void *v21;
  id v22;
  id v23;
  int v24;
  uint64_t *v25;
  Swift::Int v26;
  Swift::Int v27;
  uint64_t *v28;
  uint64_t v29;
  Swift::Int v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  void *v86;
  Swift::Int v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  id v92;
  char v93;
  char v94;
  void *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  Swift::Int v112;
  Swift::Int v113;
  Swift::Int v114;
  Swift::Int v115;
  Swift::Int v116;
  Swift::Int v117;
  void **v118;
  uint64_t v119;
  uint64_t v121;

  v4 = a1[1];
  v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_145;
    if (v4)
      sub_1000757F4(0, v4, 1, a1, a2);
    return;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_154;
  v114 = v5;
  v110 = a1;
  if (v4 < 2)
  {
    v10 = (char *)_swiftEmptyArrayStorage;
    v121 = (uint64_t)_swiftEmptyArrayStorage;
    v118 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v34 = _swiftEmptyArrayStorage[2];
LABEL_105:
      if (v34 >= 2)
      {
        v98 = *v110;
        do
        {
          v99 = v34 - 2;
          if (v34 < 2)
            goto LABEL_140;
          if (!v98)
            goto LABEL_153;
          v100 = (uint64_t)v10;
          v101 = *(_QWORD *)&v10[16 * v99 + 32];
          v102 = *(_QWORD *)&v10[16 * v34 + 24];
          sub_100073E1C((id *)(v98 + 8 * v101), (id *)(v98 + 8 * *(_QWORD *)&v10[16 * v34 + 16]), v98 + 8 * v102, v118, a2);
          if (v2)
          {
            v97 = v100;
            goto LABEL_122;
          }
          if (v102 < v101)
            goto LABEL_141;
          if ((swift_isUniquelyReferenced_nonNull_native(v100) & 1) != 0)
            v103 = (char *)v100;
          else
            v103 = sub_1000742FC(v100);
          if (v99 >= *((_QWORD *)v103 + 2))
            goto LABEL_142;
          v104 = &v103[16 * v99 + 32];
          *(_QWORD *)v104 = v101;
          *((_QWORD *)v104 + 1) = v102;
          v105 = *((_QWORD *)v103 + 2);
          if (v34 > v105)
            goto LABEL_143;
          v106 = v103;
          memmove(&v103[16 * v34 + 16], &v103[16 * v34 + 32], 16 * (v105 - v34));
          v10 = v106;
          *((_QWORD *)v106 + 2) = v105 - 1;
          v34 = v105 - 1;
        }
        while (v105 > 2);
      }
      v97 = (uint64_t)v10;
LABEL_122:
      v107 = swift_bridgeObjectRelease(v97);
      goto LABEL_123;
    }
  }
  else
  {
    v7 = v6 >> 1;
    v8 = sub_100059788(&qword_1000D24F8);
    v9 = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    v118 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v121 = v9;
  }
  v11 = 0;
  v12 = *a1;
  v111 = *a1 + 16;
  v109 = *a1 - 8;
  v10 = (char *)_swiftEmptyArrayStorage;
  v115 = v4;
  v119 = *a1;
LABEL_13:
  v13 = v11++;
  if (v11 < v4)
  {
    v14 = v10;
    v15 = *(void **)(v12 + 8 * v13);
    v16 = *(id *)(v12 + 8 * v11);
    v17 = v15;
    v18 = a2(v16, v17);
    if (v2)
    {
      swift_bridgeObjectRelease(v14);

      goto LABEL_123;
    }
    v19 = v18;

    v11 = v13 + 2;
    if (v13 + 2 < v4)
    {
      v112 = v13;
      v20 = (id *)(v111 + 8 * v13);
      while (1)
      {
        v21 = *(v20 - 1);
        v22 = *v20;
        v23 = v21;
        v24 = a2(v22, v23);

        if (((v19 ^ v24) & 1) != 0)
          break;
        ++v11;
        ++v20;
        v4 = v115;
        if (v115 == v11)
        {
          v11 = v115;
          goto LABEL_21;
        }
      }
      v4 = v115;
LABEL_21:
      v13 = v112;
    }
    v10 = v14;
    v12 = v119;
    if ((v19 & 1) != 0)
    {
      if (v11 < v13)
        goto LABEL_149;
      if (v13 < v11)
      {
        v25 = (uint64_t *)(v109 + 8 * v11);
        v26 = v11;
        v27 = v13;
        v28 = (uint64_t *)(v119 + 8 * v13);
        do
        {
          if (v27 != --v26)
          {
            if (!v119)
              goto LABEL_152;
            v29 = *v28;
            *v28 = *v25;
            *v25 = v29;
          }
          ++v27;
          --v25;
          ++v28;
        }
        while (v27 < v26);
      }
    }
  }
  if (v11 >= v4)
    goto LABEL_40;
  if (__OFSUB__(v11, v13))
    goto LABEL_146;
  if (v11 - v13 >= v114)
  {
LABEL_40:
    if (v11 < v13)
      goto LABEL_144;
    goto LABEL_41;
  }
  if (__OFADD__(v13, v114))
    goto LABEL_147;
  if (v13 + v114 >= v4)
    v30 = v4;
  else
    v30 = v13 + v114;
  if (v30 >= v13)
  {
    if (v11 == v30)
      goto LABEL_40;
    v108 = v10;
    v85 = v109 + 8 * v11;
    v113 = v13;
    v117 = v30;
    while (1)
    {
      v86 = *(void **)(v12 + 8 * v11);
      v87 = v13;
      v88 = v85;
      v89 = v85;
      while (1)
      {
        v90 = *(void **)v89;
        v91 = v86;
        v92 = v90;
        v93 = a2(v91, v92);
        if (v2)
        {
          swift_bridgeObjectRelease(v108);

LABEL_123:
          *(_QWORD *)((v121 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
          specialized Array._endMutation()(v107);
          swift_bridgeObjectRelease(v121);
          return;
        }
        v94 = v93;

        if ((v94 & 1) == 0)
          break;
        v12 = v119;
        if (!v119)
          goto LABEL_151;
        v95 = *(void **)v89;
        v86 = *(void **)(v89 + 8);
        *(_QWORD *)v89 = v86;
        *(_QWORD *)(v89 + 8) = v95;
        v89 -= 8;
        if (v11 == ++v87)
          goto LABEL_99;
      }
      v12 = v119;
LABEL_99:
      ++v11;
      v85 = v88 + 8;
      v13 = v113;
      if (v11 == v117)
      {
        v11 = v117;
        v10 = v108;
        if (v117 < v113)
          goto LABEL_144;
LABEL_41:
        v31 = v10;
        if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) != 0)
          v10 = v31;
        else
          v10 = sub_100074158(0, *((_QWORD *)v31 + 2) + 1, 1, v31);
        v33 = *((_QWORD *)v10 + 2);
        v32 = *((_QWORD *)v10 + 3);
        v34 = v33 + 1;
        v12 = v119;
        if (v33 >= v32 >> 1)
        {
          v96 = sub_100074158((char *)(v32 > 1), v33 + 1, 1, v10);
          v12 = v119;
          v10 = v96;
        }
        *((_QWORD *)v10 + 2) = v34;
        v35 = v10 + 32;
        v36 = &v10[16 * v33 + 32];
        *(_QWORD *)v36 = v13;
        *((_QWORD *)v36 + 1) = v11;
        if (v33)
        {
          v116 = v11;
          while (1)
          {
            v37 = v34 - 1;
            if (v34 >= 4)
            {
              v42 = &v35[16 * v34];
              v43 = *((_QWORD *)v42 - 8);
              v44 = *((_QWORD *)v42 - 7);
              v48 = __OFSUB__(v44, v43);
              v45 = v44 - v43;
              if (v48)
                goto LABEL_129;
              v47 = *((_QWORD *)v42 - 6);
              v46 = *((_QWORD *)v42 - 5);
              v48 = __OFSUB__(v46, v47);
              v40 = v46 - v47;
              v41 = v48;
              if (v48)
                goto LABEL_130;
              v49 = v34 - 2;
              v50 = &v35[16 * v34 - 32];
              v52 = *(_QWORD *)v50;
              v51 = *((_QWORD *)v50 + 1);
              v48 = __OFSUB__(v51, v52);
              v53 = v51 - v52;
              if (v48)
                goto LABEL_132;
              v48 = __OFADD__(v40, v53);
              v54 = v40 + v53;
              if (v48)
                goto LABEL_135;
              if (v54 >= v45)
              {
                v72 = &v35[16 * v37];
                v74 = *(_QWORD *)v72;
                v73 = *((_QWORD *)v72 + 1);
                v48 = __OFSUB__(v73, v74);
                v75 = v73 - v74;
                if (v48)
                  goto LABEL_139;
                v65 = v40 < v75;
                goto LABEL_78;
              }
            }
            else
            {
              if (v34 != 3)
              {
                v66 = *((_QWORD *)v10 + 4);
                v67 = *((_QWORD *)v10 + 5);
                v48 = __OFSUB__(v67, v66);
                v59 = v67 - v66;
                v60 = v48;
                goto LABEL_72;
              }
              v39 = *((_QWORD *)v10 + 4);
              v38 = *((_QWORD *)v10 + 5);
              v48 = __OFSUB__(v38, v39);
              v40 = v38 - v39;
              v41 = v48;
            }
            if ((v41 & 1) != 0)
              goto LABEL_131;
            v49 = v34 - 2;
            v55 = &v35[16 * v34 - 32];
            v57 = *(_QWORD *)v55;
            v56 = *((_QWORD *)v55 + 1);
            v58 = __OFSUB__(v56, v57);
            v59 = v56 - v57;
            v60 = v58;
            if (v58)
              goto LABEL_134;
            v61 = &v35[16 * v37];
            v63 = *(_QWORD *)v61;
            v62 = *((_QWORD *)v61 + 1);
            v48 = __OFSUB__(v62, v63);
            v64 = v62 - v63;
            if (v48)
              goto LABEL_137;
            if (__OFADD__(v59, v64))
              goto LABEL_138;
            if (v59 + v64 >= v40)
            {
              v65 = v40 < v64;
LABEL_78:
              if (v65)
                v37 = v49;
              goto LABEL_80;
            }
LABEL_72:
            if ((v60 & 1) != 0)
              goto LABEL_133;
            v68 = &v35[16 * v37];
            v70 = *(_QWORD *)v68;
            v69 = *((_QWORD *)v68 + 1);
            v48 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            if (v48)
              goto LABEL_136;
            if (v71 < v59)
              goto LABEL_89;
LABEL_80:
            v76 = v37 - 1;
            if (v37 - 1 >= v34)
            {
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
              goto LABEL_148;
            }
            if (!v12)
              goto LABEL_150;
            v77 = v10;
            v78 = &v35[16 * v76];
            v79 = *(_QWORD *)v78;
            v80 = v35;
            v81 = v37;
            v82 = &v35[16 * v37];
            v83 = *((_QWORD *)v82 + 1);
            sub_100073E1C((id *)(v12 + 8 * *(_QWORD *)v78), (id *)(v12 + 8 * *(_QWORD *)v82), v12 + 8 * v83, v118, a2);
            if (v2)
            {
              v97 = (uint64_t)v77;
              goto LABEL_122;
            }
            if (v83 < v79)
              goto LABEL_126;
            if (v81 > *((_QWORD *)v77 + 2))
              goto LABEL_127;
            *(_QWORD *)v78 = v79;
            *(_QWORD *)&v80[16 * v76 + 8] = v83;
            v84 = *((_QWORD *)v77 + 2);
            if (v81 >= v84)
              goto LABEL_128;
            v34 = v84 - 1;
            memmove(v82, v82 + 16, 16 * (v84 - 1 - v81));
            v35 = v80;
            v10 = v77;
            *((_QWORD *)v77 + 2) = v84 - 1;
            v12 = v119;
            v11 = v116;
            if (v84 <= 2)
              goto LABEL_89;
          }
        }
        v34 = 1;
LABEL_89:
        v4 = v115;
        if (v11 >= v115)
          goto LABEL_105;
        goto LABEL_13;
      }
    }
  }
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_10007608C(uint64_t *a1, uint64_t (*a2)(id, id))
{
  uint64_t v4;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9[2];

  v4 = *a1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
  *a1 = v4;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    v4 = sub_100075050(v4);
    *a1 = v4;
  }
  v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v9[0] = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
  v9[1] = v6;
  sub_1000758E4(v9, a2);
  return specialized Array._endMutation()(v7);
}

uint64_t sub_100076128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100059788((uint64_t *)&unk_1000D1810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100076170(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Class isa;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  void *v51;
  _QWORD v52[5];

  v45 = a4;
  v48 = a2;
  v49 = a3;
  v5 = sub_100059788((uint64_t *)&unk_1000D1810);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a1;
  v8 = objc_msgSend(a1, "allDisplayedItems");
  v9 = sub_10005D394(0, &qword_1000D24A8, HFItem_ptr);
  v10 = sub_1000597C8((unint64_t *)&unk_1000D24B0, &qword_1000D24A8, HFItem_ptr);
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v9, v10);

  v41 = v9;
  if ((v11 & 0xC000000000000001) != 0)
  {
    if (v11 < 0)
      v13 = v11;
    else
      v13 = v11 & 0xFFFFFFFFFFFFFF8;
    v14 = __CocoaSet.makeIterator()(v13);
    v12 = Set.Iterator.init(_cocoa:)(v52, v14, v9, v10);
    v11 = v52[0];
    v44 = v52[1];
    v15 = v52[2];
    v16 = v52[3];
    v17 = v52[4];
  }
  else
  {
    v16 = 0;
    v18 = -1 << *(_BYTE *)(v11 + 32);
    v19 = *(_QWORD *)(v11 + 56);
    v44 = v11 + 56;
    v15 = ~v18;
    v20 = -v18;
    if (v20 < 64)
      v21 = ~(-1 << v20);
    else
      v21 = -1;
    v17 = v21 & v19;
  }
  v39 = v15;
  v42 = v11 & 0x7FFFFFFFFFFFFFFFLL;
  v43 = (unint64_t)(v15 + 64) >> 6;
  v40 = (char *)&type metadata for Swift.AnyObject + 8;
  while (v11 < 0)
  {
    v25 = __CocoaSet.Iterator.next()(v12);
    if (!v25)
      goto LABEL_39;
    v26 = v25;
    v50 = v25;
    swift_unknownObjectRetain(v25);
    swift_dynamicCast(&v51, &v50, v40, v41, 7);
    v27 = v51;
    swift_unknownObjectRelease(v26);
    v24 = v16;
    v22 = v17;
    if (!v27)
      goto LABEL_39;
LABEL_33:
    v46 = v16;
    sub_100076128(v48, (uint64_t)v7);
    v31 = type metadata accessor for UUID(0);
    v32 = *(_QWORD *)(v31 - 8);
    isa = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v7, 1, v31) != 1)
    {
      isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v31);
    }
    v34 = objc_msgSend(v49, "serviceLikeItemWithItem:itemManager:withID:", v27, v47, isa, v39);

    if (v34)
    {
      if (((*(uint64_t (**)(uint64_t, id))(v45 + 16))(v45, v34) & 1) != 0)
      {
        v35 = objc_msgSend(v34, "accessories");
        v36 = sub_10005D394(0, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
        v37 = sub_1000597C8((unint64_t *)&qword_1000D2130, (unint64_t *)&unk_1000D1840, HMAccessory_ptr);
        v38 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v35, v36, v37);

        sub_10006FD54(v38);
        swift_bridgeObjectRelease(v38);

LABEL_39:
        sub_10005ACA4(v11);
        return;
      }

    }
    v16 = v24;
    v17 = v22;
  }
  if (v17)
  {
    v22 = (v17 - 1) & v17;
    v23 = __clz(__rbit64(v17)) | (v16 << 6);
    v24 = v16;
LABEL_32:
    v27 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v23);
    if (!v27)
      goto LABEL_39;
    goto LABEL_33;
  }
  v28 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    if (v28 >= v43)
      goto LABEL_39;
    v29 = *(_QWORD *)(v44 + 8 * v28);
    v24 = v16 + 1;
    if (!v29)
    {
      v24 = v16 + 2;
      if (v16 + 2 >= v43)
        goto LABEL_39;
      v29 = *(_QWORD *)(v44 + 8 * v24);
      if (!v29)
      {
        v24 = v16 + 3;
        if (v16 + 3 >= v43)
          goto LABEL_39;
        v29 = *(_QWORD *)(v44 + 8 * v24);
        if (!v29)
        {
          v24 = v16 + 4;
          if (v16 + 4 >= v43)
            goto LABEL_39;
          v29 = *(_QWORD *)(v44 + 8 * v24);
          if (!v29)
          {
            v30 = v16 + 5;
            while (v43 != v30)
            {
              v29 = *(_QWORD *)(v44 + 8 * v30++);
              if (v29)
              {
                v24 = v30 - 1;
                goto LABEL_31;
              }
            }
            goto LABEL_39;
          }
        }
      }
    }
LABEL_31:
    v22 = (v29 - 1) & v29;
    v23 = __clz(__rbit64(v29)) + (v24 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_1000765A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1000765C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000765EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000765FC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100076604()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100076628(uint64_t a1)
{
  uint64_t v1;

  return sub_10007239C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

id sub_100076630(uint64_t a1)
{
  uint64_t v1;

  return sub_10007262C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100076638()
{
  return sub_100076674((void (*)(_QWORD))&_swift_errorRelease);
}

uint64_t sub_100076644(void *a1)
{
  uint64_t v1;

  return sub_100072744(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100076650()
{
  return sub_1000766C4((void (*)(_QWORD))&_swift_errorRelease);
}

void sub_10007665C()
{
  uint64_t v0;

  sub_100072848(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100076668()
{
  return sub_100076674((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

uint64_t sub_100076674(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, 40, 7);
}

uint64_t sub_1000766AC(void *a1)
{
  uint64_t v1;

  return sub_1000724B4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1000766B8()
{
  return sub_1000766C4((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

uint64_t sub_1000766C4(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, 48, 7);
}

id sub_100076704()
{
  uint64_t v0;

  return sub_1000725B8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100076710(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_10007674C(id *a1)
{
  uint64_t v1;

  return sub_100072A0C(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_100076768(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10005AC60(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

void _s20PerformanceTestErrorOwxx(_QWORD *a1)
{
  unsigned int v2;

  v2 = *((unsigned __int8 *)a1 + 48);
  if (v2 >= 5)
    v2 = *(_DWORD *)a1 + 5;
  switch(v2)
  {
    case 0u:
      swift_bridgeObjectRelease(a1[1]);

      break;
    case 1u:
      swift_bridgeObjectRelease(*a1);
      goto LABEL_6;
    case 2u:
    case 4u:
LABEL_6:
      swift_bridgeObjectRelease(a1[1]);
      break;
    case 3u:
      sub_10005A0DC(a1);
      swift_bridgeObjectRelease(a1[5]);
      break;
    default:
      return;
  }
}

uint64_t _s20PerformanceTestErrorOwcp(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  uint64_t v5;
  void *v6;
  id v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v4 = *((unsigned __int8 *)a2 + 48);
  if (v4 >= 5)
    v4 = *(_DWORD *)a2 + 5;
  switch(v4)
  {
    case 0u:
      v5 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v5;
      v6 = (void *)a2[2];
      *(_QWORD *)(a1 + 16) = v6;
      *(_BYTE *)(a1 + 48) = 0;
      swift_bridgeObjectRetain(v5);
      v7 = v6;
      return a1;
    case 1u:
      v9 = *a2;
      v10 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v10;
      *(_BYTE *)(a1 + 48) = 1;
      swift_bridgeObjectRetain(v9);
      v11 = v10;
      goto LABEL_11;
    case 2u:
      v11 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v11;
      v12 = 2;
      goto LABEL_10;
    case 3u:
      v13 = a2[3];
      *(_QWORD *)(a1 + 24) = v13;
      (**(void (***)(uint64_t, uint64_t *))(v13 - 8))(a1, a2);
      v11 = a2[5];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v11;
      v12 = 3;
      goto LABEL_10;
    case 4u:
      v11 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v11;
      v12 = 4;
LABEL_10:
      *(_BYTE *)(a1 + 48) = v12;
LABEL_11:
      swift_bridgeObjectRetain(v11);
      break;
    default:
      v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
      break;
  }
  return a1;
}

uint64_t _s20PerformanceTestErrorOwca(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  void *v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  if ((uint64_t *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 5)
      v4 = *(_DWORD *)a1 + 5;
    switch(v4)
    {
      case 0u:
        swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

        break;
      case 1u:
        swift_bridgeObjectRelease(*(_QWORD *)a1);
        goto LABEL_7;
      case 2u:
      case 4u:
LABEL_7:
        v5 = *(_QWORD *)(a1 + 8);
        goto LABEL_9;
      case 3u:
        sub_10005A0DC((_QWORD *)a1);
        v5 = *(_QWORD *)(a1 + 40);
LABEL_9:
        swift_bridgeObjectRelease(v5);
        break;
      default:
        break;
    }
    v6 = *((unsigned __int8 *)a2 + 48);
    if (v6 >= 5)
      v6 = *(_DWORD *)a2 + 5;
    switch(v6)
    {
      case 0u:
        *(_QWORD *)a1 = *a2;
        v7 = a2[1];
        *(_QWORD *)(a1 + 8) = v7;
        v8 = (void *)a2[2];
        *(_QWORD *)(a1 + 16) = v8;
        *(_BYTE *)(a1 + 48) = 0;
        swift_bridgeObjectRetain(v7);
        v9 = v8;
        return a1;
      case 1u:
        v13 = *a2;
        *(_QWORD *)a1 = *a2;
        v14 = a2[1];
        *(_QWORD *)(a1 + 8) = v14;
        *(_BYTE *)(a1 + 48) = 1;
        swift_bridgeObjectRetain(v13);
        v15 = v14;
        goto LABEL_20;
      case 2u:
        *(_QWORD *)a1 = *a2;
        v15 = a2[1];
        *(_QWORD *)(a1 + 8) = v15;
        v16 = 2;
        goto LABEL_19;
      case 3u:
        v17 = a2[3];
        *(_QWORD *)(a1 + 24) = v17;
        (**(void (***)(uint64_t, uint64_t *))(v17 - 8))(a1, a2);
        *(_QWORD *)(a1 + 32) = a2[4];
        v15 = a2[5];
        *(_QWORD *)(a1 + 40) = v15;
        v16 = 3;
        goto LABEL_19;
      case 4u:
        *(_QWORD *)a1 = *a2;
        v15 = a2[1];
        *(_QWORD *)(a1 + 8) = v15;
        v16 = 4;
LABEL_19:
        *(_BYTE *)(a1 + 48) = v16;
LABEL_20:
        swift_bridgeObjectRetain(v15);
        break;
      default:
        v10 = *(_OWORD *)a2;
        v11 = *((_OWORD *)a2 + 1);
        v12 = *((_OWORD *)a2 + 2);
        *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
        *(_OWORD *)(a1 + 16) = v11;
        *(_OWORD *)(a1 + 32) = v12;
        *(_OWORD *)a1 = v10;
        break;
    }
  }
  return a1;
}

__n128 _s20PerformanceTestErrorOwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s20PerformanceTestErrorOwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  __int128 v7;
  char v8;
  __int128 v9;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 5)
      v4 = *(_DWORD *)a1 + 5;
    switch(v4)
    {
      case 0u:
        swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

        break;
      case 1u:
        swift_bridgeObjectRelease(*(_QWORD *)a1);
        goto LABEL_7;
      case 2u:
      case 4u:
LABEL_7:
        v5 = *(_QWORD *)(a1 + 8);
        goto LABEL_9;
      case 3u:
        sub_10005A0DC((_QWORD *)a1);
        v5 = *(_QWORD *)(a1 + 40);
LABEL_9:
        swift_bridgeObjectRelease(v5);
        break;
      default:
        break;
    }
    v6 = *(unsigned __int8 *)(a2 + 48);
    if (v6 >= 5)
      v6 = *(_DWORD *)a2 + 5;
    switch(v6)
    {
      case 0u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 48) = 0;
        return a1;
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = 1;
        goto LABEL_19;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = 2;
        goto LABEL_19;
      case 3u:
        v9 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v9;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        v8 = 3;
        goto LABEL_19;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = 4;
        goto LABEL_19;
      default:
        v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        v8 = *(_BYTE *)(a2 + 48);
LABEL_19:
        *(_BYTE *)(a1 + 48) = v8;
        break;
    }
  }
  return a1;
}

uint64_t _s20PerformanceTestErrorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 6)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t _s20PerformanceTestErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_100076CD0(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 5)
    return (*(_DWORD *)a1 + 5);
  return result;
}

uint64_t sub_100076CEC(uint64_t result, unsigned int a2)
{
  if (a2 > 4)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 5;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *_s20PerformanceTestErrorOMa()
{
  return &_s20PerformanceTestErrorON;
}

uint64_t sub_100076D24(uint64_t *a1, uint64_t a2)
{
  _s20PerformanceTestErrorOwcp(a2, a1);
  return a2;
}

uint64_t sub_100076D58(id *a1)
{
  return sub_10007674C(a1) & 1;
}

unint64_t sub_100076DCC()
{
  unint64_t result;

  result = qword_1000D2550;
  if (!qword_1000D2550)
  {
    result = swift_getWitnessTable(&unk_10008A0D0, &type metadata for OpenURLInHomeIntent);
    atomic_store(result, (unint64_t *)&qword_1000D2550);
  }
  return result;
}

unint64_t sub_100076E14()
{
  unint64_t result;

  result = qword_1000D2558;
  if (!qword_1000D2558)
  {
    result = swift_getWitnessTable(&unk_10008A0F8, &type metadata for OpenURLInHomeIntent);
    atomic_store(result, (unint64_t *)&qword_1000D2558);
  }
  return result;
}

uint64_t sub_100076E58(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000AE5A0, 1);
}

uint64_t sub_100076E68(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100076EA8();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

unint64_t sub_100076EA8()
{
  unint64_t result;

  result = qword_1000D2560;
  if (!qword_1000D2560)
  {
    result = swift_getWitnessTable(&unk_10008A040, &type metadata for OpenURLInHomeIntent);
    atomic_store(result, (unint64_t *)&qword_1000D2560);
  }
  return result;
}

uint64_t sub_100076EEC()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10006AB04(v0, qword_1000D36D8);
  sub_100067F28(v0, (uint64_t)qword_1000D36D8);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000023, 0x8000000100091990);
}

uint64_t sub_100076F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100059788(&qword_1000D2648);
  sub_10006AB04(v0, qword_1000D36F0);
  v1 = sub_100067F28(v0, (uint64_t)qword_1000D36F0);
  IntentDescription.init(stringLiteral:)(0xD000000000000054, 0x8000000100091930);
  v2 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_100076FD4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[4] = a1;
  v2[5] = a2;
  v3 = type metadata accessor for URL(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Logger(0);
  v2[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[10] = v6;
  v2[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10007705C, 0, 0);
}

uint64_t sub_10007705C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  NSURL *v42;
  NSObject *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  if (qword_1000D1500 != -1)
    swift_once(&qword_1000D1500, sub_1000779A8);
  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = sub_100067F28(v3, (uint64_t)qword_1000D3708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  v6 = swift_retain_n(v4, 2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  v9 = os_log_type_enabled(v7, v8);
  v11 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 72);
  if (v9)
  {
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 64);
    v52 = *(_QWORD *)(v0 + 56);
    v14 = *(_QWORD *)(v0 + 48);
    v51 = *(_QWORD *)(v0 + 40);
    v15 = swift_slowAlloc(22, -1);
    v54 = swift_slowAlloc(64, -1);
    v57 = v54;
    *(_DWORD *)v15 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_100068064(0x286D726F66726570, 0xE900000000000029, &v57);
    v16 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v15 + 4, v15 + 12);
    *(_WORD *)(v15 + 12) = 2080;
    IntentParameter.wrappedValue.getter(v16);
    v17 = sub_100077918();
    v18 = dispatch thunk of CustomStringConvertible.description.getter(v14, v17);
    v53 = v12;
    v20 = v19;
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v13, v14);
    *(_QWORD *)(v0 + 24) = sub_100068064(v18, v20, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v15 + 14, v15 + 22);
    swift_bridgeObjectRelease(v20);
    swift_release_n(v51, 2);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "OpenURLInHomeIntent %s - url is %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v54, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v56, v53);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 40), 2);

    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  v23 = *(_QWORD *)(v0 + 56);
  v22 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 48);
  v25 = IntentParameter.wrappedValue.getter(v21);
  v26 = URL.scheme.getter(v25);
  v28 = v27;
  v29 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v29(v22, v24);
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(HFHomeURLScheme);
  v32 = v31;
  if (v28)
  {
    if (v26 == v30 && v28 == v31)
      goto LABEL_9;
    v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v30, v31, 0);
    swift_bridgeObjectRelease(v32);
    if ((v38 & 1) != 0)
      goto LABEL_14;
    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(HFHomePrivateURLScheme);
    v32 = v48;
    if (v26 == v49 && v28 == v48)
    {
LABEL_9:
      swift_bridgeObjectRelease(v32);
LABEL_14:
      swift_bridgeObjectRelease(v28);
LABEL_15:
      v39 = *(_QWORD *)(v0 + 64);
      v40 = *(_QWORD *)(v0 + 48);
      v41 = objc_msgSend((id)objc_opt_self(HFOpenURLRouter), "sharedInstance");
      IntentParameter.wrappedValue.getter(v41);
      URL._bridgeToObjectiveC()(v42);
      v35 = v43;
      v29(v39, v40);
      v44 = objc_msgSend(v41, "openURL:", v35);

      goto LABEL_16;
    }
    v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v49, v48, 0);
    swift_bridgeObjectRelease(v32);
    v34 = swift_bridgeObjectRelease(v28);
    if ((v50 & 1) != 0)
      goto LABEL_15;
  }
  else
  {
    swift_bridgeObjectRelease(v31);
    static String._unconditionallyBridgeFromObjectiveC(_:)(HFHomePrivateURLScheme);
    v34 = swift_bridgeObjectRelease(v33);
  }
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "OpenURLInHomeIntent - URL does not appear to be a Home app URL", v37, 2u);
    swift_slowDealloc(v37, -1, -1);
  }
LABEL_16:
  v45 = *(_QWORD *)(v0 + 88);
  v46 = *(_QWORD *)(v0 + 64);

  static IntentResult.result<>()();
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100077500@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1000D14F0 != -1)
    swift_once(&qword_1000D14F0, sub_100076EEC);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100067F28(v2, (uint64_t)qword_1000D36D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100077578@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1000D14F8 != -1)
    swift_once(&qword_1000D14F8, sub_100076F4C);
  v2 = sub_100059788(&qword_1000D2648);
  v3 = sub_100067F28(v2, (uint64_t)qword_1000D36F0);
  return sub_100077960(v3, a1);
}

uint64_t sub_1000775D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1000D263C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006E788;
  return sub_100076FD4(a1, v4);
}

uint64_t sub_100077630@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1000776FC();
  *a1 = result;
  return result;
}

uint64_t sub_100077654(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100076EA8();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t type metadata accessor for OpenURLInHomeIntentFailSafe()
{
  return objc_opt_self(_TtC7HomeApp27OpenURLInHomeIntentFailSafe);
}

ValueMetadata *type metadata accessor for OpenURLInHomeIntent()
{
  return &type metadata for OpenURLInHomeIntent;
}

unint64_t sub_1000776B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2608;
  if (!qword_1000D2608)
  {
    v1 = sub_10005AC60(&qword_1000D2610);
    result = swift_getWitnessTable(&protocol conformance descriptor for IntentResultContainer<A, B, C, D>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2608);
  }
  return result;
}

uint64_t sub_1000776FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100059788(&qword_1000D2618);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100059788(&qword_1000D2620);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100059788(&qword_1000D2628);
  __chkstk_darwin(v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100059788(&qword_1000D2630);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000018, 0x8000000100091910);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  v17 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 1, 1, v17);
  v18 = type metadata accessor for IntentDialog(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  return IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)(v16, v12, v9, v6, v3);
}

unint64_t sub_100077918()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2640;
  if (!qword_1000D2640)
  {
    v1 = type metadata accessor for URL(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for URL, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2640);
  }
  return result;
}

uint64_t sub_100077960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100059788(&qword_1000D2648);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000779A8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10006AB04(v0, qword_1000D3708);
  sub_100067F28(v0, (uint64_t)qword_1000D3708);
  return Logger.init(subsystem:category:)(0x6C7070612E6D6F63, 0xEE00656D6F482E65, 0xD000000000000011, 0x80000001000919C0);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC7HomeAppP33_ECE27143EE4F10102F50FF7C96E4DA7719ResourceBundleClass);
}

void sub_100077A48(void *a1, NSObject *a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;
  const char *v9;
  __int16 v10;
  void *v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "topViewController"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "onboardingViewControllers"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "onboardingStates"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[HOOnboardingRootNavigationController stringForOnboardingStates:](HOOnboardingRootNavigationController, "stringForOnboardingStates:", v6));
  v8 = 136315906;
  v9 = "-[HOOnboardingRootNavigationController activeOnboardingState]";
  v10 = 2112;
  v11 = v4;
  v12 = 2112;
  v13 = v5;
  v14 = 2112;
  v15 = v7;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "(%s) Unable to find state index for topViewController %@ among onboardingViewControllers %@ | onboardingStates = %@", (uint8_t *)&v8, 0x2Au);

}

void sub_100077B5C(uint64_t a1, NSObject *a2)
{
  int v2;
  const char *v3;
  __int16 v4;
  uint64_t v5;

  v2 = 136315394;
  v3 = "-[HODiscoverWebKitContentController parseURLForThemeType:]";
  v4 = 2112;
  v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "(%s) error = %@", (uint8_t *)&v2, 0x16u);
}

void sub_100077BE4()
{
  uint64_t v0;
  os_log_t v1;

  sub_100015220();
  sub_10001520C((void *)&_mh_execute_header, v0, v1, "Home not found for action set shortcut item: %@. Home identifier: %@");
}

void sub_100077C50()
{
  uint64_t v0;
  os_log_t v1;

  sub_100015220();
  sub_10001520C((void *)&_mh_execute_header, v0, v1, "Action set not found for action set shortcut item: %@. Action set identifier: %@");
}

void sub_100077CBC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002025C();
  sub_100020244((void *)&_mh_execute_header, v0, v1, "itemID is null for notification %@", v2, v3, v4, v5, v6);
  sub_100020254();
}

void sub_100077D1C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002025C();
  sub_100020244((void *)&_mh_execute_header, v0, v1, "itemID is null for notification %@ ", v2, v3, v4, v5, v6);
  sub_100020254();
}

void sub_100077D7C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002025C();
  sub_100020244((void *)&_mh_execute_header, v0, v1, "taskID not for found for itemID %@", v2, v3, v4, v5, v6);
  sub_100020254();
}

void sub_100077DDC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100020244((void *)&_mh_execute_header, a2, a3, "Unable to open URL: %@", a5, a6, a7, a8, 2u);
}

void sub_100077E44(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100020244((void *)&_mh_execute_header, a2, a3, "Failed to open URL: %@", a5, a6, a7, a8, 2u);
}

void sub_100077EB0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002B7E4();
  sub_10002B7CC((void *)&_mh_execute_header, v0, v1, "PPT failed - Switch to automation tab", v2, v3, v4, v5, v6);
  sub_10002B7DC();
}

void sub_100077EDC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002B7E4();
  sub_10002B7CC((void *)&_mh_execute_header, v0, v1, "PPT failed - Scrolling Rooms tab", v2, v3, v4, v5, v6);
  sub_10002B7DC();
}

void sub_100077F08()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002B7E4();
  sub_10002B7CC((void *)&_mh_execute_header, v0, v1, "PPT Failed - Add a room", v2, v3, v4, v5, v6);
  sub_10002B7DC();
}

void sub_100077F34()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002B7E4();
  sub_10002B7CC((void *)&_mh_execute_header, v0, v1, "PPT Failed - delete a room", v2, v3, v4, v5, v6);
  sub_10002B7DC();
}

void sub_100077F60()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002B7E4();
  sub_10002B7CC((void *)&_mh_execute_header, v0, v1, "PPT Failed - present network configuration settings", v2, v3, v4, v5, v6);
  sub_10002B7DC();
}

void sub_100077F8C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002B7E4();
  sub_10002B7CC((void *)&_mh_execute_header, v0, v1, "PPT - No room to delete after adding a room", v2, v3, v4, v5, v6);
  sub_10002B7DC();
}

void sub_100077FB8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100020244((void *)&_mh_execute_header, a2, a3, "PPT - Cannot find created room %@", a5, a6, a7, a8, 2u);
}

void sub_100078020(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100020244((void *)&_mh_execute_header, a2, a3, "PPT - Error cleaning up after creating a room: %@", a5, a6, a7, a8, 2u);
}

void sub_100078088()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002025C();
  sub_100020244((void *)&_mh_execute_header, v0, v1, "%@", v2, v3, v4, v5, v6);
  sub_100020254();
}

void sub_1000780E8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100034744();
  sub_100034714((void *)&_mh_execute_header, v0, v1, "(%s) error = %@", v2, v3, v4, v5, 2u);
  sub_100020254();
}

void sub_100078154()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  NSObject *v3;
  uint8_t v4[14];
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  sub_100034730();
  v5 = v0;
  v6 = v1;
  v7 = v2;
  sub_100034724((void *)&_mh_execute_header, v3, (uint64_t)v3, "addAccessoryWithURL: %@ failed with payload string \"%@\" error %@", v4);
}

void sub_1000781D0()
{
  uint64_t v0;
  os_log_t v1;

  sub_10002025C();
  sub_10001520C((void *)&_mh_execute_header, v0, v1, "home manager %@, error %@");
  sub_100020254();
}

void sub_10007823C(uint64_t a1, NSObject *a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  const char *v9;
  __int16 v10;
  void *v11;
  __int16 v12;
  uint64_t v13;

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[HFHomeKitDispatcher sharedDispatcher](HFHomeKitDispatcher, "sharedDispatcher"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "homeManager"));
  v6 = *(_QWORD *)(a1 + 32);
  v8 = 136315650;
  v9 = "-[HOAppNavigator showHH2OnboardingFlowForHome:]_block_invoke_2";
  v10 = 2112;
  v11 = v5;
  v12 = 2112;
  v13 = v6;
  sub_100034724((void *)&_mh_execute_header, a2, v7, "%s Failed to fetch owner devices for homeManager: %@ and home: %@", (uint8_t *)&v8);

}

void sub_10007830C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100034744();
  sub_100034714((void *)&_mh_execute_header, v0, v1, "(%s) error = %@", v2, v3, v4, v5, 2u);
  sub_100020254();
}

void sub_100078378(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Unable to show feedback flow because clip identifier is missing.", v1, 2u);
}

void sub_1000783B8()
{
  uint64_t v0;
  os_log_t v1;

  sub_10002025C();
  sub_10001520C((void *)&_mh_execute_header, v0, v1, "Unable to submit feedback for clip that contains a person <%@ %@>.");
  sub_100020254();
}

void sub_100078428(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100020244((void *)&_mh_execute_header, a1, a3, "(%s) both canAddHomeMember and canAddAccessCode are NO. Unable to add \"People\". This is non-ideal pathway", a5, a6, a7, a8, 2u);
  sub_100020254();
}

void sub_100078498(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100020244((void *)&_mh_execute_header, a2, a3, "Invalid attempt to display camera %@", a5, a6, a7, a8, 2u);
  sub_100020254();
}

void sub_100078500()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002025C();
  sub_100020244((void *)&_mh_execute_header, v0, v1, "Invalid room settings delegate: %@", v2, v3, v4, v5, v6);
  sub_100020254();
}

void sub_100078560()
{
  uint64_t v0;
  os_log_t v1;

  sub_100034730();
  sub_10001520C((void *)&_mh_execute_header, v0, v1, "%@ Failed to find content scroll view for view controller: %@");
  sub_100020254();
}

void sub_1000785C8()
{
  uint64_t v0;
  os_log_t v1;

  sub_100037098();
  sub_10001520C((void *)&_mh_execute_header, v0, v1, "Trigger name lookup failed for trigger with identifier %@ received error: %@");
}

void sub_100078630()
{
  uint64_t v0;
  os_log_t v1;

  sub_100037098();
  sub_10001520C((void *)&_mh_execute_header, v0, v1, "User confirmation of trigger with identifier %@ received error: %@");
}

void sub_100078698(void *a1, uint64_t a2, NSObject *a3)
{
  _DWORD v6[2];
  __int16 v7;
  unsigned int v8;

  v6[0] = 67109376;
  v6[1] = objc_msgSend(a1, "userHasValidHMSettings");
  v7 = 1024;
  v8 = objc_msgSend(a1, "_areHMSettingsValidForHome:", a2);
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "Got settings update - but not a settings validity transition - ignoring: userHasValidHMSettings = %{BOOL}d _areHMSettingsValidForHome] = %{BOOL}d ", (uint8_t *)v6, 0xEu);
}

void sub_10007874C(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "+[HOManagedConfigurationUtilities popProfileDataFromHeadOfInstallationQueue]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "(%s) popped profile data is nil", (uint8_t *)&v1, 0xCu);
}

void sub_1000787CC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100020244((void *)&_mh_execute_header, a2, a3, "We issued %ld batch read requests within ~0.5 after the UI appeared on screen. This probably means we didn't correctly batch all the characteristic reads we needed to do on launch into one big batch read request.", a5, a6, a7, a8, 0);
  sub_100020254();
}

void sub_100078830(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100020244((void *)&_mh_execute_header, a2, a3, "Unable to map tabID: %@ to a valid view controller, defaulting to HFHomeAppTabIdentifierHome", a5, a6, a7, a8, 2u);
  sub_100020254();
}

void sub_100078898(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100020244((void *)&_mh_execute_header, a2, a3, "Missing item for main tab identifier: %@. Perhaps the peristed tab identifier no longer exists in the app. Falling back to the Home tab.", a5, a6, a7, a8, 2u);
  sub_100020254();
}

void sub_1000788FC(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v2, 0xCu);
}

void sub_100078970(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v2, 0xCu);
  sub_100020254();
}

void sub_1000789E0(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = 138412290;
  v4 = a1;
  sub_1000465F4((void *)&_mh_execute_header, a2, a3, "Enabling iCloud: error %@", (uint8_t *)&v3);
  sub_100020254();
}

void sub_100078A48(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  int v5;
  void *v6;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "description"));
  v5 = 138412290;
  v6 = v3;
  sub_1000465F4((void *)&_mh_execute_header, a2, v4, "Error erasing Home data: %@", (uint8_t *)&v5);

}

void sub_100078AD4()
{
  uint64_t v0;
  os_log_t v1;

  sub_1000465DC();
  sub_10001520C((void *)&_mh_execute_header, v0, v1, "CDPUIDeviceToDeviceEncryption encountered error: %@ primaryAccountAltDSID: %@");
  sub_100020254();
}

void sub_100078B38()
{
  uint64_t v0;
  os_log_t v1;

  sub_1000465DC();
  sub_10001520C((void *)&_mh_execute_header, v0, v1, "CDPUIDeviceToDeviceEncryption repair failed. Error: %@ primaryAccountAltDSID: %@");
  sub_100020254();
}

void sub_100078B9C(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "-[HOProfileInstaller openSenderURL]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "(%s) senderURLStr is empty string", (uint8_t *)&v1, 0xCu);
}

void sub_100078C1C()
{
  NSObject *v0;
  uint64_t v1;
  int v2[6];

  v2[0] = 136315394;
  sub_100034744();
  sub_100047284((void *)&_mh_execute_header, v0, v1, "failure: (%s) could not open sensitive url %@", (uint8_t *)v2);
}

void sub_100078C90()
{
  uint64_t v0;
  os_log_t v1;
  int v2;

  v2 = 136315650;
  sub_100047268();
  sub_100047254((void *)&_mh_execute_header, v0, v1, "(%s) error occurred opening sensitive url %@: %@", v2);
  sub_100047290();
}

void sub_100078CFC()
{
  uint64_t v0;
  os_log_t v1;
  int v2;

  v2 = 136315650;
  sub_100047268();
  sub_100047254((void *)&_mh_execute_header, v0, v1, "(%s) error occurred opening url %@ : %@", v2);
  sub_100047290();
}

void sub_100078D68(uint64_t a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  int v5[6];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "senderURLString"));
  v5[0] = 136315394;
  sub_100034744();
  sub_100047284((void *)&_mh_execute_header, a2, v4, "(%s) url %@ could not be opened", (uint8_t *)v5);

  sub_100047290();
}

void sub_100078DFC()
{
  NSObject *v0;
  uint64_t v1;
  int v2;
  const char *v3;

  v2 = 136315394;
  v3 = "-[HOHomePodProfileInstaller deviceProfileCompletedNotification:]";
  sub_100049080();
  sub_100047284((void *)&_mh_execute_header, v0, v1, "(%s) error occurred when created MCProfile object with NSData: %@", (uint8_t *)&v2);
  sub_100020254();
}

void sub_100078E70(NSObject *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  const char *v4;

  v3 = 136315138;
  v4 = "-[HOHomePodProfileInstaller deviceProfileCompletedNotification:]";
  sub_100049090((void *)&_mh_execute_header, a1, a3, "(%s) profile installation failed", (uint8_t *)&v3);
  sub_100020254();
}

void sub_100078EE4(uint64_t a1, uint64_t *a2, NSObject *a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  void *v9;
  __int16 v10;
  uint64_t v11;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "hf_prettyDescription"));
  v6 = *a2;
  v8 = 138412546;
  v9 = v5;
  v10 = 2112;
  v11 = v6;
  sub_100047284((void *)&_mh_execute_header, a3, v7, "Profile failed to install on HomePod: %@ with error: %@", (uint8_t *)&v8);

  sub_100049070();
}

void sub_100078F84(uint64_t a1, NSObject *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  int v6;
  void *v7;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "home"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "hf_prettyDescription"));
  v6 = 138412290;
  v7 = v4;
  sub_100049090((void *)&_mh_execute_header, a2, v5, "Profile failed to install on all HomePods in home: %@", (uint8_t *)&v6);

  sub_100049070();
}

void sub_100079020(id *a1, NSObject *a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  int v7;
  id v8;

  v4 = objc_msgSend(*a1, "count");
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*a1, "hf_prettyDescription"));
  v7 = 134218242;
  v8 = v4;
  sub_100049080();
  sub_100047284((void *)&_mh_execute_header, a2, v6, "Profile failed to install on %lu HomePods: %@", (uint8_t *)&v7);

  sub_100049070();
}

void sub_1000790C0()
{
  NSObject *v0;
  uint64_t v1;
  int v2;
  const char *v3;

  v2 = 136315394;
  v3 = "-[HOHomePodProfileInstaller _presentManagedConfigurationProfileInstallation]_block_invoke";
  sub_100049080();
  sub_100047284((void *)&_mh_execute_header, v0, v1, "(%s) error occurred: %@", (uint8_t *)&v2);
  sub_100020254();
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGColor");
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGPath");
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URL");
}

id objc_msgSend_URLHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLHandler");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUID");
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUIDString");
}

id objc_msgSend__acceptInvitation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_acceptInvitation");
}

id objc_msgSend__addButtonConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addButtonConstraints");
}

id objc_msgSend__addConnectionIssueOverlayViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addConnectionIssueOverlayViewConstraints");
}

id objc_msgSend__addContentViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addContentViewConstraints");
}

id objc_msgSend__addWebViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addWebViewConstraints");
}

id objc_msgSend__allowingMutationsInDelegateCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allowingMutationsInDelegateCallback:");
}

id objc_msgSend__areHMSettingsValidForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_areHMSettingsValidForHome:");
}

id objc_msgSend__bottomPaddingConstraintForLowestView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bottomPaddingConstraintForLowestView:");
}

id objc_msgSend__buildPocketViewControllerWithOptions_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildPocketViewControllerWithOptions:target:action:");
}

id objc_msgSend__cameraProfileForTestingInHome_withUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cameraProfileForTestingInHome:withUUID:");
}

id objc_msgSend__cameraProfileWithName_home_room_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cameraProfileWithName:home:room:");
}

id objc_msgSend__cameraTopic(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cameraTopic");
}

id objc_msgSend__cancelAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelAction");
}

id objc_msgSend__cancelTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelTimer");
}

id objc_msgSend__checkAndRunFeatureOnboardingWithHomeSwitch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndRunFeatureOnboardingWithHomeSwitch:");
}

id objc_msgSend__checkForAppOnboardingWillFinish(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkForAppOnboardingWillFinish");
}

id objc_msgSend__clearCachedWalletKeyDeviceStateForCurrentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearCachedWalletKeyDeviceStateForCurrentDevice");
}

id objc_msgSend__commonInitializer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commonInitializer:");
}

id objc_msgSend__configureButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureButtons");
}

id objc_msgSend__configureCameraDashboardContextWithTitle_home_navigationController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureCameraDashboardContextWithTitle:home:navigationController:animated:");
}

id objc_msgSend__configureDashboardContextWithAccessoryTypeGroup_home_navigationController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureDashboardContextWithAccessoryTypeGroup:home:navigationController:animated:");
}

id objc_msgSend__configureDashboardContextWithHome_navigationController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureDashboardContextWithHome:navigationController:animated:");
}

id objc_msgSend__configureDashboardContextWithRoom_navigationController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureDashboardContextWithRoom:navigationController:animated:");
}

id objc_msgSend__configureScenesDashboardContextWithTitle_home_navigationController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureScenesDashboardContextWithTitle:home:navigationController:animated:");
}

id objc_msgSend__configureSpeakersAndTVsDashboardContextWithTitle_home_navigationController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureSpeakersAndTVsDashboardContextWithTitle:home:navigationController:animated:");
}

id objc_msgSend__configureTabBarWithImageNamed_forViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureTabBarWithImageNamed:forViewController:");
}

id objc_msgSend__continue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_continue");
}

id objc_msgSend__createActionSetWithName_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createActionSetWithName:home:");
}

id objc_msgSend__createAndAddResetLabelsIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAndAddResetLabelsIfNeeded");
}

id objc_msgSend__createButtonWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createButtonWithString:");
}

id objc_msgSend__createConstraintForTextView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createConstraintForTextView");
}

id objc_msgSend__createConstraintsForButton_includeBottomConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createConstraintsForButton:includeBottomConstraint:");
}

id objc_msgSend__createConstraintsForFirstItem_secondItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createConstraintsForFirstItem:secondItem:");
}

id objc_msgSend__createHomeWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createHomeWithName:");
}

id objc_msgSend__createResetSectionConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createResetSectionConstraints");
}

id objc_msgSend__createRoomWithName_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRoomWithName:home:");
}

id objc_msgSend__currentSectionIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentSectionIdentifiers");
}

id objc_msgSend__debug_totalNumberOfIssuedBatchReadRequests(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debug_totalNumberOfIssuedBatchReadRequests");
}

id objc_msgSend__debug_viewHasEverAppeared(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debug_viewHasEverAppeared");
}

id objc_msgSend__didHomeGetAdded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didHomeGetAdded");
}

id objc_msgSend__dismissPresentedViewControllerIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissPresentedViewControllerIfNeeded");
}

id objc_msgSend__displayNextViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayNextViewController");
}

id objc_msgSend__editActionSet_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_editActionSet:home:");
}

id objc_msgSend__effectWithInfiniteRadiusScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_effectWithInfiniteRadiusScale:");
}

id objc_msgSend__endBackgroundTaskWithItemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endBackgroundTaskWithItemIdentifier:");
}

id objc_msgSend__endBackgroundTaskWithTaskIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endBackgroundTaskWithTaskIdentifier:");
}

id objc_msgSend__executeActionSetForShortcutItem_navigator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeActionSetForShortcutItem:navigator:");
}

id objc_msgSend__finishedOnboarding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finishedOnboarding");
}

id objc_msgSend__firstReadCompleteFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_firstReadCompleteFuture");
}

id objc_msgSend__generateShortcutItemForActionSetItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateShortcutItemForActionSetItem:");
}

id objc_msgSend__getStatusBarHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getStatusBarHeight");
}

id objc_msgSend__handleProfileInstallationForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleProfileInstallationForHome:");
}

id objc_msgSend__hideSpinner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hideSpinner");
}

id objc_msgSend__identifierForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifierForSection:");
}

id objc_msgSend__ignoreInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ignoreInvitation:");
}

id objc_msgSend__imageThatSuppressesAccessibilityHairlineThickening(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageThatSuppressesAccessibilityHairlineThickening");
}

id objc_msgSend__indexOfSectionWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexOfSectionWithIdentifier:");
}

id objc_msgSend__indexPathForPendingInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexPathForPendingInvitation:");
}

id objc_msgSend__initialLoad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initialLoad");
}

id objc_msgSend__invitationJoinedHomeViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invitationJoinedHomeViewController");
}

id objc_msgSend__invitationJoiningHomeViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invitationJoiningHomeViewController");
}

id objc_msgSend__invitationRestrictedGuestAccessViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invitationRestrictedGuestAccessViewController");
}

id objc_msgSend__isCollapsed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCollapsed");
}

id objc_msgSend__itemForMainTabIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemForMainTabIdentifier:");
}

id objc_msgSend__loadNavigationViewControllerForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadNavigationViewControllerForIdentifier:");
}

id objc_msgSend__loadWallpaperWithAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadWallpaperWithAnimation:");
}

id objc_msgSend__logAccessoryCountMetricsWithHomes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logAccessoryCountMetricsWithHomes:");
}

id objc_msgSend__logNonConfiguredAccessoryMetricsWithHomes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logNonConfiguredAccessoryMetricsWithHomes:");
}

id objc_msgSend__logSupportedSensitiveFeatures(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logSupportedSensitiveFeatures");
}

id objc_msgSend__logUserAutomationNamingTypeProportions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logUserAutomationNamingTypeProportions:");
}

id objc_msgSend__logUserMetrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logUserMetrics");
}

id objc_msgSend__moveToNextViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moveToNextViewController");
}

id objc_msgSend__navigationControllerForInitialSelection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigationControllerForInitialSelection");
}

id objc_msgSend__navigationControllerForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigationControllerForItem:");
}

id objc_msgSend__navigationControllerForMainTabIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigationControllerForMainTabIdentifier:");
}

id objc_msgSend__networkConfigurationProfileForTestingInHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_networkConfigurationProfileForTestingInHome:");
}

id objc_msgSend__networkRouterForTestingInHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_networkRouterForTestingInHome:");
}

id objc_msgSend__numberOfPocketButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_numberOfPocketButtons");
}

id objc_msgSend__onboardingViewControllersForStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onboardingViewControllersForStates:");
}

id objc_msgSend__openURLComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openURLComponents:");
}

id objc_msgSend__overridingTabIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_overridingTabIdentifier");
}

id objc_msgSend__pendingInvitationIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pendingInvitationIdentifiers");
}

id objc_msgSend__performScrollTest_iterations_delta_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performScrollTest:iterations:delta:");
}

id objc_msgSend__performTapActionForItem_tappedArea_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performTapActionForItem:tappedArea:");
}

id objc_msgSend__performTranslationScrollTest_duration_iterations_scrollAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performTranslationScrollTest:duration:iterations:scrollAxis:");
}

id objc_msgSend__performWithoutDeferringTransitions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performWithoutDeferringTransitions:");
}

id objc_msgSend__persistLastSelectedTab(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_persistLastSelectedTab");
}

id objc_msgSend__populateWallpaperForLoadingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateWallpaperForLoadingViewController:");
}

id objc_msgSend__presentCompletionAlert(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentCompletionAlert");
}

id objc_msgSend__presentDataSyncingControllerWithState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentDataSyncingControllerWithState:");
}

id objc_msgSend__presentErrorAlert(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentErrorAlert");
}

id objc_msgSend__presentHomePodSelectionAlertWithHomePods_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentHomePodSelectionAlertWithHomePods:");
}

id objc_msgSend__presentHomeSelectionAlertWithHomes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentHomeSelectionAlertWithHomes:");
}

id objc_msgSend__presentLocationAlertForTriggerWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentLocationAlertForTriggerWithIdentifier:");
}

id objc_msgSend__presentLocationTriggerAlertsIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentLocationTriggerAlertsIfNeeded");
}

id objc_msgSend__presentManagedConfigurationProfileInstallation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentManagedConfigurationProfileInstallation");
}

id objc_msgSend__presentNextViewControllerWithCurrentViewController_skipRelated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentNextViewControllerWithCurrentViewController:skipRelated:");
}

id objc_msgSend__presentOnboardingWithStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentOnboardingWithStates:");
}

id objc_msgSend__presentPartialErrorAlertForHomePods_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentPartialErrorAlertForHomePods:");
}

id objc_msgSend__presentedViewControllerForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentedViewControllerForState:");
}

id objc_msgSend__presentiCloudDisabledControllerWithState_andStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentiCloudDisabledControllerWithState:andStatus:");
}

id objc_msgSend__reallyAcceptInvitation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reallyAcceptInvitation");
}

id objc_msgSend__reloadSectionHeaderFooters_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadSectionHeaderFooters:withRowAnimation:");
}

id objc_msgSend__reloadStateWithInvitation_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadStateWithInvitation:home:");
}

id objc_msgSend__removeLowerSectionControlsAndLabels(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeLowerSectionControlsAndLabels");
}

id objc_msgSend__reportJunk(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reportJunk");
}

id objc_msgSend__reportJunk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reportJunk:");
}

id objc_msgSend__scrollToTopIfPossible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollToTopIfPossible:");
}

id objc_msgSend__selectAndFinishFirstReadForTabWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectAndFinishFirstReadForTabWithIdentifier:");
}

id objc_msgSend__selectCurrentTabAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectCurrentTabAnimated:");
}

id objc_msgSend__selectHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectHome:");
}

id objc_msgSend__selectTabWithIdentifier_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectTabWithIdentifier:animated:");
}

id objc_msgSend__serviceTypeFromFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_serviceTypeFromFilter:");
}

id objc_msgSend__serviceWithName_type_home_room_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_serviceWithName:type:home:room:");
}

id objc_msgSend__setBackgroundOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBackgroundOpacity:");
}

id objc_msgSend__setCanShowWhileLocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCanShowWhileLocked:");
}

id objc_msgSend__setHidesShadow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHidesShadow:");
}

id objc_msgSend__setNavigationBarVisibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setNavigationBarVisibility:");
}

id objc_msgSend__setPresentedViewController_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPresentedViewController:forState:");
}

id objc_msgSend__setRelatedWebView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRelatedWebView:");
}

id objc_msgSend__setSectionContentInsetFollowsLayoutMargins_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSectionContentInsetFollowsLayoutMargins:");
}

id objc_msgSend__setSelectedViewController_persistSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSelectedViewController:persistSelection:");
}

id objc_msgSend__setTitleOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setTitleOpacity:");
}

id objc_msgSend__setUpWallpaper(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUpWallpaper");
}

id objc_msgSend__setupCommonViewAppearance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupCommonViewAppearance");
}

id objc_msgSend__shouldHandleMostRecentCameraClipForFilter_timeRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldHandleMostRecentCameraClipForFilter:timeRange:");
}

id objc_msgSend__shouldShowOnboardingWelcomeOrLoadingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowOnboardingWelcomeOrLoadingView");
}

id objc_msgSend__shouldShowTriggerAboutPageForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowTriggerAboutPageForHome:");
}

id objc_msgSend__shouldShowTriggerListForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowTriggerListForHome:");
}

id objc_msgSend__showCreateOrEditActionSetViewControllerWithActionSetName_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showCreateOrEditActionSetViewControllerWithActionSetName:home:");
}

id objc_msgSend__showDashboardForRoomContainedObject_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showDashboardForRoomContainedObject:animated:");
}

id objc_msgSend__showHomeTabForHome_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showHomeTabForHome:animated:");
}

id objc_msgSend__showLocationListWithHome_customizationBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showLocationListWithHome:customizationBlock:");
}

id objc_msgSend__showRoom_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showRoom:animated:");
}

id objc_msgSend__showRoomContainedCamera_forCameraClip_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showRoomContainedCamera:forCameraClip:");
}

id objc_msgSend__showRoomContainedObject_secondaryDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showRoomContainedObject:secondaryDestination:");
}

id objc_msgSend__showSpinner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showSpinner");
}

id objc_msgSend__showSpinnerForInvitationWithResponseControllerState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showSpinnerForInvitationWithResponseControllerState:");
}

id objc_msgSend__showUser_customizationBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showUser:customizationBlock:");
}

id objc_msgSend__simulateScrollWithTranslation_duration_willBeginDragging_didEndDragging_willBeginDecelerating_didEndDecelerating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_simulateScrollWithTranslation:duration:willBeginDragging:didEndDragging:willBeginDecelerating:didEndDecelerating:");
}

id objc_msgSend__simulateScrollWithTranslation_numIterations_duration_reversed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_simulateScrollWithTranslation:numIterations:duration:reversed:");
}

id objc_msgSend__startAddHomeTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startAddHomeTimeout");
}

id objc_msgSend__startBackgroundTaskWithItemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startBackgroundTaskWithItemIdentifier:");
}

id objc_msgSend__startDateForURLComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startDateForURLComponents:");
}

id objc_msgSend__startWebViewActivityIndicator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startWebViewActivityIndicator");
}

id objc_msgSend__stopWebViewActivityIndicator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopWebViewActivityIndicator");
}

id objc_msgSend__systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemImageNamed:");
}

id objc_msgSend__updateImageConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateImageConstraints");
}

id objc_msgSend__updateNavigationBarAppearenceFromOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateNavigationBarAppearenceFromOffset");
}

id objc_msgSend__updateNetworkConnectionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateNetworkConnectionState:");
}

id objc_msgSend__updateOnboardingCompleteFutureForNewPresentationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateOnboardingCompleteFutureForNewPresentationState:");
}

id objc_msgSend__vibrantEffectWithCAColorMatrix_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_vibrantEffectWithCAColorMatrix:alpha:");
}

id objc_msgSend__viewControllerForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewControllerForState:");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "absoluteString");
}

id objc_msgSend_acceptInvitationError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acceptInvitationError");
}

id objc_msgSend_acceptedInvitationPendingForNewHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acceptedInvitationPendingForNewHome:");
}

id objc_msgSend_acceptedPendingAddHomeTimeoutCancellationToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acceptedPendingAddHomeTimeoutCancellationToken");
}

id objc_msgSend_accessories(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessories");
}

id objc_msgSend_accessory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessory");
}

id objc_msgSend_accessoryRepresentableObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessoryRepresentableObject");
}

id objc_msgSend_accessorySetupCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessorySetupCoordinator");
}

id objc_msgSend_actionSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionSet");
}

id objc_msgSend_actionSets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionSets");
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:style:handler:");
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateConstraints:");
}

id objc_msgSend_activeConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeConstraints");
}

id objc_msgSend_activeOnboardingState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeOnboardingState");
}

id objc_msgSend_addAccessoryWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAccessoryWithURL:");
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAction:");
}

id objc_msgSend_addAndSetupAccessoriesWithPayload_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAndSetupAccessoriesWithPayload:completionHandler:");
}

id objc_msgSend_addAndSetupNewAccessoriesForHome_room_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAndSetupNewAccessoriesForHome:room:");
}

id objc_msgSend_addArrangedSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addArrangedSubview:");
}

id objc_msgSend_addBulletedListItemWithTitle_description_image_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBulletedListItemWithTitle:description:image:");
}

id objc_msgSend_addButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addButton:");
}

id objc_msgSend_addCaptionText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCaptionText:");
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChildViewController:");
}

id objc_msgSend_addCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCompletionBlock:");
}

id objc_msgSend_addFailureBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFailureBlock:");
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGestureRecognizer:");
}

id objc_msgSend_addHomeKitSettingsObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHomeKitSettingsObserver:");
}

id objc_msgSend_addHomeManagerObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHomeManagerObserver:");
}

id objc_msgSend_addHomeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHomeObserver:");
}

id objc_msgSend_addLocationViewController_didFinishWithHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLocationViewController:didFinishWithHome:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserverForName:object:queue:usingBlock:");
}

id objc_msgSend_addScriptMessageHandler_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addScriptMessageHandler:name:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_addSuccessBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSuccessBlock:");
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:action:forControlEvents:");
}

id objc_msgSend_addTarget_action_forEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:action:forEvents:");
}

id objc_msgSend_addValue_forHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addValue:forHTTPHeaderField:");
}

id objc_msgSend_addViewControllersToRegistry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addViewControllersToRegistry");
}

id objc_msgSend_addedItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addedItems");
}

id objc_msgSend_afterDelay_performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afterDelay:performBlock:");
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertControllerWithTitle:message:preferredStyle:");
}

id objc_msgSend_allDisplayedItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allDisplayedItems");
}

id objc_msgSend_allHomesFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allHomesFuture");
}

id objc_msgSend_allNamedWallpaperThumbnailsForWallpaperCollectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allNamedWallpaperThumbnailsForWallpaperCollectionType:");
}

id objc_msgSend_allNamedWallpapersForWallpaperCollectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allNamedWallpapersForWallpaperCollectionType:");
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allObjects");
}

id objc_msgSend_allowForcedCacheReload(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowForcedCacheReload");
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateAlongsideTransition:completion:");
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:options:animations:completion:");
}

id objc_msgSend_appNavigator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appNavigator");
}

id objc_msgSend_appOnboardingWillFinishForStateController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appOnboardingWillFinishForStateController:");
}

id objc_msgSend_appendItemsWithIdentifiers_intoSectionWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendItemsWithIdentifiers:intoSectionWithIdentifier:");
}

id objc_msgSend_appendSectionsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendSectionsWithIdentifiers:");
}

id objc_msgSend_application(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "application");
}

id objc_msgSend_applicationActiveFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationActiveFuture");
}

id objc_msgSend_applicationBackgroundedDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationBackgroundedDate");
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationState");
}

id objc_msgSend_applySnapshot_animatingDifferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applySnapshot:animatingDifferences:");
}

id objc_msgSend_applySnapshotUsingReloadData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applySnapshotUsingReloadData:");
}

id objc_msgSend_applySnapshotWithAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applySnapshotWithAnimation:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "array");
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_attemptRotationToDeviceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attemptRotationToDeviceOrientation");
}

id objc_msgSend_autoupdatingCurrentCalendar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoupdatingCurrentCalendar");
}

id objc_msgSend_backgroundURLSessionIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundURLSessionIdentifier");
}

id objc_msgSend_baseController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baseController");
}

id objc_msgSend_baseViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baseViewController");
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "becomeFirstResponder");
}

id objc_msgSend_beginBackgroundTaskWithName_expirationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginBackgroundTaskWithName:expirationHandler:");
}

id objc_msgSend_beginUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginUpdates");
}

id objc_msgSend_bezierPathWithRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithRect:");
}

id objc_msgSend_blurView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blurView");
}

id objc_msgSend_body(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "body");
}

id objc_msgSend_bodyLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bodyLabel");
}

id objc_msgSend_bodyWidthConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bodyWidthConstraint");
}

id objc_msgSend_boldButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boldButton");
}

id objc_msgSend_boldFontForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boldFontForStyle:");
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boldSystemFontOfSize:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomAnchor");
}

id objc_msgSend_bottomPadding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomPadding");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bounds");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifier");
}

id objc_msgSend_buttonLayoutConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonLayoutConstraints");
}

id objc_msgSend_buttonPaddingToViewBottomForViewSizeSubclass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonPaddingToViewBottomForViewSizeSubclass:");
}

id objc_msgSend_buttonTray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonTray");
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithType:");
}

id objc_msgSend_cacheRefreshTimeInterval(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheRefreshTimeInterval");
}

id objc_msgSend_cameraFeedbackQueryString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cameraFeedbackQueryString");
}

id objc_msgSend_canAskForUserFeedback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canAskForUserFeedback");
}

id objc_msgSend_canOpenURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canOpenURL:");
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancel");
}

id objc_msgSend_cancelButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelButton");
}

id objc_msgSend_cancelInFlightReadRequests(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelInFlightReadRequests");
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "caseInsensitiveCompare:");
}

id objc_msgSend_cellForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellForRowAtIndexPath:");
}

id objc_msgSend_centerVC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerVC");
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerXAnchor");
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerYAnchor");
}

id objc_msgSend_changingSelectedViewControllerProgrammatically(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changingSelectedViewControllerProgrammatically");
}

id objc_msgSend_characteristicsWithPendingReads(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characteristicsWithPendingReads");
}

id objc_msgSend_childViewControllerDidFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childViewControllerDidFinish:");
}

id objc_msgSend_childViewControllerDidFinish_shouldSkipRelatedChildren_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childViewControllerDidFinish:shouldSkipRelatedChildren:");
}

id objc_msgSend_childViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childViewControllers");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearColor");
}

id objc_msgSend_climateAccessoryTypeGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "climateAccessoryTypeGroup");
}

id objc_msgSend_clipManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clipManager");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "code");
}

id objc_msgSend_colorEffectLuminanceMap_blendingAmount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorEffectLuminanceMap:blendingAmount:");
}

id objc_msgSend_colorEffectMatrix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorEffectMatrix:");
}

id objc_msgSend_colorNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorNamed:");
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithRed:green:blue:alpha:");
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithWhite:alpha:");
}

id objc_msgSend_combineAllFutures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "combineAllFutures:");
}

id objc_msgSend_combineAllFutures_ignoringErrors_scheduler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "combineAllFutures:ignoringErrors:scheduler:");
}

id objc_msgSend_commitItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commitItem");
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_completionHandlerAdapter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completionHandlerAdapter");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configuration");
}

id objc_msgSend_configurationWithPointSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:");
}

id objc_msgSend_configurationWithPointSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:weight:");
}

id objc_msgSend_configureDashboardContextWithDashboardContext_navigationController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureDashboardContextWithDashboardContext:navigationController:animated:");
}

id objc_msgSend_configuredName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configuredName");
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_connectionIssueOverlayRetryButtonPressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionIssueOverlayRetryButtonPressed");
}

id objc_msgSend_connectionIssueOverlayView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionIssueOverlayView");
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:");
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:constant:");
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToConstant:");
}

id objc_msgSend_constraintEqualToSystemSpacingBelowAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToSystemSpacingBelowAnchor:multiplier:");
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToAnchor:");
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToAnchor:constant:");
}

id objc_msgSend_constraintGreaterThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToConstant:");
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToAnchor:");
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToAnchor:constant:");
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:");
}

id objc_msgSend_containerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerView");
}

id objc_msgSend_containsDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsDate:");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentOffset");
}

id objc_msgSend_contentScrollViewForEdge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentScrollViewForEdge:");
}

id objc_msgSend_contentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentSize");
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentView");
}

id objc_msgSend_contentViewed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewed:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_createOrEditActionSetWithName_home_switchToHomeTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createOrEditActionSetWithName:home:switchToHomeTab:");
}

id objc_msgSend_createOrShowHomeWithName_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createOrShowHomeWithName:home:");
}

id objc_msgSend_createOrShowRoomWithName_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createOrShowRoomWithName:home:");
}

id objc_msgSend_createSetupAccessoryPayloadWithSetupPayloadURLString_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSetupAccessoryPayloadWithSetupPayloadURLString:completionHandler:");
}

id objc_msgSend_createWebViewForURL_dependentWebViewURLString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createWebViewForURL:dependentWebViewURLString:");
}

id objc_msgSend_currentConnectionIssueState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentConnectionIssueState");
}

id objc_msgSend_currentContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentContext");
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDevice");
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentHandler");
}

id objc_msgSend_currentHome(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentHome");
}

id objc_msgSend_currentNotificationCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentNotificationCenter");
}

id objc_msgSend_currentTabIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentTabIdentifier");
}

id objc_msgSend_currentTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentTitle");
}

id objc_msgSend_currentUser(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentUser");
}

id objc_msgSend_currentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentViewController");
}

id objc_msgSend_currentlyPresentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentlyPresentedViewController");
}

id objc_msgSend_customWallpaperWithAssetIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customWallpaperWithAssetIdentifier:");
}

id objc_msgSend_dashboarHomeKitObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dashboarHomeKitObject");
}

id objc_msgSend_dashboardContextTypeDescriptionForAnalytics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dashboardContextTypeDescriptionForAnalytics");
}

id objc_msgSend_dashboardNavigator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dashboardNavigator");
}

id objc_msgSend_dataSyncState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSyncState");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "date");
}

id objc_msgSend_dateFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFormatter");
}

id objc_msgSend_dateFromComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFromComponents:");
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateConstraints:");
}

id objc_msgSend_declineOrIgnoreInvitationButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "declineOrIgnoreInvitationButton");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCenter");
}

id objc_msgSend_defaultItemComparator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultItemComparator");
}

id objc_msgSend_defaultScheduler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultScheduler");
}

id objc_msgSend_defaultWallpaperForCollectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultWallpaperForCollectionType:");
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultWorkspace");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegate");
}

id objc_msgSend_deleteRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_deleteSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteSections:withRowAnimation:");
}

id objc_msgSend_dequeueReusableCellWithIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:");
}

id objc_msgSend_dequeueReusableHeaderFooterViewWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableHeaderFooterViewWithIdentifier:");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "description");
}

id objc_msgSend_descriptionLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionLabel");
}

id objc_msgSend_descriptorWithTitle_style_target_action_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptorWithTitle:style:target:action:userInfo:");
}

id objc_msgSend_descriptors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptors");
}

id objc_msgSend_deselectRowAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deselectRowAtIndexPath:animated:");
}

id objc_msgSend_destination(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destination");
}

id objc_msgSend_detailText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailText");
}

id objc_msgSend_deviceIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceIdentifier");
}

id objc_msgSend_deviceType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceType");
}

id objc_msgSend_devicesLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "devicesLabel");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didAcceptInvitation_viewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didAcceptInvitation:viewController:");
}

id objc_msgSend_didDecideLaterForInvitation_viewController_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didDecideLaterForInvitation:viewController:error:");
}

id objc_msgSend_didLoadHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didLoadHome:");
}

id objc_msgSend_didLoadLoadingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didLoadLoadingViewController");
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didMoveToParentViewController:");
}

id objc_msgSend_didPushNextViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didPushNextViewController");
}

id objc_msgSend_didUserTriggerOnboardingDismissal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didUserTriggerOnboardingDismissal");
}

id objc_msgSend_diffableDataSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "diffableDataSource");
}

id objc_msgSend_disableNotificationsForSelectedHomeWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableNotificationsForSelectedHomeWithReason:");
}

id objc_msgSend_dismissButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissButton");
}

id objc_msgSend_dismissButtonEffectView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissButtonEffectView");
}

id objc_msgSend_dismissButtonForegroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissButtonForegroundView");
}

id objc_msgSend_dismissInstallProfileViewControllerWithAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissInstallProfileViewControllerWithAnimation:");
}

id objc_msgSend_dismissInstallProfileViewControllerWithAnimation_shouldOpenSenderURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissInstallProfileViewControllerWithAnimation:shouldOpenSenderURL:");
}

id objc_msgSend_dismissPresentedViewControllersAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissPresentedViewControllersAnimated:");
}

id objc_msgSend_dismissViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewController");
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_dismissalPanTranslationChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissalPanTranslationChanged:");
}

id objc_msgSend_dismissalPanTranslationEnded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissalPanTranslationEnded");
}

id objc_msgSend_dispatcher(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dispatcher");
}

id objc_msgSend_displayMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayMode");
}

id objc_msgSend_displayedItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayedItemAtIndexPath:");
}

id objc_msgSend_displayedItemsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayedItemsInSection:");
}

id objc_msgSend_doesURLContainPath_urlResponseString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doesURLContainPath:urlResponseString:");
}

id objc_msgSend_donateAppLaunchEvent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateAppLaunchEvent");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleValue");
}

id objc_msgSend_editedName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editedName");
}

id objc_msgSend_effectMappingColors_whitePoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectMappingColors:whitePoint:");
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectWithStyle:");
}

id objc_msgSend_enableButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableButton");
}

id objc_msgSend_enableNotificationsForSelectedHomeWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableNotificationsForSelectedHomeWithReason:");
}

id objc_msgSend_endBackgroundTask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endBackgroundTask:");
}

id objc_msgSend_endDateComponents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endDateComponents");
}

id objc_msgSend_endEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEditing:");
}

id objc_msgSend_endUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endUpdates");
}

id objc_msgSend_energyAccessoryTypeGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "energyAccessoryTypeGroup");
}

id objc_msgSend_entities(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entities");
}

id objc_msgSend_entityName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityName");
}

id objc_msgSend_entityOfType_inEntities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityOfType:inEntities:");
}

id objc_msgSend_entityType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityType");
}

id objc_msgSend_eraseHomeDataWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eraseHomeDataWithCompletionHandler:");
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "error");
}

id objc_msgSend_errorOnlyCompletionHandlerAdapter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorOnlyCompletionHandlerAdapter");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_executeActionSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeActionSet:");
}

id objc_msgSend_executionEnvironmentDidBecomeActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executionEnvironmentDidBecomeActive");
}

id objc_msgSend_executionEnvironmentDidEnterBackground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executionEnvironmentDidEnterBackground");
}

id objc_msgSend_executionEnvironmentWillEnterForeground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executionEnvironmentWillEnterForeground");
}

id objc_msgSend_executionEnvironmentWillResignActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executionEnvironmentWillResignActive");
}

id objc_msgSend_exitToAppleStoreAppOrSafariWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exitToAppleStoreAppOrSafariWithURL:");
}

id objc_msgSend_failedTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedTest:");
}

id objc_msgSend_failedTest_withFailure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedTest:withFailure:");
}

id objc_msgSend_fetchClipWithUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchClipWithUUID:completion:");
}

id objc_msgSend_fetchDevicesWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchDevicesWithCompletionHandler:");
}

id objc_msgSend_fetchTriggerNameForTriggerIdentifier_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchTriggerNameForTriggerIdentifier:completionHandler:");
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_filters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filters");
}

id objc_msgSend_finishWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishWithError:");
}

id objc_msgSend_finishWithNoResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishWithNoResult");
}

id objc_msgSend_finishWithResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishWithResult:");
}

id objc_msgSend_finishedTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedTest:");
}

id objc_msgSend_firstFastUpdateFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstFastUpdateFuture");
}

id objc_msgSend_firstMatchInString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstMatchInString:options:range:");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstObject");
}

id objc_msgSend_firstReadCompleteFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstReadCompleteFuture");
}

id objc_msgSend_flatMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flatMap:");
}

id objc_msgSend_fontWithDescriptor_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithDescriptor:size:");
}

id objc_msgSend_formattedString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedString");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frame");
}

id objc_msgSend_frameOfPresentedViewInContainerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameOfPresentedViewInContainerView");
}

id objc_msgSend_futureWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "futureWithBlock:");
}

id objc_msgSend_futureWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "futureWithError:");
}

id objc_msgSend_futureWithNoResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "futureWithNoResult");
}

id objc_msgSend_futureWithResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "futureWithResult:");
}

id objc_msgSend_getAvailabilityDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAvailabilityDictionary");
}

id objc_msgSend_getDeviceName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDeviceName");
}

id objc_msgSend_getRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRed:green:blue:alpha:");
}

id objc_msgSend_getURLRequestForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getURLRequestForURL:");
}

id objc_msgSend_getURLStringFromLocaleDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getURLStringFromLocaleDictionary:");
}

id objc_msgSend_getUserAgent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getUserAgent");
}

id objc_msgSend_getWebViewNavigationStateForWebView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getWebViewNavigationStateForWebView:");
}

id objc_msgSend_getWebViewURLKeyFromCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getWebViewURLKeyFromCache:");
}

id objc_msgSend_givenName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "givenName");
}

id objc_msgSend_globalAsyncScheduler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "globalAsyncScheduler");
}

id objc_msgSend_groupedFooterConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupedFooterConfiguration");
}

id objc_msgSend_groupedHeaderConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupedHeaderConfiguration");
}

id objc_msgSend_handleConfigureIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConfigureIntent:");
}

id objc_msgSend_handleError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleError:");
}

id objc_msgSend_handleError_operationType_options_retryBlock_cancelBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleError:operationType:options:retryBlock:cancelBlock:");
}

id objc_msgSend_handleError_retryBlock_cancelBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleError:retryBlock:cancelBlock:");
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:");
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInMethod:object:file:lineNumber:description:");
}

id objc_msgSend_handleIntent_withNavigator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleIntent:withNavigator:");
}

id objc_msgSend_handleShowHomeIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleShowHomeIntent:");
}

id objc_msgSend_handleShowSingleAccessoryQuickControlsIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleShowSingleAccessoryQuickControlsIntent:");
}

id objc_msgSend_hasConnectedToNetwork(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasConnectedToNetwork");
}

id objc_msgSend_hasLoadedHomes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasLoadedHomes");
}

id objc_msgSend_hasNextStepInRestrictedGuestIncomingInvitationFlow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasNextStepInRestrictedGuestIncomingInvitationFlow");
}

id objc_msgSend_hasOptedToHH2(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasOptedToHH2");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_headerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headerView");
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightAnchor");
}

id objc_msgSend_hf_accessoryWithDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_accessoryWithDeviceIdentifier:");
}

id objc_msgSend_hf_accessoryWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_accessoryWithIdentifier:");
}

id objc_msgSend_hf_allCameraProfiles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_allCameraProfiles");
}

id objc_msgSend_hf_allHomePodsSupportRemoteProfileInstallation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_allHomePodsSupportRemoteProfileInstallation");
}

id objc_msgSend_hf_allNetworkConfigurationProfiles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_allNetworkConfigurationProfiles");
}

id objc_msgSend_hf_allNetworkRouterAccessories(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_allNetworkRouterAccessories");
}

id objc_msgSend_hf_allRooms(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_allRooms");
}

id objc_msgSend_hf_allServices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_allServices");
}

id objc_msgSend_hf_allVisibleServices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_allVisibleServices");
}

id objc_msgSend_hf_cameraProfileWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_cameraProfileWithIdentifier:");
}

id objc_msgSend_hf_canAddAccessCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_canAddAccessCode");
}

id objc_msgSend_hf_canAddHomeMember(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_canAddHomeMember");
}

id objc_msgSend_hf_characteristicValueManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_characteristicValueManager");
}

id objc_msgSend_hf_clearCachedWalletKeyDeviceStateForCurrentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_clearCachedWalletKeyDeviceStateForCurrentDevice");
}

id objc_msgSend_hf_containedServices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_containedServices");
}

id objc_msgSend_hf_currentUserIsOwner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_currentUserIsOwner");
}

id objc_msgSend_hf_currentUserIsRestrictedGuest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_currentUserIsRestrictedGuest");
}

id objc_msgSend_hf_dateByAddingDays_toDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_dateByAddingDays:toDate:");
}

id objc_msgSend_hf_displayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_displayName");
}

id objc_msgSend_hf_effectiveIsFavorite(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_effectiveIsFavorite");
}

id objc_msgSend_hf_effectiveShowInHomeDashboard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_effectiveShowInHomeDashboard");
}

id objc_msgSend_hf_enableEventLogOnboardingFlag(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_enableEventLogOnboardingFlag");
}

id objc_msgSend_hf_errorWithCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_errorWithCode:");
}

id objc_msgSend_hf_errorWithCode_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_errorWithCode:description:");
}

id objc_msgSend_hf_hasAnyVisibleTriggers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_hasAnyVisibleTriggers");
}

id objc_msgSend_hf_hasHomePods(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_hasHomePods");
}

id objc_msgSend_hf_hasSeenOnboardingWelcomeView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_hasSeenOnboardingWelcomeView");
}

id objc_msgSend_hf_homeForName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_homeForName:");
}

id objc_msgSend_hf_homeForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_homeForURL:");
}

id objc_msgSend_hf_homeFutureForName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_homeFutureForName:");
}

id objc_msgSend_hf_homeHasMigratedIntoHomeApp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_homeHasMigratedIntoHomeApp");
}

id objc_msgSend_hf_homePods(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_homePods");
}

id objc_msgSend_hf_homeWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_homeWithIdentifier:");
}

id objc_msgSend_hf_isBridge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_isBridge");
}

id objc_msgSend_hf_isCamera(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_isCamera");
}

id objc_msgSend_hf_isCurrentLocationHome(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_isCurrentLocationHome");
}

id objc_msgSend_hf_isLegacyService(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_isLegacyService");
}

id objc_msgSend_hf_isOnForContextType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_isOnForContextType:");
}

id objc_msgSend_hf_keyColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_keyColor");
}

id objc_msgSend_hf_lastNewFeaturesViewVersionSeen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_lastNewFeaturesViewVersionSeen");
}

id objc_msgSend_hf_locationFromURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_locationFromURL:");
}

id objc_msgSend_hf_minimumDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_minimumDescription");
}

id objc_msgSend_hf_minimumDescriptionsOfHomes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_minimumDescriptionsOfHomes:");
}

id objc_msgSend_hf_openiCloudKeychainPreferences(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_openiCloudKeychainPreferences");
}

id objc_msgSend_hf_openiCloudPreferencesURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_openiCloudPreferencesURL");
}

id objc_msgSend_hf_orderedHomes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_orderedHomes");
}

id objc_msgSend_hf_owningBridgeAccessory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_owningBridgeAccessory");
}

id objc_msgSend_hf_parentRoom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_parentRoom");
}

id objc_msgSend_hf_personManagerWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_personManagerWithIdentifier:");
}

id objc_msgSend_hf_prettyDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_prettyDescription");
}

id objc_msgSend_hf_roomWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_roomWithName:");
}

id objc_msgSend_hf_setHasSeenOnboardingWelcomeView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_setHasSeenOnboardingWelcomeView:");
}

id objc_msgSend_hf_setHomeHasMigratedForRedesign_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_setHomeHasMigratedForRedesign:");
}

id objc_msgSend_hf_setHomeHasMigratedServicesToAccessories_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_setHomeHasMigratedServicesToAccessories:");
}

id objc_msgSend_hf_setHomeHasOnboardedApplicationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "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:");
}

id objc_msgSend_hf_setOrderedHomes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_setOrderedHomes:");
}

id objc_msgSend_hf_setSeenNewFeaturesViewVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_setSeenNewFeaturesViewVersion:");
}

id objc_msgSend_hf_setSelectedRoom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_setSelectedRoom:");
}

id objc_msgSend_hf_setTemporaryEnergyLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_setTemporaryEnergyLocation:");
}

id objc_msgSend_hf_sharedCalendar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_sharedCalendar");
}

id objc_msgSend_hf_shouldBlockCurrentUserFromHome(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_shouldBlockCurrentUserFromHome");
}

id objc_msgSend_hf_shouldBlockCurrentUserFromHomeForRoarUpgrade(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_shouldBlockCurrentUserFromHomeForRoarUpgrade");
}

id objc_msgSend_hf_unitaryCameraProfile(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_unitaryCameraProfile");
}

id objc_msgSend_hf_userCanCreateTrigger(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_userCanCreateTrigger");
}

id objc_msgSend_hf_userIsAllowedToCreateTrigger(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_userIsAllowedToCreateTrigger");
}

id objc_msgSend_hh2MigrationFailedError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hh2MigrationFailedError");
}

id objc_msgSend_hmf_isEqualToUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hmf_isEqualToUUID:");
}

id objc_msgSend_home(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "home");
}

id objc_msgSend_home_onboardAllFeaturesFromPresentingViewController_usageOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "home:onboardAllFeaturesFromPresentingViewController:usageOptions:");
}

id objc_msgSend_home_onboardHomeHub2FromPresentingViewController_devices_usageOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "home:onboardHomeHub2FromPresentingViewController:devices:usageOptions:");
}

id objc_msgSend_home_onboardIdentifyVoiceFromPresentingViewController_usageOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "home:onboardIdentifyVoiceFromPresentingViewController:usageOptions:");
}

id objc_msgSend_home_onboardPersonalRequestsFromPresentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "home:onboardPersonalRequestsFromPresentingViewController:");
}

id objc_msgSend_homeBuilder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homeBuilder");
}

id objc_msgSend_homeFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homeFuture");
}

id objc_msgSend_homeFutureWithUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homeFutureWithUser:");
}

id objc_msgSend_homeInvitationTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homeInvitationTitle");
}

id objc_msgSend_homeKitObjectFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homeKitObjectFuture");
}

id objc_msgSend_homeManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homeManager");
}

id objc_msgSend_homeName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homeName");
}

id objc_msgSend_homeNeedsMigration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homeNeedsMigration:");
}

id objc_msgSend_homePodProfileInstaller(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homePodProfileInstaller");
}

id objc_msgSend_homeScreenQuickActionController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homeScreenQuickActionController");
}

id objc_msgSend_homeUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homeUUID");
}

id objc_msgSend_homes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homes");
}

id objc_msgSend_homesAwaitingPendingInvitations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homesAwaitingPendingInvitations");
}

id objc_msgSend_horizontalConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "horizontalConstraints");
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "host");
}

id objc_msgSend_hu_dismissViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hu_dismissViewControllerAnimated:");
}

id objc_msgSend_hu_locationArrowTemplate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hu_locationArrowTemplate");
}

id objc_msgSend_hu_performanceTestReadyFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hu_performanceTestReadyFuture");
}

id objc_msgSend_hu_preloadContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hu_preloadContent");
}

id objc_msgSend_hu_presentPreloadableViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hu_presentPreloadableViewController:animated:");
}

id objc_msgSend_hu_pushPreloadableViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hu_pushPreloadableViewController:animated:");
}

id objc_msgSend_iCloudURLIsReachable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iCloudURLIsReachable");
}

id objc_msgSend_iconWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconWithType:");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifier");
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:");
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageView");
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithRenderingMode:");
}

id objc_msgSend_imageWithTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithTintColor:");
}

id objc_msgSend_incomingHomeInvitations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incomingHomeInvitations");
}

id objc_msgSend_incomingInvitationDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incomingInvitationDelegate");
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObjectPassingTest:");
}

id objc_msgSend_indexPathForItem_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForItem:inSection:");
}

id objc_msgSend_indexPathForItemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForItemIdentifier:");
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForRow:inSection:");
}

id objc_msgSend_indexSetWithIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSetWithIndex:");
}

id objc_msgSend_indexSetWithIndexesInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSetWithIndexesInRange:");
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "infoDictionary");
}

id objc_msgSend_initWithActionSetBuilder_mode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActionSetBuilder:mode:");
}

id objc_msgSend_initWithActivityIndicatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityIndicatorStyle:");
}

id objc_msgSend_initWithAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAltDSID:");
}

id objc_msgSend_initWithApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplication:");
}

id objc_msgSend_initWithArrangedSubviews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArrangedSubviews:");
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBarButtonSystemItem:target:action:");
}

id objc_msgSend_initWithButtonDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithButtonDescriptors:");
}

id objc_msgSend_initWithCollectionType_namedSectionTitle_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCollectionType:namedSectionTitle:delegate:");
}

id objc_msgSend_initWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContext:");
}

id objc_msgSend_initWithCustomView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCustomView:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDelegate_forHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:forHome:");
}

id objc_msgSend_initWithDelegate_invitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:invitation:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEffect:");
}

id objc_msgSend_initWithExecutionEnvironment_dispatcher_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithExecutionEnvironment:dispatcher:");
}

id objc_msgSend_initWithExistingObject_inHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithExistingObject:inHome:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithFrame_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:configuration:");
}

id objc_msgSend_initWithFrame_contentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:contentMode:");
}

id objc_msgSend_initWithFrame_withDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:withDelegate:");
}

id objc_msgSend_initWithGuestAccessSchedule_tintColor_shouldDisplayAlwaysAllowedSchedule_scheduleBackgroundColor_listRowBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGuestAccessSchedule:tintColor:shouldDisplayAlwaysAllowedSchedule:scheduleBackgroundColor:listRowBackgroundColor:");
}

id objc_msgSend_initWithHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHome:");
}

id objc_msgSend_initWithHome_actionSetItemStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHome:actionSetItemStyle:");
}

id objc_msgSend_initWithHome_serviceTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHome:serviceTypes:");
}

id objc_msgSend_initWithHome_user_nameStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHome:user:nameStyle:");
}

id objc_msgSend_initWithHomeBuilder_presentationDelegate_addLocationDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHomeBuilder:presentationDelegate:addLocationDelegate:");
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:");
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:");
}

id objc_msgSend_initWithImageData_dataType_isTemplate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImageData:dataType:isTemplate:");
}

id objc_msgSend_initWithIncomingInvitation_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIncomingInvitation:delegate:");
}

id objc_msgSend_initWithIncomingInvitation_invitationHelper_incomingInvitationDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIncomingInvitation:invitationHelper:incomingInvitationDelegate:");
}

id objc_msgSend_initWithItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithItems:");
}

id objc_msgSend_initWithLocalizationDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocalizationDictionary:");
}

id objc_msgSend_initWithMACAddressString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMACAddressString:");
}

id objc_msgSend_initWithMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMode:");
}

id objc_msgSend_initWithName_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:delegate:");
}

id objc_msgSend_initWithNavigationBarClass_toolbarClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNavigationBarClass:toolbarClass:");
}

id objc_msgSend_initWithNavigator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNavigator:");
}

id objc_msgSend_initWithOnboardingStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOnboardingStates:");
}

id objc_msgSend_initWithPinCodeManager_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPinCodeManager:home:");
}

id objc_msgSend_initWithPresentedViewController_presentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPresentedViewController:presentingViewController:");
}

id objc_msgSend_initWithProfileDataFromSettingsJump_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProfileDataFromSettingsJump:");
}

id objc_msgSend_initWithResultsBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithResultsBlock:");
}

id objc_msgSend_initWithRoomBuilder_presentationDelegate_addRoomDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoomBuilder:presentationDelegate:addRoomDelegate:");
}

id objc_msgSend_initWithRootController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRootController:");
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRootViewController:");
}

id objc_msgSend_initWithSBSApplicationShortcutIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSBSApplicationShortcutIcon:");
}

id objc_msgSend_initWithServiceType_home_accessory_presentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceType:home:accessory:presentingViewController:");
}

id objc_msgSend_initWithSideBarViewController_sideBarItemManager_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSideBarViewController:sideBarItemManager:delegate:");
}

id objc_msgSend_initWithStartDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStartDate:endDate:");
}

id objc_msgSend_initWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStyle:");
}

id objc_msgSend_initWithStyle_title_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStyle:title:description:");
}

id objc_msgSend_initWithSystemImageNamed_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSystemImageNamed:configuration:");
}

id objc_msgSend_initWithTableView_cellProvider_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTableView:cellProvider:delegate:");
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:action:");
}

id objc_msgSend_initWithType_assetIdentifier_cropInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:assetIdentifier:cropInfo:");
}

id objc_msgSend_initWithType_localizedTitle_localizedSubtitle_icon_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:localizedTitle:localizedSubtitle:icon:userInfo:");
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:");
}

id objc_msgSend_initWithURL_resolvingAgainstBaseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:resolvingAgainstBaseURL:");
}

id objc_msgSend_initWithURLString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURLString:");
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDString:");
}

id objc_msgSend_initWithWallpaper_image_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWallpaper:image:delegate:");
}

id objc_msgSend_initialLoadCompleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialLoadCompleted");
}

id objc_msgSend_initialSetupStateController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialSetupStateController");
}

id objc_msgSend_initialViewControllerForAddingSceneWithPresentationDelegate_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialViewControllerForAddingSceneWithPresentationDelegate:home:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_insertRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_insertSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSections:withRowAnimation:");
}

id objc_msgSend_insetSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insetSize");
}

id objc_msgSend_installManagedConfigurationProfileWithData_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installManagedConfigurationProfileWithData:completionHandler:");
}

id objc_msgSend_installProfileVCCompletionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installProfileVCCompletionBlock");
}

id objc_msgSend_installProfileViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installProfileViewController");
}

id objc_msgSend_instancesRespondToSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instancesRespondToSelector:");
}

id objc_msgSend_instructionsItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instructionsItem");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intValue");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerValue");
}

id objc_msgSend_intent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intent");
}

id objc_msgSend_intentHandlerWithNavigator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intentHandlerWithNavigator:");
}

id objc_msgSend_interaction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interaction");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidate");
}

id objc_msgSend_invitation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitation");
}

id objc_msgSend_invitationHelper(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationHelper");
}

id objc_msgSend_invitationResponseControllersByHomeUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationResponseControllersByHomeUUID");
}

id objc_msgSend_invitationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationState");
}

id objc_msgSend_invitationViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationViewController");
}

id objc_msgSend_invitationViewControllerDidAcceptInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationViewControllerDidAcceptInvitation:");
}

id objc_msgSend_invitationViewControllerDidDecideLaterInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationViewControllerDidDecideLaterInvitation:");
}

id objc_msgSend_invitationViewControllerDidDecideLaterInvitation_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationViewControllerDidDecideLaterInvitation:error:");
}

id objc_msgSend_invitationViewControllerDidDeclineInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationViewControllerDidDeclineInvitation:");
}

id objc_msgSend_invitationViewControllerDidIgnoreInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationViewControllerDidIgnoreInvitation:");
}

id objc_msgSend_invitationViewControllerDidReportJunkInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationViewControllerDidReportJunkInvitation:");
}

id objc_msgSend_inviterContact(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inviterContact");
}

id objc_msgSend_isAMac(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAMac");
}

id objc_msgSend_isAVisionPro(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAVisionPro");
}

id objc_msgSend_isAnIPad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnIPad");
}

id objc_msgSend_isBeingPresented(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBeingPresented");
}

id objc_msgSend_isBridged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBridged");
}

id objc_msgSend_isCollapsed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCollapsed");
}

id objc_msgSend_isDescendantOfView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDescendantOfView:");
}

id objc_msgSend_isDisplayingRestrictedGuestIncomingInvitationFlow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDisplayingRestrictedGuestIncomingInvitationFlow");
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEditing");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFinished");
}

id objc_msgSend_isHomeManagerStatusReady_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHomeManagerStatusReady:");
}

id objc_msgSend_isInstallNavigationControllerPresented(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInstallNavigationControllerPresented");
}

id objc_msgSend_isInternalInstall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInternalInstall");
}

id objc_msgSend_isInternalTest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInternalTest");
}

id objc_msgSend_isInviteeRestrictedGuest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInviteeRestrictedGuest");
}

id objc_msgSend_isLoading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLoading");
}

id objc_msgSend_isPressDemoModeEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPressDemoModeEnabled");
}

id objc_msgSend_isProfileInstallationUIAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isProfileInstallationUIAllowed");
}

id objc_msgSend_isProfileUIInstallationAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isProfileUIInstallationAllowed");
}

id objc_msgSend_isRunningInStoreDemoMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRunningInStoreDemoMode");
}

id objc_msgSend_isSetupPayloadURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSetupPayloadURL:");
}

id objc_msgSend_isSourceTypeAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSourceTypeAvailable:");
}

id objc_msgSend_isUnknownContact(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUnknownContact");
}

id objc_msgSend_isViewVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isViewVisible");
}

id objc_msgSend_itemIdentifierForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemIdentifierForIndexPath:");
}

id objc_msgSend_itemIdentifierToBackgroundTaskIdentifierMap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemIdentifierToBackgroundTaskIdentifierMap");
}

id objc_msgSend_itemManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemManager");
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "items");
}

id objc_msgSend_joinedHomeVC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinedHomeVC");
}

id objc_msgSend_joiningHomeLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joiningHomeLabel");
}

id objc_msgSend_joiningHomeVC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joiningHomeVC");
}

id objc_msgSend_knownContactImageConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "knownContactImageConstraints");
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelColor");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastObject");
}

id objc_msgSend_latestResults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "latestResults");
}

id objc_msgSend_launchHomeUIServiceToResumeSetupWithUserInfo_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchHomeUIServiceToResumeSetupWithUserInfo:completionHandler:");
}

id objc_msgSend_launchServiceWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchServiceWithContext:");
}

id objc_msgSend_launchedToTest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchedToTest");
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layer");
}

id objc_msgSend_layoutConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutConstraints");
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutIfNeeded");
}

id objc_msgSend_layoutMarginsGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutMarginsGuide");
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leadingAnchor");
}

id objc_msgSend_leftBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftBarButtonItem");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_lightAccessoryTypeGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lightAccessoryTypeGroup");
}

id objc_msgSend_linkButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkButton");
}

id objc_msgSend_loadLoadingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadLoadingViewController");
}

id objc_msgSend_loadRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadRequest:");
}

id objc_msgSend_loadSideBarWithDisplayModeChangeAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadSideBarWithDisplayModeChangeAllowed:");
}

id objc_msgSend_loadTabsFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadTabsFuture");
}

id objc_msgSend_loadViewIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadViewIfNeeded");
}

id objc_msgSend_localizedCaseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedCaseInsensitiveCompare:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedDescription");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_locationIcon(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationIcon");
}

id objc_msgSend_locationListViewControllerDidFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationListViewControllerDidFinish:");
}

id objc_msgSend_locationSensingAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationSensingAvailable");
}

id objc_msgSend_locationSensingAvailableFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationSensingAvailableFuture");
}

id objc_msgSend_lockOnboardingTypeForString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockOnboardingTypeForString:");
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lowercaseString");
}

id objc_msgSend_mainActionButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainActionButton");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainBundle");
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainQueue");
}

id objc_msgSend_mainScheduler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainScheduler");
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainScreen");
}

id objc_msgSend_mainTabBarController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainTabBarController");
}

id objc_msgSend_mainThreadScheduler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainThreadScheduler");
}

id objc_msgSend_makeKeyAndVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeKeyAndVisible");
}

id objc_msgSend_mediaAccessoryTypeGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaAccessoryTypeGroup");
}

id objc_msgSend_migrateServicesToAccessory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "migrateServicesToAccessory");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCopy");
}

id objc_msgSend_na_any_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "na_any:");
}

id objc_msgSend_na_each_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "na_each:");
}

id objc_msgSend_na_filter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "na_filter:");
}

id objc_msgSend_na_firstKeyPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "na_firstKeyPassingTest:");
}

id objc_msgSend_na_firstObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "na_firstObjectPassingTest:");
}

id objc_msgSend_na_flatMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "na_flatMap:");
}

id objc_msgSend_na_genericError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "na_genericError");
}

id objc_msgSend_na_map_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "na_map:");
}

id objc_msgSend_na_safeAddObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "na_safeAddObject:");
}

id objc_msgSend_na_safeAddObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "na_safeAddObjectsFromArray:");
}

id objc_msgSend_na_safeSetObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "na_safeSetObject:forKey:");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "name");
}

id objc_msgSend_nameCell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameCell");
}

id objc_msgSend_naui_isDescendantOfViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "naui_isDescendantOfViewController:");
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationBar");
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationController");
}

id objc_msgSend_navigationControllerFromMapWithClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationControllerFromMapWithClass:");
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationItem");
}

id objc_msgSend_navigationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationState");
}

id objc_msgSend_navigator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigator");
}

id objc_msgSend_navigatorWithRootViewController_baseController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigatorWithRootViewController:baseController:");
}

id objc_msgSend_needsReboot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsReboot");
}

id objc_msgSend_networkIconView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkIconView");
}

id objc_msgSend_networkPathMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkPathMonitor");
}

id objc_msgSend_networkPathMonitorDispatchQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkPathMonitorDispatchQueue");
}

id objc_msgSend_newFeaturesOnboardingVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newFeaturesOnboardingVersion");
}

id objc_msgSend_nextViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextViewController");
}

id objc_msgSend_numberFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberFromString:");
}

id objc_msgSend_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfRowsInSection:");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "object");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_onboardingCompleteFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingCompleteFuture");
}

id objc_msgSend_onboardingDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingDelegate");
}

id objc_msgSend_onboardingFlowClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingFlowClass");
}

id objc_msgSend_onboardingNavigationController_acceptedInvitationAndWaitingForHomeToLand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingNavigationController:acceptedInvitationAndWaitingForHomeToLand:");
}

id objc_msgSend_onboardingNavigationController_didAcceptInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingNavigationController:didAcceptInvitation:");
}

id objc_msgSend_onboardingNavigationController_didDecideLaterInvitation_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingNavigationController:didDecideLaterInvitation:error:");
}

id objc_msgSend_onboardingNavigationController_didDeclineInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingNavigationController:didDeclineInvitation:");
}

id objc_msgSend_onboardingNavigationController_didIgnoreInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingNavigationController:didIgnoreInvitation:");
}

id objc_msgSend_onboardingNavigationController_didReportJunkInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingNavigationController:didReportJunkInvitation:");
}

id objc_msgSend_onboardingNavigationControllerDidFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingNavigationControllerDidFinish:");
}

id objc_msgSend_onboardingStates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingStates");
}

id objc_msgSend_onboardingStatesForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingStatesForHome:");
}

id objc_msgSend_onboardingStatesForHome_pendingHomeIDsFromInvitations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingStatesForHome:pendingHomeIDsFromInvitations:");
}

id objc_msgSend_onboardingStatesForRestrictedGuestInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingStatesForRestrictedGuestInvitation:");
}

id objc_msgSend_onboardingViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingViewControllers");
}

id objc_msgSend_openLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openLink:");
}

id objc_msgSend_openSenderURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openSenderURL");
}

id objc_msgSend_openSensitiveURL_withOptions_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openSensitiveURL:withOptions:error:");
}

id objc_msgSend_openURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:");
}

id objc_msgSend_openURL_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:withCompletionHandler:");
}

id objc_msgSend_openURL_withOptions_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:withOptions:error:");
}

id objc_msgSend_operatingSystemVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operatingSystemVersion");
}

id objc_msgSend_orderedTabItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orderedTabItems");
}

id objc_msgSend_originalImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originalImage");
}

id objc_msgSend_outcomeWithResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outcomeWithResults:");
}

id objc_msgSend_panGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "panGestureRecognizer");
}

id objc_msgSend_parseURLForThemeType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseURLForThemeType:");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "path");
}

id objc_msgSend_pathComponents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathComponents");
}

id objc_msgSend_pendingConfigurationIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingConfigurationIdentifier");
}

id objc_msgSend_pendingHomeIDsFromInvitations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingHomeIDsFromInvitations");
}

id objc_msgSend_pendingInvitations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingInvitations");
}

id objc_msgSend_performActionForShortcutItem_navigator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performActionForShortcutItem:navigator:");
}

id objc_msgSend_performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlock:");
}

id objc_msgSend_performDeviceToDeviceEncryptionStateRepairWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performDeviceToDeviceEncryptionStateRepairWithCompletion:");
}

id objc_msgSend_performMigrationIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performMigrationIfNeeded");
}

id objc_msgSend_performMigrationSuccessTasks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performMigrationSuccessTasks");
}

id objc_msgSend_performWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWithOptions:");
}

id objc_msgSend_performWithQualityOfService_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWithQualityOfService:block:");
}

id objc_msgSend_personManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personManager");
}

id objc_msgSend_pinCodeManagerForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pinCodeManagerForHome:");
}

id objc_msgSend_pinchGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pinchGestureRecognizer");
}

id objc_msgSend_pocketOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pocketOptions");
}

id objc_msgSend_pocketViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pocketViewController");
}

id objc_msgSend_popProfileDataFromHeadOfInstallationQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popProfileDataFromHeadOfInstallationQueue");
}

id objc_msgSend_popToRootViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToRootViewControllerAnimated:");
}

id objc_msgSend_popToViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToViewController:animated:");
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popoverPresentationController");
}

id objc_msgSend_populateWallpaper_withAnimation_onlyIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populateWallpaper:withAnimation:onlyIfNeeded:");
}

id objc_msgSend_ppt_cameraController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ppt_cameraController");
}

id objc_msgSend_ppt_clipCollectionView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ppt_clipCollectionView");
}

id objc_msgSend_ppt_clipsLoadedFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ppt_clipsLoadedFuture");
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithFormat:");
}

id objc_msgSend_preferencesButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferencesButton");
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_addingSymbolicTraits_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:");
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:");
}

id objc_msgSend_preferredFontForTextStyle_traits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:traits:");
}

id objc_msgSend_preheatCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preheatCache");
}

id objc_msgSend_preload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preload:");
}

id objc_msgSend_preloadTabIcons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preloadTabIcons");
}

id objc_msgSend_presentAddPersonOrAlertForHH2Upgrade_withHome_viewContext_delegate_presentationDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentAddPersonOrAlertForHH2Upgrade:withHome:viewContext:delegate:presentationDelegate:");
}

id objc_msgSend_presentBridgeDetailViewForAccessory_withHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentBridgeDetailViewForAccessory:withHome:");
}

id objc_msgSend_presentBridgeSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentBridgeSettings:");
}

id objc_msgSend_presentCameraProfile_forCameraClip_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentCameraProfile:forCameraClip:animated:");
}

id objc_msgSend_presentCameraProfile_startDate_endDate_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentCameraProfile:startDate:endDate:animated:");
}

id objc_msgSend_presentConfirmationAlertForExecutingTriggerWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentConfirmationAlertForExecutingTriggerWithIdentifier:");
}

id objc_msgSend_presentDefaultMediaServiceSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentDefaultMediaServiceSettings:");
}

id objc_msgSend_presentFeedbackFlowForCameraClip_fromProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentFeedbackFlowForCameraClip:fromProfile:");
}

id objc_msgSend_presentItemWithUUID_destination_secondaryDestination_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentItemWithUUID:destination:secondaryDestination:animated:");
}

id objc_msgSend_presentModalDiscoverWebViewControllerWithURLString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentModalDiscoverWebViewControllerWithURLString:");
}

id objc_msgSend_presentNetworkSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentNetworkSettings:");
}

id objc_msgSend_presentNotificationSettingsForTopic_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentNotificationSettingsForTopic:animated:");
}

id objc_msgSend_presentPersonalRequestsSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentPersonalRequestsSettings:");
}

id objc_msgSend_presentRoomSettingsForRoom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentRoomSettingsForRoom:");
}

id objc_msgSend_presentSoftwareUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentSoftwareUpdate:");
}

id objc_msgSend_presentStatusDetailsForStatusItemClass_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentStatusDetailsForStatusItemClass:animated:");
}

id objc_msgSend_presentUserLockSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentUserLockSettings:");
}

id objc_msgSend_presentUserViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentUserViewController:");
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:animated:completion:");
}

id objc_msgSend_presentWallpaperEditingViewControllerWithImage_wallpaper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentWallpaperEditingViewControllerWithImage:wallpaper:");
}

id objc_msgSend_presentationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationController");
}

id objc_msgSend_presentationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationState");
}

id objc_msgSend_presentedDataSyncingController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedDataSyncingController");
}

id objc_msgSend_presentedOnboardingController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedOnboardingController");
}

id objc_msgSend_presentedView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedView");
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedViewController");
}

id objc_msgSend_presentediCloudWarningController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentediCloudWarningController");
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentingViewController");
}

id objc_msgSend_primaryAccountAltDSID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryAccountAltDSID");
}

id objc_msgSend_primaryNavigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryNavigationController");
}

id objc_msgSend_privateSettings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "privateSettings");
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processInfo");
}

id objc_msgSend_processOriginalImageFromWallpaper_originalImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processOriginalImageFromWallpaper:originalImage:");
}

id objc_msgSend_processPool(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processPool");
}

id objc_msgSend_processedImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processedImage");
}

id objc_msgSend_profileData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "profileData");
}

id objc_msgSend_profileWithData_outError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "profileWithData:outError:");
}

id objc_msgSend_pushNewDiscoverWebViewControllerWithURLString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushNewDiscoverWebViewControllerWithURLString:");
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushViewController:animated:");
}

id objc_msgSend_queryItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryItems");
}

id objc_msgSend_range(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "range");
}

id objc_msgSend_reachability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reachability");
}

id objc_msgSend_recover_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recover:");
}

id objc_msgSend_refreshAfterSidebarTabbarSwitchWithDashboardContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshAfterSidebarTabbarSwitchWithDashboardContext:");
}

id objc_msgSend_refreshWallpaperForHomeKitObject_withAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshWallpaperForHomeKitObject:withAnimation:");
}

id objc_msgSend_registerClass_forCellReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forCellReuseIdentifier:");
}

id objc_msgSend_registerClass_forHeaderFooterViewReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forHeaderFooterViewReuseIdentifier:");
}

id objc_msgSend_registerViewControllerClass_forIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerViewControllerClass:forIdentifier:");
}

id objc_msgSend_registerWallpaperSource_processedSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerWallpaperSource:processedSource:");
}

id objc_msgSend_regularExpressionWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "regularExpressionWithPattern:options:error:");
}

id objc_msgSend_reloadAndUpdateAllItemsFromSenderSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadAndUpdateAllItemsFromSenderSelector:");
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadData");
}

id objc_msgSend_reloadInitialSetup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadInitialSetup");
}

id objc_msgSend_reloadItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadItems");
}

id objc_msgSend_reloadRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_reloadState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadState");
}

id objc_msgSend_reloadWebViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadWebViews");
}

id objc_msgSend_removeAllButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllButtons");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllObjects");
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromSuperview");
}

id objc_msgSend_removeHomeManagerObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeHomeManagerObserver:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeRoom_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeRoom:completionHandler:");
}

id objc_msgSend_removeScriptMessageHandlerForName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeScriptMessageHandlerForName:");
}

id objc_msgSend_removeTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTarget:action:forControlEvents:");
}

id objc_msgSend_requestAuthorizationWithOptions_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestAuthorizationWithOptions:completionHandler:");
}

id objc_msgSend_requestWithURL_cachePolicy_timeoutInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithURL:cachePolicy:timeoutInterval:");
}

id objc_msgSend_reschedule_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reschedule:");
}

id objc_msgSend_resetNukeButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetNukeButton");
}

id objc_msgSend_resetSectionConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetSectionConstraints");
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resignFirstResponder");
}

id objc_msgSend_respondToInvitationWithResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "respondToInvitationWithResponse:");
}

id objc_msgSend_response(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "response");
}

id objc_msgSend_responseController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responseController");
}

id objc_msgSend_restrictedGuestNextViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restrictedGuestNextViewController");
}

id objc_msgSend_restrictedGuestSchedule(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restrictedGuestSchedule");
}

id objc_msgSend_resumeServiceForURLSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resumeServiceForURLSessionIdentifier:");
}

id objc_msgSend_retryButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retryButton");
}

id objc_msgSend_rightBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightBarButtonItem");
}

id objc_msgSend_room(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "room");
}

id objc_msgSend_roomItemProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "roomItemProvider");
}

id objc_msgSend_rooms(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rooms");
}

id objc_msgSend_rootGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rootGroup");
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rootViewController");
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "row");
}

id objc_msgSend_safeAreaLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeAreaLayoutGuide");
}

id objc_msgSend_sanitizeUserEnteredHomeKitName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sanitizeUserEnteredHomeKitName:");
}

id objc_msgSend_saveViewAccessedFromURLEvent_deepLinkFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveViewAccessedFromURLEvent:deepLinkFrom:");
}

id objc_msgSend_savedButtonBarItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "savedButtonBarItem");
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scale");
}

id objc_msgSend_scheduledTimerWithTimeInterval_repeats_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:repeats:block:");
}

id objc_msgSend_schedulerWithDispatchQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "schedulerWithDispatchQueue:");
}

id objc_msgSend_scrollToDefaultPositionInCurrentContextAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToDefaultPositionInCurrentContextAnimated:");
}

id objc_msgSend_scrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollView");
}

id objc_msgSend_secondaryDestination(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryDestination");
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryLabelColor");
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "section");
}

id objc_msgSend_sectionIdentifierForIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionIdentifierForIndex:");
}

id objc_msgSend_securityAccessoryTypeGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "securityAccessoryTypeGroup");
}

id objc_msgSend_segmentIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segmentIdentifier");
}

id objc_msgSend_selectCurrentTab(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectCurrentTab");
}

id objc_msgSend_selectTabWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectTabWithIdentifier:");
}

id objc_msgSend_selectedHomeAppTabIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedHomeAppTabIdentifier");
}

id objc_msgSend_selectedHomeFollowsLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedHomeFollowsLocation");
}

id objc_msgSend_selectedIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedIndex");
}

id objc_msgSend_selectedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedViewController");
}

id objc_msgSend_sendEvent_withData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEvent:withData:");
}

id objc_msgSend_sendSubviewToBack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSubviewToBack:");
}

id objc_msgSend_senderURLString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "senderURLString");
}

id objc_msgSend_serviceType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceType");
}

id objc_msgSend_services(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "services");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set");
}

id objc_msgSend_setAcceptInvitationError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAcceptInvitationError:");
}

id objc_msgSend_setAcceptedPendingAddHomeTimeoutCancellationToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAcceptedPendingAddHomeTimeoutCancellationToken:");
}

id objc_msgSend_setAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityIdentifier:");
}

id objc_msgSend_setAccessoryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessoryType:");
}

id objc_msgSend_setAccessoryView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessoryView:");
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:");
}

id objc_msgSend_setActiveConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveConstraints:");
}

id objc_msgSend_setAdjustsFontForContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontForContentSizeCategory:");
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontSizeToFitWidth:");
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlignment:");
}

id objc_msgSend_setAllowForcedCacheReload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowForcedCacheReload:");
}

id objc_msgSend_setAllowsInlineMediaPlayback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsInlineMediaPlayback:");
}

id objc_msgSend_setAllowsLinkPreview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsLinkPreview:");
}

id objc_msgSend_setAppNavigator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppNavigator:");
}

id objc_msgSend_setApplicationActiveFuture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationActiveFuture:");
}

id objc_msgSend_setApplicationBackgroundedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationBackgroundedDate:");
}

id objc_msgSend_setApplicationURLHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationURLHandler:");
}

id objc_msgSend_setAutocapitalizationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutocapitalizationType:");
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoresizingMask:");
}

id objc_msgSend_setAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAxis:");
}

id objc_msgSend_setBackButtonTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackButtonTitle:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setBackgroundEffects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundEffects:");
}

id objc_msgSend_setBackgroundUrlSessionCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundUrlSessionCompletionHandler:");
}

id objc_msgSend_setBarStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBarStyle:");
}

id objc_msgSend_setBarTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBarTintColor:");
}

id objc_msgSend_setBaseController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaseController:");
}

id objc_msgSend_setBaseViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaseViewController:");
}

id objc_msgSend_setBlurView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBlurView:");
}

id objc_msgSend_setBodyWidthConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBodyWidthConstraint:");
}

id objc_msgSend_setBounces_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBounces:");
}

id objc_msgSend_setButtonLayoutConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonLayoutConstraints:");
}

id objc_msgSend_setCacheRefreshTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCacheRefreshTimeInterval:");
}

id objc_msgSend_setCancelButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancelButton:");
}

id objc_msgSend_setChangingSelectedViewControllerProgrammatically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChangingSelectedViewControllerProgrammatically:");
}

id objc_msgSend_setClearButtonMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClearButtonMode:");
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClipsToBounds:");
}

id objc_msgSend_setConnectionIssueOverlayView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionIssueOverlayView:");
}

id objc_msgSend_setConnectionIssueType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionIssueType:");
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConstant:");
}

id objc_msgSend_setContentConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentConfiguration:");
}

id objc_msgSend_setContentEffects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentEffects:");
}

id objc_msgSend_setContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInset:");
}

id objc_msgSend_setContentInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInsets:");
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentMode:");
}

id objc_msgSend_setContentOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentOffset:");
}

id objc_msgSend_setContentView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentView:");
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerRadius:");
}

id objc_msgSend_setCurrentTabIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentTabIdentifier:");
}

id objc_msgSend_setCustomUserAgent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomUserAgent:");
}

id objc_msgSend_setCustomWallpaper_image_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomWallpaper:image:");
}

id objc_msgSend_setDataSyncState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSyncState:");
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateStyle:");
}

id objc_msgSend_setDeclineOrIgnoreInvitationButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeclineOrIgnoreInvitationButton:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDetailText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetailText:");
}

id objc_msgSend_setDeviceToDeviceEncryptionUpgradeType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceToDeviceEncryptionUpgradeType:");
}

id objc_msgSend_setDeviceToDeviceEncryptionUpgradeUIStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceToDeviceEncryptionUpgradeUIStyle:");
}

id objc_msgSend_setDevicesLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevicesLabel:");
}

id objc_msgSend_setDidPushNextViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidPushNextViewController:");
}

id objc_msgSend_setDidUserTriggerOnboardingDismissal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidUserTriggerOnboardingDismissal:");
}

id objc_msgSend_setDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisabled:");
}

id objc_msgSend_setDismissAccessCodeOnboarding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissAccessCodeOnboarding:");
}

id objc_msgSend_setDismissAccessoryFirmwareUpdateOnboarding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissAccessoryFirmwareUpdateOnboarding:");
}

id objc_msgSend_setDismissAnnounceOnboarding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissAnnounceOnboarding:");
}

id objc_msgSend_setDismissCameraRecordingOnboarding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissCameraRecordingOnboarding:");
}

id objc_msgSend_setDismissCameraRecordingReminderBanner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissCameraRecordingReminderBanner:");
}

id objc_msgSend_setDismissHomeTheaterOnboarding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissHomeTheaterOnboarding:");
}

id objc_msgSend_setDismissIdentifyVoiceOnboarding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissIdentifyVoiceOnboarding:");
}

id objc_msgSend_setDismissIdentifyVoiceReminderBanner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissIdentifyVoiceReminderBanner:");
}

id objc_msgSend_setDismissNaturalLightingOnboarding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissNaturalLightingOnboarding:");
}

id objc_msgSend_setDismissTVViewingProfilesOnboarding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissTVViewingProfilesOnboarding:");
}

id objc_msgSend_setDismissTVViewingProfilesReminderBanner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissTVViewingProfilesReminderBanner:");
}

id objc_msgSend_setDismissUtilityOnboarding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissUtilityOnboarding:");
}

id objc_msgSend_setDismissWalletKeyExpressModeOnboarding_forWalletKeyUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissWalletKeyExpressModeOnboarding:forWalletKeyUUID:");
}

id objc_msgSend_setDistribution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistribution:");
}

id objc_msgSend_setDoesRelativeDateFormatting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDoesRelativeDateFormatting:");
}

id objc_msgSend_setEditedName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditedName:");
}

id objc_msgSend_setEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditing:");
}

id objc_msgSend_setEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEffect:");
}

id objc_msgSend_setEnableButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnableButton:");
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:");
}

id objc_msgSend_setEstimatedRowHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEstimatedRowHeight:");
}

id objc_msgSend_setFeatureName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFeatureName:");
}

id objc_msgSend_setFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilter:");
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setHasConnectedToNetwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasConnectedToNetwork:");
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidden:");
}

id objc_msgSend_setHideIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHideIcon:");
}

id objc_msgSend_setHidesBackButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesBackButton:");
}

id objc_msgSend_setHidesWhenStopped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesWhenStopped:");
}

id objc_msgSend_setHomeScreenQuickActionController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeScreenQuickActionController:");
}

id objc_msgSend_setHomes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomes:");
}

id objc_msgSend_setHorizontalConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHorizontalConstraints:");
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:");
}

id objc_msgSend_setImageSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageSize:");
}

id objc_msgSend_setImageSizeToFitWidth_forNumberOfWallpapers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageSizeToFitWidth:forNumberOfWallpapers:");
}

id objc_msgSend_setInitialLoadCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitialLoadCompleted:");
}

id objc_msgSend_setInstallProfileVCCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInstallProfileVCCompletionBlock:");
}

id objc_msgSend_setInstallProfileViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInstallProfileViewController:");
}

id objc_msgSend_setInstructionsItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInstructionsItem:");
}

id objc_msgSend_setInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvitation:");
}

id objc_msgSend_setItemIdentifierToBackgroundTaskIdentifierMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItemIdentifierToBackgroundTaskIdentifierMap:");
}

id objc_msgSend_setItems_filteringToDisplayedItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItems:filteringToDisplayedItems:");
}

id objc_msgSend_setJoiningHomeLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setJoiningHomeLabel:");
}

id objc_msgSend_setKnownContactImageConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKnownContactImageConstraints:");
}

id objc_msgSend_setLastEnteredForegroundDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastEnteredForegroundDate:");
}

id objc_msgSend_setLayoutConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLayoutConstraints:");
}

id objc_msgSend_setLeftBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftBarButtonItem:");
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineBreakMode:");
}

id objc_msgSend_setLoadingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoadingViewController:");
}

id objc_msgSend_setLocationIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocationIcon:");
}

id objc_msgSend_setLocationSensingAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocationSensingAvailable:");
}

id objc_msgSend_setMainActionButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMainActionButton:");
}

id objc_msgSend_setMaskedCorners_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaskedCorners:");
}

id objc_msgSend_setMasksToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMasksToBounds:");
}

id objc_msgSend_setMaximumNumberOfItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumNumberOfItems:");
}

id objc_msgSend_setMediaTypesRequiringUserActionForPlayback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaTypesRequiringUserActionForPlayback:");
}

id objc_msgSend_setModalInPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalInPresentation:");
}

id objc_msgSend_setModalPresentationCapturesStatusBarAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalPresentationCapturesStatusBarAppearance:");
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalPresentationStyle:");
}

id objc_msgSend_setModalTransitionStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalTransitionStyle:");
}

id objc_msgSend_setMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMode:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNameCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNameCell:");
}

id objc_msgSend_setNamedWallpaperThumbnails_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNamedWallpaperThumbnails:");
}

id objc_msgSend_setNamedWallpapers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNamedWallpapers:");
}

id objc_msgSend_setNavigationBarHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHidden:");
}

id objc_msgSend_setNavigationBarHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHidden:animated:");
}

id objc_msgSend_setNavigationBarVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarVisibility");
}

id objc_msgSend_setNavigationDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationDelegate:");
}

id objc_msgSend_setNavigationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationState:");
}

id objc_msgSend_setNavigator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigator:");
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsLayout");
}

id objc_msgSend_setNeedsUpdateConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsUpdateConstraints");
}

id objc_msgSend_setNetworkPathMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNetworkPathMonitor:");
}

id objc_msgSend_setNetworkPathMonitorDispatchQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNetworkPathMonitorDispatchQueue:");
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfLines:");
}

id objc_msgSend_setNumberStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberStyle:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setOn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOn:");
}

id objc_msgSend_setOnboardingCompleteFuture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOnboardingCompleteFuture:");
}

id objc_msgSend_setOnboardingDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOnboardingDelegate:");
}

id objc_msgSend_setOpaque_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpaque:");
}

id objc_msgSend_setOrientation_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrientation:animated:");
}

id objc_msgSend_setOriginalCustomImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginalCustomImage:");
}

id objc_msgSend_setPanGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPanGestureRecognizer:");
}

id objc_msgSend_setPinCodeManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPinCodeManager:");
}

id objc_msgSend_setPlaceholder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaceholder:");
}

id objc_msgSend_setPocketViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPocketViewController:");
}

id objc_msgSend_setPreferredDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredDisplayMode:");
}

id objc_msgSend_setPrefersLargeTitles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefersLargeTitles:");
}

id objc_msgSend_setPresentationDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentationDelegate:");
}

id objc_msgSend_setPresentationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentationHandler:");
}

id objc_msgSend_setPresentationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentationState:");
}

id objc_msgSend_setPresentedDataSyncingController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentedDataSyncingController:");
}

id objc_msgSend_setPresentedOnboardingController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentedOnboardingController:");
}

id objc_msgSend_setPresentediCloudWarningController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentediCloudWarningController:");
}

id objc_msgSend_setPresentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentingViewController:");
}

id objc_msgSend_setPresentsWithGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentsWithGesture:");
}

id objc_msgSend_setPrimaryBackgroundStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryBackgroundStyle:");
}

id objc_msgSend_setPrimaryNavigationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryNavigationController:");
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriority:");
}

id objc_msgSend_setProcessPool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessPool:");
}

id objc_msgSend_setProfileData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProfileData:");
}

id objc_msgSend_setRasterizationScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRasterizationScale:");
}

id objc_msgSend_setResetNukeButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResetNukeButton:");
}

id objc_msgSend_setResetSectionConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResetSectionConstraints:");
}

id objc_msgSend_setRightBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItem:");
}

id objc_msgSend_setRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRootViewController:");
}

id objc_msgSend_setRowHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRowHeight:");
}

id objc_msgSend_setRunningState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRunningState:");
}

id objc_msgSend_setSavedButtonBarItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSavedButtonBarItem:");
}

id objc_msgSend_setSecurityUpgradeContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecurityUpgradeContext:");
}

id objc_msgSend_setSelectedHome_userInitiated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedHome:userInitiated:");
}

id objc_msgSend_setSelectedHomeAppTabIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedHomeAppTabIdentifier:");
}

id objc_msgSend_setSelectedHomeFollowsLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedHomeFollowsLocation:");
}

id objc_msgSend_setSelectedViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedViewController:");
}

id objc_msgSend_setSelectedWallpaper_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedWallpaper:animated:");
}

id objc_msgSend_setSelectionStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionStyle:");
}

id objc_msgSend_setSenderURLString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSenderURLString:");
}

id objc_msgSend_setShadowColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowColor:");
}

id objc_msgSend_setShadowOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowOffset:");
}

id objc_msgSend_setShadowOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowOpacity:");
}

id objc_msgSend_setShadowPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowPath:");
}

id objc_msgSend_setShadowRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowRadius:");
}

id objc_msgSend_setShortcutItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShortcutItems:");
}

id objc_msgSend_setShouldRasterize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldRasterize:");
}

id objc_msgSend_setShouldScrollToDefaultPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldScrollToDefaultPosition:");
}

id objc_msgSend_setShowLocationIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowLocationIcon:");
}

id objc_msgSend_setShowSpinner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowSpinner:");
}

id objc_msgSend_setShowsReorderControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsReorderControl:");
}

id objc_msgSend_setSideBarViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSideBarViewController:");
}

id objc_msgSend_setSourceItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceItem:");
}

id objc_msgSend_setSourceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceType:");
}

id objc_msgSend_setSourceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceView:");
}

id objc_msgSend_setSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpacing:");
}

id objc_msgSend_setSpinner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpinner:");
}

id objc_msgSend_setSpinnerLayoutConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpinnerLayoutConstraints:");
}

id objc_msgSend_setSplitViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSplitViewController:");
}

id objc_msgSend_setStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatus:");
}

id objc_msgSend_setStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStyle:");
}

id objc_msgSend_setTabBarController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTabBarController:");
}

id objc_msgSend_setTabItemProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTabItemProvider:");
}

id objc_msgSend_setTableViewReady_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableViewReady:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextAlignment:");
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColor:");
}

id objc_msgSend_setTextView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextView:");
}

id objc_msgSend_setTextViewConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextViewConstraints:");
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeStyle:");
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTintColor:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:forState:");
}

id objc_msgSend_setTitleColor_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleColor:forState:");
}

id objc_msgSend_setTitleText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleText:");
}

id objc_msgSend_setTitleTextAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleTextAttributes:");
}

id objc_msgSend_setTransitioningDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitioningDelegate:");
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:");
}

id objc_msgSend_setUIDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUIDelegate:");
}

id objc_msgSend_setURLHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setURLHandler:");
}

id objc_msgSend_setUrlString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrlString:");
}

id objc_msgSend_setUserActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserActivity:");
}

id objc_msgSend_setUserAgent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserAgent:");
}

id objc_msgSend_setUserHasValidHMSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserHasValidHMSettings:");
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInteractionEnabled:");
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setView:");
}

id objc_msgSend_setViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewController:");
}

id objc_msgSend_setViewController_forColumn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewController:forColumn:");
}

id objc_msgSend_setViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewControllers:");
}

id objc_msgSend_setViewControllers_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewControllers:animated:");
}

id objc_msgSend_setViewVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewVisible:");
}

id objc_msgSend_setWallpaper_image_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWallpaper:image:");
}

id objc_msgSend_setWallpaperPickerViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWallpaperPickerViewController:");
}

id objc_msgSend_setWebView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWebView:");
}

id objc_msgSend_setWebViewActivityIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWebViewActivityIndicator:");
}

id objc_msgSend_setWebViewActivityIndicatorDelayTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWebViewActivityIndicatorDelayTimer:");
}

id objc_msgSend_setWebViewCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWebViewCache:");
}

id objc_msgSend_setWifiExecutionEnvironmentObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWifiExecutionEnvironmentObserver:");
}

id objc_msgSend_setWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWindow:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_set_debug_viewHasEverAppeared_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_debug_viewHasEverAppeared:");
}

id objc_msgSend_settings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settings");
}

id objc_msgSend_setupGridForecastSnapshotsFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupGridForecastSnapshotsFor:");
}

id objc_msgSend_setupWebViewAndActivityIndicator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupWebViewAndActivityIndicator");
}

id objc_msgSend_shadowView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shadowView");
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedApplication");
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedConnection");
}

id objc_msgSend_sharedDispatcher(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedDispatcher");
}

id objc_msgSend_sharedHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedHandler");
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedInstance");
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedManager");
}

id objc_msgSend_shouldAllowViewTranslation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAllowViewTranslation");
}

id objc_msgSend_shouldScrollToDefaultPosition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldScrollToDefaultPosition");
}

id objc_msgSend_shouldShowFullWallpaperSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowFullWallpaperSection");
}

id objc_msgSend_showAboutResidentDeviceView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAboutResidentDeviceView");
}

id objc_msgSend_showAccessory_secondaryDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAccessory:secondaryDestination:");
}

id objc_msgSend_showAccessoryTypeGroup_forHome_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAccessoryTypeGroup:forHome:animated:");
}

id objc_msgSend_showAddAutomationFlow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAddAutomationFlow");
}

id objc_msgSend_showAddLocationButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAddLocationButton");
}

id objc_msgSend_showAddSceneFlowOnCurrentTab(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAddSceneFlowOnCurrentTab");
}

id objc_msgSend_showAddTriggerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAddTriggerView");
}

id objc_msgSend_showAutomationTab(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAutomationTab");
}

id objc_msgSend_showBridgeSettingsForAccessory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showBridgeSettingsForAccessory:");
}

id objc_msgSend_showCameraProfile_clipID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showCameraProfile:clipID:");
}

id objc_msgSend_showCameraWithName_homeName_startDate_endDate_roomName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showCameraWithName:homeName:startDate:endDate:roomName:");
}

id objc_msgSend_showCardForHomeKitIdentifier_destination_secondaryDestination_inHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showCardForHomeKitIdentifier:destination:secondaryDestination:inHome:");
}

id objc_msgSend_showDefaultAccountForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showDefaultAccountForHome:");
}

id objc_msgSend_showDetailViewController_sender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showDetailViewController:sender:");
}

id objc_msgSend_showDevicePickerWithInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showDevicePickerWithInfo:completion:");
}

id objc_msgSend_showDiscoverTab(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showDiscoverTab");
}

id objc_msgSend_showDropInUI_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showDropInUI:home:");
}

id objc_msgSend_showFaceRecognitionSettingsForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showFaceRecognitionSettingsForHome:");
}

id objc_msgSend_showFaceRecognitionSettingsForPerson_personManager_inHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showFaceRecognitionSettingsForPerson:personManager:inHome:");
}

id objc_msgSend_showFaceRecognitionSettingsForUnknownPersonEvent_inHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showFaceRecognitionSettingsForUnknownPersonEvent:inHome:");
}

id objc_msgSend_showFeedbackFlowForCameraClipID_cameraProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showFeedbackFlowForCameraClipID:cameraProfile:");
}

id objc_msgSend_showHH2OnboardingFlowForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHH2OnboardingFlowForHome:");
}

id objc_msgSend_showHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHome:");
}

id objc_msgSend_showHome_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHome:animated:");
}

id objc_msgSend_showHomeDashboardCellForActionSet_executeActionSetFuture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHomeDashboardCellForActionSet:executeActionSetFuture:");
}

id objc_msgSend_showHomeForFilter_withTimeRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHomeForFilter:withTimeRange:");
}

id objc_msgSend_showHomeForName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHomeForName:");
}

id objc_msgSend_showHomeInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHomeInvitation:");
}

id objc_msgSend_showHomePodProfileInstallationFlowWithSender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHomePodProfileInstallationFlowWithSender:");
}

id objc_msgSend_showHomeSettingsForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHomeSettingsForHome:");
}

id objc_msgSend_showHomeTab(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHomeTab");
}

id objc_msgSend_showHomeWithFuture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHomeWithFuture:");
}

id objc_msgSend_showLocksFirmwareSetupForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showLocksFirmwareSetupForHome:");
}

id objc_msgSend_showLocksOnboardingForHome_onboardingType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showLocksOnboardingForHome:onboardingType:");
}

id objc_msgSend_showMediaSystem_secondaryDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showMediaSystem:secondaryDestination:");
}

id objc_msgSend_showNetworkSettingsForAccessory_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showNetworkSettingsForAccessory:home:");
}

id objc_msgSend_showNetworkSettingsForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showNetworkSettingsForHome:");
}

id objc_msgSend_showNetworkSettingsForNetworkConfigurationProfile_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showNetworkSettingsForNetworkConfigurationProfile:home:");
}

id objc_msgSend_showNotificationSettingsForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showNotificationSettingsForHome:");
}

id objc_msgSend_showNotificationSettingsForHomeKitObject_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showNotificationSettingsForHomeKitObject:animated:");
}

id objc_msgSend_showNotificationSettingsForHomeKitObject_inHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showNotificationSettingsForHomeKitObject:inHome:");
}

id objc_msgSend_showOnboardingIfNeededForHomeInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showOnboardingIfNeededForHomeInvitation:");
}

id objc_msgSend_showProfileInstallationAlertViewWithTitle_message_shouldGoBackToSenderURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showProfileInstallationAlertViewWithTitle:message:shouldGoBackToSenderURL:");
}

id objc_msgSend_showProfileInstallationFlowFromViewController_withSenderURLString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showProfileInstallationFlowFromViewController:withSenderURLString:");
}

id objc_msgSend_showRecognizeMyVoiceSettingsForHome_showEnablementSheet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showRecognizeMyVoiceSettingsForHome:showEnablementSheet:");
}

id objc_msgSend_showRoom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showRoom:");
}

id objc_msgSend_showRoom_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showRoom:animated:");
}

id objc_msgSend_showRoomContainedCamera_startDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showRoomContainedCamera:startDate:endDate:");
}

id objc_msgSend_showRoomForFilter_withTimeRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showRoomForFilter:withTimeRange:");
}

id objc_msgSend_showRoomSettingsForRoom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showRoomSettingsForRoom:");
}

id objc_msgSend_showRoomWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showRoomWithName:");
}

id objc_msgSend_showService_secondaryDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showService:secondaryDestination:");
}

id objc_msgSend_showServiceForFilter_withTimeRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showServiceForFilter:withTimeRange:");
}

id objc_msgSend_showServiceWithName_serviceType_homeName_roomName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showServiceWithName:serviceType:homeName:roomName:");
}

id objc_msgSend_showSettingsForCameraProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSettingsForCameraProfile:");
}

id objc_msgSend_showSiriPersonalRequestsSettingsForHome_showEnablementSheet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSiriPersonalRequestsSettingsForHome:showEnablementSheet:");
}

id objc_msgSend_showSoftwareUpdateForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSoftwareUpdateForHome:");
}

id objc_msgSend_showUserDetails_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showUserDetails:");
}

id objc_msgSend_showUserLockSettingsForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showUserLockSettingsForHome:");
}

id objc_msgSend_sideBarViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sideBarViewController");
}

id objc_msgSend_sizeForChildContentContainer_withParentContainerSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeForChildContentContainer:withParentContainerSize:");
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeToFit");
}

id objc_msgSend_snapshot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshot");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_sortedHomeKitItemComparator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedHomeKitItemComparator");
}

id objc_msgSend_sourceItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourceItem");
}

id objc_msgSend_spinner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spinner");
}

id objc_msgSend_spinnerLayoutConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spinnerLayoutConstraints");
}

id objc_msgSend_splitViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splitViewController");
}

id objc_msgSend_startAnimating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAnimating");
}

id objc_msgSend_startCDPRepair(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startCDPRepair");
}

id objc_msgSend_startDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startDate");
}

id objc_msgSend_startDateComponents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startDateComponents");
}

id objc_msgSend_startOfDayForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startOfDayForDate:");
}

id objc_msgSend_startedTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startedTest:");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "state");
}

id objc_msgSend_stateController_dismissViewController_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateController:dismissViewController:forState:");
}

id objc_msgSend_stateController_presentViewController_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateController:presentViewController:forState:");
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "status");
}

id objc_msgSend_statusBarFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarFrame");
}

id objc_msgSend_statusBarManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarManager");
}

id objc_msgSend_statusCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusCode");
}

id objc_msgSend_stopAnimating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAnimating");
}

id objc_msgSend_stringForOnboardingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForOnboardingState:");
}

id objc_msgSend_stringForOnboardingStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForOnboardingStates:");
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromDate:");
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCString:encoding:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_stringWithValidatedFormat_validFormatSpecifiers_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithValidatedFormat:validFormatSpecifiers:error:");
}

id objc_msgSend_strongToStrongObjectsMapTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strongToStrongObjectsMapTable");
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringFromIndex:");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subviews");
}

id objc_msgSend_supportsAccessorySetup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsAccessorySetup");
}

id objc_msgSend_switchToSelectedHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "switchToSelectedHome:");
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBackgroundColor");
}

id objc_msgSend_systemBlackColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBlackColor");
}

id objc_msgSend_systemGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemGrayColor");
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:");
}

id objc_msgSend_systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:withConfiguration:");
}

id objc_msgSend_systemLightGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemLightGrayColor");
}

id objc_msgSend_systemName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemName");
}

id objc_msgSend_systemOrangeColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemOrangeColor");
}

id objc_msgSend_systemVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemVersion");
}

id objc_msgSend_tabBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabBar");
}

id objc_msgSend_tabBarItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabBarItem");
}

id objc_msgSend_tabClassToNavigationControllerMap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabClassToNavigationControllerMap");
}

id objc_msgSend_tabItemProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabItemProvider");
}

id objc_msgSend_tableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView");
}

id objc_msgSend_tableViewReady(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableViewReady");
}

id objc_msgSend_terminateWithSuccess(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "terminateWithSuccess");
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "text");
}

id objc_msgSend_textField(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textField");
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textLabel");
}

id objc_msgSend_textView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textView");
}

id objc_msgSend_textViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textViewConstraints");
}

id objc_msgSend_time(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "time");
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceNow");
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tintColor");
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "title");
}

id objc_msgSend_titleDescriptionView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleDescriptionView");
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleLabel");
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topAnchor");
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topViewController");
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trailingAnchor");
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionCoordinator");
}

id objc_msgSend_translationInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "translationInView:");
}

id objc_msgSend_triggersPendingExecutionConfirmation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggersPendingExecutionConfirmation");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "type");
}

id objc_msgSend_uniqueIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uniqueIdentifier");
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntegerValue");
}

id objc_msgSend_updateCell_forIndexPath_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCell:forIndexPath:animated:");
}

id objc_msgSend_updateHomeSensingState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateHomeSensingState");
}

id objc_msgSend_updateLabels(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLabels");
}

id objc_msgSend_updateLocationSensingAvailability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLocationSensingAvailability");
}

id objc_msgSend_updateWallpaper_image_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWallpaper:image:");
}

id objc_msgSend_updateWebViewRefreshIntervalFromServerResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWebViewRefreshIntervalFromServerResponse:");
}

id objc_msgSend_updateWithIconDescriptor_displayStyle_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithIconDescriptor:displayStyle:animated:");
}

id objc_msgSend_updateWithSideBarViewController_sideBarItemManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithSideBarViewController:sideBarItemManager:");
}

id objc_msgSend_updateiCloudSwitchState_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateiCloudSwitchState:completionHandler:");
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uppercaseString");
}

id objc_msgSend_urlString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlString");
}

id objc_msgSend_useWLANInsteadOfWiFi(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useWLANInsteadOfWiFi");
}

id objc_msgSend_useWallpaperPickerCell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useWallpaperPickerCell");
}

id objc_msgSend_userAgent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userAgent");
}

id objc_msgSend_userContentController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userContentController");
}

id objc_msgSend_userDidConfirmExecution_ofTriggerWithIdentifier_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userDidConfirmExecution:ofTriggerWithIdentifier:completionHandler:");
}

id objc_msgSend_userFutureWithUniqueIdentifierStr_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userFutureWithUniqueIdentifierStr:");
}

id objc_msgSend_userHasValidHMSettings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userHasValidHMSettings");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInfo");
}

id objc_msgSend_userInfoForLockAccessFirmwareUpgradeSetupInHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInfoForLockAccessFirmwareUpgradeSetupInHome:");
}

id objc_msgSend_userInfoForLockAccessPinCodeSetupInHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInfoForLockAccessPinCodeSetupInHome:");
}

id objc_msgSend_userInfoForLockAccessWalletKeySetupInHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInfoForLockAccessWalletKeySetupInHome:");
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceIdiom");
}

id objc_msgSend_userSettingsForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userSettingsForHome:");
}

id objc_msgSend_uuid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uuid");
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "value");
}

id objc_msgSend_valueForHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForHTTPHeaderField:");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueForParameter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForParameter:");
}

id objc_msgSend_valueWithWebView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithWebView:");
}

id objc_msgSend_vibrancyEffectMappingColorsToColors_blackPointOut_whitePointIn_whitePointOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vibrancyEffectMappingColorsToColors:blackPointOut:whitePointIn:whitePointOut:");
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "view");
}

id objc_msgSend_viewControllerForColumn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerForColumn:");
}

id objc_msgSend_viewControllerForPresentingLocationEditorForHome_delegate_customizationBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerForPresentingLocationEditorForHome:delegate:customizationBlock:");
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllers");
}

id objc_msgSend_viewMarginInsetForViewSizeSubclass_withViewWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewMarginInsetForViewSizeSubclass:withViewWidth:");
}

id objc_msgSend_viewVisibleFutures(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewVisibleFutures");
}

id objc_msgSend_visibleViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleViewController");
}

id objc_msgSend_wallpaper(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallpaper");
}

id objc_msgSend_wallpaperBuilder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallpaperBuilder");
}

id objc_msgSend_wallpaperEditCollectionFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallpaperEditCollectionFuture");
}

id objc_msgSend_wallpaperPickerViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallpaperPickerViewController");
}

id objc_msgSend_wallpaperView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallpaperView");
}

id objc_msgSend_warmUp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "warmUp");
}

id objc_msgSend_warmUpStaticPreferences(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "warmUpStaticPreferences");
}

id objc_msgSend_warmup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "warmup");
}

id objc_msgSend_waterAccessoryTypeGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waterAccessoryTypeGroup");
}

id objc_msgSend_webView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webView");
}

id objc_msgSend_webViewActivityIndicator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webViewActivityIndicator");
}

id objc_msgSend_webViewActivityIndicatorDelayTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webViewActivityIndicatorDelayTimer");
}

id objc_msgSend_webViewCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webViewCache");
}

id objc_msgSend_webViewForURLString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webViewForURLString:");
}

id objc_msgSend_webViewForURLString_dependentWebViewURLString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webViewForURLString:dependentWebViewURLString:");
}

id objc_msgSend_webViewNavigationStateUpdated_navigationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webViewNavigationStateUpdated:navigationState:");
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "widthAnchor");
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "window");
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windowScene");
}

id objc_msgSend_windows(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windows");
}
