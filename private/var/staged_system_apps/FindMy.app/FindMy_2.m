uint64_t sub_10012CE4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for ClientOrigin(0);
  v0[2] = v1;
  v2 = *(_QWORD *)(v1 - 8);
  v0[3] = v2;
  v0[4] = swift_task_alloc((*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for RequestOrigin(0);
  v0[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10012CEC8, 0, 0);
}

uint64_t sub_10012CEC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[4];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[3] + 104))(v1, enum case for ClientOrigin.findMyApp(_:), v0[2]);
  RequestOrigin.init(_:)(v1);
  v2 = type metadata accessor for Session(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = (_QWORD *)swift_task_alloc(async function pointer to Session.init(_:)[1]);
  v0[6] = v3;
  *v3 = v0;
  v3[1] = sub_10012CF5C;
  return Session.init(_:)(v0[5]);
}

uint64_t sub_10012CF5C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v3 = *(_QWORD *)(*v1 + 48);
  v6 = *v1;
  *(_QWORD *)(v6 + 56) = a1;
  swift_task_dealloc(v3);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to Session.stopConfigRangingSession()[1]);
  *(_QWORD *)(v6 + 64) = v4;
  *v4 = v6;
  v4[1] = sub_10012CFC8;
  return Session.stopConfigRangingSession()();
}

uint64_t sub_10012CFC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10012D124;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 56));
    v4 = sub_10012D034;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10012D034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100056D88(v1, (uint64_t)qword_1005F5748);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMFindingExperiencePresenter: stop token session config ranging session", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);

  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10012D124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  BOOL v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;

  swift_release(*(_QWORD *)(v0 + 56));
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100056D88(v1, (uint64_t)qword_1005F5748);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 72);
  if (v5)
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMFindingExperiencePresenter: failed to stop token session config ranging session", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  swift_errorRelease(v6);
  v9 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 40);

  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10012D228(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock;
  uint64_t v43;
  uint64_t v44;

  v3 = v2;
  v40 = a2;
  v5 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  __chkstk_darwin(v5);
  v39 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMFConfigValue(0);
  v36 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v35 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FindingMode(0);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
  v11 = __chkstk_darwin(v9);
  v12 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v41 = (uint64_t)v32 - v14;
  __chkstk_darwin(v13);
  v16 = (char *)v32 - v15;
  if (qword_1005D2068 != -1)
    swift_once(&qword_1005D2068, sub_1003CB878);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100056D88(v17, (uint64_t)qword_1005F5FF8);
  v19 = sub_10004FC74(a1, (uint64_t)v16, type metadata accessor for FindingMode);
  v37 = v18;
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v34 = v3;
    v22 = swift_slowAlloc(12, -1);
    v38 = v9;
    v32[1] = v7;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc(32, -1);
    v33 = a1;
    v25 = v24;
    aBlock = v24;
    v32[2] = v10;
    *(_DWORD *)v23 = 136315138;
    v26 = v41;
    sub_10004FC74((uint64_t)v16, v41, type metadata accessor for FindingMode);
    v27 = String.init<A>(describing:)(v26, v38);
    v29 = v28;
    v43 = sub_100056DA0(v27, v28, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);
    swift_bridgeObjectRelease(v29);
    sub_10004FCB8((uint64_t)v16, type metadata accessor for FindingMode);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "ðŸ§­ FMFindingExperiencePresenter: Presenting finding experience mode: %s", v23, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    v30 = v25;
    a1 = v33;
    swift_slowDealloc(v30, -1, -1);
    v9 = v38;
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {
    sub_10004FCB8((uint64_t)v16, type metadata accessor for FindingMode);
  }

  sub_10004FC74(a1, (uint64_t)v12, type metadata accessor for FindingMode);
  v31 = (char *)&loc_10012D518 + *((int *)qword_10012D968 + swift_getEnumCaseMultiPayload(v12, v9));
  __asm { BR              X10 }
}

void sub_10012D978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    dispatch thunk of FMFindingSession.sessionTimedOut()();

  }
}

void sub_10012D9CC(uint64_t a1)
{
  sub_10012D9F4(a1, "FMFindingExperiencePresenter: Received updated local heading", (void (*)(uint64_t))&dispatch thunk of FMPrecisionConnectionManager.updateHeadingForLocalDevice(heading:));
}

void sub_10012D9E0(uint64_t a1)
{
  sub_10012D9F4(a1, "FMFindingExperiencePresenter: Received updated local device location", (void (*)(uint64_t))&dispatch thunk of FMPrecisionConnectionManager.updateLocationForLocalDevice(location:));
}

void sub_10012D9F4(uint64_t a1, const char *a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  _BYTE v22[24];

  v6 = v3;
  v8 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  __chkstk_darwin(v8);
  v10 = (void **)&v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1005D2068 != -1)
    swift_once(&qword_1005D2068, sub_1003CB878);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100056D88(v11, (uint64_t)qword_1005F5FF8);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, a2, v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  v16 = v6 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode;
  swift_beginAccess(v6 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode, v22, 0, 0);
  sub_100007464(v16, (uint64_t)v10, (uint64_t *)&unk_1005D72C0);
  v17 = type metadata accessor for FindingMode(0);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v10, 1, v17) == 1)
  {
    sub_1000051EC((uint64_t)v10, (uint64_t *)&unk_1005D72C0);
  }
  else if (swift_getEnumCaseMultiPayload(v10, v17) == 2)
  {
    v18 = *v10;
    v19 = type metadata accessor for FMPrecisionConnectionManager(0);
    if (swift_dynamicCastClass(v18, v19))
    {
      v20 = v18;
      a3(a1);

    }
    else
    {

    }
  }
  else
  {
    sub_10004FCB8((uint64_t)v10, type metadata accessor for FindingMode);
  }
}

double sub_10012DBFC(char a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;

  if (qword_1005D2068 != -1)
    swift_once(&qword_1005D2068, sub_1003CB878);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100056D88(v9, (uint64_t)qword_1005F5FF8);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    *(_DWORD *)v13 = 136315138;
    v19 = v14;
    if ((a1 & 1) != 0)
      v15 = 0x64656C6261736964;
    else
      v15 = 0xD000000000000010;
    if ((a1 & 1) != 0)
      v16 = 0xE800000000000000;
    else
      v16 = 0x80000001004ADF50;
    v18 = sub_100056DA0(v15, v16, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "ðŸ§­ FMFindingExperiencePresenter: %s prox card", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }

  return sub_10012E3D4(a3, a4, a5);
}

void sub_10012DDE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[3];

  v2 = v1;
  v4 = type metadata accessor for FMFindingProductType(0);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  __chkstk_darwin(v4);
  v5 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  __chkstk_darwin(v5);
  v39 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FindingMode(0);
  v38 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v32 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v32 - v14;
  if (qword_1005D2068 != -1)
    swift_once(&qword_1005D2068, sub_1003CB878);
  v16 = type metadata accessor for Logger(0);
  sub_100056D88(v16, (uint64_t)qword_1005F5FF8);
  v17 = sub_10004FC74(a1, (uint64_t)v15, type metadata accessor for FindingMode);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v34 = a1;
    v20 = swift_slowAlloc(12, -1);
    v37 = v2;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc(32, -1);
    v33 = v10;
    v23 = v22;
    v41[0] = v22;
    *(_DWORD *)v21 = 136315138;
    sub_10004FC74((uint64_t)v15, (uint64_t)v13, type metadata accessor for FindingMode);
    v24 = String.init<A>(describing:)(v13, v7);
    v26 = v25;
    v40 = sub_100056DA0(v24, v25, v41);
    a1 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, v41);
    swift_bridgeObjectRelease(v26);
    sub_10004FCB8((uint64_t)v15, type metadata accessor for FindingMode);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "ðŸ§­ FMFindingExperiencePresenter: Started discovering for finding experience mode: %s", v21, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    v27 = v23;
    v10 = v33;
    swift_slowDealloc(v27, -1, -1);
    v28 = v21;
    v2 = v37;
    swift_slowDealloc(v28, -1, -1);
  }
  else
  {
    sub_10004FCB8((uint64_t)v15, type metadata accessor for FindingMode);
  }

  v29 = v39;
  sub_10004FC74(a1, v39, type metadata accessor for FindingMode);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v29, 0, 1, v7);
  v30 = v2 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode;
  swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode, v41, 33, 0);
  sub_100099CDC(v29, v30, (uint64_t *)&unk_1005D72C0);
  swift_endAccess(v41);
  sub_10004FC74(a1, (uint64_t)v10, type metadata accessor for FindingMode);
  v31 = (char *)&loc_10012E128 + 4 * byte_1004848E4[swift_getEnumCaseMultiPayload(v10, v7)];
  __asm { BR              X10 }
}

id sub_10012E2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id result;

  v1 = v0;
  if (qword_1005D2068 != -1)
    swift_once(&qword_1005D2068, sub_1003CB878);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5FF8);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "ðŸ§­ FMFindingExperiencePresenter: Dismissing Finding View Controller", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  result = *(id *)(v1 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedViewController);
  if (result)
    return objc_msgSend(result, "dismissViewControllerAnimated:completion:", 1, 0);
  return result;
}

double sub_10012E3D4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  double result;
  uint64_t v23;
  uint64_t v24;

  v24 = a3;
  v5 = type metadata accessor for FindingMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = swift_allocObject(&unk_100547D30, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16);
  v9 = swift_allocObject(&unk_100547D58, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  v10 = swift_allocObject(&unk_100547D80, 32, 7);
  *(_QWORD *)(v10 + 16) = v8;
  *(_QWORD *)(v10 + 24) = v9;
  dispatch thunk of FMFindingViewController.willAppearHandler.setter(sub_100137F90, v10);
  v11 = swift_allocObject(&unk_100547D30, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16);
  v12 = swift_allocObject(&unk_100547D58, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  v13 = swift_allocObject(&unk_100547DA8, 32, 7);
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = v12;
  dispatch thunk of FMFindingViewController.willDisappearHandler.setter(sub_100137F9C, v13);
  v14 = swift_allocObject(&unk_100547D30, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  dispatch thunk of FMFindingViewController.dismissedHandler.setter(sub_100137FA4, v14);
  v15 = swift_allocObject(&unk_100547D30, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  dispatch thunk of FMFindingViewController.playSoundHandler.setter(sub_100137FAC, v15);
  v16 = swift_allocObject(&unk_100547D30, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  sub_10004FC74(v24, (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FindingMode);
  v17 = *(unsigned __int8 *)(v6 + 80);
  v18 = (v17 + 40) & ~v17;
  v19 = (_QWORD *)swift_allocObject(&unk_100547DD0, v18 + v7, v17 | 7);
  v19[2] = v16;
  v19[3] = a2;
  v19[4] = a1;
  sub_100137DD4((uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v19 + v18);
  swift_retain(v16);
  v20 = a2;
  v21 = a1;
  sub_10012FAB0(v20, (void (*)(uint64_t))sub_10013809C, (uint64_t)v19);
  swift_release(v16);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

void sub_10012E640(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  char *v16;
  uint64_t v17;
  char v18[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = a2 + 16;
    swift_beginAccess(v6, &v17, 0, 0);
    v7 = swift_unknownObjectWeakLoadStrong(v6);
    if (v7)
    {
      v8 = v7;
      v9 = *(_BYTE **)(*(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_mediator] + 16);
      v9[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areServerAlertsPostponed] = 1;
      v10 = v9;
      sub_100377310();

      v11 = &v5[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_delegate];
      v12 = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_delegate]);
      if (v12)
      {
        v13 = v12;
        v14 = *((_QWORD *)v11 + 1);
        ObjectType = swift_getObjectType(v12);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 8))(v5, v8, ObjectType, v14);
        swift_unknownObjectRelease(v13);
      }
      v16 = *(char **)&v5[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedViewController];
      *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedViewController] = v8;

      v5 = v16;
    }

  }
}

void sub_10012E750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  void *v53;
  char *v54;
  _BYTE v55[24];
  char v56[24];
  char v57[24];
  char v58[24];
  char v59[24];

  v4 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMSelectedSection(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v52 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v52 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v52 - v17;
  a1 += 16;
  swift_beginAccess(a1, v59, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v20 = (char *)Strong;
    v21 = a2 + 16;
    swift_beginAccess(v21, v58, 0, 0);
    v22 = swift_unknownObjectWeakLoadStrong(v21);
    if (v22)
    {
      v23 = v22;
      if (qword_1005D2068 != -1)
        swift_once(&qword_1005D2068, sub_1003CB878);
      v53 = (void *)v23;
      v54 = v6;
      v24 = type metadata accessor for Logger(0);
      v52 = sub_100056D88(v24, (uint64_t)qword_1005F5FF8);
      v25 = Logger.logObject.getter(v52);
      v26 = static os_log_type_t.default.getter(v25);
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "ðŸ§­ FMFindingExperiencePresenter: Finding View Controller will disappear", v27, 2u);
        swift_slowDealloc(v27, -1, -1);
      }

      v28 = OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_expiryTimer;
      objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_expiryTimer], "invalidate");
      v29 = *(void **)&v20[v28];
      *(_QWORD *)&v20[v28] = 0;

      v30 = OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_mediator;
      v31 = *(_BYTE **)(*(_QWORD *)&v20[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_mediator] + 16);
      v31[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areServerAlertsPostponed] = 0;
      v32 = v31;
      sub_100377310();

      v33 = *(_QWORD *)(*(_QWORD *)&v20[v30] + 56);
      v34 = v33 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
      swift_beginAccess(v33 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v57, 0, 0);
      sub_10004FC74(v34, (uint64_t)v18, type metadata accessor for FMSelectedSection);
      v35 = v33 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
      swift_beginAccess(v33 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection, v56, 0, 0);
      sub_10004FC74(v35, (uint64_t)v16, type metadata accessor for FMSelectedSection);
      swift_storeEnumTagMultiPayload(v10, v7, 18);
      swift_retain(v33);
      sub_100024F80((uint64_t)v18, (uint64_t)v10);
      LOBYTE(v35) = v36;
      sub_10004FCB8((uint64_t)v10, type metadata accessor for FMSelectedSection);
      if ((v35 & 1) != 0)
        v37 = (uint64_t)v16;
      else
        v37 = (uint64_t)v18;
      sub_10004FC74(v37, (uint64_t)v13, type metadata accessor for FMSelectedSection);
      sub_10004FC74(v34, (uint64_t)v10, type metadata accessor for FMSelectedSection);
      swift_beginAccess(v34, v55, 33, 0);
      sub_100009DF8((uint64_t)v13, v34);
      swift_endAccess(v55);
      sub_10004C8A4((uint64_t)v10);
      sub_10004FCB8((uint64_t)v13, type metadata accessor for FMSelectedSection);
      sub_10004FCB8((uint64_t)v10, type metadata accessor for FMSelectedSection);
      swift_release(v33);
      v38 = &v20[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_delegate];
      v39 = swift_unknownObjectWeakLoadStrong(&v20[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_delegate]);
      v40 = v53;
      if (v39)
      {
        v41 = v39;
        v42 = *((_QWORD *)v38 + 1);
        ObjectType = swift_getObjectType(v39);
        (*(void (**)(char *, void *, uint64_t, uint64_t))(v42 + 16))(v20, v40, ObjectType, v42);
        swift_unknownObjectRelease(v41);
      }
      objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_sharingClient], "invalidate");
      v44 = *(void **)&v20[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedViewController];
      *(_QWORD *)&v20[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedViewController] = 0;

      v45 = type metadata accessor for FindingMode(0);
      v46 = (uint64_t)v54;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v54, 1, 1, v45);
      v47 = (uint64_t)&v20[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode];
      swift_beginAccess(&v20[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode], v55, 33, 0);
      sub_100099CDC(v46, v47, (uint64_t *)&unk_1005D72C0);
      v48 = swift_endAccess(v55);
      v49 = Logger.logObject.getter(v48);
      v50 = static os_log_type_t.default.getter(v49);
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v51 = 0;
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "ðŸ§­ FMFindingExperiencePresenter: re-enabled prox card", v51, 2u);
        swift_slowDealloc(v51, -1, -1);
      }

      sub_10004FCB8((uint64_t)v16, type metadata accessor for FMSelectedSection);
      sub_10004FCB8((uint64_t)v18, type metadata accessor for FMSelectedSection);
    }
    else
    {

    }
  }
}

void sub_10012EC4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v2 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  __chkstk_darwin(v2);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v6 = (char *)Strong;
    if (qword_1005D2068 != -1)
      swift_once(&qword_1005D2068, sub_1003CB878);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100056D88(v7, (uint64_t)qword_1005F5FF8);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "ðŸ§­ FMFindingExperiencePresenter: Finding View Controller was dismissed", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    v12 = *(void **)&v6[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedViewController];
    *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedViewController] = 0;

    v13 = type metadata accessor for FindingMode(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
    v14 = (uint64_t)&v6[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode];
    swift_beginAccess(&v6[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode], v15, 33, 0);
    sub_100099CDC((uint64_t)v4, v14, (uint64_t *)&unk_1005D72C0);
    swift_endAccess(v15);

  }
}

void sub_10012EE04(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  char *v22;
  _BYTE v23[24];

  v9 = a5 + 16;
  swift_beginAccess(a5 + 16, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = sub_10012A9B4();
    if (v13)
    {
      v14 = v12;
      v15 = v13;
      v16 = a2 & 1;
      if (qword_1005D2068 != -1)
        swift_once(&qword_1005D2068, sub_1003CB878);
      v17 = type metadata accessor for Logger(0);
      v18 = sub_100056D88(v17, (uint64_t)qword_1005F5FF8);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter(v19);
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "ðŸ§­ FMFindingExperiencePresenter: Finding View Controller requested playSound action", v21, 2u);
        swift_slowDealloc(v21, -1, -1);
      }

      sub_1000A190C(a3, a4);
      v22 = v11;
      swift_bridgeObjectRetain(v15);
      sub_100134658(v14, v15, v22, a3, a4, (uint64_t)v22, a1, v16, v14, v15);

      swift_bridgeObjectRelease(v15);
      sub_1000327F0(a3, a4);

      swift_bridgeObjectRelease(v15);
    }
    else
    {

    }
  }
}

uint64_t sub_10012EFB0(uint64_t result, uint64_t (*a2)(_QWORD), uint64_t a3, char *a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t ObjectType;
  unsigned int v21;

  if ((result & 1) != 0)
  {
    v15 = &a4[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_delegate];
    result = swift_unknownObjectWeakLoadStrong(&a4[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_delegate]);
    if (result)
    {
      v16 = result;
      v21 = a6 & 1;
      v17 = *((_QWORD *)v15 + 1);
      ObjectType = swift_getObjectType(result);
      v18 = (_QWORD *)swift_allocObject(&unk_100547F60, 40, 7);
      v18[2] = a2;
      v18[3] = a3;
      v18[4] = a4;
      v19 = *(void (**)(char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v17 + 24);
      sub_1000A190C((uint64_t)a2, a3);
      v19(a4, a5, v21, a7, a8, sub_1001380FC, v18, ObjectType, v17);
      swift_release(v18);
      return swift_unknownObjectRelease(v16);
    }
  }
  else if (a2)
  {
    return a2(0);
  }
  return result;
}

void sub_10012F0DC(char a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t Strong;
  char *v20;
  __n128 v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  Swift::String v39;
  Swift::String_optional v40;
  Swift::String v41;
  Swift::String v42;
  id v43;
  char *v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  Swift::String v50;
  Swift::String_optional v51;
  Swift::String v52;
  Swift::String v53;
  id v54;
  char *v55;
  id v56;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  id v68;
  char *v69;
  uint64_t v70;
  id v71;
  id v72;
  _BYTE v73[24];
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;
  char v77[32];
  Swift::String v78;
  Swift::String v79;

  v71 = a4;
  v72 = a3;
  v8 = type metadata accessor for FMSelectedSection(0);
  v9 = __chkstk_darwin(v8);
  v70 = (uint64_t)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v69 = (char *)&v65 - v11;
  v12 = type metadata accessor for FMFindingProductType(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FindingMode(0);
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  a2 += 16;
  swift_beginAccess(a2, v77, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v20 = (char *)Strong;
    if ((a1 & 1) != 0)
    {
      sub_10004FC74(a5, (uint64_t)v18, type metadata accessor for FindingMode);
      if (swift_getEnumCaseMultiPayload(v18, v16) == 3)
      {
        v22 = *v18;
        v23 = (void *)v18[1];
        v67 = v22;
        v68 = v23;
        v24 = FMConnectionManager.findables.getter(v21);
        v25 = *(_QWORD *)(v24 + 16);
        if (v25)
        {
          v66 = v20;
          v26 = v24 + 32;
          v27 = enum case for FMFindingProductType.person(_:);
          v65 = v24;
          swift_bridgeObjectRetain(v24);
          while (1)
          {
            sub_100056284(v26, (uint64_t)v74);
            v28 = v75;
            v29 = v76;
            sub_100029550(v74, v75);
            dispatch thunk of FMFindable.findingProductType.getter(v28, v29);
            if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v15, v12) == v27)
              break;
            (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
            sub_100029574(v74);
            v26 += 40;
            if (!--v25)
            {
              swift_bridgeObjectRelease_n(v65, 2);
              v20 = v66;
              goto LABEL_16;
            }
          }
          (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
          v57 = *((_QWORD *)v15 + 2);

          swift_bridgeObjectRelease(v57);
          sub_100029574(v74);
          swift_bridgeObjectRelease_n(v65, 2);
          v58 = v71;
          v59 = v66;
          objc_msgSend(v71, "setTransitioningDelegate:", v66);
          objc_msgSend(v58, "setModalPresentationStyle:", 3);
          v60 = *(_QWORD *)(*(_QWORD *)&v59[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_mediator] + 56);
          v61 = (uint64_t)v69;
          swift_storeEnumTagMultiPayload(v69, v8, 18);
          v62 = v60 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
          swift_beginAccess(v60 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v74, 0, 0);
          v63 = v70;
          sub_10004FC74(v62, v70, type metadata accessor for FMSelectedSection);
          swift_beginAccess(v62, v73, 33, 0);
          swift_retain(v60);
          sub_100009DF8(v61, v62);
          swift_endAccess(v73);
          sub_10004C8A4(v63);
          sub_10004FCB8(v61, type metadata accessor for FMSelectedSection);
          sub_10004FCB8(v63, type metadata accessor for FMSelectedSection);
          *(_QWORD *)&v64 = swift_release(v60).n128_u64[0];
          objc_msgSend(v72, "presentViewController:animated:completion:", v58, 1, 0, v64);

          swift_release(v67);
        }
        else
        {
          swift_bridgeObjectRelease(v24);
LABEL_16:
          v46 = *(void **)(*(_QWORD *)&v20[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_mediator] + 16);
          v47 = (void *)objc_opt_self(NSBundle);
          v48 = v46;
          v49 = objc_msgSend(v47, "mainBundle");
          v79._countAndFlagsBits = 0xD000000000000015;
          v50._countAndFlagsBits = 0xD000000000000021;
          v79._object = (void *)0x80000001004ADC20;
          v50._object = (void *)0x80000001004ADCE0;
          v51.value._object = (void *)0x80000001004ADC00;
          v51.value._countAndFlagsBits = 0xD000000000000010;
          v52._countAndFlagsBits = 0;
          v52._object = (void *)0xE000000000000000;
          v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v50, v51, (NSBundle)v49, v52, v79);

          v54 = v71;
          v55 = v20;
          v56 = v72;
          sub_100342874((uint64_t)v48, v53._countAndFlagsBits, (uint64_t)v53._object, v56, v54, v55, v56);
          swift_release(v67);

          swift_bridgeObjectRelease(v53._object);
        }
      }
      else
      {
        v35 = *(void **)(*(_QWORD *)&v20[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_mediator] + 16);
        v36 = (void *)objc_opt_self(NSBundle);
        v37 = v35;
        v38 = objc_msgSend(v36, "mainBundle");
        v78._countAndFlagsBits = 0xD000000000000015;
        v39._countAndFlagsBits = 0xD000000000000021;
        v78._object = (void *)0x80000001004ADC20;
        v39._object = (void *)0x80000001004ADCE0;
        v40.value._object = (void *)0x80000001004ADC00;
        v40.value._countAndFlagsBits = 0xD000000000000010;
        v41._countAndFlagsBits = 0;
        v41._object = (void *)0xE000000000000000;
        v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, v40, (NSBundle)v38, v41, v78);

        v43 = v71;
        v44 = v20;
        v45 = v72;
        sub_100342874((uint64_t)v37, v42._countAndFlagsBits, (uint64_t)v42._object, v45, v43, v44, v45);

        swift_bridgeObjectRelease(v42._object);
        sub_10004FCB8((uint64_t)v18, type metadata accessor for FindingMode);
      }
    }
    else
    {
      if (qword_1005D2068 != -1)
        swift_once(&qword_1005D2068, sub_1003CB878);
      v30 = type metadata accessor for Logger(0);
      v31 = sub_100056D88(v30, (uint64_t)qword_1005F5FF8);
      v32 = Logger.logObject.getter(v31);
      v33 = static os_log_type_t.default.getter(v32);
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v34 = 0;
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "ðŸ§­ FMFindingPresenter: Camera not enabled", v34, 2u);
        swift_slowDealloc(v34, -1, -1);

      }
      else
      {

      }
    }
  }
}

void sub_10012F75C(char a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *ObjCClassFromMetadata;
  id v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject *v28;
  _BYTE v29[24];
  _BYTE v30[24];

  v8 = type metadata accessor for FMSelectedSection(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v27 - v12;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(a2, "setTransitioningDelegate:", a3);
    v14 = *(_QWORD *)(*(_QWORD *)(a3 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_mediator) + 56);
    swift_storeEnumTagMultiPayload(v13, v8, 18);
    v15 = v14 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v14 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v30, 0, 0);
    sub_10004FC74(v15, (uint64_t)v11, type metadata accessor for FMSelectedSection);
    swift_beginAccess(v15, v29, 33, 0);
    swift_retain(v14);
    sub_100009DF8((uint64_t)v13, v15);
    swift_endAccess(v29);
    sub_10004C8A4((uint64_t)v11);
    sub_10004FCB8((uint64_t)v13, type metadata accessor for FMSelectedSection);
    sub_10004FCB8((uint64_t)v11, type metadata accessor for FMSelectedSection);
    swift_release(v14);
    v16 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v17 = objc_msgSend(v16, "userInterfaceIdiom");

    if (v17 == (id)1)
    {
      v18 = objc_allocWithZone((Class)type metadata accessor for FMTransparentNavigationController());
      v19 = sub_1000A750C(a2, 2);
      objc_msgSend(v19, "setDelegate:", v19);
      objc_msgSend(v19, "setModalInPresentation:", 1);
      v20 = sub_100006C5C(0, &qword_1005D7318, OBWelcomeController_ptr);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v20);
      v22 = v19;
      objc_msgSend(ObjCClassFromMetadata, "preferredContentSize");
      objc_msgSend(v22, "setPreferredContentSize:");

      objc_msgSend(a4, "presentViewController:animated:completion:", v22, 1, 0);
    }
    else
    {
      objc_msgSend(a2, "setModalPresentationStyle:", 3);
      objc_msgSend(a4, "presentViewController:animated:completion:", a2, 1, 0);
    }
  }
  else
  {
    if (qword_1005D2068 != -1)
      swift_once(&qword_1005D2068, sub_1003CB878);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100056D88(v23, (uint64_t)qword_1005F5FF8);
    v28 = Logger.logObject.getter(v24);
    v25 = static os_log_type_t.default.getter(v28);
    if (os_log_type_enabled(v28, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v25, "ðŸ§­ FMFindingPresenter: Couldn't find, BT is off", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

  }
}

uint64_t sub_10012FAB0(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  __int128 *v18;
  uint64_t v19;
  void *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t result;
  void *v30;
  id v31;
  Swift::String v32;
  Swift::String_optional v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  id v38;
  Swift::String v39;
  Swift::String_optional v40;
  Swift::String v41;
  Swift::String v42;
  uint64_t countAndFlagsBits;
  void *object;
  char v45;
  uint64_t v46;
  Swift::String_optional v47;
  Swift::String v48;
  Swift::String v49;
  Swift::String v50;
  void *v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  const char *v55;
  Swift::String_optional v56;
  Swift::String v57;
  Swift::String v58;
  void *v59;
  unint64_t v60;
  const char *v61;
  unint64_t v62;
  Swift::String v63;
  void *v64;
  void *v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;
  _BYTE v72[32];
  Swift::String v73;
  Swift::String v74;
  Swift::String v75;

  v4 = v3;
  v8 = type metadata accessor for FMFindingProductType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  __chkstk_darwin(v12);
  v14 = (__int128 *)((char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = v4 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode;
  swift_beginAccess(v4 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode, v72, 0, 0);
  sub_100007464(v15, (uint64_t)v14, (uint64_t *)&unk_1005D72C0);
  v16 = type metadata accessor for FindingMode(0);
  if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16) != 1)
  {
    if (swift_getEnumCaseMultiPayload(v14, v16) != 3)
    {
      sub_10004FCB8((uint64_t)v14, type metadata accessor for FindingMode);
      goto LABEL_8;
    }
    v19 = *(_QWORD *)v14;
    v20 = (void *)*((_QWORD *)v14 + 1);
    v21 = swift_release(v19);
    v22 = FMConnectionManager.findables.getter(v21);
    v23 = v22;
    if (*(_QWORD *)(v22 + 16))
    {
      sub_100056284(v22 + 32, (uint64_t)&v66);
    }
    else
    {
      v68 = 0;
      v66 = 0u;
      v67 = 0u;
    }
    swift_bridgeObjectRelease(v23);
    if (!*((_QWORD *)&v67 + 1))
    {

      v17 = (uint64_t *)&unk_1005D7310;
      v18 = &v66;
      goto LABEL_3;
    }
    v64 = v20;
    v65 = a1;
    sub_10003D3AC(&v66, (uint64_t)v69);
    v30 = (void *)objc_opt_self(NSBundle);
    v31 = objc_msgSend(v30, "mainBundle");
    v32._countAndFlagsBits = 0xD000000000000012;
    v73._countAndFlagsBits = 0xD000000000000015;
    v62 = (unint64_t)"Localizable-B389";
    v73._object = (void *)0x80000001004ADC20;
    v32._object = (void *)0x80000001004ADBE0;
    v61 = "CAMERA_ALERT_TITLE";
    v33.value._object = (void *)0x80000001004ADC00;
    v33.value._countAndFlagsBits = 0xD000000000000010;
    v34._countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v31, v34, v73);

    v36 = v70;
    v35 = v71;
    sub_100029550(v69, v70);
    dispatch thunk of FMFindable.findingProductType.getter(v36, v35);
    v37 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
    if (v37 == enum case for FMFindingProductType.airpods(_:))
    {
      v38 = objc_msgSend(v30, "mainBundle");
      v74._countAndFlagsBits = 0xD000000000000015;
      v39._countAndFlagsBits = 0xD00000000000001CLL;
      v74._object = (void *)0x80000001004ADC80;
      v39._object = (void *)0x80000001004ADC40;
      v40.value._object = (void *)0x80000001004ADC60;
      v40.value._countAndFlagsBits = 0xD000000000000010;
      v41._countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, v40, (NSBundle)v38, v41, v74);
      countAndFlagsBits = v42._countAndFlagsBits;
      object = v42._object;
      v45 = 1;
    }
    else
    {
      if (v37 != enum case for FMFindingProductType.person(_:))
      {
        v51 = v64;
        if (v37 == enum case for FMFindingProductType.item(_:))
        {
          v38 = objc_msgSend(v30, "mainBundle");
          v52 = 0xD000000000000014;
          v53 = 0xD000000000000015;
          v60 = v62 | 0x8000000000000000;
          v54 = 0x80000001004ADCC0;
          v55 = v61;
        }
        else
        {
          if (v37 != enum case for FMFindingProductType.device(_:))
          {
            result = _diagnoseUnexpectedEnumCase<A>(type:)(v8, v8);
            __break(1u);
            return result;
          }
          v38 = objc_msgSend(v30, "mainBundle");
          v53 = 0xD000000000000015;
          v52 = 0xD00000000000001CLL;
          v60 = 0x80000001004ADC80;
          v54 = 0x80000001004ADC40;
          v55 = "CAMERA_ALERT_MESSAGE_AIRPODS";
        }
        v56.value._object = (void *)((unint64_t)v55 | 0x8000000000000000);
        v56.value._countAndFlagsBits = 0xD000000000000010;
        v57._countAndFlagsBits = 0;
        v57._object = (void *)0xE000000000000000;
        v58 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v52, v56, (NSBundle)v38, v57, *(Swift::String *)&v53);
        countAndFlagsBits = v58._countAndFlagsBits;
        object = v58._object;
        v45 = 1;
LABEL_26:

        v59 = v63._object;
        sub_10033F26C(v45, *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_mediator), v65, v63._countAndFlagsBits, (uint64_t)v63._object, countAndFlagsBits, (uint64_t)object, a2, a3);
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(v59);

        return sub_100029574(v69);
      }
      (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
      v46 = *((_QWORD *)v11 + 2);

      v38 = objc_msgSend(v30, "mainBundle", swift_bridgeObjectRelease(v46).n128_f64[0]);
      v47.value._countAndFlagsBits = 0xD000000000000019;
      v75._countAndFlagsBits = 0xD00000000000001ALL;
      v48._countAndFlagsBits = 0xD00000000000001BLL;
      v75._object = (void *)0x80000001004ABB80;
      v48._object = (void *)0x80000001004ADCA0;
      v47.value._object = (void *)0x80000001004ABB60;
      v49._countAndFlagsBits = 0;
      v49._object = (void *)0xE000000000000000;
      v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, v47, (NSBundle)v38, v49, v75);
      countAndFlagsBits = v50._countAndFlagsBits;
      object = v50._object;
      v45 = 0;
    }
    v51 = v64;
    goto LABEL_26;
  }
  v17 = (uint64_t *)&unk_1005D72C0;
  v18 = v14;
LABEL_3:
  sub_1000051EC((uint64_t)v18, v17);
LABEL_8:
  if (qword_1005D2068 != -1)
    swift_once(&qword_1005D2068, sub_1003CB878);
  v24 = type metadata accessor for Logger(0);
  v25 = sub_100056D88(v24, (uint64_t)qword_1005F5FF8);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "ðŸ§­ FMFindingExperiencePresenter: Not showing Camera access for BT finding.", v28, 2u);
    swift_slowDealloc(v28, -1, -1);
  }

  return ((uint64_t (*)(uint64_t))a2)(1);
}

uint64_t sub_1001300C0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100056D88(v3, (uint64_t)qword_1005F5748);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMFindingExperiencePresenter: User canceled safety warning", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  return a2(0);
}

uint64_t sub_1001301A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  if (qword_1005D2068 != -1)
    swift_once(&qword_1005D2068, sub_1003CB878);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100056D88(v5, (uint64_t)qword_1005F5FF8);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMFindingExperiencePresenter: User confirmed safety warning", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  *(_BYTE *)(a2 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_confirmedSafetyWarning) = 1;
  return a3(1);
}

uint64_t sub_1001302A4(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D2068 != -1)
    swift_once(&qword_1005D2068, sub_1003CB878);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100056D88(v11, (uint64_t)qword_1005F5FF8);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v15 = 67109120;
    LODWORD(aBlock[0]) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "ðŸ§­ FMFindingExperiencePresenter: Updating sound playback state, isPlaying: %{BOOL}d", v15, 8u);
    swift_slowDealloc(v15, -1, -1);
  }

  v16 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = swift_allocObject(&unk_100547CE0, 25, 7);
  *(_QWORD *)(v18 + 16) = v2;
  *(_BYTE *)(v18 + 24) = a1 & 1;
  aBlock[4] = sub_100137F5C;
  v30 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100547CF8;
  v19 = _Block_copy(aBlock);
  v20 = v30;
  v21 = v2;
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v25 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v4, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v10, v8);
}

void sub_100130598(uint64_t a1, char a2)
{
  void *v2;
  id v4;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedViewController);
  if (v2)
  {
    v4 = v2;
    dispatch thunk of FMFindingViewController.isSoundPlaying.setter(a2 & 1);

  }
}

uint64_t sub_1001305F8(unint64_t a1, char a2, int a3)
{
  uint64_t v3;
  uint64_t v7;
  id v8;
  char v9;
  id v10;
  char v11;
  __int16 v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;
  id v21;
  uint64_t v22;

  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_mediator);
  v21 = *(id *)(v7 + 16);
  v8 = v21;
  OS_dispatch_queue.sync<A>(execute:)(&v22, sub_10010C20C, &v20, &type metadata for Bool);

  v9 = v22;
  v10 = *(id *)(v7 + 16);
  v11 = sub_100377510();

  type metadata accessor for FMConnectionManager(0);
  LOBYTE(v10) = static FMConnectionManager.hostSupportsRanging.getter();
  v12 = sub_1001343A8((a1 & 0x800) != 0, (a1 >> 10) & 1, (a2 & 0x60) != 0, a3);
  if ((v10 & 1) != 0 && (a1 & 0x400) != 0)
  {
    if ((v12 & 1) == 0 && (v12 & 0x100) == 0)
      goto LABEL_5;
  }
  else if ((v12 & 1) == 0)
  {
LABEL_5:
    v13 = *(_DWORD *)&v11 & ((unsigned __int16)(v12 & 0x100) >> 8);
    goto LABEL_8;
  }
  LOBYTE(v13) = v11 | v9;
LABEL_8:
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100056D88(v14, (uint64_t)qword_1005F5748);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v18 = 67109120;
    LODWORD(v22) = v13 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, (char *)&v22 + 4);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMFindingExperiencePresenter: showFindingAttention: %{BOOL}d", v18, 8u);
    swift_slowDealloc(v18, -1, -1);
  }

  return v13 & 1;
}

void sub_1001307FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[13];

  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[1] = "\b";
  v6[2] = "\b";
  v6[3] = "\b";
  v6[4] = "\b";
  v6[5] = "\b";
  sub_100007178(319, (unint64_t *)&qword_1005D7208, type metadata accessor for FindingMode);
  if (v3 <= 0x3F)
  {
    v6[6] = *(_QWORD *)(v2 - 8) + 64;
    v6[7] = "\b";
    v6[8] = &unk_100484988;
    v6[9] = "\b";
    sub_100007178(319, (unint64_t *)&qword_1005D7210, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    if (v5 <= 0x3F)
    {
      v6[10] = *(_QWORD *)(v4 - 8) + 64;
      v6[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[12] = &unk_1004849A0;
      swift_updateClassMetadata2(a1, 256, 13, v6, a1 + 80);
    }
  }
}

uint64_t type metadata accessor for FindingMode(uint64_t a1)
{
  return sub_10001DC04(a1, qword_1005D7288, (uint64_t)&nominal type descriptor for FindingMode);
}

uint64_t sub_1001309F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_100130A40 + 4 * byte_1004848E8[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain(v6);
  return v7;
}

void sub_100130AFC(id *a1, uint64_t a2)
{
  uint64_t v3;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      v3 = type metadata accessor for UUID(0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 1u:
      swift_release(*a1);
      break;
    case 2u:

      break;
    case 3u:
      swift_release(*a1);

      break;
    default:
      return;
  }
}

void sub_100130B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_100130BD8 + 4 * byte_1004848F0[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_100130BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v2, v3);
  swift_storeEnumTagMultiPayload(v0, v1, 0);
  return v0;
}

uint64_t sub_100130C74(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_10004FCB8(result, type metadata accessor for FindingMode);
    v5 = (char *)&loc_100130CD0 + 4 * byte_1004848F4[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

void *sub_100130D74(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_100130DFC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10004FCB8((uint64_t)a1, type metadata accessor for FindingMode);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for UUID(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_100130E9C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = &unk_1004849C8;
    swift_initEnumMetadataMultiPayload(a1, 256, 4, v4);
    return 0;
  }
  return result;
}

id sub_100130F2C(uint64_t a1, void *a2)
{
  return sub_100137548(a2, "ðŸ§­ FMFindingExperiencePresenter: Dismissing Finding View Controller because Airplane Mode has been turned on");
}

id sub_100130F4C(uint64_t a1, void *a2)
{
  return sub_100137548(a2, "ðŸ§­ FMFindingExperiencePresenter: Dismissing Finding View Controller because BT has been turned off");
}

id sub_100130F6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id result;

  if (qword_1005D2068 != -1)
    swift_once(&qword_1005D2068, sub_1003CB878);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5FF8);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "ðŸ§­ FMFindingExperiencePresenter: Dismissing finding view, findable is attached", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "ðŸ§­ FMFindingExperiencePresenter: Dismissing Finding View Controller", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  result = *(id *)(a1 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedViewController);
  if (result)
    return objc_msgSend(result, "dismissViewControllerAnimated:completion:", 1, 0);
  return result;
}

void sub_1001310E4(uint64_t a1, uint64_t a2)
{
  sub_100132010(a2);
}

void sub_1001310EC(uint64_t a1, uint64_t a2)
{
  sub_10013318C(a2);
}

void sub_1001310F4(uint64_t a1, uint64_t a2)
{
  sub_100132B68(a2);
}

void sub_1001310FC(uint64_t a1, uint64_t a2)
{
  sub_100133838(a2);
}

uint64_t sub_100131104(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = sub_100053F2C(&qword_1005D2C10);
  v4 = type metadata accessor for FMIPItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v3, v7 + *(_QWORD *)(v5 + 72), v6 | 7);
  *(_OWORD *)(v8 + 16) = xmmword_100481740;
  v9 = v8 + v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, a2, v4);
  sub_100132B68(v8);
  swift_setDeallocating(v8);
  swift_arrayDestroy(v9, *(_QWORD *)(v8 + 16), v4);
  return swift_deallocClassInstance(v8, 32, 7);
}

void sub_1001311C4(uint64_t a1, uint64_t a2)
{
  sub_1001312F4(a2);
}

void sub_1001311CC(uint64_t a1, uint64_t a2)
{
  sub_100137E44(a2);
}

void sub_1001311D4(uint64_t a1, uint64_t a2)
{
  sub_10012D9F4(a2, "FMFindingExperiencePresenter: Received updated local heading", (void (*)(uint64_t))&dispatch thunk of FMPrecisionConnectionManager.updateHeadingForLocalDevice(heading:));
}

id sub_1001311FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id result;
  uint64_t v7;

  v3 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FC74(a2, (uint64_t)v5, type metadata accessor for FMSelectedSection);
  LODWORD(a2) = swift_getEnumCaseMultiPayload(v5, v3);
  result = (id)sub_10004FCB8((uint64_t)v5, type metadata accessor for FMSelectedSection);
  if ((_DWORD)a2 == 2)
    return sub_10012E2D4();
  return result;
}

uint64_t sub_1001312A4(uint64_t *a1, uint64_t a2, uint64_t a3, double (*a4)(void))
{
  double v5;
  uint64_t v6;
  uint64_t result;
  double v8;
  uint64_t v9;

  v5 = a4();
  v6 = *a1 + 8;
  v8 = v5;
  result = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v8, &v9);
  *a1 = v6;
  return result;
}

void sub_1001312F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int v37;
  void *v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t (*v44)(char *, char *, uint64_t, __n128);
  uint64_t i;
  __n128 v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  Swift::Int v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  BOOL v58;
  __n128 v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  int v83;
  _BOOL4 v84;
  _DWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(char *, uint64_t, uint64_t);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  unint64_t v93;
  unint64_t v94;
  __n128 v95;
  void (*v96)(char *, char *, uint64_t, __n128);
  char *v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint8_t *v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  NSObject *v119;
  os_log_type_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __n128 v124;
  uint64_t v125;
  id v126;
  NSObject *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  __int128 v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  _DWORD *v152;
  char *v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162[8];

  v3 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  __chkstk_darwin(v3);
  v132 = (char *)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = type metadata accessor for FMFRelationshipType(0);
  v145 = *(_QWORD *)(v146 - 8);
  v5 = __chkstk_darwin(v146);
  v144 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v143 = (char *)&v125 - v7;
  v8 = type metadata accessor for FMFFriend(0);
  v156 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v149 = (char *)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v153 = (char *)&v125 - v12;
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v125 - v14;
  v16 = __chkstk_darwin(v13);
  v131 = (char *)&v125 - v17;
  __chkstk_darwin(v16);
  v134 = (char *)&v125 - v18;
  v19 = type metadata accessor for FMFindingProductType(0);
  v142 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v148 = (char *)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v125 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = v1 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode;
  swift_beginAccess(v24, v162, 0, 0);
  sub_100007464(v24, (uint64_t)v23, (uint64_t *)&unk_1005D72C0);
  v25 = type metadata accessor for FindingMode(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v23, 1, v25) == 1)
  {
    sub_1000051EC((uint64_t)v23, (uint64_t *)&unk_1005D72C0);
    return;
  }
  if (swift_getEnumCaseMultiPayload(v23, v25) != 3)
  {
    sub_10004FCB8((uint64_t)v23, type metadata accessor for FindingMode);
    return;
  }
  v27 = (void *)v23[1];
  v136 = *v23;
  v28 = FMConnectionManager.findables.getter(v26);
  v30 = v28;
  v140 = *(_QWORD *)(v28 + 16);
  if (!v140)
  {

    v123 = v30;
    goto LABEL_67;
  }
  v126 = v27;
  v31 = 0;
  v141 = v28;
  v139 = v28 + 32;
  v138 = enum case for FMFindingProductType.person(_:);
  *(_QWORD *)&v29 = 136315138;
  v133 = v29;
  v129 = (char *)&type metadata for Any + 8;
  v137 = a1;
  v150 = v15;
  v135 = v19;
  while (1)
  {
    if (v31 >= *(_QWORD *)(v141 + 16))
    {
      __break(1u);
      return;
    }
    v147 = v31;
    sub_100056284(v139 + 40 * v31, (uint64_t)&v159);
    v33 = v160;
    v34 = v161;
    sub_100029550(&v159, v160);
    dispatch thunk of FMFindable.findingProductType.getter(v33, v34);
    v35 = v148;
    v36 = v142;
    v37 = (*(uint64_t (**)(char *, uint64_t))(v142 + 88))(v148, v19);
    if (v37 != v138)
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v19);
LABEL_35:
      if (qword_1005D2068 != -1)
        swift_once(&qword_1005D2068, sub_1003CB878);
      v73 = type metadata accessor for Logger(0);
      v74 = sub_100056D88(v73, (uint64_t)qword_1005F5FF8);
      v75 = Logger.logObject.getter(v74);
      v76 = static os_log_type_t.error.getter(v75);
      if (os_log_type_enabled(v75, v76))
      {
        v77 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v77 = 0;
        _os_log_impl((void *)&_mh_execute_header, v75, v76, "FMFindingExperiencePresenter: Can't find current findable's handle", v77, 2u);
        swift_slowDealloc(v77, -1, -1);
      }

LABEL_40:
      v78 = v147;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v36 + 96))(v35, v19);
    v38 = *(void **)v35;
    v155 = *((_QWORD *)v35 + 1);
    v39 = *((_QWORD *)v35 + 2);

    if (!v39)
      goto LABEL_35;
    v154 = v39;
    v40 = *(_QWORD *)(a1 + 16);
    if (v40)
      break;
LABEL_42:
    if (qword_1005D2068 != -1)
      swift_once(&qword_1005D2068, sub_1003CB878);
    v79 = type metadata accessor for Logger(0);
    v80 = sub_100056D88(v79, (uint64_t)qword_1005F5FF8);
    v81 = swift_bridgeObjectRetain_n(a1, 2);
    v82 = Logger.logObject.getter(v81);
    v83 = static os_log_type_t.default.getter(v82);
    v84 = os_log_type_enabled(v82, (os_log_type_t)v83);
    v78 = v147;
    if (v84)
    {
      LODWORD(v151) = v83;
      v85 = (_DWORD *)swift_slowAlloc(12, -1);
      v130 = swift_slowAlloc(32, -1);
      v158 = v130;
      v152 = v85;
      *v85 = v133;
      if (v40)
      {
        v127 = v82;
        v128 = v80;
        v157 = _swiftEmptyArrayStorage;
        sub_100111F3C(0, v40, 0);
        v86 = a1 + ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80));
        v87 = *(_QWORD *)(v156 + 72);
        v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v156 + 16);
        do
        {
          v89 = v149;
          v90 = v88(v149, v86, v8);
          v91 = FMFFriend.contactHandles.getter(v90);
          (*(void (**)(char *, uint64_t))(v156 + 8))(v89, v8);
          v92 = v157;
          if ((swift_isUniquelyReferenced_nonNull_native(v157) & 1) == 0)
          {
            sub_100111F3C(0, v92[2] + 1, 1);
            v92 = v157;
          }
          v94 = v92[2];
          v93 = v92[3];
          if (v94 >= v93 >> 1)
          {
            sub_100111F3C(v93 > 1, v94 + 1, 1);
            v92 = v157;
          }
          v92[2] = v94 + 1;
          v92[v94 + 4] = v91;
          v86 += v87;
          --v40;
        }
        while (v40);
        v78 = v147;
        v82 = v127;
      }
      else
      {
        v92 = _swiftEmptyArrayStorage;
      }
      v110 = sub_100053F2C((uint64_t *)&unk_1005D6720);
      v111 = Array.description.getter(v92, v110);
      v113 = v112;
      swift_bridgeObjectRelease(v92);
      v114 = sub_100056DA0(v111, v113, &v158);
      v115 = (uint8_t *)v152;
      *(_QWORD *)(v152 + 1) = v114;
      swift_bridgeObjectRelease_n(v137, 2);
      swift_bridgeObjectRelease(v113);
      _os_log_impl((void *)&_mh_execute_header, v82, (os_log_type_t)v151, "FMFindingExperiencePresenter: person doesn't exist or doesn't share location. Going back to list. People list: %s", v115, 0xCu);
      v116 = v130;
      swift_arrayDestroy(v130, 1, v129);
      swift_slowDealloc(v116, -1, -1);
      swift_slowDealloc(v115, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a1, 2);
    }
    v117 = v154;
    swift_bridgeObjectRetain(v154);
    v119 = Logger.logObject.getter(v118);
    v120 = static os_log_type_t.default.getter(v119);
    if (os_log_type_enabled(v119, v120))
    {
      v121 = swift_slowAlloc(12, -1);
      v122 = swift_slowAlloc(32, -1);
      v158 = v122;
      *(_DWORD *)v121 = v133;
      swift_bridgeObjectRetain(v117);
      *(_QWORD *)(v121 + 4) = sub_100056DA0(v155, v117, &v158);
      swift_bridgeObjectRelease_n(v117, 3);
      _os_log_impl((void *)&_mh_execute_header, v119, v120, "FMFindingExperiencePresenter connection manager handle: %s", (uint8_t *)v121, 0xCu);
      swift_arrayDestroy(v122, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v122, -1, -1);
      swift_slowDealloc(v121, -1, -1);

    }
    else
    {

      v32 = swift_bridgeObjectRelease_n(v117, 2);
    }
    a1 = v137;
    v19 = v135;
    dispatch thunk of FMFindingSession.updateSessionForRemovedFriendship()(v32);
LABEL_8:
    v31 = v78 + 1;
    sub_100029574(&v159);
    if (v31 == v140)
    {

      v123 = v141;
LABEL_67:
      swift_bridgeObjectRelease(v123);
      swift_release(v136);
      return;
    }
  }
  v41 = v156;
  v152 = (_DWORD *)(a1 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80)));
  v42 = swift_bridgeObjectRetain(a1);
  v43 = 0;
  v151 = *(_QWORD *)(v41 + 72);
  v44 = *(uint64_t (**)(char *, char *, uint64_t, __n128))(v41 + 16);
  for (i = v44(v15, (char *)v152, v8, v42); ; i = v44(v15, (char *)v152 + v151 * v43, v8, v49))
  {
    v50 = FMFFriend.contactHandles.getter(i);
    v51 = v50;
    if (!*(_QWORD *)(v50 + 16))
      goto LABEL_14;
    Hasher.init(_seed:)(&v158, *(_QWORD *)(v50 + 40));
    String.hash(into:)(&v158, v155, v154);
    v52 = Hasher._finalize()();
    v53 = -1 << *(_BYTE *)(v51 + 32);
    v54 = v52 & ~v53;
    if (((*(_QWORD *)(v51 + 56 + ((v54 >> 3) & 0xFFFFFFFFFFFFF8)) >> v54) & 1) == 0)
      goto LABEL_14;
    v55 = *(_QWORD *)(v51 + 48);
    v56 = (_QWORD *)(v55 + 16 * v54);
    v57 = v56[1];
    v58 = *v56 == v155 && v154 == v57;
    if (!v58 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v56, v57, v155, v154, 0) & 1) == 0)
    {
      v69 = ~v53;
      while (1)
      {
        v54 = (v54 + 1) & v69;
        if (((*(_QWORD *)(v51 + 56 + ((v54 >> 3) & 0xFFFFFFFFFFFFF8)) >> v54) & 1) == 0)
          break;
        v70 = (_QWORD *)(v55 + 16 * v54);
        v71 = v70[1];
        v72 = *v70 == v155 && v154 == v71;
        if (v72 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v70, v71, v155, v154, 0) & 1) != 0)
          goto LABEL_24;
      }
LABEL_14:
      v46 = swift_bridgeObjectRelease(v51);
      v47 = v153;
      v44(v153, v15, v8, v46);
      v48 = *(void (**)(char *, uint64_t))(v156 + 8);
      v48(v47, v8);
      goto LABEL_15;
    }
LABEL_24:
    v59 = swift_bridgeObjectRelease(v51);
    v60 = v153;
    v61 = v44(v153, v150, v8, v59);
    v62 = v143;
    v63 = FMFFriend.relationshipType.getter(v61);
    v64 = v144;
    static FMFRelationshipType.sharesLocationWithMe.getter(v63);
    v65 = sub_100008000((unint64_t *)&unk_1005D9C20, (uint64_t (*)(uint64_t))&type metadata accessor for FMFRelationshipType, (uint64_t)&protocol conformance descriptor for FMFRelationshipType);
    v66 = v146;
    v67 = dispatch thunk of SetAlgebra.isSuperset(of:)(v64, v146, v65);
    v68 = *(void (**)(char *, uint64_t))(v145 + 8);
    v68(v64, v66);
    v68(v62, v66);
    v48 = *(void (**)(char *, uint64_t))(v156 + 8);
    v48(v60, v8);
    if ((v67 & 1) != 0)
      break;
    v15 = v150;
LABEL_15:
    ++v43;
    v48(v15, v8);
    if (v43 == v40)
    {
      a1 = v137;
      swift_bridgeObjectRelease(v137);
      goto LABEL_42;
    }
  }
  v95 = swift_bridgeObjectRelease(v137);
  v96 = *(void (**)(char *, char *, uint64_t, __n128))(v156 + 32);
  v97 = v131;
  v15 = v150;
  v96(v131, v150, v8, v95);
  v98 = swift_bridgeObjectRelease(v154);
  v99 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v96)(v134, v97, v8, v98);
  v100 = (uint64_t)v132;
  FMFFriend.location.getter(v99);
  v101 = type metadata accessor for FMFLocation(0);
  v102 = *(_QWORD *)(v101 - 8);
  v103 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v100, 1, v101);
  if ((_DWORD)v103 == 1)
  {

    swift_release(v136);
    sub_1000051EC(v100, (uint64_t *)&unk_1005D3350);
  }
  else
  {
    v104 = FMFLocation.location.getter(v103);
    v105 = v100;
    v106 = (void *)v104;
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v105, v101);
    if (v106)
    {
      v107 = type metadata accessor for FMPrecisionConnectionManager(0);
      v108 = v126;
      if (swift_dynamicCastClass(v126, v107))
      {
        v109 = v108;
        dispatch thunk of FMPrecisionConnectionManager.updateLocationForFindable(findable:location:)(&v159, v106);

        v48(v134, v8);
      }
      else
      {
        v48(v134, v8);

      }
      a1 = v137;
      v19 = v135;
      goto LABEL_40;
    }

    v124 = swift_release(v136);
  }
  ((void (*)(char *, uint64_t, __n128))v48)(v134, v8, v124);
  swift_bridgeObjectRelease(v141);
  sub_100029574(&v159);
}

void sub_100132010(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_QWORD, _QWORD);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  __n128 v49;
  uint64_t v50;
  void (*v51)(uint64_t, char *, uint64_t, __n128);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  char v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  __n128 v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(char *, uint64_t, uint64_t, __n128);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(_QWORD, _QWORD);
  _QWORD *aBlock;
  _QWORD v133[4];
  uint64_t v134;
  uint64_t v135;
  char v136[8];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for DispatchQoS(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for FMIPDeviceConnectedStateType(0);
  v120 = *(_QWORD *)(v121 - 8);
  v8 = __chkstk_darwin(v121);
  v119 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v118 = (char *)&v107 - v10;
  v11 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v11);
  v122 = (uint64_t)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  __chkstk_darwin(v13);
  v15 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FindingMode(0);
  v130 = *(_QWORD *)(v16 - 8);
  v131 = (void (*)(_QWORD, _QWORD))v16;
  v17 = __chkstk_darwin(v16);
  v129 = (uint64_t)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v128 = (uint64_t)&v107 - v19;
  v20 = type metadata accessor for FMIPDevice(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v107 - v24;
  v26 = __chkstk_darwin(v23);
  __chkstk_darwin(v26);
  v30 = *(_QWORD *)(a1 + 16);
  if (v30)
  {
    v112 = v29;
    v111 = v28;
    v108 = v6;
    v109 = v4;
    v110 = v3;
    v114 = (char *)&v107 - v27;
    v31 = a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v113 = v1;
    v32 = (uint64_t)&v1[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode];
    swift_bridgeObjectRetain(a1);
    v126 = v32;
    v33 = swift_beginAccess(v32, v136, 0, 0);
    v34 = *(_QWORD *)(v21 + 72);
    v123 = v20;
    v124 = v34;
    v127 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v21 + 16);
    v125 = v21;
    while (1)
    {
      v35 = v127(v25, v31, v20, v33);
      FMIPDevice.baIdentifier.getter(v35);
      v37 = v36;
      sub_100007464(v126, (uint64_t)v15, (uint64_t *)&unk_1005D72C0);
      v38 = v131;
      if ((*(unsigned int (**)(char *, uint64_t, void (*)(_QWORD, _QWORD)))(v130 + 48))(v15, 1, v131) != 1)
      {
        v39 = v128;
        sub_100137DD4((uint64_t)v15, v128);
        v40 = v39;
        v41 = v129;
        sub_10004FC74(v40, v129, type metadata accessor for FindingMode);
        v42 = (char *)&loc_100132434 + 4 * byte_1004848F8[swift_getEnumCaseMultiPayload(v41, v38)];
        __asm { BR              X9 }
      }
      sub_1000051EC((uint64_t)v15, (uint64_t *)&unk_1005D72C0);
      if (!v37)
        break;
      v43 = swift_bridgeObjectRelease(v37);
      (*(void (**)(char *, uint64_t, __n128))(v125 + 8))(v25, v20, v43);
      v31 += v124;
      if (!--v30)
      {
        swift_bridgeObjectRelease(a1);
        goto LABEL_10;
      }
    }
    v49 = swift_bridgeObjectRelease(a1);
    v50 = v125;
    v51 = *(void (**)(uint64_t, char *, uint64_t, __n128))(v125 + 32);
    v52 = v112;
    v51(v112, v25, v20, v49);
    v53 = v114;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v114, v52, v20);
    v54 = v113;
    v55 = *(_QWORD *)(*(_QWORD *)&v113[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_mediator] + 24);
    swift_retain(v55);
    v56 = v122;
    sub_1000BD5B0(v122);
    v57 = swift_release(v55);
    v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v50 + 48))(v56, 1, v20, v57);
    if ((_DWORD)v58 == 1)
    {
      sub_1000051EC(v56, &qword_1005D6710);
      v59 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
LABEL_32:
      v92 = v53;
      goto LABEL_33;
    }
    v60 = FMIPDevice.baIdentifier.getter(v58);
    v62 = v61;
    v59 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    v59(v56, v20);
    if (!v62)
      goto LABEL_32;
    swift_bridgeObjectRetain(v62);
    v64 = FMIPDevice.deviceConnectedWithBeacon.getter(v63);
    if (v65)
    {
      v66 = v65;
      if (v60 == v64 && v62 == v65)
      {
        swift_bridgeObjectRelease(v62);
        v67 = swift_bridgeObjectRelease(v66);
      }
      else
      {
        v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v62, v64, v65, 0);
        swift_bridgeObjectRelease(v62);
        v67 = swift_bridgeObjectRelease(v66);
        if ((v68 & 1) == 0)
          goto LABEL_27;
      }
      v131 = v59;
      v69 = v60;
      v70 = v118;
      FMIPDevice.deviceConnectedState.getter(v67);
      v71 = v120;
      v72 = v119;
      v73 = v121;
      (*(void (**)(char *, _QWORD, uint64_t))(v120 + 104))(v119, enum case for FMIPDeviceConnectedStateType.attached(_:), v121);
      v74 = static FMIPDeviceConnectedStateType.== infix(_:_:)(v70, v72);
      v75 = *(void (**)(char *, uint64_t))(v71 + 8);
      v75(v72, v73);
      v76 = v70;
      v60 = v69;
      v59 = v131;
      v75(v76, v73);
      if ((v74 & 1) != 0
        && *(_QWORD *)&v54[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedViewController])
      {
        swift_bridgeObjectRelease(v62);
        v77 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
        v78 = (void *)static OS_dispatch_queue.main.getter(v77);
        v79 = swift_allocObject(&unk_100547C90, 24, 7);
        *(_QWORD *)(v79 + 16) = v54;
        v133[3] = sub_100137E3C;
        v134 = v79;
        aBlock = _NSConcreteStackBlock;
        v133[0] = 1107296256;
        v133[1] = sub_100037DF8;
        v133[2] = &unk_100547CA8;
        v80 = _Block_copy(&aBlock);
        v81 = v134;
        v82 = v54;
        swift_release(v81);
        v83 = v115;
        static DispatchQoS.unspecified.getter(v84);
        aBlock = _swiftEmptyArrayStorage;
        v85 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v86 = v53;
        v87 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
        v88 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
        v89 = v108;
        v90 = v87;
        v91 = v110;
        dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v90, v88, v110, v85);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v83, v89, v80);
        _Block_release(v80);

        (*(void (**)(char *, uint64_t))(v109 + 8))(v89, v91);
        (*(void (**)(char *, uint64_t))(v116 + 8))(v83, v117);
        v92 = v86;
        goto LABEL_33;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v62);
    }
LABEL_27:
    if (qword_1005D2068 != -1)
      swift_once(&qword_1005D2068, sub_1003CB878);
    v93 = type metadata accessor for Logger(0);
    sub_100056D88(v93, (uint64_t)qword_1005F5FF8);
    v94 = v111;
    ((void (*)(uint64_t, char *, uint64_t))v127)(v111, v53, v20);
    swift_bridgeObjectRetain(v62);
    v96 = Logger.logObject.getter(v95);
    v97 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v96, v97))
    {

      v59(v94, v20);
      swift_bridgeObjectRelease_n(v62, 2);
      goto LABEL_32;
    }
    v98 = swift_slowAlloc(22, -1);
    v99 = swift_slowAlloc(64, -1);
    v135 = v99;
    *(_DWORD *)v98 = 136315394;
    swift_bridgeObjectRetain(v62);
    aBlock = (_QWORD *)sub_100056DA0(v60, v62, &v135);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v133);
    v100 = swift_bridgeObjectRelease_n(v62, 3);
    *(_WORD *)(v98 + 12) = 2080;
    aBlock = (_QWORD *)FMIPDevice.deviceConnectedWithBeacon.getter(v100);
    v133[0] = v101;
    v102 = sub_100053F2C(&qword_1005D2BD0);
    v103 = String.init<A>(describing:)(&aBlock, v102);
    v105 = v104;
    aBlock = (_QWORD *)sub_100056DA0(v103, v104, &v135);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v133);
    v106 = swift_bridgeObjectRelease(v105);
    ((void (*)(uint64_t, uint64_t, __n128))v59)(v94, v20, v106);
    _os_log_impl((void *)&_mh_execute_header, v96, v97, "ðŸ§­ FMFindingExperiencePresenter: This device baID: %s, and presented device connectedW/ UUID: %s", (uint8_t *)v98, 0x16u);
    swift_arrayDestroy(v99, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v99, -1, -1);
    swift_slowDealloc(v98, -1, -1);

    v92 = v114;
LABEL_33:
    v59((uint64_t)v92, v20);
    return;
  }
LABEL_10:
  if (qword_1005D2068 != -1)
    swift_once(&qword_1005D2068, sub_1003CB878);
  v44 = type metadata accessor for Logger(0);
  v45 = sub_100056D88(v44, (uint64_t)qword_1005F5FF8);
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "ðŸ§­ FMFindingExperiencePresenter: Received device update but current device is missing from the set.", v48, 2u);
    swift_slowDealloc(v48, -1, -1);
  }

}

void sub_100132B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t (*v31)(char *, unint64_t, uint64_t, __n128);
  uint64_t i;
  __n128 v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  _QWORD v47[8];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, unint64_t, uint64_t, __n128);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58[32];

  v2 = v1;
  v4 = type metadata accessor for FMIPItemState(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v47 - v9;
  v11 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  __chkstk_darwin(v11);
  v13 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FindingMode(0);
  v56 = *(_QWORD *)(v14 - 8);
  v57 = v14;
  v15 = __chkstk_darwin(v14);
  v54 = (uint64_t)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v55 = (uint64_t)v47 - v17;
  v18 = type metadata accessor for FMIPItem(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(a1);
  v22 = (char *)v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v24 = __chkstk_darwin(v23);
  v47[7] = (char *)v47 - v26;
  v27 = *(_QWORD *)(v24 + 16);
  if (v27)
  {
    v47[2] = v25;
    v47[3] = v10;
    v47[4] = v8;
    v47[5] = v5;
    v47[6] = v4;
    v28 = v24 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v47[1] = v2;
    v29 = v2 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode;
    v48 = v24;
    swift_bridgeObjectRetain(v24);
    v53 = v29;
    v30 = swift_beginAccess(v29, v58, 0, 0);
    v31 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v19 + 16);
    v51 = *(_QWORD *)(v19 + 72);
    v52 = v31;
    v49 = v19;
    v50 = v18;
    for (i = v31(v22, v28, v18, v30); ; i = v52(v22, v28, v18, v34))
    {
      FMIPItem.identifier.getter(i);
      v36 = v35;
      sub_100007464(v53, (uint64_t)v13, (uint64_t *)&unk_1005D72C0);
      v37 = v57;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v13, 1, v57) != 1)
      {
        v38 = v55;
        sub_100137DD4((uint64_t)v13, v55);
        v39 = v38;
        v40 = v54;
        sub_10004FC74(v39, v54, type metadata accessor for FindingMode);
        v41 = (char *)&loc_100132E38 + 4 * byte_1004848FC[swift_getEnumCaseMultiPayload(v40, v37)];
        __asm { BR              X9 }
      }
      sub_1000051EC((uint64_t)v13, (uint64_t *)&unk_1005D72C0);
      v33 = swift_bridgeObjectRelease(v36);
      (*(void (**)(char *, uint64_t, __n128))(v19 + 8))(v22, v18, v33);
      v28 += v51;
      if (!--v27)
        break;
    }
    swift_bridgeObjectRelease(v48);
  }
  if (qword_1005D2068 != -1)
    swift_once(&qword_1005D2068, sub_1003CB878);
  v42 = type metadata accessor for Logger(0);
  v43 = sub_100056D88(v42, (uint64_t)qword_1005F5FF8);
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v46 = 0;
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "ðŸ§­ FMFindingExperiencePresenter: Received item update but current item is missing from the set.", v46, 2u);
    swift_slowDealloc(v46, -1, -1);
  }

}

void sub_10013318C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t (*v31)(char *, unint64_t, uint64_t, __n128);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  _QWORD v51[7];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, unint64_t, uint64_t, __n128);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char v67[32];

  v2 = v1;
  v4 = type metadata accessor for FMIPItemState(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v51 - v9;
  v11 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  __chkstk_darwin(v11);
  v13 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FindingMode(0);
  v63 = *(_QWORD *)(v14 - 8);
  v64 = v14;
  v15 = __chkstk_darwin(v14);
  v55 = (uint64_t)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v60 = (uint64_t)v51 - v17;
  v66 = type metadata accessor for UUID(0);
  v62 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v61 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FMIPUnknownItem(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(a1);
  v65 = (char *)v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v24 = __chkstk_darwin(v23);
  v51[6] = (char *)v51 - v26;
  v27 = *(_QWORD *)(a1 + 16);
  if (v27)
  {
    v51[1] = v25;
    v59 = v13;
    v51[2] = v10;
    v51[3] = v8;
    v51[4] = v5;
    v51[5] = v4;
    v28 = v24 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v51[0] = v2;
    v29 = v2 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode;
    v52 = v24;
    swift_bridgeObjectRetain(v24);
    v58 = v29;
    v30 = swift_beginAccess(v29, v67, 0, 0);
    v31 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v20 + 16);
    v56 = *(_QWORD *)(v20 + 72);
    v57 = v31;
    v53 = v19;
    v54 = v20;
    v32 = v65;
    do
    {
      v33 = v19;
      v34 = v57(v32, v28, v19, v30);
      v35 = v61;
      v36 = FMIPUnknownItem.identifier.getter(v34);
      UUID.uuidString.getter(v36);
      v38 = v37;
      (*(void (**)(char *, uint64_t))(v62 + 8))(v35, v66);
      v39 = (uint64_t)v59;
      sub_100007464(v58, (uint64_t)v59, (uint64_t *)&unk_1005D72C0);
      v40 = v64;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v39, 1, v64) != 1)
      {
        v41 = v39;
        v42 = v60;
        sub_100137DD4(v41, v60);
        v43 = v42;
        v44 = v55;
        sub_10004FC74(v43, v55, type metadata accessor for FindingMode);
        v45 = (char *)&loc_100133524 + 4 * byte_100484900[swift_getEnumCaseMultiPayload(v44, v40)];
        __asm { BR              X9 }
      }
      sub_1000051EC(v39, (uint64_t *)&unk_1005D72C0);
      swift_bridgeObjectRelease(v38);
      v19 = v33;
      v32 = v65;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v65, v33);
      v28 += v56;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease(v52);
  }
  if (qword_1005D2068 != -1)
    swift_once(&qword_1005D2068, sub_1003CB878);
  v46 = type metadata accessor for Logger(0);
  v47 = sub_100056D88(v46, (uint64_t)qword_1005F5FF8);
  v48 = Logger.logObject.getter(v47);
  v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v50 = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "ðŸ§­ FMFindingExperiencePresenter: Received item update but current item is missing from the set.", v50, 2u);
    swift_slowDealloc(v50, -1, -1);
  }

}

void sub_100133838(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint8_t *v44;
  _QWORD *v45;
  BOOL v46;
  char v47;
  _QWORD *v48;
  uint8_t *v49;
  _QWORD *v50;
  uint64_t v51;
  uint8_t *v52;
  _QWORD *v53;
  char v55;
  __n128 v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  __n128 v79;
  void (*v80)(char *, uint64_t, __n128);
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(char *, uint64_t, uint64_t, __n128);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint8_t *v99;
  _QWORD *v100;
  uint64_t v101;
  _QWORD *v102;
  char v103[32];

  v3 = sub_100053F2C(&qword_1005D72D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMIPItemGroup(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v85 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v85 - v14;
  v16 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = v1 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode;
  swift_beginAccess(v19, v103, 0, 0);
  sub_100007464(v19, (uint64_t)v18, (uint64_t *)&unk_1005D72C0);
  v20 = type metadata accessor for FindingMode(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v18, 1, v20) == 1)
  {
    sub_1000051EC((uint64_t)v18, (uint64_t *)&unk_1005D72C0);
    return;
  }
  if (swift_getEnumCaseMultiPayload(v18, v20) != 1)
  {
    sub_10004FCB8((uint64_t)v18, type metadata accessor for FindingMode);
    return;
  }
  v87 = v10;
  v21 = *v18;
  v22 = dispatch thunk of FMFindingSession.findingSessionIdentifier.getter();
  v100 = v23;
  v94 = *(_QWORD *)(a1 + 16);
  v88 = v15;
  if (v94)
  {
    v99 = (uint8_t *)v22;
    v86 = v21;
    v97 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v24 = *(_QWORD *)(v7 + 72);
    v95 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
    v96 = v24;
    v25 = swift_bridgeObjectRetain(a1);
    v26 = 0;
    v92 = v6;
    v93 = v7;
    v90 = a1;
    v91 = v5;
    v89 = v13;
    while (1)
    {
      v98 = v26;
      v28 = v95(v13, v97 + v96 * v26, v6, v25);
      v29 = FMIPItemGroup.items.getter(v28);
      v30 = v29;
      v31 = *(_QWORD *)(v29 + 16);
      if (v31)
      {
        v102 = _swiftEmptyArrayStorage;
        sub_100111E28(0, v31, 0);
        v32 = v102;
        v33 = type metadata accessor for FMIPItem(0);
        v34 = *(_QWORD *)(v33 - 8);
        v35 = v30 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
        v36 = *(_QWORD *)(v34 + 72);
        do
        {
          v33 = FMIPItem.identifier.getter(v33);
          v37 = v33;
          v39 = v38;
          v102 = v32;
          v41 = v32[2];
          v40 = v32[3];
          if (v41 >= v40 >> 1)
          {
            v33 = sub_100111E28(v40 > 1, v41 + 1, 1);
            v32 = v102;
          }
          v32[2] = v41 + 1;
          v42 = &v32[2 * v41];
          v42[4] = v37;
          v42[5] = v39;
          v35 += v36;
          --v31;
        }
        while (v31);
        swift_bridgeObjectRelease(v30);
        v6 = v92;
        v7 = v93;
        a1 = v90;
        v5 = v91;
        v13 = v89;
      }
      else
      {
        swift_bridgeObjectRelease(v29);
        v32 = _swiftEmptyArrayStorage;
      }
      v43 = v32[2];
      if (v43)
      {
        v44 = (uint8_t *)v32[4];
        v45 = (_QWORD *)v32[5];
        v46 = v44 == v99 && v45 == v100;
        if (v46
          || (v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v45, v99, v100, 0),
              v49 = v99,
              v48 = v100,
              (v47 & 1) != 0))
        {
LABEL_31:
          swift_bridgeObjectRelease(a1);
          v56 = swift_bridgeObjectRelease(v32);
          (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 32))(v5, v13, v6, v56);
          v57 = 0;
LABEL_32:
          v21 = v86;
          v15 = v88;
          goto LABEL_34;
        }
        if (v43 != 1)
          break;
      }
LABEL_6:
      v27 = swift_bridgeObjectRelease(v32);
      v26 = v98 + 1;
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v13, v6, v27);
      if (v26 == v94)
      {
        swift_bridgeObjectRelease(a1);
        v57 = 1;
        goto LABEL_32;
      }
    }
    v50 = v32 + 7;
    v51 = 1;
    while (1)
    {
      v21 = v51 + 1;
      if (__OFADD__(v51, 1))
        break;
      v52 = (uint8_t *)*(v50 - 1);
      v53 = (_QWORD *)*v50;
      if (v52 == v49 && v53 == v48)
        goto LABEL_31;
      v55 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v53, v99, v100, 0);
      v49 = v99;
      v48 = v100;
      if ((v55 & 1) != 0)
        goto LABEL_31;
      v50 += 2;
      ++v51;
      if (v21 == v43)
        goto LABEL_6;
    }
    __break(1u);
    goto LABEL_47;
  }
  v57 = 1;
LABEL_34:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v57, 1, v6);
  v58 = swift_bridgeObjectRelease(v100);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48))(v5, 1, v6, v58) == 1)
  {
    sub_1000051EC((uint64_t)v5, &qword_1005D72D0);
    if (qword_1005D2068 == -1)
    {
LABEL_36:
      v59 = type metadata accessor for Logger(0);
      v60 = sub_100056D88(v59, (uint64_t)qword_1005F5FF8);
      v61 = Logger.logObject.getter(v60);
      v62 = static os_log_type_t.default.getter(v61);
      if (os_log_type_enabled(v61, v62))
      {
        v63 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v63 = 0;
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "ðŸ§­ FMFindingExperiencePresenter: Received item group update but current item is missing from the set.", v63, 2u);
        swift_slowDealloc(v63, -1, -1);
      }

      swift_release(v21);
      return;
    }
LABEL_47:
    swift_once(&qword_1005D2068, sub_1003CB878);
    goto LABEL_36;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v5, v6);
  if (qword_1005D2068 != -1)
    swift_once(&qword_1005D2068, sub_1003CB878);
  v64 = type metadata accessor for Logger(0);
  sub_100056D88(v64, (uint64_t)qword_1005F5FF8);
  v65 = v87;
  v66 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 16))(v87, v15, v6);
  v67 = Logger.logObject.getter(v66);
  v68 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v67, v68))
  {
    v69 = swift_slowAlloc(12, -1);
    v93 = v7;
    v70 = (uint8_t *)v69;
    v100 = (_QWORD *)swift_slowAlloc(32, -1);
    v102 = v100;
    *(_DWORD *)v70 = 136315138;
    v99 = v70 + 4;
    v71 = FMIPItemGroup.groupedItemIdentifiers.getter();
    v72 = v21;
    v73 = sub_100053F2C(&qword_1005D72D8);
    v74 = sub_10003F774((unint64_t *)&unk_1005D72E0, &qword_1005D72D8, (uint64_t)&protocol conformance descriptor for Set<A>);
    v75 = Set.description.getter(v71, v73, v74);
    v77 = v76;
    swift_bridgeObjectRelease(v71);
    v78 = v75;
    v21 = v72;
    v101 = sub_100056DA0(v78, v77, (uint64_t *)&v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102);
    v79 = swift_bridgeObjectRelease(v77);
    v80 = *(void (**)(char *, uint64_t, __n128))(v93 + 8);
    v80(v65, v6, v79);
    _os_log_impl((void *)&_mh_execute_header, v67, v68, "ðŸ§­ FMFindingExperiencePresenter: Received item group update and forwarding group status: %s", v70, 0xCu);
    v81 = v100;
    swift_arrayDestroy(v100, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v81, -1, -1);
    swift_slowDealloc(v70, -1, -1);
  }
  else
  {
    v80 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
    ((void (*)(char *, uint64_t))v80)(v65, v6);
  }

  v82 = v88;
  v83 = FMIPItemGroup.groupedItemIdentifiers.getter();
  dispatch thunk of FMFindingSession.update(groupedItemIdentifiers:)();
  swift_release(v21);
  v84 = swift_bridgeObjectRelease(v83);
  v80(v82, v6, v84);
}

uint64_t sub_100133F78(__int16 a1, unint64_t a2, char a3)
{
  unint64_t v6;
  id v7;
  id v8;
  _BOOL4 v9;
  id v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  int v15;
  int v16;
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  unint64_t v27;
  _BOOL4 v28;
  int v29;
  int v30;
  int v32;
  int v33;
  unint64_t v34;
  char v35;
  _BOOL4 v36;
  int v37;
  uint64_t v38;

  v6 = a1 & 0x80;
  type metadata accessor for FMConnectionManager(0);
  if ((static FMConnectionManager.hostSupportsRanging.getter() & 1) != 0)
  {
    v7 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v8 = objc_msgSend(v7, "userInterfaceIdiom");

    v9 = v8 != (id)1;
  }
  else
  {
    v9 = 0;
  }
  v34 = v6;
  v36 = v6 != 0;
  v10 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v11 = objc_msgSend(v10, "userInterfaceIdiom");

  v12 = a1 & 0x400;
  v13 = a1 & 0x800;
  v35 = a3;
  if ((a2 & 0x20) != 0)
  {
    if (!v9 || (a1 & 0x400) == 0)
    {
      if (v11 == (id)1 || (a1 & 0x800) == 0)
      {
LABEL_35:
        v15 = 0;
        v16 = 0;
        v19 = 0;
        LODWORD(v20) = 1;
        goto LABEL_37;
      }
      goto LABEL_31;
    }
    if (v11 == (id)1 || (a1 & 0x800) == 0)
    {
LABEL_32:
      v16 = 1;
      if ((a3 & 1) != 0)
      {
        v15 = 0;
        goto LABEL_34;
      }
      goto LABEL_35;
    }
    goto LABEL_17;
  }
  if ((a1 & 0x400) == 0 || !v9)
  {
    if (v11 == (id)1 || v13 == 0 || (a2 & 0x40) == 0)
    {
      v15 = 0;
      v16 = 0;
      v19 = 0;
      v20 = (a2 >> 6) & 1;
      goto LABEL_37;
    }
    goto LABEL_31;
  }
  if ((a2 & 0x40) != 0)
  {
    if (v11 == (id)1 || (a1 & 0x800) == 0)
      goto LABEL_32;
LABEL_17:
    if ((a3 & 1) != 0)
    {
      v15 = 1;
      v16 = 1;
LABEL_34:
      v36 = 0;
      LODWORD(v20) = 1;
      v19 = 1;
      goto LABEL_37;
    }
LABEL_31:
    v16 = 0;
    v15 = 1;
    goto LABEL_34;
  }
  v15 = 0;
  LODWORD(v20) = 0;
  v16 = 0;
  v19 = 0;
LABEL_37:
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v21 = a1 & 4;
  v22 = type metadata accessor for Logger(0);
  v23 = sub_100056D88(v22, (uint64_t)qword_1005F5748);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v32 = v20;
    v26 = swift_slowAlloc(74, -1);
    *(_DWORD *)v26 = 67111936;
    v37 = v9;
    v33 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v26 + 8) = 1024;
    v37 = v12 >> 10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v26 + 14) = 1024;
    v37 = v13 >> 11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v26 + 20) = 1024;
    v37 = v34 >> 7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v26 + 26) = 1024;
    v27 = v21 >> 2;
    v37 = v21 >> 2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v26 + 32) = 1024;
    v37 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v26 + 38) = 1024;
    v37 = v35 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v26 + 44) = 1024;
    v37 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v26 + 50) = 1024;
    v37 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v26 + 56) = 1024;
    v37 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v26 + 62) = 1024;
    v28 = v36;
    v37 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v26 + 68) = 1024;
    v37 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMFindingExperiencePresenter: calculateButtonState:\n    hostSupportsR1Finding: %{BOOL}d\n    itemSupportsR1Finding: %{BOOL}d\n    itemSupportsBTFinding: %{BOOL}d\n    itemSupportsDirections: %{BOOL}d\n    itemSupportsPlaySound: %{BOOL}d\n    isConnectedOrWasNearby: %{BOOL}d\n    isR1Available: %{BOOL}d\n    canUseR1Finding: %{BOOL}d\n    canUseBTFinding: %{BOOL}d\n    showFindButton: %{BOOL}d\n    showDirectionsButton: %{BOOL}d\n    showPlaySoundButton: %{BOOL}d", (uint8_t *)v26, 0x4Au);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

    v27 = v21 >> 2;
    v28 = v36;
  }
  if (v28)
    v29 = 0x10000;
  else
    v29 = 0;
  if (v19)
    v30 = 256;
  else
    v30 = 0;
  return v29 | v27 | v30;
}

uint64_t sub_1001343A8(unsigned __int8 a1, int a2, int a3, int a4)
{
  id v8;
  id v9;
  int v10;
  id v11;
  id v12;
  int v13;

  type metadata accessor for FMConnectionManager(0);
  if ((static FMConnectionManager.hostSupportsRanging.getter() & 1) != 0)
  {
    v8 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v9 = objc_msgSend(v8, "userInterfaceIdiom");

    v10 = (v9 != (id)1) & a2 & a3 & a4;
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v12 = objc_msgSend(v11, "userInterfaceIdiom");

  if (((v12 != (id)1) & a1 & a3) != 0)
    v13 = 256;
  else
    v13 = 0;
  return v13 | v10;
}

uint64_t sub_1001344A0(char a1, char a2, char a3, char a4, uint64_t a5)
{
  char v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  int v19;
  _QWORD v21[4];
  uint64_t v22;

  v21[2] = *(_QWORD *)(a5 + 16);
  OS_dispatch_queue.sync<A>(execute:)(&v22, sub_10010C158, v21, &type metadata for Bool);
  v9 = v22;
  v10 = sub_100377510();
  if ((a4 & 1) != 0)
    v11 = v10 | a3;
  else
    v11 = v10;
  if ((a1 & 1) != 0)
    v12 = v10 | v9;
  else
    v12 = a2 & (v10 | a3);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v13 = v12 ^ 1;
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100056D88(v14, (uint64_t)qword_1005F5748);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(14, -1);
    *(_DWORD *)v18 = 67109376;
    LODWORD(v22) = v13 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, (char *)&v22 + 4);
    *(_WORD *)(v18 + 8) = 1024;
    LODWORD(v22) = (v11 ^ 1) & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, (char *)&v22 + 4);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMFindingExperiencePresenter: calculate required connectivity:\n    hasRequiredFindingConnectivity: %{BOOL}d\n    hasRequiredPlaySoundConnectivity: %{BOOL}d", (uint8_t *)v18, 0xEu);
    swift_slowDealloc(v18, -1, -1);
  }

  if ((v11 & 1) != 0)
    v19 = 0;
  else
    v19 = 256;
  return v19 & 0xFFFFFFFE | v13 & 1;
}

void sub_100134658(uint64_t a1, unint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, char a8, uint64_t a9, uint64_t a10)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  __n128 v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char v81;
  void (*v82)(char *, uint64_t);
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  _BOOL4 v88;
  char *v89;
  uint8_t *v90;
  void **v91;
  char *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  int v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint8_t *v102;
  void **v103;
  uint64_t v104;
  char *v105;
  uint64_t Strong;
  uint64_t v107;
  _QWORD *v108;
  uint64_t ObjectType;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, void *, _QWORD, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, void *);
  char *v114;
  uint64_t v115;
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  uint8_t *v119;
  void **v120;
  void *v121;
  char *v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  __n128 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v137;
  char *v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __n128 v144;
  uint64_t v145;
  __n128 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  NSObject *v156;
  os_log_type_t v157;
  uint8_t *v158;
  void **v159;
  void **v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(char *, char *, uint64_t);
  uint64_t v168;
  char *v169;
  unint64_t v170;
  void *v171;
  uint64_t v172;
  void *v173;
  void *v174;
  unint64_t v175;
  void *v176;
  void *v177;
  void *v178;
  void *v179;
  __n128 v180;
  __n128 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  __n128 v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  NSObject *v194;
  os_log_type_t v195;
  uint8_t *v196;
  void **v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  __n128 v208;
  uint64_t v209;
  uint64_t v210;
  NSObject *v211;
  os_log_type_t v212;
  uint8_t *v213;
  void **v214;
  uint64_t v215;
  uint64_t v216;
  NSObject *v217;
  os_log_type_t v218;
  uint8_t *v219;
  uint64_t v220;
  void **v221;
  void **v222;
  char v223;
  unint64_t v224;
  uint64_t v225;
  NSObject *v226;
  os_log_type_t v227;
  uint8_t *v228;
  void **v229;
  unint64_t v230;
  uint64_t v231;
  NSObject *v232;
  os_log_type_t v233;
  _BOOL4 v234;
  char *v235;
  uint8_t *v236;
  void **v237;
  void (*v238)(char *, char *, uint64_t);
  uint64_t v239;
  char *v240;
  void *v241;
  void *v242;
  void *v243;
  id v244;
  Swift::String v245;
  Swift::String v246;
  Swift::String v247;
  id v248;
  Swift::String v249;
  Swift::String v250;
  void (*v251)(char *, char *, uint64_t);
  uint64_t v252;
  char *v253;
  uint64_t v254;
  void (*v255)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v256;
  void *v257;
  uint64_t v258;
  uint64_t v259;
  NSObject *v260;
  os_log_type_t v261;
  uint8_t *v262;
  void **v263;
  void *v264;
  id v265;
  Swift::String v266;
  Swift::String v267;
  void *v268;
  id v269;
  Swift::String v270;
  Swift::String v271;
  void *v272;
  void *v273;
  NSString v274;
  NSString v275;
  id v276;
  _QWORD *v277;
  uint64_t v278;
  NSString v279;
  void *v280;
  void *v281;
  id v282;
  _QWORD *v283;
  void *v284;
  char *v285;
  NSString v286;
  void *v287;
  id v288;
  void *v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  _QWORD *v295;
  uint64_t v296;
  uint64_t v297;
  void (*v298)(char *, void *, _QWORD, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  char *v299;
  char *v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  uint64_t (*v304)(char *, uint64_t, uint64_t);
  char *v305;
  uint64_t v306;
  char *v307;
  uint64_t v308;
  char *v309;
  uint64_t v310;
  void (*v311)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v312;
  char *v313;
  uint64_t v314;
  char *v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  uint64_t v320;
  char *v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  unsigned int v332;
  uint64_t v333;
  uint64_t v334;
  _QWORD *v335;
  char *v336;
  uint64_t v337;
  uint64_t v338;
  char *v339;
  char *v340;
  uint64_t v341;
  uint64_t countAndFlagsBits;
  uint64_t v343;
  void *object;
  uint64_t v345;
  char *v346;
  unint64_t v347;
  void **aBlock;
  unint64_t v349;
  void (*v350)(uint64_t, void *);
  void *v351;
  uint64_t (*v352)(uint64_t);
  void *v353;
  uint64_t v354;
  uint64_t v355;
  char v356[8];
  Swift::String v357;
  Swift::String v358;
  Swift::String v359;
  Swift::String v360;

  object = a7;
  v339 = (char *)a6;
  v346 = a3;
  v347 = a2;
  v345 = a1;
  v12 = a8 & 1;
  v308 = type metadata accessor for FMIPProductType(0);
  v306 = *(_QWORD *)(v308 - 8);
  __chkstk_darwin(v308);
  v307 = (char *)&v300 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100053F2C(&qword_1005D7320);
  v15 = __chkstk_darwin(v14);
  v301 = (uint64_t)&v300 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v310 = (uint64_t)&v300 - v17;
  v343 = type metadata accessor for FMIPItem(0);
  v18 = *(_QWORD *)(v343 - 8);
  __chkstk_darwin(v343);
  v309 = (char *)&v300 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v314 = type metadata accessor for UUID(0);
  v318 = *(_QWORD *)(v314 - 8);
  __chkstk_darwin(v314);
  v313 = (char *)&v300 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  v22 = __chkstk_darwin(v21);
  v312 = (uint64_t)&v300 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v322 = (uint64_t)&v300 - v24;
  v25 = sub_100053F2C((uint64_t *)&unk_1005D2A50);
  v26 = __chkstk_darwin(v25);
  v302 = (char *)&v300 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v315 = (char *)&v300 - v28;
  v317 = type metadata accessor for FMIPUnknownItem(0);
  v325 = *(_QWORD *)(v317 - 8);
  __chkstk_darwin(v317);
  v319 = (char *)&v300 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100053F2C(&qword_1005D6710);
  v31 = __chkstk_darwin(v30);
  v316 = (char *)&v300 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v321 = (char *)&v300 - v33;
  v324 = type metadata accessor for FMIPDevice(0);
  v326 = *(_QWORD *)(v324 - 8);
  __chkstk_darwin(v324);
  v323 = (char *)&v300 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  __chkstk_darwin(v35);
  v335 = (char **)((char *)&v300 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = type metadata accessor for FMIPPartType(0);
  v341 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v328 = (char *)&v300 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v338 = sub_100053F2C(&qword_1005D7328);
  __chkstk_darwin(v338);
  countAndFlagsBits = (uint64_t)&v300 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100053F2C((uint64_t *)&unk_1005D7330);
  v41 = __chkstk_darwin(v40);
  v329 = (uint64_t)&v300 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __chkstk_darwin(v41);
  v45 = (char *)&v300 - v44;
  __chkstk_darwin(v43);
  v340 = (char *)&v300 - v46;
  v47 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v48 = __chkstk_darwin(v47);
  v300 = (char *)&v300 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __chkstk_darwin(v48);
  v305 = (char *)&v300 - v51;
  v52 = __chkstk_darwin(v50);
  v54 = (char *)&v300 - v53;
  __chkstk_darwin(v52);
  v56 = (char *)&v300 - v55;
  v57 = swift_allocObject(&unk_100547DF8, 72, 7);
  *(_QWORD *)(v57 + 16) = a4;
  *(_QWORD *)(v57 + 24) = a5;
  v58 = a5;
  v59 = v339;
  v60 = object;
  *(_QWORD *)(v57 + 32) = v339;
  *(_QWORD *)(v57 + 40) = v60;
  v332 = v12;
  *(_BYTE *)(v57 + 48) = v12;
  v333 = a9;
  *(_QWORD *)(v57 + 56) = a9;
  *(_QWORD *)(v57 + 64) = a10;
  v337 = v57;
  v327 = *(_QWORD *)&v346[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_mediator];
  v61 = *(_QWORD *)(v327 + 24);
  v330 = a4;
  v331 = v58;
  sub_1000A190C(a4, v58);
  v336 = v59;
  v334 = a10;
  swift_bridgeObjectRetain(a10);
  v62 = swift_retain(v61);
  v63 = FMIPManager.items.getter(v62);
  v64 = v347;
  swift_bridgeObjectRetain(v347);
  v65 = sub_100114030(v63, v345, v64);
  v320 = 0;
  swift_bridgeObjectRelease(v63);
  v66 = swift_bridgeObjectRelease(v64);
  if (v65[2])
  {
    v67 = v343;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v18 + 16))(v56, (unint64_t)v65+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), v343, v66);
    v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v69 = v56;
    v70 = 0;
  }
  else
  {
    v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v69 = v56;
    v70 = 1;
    v67 = v343;
  }
  v311 = v68;
  v68((uint64_t)v69, v70, 1, v67);
  swift_release(v61);
  swift_bridgeObjectRelease(v65);
  v339 = v56;
  sub_100007464((uint64_t)v56, (uint64_t)v54, (uint64_t *)&unk_1005D3AA0);
  v304 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v71 = v304(v54, 1, v67);
  v303 = v18;
  if ((_DWORD)v71 == 1)
  {
    sub_1000051EC((uint64_t)v54, (uint64_t *)&unk_1005D3AA0);
    v72 = (uint64_t)v340;
    v73 = v341;
    v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v341 + 56);
    v74(v340, 1, 1, v37);
  }
  else
  {
    v72 = (uint64_t)v340;
    FMIPItem.partType.getter(v71);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v54, v67);
    v73 = v341;
    v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v341 + 56);
    v74((char *)v72, 0, 1, v37);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v73 + 104))(v45, enum case for FMIPPartType.case(_:), v37);
  v74(v45, 0, 1, v37);
  v75 = countAndFlagsBits;
  v76 = countAndFlagsBits + *(int *)(v338 + 48);
  sub_100007464(v72, countAndFlagsBits, (uint64_t *)&unk_1005D7330);
  sub_100007464((uint64_t)v45, v76, (uint64_t *)&unk_1005D7330);
  v77 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
  if (v77(v75, 1, v37) == 1)
  {
    sub_1000051EC((uint64_t)v45, (uint64_t *)&unk_1005D7330);
    sub_1000051EC(v72, (uint64_t *)&unk_1005D7330);
    if (v77(v76, 1, v37) == 1)
    {
      sub_1000051EC(v75, (uint64_t *)&unk_1005D7330);
LABEL_14:
      v83 = v347;
      if (qword_1005D2068 != -1)
        swift_once(&qword_1005D2068, sub_1003CB878);
      v84 = type metadata accessor for Logger(0);
      sub_100056D88(v84, (uint64_t)qword_1005F5FF8);
      v85 = swift_bridgeObjectRetain_n(v83, 2);
      v86 = Logger.logObject.getter(v85);
      v87 = static os_log_type_t.default.getter(v86);
      v88 = os_log_type_enabled(v86, v87);
      v89 = v336;
      if (v88)
      {
        v90 = (uint8_t *)swift_slowAlloc(12, -1);
        v91 = (void **)swift_slowAlloc(32, -1);
        aBlock = v91;
        *(_DWORD *)v90 = 136315138;
        swift_bridgeObjectRetain(v83);
        v355 = sub_100056DA0(v345, v83, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v355, v356);
        swift_bridgeObjectRelease_n(v83, 3);
        _os_log_impl((void *)&_mh_execute_header, v86, v87, "FMFindingExperiencePresenter: Safety warning for beacon %s not required, this part type does not require a warning.", v90, 0xCu);
        swift_arrayDestroy(v91, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v91, -1, -1);
        swift_slowDealloc(v90, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v83, 2);
      }
      v104 = v337;
      v105 = &v89[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_delegate];
      Strong = swift_unknownObjectWeakLoadStrong(&v89[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_delegate]);
      if (!Strong)
        goto LABEL_38;
      v107 = Strong;
      v108 = (_QWORD *)*((_QWORD *)v105 + 1);
      ObjectType = swift_getObjectType(Strong);
      v110 = (_QWORD *)swift_allocObject(&unk_100547F38, 40, 7);
      v111 = v330;
      v112 = v331;
      v110[2] = v330;
      v110[3] = v112;
      v110[4] = v89;
      v113 = (void (*)(char *, void *, _QWORD, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, void *))v108[3];
      sub_1000A190C(v111, v112);
      v114 = v89;
      v360._object = v108;
LABEL_37:
      v113(v114, object, v332, v333, v334, sub_1001380FC, v110, ObjectType, v360._object);
      swift_release(v110);
      swift_unknownObjectRelease(v107);
LABEL_38:
      sub_1000051EC((uint64_t)v339, (uint64_t *)&unk_1005D3AA0);
      v127 = v104;
LABEL_39:
      swift_release(v127);
      return;
    }
    goto LABEL_12;
  }
  v78 = v329;
  sub_100007464(v75, v329, (uint64_t *)&unk_1005D7330);
  if (v77(v76, 1, v37) == 1)
  {
    sub_1000051EC((uint64_t)v45, (uint64_t *)&unk_1005D7330);
    sub_1000051EC(v72, (uint64_t *)&unk_1005D7330);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v78, v37);
LABEL_12:
    sub_1000051EC(v75, &qword_1005D7328);
    goto LABEL_18;
  }
  v79 = v328;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v328, v76, v37);
  v80 = sub_100008000((unint64_t *)&unk_1005D7340, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPartType, (uint64_t)&protocol conformance descriptor for FMIPPartType);
  v81 = dispatch thunk of static Equatable.== infix(_:_:)(v78, v79, v37, v80);
  v82 = *(void (**)(char *, uint64_t))(v73 + 8);
  v82(v79, v37);
  sub_1000051EC((uint64_t)v45, (uint64_t *)&unk_1005D7330);
  sub_1000051EC(v72, (uint64_t *)&unk_1005D7330);
  v82((char *)v78, v37);
  sub_1000051EC(v75, (uint64_t *)&unk_1005D7330);
  if ((v81 & 1) != 0)
    goto LABEL_14;
LABEL_18:
  v92 = v346;
  v93 = (uint64_t)&v346[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode];
  swift_beginAccess(&v346[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedMode], &v355, 0, 0);
  v94 = v335;
  sub_100007464(v93, (uint64_t)v335, (uint64_t *)&unk_1005D72C0);
  v95 = type metadata accessor for FindingMode(0);
  v96 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 48))(v94, 1, v95);
  v97 = v347;
  if (v96 == 1)
  {
    sub_1000051EC((uint64_t)v94, (uint64_t *)&unk_1005D72C0);
LABEL_30:
    if (qword_1005D2068 != -1)
      swift_once(&qword_1005D2068, sub_1003CB878);
    v115 = type metadata accessor for Logger(0);
    sub_100056D88(v115, (uint64_t)qword_1005F5FF8);
    v116 = swift_bridgeObjectRetain_n(v97, 2);
    v117 = Logger.logObject.getter(v116);
    v118 = static os_log_type_t.default.getter(v117);
    if (os_log_type_enabled(v117, v118))
    {
      v119 = (uint8_t *)swift_slowAlloc(12, -1);
      v120 = (void **)swift_slowAlloc(32, -1);
      aBlock = v120;
      *(_DWORD *)v119 = 136315138;
      swift_bridgeObjectRetain(v97);
      v354 = sub_100056DA0(v345, v97, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v354, &v355);
      swift_bridgeObjectRelease_n(v97, 3);
      _os_log_impl((void *)&_mh_execute_header, v117, v118, "FMFindingExperiencePresenter: Safety warning for beacon %s not required, this is R1 finding.", v119, 0xCu);
      swift_arrayDestroy(v120, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v120, -1, -1);
      swift_slowDealloc(v119, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v97, 2);
    }
    v104 = v337;
    v121 = v336;
    v122 = &v336[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_delegate];
    v123 = swift_unknownObjectWeakLoadStrong(&v336[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_delegate]);
    if (!v123)
      goto LABEL_38;
    v107 = v123;
    v124 = (_QWORD *)*((_QWORD *)v122 + 1);
    ObjectType = swift_getObjectType(v123);
    v110 = (_QWORD *)swift_allocObject(&unk_100547E20, 40, 7);
    v125 = v330;
    v126 = v331;
    v110[2] = v330;
    v110[3] = v126;
    v110[4] = v121;
    v113 = (void (*)(char *, void *, _QWORD, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, void *))v124[3];
    sub_1000A190C(v125, v126);
    v114 = v121;
    v360._object = v124;
    goto LABEL_37;
  }
  if (swift_getEnumCaseMultiPayload(v94, v95) != 1)
  {
    sub_10004FCB8((uint64_t)v94, type metadata accessor for FindingMode);
    goto LABEL_30;
  }
  swift_release(*v94);
  if ((v92[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_confirmedSafetyWarning] & 1) != 0)
  {
    if (qword_1005D2068 != -1)
      swift_once(&qword_1005D2068, sub_1003CB878);
    v98 = type metadata accessor for Logger(0);
    sub_100056D88(v98, (uint64_t)qword_1005F5FF8);
    v99 = swift_bridgeObjectRetain_n(v97, 2);
    v100 = Logger.logObject.getter(v99);
    v101 = static os_log_type_t.default.getter(v100);
    if (os_log_type_enabled(v100, v101))
    {
      v102 = (uint8_t *)swift_slowAlloc(12, -1);
      v103 = (void **)swift_slowAlloc(32, -1);
      aBlock = v103;
      *(_DWORD *)v102 = 136315138;
      swift_bridgeObjectRetain(v97);
      v354 = sub_100056DA0(v345, v97, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v354, &v355);
      swift_bridgeObjectRelease_n(v97, 3);
      _os_log_impl((void *)&_mh_execute_header, v100, v101, "FMFindingExperiencePresenter: Safety warning for beacon %s was already presented, ignoring.", v102, 0xCu);
      swift_arrayDestroy(v103, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v103, -1, -1);
      swift_slowDealloc(v102, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v97, 2);
    }
    v104 = v337;
    v137 = v336;
    v138 = &v336[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_delegate];
    v139 = swift_unknownObjectWeakLoadStrong(&v336[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_delegate]);
    if (!v139)
      goto LABEL_38;
    v107 = v139;
    v140 = (_QWORD *)*((_QWORD *)v138 + 1);
    ObjectType = swift_getObjectType(v139);
    v110 = (_QWORD *)swift_allocObject(&unk_100547F10, 40, 7);
    v141 = v330;
    v142 = v331;
    v110[2] = v330;
    v110[3] = v142;
    v110[4] = v137;
    v113 = (void (*)(char *, void *, _QWORD, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, void *))v140[3];
    sub_1000A190C(v141, v142);
    v114 = v137;
    v360._object = v140;
    goto LABEL_37;
  }
  v128 = *(_QWORD *)(v327 + 24);
  v129 = swift_retain(v128);
  v130 = FMIPManager.devices.getter(v129);
  swift_bridgeObjectRetain(v97);
  v131 = sub_10029175C(v130, v345, v97);
  swift_bridgeObjectRelease(v130);
  v132 = swift_bridgeObjectRelease(v97);
  v133 = v326;
  if (v131[2])
  {
    v134 = (uint64_t)v321;
    v135 = v324;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v326 + 16))(v321, (unint64_t)v131+ ((*(unsigned __int8 *)(v326 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v326 + 80)), v324, v132);
    v136 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v133 + 56);
    v136(v134, 0, 1, v135);
  }
  else
  {
    v136 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v326 + 56);
    v134 = (uint64_t)v321;
    v135 = v324;
    v136((uint64_t)v321, 1, 1, v324);
  }
  v143 = v325;
  swift_release(v128);
  v144 = swift_bridgeObjectRelease(v131);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v133 + 48))(v134, 1, v135, v144) == 1)
  {
    sub_1000051EC(v134, &qword_1005D6710);
    v145 = v322;
    UUID.init(uuidString:)(v345, v97, v146);
    v147 = *(_QWORD *)(v327 + 24);
    v148 = v312;
    sub_100007464(v145, v312, (uint64_t *)&unk_1005D53A0);
    v149 = v318;
    v150 = v314;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v318 + 48))(v148, 1, v314) == 1)
    {
      v151 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v143 + 56);
      v152 = (uint64_t)v315;
      v153 = v317;
      v151(v315, 1, 1, v317);
      swift_retain(v147);
    }
    else
    {
      v161 = v313;
      (*(void (**)(char *, uint64_t, uint64_t))(v149 + 32))(v313, v148, v150);
      v162 = swift_retain(v147);
      v163 = FMIPManager.unknownItems.getter(v162);
      __chkstk_darwin(v163);
      v360._object = v161;
      v165 = sub_1003DBD90(sub_1001381B0, (uint64_t)(&v300 - 4), v164);
      v166 = v165;
      v153 = v317;
      if (*(_QWORD *)(v165 + 16))
      {
        v152 = (uint64_t)v315;
        (*(void (**)(char *, unint64_t, uint64_t))(v143 + 16))(v315, v165 + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80)), v317);
        v151 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v143 + 56);
        v151((char *)v152, 0, 1, v153);
      }
      else
      {
        v151 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v143 + 56);
        v152 = (uint64_t)v315;
        v151(v315, 1, 1, v317);
      }
      v180 = swift_bridgeObjectRelease(v166);
      (*(void (**)(char *, uint64_t, __n128))(v318 + 8))(v313, v150, v180);
    }
    sub_1000051EC(v322, (uint64_t *)&unk_1005D53A0);
    v181 = swift_release(v147);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v143 + 48))(v152, 1, v153, v181) == 1)
    {
      sub_1000051EC(v152, (uint64_t *)&unk_1005D2A50);
      v182 = *(_QWORD *)(v327 + 24);
      v183 = swift_retain(v182);
      v184 = FMIPManager.items.getter(v183);
      v97 = v347;
      swift_bridgeObjectRetain(v347);
      v185 = sub_100114030(v184, v345, v97);
      swift_bridgeObjectRelease(v184);
      v186 = swift_bridgeObjectRelease(v97);
      if (v185[2])
      {
        v187 = v303;
        v188 = (uint64_t)v305;
        v189 = v343;
        (*(void (**)(char *, unint64_t, uint64_t, __n128))(v303 + 16))(v305, (unint64_t)v185+ ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80)), v343, v186);
        v190 = 0;
      }
      else
      {
        v190 = 1;
        v189 = v343;
        v187 = v303;
        v188 = (uint64_t)v305;
      }
      v311(v188, v190, 1, v189);
      swift_release(v182);
      v208 = swift_bridgeObjectRelease(v185);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v304)(v188, 1, v189, v208) == 1)
      {
        sub_1000051EC(v188, (uint64_t *)&unk_1005D3AA0);
        if (qword_1005D1DE8 != -1)
          swift_once(&qword_1005D1DE8, sub_100005ADC);
        v209 = type metadata accessor for Logger(0);
        sub_100056D88(v209, (uint64_t)qword_1005F5748);
        v210 = swift_bridgeObjectRetain_n(v97, 2);
        v211 = Logger.logObject.getter(v210);
        v212 = static os_log_type_t.default.getter(v211);
        if (os_log_type_enabled(v211, v212))
        {
          v213 = (uint8_t *)swift_slowAlloc(12, -1);
          v214 = (void **)swift_slowAlloc(32, -1);
          aBlock = v214;
          *(_DWORD *)v213 = 136315138;
          swift_bridgeObjectRetain(v97);
          v354 = sub_100056DA0(v345, v97, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v354, &v355);
          swift_bridgeObjectRelease_n(v97, 3);
          _os_log_impl((void *)&_mh_execute_header, v211, v212, "FMFindingExperiencePresenter: Unknown entity for beacon  %s, showing generic version of the alert.", v213, 0xCu);
          swift_arrayDestroy(v214, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v214, -1, -1);
          swift_slowDealloc(v213, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v97, 2);
        }
        aBlock = 0;
        v349 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v349);
        v243 = (void *)objc_opt_self(NSBundle);
        v244 = objc_msgSend(v243, "mainBundle");
        v245._countAndFlagsBits = 0xD00000000000002FLL;
        v357._countAndFlagsBits = 0xD000000000000041;
        v360._object = (void *)0x80000001004ADD40;
        v245._object = (void *)0x80000001004ADD10;
        v246._countAndFlagsBits = 0;
        v246._object = (void *)0xE000000000000000;
        v247 = NSLocalizedString(_:tableName:bundle:value:comment:)(v245, (Swift::String_optional)0, (NSBundle)v244, v246, v357);
        countAndFlagsBits = v247._countAndFlagsBits;
        object = v247._object;

        aBlock = 0;
        v349 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        v248 = objc_msgSend(v243, "mainBundle", swift_bridgeObjectRelease(v349).n128_f64[0]);
        v249._countAndFlagsBits = 0xD000000000000031;
        v358._countAndFlagsBits = 0xD000000000000043;
        v360._object = (void *)0x80000001004ADDD0;
        v249._object = (void *)0x80000001004ADD90;
        v250._countAndFlagsBits = 0;
        v250._object = (void *)0xE000000000000000;
        v179 = NSLocalizedString(_:tableName:bundle:value:comment:)(v249, (Swift::String_optional)0, (NSBundle)v248, v250, v358)._object;

      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v187 + 32))(v309, v188, v189);
        if (qword_1005D1DE8 != -1)
          swift_once(&qword_1005D1DE8, sub_100005ADC);
        v215 = type metadata accessor for Logger(0);
        sub_100056D88(v215, (uint64_t)qword_1005F5748);
        v216 = swift_bridgeObjectRetain_n(v97, 2);
        v217 = Logger.logObject.getter(v216);
        v218 = static os_log_type_t.default.getter(v217);
        if (os_log_type_enabled(v217, v218))
        {
          v219 = (uint8_t *)swift_slowAlloc(12, -1);
          v220 = v187;
          v221 = (void **)swift_slowAlloc(32, -1);
          aBlock = v221;
          *(_DWORD *)v219 = 136315138;
          swift_bridgeObjectRetain(v97);
          v354 = sub_100056DA0(v345, v97, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v354, &v355);
          swift_bridgeObjectRelease_n(v97, 3);
          _os_log_impl((void *)&_mh_execute_header, v217, v218, "FMFindingExperiencePresenter: Found item matching %s, showing item version of the alert.", v219, 0xCu);
          swift_arrayDestroy(v221, 1, (char *)&type metadata for Any + 8);
          v222 = v221;
          v187 = v220;
          swift_slowDealloc(v222, -1, -1);
          swift_slowDealloc(v219, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v97, 2);
        }
        v251 = *(void (**)(char *, char *, uint64_t))(v187 + 16);
        v252 = (uint64_t)v300;
        v253 = v309;
        v254 = v343;
        v251(v300, v309, v343);
        v255 = v311;
        v311(v252, 0, 1, v254);
        countAndFlagsBits = sub_1001DDE9C(0xD000000000000026, (void *)0x80000001004ADEF0, v252);
        object = v256;
        sub_1000051EC(v252, (uint64_t *)&unk_1005D3AA0);
        v251((char *)v252, v253, v254);
        v255(v252, 0, 1, v254);
        sub_1001DDE9C(0xD000000000000028, (void *)0x80000001004ADF20, v252);
        v179 = v257;
        sub_1000051EC(v252, (uint64_t *)&unk_1005D3AA0);
        (*(void (**)(char *, uint64_t))(v187 + 8))(v253, v254);
      }
      goto LABEL_95;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v143 + 32))(v319, v152, v153);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v191 = type metadata accessor for Logger(0);
    sub_100056D88(v191, (uint64_t)qword_1005F5748);
    v192 = v347;
    v193 = swift_bridgeObjectRetain_n(v347, 2);
    v194 = Logger.logObject.getter(v193);
    v195 = static os_log_type_t.default.getter(v194);
    if (os_log_type_enabled(v194, v195))
    {
      v196 = (uint8_t *)swift_slowAlloc(12, -1);
      v197 = (void **)swift_slowAlloc(32, -1);
      aBlock = v197;
      *(_DWORD *)v196 = 136315138;
      swift_bridgeObjectRetain(v192);
      v354 = sub_100056DA0(v345, v192, (uint64_t *)&aBlock);
      v153 = v317;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v354, &v355);
      swift_bridgeObjectRelease_n(v192, 3);
      _os_log_impl((void *)&_mh_execute_header, v194, v195, "FMFindingExperiencePresenter: Found unknownItem matching %s", v196, 0xCu);
      swift_arrayDestroy(v197, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v197, -1, -1);
      swift_slowDealloc(v196, -1, -1);

    }
    else
    {

      v198 = swift_bridgeObjectRelease_n(v192, 2);
    }
    v199 = (uint64_t)v307;
    FMIPUnknownItem.productType.getter(v198);
    v200 = v306;
    v201 = v308;
    v202 = (*(uint64_t (**)(uint64_t, uint64_t))(v306 + 88))(v199, v308);
    v203 = v325;
    if (v202 == enum case for FMIPProductType.hawkeye(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v200 + 96))(v199, v201);
      v204 = v310;
      sub_100138164(v199, v310);
      v205 = v301;
      sub_100007464(v204, v301, &qword_1005D7320);
      v206 = type metadata accessor for FMIPHawkeyeProductInformation(0);
      v207 = *(_QWORD *)(v206 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v207 + 48))(v205, 1, v206) == 1)
      {
        sub_1000051EC(v205, &qword_1005D7320);
LABEL_85:
        if (qword_1005D2068 != -1)
          swift_once(&qword_1005D2068, sub_1003CB878);
        sub_100056D88(v191, (uint64_t)qword_1005F5FF8);
        v230 = v347;
        v231 = swift_bridgeObjectRetain_n(v347, 2);
        v232 = Logger.logObject.getter(v231);
        v233 = static os_log_type_t.default.getter(v232);
        v234 = os_log_type_enabled(v232, v233);
        v235 = v336;
        if (v234)
        {
          v236 = (uint8_t *)swift_slowAlloc(12, -1);
          v237 = (void **)swift_slowAlloc(32, -1);
          aBlock = v237;
          *(_DWORD *)v236 = 136315138;
          swift_bridgeObjectRetain(v230);
          v354 = sub_100056DA0(v345, v230, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v354, &v355);
          swift_bridgeObjectRelease_n(v230, 3);
          swift_arrayDestroy(v237, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v237, -1, -1);
          swift_slowDealloc(v236, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v230, 2);
        }
        v104 = v337;
        v290 = &v235[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_delegate];
        v291 = swift_unknownObjectWeakLoadStrong(&v235[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_delegate]);
        if (v291)
        {
          v292 = v291;
          v293 = *((_QWORD *)v290 + 1);
          v294 = swift_getObjectType(v291);
          v295 = (_QWORD *)swift_allocObject(&unk_100547EE8, 40, 7);
          v296 = v330;
          v297 = v331;
          v295[2] = v330;
          v295[3] = v297;
          v295[4] = v235;
          v298 = *(void (**)(char *, void *, _QWORD, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v293 + 24);
          sub_1000A190C(v296, v297);
          v299 = v235;
          v298(v299, object, v332, v333, v334, sub_1001380FC, v295, v294, v293);
          swift_release(v295);
          swift_unknownObjectRelease(v292);
        }
        sub_1000051EC(v310, &qword_1005D7320);
        (*(void (**)(char *, uint64_t))(v203 + 8))(v319, v317);
        goto LABEL_38;
      }
      v223 = FMIPHawkeyeProductInformation.requiresAudioSafetyAlert.getter();
      (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v205, v206);
      if ((v223 & 1) == 0)
        goto LABEL_85;
      sub_1000051EC(v310, &qword_1005D7320);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v199, v201);
    }
    v224 = v347;
    v225 = swift_bridgeObjectRetain_n(v347, 2);
    v226 = Logger.logObject.getter(v225);
    v227 = static os_log_type_t.default.getter(v226);
    if (os_log_type_enabled(v226, v227))
    {
      v228 = (uint8_t *)swift_slowAlloc(12, -1);
      v229 = (void **)swift_slowAlloc(32, -1);
      aBlock = v229;
      *(_DWORD *)v228 = 136315138;
      swift_bridgeObjectRetain(v224);
      v354 = sub_100056DA0(v345, v224, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v354, &v355);
      swift_bridgeObjectRelease_n(v224, 3);
      _os_log_impl((void *)&_mh_execute_header, v226, v227, "FMFindingExperiencePresenter: Found unknownItem matching %s, showing unknownItem version of the alert.", v228, 0xCu);
      swift_arrayDestroy(v229, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v229, -1, -1);
      swift_slowDealloc(v228, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v224, 2);
    }
    v238 = *(void (**)(char *, char *, uint64_t))(v203 + 16);
    v239 = (uint64_t)v302;
    v240 = v319;
    v238(v302, v319, v153);
    v151((char *)v239, 0, 1, v153);
    countAndFlagsBits = sub_1001DDE78(0xD000000000000026, (void *)0x80000001004ADEF0, v239);
    object = v241;
    sub_1000051EC(v239, (uint64_t *)&unk_1005D2A50);
    v238((char *)v239, v240, v153);
    v151((char *)v239, 0, 1, v153);
    sub_1001DDE78(0xD000000000000028, (void *)0x80000001004ADF20, v239);
    v179 = v242;
    sub_1000051EC(v239, (uint64_t *)&unk_1005D2A50);
    (*(void (**)(char *, uint64_t))(v203 + 8))(v240, v153);
    v97 = v347;
    goto LABEL_95;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v133 + 32))(v323, v134, v135);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v154 = type metadata accessor for Logger(0);
  sub_100056D88(v154, (uint64_t)qword_1005F5748);
  v155 = swift_bridgeObjectRetain_n(v97, 2);
  v156 = Logger.logObject.getter(v155);
  v157 = static os_log_type_t.default.getter(v156);
  if (os_log_type_enabled(v156, v157))
  {
    v158 = (uint8_t *)swift_slowAlloc(12, -1);
    v159 = (void **)swift_slowAlloc(32, -1);
    aBlock = v159;
    *(_DWORD *)v158 = 136315138;
    swift_bridgeObjectRetain(v97);
    v354 = sub_100056DA0(v345, v97, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v354, &v355);
    swift_bridgeObjectRelease_n(v97, 3);
    _os_log_impl((void *)&_mh_execute_header, v156, v157, "FMFindingExperiencePresenter: Found device matching %s, showing device version of the alert.", v158, 0xCu);
    swift_arrayDestroy(v159, 1, (char *)&type metadata for Any + 8);
    v160 = v159;
    v135 = v324;
    swift_slowDealloc(v160, -1, -1);
    swift_slowDealloc(v158, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v97, 2);
  }
  v167 = *(void (**)(char *, char *, uint64_t))(v133 + 16);
  v168 = (uint64_t)v316;
  v169 = v323;
  v167(v316, v323, v135);
  v136(v168, 0, 1, v135);
  sub_1001DF49C(0xD000000000000026, (void *)0x80000001004ADEF0, v168, (uint64_t *)&aBlock);
  v170 = v349;
  v171 = v351;
  v172 = v135;
  v173 = v353;
  countAndFlagsBits = sub_1001DF760((uint64_t)aBlock, (void *)v349, (uint64_t)v350, v351, (uint64_t)v352, v353);
  object = v174;
  swift_bridgeObjectRelease(v170);
  swift_bridgeObjectRelease(v171);
  swift_bridgeObjectRelease(v173);
  sub_1000051EC(v168, &qword_1005D6710);
  v167((char *)v168, v169, v172);
  v136(v168, 0, 1, v172);
  sub_1001DF49C(0xD000000000000028, (void *)0x80000001004ADF20, v168, (uint64_t *)&aBlock);
  v175 = v349;
  v176 = v351;
  v177 = v353;
  sub_1001DF760((uint64_t)aBlock, (void *)v349, (uint64_t)v350, v351, (uint64_t)v352, v353);
  v179 = v178;
  swift_bridgeObjectRelease(v175);
  swift_bridgeObjectRelease(v176);
  swift_bridgeObjectRelease(v177);
  sub_1000051EC(v168, &qword_1005D6710);
  (*(void (**)(char *, uint64_t))(v326 + 8))(v169, v172);
LABEL_95:
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v258 = type metadata accessor for Logger(0);
  sub_100056D88(v258, (uint64_t)qword_1005F5748);
  v259 = swift_bridgeObjectRetain_n(v97, 2);
  v260 = Logger.logObject.getter(v259);
  v261 = static os_log_type_t.default.getter(v260);
  if (os_log_type_enabled(v260, v261))
  {
    v262 = (uint8_t *)swift_slowAlloc(12, -1);
    v263 = (void **)swift_slowAlloc(32, -1);
    aBlock = v263;
    *(_DWORD *)v262 = 136315138;
    swift_bridgeObjectRetain(v97);
    v354 = sub_100056DA0(v345, v97, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v354, &v355);
    swift_bridgeObjectRelease_n(v97, 3);
    _os_log_impl((void *)&_mh_execute_header, v260, v261, "FMFindingExperiencePresenter: Showing safety warning for beacon %s", v262, 0xCu);
    swift_arrayDestroy(v263, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v263, -1, -1);
    swift_slowDealloc(v262, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v97, 2);
  }
  aBlock = 0;
  v349 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v349);
  v264 = (void *)objc_opt_self(NSBundle);
  v265 = objc_msgSend(v264, "mainBundle");
  v266._countAndFlagsBits = 0xD00000000000001FLL;
  v359._countAndFlagsBits = 0xD000000000000031;
  v360._object = (void *)0x80000001004ADE40;
  v266._object = (void *)0x80000001004ADE20;
  v267._countAndFlagsBits = 0;
  v267._object = (void *)0xE000000000000000;
  v268 = NSLocalizedString(_:tableName:bundle:value:comment:)(v266, (Swift::String_optional)0, (NSBundle)v265, v267, v359)._object;

  aBlock = 0;
  v349 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v269 = objc_msgSend(v264, "mainBundle", swift_bridgeObjectRelease(v349).n128_f64[0]);
  v270._countAndFlagsBits = 0xD000000000000021;
  v360._countAndFlagsBits = 0xD000000000000033;
  v360._object = (void *)0x80000001004ADEB0;
  v270._object = (void *)0x80000001004ADE80;
  v271._countAndFlagsBits = 0;
  v271._object = (void *)0xE000000000000000;
  v272 = NSLocalizedString(_:tableName:bundle:value:comment:)(v270, (Swift::String_optional)0, (NSBundle)v269, v271, v360)._object;

  v273 = object;
  v274 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v273);
  v275 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v179);
  v276 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v274, v275, 1);

  v277 = (_QWORD *)swift_allocObject(&unk_100547E48, 32, 7);
  v278 = v337;
  v277[2] = sub_1001380E4;
  v277[3] = v278;
  swift_retain(v278);
  v279 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v268);
  v352 = sub_100138124;
  v353 = v277;
  aBlock = _NSConcreteStackBlock;
  v349 = 1107296256;
  v350 = sub_100008B40;
  v351 = &unk_100547E60;
  v280 = _Block_copy(&aBlock);
  swift_release(v353);
  v281 = (void *)objc_opt_self(UIAlertAction);
  v282 = objc_msgSend(v281, "actionWithTitle:style:handler:", v279, 0, v280);
  _Block_release(v280);

  v283 = (_QWORD *)swift_allocObject(&unk_100547E98, 40, 7);
  v284 = v346;
  v283[2] = v346;
  v283[3] = sub_1001380E4;
  v283[4] = v278;
  swift_retain(v278);
  v285 = v284;
  v286 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v272);
  v352 = sub_100138158;
  v353 = v283;
  aBlock = _NSConcreteStackBlock;
  v349 = 1107296256;
  v350 = sub_100008B40;
  v351 = &unk_100547EB0;
  v287 = _Block_copy(&aBlock);
  v288 = objc_msgSend(v281, "actionWithTitle:style:handler:", v286, 0, v287, swift_release(v353).n128_f64[0]);
  _Block_release(v287);

  objc_msgSend(v276, "addAction:", v282);
  objc_msgSend(v276, "addAction:", v288);
  v289 = *(void **)&v285[OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedViewController];
  if (v289)
  {
    objc_msgSend(v289, "presentViewController:animated:completion:", v276, 1, 0);

    sub_1000051EC((uint64_t)v339, (uint64_t *)&unk_1005D3AA0);
    v127 = v278;
    goto LABEL_39;
  }
  sub_1000051EC((uint64_t)v339, (uint64_t *)&unk_1005D3AA0);
  swift_release(v278);

}

uint64_t sub_100136E34(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  void *v26;
  unsigned __int16 v27;
  void (*v28)(char *, uint64_t, uint64_t);
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  int v31;
  _QWORD *v32;
  void *v33;
  void *v34;
  id v35;
  unsigned __int16 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  id v53;
  unint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  id v65;
  id v66;
  int v67;
  id v68;
  id v69;
  int v70;
  void (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  char *v79;

  v4 = type metadata accessor for FMItemCapabilities(0);
  v76 = *(_QWORD *)(v4 - 8);
  v77 = v4;
  v5 = __chkstk_darwin(v4);
  v75 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v79 = (char *)&v72 - v7;
  v8 = type metadata accessor for FMIPUnknownItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v72 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v72 - v17;
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v72 - v20;
  v22 = __chkstk_darwin(v19);
  v24 = (char *)&v72 - v23;
  v25 = (void *)FMIPUnknownItem.unknownBeacon.getter(v22);
  v78 = a2;
  v74 = v12;
  if (v25)
  {
    v26 = v25;
    v27 = (unsigned __int16)objc_msgSend(v25, "capabilities");

    v28 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v28(v24, a1, v8);
    v29 = *(void (**)(char *, uint64_t))(v9 + 8);
    v29(v24, v8);
    v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v18, a1, v8);
    if ((v27 & 0x100) == 0)
    {
LABEL_3:
      v31 = 1;
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v32 = ((_QWORD *(*)(char **__return_ptr, char *, uint64_t, uint64_t))v28)(&selRef_handleFenceTapWithGestureRecognizer_, v24, a1, v8);
  v33 = (void *)FMIPUnknownItem.unknownBeacon.getter(v32);
  if (v33)
  {
    v34 = v33;
    v35 = objc_msgSend(v33, "metadata");

    if (v35)
    {
      v36 = (unsigned __int16)objc_msgSend(v35, "capabilities");

      v28(v21, (uint64_t)v24, v8);
      v29 = *(void (**)(char *, uint64_t))(v9 + 8);
      v29(v21, v8);
      v29(v24, v8);
      v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v18, a1, v8);
      if ((v36 & 0x100) == 0)
        goto LABEL_3;
      goto LABEL_10;
    }
  }
  v73 = v15;
  v37 = ((uint64_t (*)(char *, char *, uint64_t))v28)(v21, v24, v8);
  v38 = FMIPUnknownItem.capabilities.getter(v37);
  v72 = v28;
  v39 = v75;
  static FMItemCapabilities.canR1.getter(v38);
  v40 = sub_100008000((unint64_t *)&qword_1005E3B40, (uint64_t (*)(uint64_t))&type metadata accessor for FMItemCapabilities, (uint64_t)&protocol conformance descriptor for FMItemCapabilities);
  v41 = v77;
  v42 = dispatch thunk of SetAlgebra.isSuperset(of:)(v39, v77, v40);
  v43 = *(void (**)(char *, uint64_t))(v76 + 8);
  v44 = v39;
  v28 = v72;
  v43(v44, v41);
  v43(v79, v41);
  v29 = *(void (**)(char *, uint64_t))(v9 + 8);
  v29(v21, v8);
  v29(v24, v8);
  v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v18, a1, v8);
  if ((v42 & 1) != 0)
  {
    v15 = v73;
LABEL_10:
    v31 = FMIPUnknownItem.isAppleAudioAccessory.getter(v30);
    goto LABEL_11;
  }
  v31 = 1;
  v15 = v73;
LABEL_11:
  v45 = ((uint64_t (*)(char *, uint64_t))v29)(v18, v8);
  v46 = (void *)FMIPUnknownItem.unknownBeacon.getter(v45);
  if (v46)
  {
    v47 = v46;
    v48 = (unint64_t)objc_msgSend(v46, "capabilities");

    v28(v15, a1, v8);
    v29(v15, v8);
    v49 = (v48 >> 10) & 1;
  }
  else
  {
    v50 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v15, a1, v8);
    v51 = (void *)FMIPUnknownItem.unknownBeacon.getter(v50);
    if (v51
      && (v52 = v51, v53 = objc_msgSend(v51, "metadata"), v52, v53))
    {
      v54 = (unint64_t)objc_msgSend(v53, "capabilities");

      v55 = v74;
      v28(v74, (uint64_t)v15, v8);
      v29(v55, v8);
      v29(v15, v8);
      v49 = (v54 >> 10) & 1;
    }
    else
    {
      v56 = v74;
      v57 = ((uint64_t (*)(char *, char *, uint64_t))v28)(v74, v15, v8);
      v58 = v79;
      v59 = FMIPUnknownItem.capabilities.getter(v57);
      v60 = v75;
      static FMItemCapabilities.canBTFinding.getter(v59);
      v61 = sub_100008000((unint64_t *)&qword_1005E3B40, (uint64_t (*)(uint64_t))&type metadata accessor for FMItemCapabilities, (uint64_t)&protocol conformance descriptor for FMItemCapabilities);
      v62 = v15;
      v63 = v77;
      LOBYTE(v49) = dispatch thunk of SetAlgebra.isSuperset(of:)(v60, v77, v61);
      v64 = *(void (**)(char *, uint64_t))(v76 + 8);
      v64(v60, v63);
      v64(v58, v63);
      v29(v56, v8);
      v29(v62, v8);
    }
  }
  type metadata accessor for FMConnectionManager(0);
  if ((static FMConnectionManager.hostSupportsRanging.getter() & 1) != 0)
  {
    v65 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v66 = objc_msgSend(v65, "userInterfaceIdiom");

    v67 = (v66 != (id)1) & (v31 ^ 1) & v78;
  }
  else
  {
    v67 = 0;
  }
  v68 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v69 = objc_msgSend(v68, "userInterfaceIdiom");

  if (((v69 != (id)1) & v49) != 0)
    v70 = 256;
  else
    v70 = 0;
  return v70 | v67;
}

uint64_t sub_10013739C(uint64_t a1, int a2, char a3, uint64_t a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  unsigned int v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t);
  char v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  _BYTE v27[4];
  int v28;
  uint64_t v29;

  v28 = a5;
  v29 = a4;
  v8 = type metadata accessor for FMIPItemState(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v14 = &v27[-v13];
  v15 = sub_100136E34(a1, a2);
  v16 = v15;
  v17 = (v15 >> 8) & 1;
  v18 = FMIPUnknownItem.state.getter();
  static FMIPItemState.isFirmwareUpdating.getter(v18);
  v19 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
  LOBYTE(a2) = dispatch thunk of SetAlgebra.isSuperset(of:)(v12, v8, v19);
  v20 = *(void (**)(_BYTE *, uint64_t))(v9 + 8);
  v20(v12, v8);
  v20(v14, v8);
  v21 = v17;
  LOBYTE(v17) = a3;
  v22 = sub_1001344A0(v16 & 1, v21, a2 & 1, a3, v29);
  if ((v17 & 1) != 0)
  {
    v23 = 1;
  }
  else
  {
    v24 = FMIPUnknownItem.state.getter();
    static FMIPItemState.isBTConnected.getter(v24);
    v25 = dispatch thunk of SetAlgebra.isSuperset(of:)(v12, v8, v19);
    v20(v12, v8);
    v20(v14, v8);
    v23 = v25 | v28;
  }
  return v22 & 0x100 | v22 & v23 & 1u;
}

id sub_100137548(id result, const char *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  if ((result & 1) != 0)
  {
    v4 = v2;
    if (qword_1005D2068 != -1)
      swift_once(&qword_1005D2068, sub_1003CB878);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100056D88(v5, (uint64_t)qword_1005F5FF8);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, a2, v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "ðŸ§­ FMFindingExperiencePresenter: Dismissing Finding View Controller", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    result = *(id *)(v4 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedViewController);
    if (result)
      return objc_msgSend(result, "dismissViewControllerAnimated:completion:", 1, 0);
  }
  return result;
}

void sub_1001376C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  double v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  double v49;
  _BYTE v50[16];
  uint64_t v51;
  _BYTE v52[24];

  v1 = type metadata accessor for FMFConfigValue(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v6 = __chkstk_darwin(v5);
  v48 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v46 - v8;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v46 - v15;
  v47 = v0;
  v17 = v0 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_backgroundedDate;
  swift_beginAccess(v17, v52, 0, 0);
  sub_100007464(v17, (uint64_t)v9, (uint64_t *)&unk_1005D3320);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1000051EC((uint64_t)v9, (uint64_t *)&unk_1005D3320);
    if (qword_1005D2068 != -1)
      swift_once(&qword_1005D2068, sub_1003CB878);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_100056D88(v18, (uint64_t)qword_1005F5FF8);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "ðŸ§­ FMFindingExperiencePresenter: Entering foreground. Not background date.", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

  }
  else
  {
    v46 = v17;
    v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    Date.init()(v23);
    v24 = Date.timeIntervalSince(_:)(v16);
    v25 = *(void (**)(char *, uint64_t))(v11 + 8);
    v25(v14, v10);
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FMFConfigValue.peopleFindingBackgroundedTimeout(_:), v1);
    v51 = 0x405E000000000000;
    FMFWaldoGlobalConfig<A>(_:fallback:)(&v49, v4, &v51, &type metadata for Double);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if (v49 < v24)
    {
      sub_10012A9B4();
      v27 = v26;
      swift_bridgeObjectRelease(v26);
      if (v27)
      {
        if (qword_1005D2068 != -1)
          swift_once(&qword_1005D2068, sub_1003CB878);
        v28 = type metadata accessor for Logger(0);
        v29 = sub_100056D88(v28, (uint64_t)qword_1005F5FF8);
        v30 = Logger.logObject.getter(v29);
        v31 = static os_log_type_t.default.getter(v30);
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc(12, -1);
          *(_DWORD *)v32 = 134217984;
          v49 = v24;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50);
          _os_log_impl((void *)&_mh_execute_header, v30, v31, "ðŸ§­ FMFindingExperiencePresenter: Dismissing Finding View Controller because you were backgrounded for too long. Backgrounded time: %f", v32, 0xCu);
          swift_slowDealloc(v32, -1, -1);
        }

        v34 = Logger.logObject.getter(v33);
        v35 = static os_log_type_t.default.getter(v34);
        if (os_log_type_enabled(v34, v35))
        {
          v36 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v36 = 0;
          _os_log_impl((void *)&_mh_execute_header, v34, v35, "ðŸ§­ FMFindingExperiencePresenter: Dismissing Finding View Controller", v36, 2u);
          swift_slowDealloc(v36, -1, -1);
        }

        v37 = *(void **)(v47 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_presentedViewController);
        if (v37)
          objc_msgSend(v37, "dismissViewControllerAnimated:completion:", 1, 0);
      }
    }
    if (qword_1005D2068 != -1)
      swift_once(&qword_1005D2068, sub_1003CB878);
    v38 = type metadata accessor for Logger(0);
    v39 = sub_100056D88(v38, (uint64_t)qword_1005F5FF8);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.default.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v42 = 134217984;
      v49 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "ðŸ§­ FMFindingExperiencePresenter: Reentering foreground but not dismissing Finding VC. Backgrounded time: %f", v42, 0xCu);
      swift_slowDealloc(v42, -1, -1);
    }

    v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v44 = (uint64_t)v48;
    v43(v48, 1, 1, v10);
    v45 = v46;
    swift_beginAccess(v46, &v49, 33, 0);
    sub_100099CDC(v44, v45, (uint64_t *)&unk_1005D3320);
    swift_endAccess(&v49);
    v25(v16, v10);
  }
}

uint64_t sub_100137C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v2);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1005D2068 != -1)
    swift_once(&qword_1005D2068, sub_1003CB878);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100056D88(v5, (uint64_t)qword_1005F5FF8);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "ðŸ§­ FMFindingExperiencePresenter: Entering background. Noting background time.", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  Date.init()(v10);
  v11 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 0, 1, v11);
  v12 = v1 + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_backgroundedDate;
  swift_beginAccess(v12, v15, 33, 0);
  sub_100099CDC((uint64_t)v4, v12, (uint64_t *)&unk_1005D3320);
  return swift_endAccess(v15);
}

uint64_t sub_100137DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FindingMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100137E18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100137E3C()
{
  uint64_t v0;

  return sub_100130F6C(*(_QWORD *)(v0 + 16));
}

void sub_100137E44(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  uint64_t v5;
  id v6;

  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v5 = a1;
  else
    v5 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v5);
  if (!v2)
    goto LABEL_13;
LABEL_3:
  v3 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_15:
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, a1);
    goto LABEL_8;
  }
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(a1 + 8 * v3 + 32);
LABEL_8:
    v6 = v4;
    swift_bridgeObjectRelease(a1);
    sub_10012D9F4((uint64_t)v6, "FMFindingExperiencePresenter: Received updated local device location", (void (*)(uint64_t))&dispatch thunk of FMPrecisionConnectionManager.updateLocationForLocalDevice(location:));

    return;
  }
  __break(1u);
}

uint64_t sub_100137F38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_100137F5C()
{
  uint64_t v0;

  sub_100130598(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100137F68()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100137F90()
{
  uint64_t v0;

  sub_10012E640(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100137F9C()
{
  uint64_t v0;

  sub_10012E750(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100137FA4()
{
  uint64_t v0;

  sub_10012EC4C(v0);
}

void sub_100137FAC(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10012EE04(a1, a2 & 1, a3, a4, v4);
}

uint64_t sub_100137FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;

  v1 = type metadata accessor for FindingMode(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));

  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
      break;
    case 1u:
      swift_release(*v6);
      break;
    case 2u:
      v8 = (void *)*v6;
      goto LABEL_6;
    case 3u:
      swift_release(*v6);
      v8 = (void *)v6[1];
LABEL_6:

      break;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10013809C(uint64_t a1)
{
  return sub_10013837C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, char *))sub_10012F0DC);
}

uint64_t sub_1001380A8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001380E4(uint64_t a1)
{
  uint64_t v1;

  return sub_10012EFB0(a1, *(uint64_t (**)(_QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(char **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_100138100()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100138124(uint64_t a1)
{
  uint64_t v1;

  return sub_1001300C0(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_10013812C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100138158(uint64_t a1)
{
  uint64_t v1;

  return sub_1001301A8(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_100138164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D7320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001381B0(uint64_t a1)
{
  uint64_t v1;

  return sub_1000BD8A8(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1001381D8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10013820C(char a1)
{
  uint64_t v1;
  void (*v3)(_QWORD);

  v3 = *(void (**)(_QWORD))(v1 + 16);
  if (v3)
    v3(a1 & 1);
  return sub_1001302A4(a1 & 1);
}

uint64_t sub_100138258()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100138284(uint64_t a1)
{
  uint64_t v1;

  sub_10012D978(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10013828C()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;

  v1 = type metadata accessor for FindingMode(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  v6 = (id *)((char *)v0 + v4);
  switch(swift_getEnumCaseMultiPayload((char *)v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))((char *)v0 + v4, v7);
      break;
    case 1u:
      swift_release(*v6);
      break;
    case 2u:
      v8 = (void *)*v6;
      goto LABEL_6;
    case 3u:
      swift_release(*v6);
      v8 = (void *)v6[1];
LABEL_6:

      break;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100138370(uint64_t a1)
{
  return sub_10013837C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, char *))sub_10012DBFC);
}

uint64_t sub_10013837C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, char *))
{
  char *v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FindingMode(0) - 8) + 80);
  return a2(a1, *((_QWORD *)v2 + 2), *((_QWORD *)v2 + 3), *((_QWORD *)v2 + 4), &v2[(v4 + 40) & ~v4]);
}

uint64_t sub_1001383D0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001383F4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1005D7354);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000BBF58;
  return sub_10012CE4C();
}

_OWORD *sub_100138484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD v16[3];
  uint64_t v17[2];
  __int128 v18[3];

  sub_10013B63C(a1 & 0x1010101010101, a2, a3 & 1, a4, (uint64_t)v18);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  sub_100056D88(v6, (uint64_t)qword_1005F5748);
  sub_1000B06E4((uint64_t)v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10013C308);
  v7 = sub_1000B06E4((uint64_t)v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10013C308);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v17[0] = v11;
    *(_DWORD *)v10 = 136315394;
    *(_QWORD *)&v16[0] = sub_100056DA0(0xD000000000000011, 0x80000001004ADFE0, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v16, (char *)v16 + 8);
    *(_WORD *)(v10 + 12) = 2080;
    sub_1000B0614(v18, v16);
    sub_1000B06E4((uint64_t)v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10013C308);
    v12 = String.init<A>(describing:)(v16, &type metadata for FMStewieViewModelState.ViewState);
    v14 = v13;
    *(_QWORD *)&v16[0] = sub_100056DA0(v12, v13, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v16, (char *)v16 + 8);
    swift_bridgeObjectRelease(v14);
    sub_1000B06E4((uint64_t)v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071DEC);
    sub_1000B06E4((uint64_t)v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071DEC);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMStewieViewModelState: %s - %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    sub_1000B06E4((uint64_t)v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071DEC);
    sub_1000B06E4((uint64_t)v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071DEC);
  }

  return sub_1000B0614(v18, a5);
}

double sub_1001386E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t My;
  _QWORD *v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12[5];

  v1 = v0;
  My = type metadata accessor for Feature.FindMy(0);
  v12[3] = My;
  v12[4] = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v3 = sub_10003D370(v12);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v3, enum case for Feature.FindMy.fmNiftyCurve(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(v12);
  sub_100029574(v12);
  if ((My & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v5 = type metadata accessor for Logger(0);
    sub_100056D88(v5, (uint64_t)qword_1005F5748);
    v6 = swift_retain(v1);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc(18, -1);
      v10 = swift_slowAlloc(32, -1);
      v12[0] = v10;
      *(_DWORD *)v9 = 136315394;
      v11 = sub_100056DA0(0x5574736575716572, 0xEF29286574616470, v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, v12);
      *(_WORD *)(v9 + 12) = 1024;
      LODWORD(v11) = *(unsigned __int8 *)(v1 + 48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, (char *)&v11 + 4);
      swift_release(v1);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMStewieViewModel: %s - hasActiveSubs: %{BOOL}d", (uint8_t *)v9, 0x12u);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);
    }
    else
    {
      swift_release(v1);
    }

    if ((*(_BYTE *)(v1 + 48) & 1) == 0)
      sub_100139FBC();
    return sub_100139600();
  }
  return result;
}

unint64_t sub_100138918()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const mach_header_64 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  KeyPath = swift_getKeyPath(&unk_100484B98);
  v2 = swift_getKeyPath(&unk_100484BC0);
  static Published.subscript.getter(&v12, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = 256;
  if (!BYTE1(v12))
    v3 = 0;
  v4 = v3 | v12;
  v5 = 0x10000;
  if (!BYTE2(v12))
    v5 = 0;
  v6 = 0x1000000;
  if (!BYTE3(v12))
    v6 = 0;
  v7 = v4 | v5 | v6;
  v8 = &_mh_execute_header;
  if (!BYTE4(v12))
    v8 = 0;
  v9 = 0x10000000000;
  if (!BYTE5(v12))
    v9 = 0;
  v10 = 0x1000000000000;
  if (!BYTE6(v12))
    v10 = 0;
  return v7 | (unint64_t)v8 | v9 | v10;
}

double sub_100138A0C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t My;
  _QWORD *v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32[2];
  char v33;
  void *v34;
  uint64_t v35;

  v2 = v1;
  My = type metadata accessor for Feature.FindMy(0);
  v34 = (void *)My;
  v35 = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v5 = sub_10003D370(v32);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v5, enum case for Feature.FindMy.fmNiftyCurve(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(v32);
  sub_100029574(v32);
  if ((My & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100056D88(v7, (uint64_t)qword_1005F5748);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    v30 = a1;
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v32[0] = v12;
      *(_DWORD *)v11 = 136315138;
      v31 = sub_100056DA0(0xD00000000000003BLL, 0x80000001004AE240, v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMStewieViewModel: Will %s", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    KeyPath = swift_getKeyPath(&unk_100484B98);
    v14 = swift_getKeyPath(&unk_100484BC0);
    static Published.subscript.getter(v32, v2, KeyPath, v14);
    swift_release(KeyPath);
    swift_release(v14);
    LOBYTE(v14) = v32[0];
    v15 = BYTE1(v32[0]);
    v16 = BYTE2(v32[0]);
    v17 = BYTE3(v32[0]);
    v18 = BYTE4(v32[0]);
    v19 = BYTE5(v32[0]);
    v20 = BYTE6(v32[0]);
    v21 = v34;
    v29 = swift_getKeyPath(&unk_100484B98);
    v22 = swift_getKeyPath(&unk_100484BC0);
    LOBYTE(v32[0]) = v14;
    BYTE1(v32[0]) = v15;
    BYTE2(v32[0]) = v16;
    BYTE3(v32[0]) = v17;
    BYTE4(v32[0]) = v18;
    BYTE5(v32[0]) = v19;
    BYTE6(v32[0]) = v20;
    v32[1] = 5;
    v33 = 0;
    v34 = v21;
    v23 = v21;
    swift_retain(v2);
    static Published.subscript.setter(v32, v2, v29, v22);
    sub_100138EB8();

    v24 = type metadata accessor for FMFUpdateStewieLocationAction(0);
    swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
    v25 = FMFUpdateStewieLocationAction.init(publishReason:)(2);
    v26 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 16) + 48) + 56);
    v27 = swift_allocObject(&unk_100548498, 32, 7);
    *(_QWORD *)(v27 + 16) = v30;
    *(_QWORD *)(v27 + 24) = v2;
    swift_retain(v2);
    swift_retain(v26);
    v28 = v30;
    sub_1000D421C(v25, (uint64_t)sub_10013E8FC, v27);
    swift_release(v25);
    swift_release(v26);
    *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  }
  return result;
}

uint64_t sub_100138D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_1000051EC(a1, &qword_1005D81A0);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain(v9);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_1005482E0, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, &type metadata for () + 1, &unk_1005D7488, v16);
}

void sub_100138EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t My;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];

  v1 = v0;
  My = type metadata accessor for Feature.FindMy(0);
  v17[2] = My;
  v17[3] = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v3 = sub_10003D370(&v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v3, enum case for Feature.FindMy.fmNiftyCurve(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(&v16);
  sub_100029574(&v16);
  if ((My & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v4 = type metadata accessor for Logger(0);
    sub_100056D88(v4, (uint64_t)qword_1005F5748);
    v5 = swift_retain_n(v1, 2);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc(22, -1);
      v9 = swift_slowAlloc(64, -1);
      v15 = v9;
      *(_DWORD *)v8 = 136315394;
      v16 = sub_100056DA0(0x6574617473, 0xE500000000000000, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, v17);
      *(_WORD *)(v8 + 12) = 2080;
      KeyPath = swift_getKeyPath(&unk_100484B98);
      v11 = swift_getKeyPath(&unk_100484BC0);
      static Published.subscript.getter(&v16, v1, KeyPath, v11);
      swift_release(KeyPath);
      swift_release(v11);
      v12 = String.init<A>(describing:)(&v16, &type metadata for FMStewieViewModelState);
      v14 = v13;
      v16 = sub_100056DA0(v12, v13, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, v17);
      swift_release_n(v1, 2);
      swift_bridgeObjectRelease(v14);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMStewieViewModel: %s - %s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy(v9, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

    }
    else
    {

      swift_release_n(v1, 2);
    }
  }
}

uint64_t sub_100139194(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t My;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24[2];
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[16];

  v2 = v1;
  v4 = *(_QWORD *)v1;
  v5 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v5);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMItemAger();
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  swift_allocObject(v8, 40, 7);
  *(_QWORD *)(v1 + 40) = sub_1000465C0();
  *(_BYTE *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 16) = a1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy17FMStewieViewModel__state, &v28, 33, 0);
  v24[1] = 0;
  LODWORD(v24[0]) = 0;
  *(_DWORD *)((char *)v24 + 3) = 0;
  v25 = 1;
  v26 = 0;
  swift_retain(a1);
  Published.init(initialValue:)(v24, &type metadata for FMStewieViewModelState);
  swift_endAccess(&v28);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject(&unk_100548470, 40, 7);
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v2;
  swift_retain(v2);
  v11 = sub_100377068((uint64_t)v7, (uint64_t)&unk_1005D7508, (uint64_t)v10);
  swift_release(v11);
  sub_1000051EC((uint64_t)v7, &qword_1005D81A0);
  My = type metadata accessor for Feature.FindMy(0);
  v26 = My;
  v27 = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v13 = sub_10003D370(v24);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v13, enum case for Feature.FindMy.fmNiftyCurve(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(v24);
  sub_100029574(v24);
  if ((My & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v14 = type metadata accessor for Logger(0);
    sub_100056D88(v14, (uint64_t)qword_1005F5748);
    v15 = swift_retain_n(v2, 2);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    if (!os_log_type_enabled(v16, v17))
    {

      swift_release(a1);
      swift_release_n(v2, 2);
      return v2;
    }
    v18 = swift_slowAlloc(22, -1);
    v19 = swift_slowAlloc(64, -1);
    v24[0] = v19;
    *(_DWORD *)v18 = 136315394;
    v28 = sub_100056DA0(0x64656D2874696E69, 0xEF293A726F746169, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29);
    *(_WORD *)(v18 + 12) = 2080;
    v28 = v2;
    swift_retain(v2);
    v20 = String.init<A>(describing:)(&v28, v4);
    v22 = v21;
    v28 = sub_100056DA0(v20, v21, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29);
    swift_release_n(v2, 2);
    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMStewieViewModel: %s - %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  swift_release(a1);
  return v2;
}

uint64_t sub_10013954C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_100139564, 0, 0);
}

uint64_t sub_100139564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 24) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001395CC, v2, v3);
}

uint64_t sub_1001395CC()
{
  uint64_t v0;
  double v1;

  swift_release(*(_QWORD *)(v0 + 24));
  v1 = sub_1001386E0();
  return (*(uint64_t (**)(double))(v0 + 8))(v1);
}

double sub_100139600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t My;
  _QWORD *v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[2];
  char v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  My = type metadata accessor for Feature.FindMy(0);
  v31 = My;
  v32 = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v3 = sub_10003D370(v29);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v3, enum case for Feature.FindMy.fmNiftyCurve(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(v29);
  sub_100029574(v29);
  if ((My & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100056D88(v5, (uint64_t)qword_1005F5748);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v29[0] = v10;
      *(_DWORD *)v9 = 136315138;
      v28 = sub_100056DA0(0xD00000000000002ALL, 0x80000001004AE100, v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMStewieViewModel: Will %s", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);
    }

    v11 = sub_100053F2C(&qword_1005D55E8);
    v12 = swift_allocObject(v11, 72, 7);
    *(_OWORD *)(v12 + 16) = xmmword_100481740;
    KeyPath = swift_getKeyPath(&unk_100484B98);
    v14 = swift_getKeyPath(&unk_100484BC0);
    static Published.subscript.getter(v29, v1, KeyPath, v14);
    swift_release(KeyPath);
    swift_release(v14);
    LOBYTE(KeyPath) = v29[0];
    LOBYTE(v14) = BYTE1(v29[0]);
    v15 = BYTE2(v29[0]);
    v16 = BYTE3(v29[0]);
    v17 = BYTE4(v29[0]);
    v18 = BYTE5(v29[0]);
    v19 = BYTE6(v29[0]);
    v27 = v1;
    v20 = v29[1];
    v21 = v30;
    v26 = v31;
    *(_QWORD *)(v12 + 56) = &type metadata for FMStewieViewModelState;
    *(_QWORD *)(v12 + 64) = &off_100548198;
    v22 = swift_allocObject(&unk_100548308, 48, 7);
    *(_QWORD *)(v12 + 32) = v22;
    *(_BYTE *)(v22 + 16) = KeyPath;
    *(_BYTE *)(v22 + 17) = v14;
    *(_BYTE *)(v22 + 18) = v15;
    *(_BYTE *)(v22 + 19) = v16;
    *(_BYTE *)(v22 + 20) = v17;
    *(_BYTE *)(v22 + 21) = v18;
    *(_BYTE *)(v22 + 22) = v19;
    *(_QWORD *)(v22 + 24) = v20;
    *(_BYTE *)(v22 + 32) = v21;
    *(_QWORD *)(v22 + 40) = v26;
    sub_100054D40(v12);
    swift_bridgeObjectRelease(v12);
    v23 = *(void **)(*(_QWORD *)(v27 + 16) + 16);
    v24 = swift_allocObject(&unk_100548330, 24, 7);
    swift_weakInit(v24 + 16, v27);
    v25 = v23;
    sub_10037A3D0((uint64_t)v25, v24);

    *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  }
  return result;
}

uint64_t sub_100139944(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  _BYTE v14[24];

  v4 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v8 = result;
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
    v10 = (_QWORD *)swift_allocObject(&unk_100548380, 48, 7);
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v8;
    v10[5] = a1;
    v11 = a1;
    swift_retain(v8);
    v12 = sub_100377068((uint64_t)v6, (uint64_t)&unk_1005E1960, (uint64_t)v10);
    swift_release(v8);
    swift_release(v12);
    return sub_1000051EC((uint64_t)v6, &qword_1005D81A0);
  }
  return result;
}

uint64_t sub_100139A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_100053F2C(&qword_1005D81A0);
  v5[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100139AB8, 0, 0);
}

uint64_t sub_100139AB8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64x2_t v19;
  int16x8_t v20;
  uint64_t v21;

  v2 = *(void **)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = v2;
  v6 = swift_retain(v4);
  v7 = sub_10013DA60(v6, (uint64_t)v2);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v1, 1, 1, v14);
  type metadata accessor for MainActor(0);
  v15 = v13;
  v16 = swift_retain(v3);
  v17 = static MainActor.shared.getter(v16);
  v18 = swift_allocObject(&unk_100548358, 72, 7);
  *(_QWORD *)(v18 + 16) = v17;
  *(_QWORD *)(v18 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v18 + 32) = v3;
  *(_BYTE *)(v18 + 40) = v7 & 1;
  v19 = (uint64x2_t)vdupq_n_s64(v7);
  v20 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v19, (uint64x2_t)xmmword_100484A50), (int32x4_t)vshlq_u64(v19, (uint64x2_t)xmmword_100484A40));
  *(int8x8_t *)v20.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v20), (int8x8_t)0x1000100010001);
  *(_DWORD *)(v18 + 41) = vmovn_s16(v20).u32[0];
  *(_BYTE *)(v18 + 45) = BYTE5(v7) & 1;
  *(_BYTE *)(v18 + 46) = BYTE6(v7) & 1;
  *(_QWORD *)(v18 + 48) = v9;
  *(_BYTE *)(v18 + 56) = v11 & 1;
  *(_QWORD *)(v18 + 64) = v13;
  v21 = sub_100138D6C(v1, (uint64_t)&unk_1005D74A0, v18);

  swift_release(v21);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100139C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v8 + 88) = a7;
  *(_QWORD *)(v8 + 64) = a6;
  *(_QWORD *)(v8 + 72) = a8;
  *(_QWORD *)(v8 + 48) = a4;
  *(_QWORD *)(v8 + 56) = a5;
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 80) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_100139C90, v10, v11);
}

uint64_t sub_100139C90()
{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64x2_t v8;
  int16x8_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;

  v1 = *(void **)(v0 + 72);
  v2 = *(_BYTE *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 80));
  KeyPath = swift_getKeyPath(&unk_100484B98);
  v7 = swift_getKeyPath(&unk_100484BC0);
  *(_QWORD *)(v0 + 24) = v3;
  *(_BYTE *)(v0 + 16) = v4 & 1;
  v8 = (uint64x2_t)vdupq_n_s64(v4);
  v9 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_100484A50), (int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_100484A40));
  *(int8x8_t *)v9.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v9), (int8x8_t)0x1000100010001);
  *(_DWORD *)(v0 + 17) = vmovn_s16(v9).u32[0];
  *(_BYTE *)(v0 + 21) = BYTE5(v4) & 1;
  *(_BYTE *)(v0 + 22) = BYTE6(v4) & 1;
  *(_BYTE *)(v0 + 32) = v2 & 1;
  *(_QWORD *)(v0 + 40) = v1;
  v10 = v1;
  swift_retain(v5);
  static Published.subscript.setter(v0 + 16, v5, KeyPath, v7);
  sub_100138EB8();
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v11 = *(_QWORD *)(v0 + 48);
  v12 = type metadata accessor for Logger(0);
  sub_100056D88(v12, (uint64_t)qword_1005F5748);
  v13 = swift_retain_n(v11, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  v16 = os_log_type_enabled(v14, v15);
  v17 = *(_QWORD *)(v0 + 48);
  if (v16)
  {
    v18 = swift_slowAlloc(22, -1);
    v19 = swift_slowAlloc(64, -1);
    v32 = v19;
    *(_DWORD *)v18 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_100056DA0(0xD00000000000002ALL, 0x80000001004AE100, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    *(_WORD *)(v18 + 12) = 2080;
    v20 = swift_getKeyPath(&unk_100484B98);
    v21 = swift_getKeyPath(&unk_100484BC0);
    static Published.subscript.getter((_QWORD *)(v0 + 16), v17, v20, v21);
    swift_release(v21);
    swift_release(v20);
    v22 = *(_BYTE *)(v0 + 17);
    v23 = *(_BYTE *)(v0 + 18);
    v24 = *(_BYTE *)(v0 + 19);
    v25 = *(_BYTE *)(v0 + 20);
    v26 = *(_BYTE *)(v0 + 21);
    v27 = *(_BYTE *)(v0 + 22);
    *(_BYTE *)(v0 + 16) = *(_BYTE *)(v0 + 16);
    *(_BYTE *)(v0 + 17) = v22;
    *(_BYTE *)(v0 + 18) = v23;
    *(_BYTE *)(v0 + 19) = v24;
    *(_BYTE *)(v0 + 20) = v25;
    *(_BYTE *)(v0 + 21) = v26;
    *(_BYTE *)(v0 + 22) = v27;
    v28 = String.init<A>(describing:)(v0 + 16, &type metadata for FMStewieViewModelState);
    v30 = v29;
    *(_QWORD *)(v0 + 16) = sub_100056DA0(v28, v29, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    swift_bridgeObjectRelease(v30);
    swift_release_n(v17, 2);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMStewieViewModel: Did %s: %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 48), 2);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100139FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t My;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[5];

  v1 = v0;
  My = type metadata accessor for Feature.FindMy(0);
  v36[3] = My;
  v36[4] = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v3 = sub_10003D370(v36);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v3, enum case for Feature.FindMy.fmNiftyCurve(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(v36);
  sub_100029574(v36);
  if ((My & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v4 = type metadata accessor for Logger(0);
    sub_100056D88(v4, (uint64_t)qword_1005F5748);
    v5 = swift_retain(v1);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc(18, -1);
      v9 = swift_slowAlloc(32, -1);
      v36[0] = v9;
      *(_DWORD *)v8 = 136315394;
      v35 = sub_100056DA0(0x6470557472617473, 0xEF2928676E697461, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36);
      *(_WORD *)(v8 + 12) = 1024;
      LODWORD(v35) = *(unsigned __int8 *)(v1 + 48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, (char *)&v35 + 4);
      swift_release(v1);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMStewieViewModel: %s - hasActiveSubs: %{BOOL}d", (uint8_t *)v8, 0x12u);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);
    }
    else
    {
      swift_release(v1);
    }

    if ((*(_BYTE *)(v1 + 48) & 1) == 0)
    {
      *(_BYTE *)(v1 + 48) = 1;
      v10 = *(_QWORD *)(v1 + 16);
      v11 = *(_QWORD *)(v10 + 48);
      v12 = type metadata accessor for FMPeopleSubscription(0);
      v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
      v14 = v13 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
      *(_QWORD *)(v14 + 8) = 0;
      swift_unknownObjectWeakInit(v14);
      swift_retain(v1);
      v15 = swift_retain(v11);
      UUID.init()(v15);
      v16 = v13 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
      *(_QWORD *)(v16 + 8) = &off_1005481C0;
      swift_unknownObjectWeakAssign(v16, v1);
      swift_release(v1);
      swift_beginAccess(v11 + 16, v36, 33, 0);
      v17 = swift_retain(v13);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
      v19 = *(_QWORD *)((*(_QWORD *)(v11 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
      v18 = *(_QWORD *)((*(_QWORD *)(v11 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v19 >= v18 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
      v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v13);
      specialized Array._endMutation()(v20);
      swift_endAccess(v36);
      swift_release(v11);
      v21 = *(_QWORD *)(v1 + 24);
      *(_QWORD *)(v1 + 24) = v13;
      swift_release(v21);
      v22 = *(void **)(v10 + 16);
      v23 = type metadata accessor for FMConditionSubscription(0);
      v24 = swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
      v25 = v24 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
      *(_QWORD *)(v25 + 8) = 0;
      swift_unknownObjectWeakInit(v25);
      swift_retain(v1);
      v26 = v22;
      UUID.init()(v26);
      v27 = v24 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
      *(_QWORD *)(v27 + 8) = &off_100548228;
      swift_unknownObjectWeakAssign(v27, v1);
      swift_release(v1);
      v28 = &v26[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
      swift_beginAccess(&v26[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], v36, 33, 0);
      v29 = swift_retain(v24);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v31 = *(_QWORD *)((*(_QWORD *)v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v30 = *(_QWORD *)((*(_QWORD *)v28 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v31 >= v30 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
      v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v24);
      specialized Array._endMutation()(v32);
      swift_endAccess(v36);

      v33 = *(_QWORD *)(v1 + 32);
      *(_QWORD *)(v1 + 32) = v24;
      swift_release(v33);
      v34 = *(_QWORD *)(v1 + 40);
      *(_QWORD *)(v34 + 24) = &off_1005481B0;
      swift_unknownObjectWeakAssign(v34 + 16, v1);
    }
  }
}

double sub_10013A414(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  v7 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  type metadata accessor for MainActor(0);
  swift_errorRetain(a2);
  v11 = a3;
  v12 = swift_retain(a4);
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_1005484C0, 56, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = a2;
  v14[5] = v11;
  v14[6] = a4;
  v15 = sub_100138D6C((uint64_t)v9, (uint64_t)&unk_1005D7518, (uint64_t)v14);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_10013A518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[15] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_10013A5BC, v8, v9);
}

uint64_t sub_10013A5BC()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  id v17;
  unsigned int v18;
  id v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  double v29;
  Swift::String v30;
  Swift::String_optional v31;
  Swift::String v32;
  void *v33;
  id v34;
  Swift::String v35;
  Swift::String_optional v36;
  Swift::String v37;
  void *v38;
  NSString v39;
  void *v40;
  id v41;
  NSString v42;
  NSString v43;
  id v44;
  double v45;
  uint64_t v47;
  uint64_t v48;
  void *object;
  uint64_t v50;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;

  swift_release(v0[15]);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v1 = v0 + 2;
  v2 = v0[12];
  v3 = type metadata accessor for Logger(0);
  sub_100056D88(v3, (uint64_t)qword_1005F5748);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (!os_log_type_enabled(v5, v6))
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);

    if (!v0[12])
      goto LABEL_14;
    goto LABEL_10;
  }
  v48 = v2;
  v7 = v0[12];
  v8 = swift_slowAlloc(22, -1);
  v9 = (uint64_t *)swift_slowAlloc(8, -1);
  v47 = swift_slowAlloc(32, -1);
  v50 = v47;
  *(_DWORD *)v8 = 136315394;
  v0[2] = sub_100056DA0(0xD00000000000003BLL, 0x80000001004AE240, &v50);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3);
  *(_WORD *)(v8 + 12) = 2112;
  if (v7)
  {
    v2 = v48;
    swift_errorRetain(v48);
    v10 = _swift_stdlib_bridgeErrorToNSError(v48);
    *v1 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3);
  }
  else
  {
    *v1 = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3);
    v10 = 0;
    v2 = v48;
  }
  *v9 = v10;
  swift_errorRelease(v2);
  swift_errorRelease(v2);
  _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMStewieViewModel: Did %s, error: %@", (uint8_t *)v8, 0x16u);
  v11 = sub_100053F2C((uint64_t *)&unk_1005D9680);
  swift_arrayDestroy(v9, 1, v11);
  swift_slowDealloc(v9, -1, -1);
  swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v47, -1, -1);
  swift_slowDealloc(v8, -1, -1);

  if (v0[12])
  {
LABEL_10:
    v12 = (void *)objc_opt_self(NSBundle);
    swift_errorRetain(v2);
    v13 = objc_msgSend(v12, "mainBundle");
    v14._countAndFlagsBits = 0xD000000000000022;
    v51._object = (void *)0x80000001004AB7C0;
    v14._object = (void *)0x80000001004AE280;
    v15.value._countAndFlagsBits = 0xD000000000000012;
    v15.value._object = (void *)0x80000001004AB7A0;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v51._countAndFlagsBits = 0xD000000000000017;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v51)._object;

    v17 = objc_msgSend((id)objc_opt_self(FMSystemInfo), "sharedInstance");
    v18 = objc_msgSend(v17, "isInternalBuild");

    v19 = objc_msgSend(v12, "mainBundle");
    if (v18)
    {
      v20._countAndFlagsBits = 0xD00000000000002DLL;
      v52._object = (void *)0x80000001004AB7C0;
      v20._object = (void *)0x80000001004AE310;
      v21.value._countAndFlagsBits = 0xD000000000000012;
      v21.value._object = (void *)0x80000001004AB7A0;
      v22._countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      v52._countAndFlagsBits = 0xD000000000000017;
      v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v52);

      v24 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
      v25 = swift_allocObject(v24, 72, 7);
      *(_OWORD *)(v25 + 16) = xmmword_100481740;
      swift_getErrorValue(v2, v0 + 11, v0 + 8);
      v26 = sub_10021EE24(v0[9], v0[10]);
      *(_QWORD *)(v25 + 56) = &type metadata for Int;
      *(_QWORD *)(v25 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v25 + 32) = v26;
      String.init(format:_:)(v23._countAndFlagsBits, v23._object, v25);
      v28 = v27;
      *(_QWORD *)&v29 = swift_bridgeObjectRelease(v23._object).n128_u64[0];
    }
    else
    {
      v30._countAndFlagsBits = 0xD00000000000002CLL;
      v53._object = (void *)0x80000001004AB7C0;
      v30._object = (void *)0x80000001004AE2B0;
      v31.value._countAndFlagsBits = 0xD000000000000012;
      v31.value._object = (void *)0x80000001004AB7A0;
      v32._countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      v53._countAndFlagsBits = 0xD000000000000017;
      v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v19, v32, v53)._object;

    }
    v33 = (void *)v0[13];
    v34 = objc_msgSend(v12, "mainBundle", v29);
    v54._countAndFlagsBits = 0xD000000000000017;
    v35._countAndFlagsBits = 0xD000000000000023;
    v54._object = (void *)0x80000001004AB7C0;
    v35._object = (void *)0x80000001004AE2E0;
    v36.value._object = (void *)0x80000001004AB7A0;
    v36.value._countAndFlagsBits = 0xD000000000000012;
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v54)._object;

    v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v38);
    v0[6] = State.rawValue.getter;
    v0[7] = 0;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100008B40;
    v0[5] = &unk_1005484D8;
    v40 = _Block_copy(v0 + 2);
    swift_release(v0[7]);
    v41 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v39, 0, v40);
    _Block_release(v40);

    v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
    v44 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v42, v43, 1);

    objc_msgSend(v44, "addAction:", v41);
    objc_msgSend(v33, "presentViewController:animated:completion:", v44, 1, 0);
    swift_errorRelease(v2);

  }
LABEL_14:
  v45 = sub_1001386E0();
  return ((uint64_t (*)(double))v0[1])(v45);
}

_QWORD *sub_10013AC48()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t My;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23[5];

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v23[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  My = type metadata accessor for Feature.FindMy(0);
  v23[3] = My;
  v23[4] = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v6 = sub_10003D370(v23);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v6, enum case for Feature.FindMy.fmNiftyCurve(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(v23);
  sub_100029574(v23);
  if ((My & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100056D88(v7, (uint64_t)qword_1005F5748);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v23[0] = v12;
      *(_DWORD *)v11 = 136315138;
      v22 = sub_100056DA0(0x74696E696564, 0xE600000000000000, v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, v23);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMStewieViewModel: Will %s", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    v13 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
    v15 = v1[3];
    v14 = v1[4];
    v16 = v1[2];
    v17 = (_QWORD *)swift_allocObject(&unk_100548510, 56, 7);
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = v14;
    v17[5] = v16;
    v17[6] = v15;
    swift_retain(v15);
    swift_retain(v16);
    swift_retain(v14);
    v18 = sub_100377068((uint64_t)v4, (uint64_t)&unk_1005D7530, (uint64_t)v17);
    swift_release(v18);
    sub_1000051EC((uint64_t)v4, &qword_1005D81A0);
  }
  swift_release(v1[2]);
  swift_release(v1[3]);
  swift_release(v1[4]);
  swift_release(v1[5]);
  v19 = (char *)v1 + OBJC_IVAR____TtC6FindMy17FMStewieViewModel__state;
  v20 = sub_100053F2C(&qword_1005D2C88);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  return v1;
}

uint64_t sub_10013AF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return swift_task_switch(sub_10013AF54, 0, 0);
}

void sub_10013AF54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v0 + 48) + 16)
                   + OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions);
    swift_beginAccess(v2, v0 + 16, 33, 0);
    swift_retain(v1);
    v3 = 0;
    v4 = sub_10005D558(v2, v1);
    swift_release(v1);
    v5 = *v2;
    if ((unint64_t)*v2 >> 62)
    {
      if (v5 < 0)
        v16 = *v2;
      else
        v16 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v2);
      v6 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease(v5);
      if (v6 >= v4)
      {
LABEL_4:
        sub_10005D32C(v4, v6);
        swift_endAccess(v0 + 16);
        v7 = *(_QWORD *)(v0 + 56);
        if (!v7)
          goto LABEL_10;
LABEL_7:
        v8 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v0 + 48) + 48) + 16);
        swift_beginAccess(v8, v0 + 16, 33, 0);
        swift_retain(v7);
        v3 = sub_10005D57C(v8, v7);
        swift_release(v7);
        v4 = *v8;
        if (!((unint64_t)*v8 >> 62))
        {
          v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v9 >= v3)
          {
LABEL_9:
            sub_10005D338(v3, v9);
            swift_endAccess(v0 + 16);
            goto LABEL_10;
          }
LABEL_24:
          __break(1u);
          return;
        }
LABEL_20:
        if (v4 < 0)
          v17 = v4;
        else
          v17 = v4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v4);
        v9 = _CocoaArrayWrapper.endIndex.getter(v17);
        swift_bridgeObjectRelease(v4);
        if (v9 >= v3)
          goto LABEL_9;
        goto LABEL_24;
      }
    }
    else
    {
      v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v6 >= v4)
        goto LABEL_4;
    }
    __break(1u);
    goto LABEL_20;
  }
  v7 = *(_QWORD *)(v0 + 56);
  if (v7)
    goto LABEL_7;
LABEL_10:
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100056D88(v10, (uint64_t)qword_1005F5748);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v18 = v15;
    *(_DWORD *)v14 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_100056DA0(0x74696E696564, 0xE600000000000000, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMStewieViewModel: Did %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }

  (*(void (**)(void))(v0 + 8))();
}

uint64_t sub_10013B23C()
{
  uint64_t v0;

  sub_10013AC48();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10013B260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter();
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_10013EE38, v6, v7);
}

double sub_10013B2CC()
{
  return sub_10013DE18(0xD000000000000034, 0x80000001004AE1B0, (uint64_t)&unk_1005483F8, (uint64_t)&unk_1005D74D0);
}

double sub_10013B308()
{
  return sub_10013DE18(0xD000000000000038, 0x80000001004AE170, (uint64_t)&unk_1005483D0, (uint64_t)&unk_1005D74C0);
}

double sub_10013B344()
{
  return sub_10013DE18(0xD000000000000033, 0x80000001004AE130, (uint64_t)&unk_1005483A8, (uint64_t)&unk_1005D74B0);
}

double sub_10013B380()
{
  return sub_10013DE18(0xD000000000000033, 0x80000001004AE0C0, (uint64_t)&unk_1005482B8, (uint64_t)&unk_1005D7478);
}

double sub_10013B3BC(uint64_t a1, uint64_t a2)
{
  return sub_10013D624(a2, (uint64_t)&unk_100548448, (uint64_t)&unk_1005D74F0);
}

double sub_10013B3E4(uint64_t a1, uint64_t a2)
{
  return sub_10013D624(a2, (uint64_t)&unk_100548420, (uint64_t)&unk_1005D74E0);
}

void sub_10013B410()
{
  qword_1005D7360 = 0x40BC200000000000;
}

void sub_10013B424()
{
  qword_1005D7368 = 0x4122750000000000;
}

uint64_t sub_10013B438(char *a1, unsigned __int8 *a2)
{
  return sub_10013C8EC(*a1, *a2);
}

uint64_t sub_10013B444(uint64_t a1)
{
  __int128 *v1;
  char v3;
  int8x16_t v4;
  __int128 v6[3];
  __int128 v7[3];
  unint64_t v8;
  int8x16_t v9;
  int8x16_t v10;
  char v11;
  _OWORD v12[3];

  sub_1000B0614(v1, v12);
  v3 = v12[0];
  if (!(*(_QWORD *)&v12[0] >> 62))
  {
    *(_QWORD *)&v12[0] &= 0x3FFFFFFFFFFFFFFFuLL;
    sub_10013E9C0(a1, (uint64_t)v6);
    if (*(_QWORD *)&v6[0] >> 8 != 0xFFFFFFFFLL)
    {
      sub_1000B0614(v6, v7);
      sub_1000B0614(v7, &v8);
      if (!(v8 >> 62))
      {
        switch(v3)
        {
          case 2:
            return v8 == 2;
          case 3:
            return v8 == 3;
          case 4:
            return v8 == 4;
          case 5:
            return v8 == 5;
          case 6:
            return v8 == 6;
          case 7:
            return v8 == 7;
          case 8:
            return v8 == 8;
          default:
            return v8 - 2 >= 7 && ((((v3 & 1) == 0) ^ v8) & 1) != 0;
        }
      }
    }
    return 0;
  }
  if (*(_QWORD *)&v12[0] >> 62 != 1)
  {
    sub_10013E9C0(a1, (uint64_t)v6);
    if (*(_QWORD *)&v6[0] >> 8 == 0xFFFFFFFFLL)
      return 0;
    sub_1000B0614(v6, v7);
    sub_1000B0614(v7, &v8);
    if (v8 >> 62 != 2)
      return 0;
    if (v11)
      return 0;
    if (v8 != 0x8000000000000000)
      return 0;
    v4 = vorrq_s8(v9, v10);
    return !*(_QWORD *)&vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
  }
  *(_QWORD *)&v12[0] &= 0x3FFFFFFFFFFFFFFFuLL;
  sub_10013E9C0(a1, (uint64_t)v6);
  if (*(_QWORD *)&v6[0] >> 8 != 0xFFFFFFFFLL)
  {
    sub_1000B0614(v6, v7);
    sub_1000B0614(v7, &v8);
    if (v8 >> 62 == 1)
      return 1;
  }
  return 0;
}

uint64_t sub_10013B63C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t result;
  uint64_t v12;
  char v13;
  unint64_t v14;
  id v15;
  Swift::String v16;
  Swift::String_optional v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  id v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  Swift::String v25;
  void *v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  void *v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  void *v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  void *v50;
  unsigned __int8 v51;
  unsigned __int8 v52;
  void *v53;
  unsigned __int8 v54;
  unsigned __int8 v55;
  void *v56;
  Swift::String v57;
  Swift::String v58;

  if ((a3 & 1) != 0)
  {
    countAndFlagsBits = 0;
    object = 0;
    result = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0x8000000000000000;
  }
  else
  {
    countAndFlagsBits = 0;
    object = 0;
    result = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0x8000000000000000;
    switch(a2)
    {
      case 0:
      case 7:
        break;
      case 5:
        v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v57._countAndFlagsBits = 0xD000000000000017;
        v16._countAndFlagsBits = 0xD000000000000028;
        v57._object = (void *)0x80000001004AB7C0;
        v16._object = (void *)0x80000001004AE030;
        v17.value._object = (void *)0x80000001004AB7A0;
        v17.value._countAndFlagsBits = 0xD000000000000012;
        v18._countAndFlagsBits = 0;
        v18._object = (void *)0xE000000000000000;
        v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v57);
        countAndFlagsBits = v19._countAndFlagsBits;
        object = v19._object;

        v12 = 0;
        v13 = 2;
        v14 = 0x4000000000000000;
        result = 1;
        break;
      case 8:
        countAndFlagsBits = (uint64_t)sub_10013BB20(a1 & 0x1010101010101, 8, 0, a4);
        object = v26;
        v28 = v27;
        v12 = 0;
        v13 = 0;
        result = v28;
        v14 = 7;
        break;
      default:
        if ((a1 & 0x10000000000) != 0)
        {
          v29 = a1 & 0x1000101010101 | 0x10000000000;
          v30 = a2;
LABEL_16:
          countAndFlagsBits = (uint64_t)sub_10013BB20(v29, v30, 0, a4);
          object = v31;
          v33 = v32;
          v12 = 0;
          v13 = 0;
          result = v33;
          v14 = 2;
        }
        else if ((a1 & 0x1000000) != 0)
        {
          v34 = a1 & 0x1000100010101 | 0x1000000;
          v35 = a2;
LABEL_18:
          countAndFlagsBits = (uint64_t)sub_10013BB20(v34, v35, 0, a4);
          object = v36;
          v38 = v37;
          v12 = 0;
          v13 = 0;
          result = v38;
          v14 = 6;
        }
        else if ((a1 & 0x100) != 0)
        {
          countAndFlagsBits = (uint64_t)sub_10013BB20(a1 & 0x1000100010001 | 0x100, a2, 0, a4);
          object = v39;
          v41 = v40;
          v12 = 0;
          v13 = 0;
          result = v41;
          v14 = 3;
        }
        else if ((a1 & 0x100000000) != 0)
        {
          countAndFlagsBits = (uint64_t)sub_10013BB20(a1 & 0x1000000010001 | (unint64_t)&_mh_execute_header, a2, 0, a4);
          object = v42;
          v44 = v43;
          v12 = 0;
          v13 = 0;
          result = v44;
          v14 = 4;
        }
        else
        {
          v20 = a1 & 1;
          if ((a1 & 0x10000) != 0)
          {
            v45 = a1 & 0x1000000000001 | 0x10000;
            v46 = a2;
LABEL_22:
            countAndFlagsBits = (uint64_t)sub_10013BB20(v45, v46, 0, a4);
            object = v47;
            v49 = v48;
            v12 = 0;
            v13 = 0;
            result = v49;
            v14 = v20;
          }
          else if ((a1 & 0x1000000000000) != 0)
          {
            countAndFlagsBits = (uint64_t)sub_10013BB20(v20 | 0x1000000000000, a2, 0, a4);
            object = v50;
            v52 = v51;
            v12 = 0;
            v13 = 0;
            result = v52;
            v14 = 5;
          }
          else
          {
            v13 = 0;
            countAndFlagsBits = 0;
            v14 = 0x8000000000000000;
            object = 0;
            result = 0;
            v12 = 0;
            switch(a2)
            {
              case 1:
                v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                v58._countAndFlagsBits = 0xD000000000000017;
                v22._countAndFlagsBits = 0xD000000000000023;
                v58._object = (void *)0x80000001004AB7C0;
                v22._object = (void *)0x80000001004AE000;
                v23.value._object = (void *)0x80000001004AB7A0;
                v23.value._countAndFlagsBits = 0xD000000000000012;
                v24._countAndFlagsBits = 0;
                v24._object = (void *)0xE000000000000000;
                v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v58);
                countAndFlagsBits = v25._countAndFlagsBits;
                object = v25._object;

                result = (uint64_t)sub_10013BB20(v20, 1, 0, a4);
                v14 = 0x4000000000000001;
                break;
              case 2:
                countAndFlagsBits = (uint64_t)sub_10013BB20(a1 & 1, 2, 0, a4);
                object = v53;
                v55 = v54;
                v12 = 0;
                v13 = 0;
                result = v55;
                v14 = 8;
                break;
              case 3:
                v34 = a1 & 1;
                v35 = 3;
                goto LABEL_18;
              case 4:
                v45 = a1 & 1;
                v46 = 4;
                goto LABEL_22;
              case 5:
              case 7:
              case 8:
                goto LABEL_5;
              case 6:
                countAndFlagsBits = sub_10013BDF4(a1 & 1, 6, 0, a4);
                object = v56;
                result = (uint64_t)sub_10013BB20(v20, 6, 0, a4);
                v14 = 0x4000000000000000;
                break;
              case 9:
                v29 = a1 & 1;
                v30 = 9;
                goto LABEL_16;
              default:
                object = 0;
                result = 0;
                v12 = 0;
                break;
            }
          }
        }
        break;
    }
  }
LABEL_5:
  *(_QWORD *)a5 = v14;
  *(_QWORD *)(a5 + 8) = countAndFlagsBits;
  *(_QWORD *)(a5 + 16) = object;
  *(_QWORD *)(a5 + 24) = result;
  *(_QWORD *)(a5 + 32) = v12;
  *(_BYTE *)(a5 + 40) = v13;
  return result;
}

void *sub_10013BB20(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  double v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v29 - v13;
  if (!a4)
    return a4;
  v15 = a4;
  v16 = objc_msgSend(v15, "lastPublished");
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_15;
  }
  v17 = v16;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v16);

  v18 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v18(v7, v12, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_15:

    sub_1000051EC((uint64_t)v7, (uint64_t *)&unk_1005D3320);
    return 0;
  }
  v19 = ((uint64_t (*)(char *, char *, uint64_t))v18)(v14, v7, v8);
  static Date.now.getter(v19);
  v20 = Date.timeIntervalSince(_:)(v14);
  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v12, v8);
  if (qword_1005D1C28 != -1)
    swift_once(&qword_1005D1C28, sub_10013B424);
  if (v20 >= *(double *)&qword_1005D7368)
  {
    v21(v14, v8);

    return 0;
  }
  if (v20 <= 60.0)
  {
    v21(v14, v8);

    return 0;
  }
  else
  {
    if (qword_1005D1C20 != -1)
      swift_once(&qword_1005D1C20, sub_10013B410);
    if (v20 >= *(double *)&qword_1005D7360)
    {
      v26 = sub_10013D0F8((uint64_t)v14);
      v28 = v27;

      if (v28)
        a4 = (void *)v26;
      else
        a4 = 0;
    }
    else
    {
      v22 = sub_10013CE94((uint64_t)v14);
      v24 = v23;

      if ((v24 & 1) != 0)
        a4 = 0;
      else
        a4 = (void *)v22;
    }
    v21(v14, v8);
  }
  return a4;
}

uint64_t sub_10013BDF4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  double v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t countAndFlagsBits;
  id v27;
  Swift::String v28;
  Swift::String_optional v29;
  Swift::String v30;
  uint64_t v31;
  id v33;
  Swift::String v34;
  Swift::String_optional v35;
  Swift::String v36;
  uint64_t v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;

  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v37 - v10;
  if (a4)
  {
    v12 = a4;
    v13 = Date.init(timeIntervalSince1970:)(objc_msgSend(v12, "nextAllowedPublish"));
    static Date.now.getter(v13);
    v14 = Date.timeIntervalSince(_:)(v9);
    v15 = *(void (**)(char *, uint64_t))(v6 + 8);
    v15(v9, v5);
    if (v14 <= 30.0 || (v16 = sub_10013D398(), (v17 & 1) != 0))
    {
      v33 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v40._countAndFlagsBits = 0xD000000000000017;
      v34._countAndFlagsBits = 0xD00000000000002BLL;
      v40._object = (void *)0x80000001004AB7C0;
      v34._object = (void *)0x80000001004AE060;
      v35.value._object = (void *)0x80000001004AB7A0;
      v35.value._countAndFlagsBits = 0xD000000000000012;
      v36._countAndFlagsBits = 0;
      v36._object = (void *)0xE000000000000000;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, v35, (NSBundle)v33, v36, v40)._countAndFlagsBits;

    }
    else
    {
      v18 = v16;
      v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v38._countAndFlagsBits = 0xD000000000000017;
      v20._countAndFlagsBits = 0xD000000000000029;
      v38._object = (void *)0x80000001004AB7C0;
      v20._object = (void *)0x80000001004AE090;
      v21.value._object = (void *)0x80000001004AB7A0;
      v21.value._countAndFlagsBits = 0xD000000000000012;
      v22._countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v38);

      v24 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
      v25 = swift_allocObject(v24, 72, 7);
      *(_OWORD *)(v25 + 16) = xmmword_100481740;
      *(_QWORD *)(v25 + 56) = &type metadata for Int;
      *(_QWORD *)(v25 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v25 + 32) = v18;
      countAndFlagsBits = String.init(format:_:)(v23._countAndFlagsBits, v23._object, v25);
      swift_bridgeObjectRelease(v23._object);

    }
    v15(v11, v5);
    return countAndFlagsBits;
  }
  else
  {
    v27 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v39._countAndFlagsBits = 0xD000000000000017;
    v28._countAndFlagsBits = 0xD00000000000002BLL;
    v39._object = (void *)0x80000001004AB7C0;
    v28._object = (void *)0x80000001004AE060;
    v29.value._object = (void *)0x80000001004AB7A0;
    v29.value._countAndFlagsBits = 0xD000000000000012;
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v39)._countAndFlagsBits;

    return v31;
  }
}

uint64_t sub_10013C158()
{
  return Date.init(timeIntervalSinceNow:)(-1.0);
}

uint64_t SPSecureLocationsStewieServiceState.debugDescription.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
}

uint64_t sub_10013C19C()
{
  return dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
}

uint64_t sub_10013C1DC()
{
  return type metadata accessor for FMStewieViewModel(0);
}

uint64_t type metadata accessor for FMStewieViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D73A0;
  if (!qword_1005D73A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMStewieViewModel);
  return result;
}

void sub_10013C220(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = "\b";
  v4[2] = "\b";
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = &unk_100484B10;
  sub_10013C2B4();
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

void sub_10013C2B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1005D73B0)
  {
    v0 = type metadata accessor for Published(0, &type metadata for FMStewieViewModelState);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1005D73B0);
  }
}

unint64_t sub_10013C308(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (result >> 62 == 1)
  {
    swift_bridgeObjectRetain(a3);
    return sub_10013C378(a4, a5, a6);
  }
  else if (!(result >> 62))
  {
    return sub_10013C378(a2, a3, a4);
  }
  return result;
}

uint64_t sub_10013C378(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_10013C38C(a1, a2, a3);
  return a1;
}

uint64_t sub_10013C38C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRetain(a2);
  return result;
}

unint64_t destroy for FMStewieViewModelState.ViewState(uint64_t a1)
{
  return sub_100071DEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for FMStewieViewModelState.ViewState(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_10013C308(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for FMStewieViewModelState.ViewState(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_10013C308(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_100071DEC(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for FMStewieViewModelState.ViewState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_100071DEC(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMStewieViewModelState.ViewState(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_DWORD *)(a1 + 1);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for FMStewieViewModelState.ViewState(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 40) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)a1 = (unint64_t)-a2 << 8;
      result = 0.0;
      *(_OWORD *)(a1 + 8) = 0u;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_BYTE *)(a1 + 40) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_10013C5B4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*(_QWORD *)a1 | (*(_DWORD *)(a1 + 8) << 8)) + 2;
}

_QWORD *sub_10013C5D4(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unsigned __int8 *sub_10013C5E4(unsigned __int8 *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *(_QWORD *)result = *result | (unint64_t)(a2 << 62);
  }
  else
  {
    *((_QWORD *)result + 1) = (unint64_t)(a2 - 2) >> 8;
    *((_QWORD *)result + 2) = 0;
    *((_QWORD *)result + 3) = 0;
    *((_QWORD *)result + 4) = 0;
    result[40] = 0;
    *(_QWORD *)result = (a2 - 2) | 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMStewieViewModelState.ViewState()
{
  return &type metadata for FMStewieViewModelState.ViewState;
}

void destroy for FMStewieViewModelState(uint64_t a1)
{

}

uint64_t initializeWithCopy for FMStewieViewModelState(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_WORD *)(a1 + 5) = *(_WORD *)(a2 + 5);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for FMStewieViewModelState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_BYTE *)(a1 + 6) = *(_BYTE *)(a2 + 6);
  v3 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a1 + 24);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for FMStewieViewModelState(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_BYTE *)(a1 + 6) = *(_BYTE *)(a2 + 6);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for FMStewieViewModelState(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMStewieViewModelState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMStewieViewModelState()
{
  return &type metadata for FMStewieViewModelState;
}

uint64_t sub_10013C83C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10013C8A0;
  return v6(a1);
}

uint64_t sub_10013C8A0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10013C8EC(char a1, unsigned __int8 a2)
{
  uint64_t result;

  switch(a1)
  {
    case 2:
      if (a2 != 2)
        goto LABEL_17;
      goto LABEL_7;
    case 3:
      if (a2 == 3)
        goto LABEL_7;
      goto LABEL_17;
    case 4:
      if (a2 != 4)
        goto LABEL_17;
      goto LABEL_7;
    case 5:
      if (a2 != 5)
        goto LABEL_17;
      goto LABEL_7;
    case 6:
      if (a2 != 6)
        goto LABEL_17;
      goto LABEL_7;
    case 7:
      if (a2 != 7)
        goto LABEL_17;
      goto LABEL_7;
    case 8:
      if (a2 != 8)
        goto LABEL_17;
LABEL_7:
      result = 1;
      break;
    default:
      if (a2 - 2 < 7)
LABEL_17:
        result = 0;
      else
        result = (((a1 & 1) == 0) ^ a2) & 1;
      break;
  }
  return result;
}

void *sub_10013C998(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for Calendar.Component(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_100053F2C(&qword_1005D7458);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_100008000(&qword_1005D7460, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v6, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_100008000(&qword_1005D7468, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v6, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

void sub_10013CC00(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      sub_100053F2C(&qword_1005D74F8);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      v26 = a1;
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  v26 = a1;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = 0;
  v9 = (char *)(v4 + 7);
  v25 = v5;
  while ((v26 & 0xC000000000000001) != 0)
  {
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v26);
    v11 = __OFADD__(v8++, 1);
    if (v11)
      goto LABEL_32;
LABEL_24:
    v27 = v10;
    v29 = v10;
    v12 = v4[5];
    v13 = type metadata accessor for AnyCancellable(0);
    v14 = sub_100008000((unint64_t *)&qword_1005D2C60, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v12, v13, v14);
    v16 = -1 << *((_BYTE *)v4 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
    v20 = 1 << v17;
    if (((1 << v17) & v19) != 0)
    {
      v21 = ~v16;
      v22 = sub_100008000(&qword_1005D6B58, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      do
      {
        v28 = *(_QWORD *)(v4[6] + 8 * v17);
        if ((dispatch thunk of static Equatable.== infix(_:_:)(&v28, &v29, v13, v22) & 1) != 0)
        {
          swift_release(v27);
          v5 = v25;
          goto LABEL_17;
        }
        v17 = (v17 + 1) & v21;
        v18 = v17 >> 6;
        v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
        v20 = 1 << v17;
      }
      while ((v19 & (1 << v17)) != 0);
      v5 = v25;
    }
    *(_QWORD *)&v9[8 * v18] = v20 | v19;
    *(_QWORD *)(v4[6] + 8 * v17) = v27;
    v23 = v4[2];
    v11 = __OFADD__(v23, 1);
    v24 = v23 + 1;
    if (v11)
      goto LABEL_33;
    v4[2] = v24;
LABEL_17:
    if (v8 == v5)
      return;
  }
  if (v8 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_34;
  v10 = swift_retain(*(_QWORD *)(v26 + 32 + 8 * v8));
  v11 = __OFADD__(v8++, 1);
  if (!v11)
    goto LABEL_24;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_10013CE94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, _QWORD, uint64_t);
  void *v21;
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a1;
  v1 = type metadata accessor for Date(0);
  v37 = *(_QWORD *)(v1 - 8);
  v38 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Calendar(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DateComponents(0);
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter(v9);
  v12 = sub_100053F2C(&qword_1005D33B8);
  v13 = type metadata accessor for Calendar.Component(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = swift_allocObject(v12, v17 + 2 * v15, v16 | 7);
  *(_OWORD *)(v18 + 16) = xmmword_100481730;
  v19 = v18 + v17;
  v20 = *(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104);
  v20(v19, enum case for Calendar.Component.hour(_:), v13);
  v20(v19 + v15, enum case for Calendar.Component.minute(_:), v13);
  v21 = sub_10013C998(v18);
  swift_setDeallocating(v18);
  swift_arrayDestroy(v19, 2, v13);
  v22 = swift_deallocClassInstance(v18, 32, 7);
  static Date.now.getter(v22);
  Calendar.dateComponents(_:from:to:)(v21, v36, v3);
  v23 = swift_bridgeObjectRelease(v21);
  (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v3, v38, v23);
  v24.n128_f64[0] = (*(double (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v25 = DateComponents.hour.getter(v24);
  v26 = v25;
  if ((v27 & 1) != 0)
    v28 = 0;
  else
    v28 = v25;
  v29 = DateComponents.minute.getter();
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
  if ((v31 & 1) == 0)
  {
    if (v28 | v29)
      return v28;
    return 0;
  }
  if (!v28)
    return 0;
  return v26;
}

uint64_t sub_10013D0F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  id v28;
  Class isa;
  id v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v32 = a1;
  v1 = type metadata accessor for Date(0);
  v34 = *(_QWORD *)(v1 - 8);
  v35 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for Calendar(0);
  v4 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DateComponents(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter(v9);
  v12 = sub_100053F2C(&qword_1005D33B8);
  v13 = type metadata accessor for Calendar.Component(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = swift_allocObject(v12, v16 + *(_QWORD *)(v14 + 72), v15 | 7);
  *(_OWORD *)(v17 + 16) = xmmword_100481740;
  v18 = v17 + v16;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v18, enum case for Calendar.Component.minute(_:), v13);
  v19 = sub_10013C998(v17);
  swift_setDeallocating(v17);
  swift_arrayDestroy(v18, 1, v13);
  v20 = v17;
  v21 = v32;
  v22 = swift_deallocClassInstance(v20, 32, 7);
  static Date.now.getter(v22);
  Calendar.dateComponents(_:from:to:)(v19, v3, v21);
  v23 = swift_bridgeObjectRelease(v19);
  (*(void (**)(char *, uint64_t, __n128))(v34 + 8))(v3, v35, v23);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v33);
  v25 = DateComponents.minute.getter(v24);
  LOBYTE(v19) = v26;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v27 = 0;
  if ((v19 & 1) == 0 && v25 < 0)
  {
    v28 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
    objc_msgSend(v28, "setDateStyle:", 2);
    objc_msgSend(v28, "setTimeStyle:", 1);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v30 = objc_msgSend(v28, "stringFromDate:", isa);

    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  }
  return v27;
}

uint64_t sub_10013D398()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, _QWORD, uint64_t);
  void *v23;
  uint64_t v24;
  __n128 v25;
  void (*v26)(char *, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v0 = type metadata accessor for Calendar(0);
  v38 = *(_QWORD *)(v0 - 8);
  v39 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DateComponents(0);
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v37 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v36 - v11;
  v13 = Date.addingTimeInterval(_:)(v10, 1.0);
  static Calendar.current.getter(v13);
  v14 = sub_100053F2C(&qword_1005D33B8);
  v15 = type metadata accessor for Calendar.Component(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = *(unsigned __int8 *)(v16 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = swift_allocObject(v14, v19 + 2 * v17, v18 | 7);
  *(_OWORD *)(v20 + 16) = xmmword_100481730;
  v21 = v20 + v19;
  v22 = *(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104);
  v22(v21, enum case for Calendar.Component.minute(_:), v15);
  v22(v21 + v17, enum case for Calendar.Component.second(_:), v15);
  v23 = sub_10013C998(v20);
  swift_setDeallocating(v20);
  swift_arrayDestroy(v21, 2, v15);
  v24 = swift_deallocClassInstance(v20, 32, 7);
  static Date.now.getter(v24);
  Calendar.dateComponents(_:from:to:)(v23, v9, v12);
  v25 = swift_bridgeObjectRelease(v23);
  v26 = *(void (**)(char *, uint64_t, __n128))(v37 + 8);
  v26(v9, v6, v25);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v2, v39);
  v28 = DateComponents.minute.getter(v27);
  if ((v29 & 1) != 0)
    v30 = 0;
  else
    v30 = v28;
  v31 = DateComponents.second.getter();
  v33 = v32;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v41);
  result = ((uint64_t (*)(char *, uint64_t))v26)(v12, v6);
  if ((v33 & 1) != 0)
    return v30 & ~(v30 >> 63);
  if (v31 < 1)
    return v30 & ~(v30 >> 63);
  if (!__OFADD__(v30++, 1))
    return v30 & ~(v30 >> 63);
  __break(1u);
  return result;
}

double sub_10013D624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t My;
  _QWORD *v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[5];

  v6 = v3;
  v7 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v25[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  My = type metadata accessor for Feature.FindMy(0);
  v25[3] = My;
  v25[4] = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v11 = sub_10003D370(v25);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v11, enum case for Feature.FindMy.fmNiftyCurve(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(v25);
  sub_100029574(v25);
  if ((My & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100056D88(v13, (uint64_t)qword_1005F5748);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v25[0] = v18;
      *(_DWORD *)v17 = 136315138;
      v24 = sub_100056DA0(0xD000000000000023, 0x80000001004AE1F0, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMStewieViewModel: %s", v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);
    }

    v19 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
    type metadata accessor for MainActor(0);
    v20 = swift_retain(v6);
    v21 = static MainActor.shared.getter(v20);
    v22 = (_QWORD *)swift_allocObject(a2, 40, 7);
    v22[2] = v21;
    v22[3] = &protocol witness table for MainActor;
    v22[4] = v6;
    v23 = sub_100138D6C((uint64_t)v9, a3, (uint64_t)v22);
    *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  }
  return result;
}

Swift::Int sub_10013D8C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100053F2C(&qword_1005D7538);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v27 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v27 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      Hasher.init(_seed:)(v28, *(_QWORD *)(v3 + 40));
      swift_bridgeObjectRetain(v7);
      String.hash(into:)(v28, v8, v7);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = v16[1];
        v18 = *v16 == v8 && v17 == v7;
        if (v18 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, v7, 0), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease(v7);
          goto LABEL_4;
        }
        v19 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v19;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v20 = (_QWORD *)(v15 + 16 * v11);
          v21 = v20[1];
          if (*v20 != v8 || v21 != v7)
          {
            result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, v7, 0);
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v23 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v23 = v8;
      v23[1] = v7;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v26;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

unint64_t sub_10013DA60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  int v38;
  unsigned __int8 *v39;
  uint64_t v40;
  const mach_header_64 *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  int v49;
  char v50[16];
  id v51;
  uint64_t v52;

  v47 = a2;
  v3 = type metadata accessor for FMFMyInfo(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C((uint64_t *)&unk_1005D2A40);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v45 - v11;
  v13 = sub_100053F2C((uint64_t *)&unk_1005E59F0);
  __chkstk_darwin(v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = *(id *)(a1 + 16);
  v16 = v51;
  OS_dispatch_queue.sync<A>(execute:)(&v52, sub_10010C158, v50, &type metadata for Bool);

  v49 = v52;
  v46 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtC6FindMy19FMConditionProvider_isNetworkUp);
  v18 = dispatch thunk of FMFManager.friends.getter(v17);
  v45 = *(_QWORD *)(v18 + 16);
  swift_bridgeObjectRelease(v18);
  v19 = objc_msgSend((id)objc_opt_self(CLLocationManager), "locationServicesEnabled");
  v48 = (int)v19;
  dispatch thunk of FMFManager.preferences.getter(v19);
  v20 = type metadata accessor for FMFPreferences(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v15, 1, v20);
  if ((_DWORD)v22 == 1)
  {
    v23 = sub_1000051EC((uint64_t)v15, (uint64_t *)&unk_1005E59F0);
    v24 = 0;
  }
  else
  {
    v25 = FMFPreferences.hideLocation.getter(v22);
    v23 = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v15, v20);
    if ((v25 & 1) != 0)
      v24 = 0x1000000;
    else
      v24 = 0;
  }
  dispatch thunk of FMFManager.myInfo.getter(v23);
  sub_10013E360((uint64_t)v12, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    v26 = 0;
  }
  else
  {
    v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
    v28 = FMFMyInfo.deviceId.getter(v27);
    v30 = v29;
    v31 = FMFMyInfo.meDeviceId.getter();
    if (v32)
    {
      v33 = v32;
      if (v28 == v31 && v32 == v30)
      {
        swift_bridgeObjectRelease(v30);
        v34 = swift_bridgeObjectRelease(v33);
        v26 = 1;
      }
      else
      {
        v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v31, v32, 0);
        swift_bridgeObjectRelease(v30);
        v34 = swift_bridgeObjectRelease(v33);
      }
    }
    else
    {
      v34 = swift_bridgeObjectRelease(v30);
      v26 = 0;
    }
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v34);
  }
  v35 = v46 ^ 1u;
  v36 = v45 == 0;
  sub_1000051EC((uint64_t)v12, (uint64_t *)&unk_1005D2A40);
  v37 = *(unsigned __int8 **)(a1 + 16);
  v38 = v37[OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreSignedIn];
  v39 = v37;
  swift_release(a1);

  v40 = 0x10000;
  if (v48)
    v40 = 0;
  v41 = &_mh_execute_header;
  if ((v26 & 1) != 0)
    v41 = 0;
  v42 = 0x10000000000;
  if (v38)
    v42 = 0;
  v43 = 0x1000000000000;
  if (!v49)
    v43 = 0;
  return v43 | v35 | (v36 << 8) | v40 | v24 | (unint64_t)v41 | v42;
}

double sub_10013DE18(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t My;
  _QWORD *v14;
  double result;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[5];

  v9 = v4;
  v10 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  My = type metadata accessor for Feature.FindMy(0);
  v32[3] = My;
  v32[4] = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v14 = sub_10003D370(v32);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v14, enum case for Feature.FindMy.fmNiftyCurve(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(v32);
  sub_100029574(v32);
  if ((My & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100056D88(v16, (uint64_t)qword_1005F5748);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v29 = a3;
      v30 = v9;
      v20 = a1;
      v21 = a2;
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v23 = swift_slowAlloc(32, -1);
      v32[0] = v23;
      *(_DWORD *)v22 = 136315138;
      v31 = sub_100056DA0(v20, v21, v32);
      a3 = v29;
      v9 = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMStewieViewModel: %s", v22, 0xCu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);
    }

    v24 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v12, 1, 1, v24);
    type metadata accessor for MainActor(0);
    v25 = swift_retain(v9);
    v26 = static MainActor.shared.getter(v25);
    v27 = (_QWORD *)swift_allocObject(a3, 40, 7);
    v27[2] = v26;
    v27[3] = &protocol witness table for MainActor;
    v27[4] = v9;
    v28 = sub_100138D6C((uint64_t)v12, a4, (uint64_t)v27);
    *(_QWORD *)&result = swift_release(v28).n128_u64[0];
  }
  return result;
}

uint64_t sub_10013E0C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1005D7474);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000C7978;
  return sub_10013B260(a1, v4, v5, v6);
}

uint64_t sub_10013E134()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10013E158(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1005D7484);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000BBF58;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1005D7480 + dword_1005D7480))(a1, v4);
}

uint64_t sub_10013E1C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10013E1EC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10013E210()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10013E244(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const mach_header_64 *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(unsigned __int8 *)(v1 + 40);
  v8 = *(unsigned __int8 *)(v1 + 41);
  v9 = *(unsigned __int8 *)(v1 + 42);
  v10 = *(unsigned __int8 *)(v1 + 43);
  v11 = *(unsigned __int8 *)(v1 + 44);
  v12 = *(unsigned __int8 *)(v1 + 45);
  v13 = *(unsigned __int8 *)(v1 + 46);
  v14 = *(_QWORD *)(v1 + 48);
  v15 = *(_BYTE *)(v1 + 56);
  v16 = *(_QWORD *)(v1 + 64);
  v17 = v8 == 0;
  v18 = 256;
  if (v17)
    v18 = 0;
  v19 = v18 | v7;
  v20 = 0x10000;
  if (!v9)
    v20 = 0;
  v21 = 0x1000000;
  if (!v10)
    v21 = 0;
  v22 = v19 | v20 | v21;
  v23 = &_mh_execute_header;
  if (!v11)
    v23 = 0;
  v24 = 0x10000000000;
  if (!v12)
    v24 = 0;
  v25 = 0x1000000000000;
  if (!v13)
    v25 = 0;
  v26 = v22 | (unint64_t)v23 | v24 | v25;
  v27 = (_QWORD *)swift_task_alloc(dword_1005D749C);
  *(_QWORD *)(v2 + 16) = v27;
  *v27 = v2;
  v27[1] = sub_1000C7978;
  return sub_100139C1C(a1, v4, v5, v6, v26, v14, v15, v16);
}

uint64_t sub_10013E360(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C((uint64_t *)&unk_1005D2A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013E3A8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10013E3DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1005D7494);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1000C7978;
  return sub_100139A5C(a1, v4, v5, v7, v6);
}

uint64_t sub_10013E458(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1005D74AC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000C7978;
  return sub_10013B260(a1, v4, v5, v6);
}

uint64_t sub_10013E4C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1005D74BC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000C7978;
  return sub_10013B260(a1, v4, v5, v6);
}

uint64_t sub_10013E538(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1005D74CC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000C7978;
  return sub_10013B260(a1, v4, v5, v6);
}

uint64_t sub_10013E5A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1005D74DC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000C7978;
  return sub_10013B260(a1, v4, v5, v6);
}

uint64_t sub_10013E618(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1005D74EC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000C7978;
  return sub_10013B260(a1, v4, v5, v6);
}

double sub_10013E684()
{
  uint64_t My;
  _QWORD *v1;
  double result;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10[5];

  My = type metadata accessor for Feature.FindMy(0);
  v10[3] = My;
  v10[4] = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v1 = sub_10003D370(v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v1, enum case for Feature.FindMy.fmNiftyCurve(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(v10);
  sub_100029574(v10);
  if ((My & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_100056D88(v3, (uint64_t)qword_1005F5748);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      v8 = swift_slowAlloc(32, -1);
      v10[0] = v8;
      *(_DWORD *)v7 = 136315138;
      v9 = sub_100056DA0(0xD000000000000018, 0x80000001004AE220, v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, v10);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMStewieViewModel: %s", v7, 0xCu);
      swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v8, -1, -1);
      swift_slowDealloc(v7, -1, -1);
    }

    return sub_1001386E0();
  }
  return result;
}

uint64_t sub_10013E870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1005D7504);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1000C7978;
  v3[2] = v2;
  return swift_task_switch(sub_100139564, 0, 0);
}

uint64_t sub_10013E8D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10013E8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10013A414(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10013E904()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_errorRelease(*(_QWORD *)(v0 + 32));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10013E940(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1005D7514);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000BBF58;
  return sub_10013A518(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10013E9C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D7520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013EA08()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10013EA44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc(dword_1005D752C);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1000C7978;
  *(_QWORD *)(v3 + 56) = v2;
  *(_OWORD *)(v3 + 40) = v5;
  return swift_task_switch(sub_10013AF54, 0, 0);
}

uint64_t destroy for FMLostModeSummaryTextView.ValidatorType(uint64_t a1)
{
  return sub_100071E70(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s6FindMy25FMLostModeSummaryTextViewC13ValidatorTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10013C38C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FMLostModeSummaryTextView.ValidatorType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10013C38C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_100071E70(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for FMLostModeSummaryTextView.ValidatorType(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FMLostModeSummaryTextView.ValidatorType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_100071E70(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMLostModeSummaryTextView.ValidatorType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMLostModeSummaryTextView.ValidatorType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_10013EC48(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_10013EC60(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FMStewieViewModelState.ViewState.LastUpdated()
{
  return &type metadata for FMStewieViewModelState.ViewState.LastUpdated;
}

uint64_t getEnumTagSinglePayload for FMStewieViewModelState.ViewState.NotAvailableReason(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 6;
      if (v7 > 6)
        return result;
    }
    return 0;
  }
  v2 = a2 + 8;
  if (a2 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_10013ECD8 + 4 * byte_100484A6E[v4]))();
}

uint64_t storeEnumTagSinglePayload for FMStewieViewModelState.ViewState.NotAvailableReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 8;
  if (a3 + 8 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF8)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_10013ED84 + 4 * byte_100484A78[v5]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_10013EDB8 + 4 * byte_100484A73[v5]))();
}

uint64_t sub_10013EDB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013EDC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10013EDC8);
  return result;
}

uint64_t sub_10013EDD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10013EDDCLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_10013EDE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013EDE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013EDF4(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_10013EE10(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for FMStewieViewModelState.ViewState.NotAvailableReason()
{
  return &type metadata for FMStewieViewModelState.ViewState.NotAvailableReason;
}

void sub_10013EE3C(void *a1)
{
  char *v1;
  void *v2;
  id v3;
  objc_super v4;

  v4.receiver = a1;
  v4.super_class = (Class)type metadata accessor for FMLostModeLandingViewController(0);
  v1 = (char *)v4.receiver;
  objc_msgSendSuper2(&v4, "viewDidLoad");
  v2 = *(void **)&v1[qword_1005D7540];
  objc_msgSend(*(id *)&v1[qword_1005DBD20], "addSubview:", v2, v4.receiver, v4.super_class);
  v3 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v1, "continueActionWithSender:");
  objc_msgSend(v2, "addGestureRecognizer:", v3);

  sub_10013EF0C();
  sub_10013F058();

}

uint64_t sub_10013EF0C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  void *object;
  NSString v7;
  Swift::String v9;

  v1 = v0;
  v2 = *(id *)(*(_QWORD *)(v0 + qword_1005D7540) + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9._countAndFlagsBits = 0xD000000000000027;
  v9._object = (void *)0x80000001004A7370;
  v4._object = (void *)0x80000001004A7350;
  v4._countAndFlagsBits = 0xD000000000000015;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v9)._object;

  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v7, swift_bridgeObjectRelease(object).n128_f64[0]);

  return sub_10032C480(v1 + qword_1005F4F20);
}

void sub_10013F058()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;

  v1 = *(void **)(v0 + qword_1005D7540);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100053F2C(&qword_1005D2F10);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100481720;
  v5 = objc_msgSend(v1, "topAnchor");
  v6 = *(void **)(v0 + qword_1005DBD20);
  v7 = objc_msgSend(v6, "topAnchor");
  v8 = objc_msgSend(v5, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v1, "bottomAnchor");
  v10 = objc_msgSend(v6, "bottomAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v4 + 40) = v11;
  v12 = objc_msgSend(v1, "leadingAnchor");
  v13 = objc_msgSend(v6, "leadingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v4 + 48) = v14;
  v15 = objc_msgSend(v1, "trailingAnchor");
  v16 = objc_msgSend(v6, "trailingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v4 + 56) = v17;
  specialized Array._endMutation()(v18);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

void sub_10013F2B4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_100140590();

}

void sub_10013F300(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  char *v18;
  id v19;
  char *v20;
  char *v21;
  char *v22;
  id v23;
  char *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  objc_super v29;
  uint64_t v30;

  v2 = v1;
  v4 = type metadata accessor for FMIPItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FMItemPhoneNumberViewController(0);
  v8 = *(_QWORD *)&v1[qword_1005DBD28];
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v9(v7, a1, v4);
  v10 = swift_retain(v8);
  v11 = sub_1002FC918(v10, (uint64_t)v7, 0, 0);
  type metadata accessor for FMItemEmailViewController(0);
  v9(v7, a1, v4);
  v12 = swift_retain(v8);
  v13 = sub_100300BB8(v12, (uint64_t)v7, 0, 0);
  v14 = sub_100053F2C(&qword_1005D2F10);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1004820B0;
  *(_QWORD *)(v15 + 32) = v11;
  *(_QWORD *)(v15 + 40) = v13;
  v30 = v15;
  specialized Array._endMutation()(v15);
  v16 = v30;
  v17 = (objc_class *)type metadata accessor for FMPageViewController();
  v18 = (char *)objc_allocWithZone(v17);
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy20FMPageViewController_pages] = _swiftEmptyArrayStorage;
  v19 = objc_allocWithZone((Class)UIPageViewController);
  swift_retain(v8);
  v20 = v11;
  v21 = v13;
  v22 = v18;
  v23 = objc_msgSend(v19, "initWithTransitionStyle:navigationOrientation:options:", 1, 0, 0);
  *(_QWORD *)&v22[OBJC_IVAR____TtC6FindMy20FMPageViewController_pageViewController] = v23;

  v29.receiver = v22;
  v29.super_class = v17;
  v24 = (char *)objc_msgSendSuper2(&v29, "initWithNibName:bundle:", 0, 0);
  swift_release(v8);
  v25 = *(_QWORD *)&v24[OBJC_IVAR____TtC6FindMy20FMPageViewController_pages];
  *(_QWORD *)&v24[OBJC_IVAR____TtC6FindMy20FMPageViewController_pages] = v16;
  v26 = objc_msgSend(v2, "navigationController", swift_bridgeObjectRelease(v25).n128_f64[0]);
  if (v26)
  {
    v27 = v26;
    objc_msgSend(v26, "pushViewController:animated:", v24, 1);

  }
}

double sub_10013F53C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *v29;
  char *v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  id v35;
  char *v36;
  uint64_t v37;
  double v38;
  id v39;
  void *v40;
  double result;
  uint64_t v42;
  unint64_t v43;
  char v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t Strong;
  void *v52;
  char *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  objc_super v59;
  uint64_t v60[3];

  v57 = a2;
  v3 = type metadata accessor for FMIPFeatures(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v56 - v8;
  v10 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMIPDevice(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = FMIPDevice.isConsideredAccessory.getter(v17);
  if ((v18 & 1) != 0)
  {
    type metadata accessor for FMDevicePhoneNumberViewController(0);
    v19 = *(_QWORD *)&v58[qword_1005DBD28];
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v20(v16, a1, v13);
    v21 = v57;
    sub_1000E5B2C(v57, (uint64_t)v12);
    v22 = swift_retain(v19);
    v23 = sub_1002A2B64(v22, (uint64_t)v16, (uint64_t)v12, 2, 0, 0);
    type metadata accessor for FMDeviceEmailViewController(0);
    v20(v16, a1, v13);
    sub_1000E5B2C(v21, (uint64_t)v12);
    v24 = swift_retain(v19);
    v25 = sub_100364BE4(v24, (uint64_t)v16, (uint64_t)v12, 0, 0);
    v26 = sub_100053F2C(&qword_1005D2F10);
    v27 = swift_allocObject(v26, 48, 7);
    *(_OWORD *)(v27 + 16) = xmmword_1004820B0;
    *(_QWORD *)(v27 + 32) = v23;
    *(_QWORD *)(v27 + 40) = v25;
    v60[0] = v27;
    specialized Array._endMutation()(v27);
    v28 = v60[0];
    v29 = (objc_class *)type metadata accessor for FMPageViewController();
    v30 = (char *)objc_allocWithZone(v29);
    *(_QWORD *)&v30[OBJC_IVAR____TtC6FindMy20FMPageViewController_pages] = _swiftEmptyArrayStorage;
    v31 = objc_allocWithZone((Class)UIPageViewController);
    swift_retain(v19);
    v32 = v23;
    v33 = v25;
    v34 = v30;
    v35 = objc_msgSend(v31, "initWithTransitionStyle:navigationOrientation:options:", 1, 0, 0);
    *(_QWORD *)&v34[OBJC_IVAR____TtC6FindMy20FMPageViewController_pageViewController] = v35;

    v59.receiver = v34;
    v59.super_class = v29;
    v36 = (char *)objc_msgSendSuper2(&v59, "initWithNibName:bundle:", 0, 0);
    swift_release(v19);
    v37 = *(_QWORD *)&v36[OBJC_IVAR____TtC6FindMy20FMPageViewController_pages];
    *(_QWORD *)&v36[OBJC_IVAR____TtC6FindMy20FMPageViewController_pages] = v28;
    *(_QWORD *)&v38 = swift_bridgeObjectRelease(v37).n128_u64[0];
    v39 = objc_msgSend(v58, "navigationController", v38);
    if (v39)
    {
      v40 = v39;
      objc_msgSend(v39, "pushViewController:animated:", v36, 1);

    }
  }
  else
  {
    v42 = FMIPDevice.features.getter(v18);
    static FMIPFeatures.isLostModeWithLocationServiceEnabled.getter(v42);
    v43 = sub_1001404F0();
    v44 = dispatch thunk of SetAlgebra.isSuperset(of:)(v7, v3, v43);
    v45 = *(void (**)(char *, uint64_t))(v4 + 8);
    v45(v7, v3);
    v45(v9, v3);
    v46 = sub_10013FA48(a1, v57);
    v47 = swift_allocObject(&unk_1005486E8, 24, 7);
    v48 = v47 + 16;
    swift_unknownObjectWeakInit(v47 + 16);
    v49 = swift_allocObject(&unk_100548710, 32, 7);
    *(_QWORD *)(v49 + 16) = v47;
    *(_QWORD *)(v49 + 24) = v46;
    if ((v44 & 1) != 0)
    {
      v50 = v46;
      sub_10013FC5C(a1, (uint64_t)sub_100140588, v49);
      swift_release(v49);

      return result;
    }
    swift_beginAccess(v48, v60, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v48);
    if (Strong)
    {
      v52 = (void *)Strong;
      v53 = v46;
      swift_retain(v47);
      v54 = objc_msgSend(v52, "navigationController");

      if (v54)
      {
        objc_msgSend(v54, "pushViewController:animated:", v53, 1);
        swift_release(v49);

        swift_release(v47);
        return result;
      }
      swift_release(v49);

      v55 = v47;
    }
    else
    {
      v55 = v49;
    }
    *(_QWORD *)&result = swift_release(v55).n128_u64[0];
  }
  return result;
}

void sub_10013F9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  id v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "navigationController");

    if (v6)
    {
      objc_msgSend(v6, "pushViewController:animated:", a2, 1);

    }
  }
}

char *sub_10013FA48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v3 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMIPDevice(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMIPFeatures(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v27 - v16;
  v18 = FMIPDevice.features.getter(v15);
  static FMIPFeatures.isKeypadEnabled.getter(v18);
  v19 = sub_1001404F0();
  v20 = dispatch thunk of SetAlgebra.isSuperset(of:)(v14, v10, v19);
  v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v14, v10);
  v21(v17, v10);
  if ((v20 & 1) != 0)
  {
    type metadata accessor for FMDevicePasscodeViewController(0);
    v22 = *(_QWORD *)(v27 + qword_1005DBD28);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    sub_1000E5B2C(v28, (uint64_t)v5);
    v23 = swift_retain(v22);
    return sub_100259CC8(v23, (uint64_t)v9, (uint64_t)v5, 2);
  }
  else
  {
    type metadata accessor for FMDevicePhoneNumberViewController(0);
    v25 = *(_QWORD *)(v27 + qword_1005DBD28);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    sub_1000E5B2C(v28, (uint64_t)v5);
    v26 = swift_retain(v25);
    return sub_1002A2B64(v26, (uint64_t)v9, (uint64_t)v5, 2, 0, 0);
  }
}

void sub_10013FC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  NSString v24;
  id v25;
  id v26;
  Swift::String v27;
  Swift::String v28;
  void *v29;
  NSString v30;
  void *v31;
  id v32;
  id v33;
  Swift::String v34;
  Swift::String v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void **aBlock;
  unint64_t v47;
  void (*v48)(uint64_t, void *);
  void *v49;
  uint64_t (*v50)();
  uint64_t v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;

  v44 = a3;
  v43 = a2;
  v4 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock = 0;
  v47 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v47);
  v7 = (void *)objc_opt_self(NSBundle);
  v8 = objc_msgSend(v7, "mainBundle");
  v9._countAndFlagsBits = 0xD000000000000030;
  v52._countAndFlagsBits = 0xD000000000000042;
  v52._object = (void *)0x80000001004AE3B0;
  v9._object = (void *)0x80000001004AE370;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v52)._object;

  v12 = type metadata accessor for FMIPDevice(0);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v6, a1, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
  v14 = sub_1001DE71C(0xD00000000000002FLL, 0x80000001004AE400, (uint64_t)v6);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  swift_bridgeObjectRetain(v19);
  sub_1001DDC8C(v14, v16, v18, v20, 0, 0);
  v22 = v21;
  swift_bridgeObjectRelease_n(v20, 2);
  swift_bridgeObjectRelease(v16);
  sub_1000051EC((uint64_t)v6, &qword_1005D6710);
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  v25 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v23, v24, 1);

  aBlock = 0;
  v47 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v26 = objc_msgSend(v7, "mainBundle", swift_bridgeObjectRelease(v47).n128_f64[0]);
  v53._countAndFlagsBits = 0xD000000000000025;
  v53._object = (void *)0x80000001004A73C0;
  v27._object = (void *)0x80000001004A73A0;
  v27._countAndFlagsBits = 0xD000000000000013;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v53)._object;

  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v29);
  v31 = (void *)objc_opt_self(UIAlertAction);
  v32 = objc_msgSend(v31, "actionWithTitle:style:handler:", v30, 1, 0);

  objc_msgSend(v25, "addAction:", v32);
  aBlock = 0;
  v47 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v33 = objc_msgSend(v7, "mainBundle", swift_bridgeObjectRelease(v47).n128_f64[0]);
  v54._countAndFlagsBits = 0xD000000000000021;
  v54._object = (void *)0x80000001004A5EE0;
  v34._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v34._object = (void *)0xEF454C5449545F4ELL;
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v36 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v33, v35, v54)._object;

  v37 = swift_allocObject(&unk_100548698, 32, 7);
  *(_QWORD *)(v37 + 16) = v43;
  v38 = v44;
  *(_QWORD *)(v37 + 24) = v44;
  swift_retain(v38);
  v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v36);
  v50 = sub_100021E58;
  v51 = v37;
  aBlock = _NSConcreteStackBlock;
  v47 = 1107296256;
  v48 = sub_100008B40;
  v49 = &unk_1005486B0;
  v40 = _Block_copy(&aBlock);
  v41 = objc_msgSend(v31, "actionWithTitle:style:handler:", v39, 0, v40, swift_release(v51).n128_f64[0]);
  _Block_release(v40);

  objc_msgSend(v25, "addAction:", v41);
  objc_msgSend(v45, "presentViewController:animated:completion:", v25, 1, 0);

}

id sub_100140120(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  objc_super v14;

  v2 = v1;
  v4 = qword_1005D7540;
  v5 = (char *)objc_allocWithZone((Class)type metadata accessor for FMEmptyListButton());
  v6 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  v7 = (void *)objc_opt_self(UIColor);
  v8 = v2;
  v9 = v5;
  *(_QWORD *)&v5[v6] = objc_msgSend(v7, "systemBlueColor");
  v9[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  v10 = objc_msgSend(v7, "tertiarySystemFillColor");
  v11 = sub_1000472FC(v10, 1, 1, 0);

  *(_QWORD *)&v2[v4] = v11;
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for FMLostModeLandingViewController(0);
  v12 = objc_msgSendSuper2(&v14, "initWithCoder:", a1);

  return v12;
}

id sub_100140244(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100140120(a3);
}

void sub_100140268()
{
  uint64_t v0;

}

id sub_100140278()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMLostModeLandingViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1001402AC(uint64_t a1)
{

}

uint64_t type metadata accessor for FMLostModeLandingViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D7570;
  if (!qword_1005D7570)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMLostModeLandingViewController);
  return result;
}

uint64_t sub_1001402F8(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 256, 1, &v2, a1 + 360);
}

uint64_t sub_10014033C()
{
  return type metadata accessor for FMLostModeLandingViewController(0);
}

id sub_100140344(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v19;

  v3 = v2;
  v6 = type metadata accessor for FMLostModeTrackable(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = qword_1005D7540;
  v10 = (char *)objc_allocWithZone((Class)type metadata accessor for FMEmptyListButton());
  v11 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  v12 = (void *)objc_opt_self(UIColor);
  v13 = v3;
  v14 = v10;
  *(_QWORD *)&v10[v11] = objc_msgSend(v12, "systemBlueColor");
  v14[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  v15 = objc_msgSend(v12, "tertiarySystemFillColor");
  v16 = sub_1000472FC(v15, 1, 1, 0);

  *(_QWORD *)&v3[v9] = v16;
  sub_1000E5A64(a2, (uint64_t)v8);
  *(_QWORD *)&v13[qword_1005D6D28] = 0;
  sub_1000E5A64((uint64_t)v8, (uint64_t)&v13[qword_1005F4F20]);
  v17 = sub_10033161C(a1);
  sub_1000E5AA8((uint64_t)v8);
  sub_1000E5AA8(a2);
  return v17;
}

uint64_t sub_1001404CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1001404F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D72F0;
  if (!qword_1005D72F0)
  {
    v1 = type metadata accessor for FMIPFeatures(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for FMIPFeatures, v1);
    atomic_store(result, (unint64_t *)&qword_1005D72F0);
  }
  return result;
}

uint64_t sub_100140538()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10014055C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100140588()
{
  uint64_t v0;

  sub_10013F9B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100140590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v1 = type metadata accessor for FMIPItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMIPDevice(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMLostModeTrackable(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E5A64(v0 + qword_1005F4F20, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    v15 = (uint64_t)&v14[*(int *)(sub_100053F2C(&qword_1005D2F90) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    sub_1000E5AE4(v15, (uint64_t)v7);
    sub_10013F53C((uint64_t)v11, (uint64_t)v7);
    sub_1000051EC((uint64_t)v7, (uint64_t *)&unk_1005D3AA0);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v14, v1);
    sub_10013F300((uint64_t)v4);
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

double sub_100140764()
{
  double result;

  if (qword_1005D20B8 != -1)
    swift_once(&qword_1005D20B8, sub_10005E610);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  result = *(double *)&qword_1005F5978;
  __asm { FMOV            V1.2D, #10.0 }
  xmmword_1005F4F40 = _Q1;
  *(_OWORD *)algn_1005F4F50 = _Q1;
  xmmword_1005F4F60 = xmmword_100484C60;
  qword_1005F4F70 = qword_1005F5978;
  return result;
}

void sub_1001408AC(uint64_t a1)
{
  char *v1;
  void *v3;
  id v4;
  id v5;
  void *v6;
  char **v7;
  id v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for FMSectionPlatterSwitchAndButtonGroupView();
  objc_msgSendSuper2(&v9, "traitCollectionDidChange:", a1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC6FindMy40FMSectionPlatterSwitchAndButtonGroupView_contentView];
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend(v4, "userInterfaceStyle");
  v6 = (void *)objc_opt_self(UIColor);
  v7 = &selRef_tertiarySystemFillColor;
  if (v5 != (id)2)
    v7 = &selRef_whiteColor;
  v8 = objc_msgSend(v6, *v7);

  objc_msgSend(v3, "setBackgroundColor:", v8);
}

id sub_100140A2C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSectionPlatterSwitchAndButtonGroupView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMSectionPlatterSwitchAndButtonGroupView()
{
  return objc_opt_self(_TtC6FindMy40FMSectionPlatterSwitchAndButtonGroupView);
}

__n128 initializeWithCopy for FMSPlatterSwitchAndButtonGroupViewStyle(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FMSPlatterSwitchAndButtonGroupViewStyle(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FMSPlatterSwitchAndButtonGroupViewStyle(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FMSPlatterSwitchAndButtonGroupViewStyle()
{
  return &type metadata for FMSPlatterSwitchAndButtonGroupViewStyle;
}

uint64_t sub_100140B78(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v5 = v2 + OBJC_IVAR____TtC6FindMy40FMSectionPlatterSwitchAndButtonGroupView_delegate;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC6FindMy40FMSectionPlatterSwitchAndButtonGroupView_delegate);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 8))(a1, a2 & 1, ObjectType, v8);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

void sub_100140C00()
{
  _BYTE *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;

  v1 = OBJC_IVAR____TtC6FindMy40FMSectionPlatterSwitchAndButtonGroupView_style;
  if (qword_1005D1C30 != -1)
    swift_once(&qword_1005D1C30, sub_100140764);
  v2 = &v0[v1];
  v3 = qword_1005F4F70;
  v4 = *(_OWORD *)algn_1005F4F50;
  v5 = xmmword_1005F4F60;
  *(_OWORD *)v2 = xmmword_1005F4F40;
  *((_OWORD *)v2 + 1) = v4;
  *((_OWORD *)v2 + 2) = v5;
  *((_QWORD *)v2 + 6) = v3;
  v6 = OBJC_IVAR____TtC6FindMy40FMSectionPlatterSwitchAndButtonGroupView_sectionLabel;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v7 = OBJC_IVAR____TtC6FindMy40FMSectionPlatterSwitchAndButtonGroupView_contentView;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v8 = OBJC_IVAR____TtC6FindMy40FMSectionPlatterSwitchAndButtonGroupView_switchView;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMSettingSwitchView()), "init");
  v0[OBJC_IVAR____TtC6FindMy40FMSectionPlatterSwitchAndButtonGroupView_switchViewIsVisible] = 1;
  v9 = OBJC_IVAR____TtC6FindMy40FMSectionPlatterSwitchAndButtonGroupView_separatorView;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = OBJC_IVAR____TtC6FindMy40FMSectionPlatterSwitchAndButtonGroupView_actionButton;
  *(_QWORD *)&v0[v10] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v0[OBJC_IVAR____TtC6FindMy40FMSectionPlatterSwitchAndButtonGroupView_actionButtonIsVisible] = 1;
  v11 = &v0[OBJC_IVAR____TtC6FindMy40FMSectionPlatterSwitchAndButtonGroupView_delegate];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11);
  v0[OBJC_IVAR____TtC6FindMy40FMSectionPlatterSwitchAndButtonGroupView_isActionEnabled] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMSectionPlatterSwitchAndButtonGroupView.swift", 53, 2, 83, 0);
  __break(1u);
}

id sub_100140DA8()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  objc_super v9;

  v1 = OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_displayTextView;
  v2 = objc_allocWithZone((Class)UITextView);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_placeholderTextView;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)UITextView), "init");
  v5 = OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_deleteButton;
  *(_QWORD *)&v3[v5] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v6 = &v3[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_textSizeHeightConstraint] = 0;

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for FMAccessoryNameTextField();
  v7 = objc_msgSendSuper2(&v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100140EEC();
  sub_100141304();

  return v7;
}

id sub_100140EEC()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t inited;
  NSString *v11;
  unint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  NSString v20;
  id v21;
  id v22;
  uint64_t v24;

  v1 = v0;
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "tertiarySystemFillColor");
  objc_msgSend(v1, "setBackgroundColor:", v3);

  v4 = objc_msgSend(v1, "layer");
  objc_msgSend(v4, "setCornerRadius:", _UISheetCornerRadius);

  v5 = objc_msgSend(v1, "layer");
  objc_msgSend(v5, "setMasksToBounds:", 1);

  v6 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_displayTextView];
  v7 = (void *)objc_opt_self(UIFont);
  v8 = objc_msgSend(v7, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  v9 = sub_100053F2C((uint64_t *)&unk_1005D7EA0);
  inited = swift_initStackObject(v9, &v24);
  *(_OWORD *)(inited + 16) = xmmword_100481740;
  *(_QWORD *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightMedium;
  v11 = UIFontWeightTrait;
  v12 = sub_10004907C(inited);
  v13 = sub_100049188(v12);

  objc_msgSend(v6, "setFont:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);
  objc_msgSend(v6, "setDelegate:", v1);
  v14 = objc_msgSend(v2, "clearColor");
  objc_msgSend(v6, "setBackgroundColor:", v14);

  objc_msgSend(v6, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v6, "setScrollEnabled:", 0);
  objc_msgSend(v6, "setReturnKeyType:", 9);
  v15 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_placeholderTextView];
  v16 = objc_msgSend(v7, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  objc_msgSend(v15, "setFont:", v16);

  v17 = objc_msgSend(v2, "secondaryLabelColor");
  objc_msgSend(v15, "setTextColor:", v17);

  v18 = objc_msgSend(v2, "clearColor");
  objc_msgSend(v15, "setBackgroundColor:", v18);

  objc_msgSend(v15, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v15, "setScrollEnabled:", 0);
  objc_msgSend(v15, "setUserInteractionEnabled:", 0);
  v19 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_deleteButton];
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v20);

  objc_msgSend(v19, "setImage:forState:", v21, 0);
  objc_msgSend(v19, "addTarget:action:forControlEvents:", v1, "clearTextView", 64);
  objc_msgSend(v19, "setHidden:", 1);
  v22 = objc_msgSend(v2, "tertiaryLabelColor");
  objc_msgSend(v19, "setTintColor:", v22);

  objc_msgSend(v1, "addSubview:", v15);
  objc_msgSend(v1, "addSubview:", v6);
  return objc_msgSend(v1, "addSubview:", v19);
}

void sub_100141304()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  Class v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  Class v49;
  id v50;
  id v51;
  double v52;
  uint64_t v53;
  id v54;
  Class v55;
  void *v56;
  id v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_displayTextView];
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_deleteButton];
  v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_placeholderTextView];
  v5 = v2;
  v6 = v3;
  v7 = v4;
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v57 = v7;
  v8 = (void *)objc_opt_self(NSLayoutConstraint);
  v9 = sub_100053F2C(&qword_1005D2F10);
  v10 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100481720;
  v11 = objc_msgSend(v6, "widthAnchor");
  if (qword_1005D1E08 != -1)
    swift_once(&qword_1005D1E08, sub_1002889B8);
  v12 = objc_msgSend(v11, "constraintEqualToConstant:", *(double *)&qword_1005F57A8);

  *(_QWORD *)(v10 + 32) = v12;
  v13 = objc_msgSend(v6, "heightAnchor");
  v14 = objc_msgSend(v13, "constraintEqualToConstant:", *(double *)&qword_1005F57A8);

  *(_QWORD *)(v10 + 40) = v14;
  v15 = objc_msgSend(v6, "trailingAnchor");
  v16 = objc_msgSend(v1, "trailingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, -*(double *)&qword_1005F57A0);

  *(_QWORD *)(v10 + 48) = v17;
  v18 = objc_msgSend(v6, "centerYAnchor");
  v19 = objc_msgSend(v1, "centerYAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v10 + 56) = v20;
  specialized Array._endMutation()(v21);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "activateConstraints:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v23 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100481720;
  v59 = v8;
  v24 = objc_msgSend(v5, "topAnchor");
  v25 = objc_msgSend(v1, "topAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, *(double *)&qword_1005F57A0);

  *(_QWORD *)(v23 + 32) = v26;
  v58 = v9;
  v27 = objc_msgSend(v5, "leadingAnchor");
  v28 = objc_msgSend(v1, "leadingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v28, *(double *)&qword_1005F57A0);

  *(_QWORD *)(v23 + 40) = v29;
  v30 = objc_msgSend(v5, "trailingAnchor");
  v31 = objc_msgSend(v6, "leadingAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v31, -*(double *)&qword_1005F57A0);

  *(_QWORD *)(v23 + 48) = v32;
  v33 = objc_msgSend(v5, "bottomAnchor");
  v34 = objc_msgSend(v1, "bottomAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:constant:", v34, -*(double *)&qword_1005F57A0);

  *(_QWORD *)(v23 + 56) = v35;
  specialized Array._endMutation()(v36);
  v37 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v59, "activateConstraints:", v37, swift_bridgeObjectRelease(v23).n128_f64[0]);

  v38 = swift_allocObject(v9, 56, 7);
  *(_OWORD *)(v38 + 16) = xmmword_1004820C0;
  v39 = objc_msgSend(v57, "centerYAnchor");
  v40 = objc_msgSend(v5, "centerYAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

  *(_QWORD *)(v38 + 32) = v41;
  v42 = objc_msgSend(v57, "leadingAnchor");
  v43 = objc_msgSend(v5, "leadingAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v38 + 40) = v44;
  v45 = objc_msgSend(v57, "trailingAnchor");
  v46 = objc_msgSend(v5, "trailingAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  *(_QWORD *)(v38 + 48) = v47;
  specialized Array._endMutation()(v48);
  v49 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v59, "activateConstraints:", v49, swift_bridgeObjectRelease(v38).n128_f64[0]);

  v50 = objc_msgSend(v5, "heightAnchor");
  v51 = objc_msgSend(v50, "constraintEqualToConstant:", 0.0);

  LODWORD(v52) = 1148846080;
  objc_msgSend(v51, "setPriority:", v52);
  v53 = swift_allocObject(v58, 40, 7);
  *(_OWORD *)(v53 + 16) = xmmword_100481B00;
  *(_QWORD *)(v53 + 32) = v51;
  v60 = v53;
  specialized Array._endMutation()(v53);
  v54 = v51;
  v55 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v59, "activateConstraints:", v55, swift_bridgeObjectRelease(v60).n128_f64[0]);

  v56 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_textSizeHeightConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_textSizeHeightConstraint] = v54;

}

id sub_100141A20()
{
  char *v0;
  char *v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  NSString v6;

  v1 = &v0[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text + 8];
  *(_OWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text] = xmmword_100484D30;
  v3 = swift_bridgeObjectRelease(v2).n128_u64[0];
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_displayTextView];
  v5 = *((_QWORD *)v1 + 1);
  if (v5)
  {
    swift_bridgeObjectRetain(v5);
    v6 = String._bridgeToObjectiveC()();
    v3 = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v4, "setText:", v6, *(double *)&v3);

  sub_100141B00();
  return objc_msgSend(v0, "sendActionsForControlEvents:", 4096);
}

id sub_100141B00()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  _BOOL8 v4;
  unint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  void *v8;
  double v9;
  id result;
  CGRect v11;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text + 8);
  if (v2)
  {
    if ((v2 & 0x2000000000000000) != 0)
      v3 = HIBYTE(v2) & 0xF;
    else
      v3 = *v1 & 0xFFFFFFFFFFFFLL;
    v4 = v3 == 0;
  }
  else
  {
    v4 = 1;
  }
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_deleteButton), "setHidden:", v4);
  v5 = v1[1];
  if (v5)
  {
    if ((v5 & 0x2000000000000000) != 0)
      v6 = HIBYTE(v5) & 0xF;
    else
      v6 = *v1 & 0xFFFFFFFFFFFFLL;
    v7 = v6 != 0;
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_placeholderTextView), "setHidden:", v7);
  v8 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_displayTextView);
  objc_msgSend(v8, "frame");
  objc_msgSend(v8, "sizeThatFits:", CGRectGetWidth(v11), 1.79769313e308);
  result = *(id *)(v0 + OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_textSizeHeightConstraint);
  if (result)
    return objc_msgSend(result, "setConstant:", v9);
  return result;
}

void sub_100141C14(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  SEL *v12;
  uint8_t *v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = sub_100056D88(v4, (uint64_t)qword_1005F5748);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = a1;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  v12 = (SEL *)&unk_1005AA000;
  if (os_log_type_enabled(v10, v11))
  {
    v33 = v5;
    v34 = v2;
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = swift_slowAlloc(32, -1);
    v36 = v32;
    *(_DWORD *)v13 = 136315138;
    v14 = objc_msgSend(v9, "text");
    if (!v14)
    {

      __break(1u);
      return;
    }
    v15 = v14;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v18 = v17;

    v35 = sub_100056DA0(v16, v18, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);

    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMCustomRoleView: displayTextViewDidChange %s", v13, 0xCu);
    v19 = v32;
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v4);
    v2 = v34;
    v12 = (SEL *)&unk_1005AA000;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v20 = *(void **)&v2[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_displayTextView];
  v21 = objc_msgSend(v20, v12[305]);
  if (v21)
  {
    v22 = v21;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v25 = v24;

  }
  else
  {
    v23 = 0;
    v25 = 0;
  }
  v26 = (uint64_t *)&v2[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text];
  v27 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text + 8];
  *v26 = v23;
  v26[1] = v25;
  v28 = swift_bridgeObjectRelease(v27).n128_u64[0];
  v29 = v26[1];
  if (v29)
  {
    swift_bridgeObjectRetain(v29);
    v30 = String._bridgeToObjectiveC()();
    v28 = swift_bridgeObjectRelease(v29).n128_u64[0];
  }
  else
  {
    v30 = 0;
  }
  objc_msgSend(v20, "setText:", v30, *(double *)&v28);

  sub_100141B00();
  objc_msgSend(v2, "sendActionsForControlEvents:", 4096);
}

id sub_100141FBC(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  id result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a4 == 10 && a5 == 0xE100000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a4, a5, 10, 0xE100000000000000, 0) & 1) != 0)
  {
    objc_msgSend(a1, "resignFirstResponder");
    return 0;
  }
  result = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                                 + OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_displayTextView), "text"));
  if (result)
  {
    v11 = result;
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v14 = v13;

    v15 = String.count.getter(v12, v14);
    swift_bridgeObjectRelease(v14);
    v16 = String.count.getter(a4, a5);
    v17 = v16 - a3;
    if (__OFSUB__(v16, a3))
    {
      __break(1u);
    }
    else
    {
      a3 = v15 + v17;
      if (!__OFADD__(v15, v17))
      {
        if (qword_1005D1E08 == -1)
          return (id)(qword_1005F57B0 >= a3);
LABEL_12:
        swift_once(&qword_1005D1E08, sub_1002889B8);
        return (id)(qword_1005F57B0 >= a3);
      }
    }
    __break(1u);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

id sub_100142198()
{
  return sub_1000E0A1C(type metadata accessor for FMAccessoryNameTextField);
}

uint64_t type metadata accessor for FMAccessoryNameTextField()
{
  return objc_opt_self(_TtC6FindMy24FMAccessoryNameTextField);
}

void sub_1001422A4()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  Class isa;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy35FMAccessoryPairingNameSelectionCard_nameLabel];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v26 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100053F2C(&qword_1005D2F10);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100481720;
  v5 = objc_msgSend(v2, "topAnchor");
  v6 = objc_msgSend(v1, "contentView");
  v7 = objc_msgSend(v6, "mainContentGuide");

  v8 = objc_msgSend(v7, "topAnchor");
  v9 = objc_msgSend(v5, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v4 + 32) = v9;
  v10 = objc_msgSend(v2, "leadingAnchor");
  v11 = objc_msgSend(v1, "contentView");
  v12 = objc_msgSend(v11, "mainContentGuide");

  v13 = objc_msgSend(v12, "leadingAnchor");
  v14 = objc_msgSend(v10, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v4 + 40) = v14;
  v15 = objc_msgSend(v2, "trailingAnchor");
  v16 = objc_msgSend(v1, "contentView");
  v17 = objc_msgSend(v16, "mainContentGuide");

  v18 = objc_msgSend(v17, "trailingAnchor");
  v19 = objc_msgSend(v15, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v4 + 48) = v19;
  v20 = objc_msgSend(v2, "bottomAnchor");
  v21 = objc_msgSend(v1, "contentView");
  v22 = objc_msgSend(v21, "mainContentGuide");

  v23 = objc_msgSend(v22, "bottomAnchor");
  v24 = objc_msgSend(v20, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v4 + 56) = v24;
  specialized Array._endMutation()(v25);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v26, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

id sub_1001425D0(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  void *object;
  NSString v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  void *v15;
  NSString v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  NSString v23;
  id v24;
  Swift::String v25;
  Swift::String_optional v26;
  Swift::String v27;
  void *v28;
  void *v29;
  NSString v30;
  id v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;

  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v6._countAndFlagsBits = 0xD00000000000001FLL;
  v34._object = (void *)0x80000001004A5660;
  v6._object = (void *)0x80000001004AE680;
  v7.value._countAndFlagsBits = 0xD000000000000013;
  v7.value._object = (void *)0x80000001004A5640;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v34._countAndFlagsBits = 0xD000000000000018;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v34)._object;

  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:", v10, swift_bridgeObjectRelease(object).n128_f64[0]);

  v11 = objc_msgSend(v4, "mainBundle");
  v35._object = (void *)0x80000001004A5660;
  v12._object = (void *)0x80000001004AE6A0;
  v12._countAndFlagsBits = 0xD000000000000025;
  v13.value._countAndFlagsBits = 0xD000000000000013;
  v13.value._object = (void *)0x80000001004A5640;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v35._countAndFlagsBits = 0xD000000000000018;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v35)._object;

  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setSubtitle:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  v33 = v2;
  v17 = *(char **)&v2[OBJC_IVAR____TtC6FindMy35FMAccessoryPairingNameSelectionCard_nameLabel];
  v18 = &v17[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text];
  v19 = *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text + 8];
  *(_QWORD *)v18 = a1;
  *((_QWORD *)v18 + 1) = a2;
  swift_bridgeObjectRetain(a2);
  v20 = swift_bridgeObjectRelease(v19).n128_u64[0];
  v21 = *(void **)&v17[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_displayTextView];
  v22 = *((_QWORD *)v18 + 1);
  if (v22)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v18 + 1));
    v23 = String._bridgeToObjectiveC()();
    v20 = swift_bridgeObjectRelease(v22).n128_u64[0];
  }
  else
  {
    v23 = 0;
  }
  objc_msgSend(v21, "setText:", v23, *(double *)&v20);

  sub_100141B00();
  objc_msgSend(v17, "sendActionsForControlEvents:", 4096);
  v24 = objc_msgSend(v4, "mainBundle");
  v36._object = (void *)0x80000001004A5660;
  v25._object = (void *)0x80000001004AE6D0;
  v25._countAndFlagsBits = 0xD000000000000025;
  v26.value._countAndFlagsBits = 0xD000000000000013;
  v26.value._object = (void *)0x80000001004A5640;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v36._countAndFlagsBits = 0xD000000000000018;
  v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v36)._object;

  v29 = *(void **)&v17[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_placeholderTextView];
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setText:", v30, swift_bridgeObjectRelease(v28).n128_f64[0]);

  return objc_msgSend(v33, "setDismissalType:", 3);
}

id sub_1001428CC()
{
  char *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  void *object;
  uint64_t v6;
  NSString v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  double v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  id result;
  _QWORD aBlock[5];
  uint64_t v21;
  Swift::String v22;

  v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v22._countAndFlagsBits = 0xD000000000000018;
  v2._countAndFlagsBits = 0xD000000000000029;
  v22._object = (void *)0x80000001004A5660;
  v2._object = (void *)0x80000001004AE630;
  v3.value._object = (void *)0x80000001004A5640;
  v3.value._countAndFlagsBits = 0xD000000000000013;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v22)._object;

  v6 = swift_allocObject(&unk_100548810, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  swift_retain_n(v6, 2);
  swift_bridgeObjectRetain(object);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  aBlock[4] = sub_100142E6C;
  v21 = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100008B40;
  aBlock[3] = &unk_100548828;
  v8 = _Block_copy(aBlock);
  v9 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v7, 0, v8);

  _Block_release(v8);
  v10 = objc_msgSend(v0, "addAction:", v9, swift_release(v21).n128_f64[0]);
  swift_bridgeObjectRelease(object);
  swift_release_n(v6, 2);

  v11 = OBJC_IVAR____TtC6FindMy35FMAccessoryPairingNameSelectionCard_continueAction;
  v12 = *(void **)&v0[OBJC_IVAR____TtC6FindMy35FMAccessoryPairingNameSelectionCard_continueAction];
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy35FMAccessoryPairingNameSelectionCard_continueAction] = v9;

  v14 = (uint64_t *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy35FMAccessoryPairingNameSelectionCard_nameLabel]
                  + OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text);
  v15 = v14[1];
  if (v15)
  {
    v16 = *v14;
    swift_bridgeObjectRetain(v14[1]);
    v17 = String.characterCount.getter(v16, v15);
    *(_QWORD *)&v13 = swift_bridgeObjectRelease(v15).n128_u64[0];
    v18 = v17 != 0;
    result = *(id *)&v0[v11];
    if (!result)
      return result;
  }
  else
  {
    v18 = 1;
    result = *(id *)&v0[v11];
    if (!result)
      return result;
  }
  return objc_msgSend(result, "setEnabled:", v18, v13);
}

void sub_100142B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t Strong;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __n128 v13;
  _BYTE v15[24];

  v3 = type metadata accessor for FMAccessoryPairingCoordinator.Event(0);
  __chkstk_darwin(v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = (uint64_t *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC6FindMy35FMAccessoryPairingNameSelectionCard_nameLabel)
                   + OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text);
    v9 = v8[1];
    if (v9
      && (v10 = *v8,
          (v11 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC6FindMy35FMAccessoryPairingNameSelectionCard_coordinator)) != 0))
    {
      v12 = (void *)v11;
      *v5 = v10;
      v5[1] = v9;
      swift_storeEnumTagMultiPayload(v5, v3, 0);
      v13 = swift_bridgeObjectRetain(v9);
      sub_1000F3128(v5, v13);

      sub_100142E74((uint64_t)v5);
    }
    else
    {

    }
  }
}

id sub_100142C2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 v5;
  id result;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy35FMAccessoryPairingNameSelectionCard_nameLabel)
                 + OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text);
  v2 = v1[1];
  if (v2)
  {
    v3 = *v1;
    swift_bridgeObjectRetain(v1[1]);
    v4 = String.characterCount.getter(v3, v2);
    swift_bridgeObjectRelease(v2);
    v5 = v4 != 0;
  }
  else
  {
    v5 = 1;
  }
  result = *(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMAccessoryPairingNameSelectionCard_continueAction);
  if (result)
    return objc_msgSend(result, "setEnabled:", v5);
  return result;
}

id sub_100142DC4()
{
  return sub_1000E0A1C(type metadata accessor for FMAccessoryPairingNameSelectionCard);
}

uint64_t type metadata accessor for FMAccessoryPairingNameSelectionCard()
{
  return objc_opt_self(_TtC6FindMy35FMAccessoryPairingNameSelectionCard);
}

uint64_t sub_100142E48()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100142E6C(uint64_t a1)
{
  uint64_t v1;

  sub_100142B1C(a1, v1);
}

uint64_t sub_100142E74(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMAccessoryPairingCoordinator.Event(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100142EB0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  v1 = OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_displayTextView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UITextView), "init");
  v2 = OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_placeholderTextView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UITextView), "init");
  v3 = OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_deleteButton;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v4 = &v0[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_textSizeHeightConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMAccessoryPairingNameSelectionCard.swift", 48, 2, 53, 0);
  __break(1u);
}

id sub_100142F90()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSString v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for CharacterSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_displayTextView];
  result = objc_msgSend(v6, "text");
  if (result)
  {
    v8 = result;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v11 = v10;

    v22 = v9;
    v23 = v11;
    static CharacterSet.whitespacesAndNewlines.getter(v12);
    v13 = sub_1000517B8();
    v14 = StringProtocol.trimmingCharacters(in:)(v5, &type metadata for String, v13);
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_bridgeObjectRelease(v23);
    v17 = (uint64_t *)&v1[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text];
    v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMAccessoryNameTextField_text + 8];
    *v17 = v14;
    v17[1] = v16;
    v19 = swift_bridgeObjectRelease(v18).n128_u64[0];
    v20 = v17[1];
    if (v20)
    {
      swift_bridgeObjectRetain(v17[1]);
      v21 = String._bridgeToObjectiveC()();
      v19 = swift_bridgeObjectRelease(v20).n128_u64[0];
    }
    else
    {
      v21 = 0;
    }
    objc_msgSend(v6, "setText:", v21, *(double *)&v19);

    sub_100141B00();
    return objc_msgSend(v1, "sendActionsForControlEvents:", 4096);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FMAccessoryPairingNameSelectionCard.ViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for FMETA(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for FMAccessoryPairingNameSelectionCard.ViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for FMAccessoryPairingNameSelectionCard.ViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMAccessoryPairingNameSelectionCard.ViewModel(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMAccessoryPairingNameSelectionCard.ViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMAccessoryPairingNameSelectionCard.ViewModel()
{
  return &type metadata for FMAccessoryPairingNameSelectionCard.ViewModel;
}

uint64_t sub_1001432C8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  NSString v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  Swift::String_optional v17;
  Swift::String v18;
  void *object;
  NSString v20;
  uint64_t v22;
  Swift::String v23;

  v6 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_label);
  objc_msgSend(v9, "setFont:", *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy25FMNotificationPlatterView_preferredFont));
  if ((a1 & 1) != 0 && a3)
  {
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setText:", v10);

    *(_BYTE *)(v3 + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_isChevronVisible) = 0;
    sub_1002582C8();
    v11 = type metadata accessor for FMPlatterIcon(0);
    v12 = v8;
    v13 = v11;
    v14 = 25;
  }
  else
  {
    v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v23._countAndFlagsBits = 0xD000000000000017;
    v16._countAndFlagsBits = 0xD00000000000002BLL;
    v23._object = (void *)0x80000001004A6680;
    v16._object = (void *)0x80000001004AE800;
    v17.value._object = (void *)0x80000001004A6660;
    v17.value._countAndFlagsBits = 0xD000000000000012;
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v23)._object;

    v20 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setText:", v20, swift_bridgeObjectRelease(object).n128_f64[0]);

    objc_msgSend(v9, "setNumberOfLines:", 1);
    objc_msgSend(v9, "setAdjustsFontSizeToFitWidth:", 1);
    *(_BYTE *)(v3 + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_isChevronVisible) = 1;
    sub_1002582C8();
    v11 = type metadata accessor for FMPlatterIcon(0);
    v12 = v8;
    v13 = v11;
    v14 = 24;
  }
  swift_storeEnumTagMultiPayload(v12, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 0, 1, v11);
  return sub_1002565D8((uint64_t)v8);
}

void sub_100143508(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  Swift::String v16;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_subtitle);
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v16._countAndFlagsBits = 0xD000000000000017;
  v7._countAndFlagsBits = 0xD000000000000026;
  v16._object = (void *)0x80000001004A6680;
  v7._object = (void *)0x80000001004AE7D0;
  v8.value._object = (void *)0x80000001004A6660;
  v8.value._countAndFlagsBits = 0xD000000000000012;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v16);

  v11 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100481740;
  *(_QWORD *)(v12 + 56) = &type metadata for String;
  *(_QWORD *)(v12 + 64) = sub_100071E88();
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  String.init(format:_:)(v10._countAndFlagsBits, v10._object, v12);
  v14 = v13;
  swift_bridgeObjectRelease(v10._object);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setText:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

}

void sub_100143678()
{
  uint64_t v0;

}

id sub_1001436A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMNotificationPlatterView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100143710()
{
  return type metadata accessor for FMNotificationPlatterView(0);
}

uint64_t type metadata accessor for FMNotificationPlatterView(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D78E0;
  if (!qword_1005D78E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMNotificationPlatterView);
  return result;
}

uint64_t sub_100143754(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 552);
}

Swift::Int sub_100143798()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::UInt v3;
  _QWORD v5[9];

  v2 = *v0;
  v1 = v0[1];
  Hasher.init(_seed:)(v5, 0);
  switch(v1)
  {
    case 0:
      v3 = 0;
      goto LABEL_7;
    case 1:
      v3 = 1;
      goto LABEL_7;
    case 2:
      v3 = 2;
      goto LABEL_7;
    case 3:
      v3 = 3;
LABEL_7:
      Hasher._combine(_:)(v3);
      break;
    default:
      Hasher._combine(_:)(4uLL);
      String.hash(into:)(v5, v2, v1);
      break;
  }
  return Hasher._finalize()();
}

void sub_100143848(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  Swift::UInt v4;
  uint64_t v5;

  v3 = v1[1];
  switch(v3)
  {
    case 0:
      v4 = 0;
      goto LABEL_7;
    case 1:
      v4 = 1;
      goto LABEL_7;
    case 2:
      v4 = 2;
      goto LABEL_7;
    case 3:
      v4 = 3;
LABEL_7:
      Hasher._combine(_:)(v4);
      break;
    default:
      v5 = *v1;
      Hasher._combine(_:)(4uLL);
      String.hash(into:)(a1, v5, v3);
      break;
  }
}

Swift::Int sub_1001438E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::UInt v4;
  _QWORD v6[9];

  v3 = *v1;
  v2 = v1[1];
  Hasher.init(_seed:)(v6, a1);
  switch(v2)
  {
    case 0:
      v4 = 0;
      goto LABEL_7;
    case 1:
      v4 = 1;
      goto LABEL_7;
    case 2:
      v4 = 2;
      goto LABEL_7;
    case 3:
      v4 = 3;
LABEL_7:
      Hasher._combine(_:)(v4);
      break;
    default:
      Hasher._combine(_:)(4uLL);
      String.hash(into:)(v6, v3, v2);
      break;
  }
  return Hasher._finalize()();
}

uint64_t sub_10014398C(uint64_t *a1, uint64_t a2)
{
  return sub_100145754(*a1, a1[1], *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

uint64_t sub_1001439A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FMAnnotationIdentifier(0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_100053F2C((uint64_t *)&unk_1005D7A50);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v9[*(int *)(v7 + 48)];
  sub_100145168(v1, (uint64_t)v9);
  sub_100145168(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload(v9, v3) == 4)
  {
    sub_100145168((uint64_t)v9, (uint64_t)v5);
    v12 = *v5;
    v11 = v5[1];
    swift_bridgeObjectRelease(v5[3]);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v3);
    if (EnumCaseMultiPayload == 4)
    {
      v18 = *(_QWORD *)v10;
      v19 = *((_QWORD *)v10 + 1);
      swift_bridgeObjectRelease(*((_QWORD *)v10 + 3));
      if (v12 == v18 && v11 == v19)
      {
        v17 = 1;
        v19 = v11;
      }
      else
      {
        v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v11, v18, v19, 0);
      }
      swift_bridgeObjectRelease(v11);
      v21 = v19;
      goto LABEL_20;
    }
    if (EnumCaseMultiPayload == 2)
    {
      v14 = *(_QWORD *)v10;
      v15 = *((_QWORD *)v10 + 1);
      if (v12 == v14 && v11 == v15)
      {
        v17 = 1;
        v15 = v11;
      }
      else
      {
        v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v11, v14, v15, 0);
      }
      swift_bridgeObjectRelease(v11);
      v21 = v15;
LABEL_20:
      swift_bridgeObjectRelease(v21);
      sub_100144CF8((uint64_t)v9);
      return v17 & 1;
    }
    swift_bridgeObjectRelease(v11);
  }
  sub_1000051EC((uint64_t)v9, (uint64_t *)&unk_1005D7A50);
  v17 = 0;
  return v17 & 1;
}

void sub_100143B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for FMAnnotationIdentifier(0);
  v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v6 = (char *)&v8 - v5;
  sub_100145168(v1, (uint64_t)&v8 - v5);
  v7 = (char *)sub_100143C4C + 4 * byte_100484DEC[swift_getEnumCaseMultiPayload(v6, v3)];
  __asm { BR              X10 }
}

uint64_t sub_100143C4C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  Hasher._combine(_:)(1uLL);
  String.hash(into:)(v0, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

void sub_100143CB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  Hasher._combine(_:)(5uLL);
  String.hash(into:)(v0, v2, v3);
  swift_bridgeObjectRelease(v3);
  String.hash(into:)(v0, v4, v5);
  JUMPOUT(0x100143C94);
}

void sub_100143CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v1, v2);
  Hasher._combine(_:)(6uLL);
  v5 = sub_10003FAF4((unint64_t *)&unk_1005E4270, 255, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v0, v2, v5);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  JUMPOUT(0x100143C98);
}

void sub_100143D64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::UInt v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *v1;
  v6 = *(_QWORD *)(*v1 + 16);
  v5 = *(_QWORD *)(*v1 + 24);
  v7 = *(_QWORD *)(*v1 + 32);
  Hasher._combine(_:)(7uLL);
  switch(v5)
  {
    case 0:
      v8 = 0;
      goto LABEL_7;
    case 1:
      v8 = 1;
      goto LABEL_7;
    case 2:
      v8 = 2;
      goto LABEL_7;
    case 3:
      v8 = 3;
LABEL_7:
      Hasher._combine(_:)(v8);
      break;
    default:
      Hasher._combine(_:)(4uLL);
      String.hash(into:)(v0, v6, v5);
      break;
  }
  Hasher._combine(_:)(*(_QWORD *)(v7 + 16));
  v9 = *(_QWORD *)(v7 + 16);
  if (v9)
  {
    v10 = v7 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v11 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_100145168(v10, v2);
      sub_100143B68();
      sub_100144CF8(v2);
      v10 += v11;
      --v9;
    }
    while (v9);
  }
  swift_release(v4);
  JUMPOUT(0x100143C98);
}

Swift::Int sub_100143E54()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100143B68();
  return Hasher._finalize()();
}

Swift::Int sub_100143E94(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100143B68();
  return Hasher._finalize()();
}

uint64_t sub_100143F9C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1005D1DD8 != -1)
    swift_once(&qword_1005D1DD8, sub_10027F578);
  return sub_1001457E0((uint64_t)&xmmword_1005F5678, a1);
}

id sub_100143FEC(uint64_t a1, uint64_t a2, char a3, char a4, double a5, double a6, double a7)
{
  _BYTE *v7;
  _QWORD *v8;
  _QWORD *v9;
  double *v10;
  objc_super v12;

  v8 = &v7[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy12FMAnnotation_badgeImage] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy12FMAnnotation_stewieBadgeImage] = 0;
  v9 = &v7[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier];
  *v9 = a1;
  v9[1] = a2;
  v10 = (double *)&v7[OBJC_IVAR____TtC6FindMy12FMAnnotation_coordinate];
  *v10 = a5;
  v10[1] = a6;
  *(double *)&v7[OBJC_IVAR____TtC6FindMy12FMAnnotation_horizontalAccuracy] = a7;
  v7[OBJC_IVAR____TtC6FindMy12FMAnnotation_isWithYou] = a2 == 1;
  v7[OBJC_IVAR____TtC6FindMy12FMAnnotation_isInaccurate] = a3;
  v7[OBJC_IVAR____TtC6FindMy12FMAnnotation_isLive] = a4;
  v12.receiver = v7;
  v12.super_class = (Class)type metadata accessor for FMAnnotation();
  return objc_msgSendSuper2(&v12, "init");
}

void sub_10014409C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000004BLL, 0x80000001004AEA80, "FindMy/FMAnnotation.swift", 25, 2, 113, 0);
  __break(1u);
}

void sub_1001440F4()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000039, 0x80000001004AEA40, "FindMy/FMAnnotation.swift", 25, 2, 123, 0);
  __break(1u);
}

void sub_10014414C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ELL, 0x80000001004AEA00, "FindMy/FMAnnotation.swift", 25, 2, 127, 0);
  __break(1u);
}

void sub_1001441A4()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ALL, 0x80000001004AE9C0, "FindMy/FMAnnotation.swift", 25, 2, 131, 0);
  __break(1u);
}

uint64_t sub_1001441FC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  void *v20;
  void *v21;
  char v22;
  int v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  char v34;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  _QWORD *v47;
  _BYTE v48[24];
  uint64_t v49;

  v2 = v1;
  ObjectType = swift_getObjectType(v2);
  v5 = type metadata accessor for FMAnnotationIdentifier(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v46 - v9;
  sub_10014581C(a1, (uint64_t)v48);
  if (v49)
  {
    if ((swift_dynamicCast(&v47, v48, (char *)&type metadata for Any + 8, ObjectType, 6) & 1) != 0)
    {
      v11 = v47;
      v12 = *(void **)((char *)v2 + OBJC_IVAR____TtC6FindMy12FMAnnotation_stewieBadgeImage);
      v13 = *(void **)((char *)v47 + OBJC_IVAR____TtC6FindMy12FMAnnotation_stewieBadgeImage);
      if (v12)
      {
        if (!v13)
          goto LABEL_31;
        sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
        v14 = v13;
        v15 = v12;
        v16 = static NSObject.== infix(_:_:)(v15, v14);

        if ((v16 & 1) == 0)
          goto LABEL_31;
      }
      else if (v13)
      {
        goto LABEL_31;
      }
      v17 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x190))();
      (*(void (**)(uint64_t))((swift_isaMask & *v11) + 0x190))(v17);
      sub_1001451AC((uint64_t)v10, (uint64_t)v8);
      v19 = v18;
      sub_100144CF8((uint64_t)v8);
      sub_100144CF8((uint64_t)v10);
      if ((v19 & 1) == 0)
        goto LABEL_31;
      sub_100006C5C(0, (unint64_t *)&qword_1005D7A60, NSObject_ptr);
      v20 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x188))();
      v21 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v11) + 0x188))();
      v22 = static NSObject.== infix(_:_:)(v20, v21);

      if ((v22 & 1) == 0)
        goto LABEL_31;
      v23 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x198))();
      if (((v23 ^ (*(unsigned int (**)(void))((swift_isaMask & *v11) + 0x198))()) & 1) != 0)
        goto LABEL_31;
      objc_msgSend(v2, "coordinate");
      v25 = v24;
      objc_msgSend(v11, "coordinate");
      if (v25 != v26)
        goto LABEL_31;
      objc_msgSend(v2, "coordinate");
      v28 = v27;
      objc_msgSend(v11, "coordinate");
      if (v28 != v29
        || *(double *)((char *)v2 + OBJC_IVAR____TtC6FindMy12FMAnnotation_horizontalAccuracy) != *(double *)((char *)v11 + OBJC_IVAR____TtC6FindMy12FMAnnotation_horizontalAccuracy))
      {
        goto LABEL_31;
      }
      v30 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier);
      v31 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier + 8);
      v32 = (_QWORD *)((char *)v11 + OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier);
      v33 = *(_QWORD *)((char *)v11 + OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier + 8);
      switch(v31)
      {
        case 0:
          if (v33)
            goto LABEL_31;
          break;
        case 1:
          if (v33 != 1)
            goto LABEL_31;
          break;
        case 2:
          if (v33 != 2)
            goto LABEL_31;
          break;
        case 3:
          if (v33 != 3)
            goto LABEL_31;
          break;
        default:
          if (v33 < 4
            || (*v30 != *v32 || v31 != v33)
            && (_stringCompareWithSmolCheck(_:_:expecting:)(*v30, v31, *v32, v33, 0) & 1) == 0)
          {
            goto LABEL_31;
          }
          break;
      }
      if (*((unsigned __int8 *)v2 + OBJC_IVAR____TtC6FindMy12FMAnnotation_isInaccurate) != *((unsigned __int8 *)v11
                                                                                            + OBJC_IVAR____TtC6FindMy12FMAnnotation_isInaccurate)
        || *((unsigned __int8 *)v2 + OBJC_IVAR____TtC6FindMy12FMAnnotation_isLive) != *((unsigned __int8 *)v11
                                                                                      + OBJC_IVAR____TtC6FindMy12FMAnnotation_isLive)
        || *((unsigned __int8 *)v2 + OBJC_IVAR____TtC6FindMy12FMAnnotation_isWithYou) != *((unsigned __int8 *)v11
                                                                                         + OBJC_IVAR____TtC6FindMy12FMAnnotation_isWithYou))
      {
        goto LABEL_31;
      }
      v36 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC6FindMy12FMAnnotation_title);
      v37 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8);
      v38 = (_QWORD *)((char *)v11 + OBJC_IVAR____TtC6FindMy12FMAnnotation_title);
      v39 = *(_QWORD *)((char *)v11 + OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8);
      if (v37)
      {
        if (!v39
          || (*v36 != *v38 || v37 != v39)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(*v36, v37, *v38, v39, 0) & 1) == 0)
        {
          goto LABEL_31;
        }
LABEL_41:
        v40 = *(void **)((char *)v2 + OBJC_IVAR____TtC6FindMy12FMAnnotation_badgeImage);
        v41 = *(void **)((char *)v11 + OBJC_IVAR____TtC6FindMy12FMAnnotation_badgeImage);
        if (!v40)
        {
          v45 = v41;

          if (!v41)
          {
            v34 = 1;
            return v34 & 1;
          }

          goto LABEL_32;
        }
        if (v41)
        {
          sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
          v42 = v40;
          v43 = v41;
          v44 = v42;
          v34 = static NSObject.== infix(_:_:)(v44, v43);

          return v34 & 1;
        }
        goto LABEL_31;
      }
      if (!v39)
        goto LABEL_41;
LABEL_31:

    }
  }
  else
  {
    sub_1000051EC((uint64_t)v48, &qword_1005D3AB0);
  }
LABEL_32:
  v34 = 0;
  return v34 & 1;
}

id sub_100144730()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAnnotation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t *sub_1001447C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        swift_bridgeObjectRetain(v8);
        swift_storeEnumTagMultiPayload(a1, a3, 0);
        break;
      case 1u:
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain(v11);
        swift_storeEnumTagMultiPayload(a1, a3, 1);
        break;
      case 2u:
        v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        swift_bridgeObjectRetain(v12);
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      case 3u:
        v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        swift_bridgeObjectRetain(v13);
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      case 4u:
        v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        v15 = a2[2];
        v16 = a2[3];
        a1[2] = v15;
        a1[3] = v16;
        swift_bridgeObjectRetain(v14);
        swift_bridgeObjectRetain(v16);
        swift_storeEnumTagMultiPayload(a1, a3, 4);
        break;
      case 5u:
        v17 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        swift_storeEnumTagMultiPayload(a1, a3, 5);
        break;
      case 6u:
        v18 = *a2;
        *a1 = *a2;
        swift_retain(v18);
        swift_storeEnumTagMultiPayload(a1, a3, 6);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_100144960(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      v4 = a1[1];
      goto LABEL_4;
    case 4:
      swift_bridgeObjectRelease(a1[1]);
      v4 = a1[3];
LABEL_4:
      result = swift_bridgeObjectRelease(v4);
      break;
    case 5:
      v5 = type metadata accessor for UUID(0);
      result = (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      break;
    case 6:
      result = swift_release(*a1);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_1001449F8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain(v6);
      v7 = a1;
      v8 = a3;
      v9 = 0;
      goto LABEL_10;
    case 1u:
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain(v10);
      v7 = a1;
      v8 = a3;
      v9 = 1;
      goto LABEL_10;
    case 2u:
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      swift_bridgeObjectRetain(v11);
      v7 = a1;
      v8 = a3;
      v9 = 2;
      goto LABEL_10;
    case 3u:
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_bridgeObjectRetain(v12);
      v7 = a1;
      v8 = a3;
      v9 = 3;
      goto LABEL_10;
    case 4u:
      v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      v14 = a2[2];
      v15 = a2[3];
      a1[2] = v14;
      a1[3] = v15;
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRetain(v15);
      v7 = a1;
      v8 = a3;
      v9 = 4;
      goto LABEL_10;
    case 5u:
      v16 = type metadata accessor for UUID(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      v7 = a1;
      v8 = a3;
      v9 = 5;
      goto LABEL_10;
    case 6u:
      v17 = *a2;
      *a1 = *a2;
      swift_retain(v17);
      v7 = a1;
      v8 = a3;
      v9 = 6;
LABEL_10:
      swift_storeEnumTagMultiPayload(v7, v8, v9);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_100144B58(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_100144CF8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        *a1 = *a2;
        v6 = a2[1];
        a1[1] = v6;
        swift_bridgeObjectRetain(v6);
        v7 = a1;
        v8 = a3;
        v9 = 0;
        goto LABEL_11;
      case 1u:
        *a1 = *a2;
        v10 = a2[1];
        a1[1] = v10;
        swift_bridgeObjectRetain(v10);
        v7 = a1;
        v8 = a3;
        v9 = 1;
        goto LABEL_11;
      case 2u:
        *a1 = *a2;
        v11 = a2[1];
        a1[1] = v11;
        swift_bridgeObjectRetain(v11);
        v7 = a1;
        v8 = a3;
        v9 = 2;
        goto LABEL_11;
      case 3u:
        *a1 = *a2;
        v12 = a2[1];
        a1[1] = v12;
        swift_bridgeObjectRetain(v12);
        v7 = a1;
        v8 = a3;
        v9 = 3;
        goto LABEL_11;
      case 4u:
        *a1 = *a2;
        v13 = a2[1];
        a1[1] = v13;
        a1[2] = a2[2];
        v14 = a2[3];
        a1[3] = v14;
        swift_bridgeObjectRetain(v13);
        swift_bridgeObjectRetain(v14);
        v7 = a1;
        v8 = a3;
        v9 = 4;
        goto LABEL_11;
      case 5u:
        v15 = type metadata accessor for UUID(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        v7 = a1;
        v8 = a3;
        v9 = 5;
        goto LABEL_11;
      case 6u:
        v16 = *a2;
        *a1 = *a2;
        swift_retain(v16);
        v7 = a1;
        v8 = a3;
        v9 = 6;
LABEL_11:
        swift_storeEnumTagMultiPayload(v7, v8, v9);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_100144CF8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMAnnotationIdentifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100144D34(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 5)
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 5);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100144DC0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_100144CF8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 5)
    {
      v6 = type metadata accessor for UUID(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 5);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

unint64_t destroy for FMAnnotationClusterIdentifier(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t _s6FindMy29FMAnnotationClusterIdentifierOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain(v3);
  }
  return a1;
}

_QWORD *assignWithCopy for FMAnnotationClusterIdentifier(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  v5 = a2[1];
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      v7 = a2[1];
      a1[1] = v7;
      swift_bridgeObjectRetain(v7);
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(a1[1]);
    goto LABEL_7;
  }
  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for FMAnnotationClusterIdentifier(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMAnnotationClusterIdentifier(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 3;
  if (v4 >= 5)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FMAnnotationClusterIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 3;
  }
  return result;
}

uint64_t sub_100145070(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_100145088(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMAnnotationClusterIdentifier()
{
  return &type metadata for FMAnnotationClusterIdentifier;
}

unint64_t sub_1001450BC()
{
  unint64_t result;

  result = qword_1005D7A08;
  if (!qword_1005D7A08)
  {
    result = swift_getWitnessTable(&unk_100484EC0, &type metadata for FMAnnotationClusterIdentifier);
    atomic_store(result, (unint64_t *)&qword_1005D7A08);
  }
  return result;
}

uint64_t sub_100145100()
{
  return sub_10003FAF4(&qword_1005D7A10, 255, type metadata accessor for FMAnnotationIdentifier, (uint64_t)&unk_100484F28);
}

uint64_t sub_100145130()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x190))();
}

uint64_t sub_100145168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMAnnotationIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1001451AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _QWORD v19[3];
  uint64_t v20;

  v20 = a2;
  v3 = type metadata accessor for UUID(0);
  v19[1] = *(_QWORD *)(v3 - 8);
  v19[2] = v3;
  __chkstk_darwin(v3);
  v19[0] = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMAnnotationIdentifier(0);
  v6 = __chkstk_darwin(v5);
  v7 = __chkstk_darwin(v6);
  v8 = __chkstk_darwin(v7);
  v9 = __chkstk_darwin(v8);
  v10 = __chkstk_darwin(v9);
  v11 = __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  v12 = sub_100053F2C((uint64_t *)&unk_1005D7A50);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v19 + *(int *)(v13 + 48) - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1;
  v17 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100145168(v16, (uint64_t)v17);
  sub_100145168(v20, (uint64_t)v15);
  v18 = (char *)sub_100145374 + 4 * byte_100484E18[swift_getEnumCaseMultiPayload(v17, v5)];
  __asm { BR              X10 }
}

uint64_t sub_100145374()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  char v9;

  sub_100145168(v3, (uint64_t)v2);
  v5 = *v2;
  v4 = v2[1];
  if (swift_getEnumCaseMultiPayload(v1, v0))
  {
    swift_bridgeObjectRelease(v4);
    sub_1000051EC(v3, (uint64_t *)&unk_1005D7A50);
    goto LABEL_9;
  }
  v6 = v1[1];
  if (v5 == *v1 && v4 == v6)
  {
    swift_bridgeObjectRelease_n(v4, 2);
    goto LABEL_11;
  }
  v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v4, *v1, v1[1], 0);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v4);
  if ((v8 & 1) != 0)
  {
LABEL_11:
    sub_100144CF8(v3);
    v9 = 1;
    return v9 & 1;
  }
  sub_100144CF8(v3);
LABEL_9:
  v9 = 0;
  return v9 & 1;
}

uint64_t sub_100145754(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  switch(a2)
  {
    case 0:
      if (a4)
        goto LABEL_14;
      result = 1;
      break;
    case 1:
      if (a4 != 1)
        goto LABEL_14;
      result = 1;
      break;
    case 2:
      if (a4 != 2)
        goto LABEL_14;
      result = 1;
      break;
    case 3:
      if (a4 != 3)
        goto LABEL_14;
      result = 1;
      break;
    default:
      if (a4 < 4)
      {
LABEL_14:
        result = 0;
      }
      else if (a1 == a3 && a2 == a4)
      {
        result = 1;
      }
      else
      {
        result = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0);
      }
      break;
  }
  return result;
}

uint64_t sub_1001457E0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FMMapAnnotationViewStyle(a2, a1);
  return a2;
}

uint64_t sub_10014581C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D3AB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100145864(uint64_t a1)
{
  void *v1;
  uint64_t updated;
  uint64_t v3;
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  void *object;
  NSString v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  void *v15;
  NSString v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  NSString v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  Class isa;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[5];
  uint64_t v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;

  v43 = a1;
  updated = type metadata accessor for FMAccessoryPairingUpdateRequiredCard.ViewModel(0);
  v42 = *(_QWORD *)(updated - 8);
  v3 = *(_QWORD *)(v42 + 64);
  __chkstk_darwin(updated);
  v41 = (uint64_t)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v6._countAndFlagsBits = 0xD00000000000002CLL;
  v46._object = (void *)0x80000001004A5660;
  v6._object = (void *)0x80000001004AEB30;
  v7.value._countAndFlagsBits = 0xD000000000000013;
  v7.value._object = (void *)0x80000001004A5640;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v46._countAndFlagsBits = 0xD000000000000018;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v46)._object;

  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v10, swift_bridgeObjectRelease(object).n128_f64[0]);

  v11 = objc_msgSend(v4, "mainBundle");
  v12._countAndFlagsBits = 0xD00000000000002FLL;
  v47._object = (void *)0x80000001004A5660;
  v12._object = (void *)0x80000001004AEB60;
  v13.value._countAndFlagsBits = 0xD000000000000013;
  v13.value._object = (void *)0x80000001004A5640;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v47._countAndFlagsBits = 0xD000000000000018;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v47)._object;

  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setSubtitle:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  v17 = objc_msgSend(v4, "mainBundle");
  v18._countAndFlagsBits = 0xD000000000000036;
  v48._object = (void *)0x80000001004A5660;
  v18._object = (void *)0x80000001004AEB90;
  v19.value._countAndFlagsBits = 0xD000000000000013;
  v19.value._object = (void *)0x80000001004A5640;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v48._countAndFlagsBits = 0xD000000000000018;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v48)._object;

  v22 = swift_allocObject(&unk_1005489C8, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16);
  v23 = v41;
  sub_100145F08(v43, v41);
  v24 = *(unsigned __int8 *)(v42 + 80);
  v25 = (v24 + 24) & ~v24;
  v26 = swift_allocObject(&unk_1005489F0, v25 + v3, v24 | 7);
  *(_QWORD *)(v26 + 16) = v22;
  v27 = v26 + v25;
  v28 = v1;
  sub_100145FC4(v23, v27);
  swift_retain(v22);
  swift_bridgeObjectRetain(v21);
  swift_retain(v26);
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  aBlock[4] = sub_100146008;
  v45 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100008B40;
  aBlock[3] = &unk_100548A08;
  v30 = _Block_copy(aBlock);
  v31 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v29, 0, v30);

  _Block_release(v30);
  v32 = objc_msgSend(v28, "addAction:", v31, swift_release(v45).n128_f64[0]);
  swift_release(v22);
  swift_release(v26);

  swift_bridgeObjectRelease(v21);
  v33 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v34 = sub_10039C5E4(50.0, 0xD00000000000001ALL, 0x80000001004AEBD0, (uint64_t)v33);

  if (v34)
  {
    v35 = sub_100053F2C(&qword_1005D2F10);
    v36 = swift_allocObject(v35, 40, 7);
    *(_OWORD *)(v36 + 16) = xmmword_100481B00;
    *(_QWORD *)(v36 + 32) = v34;
    aBlock[0] = v36;
    specialized Array._endMutation()(v36);
    v37 = aBlock[0];
    sub_10011D1D8();
    v38 = v34;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v28, "setImages:", isa, swift_bridgeObjectRelease(v37).n128_f64[0]);

  }
}

void sub_100145CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  void *v9;
  void *v10;
  uint64_t v11;
  __n128 v12;
  _BYTE v14[24];

  v5 = type metadata accessor for FMAccessoryPairingCoordinator.Event(0);
  __chkstk_darwin(v5);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC6FindMy36FMAccessoryPairingUpdateRequiredCard_coordinator);

    if (v10)
    {
      v11 = type metadata accessor for FMIPItem(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v7, a3, v11);
      swift_storeEnumTagMultiPayload(v7, v5, 6);
      sub_1000F3128(v7, v12);

      sub_100142E74((uint64_t)v7);
    }
  }
}

id sub_100145E48()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryPairingUpdateRequiredCard();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMAccessoryPairingUpdateRequiredCard()
{
  return objc_opt_self(_TtC6FindMy36FMAccessoryPairingUpdateRequiredCard);
}

uint64_t type metadata accessor for FMAccessoryPairingUpdateRequiredCard.ViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D7B20;
  if (!qword_1005D7B20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMAccessoryPairingUpdateRequiredCard.ViewModel);
  return result;
}

uint64_t sub_100145EE4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100145F08(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for FMAccessoryPairingUpdateRequiredCard.ViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_100145F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for FMAccessoryPairingUpdateRequiredCard.ViewModel(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = type metadata accessor for FMIPItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100145FC4(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for FMAccessoryPairingUpdateRequiredCard.ViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 32))(a2, a1, updated);
  return a2;
}

void sub_100146008(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMAccessoryPairingUpdateRequiredCard.ViewModel(0)
                                      - 8)
                          + 80);
  sub_100145CF4(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_100146048(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMIPItem(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_100146084(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMIPItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1001460B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMIPItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1001460FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMIPItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100146140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMIPItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100146184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMIPItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1001461C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001461D4);
}

uint64_t sub_1001461D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMIPItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100146210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10014621C);
}

uint64_t sub_10014621C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMIPItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_10014625C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for FMIPItem(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

id sub_1001462C4(char a1)
{
  uint64_t v1;
  void *v3;
  double v4;
  double v5;
  double v6;
  char **v7;
  void *v8;
  CGAffineTransform v10;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_iconView);
  v4 = 0.0;
  if ((a1 & 1) != 0)
  {
    v5 = 0.5;
  }
  else
  {
    v4 = 1.0;
    v5 = 1.0;
  }
  if ((a1 & 1) != 0)
    v6 = 1.0;
  else
    v6 = 0.5;
  if ((a1 & 1) != 0)
    v7 = &selRef_startAnimating;
  else
    v7 = &selRef_stopAnimating;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_iconView), "setAlpha:", v4);
  CGAffineTransformMakeScale(&v10, v5, v5);
  objc_msgSend(v3, "setTransform:", &v10);
  v8 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_activityView);
  objc_msgSend(v8, "setHidden:", (a1 & 1) == 0);
  CGAffineTransformMakeScale(&v10, v6, v6);
  objc_msgSend(v8, "setTransform:", &v10);
  return objc_msgSend(v8, *v7);
}

char *sub_1001463E0()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  NSString v10;
  id v11;
  NSString v12;
  objc_super v14;

  v1 = OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_activityView;
  v2 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_iconView;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v5 = OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_titleLabel;
  *(_QWORD *)&v3[v5] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v6 = OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_subtitleLabel;
  *(_QWORD *)&v3[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v7 = OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_iconContainerView;
  *(_QWORD *)&v3[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");

  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for FMModernPlatterHeaderView();
  v8 = (char *)objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_1001465E0();
  v9 = *(id *)&v8[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_titleLabel];
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setAccessibilityIdentifier:", v10);

  v11 = *(id *)&v8[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_subtitleLabel];
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setAccessibilityIdentifier:", v12);

  return v8;
}

id sub_1001465E0()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  double v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  Class isa;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v46;
  void *v47;
  id v48;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_iconView];
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_titleLabel];
  v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_subtitleLabel];
  v5 = v2;
  v6 = v3;
  v7 = v4;
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v48 = v7;
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v8 = *(double *)&qword_1005F5978;
  objc_msgSend(v1, "setAxis:", 1);
  objc_msgSend(v1, "setAlignment:", 1);
  objc_msgSend(v1, "setSpacing:", 2.0);
  objc_msgSend(v1, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v1, "setLayoutMargins:", v8, v8, v8, v8);
  objc_msgSend(v6, "setAdjustsFontForContentSizeCategory:", 1);
  v9 = (void *)objc_opt_self(UIFont);
  v10 = objc_msgSend(v9, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  objc_msgSend(v6, "setFont:", v10);

  v11 = (void *)objc_opt_self(UIColor);
  v12 = objc_msgSend(v11, "labelColor");
  v47 = v6;
  objc_msgSend(v6, "setTextColor:", v12);

  objc_msgSend(v6, "setNumberOfLines:", 0);
  objc_msgSend(v48, "setAdjustsFontForContentSizeCategory:", 1);
  v13 = objc_msgSend(v9, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v48, "setFont:", v13);

  v14 = objc_msgSend(v11, "secondaryLabelColor");
  objc_msgSend(v48, "setTextColor:", v14);

  objc_msgSend(v48, "setNumberOfLines:", 0);
  v15 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_iconContainerView];
  objc_msgSend(v15, "addSubview:", v5);
  v16 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_activityView];
  objc_msgSend(v15, "addSubview:", v16);
  v46 = (id)objc_opt_self(NSLayoutConstraint);
  v17 = sub_100053F2C(&qword_1005D2F10);
  v18 = swift_allocObject(v17, 80, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100484130;
  v19 = objc_msgSend(v15, "topAnchor");
  v20 = objc_msgSend(v5, "topAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v18 + 32) = v21;
  v22 = objc_msgSend(v15, "bottomAnchor");
  v23 = objc_msgSend(v5, "bottomAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v18 + 40) = v24;
  v25 = objc_msgSend(v15, "leadingAnchor");
  v26 = objc_msgSend(v5, "leadingAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v18 + 48) = v27;
  v28 = objc_msgSend(v15, "trailingAnchor");
  v29 = objc_msgSend(v5, "trailingAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v18 + 56) = v30;
  v31 = objc_msgSend(v15, "centerXAnchor");
  v32 = objc_msgSend(v16, "centerXAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v18 + 64) = v33;
  v34 = objc_msgSend(v15, "centerYAnchor");
  v35 = objc_msgSend(v16, "centerYAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v18 + 72) = v36;
  specialized Array._endMutation()(v37);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v46, "activateConstraints:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v39 = v5;
  v40 = v15;
  v41 = v16;
  objc_msgSend(v40, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v39, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v41, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v42 = v47;
  v43 = v48;
  v44 = v40;
  objc_msgSend(v1, "addArrangedSubview:", v44);
  objc_msgSend(v1, "addArrangedSubview:", v42);
  objc_msgSend(v1, "addArrangedSubview:", v43);

  if (qword_1005D1BC8 != -1)
    swift_once(&qword_1005D1BC8, sub_1000ABDB8);
  return objc_msgSend(v1, "setCustomSpacing:afterView:", v44, *(double *)&xmmword_1005F4D60);
}

id sub_100146C9C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMModernPlatterHeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMModernPlatterHeaderView()
{
  return objc_opt_self(_TtC6FindMy25FMModernPlatterHeaderView);
}

void sub_100146D54()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_activityView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "init");
  v2 = OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_iconView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v3 = OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_titleLabel;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v4 = OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_subtitleLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_iconContainerView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMModernPlatterHeaderView.swift", 38, 2, 69, 0);
  __break(1u);
}

unint64_t sub_100146EA4(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  NSString v4;
  Class isa;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;

  v2 = v1;
  v4 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v4, isa);

  if (objc_msgSend(a1, "tag") == (id)1)
  {
    v7 = type metadata accessor for FMRecipientTableViewCell();
    v8 = swift_dynamicCastClass(v6, v7);
    if (!v8)
      return (unint64_t)v6;
    a1 = (char *)v8;
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts);
    if (!v2)
      goto LABEL_16;
    swift_bridgeObjectRetain(v2);
    result = IndexPath.item.getter(v6);
    if ((v2 & 0xC000000000000001) != 0)
    {
LABEL_19:
      v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v2);
      goto LABEL_15;
    }
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_21;
    }
    if (result < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_14:
      v12 = *(id *)(v2 + 8 * result + 32);
LABEL_15:
      v13 = v12;
      swift_bridgeObjectRelease(v2);
LABEL_17:
      v15 = *(void **)&a1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_recipient];
      *(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_recipient] = v13;
      v16 = v13;

      sub_1003D0938();
      return (unint64_t)v6;
    }
    __break(1u);
  }
  if (objc_msgSend(a1, "tag") != (id)2)
    return (unint64_t)v6;
  v10 = type metadata accessor for FMRecipientTableViewCell();
  v11 = swift_dynamicCastClass(v6, v10);
  if (!v11)
    return (unint64_t)v6;
  a1 = (char *)v11;
  v2 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContacts);
  if (!v2)
  {
LABEL_16:
    v14 = v6;
    v13 = 0;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain(v2);
  result = IndexPath.item.getter(v6);
  if ((v2 & 0xC000000000000001) != 0)
    goto LABEL_19;
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (result < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_14;
LABEL_22:
  __break(1u);
  return result;
}

void sub_10014714C(unint64_t a1)
{
  char *v1;
  void *v2;
  Class isa;
  char **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;

  v2 = v1;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend((id)a1, "deselectRowAtIndexPath:animated:", isa, 1);

  v5 = &selRef_handleFenceTapWithGestureRecognizer_;
  if (objc_msgSend((id)a1, "tag") == (id)1)
  {
    v6 = IndexPath.row.getter(1);
    v7 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts;
    v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts];
    if (!v8)
      return;
    v9 = v6;
    if ((unint64_t)v8 >> 62)
    {
      if (v8 >= 0)
        v23 = v8 & 0xFFFFFFFFFFFFFF8;
      else
        v23 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts];
      swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts]);
      v5 = (char **)_CocoaArrayWrapper.endIndex.getter(v23);
      swift_bridgeObjectRelease(v8);
      if (v9 >= (uint64_t)v5)
        return;
    }
    else
    {
      v5 = *(char ***)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v6 >= (uint64_t)v5)
        return;
    }
    a1 = *(_QWORD *)&v1[v7];
    if (!a1)
      return;
    swift_bridgeObjectRetain(*(_QWORD *)&v1[v7]);
    v11 = IndexPath.row.getter(v10);
    if ((a1 & 0xC000000000000001) != 0)
      goto LABEL_30;
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v11 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_18:
      v17 = (char *)*(id *)(a1 + 8 * v11 + 32);
LABEL_19:
      v18 = v17;
      swift_bridgeObjectRelease(a1);
      v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy11FMRecipient_handle];
      v20 = *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy11FMRecipient_handle + 8];
      v21 = swift_allocObject(&unk_100548A48, 24, 7);
      *(_QWORD *)(v21 + 16) = v2;
      v26 = v18;
      swift_bridgeObjectRetain(v20);
      v22 = v2;
      sub_1001566B4(v19, v20, (uint64_t)sub_1001474A0, v21);
      swift_bridgeObjectRelease(v20);
      swift_release(v21);

      return;
    }
    __break(1u);
  }
  if (objc_msgSend((id)a1, v5[26]) != (id)2)
    return;
  v12 = IndexPath.row.getter(2);
  v13 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContacts;
  v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContacts];
  if (!v14)
    return;
  v15 = v12;
  if ((unint64_t)v14 >> 62)
  {
    if (v14 >= 0)
      v24 = v14 & 0xFFFFFFFFFFFFFF8;
    else
      v24 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContacts];
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContacts]);
    v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v14);
    if (v15 >= v25)
      return;
  }
  else if (v12 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  a1 = *(_QWORD *)&v1[v13];
  if (a1)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v1[v13]);
    v11 = IndexPath.row.getter(v16);
    if ((a1 & 0xC000000000000001) == 0)
    {
      if ((v11 & 0x8000000000000000) == 0)
      {
        if (v11 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_18;
        goto LABEL_33;
      }
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      return;
    }
LABEL_30:
    v17 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a1);
    goto LABEL_19;
  }
}

uint64_t sub_10014747C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1001474A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  double result;

  v1 = *(_QWORD *)(v0 + 16);
  sub_100156910();
  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText + 8);
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

uint64_t sub_1001474D8(void *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if (objc_msgSend(a1, "tag") == (id)1)
  {
    v3 = &OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts;
  }
  else
  {
    if (objc_msgSend(a1, "tag") != (id)2)
      return 0;
    v3 = &OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContacts;
  }
  v4 = *(_QWORD *)(v1 + *v3);
  if (!v4)
    return 0;
  if (!((unint64_t)v4 >> 62))
    return *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4 >= 0)
    v6 = v4 & 0xFFFFFFFFFFFFFF8;
  else
    v6 = *(_QWORD *)(v1 + *v3);
  swift_bridgeObjectRetain(v4);
  v7 = _CocoaArrayWrapper.endIndex.getter(v6);
  swift_bridgeObjectRelease(v4);
  return v7;
}

__n128 sub_10014758C()
{
  __n128 result;

  __asm { FMOV            V0.2D, #-10.0 }
  xmmword_1005F4F80 = (__int128)result;
  *(__n128 *)&qword_1005F4F90 = result;
  return result;
}

uint64_t sub_1001475A0()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for FMPerformanceCardPullup()
{
  return objc_opt_self(_TtC6FindMy23FMPerformanceCardPullup);
}

id sub_1001475D0(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  id result;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  NSString v35;
  id v36;
  id v37;
  NSString v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  Class isa;
  id v47;
  uint64_t v48;

  sub_1001FDC88(0, 0.4);
  v6 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView;
  result = *(id *)(a1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  result = objc_msgSend(result, "superview");
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v8 = result;
  result = *(id *)(a1 + v6);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(result, "frame");
  objc_msgSend(v8, "convertRect:toView:", 0);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  result = *(id *)(a1 + v6);
  if (result)
  {
    objc_msgSend(result, "safeAreaInsets");
    v19 = sub_1000E0E54(v10, v12, v14, v16, v17, v18);
    v23 = sub_1000E0E54(v19, v20, v21, v22, a2, a3);
    v27 = sub_1000E0E54(v23, v24, v25, v26, 0.0, 0.0);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    v34 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
    v35 = String._bridgeToObjectiveC()();
    v36 = objc_msgSend(v34, "initWithTestName:scrollBounds:amplitude:direction:completionHandler:", v35, 1, 0, v27, v29, v31, v33, 300.0);

    objc_msgSend(v36, "setIterationDurationFactor:", 0.7);
    objc_msgSend(v36, "setPreventSheetDismissal:", 1);
    objc_msgSend(v36, "setShouldFlick:", 0);
    v37 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
    v38 = String._bridgeToObjectiveC()();
    v39 = objc_msgSend(v37, "initWithTestName:scrollBounds:amplitude:direction:completionHandler:", v38, 0, 0, v27, v29, v31, v33, 400.0);

    objc_msgSend(v39, "setIterationDurationFactor:", 0.5);
    objc_msgSend(v39, "setPreventSheetDismissal:", 0);
    objc_msgSend(v39, "setShouldFlick:", 1);
    v40 = (void *)objc_opt_self(RPTGroupScrollTestParameters);
    v41 = objc_msgSend(v36, "testName");
    v42 = sub_100053F2C(&qword_1005D2F10);
    v43 = swift_allocObject(v42, 48, 7);
    *(_OWORD *)(v43 + 16) = xmmword_1004820B0;
    *(_QWORD *)(v43 + 32) = v36;
    *(_QWORD *)(v43 + 40) = v39;
    v48 = v43;
    specialized Array._endMutation()(v43);
    v44 = v36;
    v45 = v39;
    sub_100053F2C((uint64_t *)&unk_1005D7D10);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v47 = objc_msgSend(v40, "newWithTestName:parameters:completionHandler:", v41, isa, 0, swift_bridgeObjectRelease(v48).n128_f64[0]);

    return v47;
  }
LABEL_9:
  __break(1u);
  return result;
}

double sub_100147A70(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  _BYTE v15[24];
  objc_super v16;

  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for FMUTAccessoryInformationViewController(0);
  objc_msgSendSuper2(&v16, "viewDidAppear:", a1 & 1);
  v3 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_mediator] + 24);
  v4 = type metadata accessor for FMDevicesSubscription(0);
  v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v6 = v5 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v6 + 8) = 0;
  swift_unknownObjectWeakInit(v6);
  swift_retain(v3);
  v7 = v1;
  UUID.init()(v7);
  v8 = v5 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v8 + 8) = &off_100548A70;
  swift_unknownObjectWeakAssign(v8, v7);

  swift_beginAccess(v3 + 16, v15, 33, 0);
  v9 = swift_retain(v5);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v11 = *(_QWORD *)((*(_QWORD *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v10 = *(_QWORD *)((*(_QWORD *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v11 >= v10 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
  v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v5);
  specialized Array._endMutation()(v12);
  swift_endAccess(v15);
  swift_release(v3);
  v13 = *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_devicesSubscription];
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_devicesSubscription] = v5;
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

void sub_100147C14(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  objc_super v11;

  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for FMUTAccessoryInformationViewController(0);
  objc_msgSendSuper2(&v11, "viewWillDisappear:", a1 & 1);
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_devicesSubscription];
  if (v3)
  {
    v4 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_mediator] + 24);
    swift_beginAccess(v4 + 16, v10, 33, 0);
    swift_retain(v3);
    swift_retain(v4);
    v5 = sub_1001138E0((uint64_t *)(v4 + 16), v3);
    v6 = v5;
    v7 = *(_QWORD *)(v4 + 16);
    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0)
        v9 = *(_QWORD *)(v4 + 16);
      else
        v9 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v4 + 16));
      v8 = _CocoaArrayWrapper.endIndex.getter(v9);
      swift_bridgeObjectRelease(v7);
      if (v8 >= v6)
        goto LABEL_4;
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v8 >= v5)
      {
LABEL_4:
        sub_1002006EC(v6, v8);
        swift_endAccess(v10);
        swift_release(v3);
        swift_release(v4);
        return;
      }
    }
    __break(1u);
  }
}

id sub_100147D78()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  void *object;
  uint64_t v24;
  char *v25;
  NSString v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  id v34;
  uint64_t v35;
  void *v36;
  id result;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  char *v43;
  __n128 v44;
  uint64_t (*v45)(char *, char *, uint64_t);
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char My;
  int v63;
  id v64;
  Swift::String_optional v65;
  Swift::String v66;
  Swift::String v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t inited;
  NSString *v76;
  unint64_t v77;
  id v78;
  double v79;
  void *v80;
  double v81;
  NSString v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  id v97;
  id v98;
  Swift::String_optional v99;
  Swift::String v100;
  Swift::String v101;
  void *v102;
  NSString v103;
  uint64_t v104;
  id v105;
  id v106;
  uint64_t v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  id v116;
  void *v117;
  id v118;
  id v119;
  void *v120;
  void *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char **v125;
  id v126;
  id v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  NSString *v135;
  NSString *v136;
  UIFontTextStyle v137;
  id v138;
  id v139;
  NSString v140;
  id v141;
  id v142;
  uint64_t v143;
  const char *v144;
  const char *v145;
  id v146;
  Swift::String v147;
  Swift::String_optional v148;
  Swift::String v149;
  Swift::String v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  NSString *v154;
  id v155;
  unint64_t v156;
  id v157;
  NSString v158;
  Class isa;
  id v160;
  uint64_t v161;
  id v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  Class v166;
  uint64_t v167;
  void *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  int v176;
  uint64_t v177;
  id v178;
  void *v179;
  id v180;
  char *v181;
  UIFontTextStyle v182;
  __int128 v183;
  const char *v184;
  const char *v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  char *v189;
  id v190;
  char *v191;
  void (*v192)(char *, uint64_t);
  uint64_t (*v193)(char *, char *, uint64_t);
  char *v194;
  char *v195;
  uint64_t v196;
  char v197[72];
  uint64_t v198;
  unint64_t v199;
  char v200[8];
  char v201[8];
  _QWORD v202[4];
  Swift::String v203;
  Swift::String v204;
  Swift::String v205;
  Swift::String v206;

  v1 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v1);
  v177 = (uint64_t)&v177 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100053F2C(&qword_1005D7E48);
  v4 = __chkstk_darwin(v3);
  v188 = (uint64_t)&v177 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v191 = (char *)&v177 - v7;
  __chkstk_darwin(v6);
  v189 = (char *)&v177 - v8;
  v196 = type metadata accessor for FMIPUnknownItem(0);
  v9 = *(_QWORD *)(v196 - 8);
  __chkstk_darwin(v196);
  v195 = (char *)&v177 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C((uint64_t *)&unk_1005D7E90);
  v12 = __chkstk_darwin(v11);
  v187 = (unint64_t)&v177 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v177 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v177 - v17;
  v190 = (id)objc_opt_self(NSBundle);
  v19 = objc_msgSend(v190, "mainBundle");
  v20.value._countAndFlagsBits = 0xD000000000000013;
  v203._countAndFlagsBits = 0xD000000000000018;
  v21._countAndFlagsBits = 0xD000000000000020;
  v185 = "Localizable-HAWKEYE";
  v203._object = (void *)0x80000001004A5660;
  v21._object = (void *)0x80000001004AEF30;
  v184 = "CLEAR_TAGS_BUTTON";
  v20.value._object = (void *)0x80000001004A5640;
  v186 = 0xD000000000000013;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v20, (NSBundle)v19, v22, v203)._object;

  v24 = type metadata accessor for FMUTAccessoryInformationViewController(0);
  v202[3] = v24;
  v202[0] = v0;
  v25 = v0;
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  if (v24)
  {
    v27 = sub_100029550(v202, v24);
    v28 = v18;
    v29 = *(_QWORD *)(v24 - 8);
    __chkstk_darwin(v27);
    v31 = (char *)&v177 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v29 + 16))(v31);
    v32 = _bridgeAnythingToObjectiveC<A>(_:)(v31, v24);
    v33 = *(void (**)(char *, uint64_t))(v29 + 8);
    v18 = v28;
    v33(v31, v24);
    sub_100029574(v202);
  }
  else
  {
    v32 = 0;
  }
  v34 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithTitle:style:target:action:", v26, 0, v32, "cancelAction");

  swift_unknownObjectRelease(v32);
  v35 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_cancelButton;
  v36 = *(void **)&v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_cancelButton];
  *(_QWORD *)&v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_cancelButton] = v34;

  result = objc_msgSend(v25, "view");
  if (!result)
  {
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v38 = result;
  v39 = (void *)objc_opt_self(UIColor);
  v40 = objc_msgSend(v39, "systemBackgroundColor");
  objc_msgSend(v38, "setBackgroundColor:", v40);

  v41 = objc_msgSend(v25, "navigationItem");
  v42 = *(id *)&v25[v35];
  objc_msgSend(v41, "setLeftBarButtonItem:", v42);

  v43 = &v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownItem];
  v44 = swift_beginAccess(&v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownItem], v202, 0, 0);
  v45 = *(uint64_t (**)(char *, char *, uint64_t))(v9 + 16);
  v46 = v195;
  v194 = v43;
  v47 = v43;
  v48 = v196;
  v193 = v45;
  v49 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v45)(v195, v47, v196, v44);
  FMIPUnknownItem.utMetadata.getter(v49);
  v192 = *(void (**)(char *, uint64_t))(v9 + 8);
  v192(v46, v48);
  v50 = v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_showDisableInfo];
  v51 = (uint64_t)v189;
  if (v50 == 1)
  {
    sub_100007464((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_1005D7E90);
    v52 = type metadata accessor for FMIPUnknownItemUTMetadata(0);
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v16, 1, v52) != 1)
    {
      FMIPUnknownItemUTMetadata.disableInfo.getter();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v16, v52);
      goto LABEL_13;
    }
    v54 = (uint64_t)v16;
  }
  else
  {
    v55 = v187;
    sub_100007464((uint64_t)v18, v187, (uint64_t *)&unk_1005D7E90);
    v56 = type metadata accessor for FMIPUnknownItemUTMetadata(0);
    v57 = *(_QWORD *)(v56 - 8);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56) != 1)
    {
      FMIPUnknownItemUTMetadata.learnMoreInfo.getter();
      (*(void (**)(unint64_t, uint64_t))(v57 + 8))(v55, v56);
      goto LABEL_13;
    }
    v54 = v55;
  }
  sub_1000051EC(v54, (uint64_t *)&unk_1005D7E90);
  v58 = type metadata accessor for FMIPUnknownItemProductMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v51, 1, 1, v58);
LABEL_13:
  v59 = v195;
  v60 = v196;
  v61 = v193(v195, v194, v196);
  My = FMIPUnknownItem.isFindMyNetwork.getter(v61);
  v192(v59, v60);
  v63 = v50 ^ 1;
  v181 = v18;
  if ((My & 1) != 0 || (v63 & 1) != 0)
  {
    v69 = v191;
    sub_100007464(v51, (uint64_t)v191, &qword_1005D7E48);
    v70 = type metadata accessor for FMIPUnknownItemProductMetadata(0);
    v71 = *(_QWORD *)(v70 - 8);
    if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70) == 1)
    {
      sub_1000051EC((uint64_t)v69, &qword_1005D7E48);
      v68 = 0;
    }
    else
    {
      FMIPUnknownItemProductMetadata.title.getter();
      v68 = v72;
      (*(void (**)(id, uint64_t))(v71 + 8))(v69, v70);
    }
  }
  else
  {
    v64 = objc_msgSend(v190, "mainBundle");
    v65.value._countAndFlagsBits = 0xD000000000000010;
    v66._countAndFlagsBits = 0xD000000000000012;
    v204._object = (void *)0x80000001004AEFE0;
    v66._object = (void *)0x80000001004AF000;
    v65.value._object = (void *)0x80000001004AEFC0;
    v67._countAndFlagsBits = 0;
    v67._object = (void *)0xE000000000000000;
    v204._countAndFlagsBits = 0xD000000000000015;
    v68 = NSLocalizedString(_:tableName:bundle:value:comment:)(v66, v65, (NSBundle)v64, v67, v204)._object;

  }
  v191 = (char *)objc_opt_self(UIFont);
  v73 = objc_msgSend(v191, "preferredFontForTextStyle:", UIFontTextStyleTitle1);
  v74 = sub_100053F2C((uint64_t *)&unk_1005D7EA0);
  inited = swift_initStackObject(v74, v201);
  v183 = xmmword_100481740;
  *(_OWORD *)(inited + 16) = xmmword_100481740;
  *(_QWORD *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightBold;
  v76 = UIFontWeightTrait;
  v77 = sub_10004907C(inited);
  v78 = sub_100049188(v77);

  *(_QWORD *)&v79 = swift_bridgeObjectRelease(v77).n128_u64[0];
  v80 = *(void **)&v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_titleLabel];
  objc_msgSend(v80, "setAdjustsFontForContentSizeCategory:", 1, v79);
  v180 = v78;
  objc_msgSend(v80, "setFont:", v78);
  objc_msgSend(v80, "setNumberOfLines:", 0);
  if (v68)
  {
    v82 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v81 = swift_bridgeObjectRelease(v68).n128_u64[0];
  }
  else
  {
    v82 = 0;
  }
  objc_msgSend(v80, "setText:", v82, v81);

  v83 = objc_msgSend(v39, "labelColor");
  objc_msgSend(v80, "setTextColor:", v83);

  v187 = (unint64_t)v80;
  objc_msgSend(v80, "setTextAlignment:", 1);
  v84 = v188;
  sub_100007464(v51, v188, &qword_1005D7E48);
  v85 = type metadata accessor for FMIPUnknownItemProductMetadata(0);
  v86 = *(_QWORD *)(v85 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85) == 1)
  {
    sub_1000051EC(v84, &qword_1005D7E48);
    v87 = 0;
  }
  else
  {
    v87 = FMIPUnknownItemProductMetadata.moreDescriptionBulletPoints.getter();
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v84, v85);
  }
  v88 = v195;
  v89 = v196;
  v90 = v193(v195, v194, v196);
  v91 = FMIPUnknownItem.isFindMyNetwork.getter(v90);
  v192(v88, v89);
  if (((v91 | v63) & 1) != 0)
  {
    if (v87)
    {
      v92 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_subtitleLabel;
      v93 = *(id *)&v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_subtitleLabel];
      sub_100149264(v87);

      swift_bridgeObjectRelease(v87);
      v94 = qword_1005D1E80;
      v95 = *(id *)&v25[v92];
      if (v94 != -1)
        swift_once(&qword_1005D1E80, sub_100008974);
      objc_msgSend(v95, "setTextAlignment:", 2 * (qword_1005F5980 == 1));

    }
  }
  else
  {
    swift_bridgeObjectRelease(v87);
    v96 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_subtitleLabel;
    v97 = *(id *)&v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_subtitleLabel];
    v98 = objc_msgSend(v190, "mainBundle");
    v99.value._countAndFlagsBits = 0xD000000000000010;
    v205._object = (void *)0x80000001004AEFE0;
    v100._object = (void *)0x80000001004AEFA0;
    v99.value._object = (void *)0x80000001004AEFC0;
    v100._countAndFlagsBits = 0xD000000000000015;
    v101._countAndFlagsBits = 0;
    v101._object = (void *)0xE000000000000000;
    v205._countAndFlagsBits = 0xD000000000000015;
    v102 = NSLocalizedString(_:tableName:bundle:value:comment:)(v100, v99, (NSBundle)v98, v101, v205)._object;

    v103 = String._bridgeToObjectiveC()();
    objc_msgSend(v97, "setText:", v103, swift_bridgeObjectRelease(v102).n128_f64[0]);

    objc_msgSend(*(id *)&v25[v96], "setTextAlignment:", 1);
  }
  v104 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_subtitleLabel;
  objc_msgSend(*(id *)&v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_subtitleLabel], "setNumberOfLines:", 0);
  v105 = *(id *)&v25[v104];
  v106 = objc_msgSend(v39, "labelColor");
  objc_msgSend(v105, "setTextColor:", v106);

  objc_msgSend(*(id *)&v25[v104], "setAdjustsFontForContentSizeCategory:", 1);
  v107 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_footnoteLabel;
  v108 = *(id *)&v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_footnoteLabel];
  v109 = objc_msgSend(v39, "secondaryLabelColor");
  objc_msgSend(v108, "setTextColor:", v109);

  v110 = *(id *)&v25[v107];
  v111 = v191;
  v182 = UIFontTextStyleCaption2;
  v112 = objc_msgSend(v191, "preferredFontForTextStyle:", UIFontTextStyleCaption2);
  objc_msgSend(v110, "setFont:", v112);

  objc_msgSend(*(id *)&v25[v107], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v25[v107], "setTextAlignment:", 1);
  v188 = v107;
  objc_msgSend(*(id *)&v25[v107], "setAdjustsFontForContentSizeCategory:", 1);
  v113 = *(_QWORD *)&v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButton];
  v114 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label;
  v115 = *(id *)(v113 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  v116 = objc_msgSend(v39, "systemWhiteColor");
  objc_msgSend(v115, "setTextColor:", v116);

  v117 = *(void **)(v113 + v114);
  objc_msgSend(v117, "setTextAlignment:", 1);
  v118 = v117;
  v119 = objc_msgSend(v111, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v120 = (void *)sub_10003CEE8(2);

  objc_msgSend(v118, "setFont:", v120);
  v178 = *(id *)&v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_productImageView];
  objc_msgSend(v178, "setContentMode:", 1);
  v121 = *(void **)&v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_backgroundView];
  v122 = v195;
  v123 = v196;
  v124 = v193(v195, v194, v196);
  LOBYTE(v118) = FMIPUnknownItem.isFindMyNetwork.getter(v124);
  v192(v122, v123);
  v125 = &selRef_clearColor;
  if ((v118 & 1) == 0)
    v125 = &selRef_whiteColor;
  v126 = objc_msgSend(v39, *v125);
  objc_msgSend(v121, "setBackgroundColor:", v126);

  v127 = objc_msgSend(v121, "layer");
  objc_msgSend(v127, "setCornerRadius:", 12.0);

  sub_10014DAA4();
  v128 = *(void **)&v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_scrollView];
  objc_msgSend(v128, "setDelegate:", v25);
  objc_msgSend(v128, "setPreservesSuperviewLayoutMargins:", 1);
  v129 = *(void **)&v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_scrollContentView];
  objc_msgSend(v129, "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(v129, "addSubview:", *(_QWORD *)&v25[v104]);
  objc_msgSend(v129, "addSubview:", v187);
  objc_msgSend(v129, "addSubview:", v121);
  objc_msgSend(v128, "addSubview:", v129);
  result = objc_msgSend(v25, "view");
  if (!result)
    goto LABEL_46;
  v130 = result;
  objc_msgSend(result, "addSubview:", v128);

  result = objc_msgSend(v25, "view");
  if (!result)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v131 = result;
  objc_msgSend(result, "addSubview:", v113);

  result = objc_msgSend(v25, "view");
  if (!result)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    return result;
  }
  v132 = result;
  objc_msgSend(result, "addSubview:", *(_QWORD *)&v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_waitingView]);

  v133 = sub_100053F2C(&qword_1005D5868);
  v134 = swift_initStackObject(v133, v200);
  *(_OWORD *)(v134 + 16) = xmmword_100481730;
  *(_QWORD *)(v134 + 32) = NSForegroundColorAttributeName;
  v135 = NSForegroundColorAttributeName;
  *(_QWORD *)(v134 + 40) = objc_msgSend(v39, "systemRedColor");
  *(_QWORD *)(v134 + 48) = NSFontAttributeName;
  v136 = NSFontAttributeName;
  v137 = v182;
  *(_QWORD *)(v134 + 56) = objc_msgSend(v191, "preferredFontForTextStyle:", v182);
  v187 = sub_10011D69C(v134);
  v138 = objc_msgSend(objc_allocWithZone((Class)NSTextAttachment), "init");
  objc_msgSend(v138, "setAdjustsImageSizeForAccessibilityContentSizeCategory:", 1);
  v139 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithTextStyle:", v137);
  v140 = String._bridgeToObjectiveC()();
  v141 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v140, v139);

  v179 = v129;
  if (v141)
  {
    v142 = objc_msgSend(v141, "imageWithRenderingMode:", 2);

  }
  else
  {
    v142 = 0;
  }
  v143 = v186;
  v144 = v185;
  v145 = v184;
  objc_msgSend(v138, "setImage:", v142);

  v146 = objc_msgSend(v190, "mainBundle");
  v206._countAndFlagsBits = 0xD000000000000018;
  v147._countAndFlagsBits = 0xD00000000000001ALL;
  v206._object = (void *)((unint64_t)v144 | 0x8000000000000000);
  v147._object = (void *)0x80000001004AEF80;
  v148.value._object = (void *)((unint64_t)v145 | 0x8000000000000000);
  v148.value._countAndFlagsBits = v143;
  v149._countAndFlagsBits = 0;
  v149._object = (void *)0xE000000000000000;
  v150 = NSLocalizedString(_:tableName:bundle:value:comment:)(v147, v148, (NSBundle)v146, v149, v206);

  v198 = 32;
  v199 = 0xE100000000000000;
  String.append(_:)(v150);
  swift_bridgeObjectRelease(v150._object);
  v151 = v199;
  v152 = sub_100053F2C((uint64_t *)&unk_1005D7EB0);
  v153 = swift_initStackObject(v152, v197);
  *(_OWORD *)(v153 + 16) = v183;
  *(_QWORD *)(v153 + 32) = v136;
  v154 = v136;
  v155 = objc_msgSend(v191, "preferredFontForTextStyle:", v137);
  *(_QWORD *)(v153 + 64) = sub_100006C5C(0, (unint64_t *)&qword_1005D2F88, UIFont_ptr);
  *(_QWORD *)(v153 + 40) = v155;
  v156 = sub_10011D674(v153);
  v157 = objc_allocWithZone((Class)NSAttributedString);
  v158 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v151);
  type metadata accessor for Key(0);
  sub_100008000((unint64_t *)&qword_1005D2620, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100481500);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v160 = objc_msgSend(v157, "initWithString:attributes:", v158, isa, swift_bridgeObjectRelease(v156).n128_f64[0]);

  v161 = sub_100006C5C(0, &qword_1005DD5C0, NSMutableAttributedString_ptr);
  v162 = objc_msgSend((id)swift_getObjCClassFromMetadata(v161), "attributedStringWithAttachment:", v138);
  v163 = v187;
  sub_1000C9F80(v187);
  v165 = v164;
  swift_bridgeObjectRelease(v163);
  v166 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v162, "addAttributes:range:", v166, 0, 1, swift_bridgeObjectRelease(v165).n128_f64[0]);

  objc_msgSend(v162, "appendAttributedString:", v160);
  v167 = v188;
  objc_msgSend(*(id *)&v25[v188], "setAttributedText:", v162);
  result = objc_msgSend(v25, "view");
  if (!result)
    goto LABEL_49;
  v168 = result;
  objc_msgSend(result, "addSubview:", *(_QWORD *)&v25[v167]);

  v169 = v195;
  v170 = v196;
  v171 = v193(v195, v194, v196);
  LOBYTE(v168) = FMIPUnknownItem.isAppleAudioAccessory.getter(v171);
  v192(v169, v170);
  v172 = (uint64_t)v189;
  v173 = v179;
  if ((v168 & 1) != 0
    && (v174 = v177,
        sub_10014E874(v177),
        v175 = type metadata accessor for URL(0),
        v176 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v175 - 8) + 48))(v174, 1, v175),
        sub_1000051EC(v174, (uint64_t *)&unk_1005D3470),
        v176 != 1))
  {
    objc_msgSend(v173, "addSubview:", *(_QWORD *)&v25[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_playerView]);
    sub_10014C4F4();
  }
  else
  {
    objc_msgSend(v173, "addSubview:", v178);
    sub_10014BD2C(v172);
  }

  sub_1000051EC(v172, &qword_1005D7E48);
  return (id)sub_1000051EC((uint64_t)v181, (uint64_t *)&unk_1005D7E90);
}

void sub_100149264(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  Class isa;
  id v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t inited;
  void *v17;
  NSString *v18;
  unint64_t v19;
  uint64_t v20;
  NSString *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  Swift::String v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  NSString v35;
  Class v36;
  id v37;
  Swift::String v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  NSString v43;
  Class v44;
  id v45;
  id v46;
  unint64_t v47;
  uint64_t v48;
  Class v49;
  id v50;
  double v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  uint64_t v57;
  uint64_t countAndFlagsBits;
  void *object;
  unint64_t v60;
  unint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  unint64_t v67;
  char v68[48];
  char v69[56];
  Swift::String v70;

  v2 = v1;
  v4 = type metadata accessor for Locale(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  static Locale.current.getter();
  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v63 = v8;
  objc_msgSend(v8, "setLocale:", isa);

  v62 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v70._countAndFlagsBits = 0xD000000000000018;
  v11._countAndFlagsBits = 0xD000000000000024;
  v70._object = (void *)0x80000001004A5660;
  v11._object = (void *)0x80000001004AF020;
  v12.value._object = (void *)0x80000001004A5640;
  v12.value._countAndFlagsBits = 0xD000000000000013;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v70);
  countAndFlagsBits = v14._countAndFlagsBits;

  v15 = sub_100053F2C((uint64_t *)&unk_1005D7EC0);
  inited = swift_initStackObject(v15, v69);
  v65 = xmmword_100481740;
  *(_OWORD *)(inited + 16) = xmmword_100481740;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v17 = (void *)objc_opt_self(UIFont);
  v18 = NSFontAttributeName;
  *(_QWORD *)(inited + 40) = objc_msgSend(v17, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v19 = sub_10011D988(inited);
  v20 = swift_initStackObject(v15, v68);
  *(_OWORD *)(v20 + 16) = v65;
  *(_QWORD *)(v20 + 32) = v18;
  v21 = v18;
  v22 = objc_msgSend(v17, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v23 = sub_10003CEE8(2);

  *(_QWORD *)(v20 + 40) = v23;
  v61 = sub_10011D988(v20);
  v57 = *(_QWORD *)(a1 + 16);
  if (v57)
  {
    v60 = v19;
    object = v14._object;
    v55 = v2;
    swift_bridgeObjectRetain(a1);
    v24 = 0;
    v54 = a1;
    v25 = (unint64_t *)(a1 + 40);
    v56 = (char *)&type metadata for Any + 8;
    do
    {
      v48 = *(v25 - 1);
      v47 = *v25;
      swift_bridgeObjectRetain(*v25);
      v49 = Int._bridgeToObjectiveC()().super.super.isa;
      v50 = objc_msgSend(v63, "stringForObjectValue:", v49);

      v64 = v48;
      *(_QWORD *)&v65 = v24 + 1;
      if (v50)
      {
        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
        v28 = v27;

      }
      else
      {
        v26 = 0;
        v28 = 0xE000000000000000;
      }
      v29 = object;
      v25 += 2;
      v66 = v26;
      v67 = v28;
      swift_bridgeObjectRetain(v28);
      v30._countAndFlagsBits = countAndFlagsBits;
      v30._object = v29;
      String.append(_:)(v30);
      swift_bridgeObjectRelease(v28);
      v31 = v67;
      sub_1000C9BC4(v61);
      v33 = v32;
      v34 = objc_allocWithZone((Class)NSMutableAttributedString);
      v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v31);
      type metadata accessor for Key(0);
      sub_100008000((unint64_t *)&qword_1005D2620, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100481500);
      v36 = Dictionary._bridgeToObjectiveC()().super.isa;
      v37 = objc_msgSend(v34, "initWithString:attributes:", v35, v36, swift_bridgeObjectRelease(v33).n128_f64[0]);

      v66 = v64;
      v67 = v47;
      swift_bridgeObjectRetain(v47);
      v38._countAndFlagsBits = 10;
      v38._object = (void *)0xE100000000000000;
      String.append(_:)(v38);
      swift_bridgeObjectRelease(v47);
      v39 = v67;
      sub_1000C9BC4(v60);
      v41 = v40;
      v42 = objc_allocWithZone((Class)NSMutableAttributedString);
      v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v39);
      v44 = Dictionary._bridgeToObjectiveC()().super.isa;
      v45 = objc_msgSend(v42, "initWithString:attributes:", v43, v44, swift_bridgeObjectRelease(v41).n128_f64[0]);

      v46 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
      objc_msgSend(v46, "appendAttributedString:", v37);
      objc_msgSend(v46, "appendAttributedString:", v45);
      objc_msgSend(v62, "appendAttributedString:", v46);

      v24 = v65;
    }
    while (v57 != (_QWORD)v65);
    swift_bridgeObjectRelease(v60);
    swift_bridgeObjectRelease(object);
    swift_bridgeObjectRelease(v54);
    v2 = v55;
  }
  else
  {
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v14._object);
  }
  *(_QWORD *)&v51 = swift_bridgeObjectRelease(v61).n128_u64[0];
  v52 = v62;
  objc_msgSend(v2, "setAttributedText:", v62, v51);

}

void sub_1001497F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  id v9;
  _BYTE v11[24];

  v1 = v0;
  v2 = type metadata accessor for FMIPUnknownItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_showDisableInfo) == 1)
  {
    v6 = v1 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownItem;
    swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownItem, v11, 0, 0);
    v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
    LOBYTE(v6) = FMIPUnknownItem.isFindMyNetwork.getter(v7);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v6 & 1) != 0)
      v8 = "doneAction";
    else
      v8 = "continueOnDisableWebsiteAction";
  }
  else
  {
    v8 = "continueOnWebsiteAction";
  }
  v9 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v1, v8);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButton), "addGestureRecognizer:", v9);

}

void sub_10014992C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t inited;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  Class isa;
  uint64_t v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  Class v95;
  double v96;
  char *v97;
  __n128 v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  void *v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  uint64_t v150;
  Class v151;
  double v152;
  id v153;
  uint64_t v154;
  id v155;
  id v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  Class v169;
  double v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  id v174;
  id v175;
  id v176;
  id v177;
  id v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  id v184;
  id v185;
  id v186;
  id v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  Class v191;
  double v192;
  uint64_t v193;
  id v194;
  id v195;
  id v196;
  void *v197;
  id v198;
  id v199;
  id v200;
  id v201;
  id v202;
  void *v203;
  id v204;
  id v205;
  id v206;
  id v207;
  id v208;
  id v209;
  id v210;
  id v211;
  id v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  id v216;
  id v217;
  id v218;
  void *v219;
  id v220;
  id v221;
  id v222;
  uint64_t v223;
  id v224;
  id v225;
  id v226;
  id v227;
  id v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  id v232;
  id v233;
  void *v234;
  id v235;
  id v236;
  id v237;
  char *v238;
  uint64_t v239;
  id v240;
  id v241;
  void *v242;
  id v243;
  id v244;
  id v245;
  id v246;
  id v247;
  void *v248;
  id v249;
  id v250;
  id v251;
  uint64_t v252;
  uint64_t v253;
  Class v254;
  double v255;
  id v256;
  id v257;
  id v258;
  id v259;
  id v260;
  id v261;
  id v262;
  id v263;
  id v264;
  id v265;
  id v266;
  uint64_t v267;
  id v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  id v272;
  uint64_t v273;
  id v274;
  id v275;
  __int128 v276;
  id v277;
  id v278;
  uint64_t v279;
  __int128 v280;
  uint64_t v281;
  id v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286[3];
  char v287[40];

  v1 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v1);
  v267 = (uint64_t)&v266 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v271 = type metadata accessor for FMIPUnknownItem(0);
  v270 = *(_QWORD *)(v271 - 8);
  __chkstk_darwin(v271);
  v269 = (char *)&v266 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v4 = *(double *)&qword_1005F5978;
  v284 = sub_100053F2C(&qword_1005D2F10);
  inited = swift_initStackObject(v284, v287);
  *(_OWORD *)(inited + 16) = xmmword_1004850B0;
  v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_titleLabel];
  *(_QWORD *)(inited + 32) = v6;
  v273 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_subtitleLabel;
  v7 = *(void **)&v0[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_subtitleLabel];
  *(_QWORD *)(inited + 40) = v7;
  v8 = *(void **)&v0[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_scrollView];
  *(_QWORD *)(inited + 48) = v8;
  v9 = *(void **)&v0[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_scrollContentView];
  *(_QWORD *)(inited + 56) = v9;
  v279 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_footnoteLabel;
  v10 = *(void **)&v0[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_footnoteLabel];
  *(_QWORD *)(inited + 64) = v10;
  v11 = *(void **)&v0[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_productImageView];
  *(_QWORD *)(inited + 72) = v11;
  *(_QWORD *)&v276 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_backgroundView];
  *(_QWORD *)(inited + 80) = v276;
  v12 = *(void **)&v0[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButton];
  *(_QWORD *)(inited + 88) = v12;
  v13 = *(void **)&v0[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_waitingView];
  *(_QWORD *)(inited + 96) = v13;
  v283 = v0;
  v14 = *(void **)&v0[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_playerView];
  *(_QWORD *)(inited + 104) = v14;
  v286[0] = inited;
  specialized Array._endMutation()(inited);
  v15 = (id *)v286[0];
  v282 = (id)(v286[0] & 0xC000000000000001);
  v268 = v13;
  v274 = v12;
  v278 = v9;
  v272 = v6;
  v275 = v11;
  if ((v286[0] & 0xC000000000000001) != 0)
  {
    v256 = v6;
    v257 = v7;
    v20 = v8;
    v258 = v8;
    v259 = v9;
    v260 = v10;
    v261 = v11;
    v262 = (id)v276;
    v263 = v12;
    v264 = v13;
    v265 = v14;
    v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
  }
  else
  {
    v16 = v6;
    v17 = *(void **)(v286[0] + 32);
    v18 = v16;
    v19 = v7;
    v20 = v8;
    v21 = v8;
    v22 = v9;
    v23 = v10;
    v24 = v11;
    v25 = (id)v276;
    v26 = v12;
    v27 = v13;
    v28 = v14;
    v29 = v17;
  }
  v30 = v29;
  objc_msgSend(v29, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v31 = v283;
  v32 = v282;
  if (v282)
    v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v15);
  else
    v33 = v15[5];
  v34 = v33;
  objc_msgSend(v33, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  if (v32)
    v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2, v15);
  else
    v35 = v15[6];
  v36 = v35;
  objc_msgSend(v35, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  if (v32)
    v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(3, v15);
  else
    v37 = v15[7];
  v38 = v37;
  objc_msgSend(v37, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  if (v32)
    v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(4, v15);
  else
    v39 = v15[8];
  v40 = v39;
  objc_msgSend(v39, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  if (v32)
    v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(5, v15);
  else
    v41 = v15[9];
  v42 = v41;
  objc_msgSend(v41, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  if (v32)
    v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(6, v15);
  else
    v43 = v15[10];
  v44 = v43;
  objc_msgSend(v43, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  if (v32)
    v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(7, v15);
  else
    v45 = v15[11];
  v46 = v45;
  objc_msgSend(v45, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  if (v32)
    v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(8, v15);
  else
    v47 = v15[12];
  v48 = v47;
  objc_msgSend(v47, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v266 = v14;
  if (v32)
    v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(9, v15);
  else
    v49 = v15[13];
  v50 = v49;
  objc_msgSend(v49, "setTranslatesAutoresizingMaskIntoConstraints:", 0, v266);
  swift_bridgeObjectRelease(v15);

  v51 = swift_allocObject(v284, 56, 7);
  v280 = xmmword_1004820C0;
  *(_OWORD *)(v51 + 16) = xmmword_1004820C0;
  v52 = objc_msgSend(v20, "topAnchor");
  v53 = objc_msgSend(v31, "view");
  if (!v53)
  {
    __break(1u);
    goto LABEL_50;
  }
  v54 = v53;
  v55 = objc_msgSend(v53, "topAnchor");

  v56 = objc_msgSend(v52, "constraintEqualToAnchor:", v55);
  *(_QWORD *)(v51 + 32) = v56;
  v57 = objc_msgSend(v20, "leadingAnchor");
  v58 = objc_msgSend(v31, "view");
  if (!v58)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v59 = v58;
  v60 = objc_msgSend(v58, "safeAreaLayoutGuide");

  v61 = objc_msgSend(v60, "leadingAnchor");
  v62 = objc_msgSend(v57, "constraintEqualToAnchor:", v61);

  *(_QWORD *)(v51 + 40) = v62;
  v63 = objc_msgSend(v20, "trailingAnchor");
  v64 = objc_msgSend(v31, "view");
  if (!v64)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v65 = v64;
  v66 = (void *)objc_opt_self(NSLayoutConstraint);
  v67 = objc_msgSend(v65, "safeAreaLayoutGuide");

  v68 = objc_msgSend(v67, "trailingAnchor");
  v69 = objc_msgSend(v63, "constraintEqualToAnchor:", v68);

  *(_QWORD *)(v51 + 48) = v69;
  v286[0] = v51;
  specialized Array._endMutation()(v70);
  v71 = v286[0];
  v72 = sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v66, "activateConstraints:", isa, swift_bridgeObjectRelease(v71).n128_f64[0]);

  v74 = swift_allocObject(v284, 72, 7);
  *(_OWORD *)(v74 + 16) = xmmword_1004820D0;
  v75 = v278;
  v76 = objc_msgSend(v278, "topAnchor");
  v77 = v75;
  v78 = objc_msgSend(v20, "topAnchor");
  v79 = objc_msgSend(v76, "constraintEqualToAnchor:", v78);

  *(_QWORD *)(v74 + 32) = v79;
  v80 = objc_msgSend(v77, "bottomAnchor");
  v81 = objc_msgSend(v20, "bottomAnchor");
  v82 = objc_msgSend(v80, "constraintEqualToAnchor:", v81);

  *(_QWORD *)(v74 + 40) = v82;
  v83 = objc_msgSend(v77, "leadingAnchor");
  v84 = objc_msgSend(v20, "safeAreaLayoutGuide");
  v85 = objc_msgSend(v84, "leadingAnchor");

  v86 = objc_msgSend(v83, "constraintEqualToAnchor:", v85);
  *(_QWORD *)(v74 + 48) = v86;
  v87 = objc_msgSend(v77, "trailingAnchor");
  v277 = v20;
  v88 = objc_msgSend(v20, "safeAreaLayoutGuide");
  v89 = objc_msgSend(v88, "trailingAnchor");

  v90 = objc_msgSend(v87, "constraintEqualToAnchor:", v89);
  *(_QWORD *)(v74 + 56) = v90;
  v91 = objc_msgSend(v77, "heightAnchor");
  v92 = objc_msgSend(v91, "constraintGreaterThanOrEqualToConstant:", 480.0);

  *(_QWORD *)(v74 + 64) = v92;
  v286[0] = v74;
  specialized Array._endMutation()(v93);
  v94 = v286[0];
  v281 = v72;
  v95 = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v96 = swift_bridgeObjectRelease(v94).n128_u64[0];
  v282 = v66;
  objc_msgSend(v66, "activateConstraints:", v95, v96);

  v97 = &v283[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownItem];
  v98 = swift_beginAccess(&v283[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownItem], v286, 0, 0);
  v99 = v270;
  v100 = v269;
  v101 = v271;
  v102 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v270 + 16))(v269, v97, v271, v98);
  LOBYTE(v97) = FMIPUnknownItem.isAppleAudioAccessory.getter(v102);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v101);
  if ((v97 & 1) != 0
    && (v103 = v267,
        sub_10014E874(v267),
        v104 = type metadata accessor for URL(0),
        v105 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 48))(v103, 1, v104),
        sub_1000051EC(v103, (uint64_t *)&unk_1005D3470),
        v105 != 1))
  {
    v136 = swift_allocObject(v284, 64, 7);
    *(_OWORD *)(v136 + 16) = xmmword_100481720;
    v137 = v266;
    v138 = objc_msgSend(v266, "heightAnchor");
    v139 = objc_msgSend(v138, "constraintEqualToConstant:", 240.0);

    *(_QWORD *)(v136 + 32) = v139;
    v140 = objc_msgSend(v137, "widthAnchor");
    v141 = objc_msgSend(v137, "heightAnchor");
    v142 = objc_msgSend(v140, "constraintEqualToAnchor:", v141);

    *(_QWORD *)(v136 + 40) = v142;
    v143 = objc_msgSend(v137, "centerXAnchor");
    v144 = objc_msgSend(v77, "centerXAnchor");
    v145 = objc_msgSend(v143, "constraintEqualToAnchor:", v144);

    *(_QWORD *)(v136 + 48) = v145;
    v146 = objc_msgSend(v137, "topAnchor");
    v147 = objc_msgSend(v77, "safeAreaLayoutGuide");
    v148 = objc_msgSend(v147, "topAnchor");

    v149 = objc_msgSend(v146, "constraintEqualToAnchor:constant:", v148, 32.0);
    *(_QWORD *)(v136 + 56) = v149;
    v285 = v136;
    specialized Array._endMutation()(v150);
    v135 = v285;
    v130 = v137;
  }
  else
  {
    v106 = swift_allocObject(v284, 88, 7);
    *(_OWORD *)(v106 + 16) = xmmword_1004850C0;
    v107 = v275;
    v108 = objc_msgSend(v275, "centerXAnchor");
    v109 = objc_msgSend(v77, "centerXAnchor");
    v110 = objc_msgSend(v108, "constraintEqualToAnchor:", v109);

    *(_QWORD *)(v106 + 32) = v110;
    v111 = objc_msgSend(v107, "heightAnchor");
    v112 = objc_msgSend(v111, "constraintEqualToConstant:", 160.0);

    *(_QWORD *)(v106 + 40) = v112;
    v113 = objc_msgSend(v107, "topAnchor");
    v114 = objc_msgSend(v77, "safeAreaLayoutGuide");
    v115 = objc_msgSend(v114, "topAnchor");

    v116 = objc_msgSend(v113, "constraintEqualToAnchor:constant:", v115, 32.0);
    *(_QWORD *)(v106 + 48) = v116;
    v117 = (void *)v276;
    v118 = objc_msgSend((id)v276, "heightAnchor");
    v119 = objc_msgSend(v118, "constraintEqualToConstant:", 180.0);

    *(_QWORD *)(v106 + 56) = v119;
    v120 = objc_msgSend(v117, "leadingAnchor");
    v121 = v277;
    v122 = objc_msgSend(v277, "safeAreaLayoutGuide");
    v123 = objc_msgSend(v122, "leadingAnchor");

    v124 = objc_msgSend(v120, "constraintEqualToAnchor:constant:", v123, 20.0);
    *(_QWORD *)(v106 + 64) = v124;
    v125 = objc_msgSend(v117, "trailingAnchor");
    v126 = objc_msgSend(v121, "safeAreaLayoutGuide");
    v127 = objc_msgSend(v126, "trailingAnchor");

    v128 = objc_msgSend(v125, "constraintEqualToAnchor:constant:", v127, -20.0);
    *(_QWORD *)(v106 + 72) = v128;
    v129 = objc_msgSend(v117, "topAnchor");
    v130 = v275;
    v131 = objc_msgSend(v278, "safeAreaLayoutGuide");
    v132 = objc_msgSend(v131, "topAnchor");

    v133 = objc_msgSend(v129, "constraintEqualToAnchor:constant:", v132, 22.0);
    *(_QWORD *)(v106 + 80) = v133;
    v285 = v106;
    specialized Array._endMutation()(v134);
    v135 = v285;
  }
  v151 = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v152 = swift_bridgeObjectRelease(v135).n128_u64[0];
  objc_msgSend(v282, "activateConstraints:", v151, v152);

  v153 = objc_msgSend(v130, "bottomAnchor");
  v154 = swift_allocObject(v284, 56, 7);
  *(_OWORD *)(v154 + 16) = v280;
  v155 = v272;
  v156 = objc_msgSend(v272, "leadingAnchor");
  v157 = v278;
  v158 = objc_msgSend(v278, "layoutMarginsGuide");
  v159 = objc_msgSend(v158, "leadingAnchor");

  v160 = objc_msgSend(v156, "constraintEqualToAnchor:constant:", v159, 4.0);
  *(_QWORD *)(v154 + 32) = v160;
  v161 = objc_msgSend(v155, "trailingAnchor");
  v162 = objc_msgSend(v157, "layoutMarginsGuide");
  v163 = objc_msgSend(v162, "trailingAnchor");

  v164 = objc_msgSend(v161, "constraintEqualToAnchor:constant:", v163, -4.0);
  *(_QWORD *)(v154 + 40) = v164;
  v165 = objc_msgSend(v155, "topAnchor");
  v275 = v153;
  v166 = objc_msgSend(v165, "constraintEqualToAnchor:constant:", v153, 64.0);

  *(_QWORD *)(v154 + 48) = v166;
  v285 = v154;
  specialized Array._endMutation()(v167);
  v168 = v285;
  v169 = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v170 = swift_bridgeObjectRelease(v168).n128_u64[0];
  objc_msgSend(v282, "activateConstraints:", v169, v170);

  v171 = swift_allocObject(v284, 64, 7);
  v276 = xmmword_100481720;
  *(_OWORD *)(v171 + 16) = xmmword_100481720;
  v172 = v273;
  v173 = v283;
  v174 = objc_msgSend(*(id *)&v283[v273], "topAnchor");
  v175 = objc_msgSend(v155, "bottomAnchor");
  v176 = objc_msgSend(v174, "constraintEqualToAnchor:constant:", v175, 8.0);

  *(_QWORD *)(v171 + 32) = v176;
  v177 = objc_msgSend(*(id *)&v173[v172], "leadingAnchor");
  v178 = objc_msgSend(v157, "layoutMarginsGuide");
  v179 = objc_msgSend(v178, "leadingAnchor");

  v180 = objc_msgSend(v177, "constraintEqualToAnchor:constant:", v179, 4.0);
  *(_QWORD *)(v171 + 40) = v180;
  v181 = objc_msgSend(*(id *)&v173[v172], "trailingAnchor");
  v182 = objc_msgSend(v157, "layoutMarginsGuide");
  v183 = objc_msgSend(v182, "trailingAnchor");

  v184 = objc_msgSend(v181, "constraintEqualToAnchor:constant:", v183, -4.0);
  *(_QWORD *)(v171 + 48) = v184;
  v185 = objc_msgSend(*(id *)&v173[v172], "bottomAnchor");
  v186 = objc_msgSend(v157, "layoutMarginsGuide");
  v187 = objc_msgSend(v186, "bottomAnchor");

  v188 = objc_msgSend(v185, "constraintLessThanOrEqualToAnchor:", v187);
  *(_QWORD *)(v171 + 56) = v188;
  v285 = v171;
  specialized Array._endMutation()(v189);
  v190 = v285;
  v191 = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v192 = swift_bridgeObjectRelease(v190).n128_u64[0];
  objc_msgSend(v282, "activateConstraints:", v191, v192);

  v193 = swift_allocObject(v284, 64, 7);
  *(_OWORD *)(v193 + 16) = v276;
  v194 = v274;
  v195 = objc_msgSend(v274, "leadingAnchor");
  v196 = objc_msgSend(v173, "view");
  if (!v196)
    goto LABEL_52;
  v197 = v196;
  v198 = objc_msgSend(v196, "layoutMarginsGuide");

  v199 = objc_msgSend(v198, "leadingAnchor");
  v200 = objc_msgSend(v195, "constraintEqualToAnchor:constant:", v199, 4.0);

  *(_QWORD *)(v193 + 32) = v200;
  v201 = objc_msgSend(v194, "trailingAnchor");
  v202 = objc_msgSend(v173, "view");
  if (!v202)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v203 = v202;
  v204 = objc_msgSend(v202, "layoutMarginsGuide");

  v205 = objc_msgSend(v204, "trailingAnchor");
  v206 = objc_msgSend(v201, "constraintEqualToAnchor:constant:", v205, -4.0);

  *(_QWORD *)(v193 + 40) = v206;
  v207 = objc_msgSend(v194, "bottomAnchor");
  v208 = objc_msgSend(*(id *)&v173[v279], "topAnchor");
  v209 = objc_msgSend(v207, "constraintEqualToAnchor:constant:", v208, -v4);

  *(_QWORD *)(v193 + 48) = v209;
  v210 = objc_msgSend(v194, "topAnchor");
  v211 = objc_msgSend(v277, "bottomAnchor");
  v212 = objc_msgSend(v210, "constraintEqualToAnchor:constant:", v211, v4);

  *(_QWORD *)(v193 + 56) = v212;
  v285 = v193;
  specialized Array._endMutation()(v213);
  v214 = *(_QWORD *)&v173[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonShowingConstraints];
  *(_QWORD *)&v173[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonShowingConstraints] = v285;
  swift_bridgeObjectRelease(v214);
  v215 = swift_allocObject(v284, 56, 7);
  *(_OWORD *)(v215 + 16) = v280;
  v216 = v268;
  v217 = objc_msgSend(v268, "centerXAnchor");
  v218 = objc_msgSend(v173, "view");
  if (!v218)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v219 = v218;
  v220 = objc_msgSend(v218, "centerXAnchor");

  v221 = objc_msgSend(v217, "constraintEqualToAnchor:", v220);
  *(_QWORD *)(v215 + 32) = v221;
  v222 = objc_msgSend(v216, "bottomAnchor");
  v223 = v279;
  v224 = objc_msgSend(*(id *)&v173[v279], "topAnchor");
  v225 = objc_msgSend(v222, "constraintEqualToAnchor:constant:", v224, -v4);

  *(_QWORD *)(v215 + 40) = v225;
  v226 = objc_msgSend(v216, "topAnchor");
  v227 = objc_msgSend(v277, "bottomAnchor");
  v228 = objc_msgSend(v226, "constraintEqualToAnchor:constant:", v227, v4);

  *(_QWORD *)(v215 + 48) = v228;
  v285 = v215;
  specialized Array._endMutation()(v229);
  v230 = *(_QWORD *)&v173[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonHiddenConstraints];
  *(_QWORD *)&v173[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonHiddenConstraints] = v285;
  swift_bridgeObjectRelease(v230);
  v231 = swift_allocObject(v284, 56, 7);
  *(_OWORD *)(v231 + 16) = v280;
  v232 = objc_msgSend(*(id *)&v173[v223], "bottomAnchor");
  v233 = objc_msgSend(v173, "view");
  if (!v233)
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v234 = v233;
  v235 = objc_msgSend(v233, "safeAreaLayoutGuide");

  v236 = objc_msgSend(v235, "bottomAnchor");
  if (qword_1005D1DA8 != -1)
    swift_once(&qword_1005D1DA8, sub_100265FD8);
  v237 = objc_msgSend(v232, "constraintEqualToAnchor:constant:", v236, -*(double *)&qword_1005F5598);

  *(_QWORD *)(v231 + 32) = v237;
  v238 = v283;
  v239 = v279;
  v240 = objc_msgSend(*(id *)&v283[v279], "leadingAnchor");
  v241 = objc_msgSend(v238, "view");
  if (!v241)
    goto LABEL_56;
  v242 = v241;
  v243 = objc_msgSend(v241, "layoutMarginsGuide");

  v244 = objc_msgSend(v243, "leadingAnchor");
  v245 = objc_msgSend(v240, "constraintEqualToAnchor:constant:", v244, 4.0);

  *(_QWORD *)(v231 + 40) = v245;
  v246 = objc_msgSend(*(id *)&v238[v239], "trailingAnchor");
  v247 = objc_msgSend(v238, "view");
  if (v247)
  {
    v248 = v247;
    v249 = objc_msgSend(v247, "layoutMarginsGuide");

    v250 = objc_msgSend(v249, "trailingAnchor");
    v251 = objc_msgSend(v246, "constraintEqualToAnchor:constant:", v250, -4.0);

    *(_QWORD *)(v231 + 48) = v251;
    v285 = v231;
    specialized Array._endMutation()(v252);
    v253 = v285;
    v254 = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v255 = swift_bridgeObjectRelease(v253).n128_u64[0];
    objc_msgSend(v282, "activateConstraints:", v254, v255);

    sub_10014DAA4();
    return;
  }
LABEL_57:
  __break(1u);
}

void sub_10014B42C(void *a1, uint64_t a2, const char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;

  v4 = qword_1005D1DE8;
  v10 = a1;
  if (v4 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100056D88(v5, (uint64_t)qword_1005F5748);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a3, v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  objc_msgSend(v10, "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_10014B524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  NSURL *v19;
  void *v20;
  void *v21;
  void *v22;
  unint64_t v23;
  Class isa;
  _BYTE v26[24];

  v1 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v1);
  v3 = &v26[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100056D88(v8, (uint64_t)qword_1005F5748);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMUTAccessoryInformationViewController: Continue on Website Button Pressed", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  v13 = v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_nfcURL;
  swift_beginAccess(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_nfcURL, v26, 0, 0);
  sub_100007464(v13, (uint64_t)v3, (uint64_t *)&unk_1005D3470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    v14 = sub_1000051EC((uint64_t)v3, (uint64_t *)&unk_1005D3470);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMUTAccessoryInformationViewController: No URL information found", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    v18 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
    if (v18)
    {
      v20 = v18;
      URL._bridgeToObjectiveC()(v19);
      v22 = v21;
      v23 = sub_10004C214((uint64_t)_swiftEmptyArrayStorage);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v20, "openSensitiveURL:withOptions:", v22, isa, swift_bridgeObjectRelease(v23).n128_f64[0]);

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_10014B840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint8_t *v23;
  uint8_t *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  id v41;
  NSURL *v42;
  void *v43;
  void *v44;
  void *v45;
  unint64_t v46;
  Class isa;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char v53[24];

  v1 = v0;
  v2 = type metadata accessor for FMIPUnknownItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C((uint64_t *)&unk_1005D7E90);
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005D7E48);
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v51 = *(_QWORD *)(v15 - 8);
  v52 = v15;
  __chkstk_darwin(v15);
  v50 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100056D88(v17, (uint64_t)qword_1005F5748);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    v49 = v3;
    v22 = v1;
    v23 = v21;
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMUTAccessoryInformationViewController: Continue on Disable Website Button Pressed", v21, 2u);
    v24 = v23;
    v1 = v22;
    v3 = v49;
    swift_slowDealloc(v24, -1, -1);
  }

  v25 = v1 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownItem;
  v26 = swift_beginAccess(v25, v53, 0, 0);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v5, v25, v2, v26);
  FMIPUnknownItem.utMetadata.getter(v27);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v28 = type metadata accessor for FMIPUnknownItemUTMetadata(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v8, 1, v28) == 1)
  {
    v30 = (uint64_t *)&unk_1005D7E90;
    v31 = (uint64_t)v8;
LABEL_9:
    sub_1000051EC(v31, v30);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v14, 1, 1, v52);
LABEL_10:
    v34 = sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005D3470);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "FMUTAccessoryInformationViewController: No URL information found", v37, 2u);
      swift_slowDealloc(v37, -1, -1);
    }

    return;
  }
  FMIPUnknownItemUTMetadata.disableInfo.getter();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v28);
  v32 = type metadata accessor for FMIPUnknownItemProductMetadata(0);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v11, 1, v32) == 1)
  {
    v30 = &qword_1005D7E48;
    v31 = (uint64_t)v11;
    goto LABEL_9;
  }
  FMIPUnknownItemProductMetadata.disableURL.getter();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v32);
  v39 = v51;
  v38 = v52;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v14, 1, v52) == 1)
    goto LABEL_10;
  v40 = v50;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v50, v14, v38);
  v41 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v41)
  {
    v43 = v41;
    URL._bridgeToObjectiveC()(v42);
    v45 = v44;
    v46 = sub_10004C214((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v43, "openSensitiveURL:withOptions:", v45, isa, swift_bridgeObjectRelease(v46).n128_f64[0]);

  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v38);
}

double sub_10014BD2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  unsigned int v24;
  void *v25;
  __n128 v26;
  id v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  double result;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  char v61[24];

  v2 = v1;
  v58 = a1;
  v3 = sub_100053F2C(&qword_1005D7E48);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v4;
  __chkstk_darwin(v3);
  v55 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D7E50);
  __chkstk_darwin(v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPUnknownItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100053F2C(&qword_1005D7E58);
  v14 = *(_QWORD *)(v13 - 8);
  v51 = v13;
  v52 = v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100053F2C((uint64_t *)&unk_1005D7E60);
  v18 = *(_QWORD *)(v17 - 8);
  v53 = v17;
  v54 = v18;
  __chkstk_darwin(v17);
  v50 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_showDisableInfo);
  v21 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_mediator) + 64);
  v22 = v2 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownItem;
  v23 = swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownItem, v61, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, v22, v9, v23);
  swift_retain(v21);
  if (v20)
    v24 = 3;
  else
    v24 = 2;
  v25 = (void *)sub_10016E4C8((uint64_t)v12, v24);
  v26 = swift_release(v21);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v26);
  v59 = *(id *)(v2 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_updateQueue);
  v27 = v59;
  v60 = v25;
  v28 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v29(v8, 1, 1, v28);
  v30 = v27;
  v31 = sub_100053F2C(&qword_1005D6DC0);
  v32 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v33 = sub_10003F774((unint64_t *)&unk_1005D7E70, &qword_1005D6DC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v34 = sub_10015069C();
  Publisher.subscribe<A>(on:options:)(&v59, v8, v31, v32, v33, v34);
  sub_1000051EC((uint64_t)v8, &qword_1005D7E50);

  swift_release(v60);
  v60 = (id)static OS_dispatch_queue.main.getter(v35);
  v29(v8, 1, 1, v28);
  v36 = sub_10003F774(&qword_1005D7E80, &qword_1005D7E58, (uint64_t)&protocol conformance descriptor for Publishers.SubscribeOn<A, B>);
  v38 = v50;
  v37 = v51;
  Publisher.receive<A>(on:options:)(&v60, v8, v51, v32, v36, v34);
  sub_1000051EC((uint64_t)v8, &qword_1005D7E50);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v37);
  v39 = swift_allocObject(&unk_100548B58, 24, 7);
  swift_unknownObjectWeakInit(v39 + 16);
  v40 = v55;
  sub_100007464(v58, v55, &qword_1005D7E48);
  v41 = *(unsigned __int8 *)(v56 + 80);
  v42 = (v41 + 24) & ~v41;
  v43 = swift_allocObject(&unk_100548CE8, v42 + v57, v41 | 7);
  *(_QWORD *)(v43 + 16) = v39;
  sub_10005DAA0(v40, v43 + v42, &qword_1005D7E48);
  v44 = sub_10003F774(&qword_1005D7E88, (uint64_t *)&unk_1005D7E60, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v45 = v53;
  v46 = Publisher.sink(receiveCompletion:receiveValue:)(State.rawValue.getter, 0, sub_100150794, v43, v53, v44);
  v47 = swift_release(v43);
  (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v38, v45, v47);
  v48 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_imageFetchCancellable);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_imageFetchCancellable) = v46;
  *(_QWORD *)&result = swift_release(v48).n128_u64[0];
  return result;
}

void sub_10014C188(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t Strong;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  double v22;
  char v23;
  char v24;
  void (*v25)(char *, uint64_t);
  double v26;
  char v27;
  char v28;
  double v29;
  void *v30;
  id v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v48;
  double v49;
  CGFloat v50;
  double MinY;
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  _BYTE v57[24];
  CGSize v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;

  v6 = sub_100053F2C(&qword_1005D7E48);
  v7 = __chkstk_darwin(v6);
  v9 = &v57[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v11 = &v57[-v10 - 8];
  v12 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v57, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v14 = (char *)Strong;
    v15 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_productImage;
    v16 = *(void **)(Strong + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_productImage);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_productImage) = v12;
    v17 = v12;

    v18 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_productImageView;
    objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_productImageView], "setImage:", *(_QWORD *)&v14[v15]);
    sub_100007464(a3, (uint64_t)v11, &qword_1005D7E48);
    v19 = type metadata accessor for FMIPUnknownItemProductMetadata(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    if (v21(v11, 1, v19) == 1)
    {

      sub_1000051EC((uint64_t)v11, &qword_1005D7E48);
      return;
    }
    v56 = v17;
    v22 = COERCE_DOUBLE(FMIPUnknownItemProductMetadata.heatzonePercentX.getter());
    v24 = v23;
    v25 = *(void (**)(char *, uint64_t))(v20 + 8);
    v25(v11, v19);
    if ((v24 & 1) != 0)
      goto LABEL_12;
    sub_100007464(a3, (uint64_t)v9, &qword_1005D7E48);
    if (v21(v9, 1, v19) == 1)
    {

      sub_1000051EC((uint64_t)v9, &qword_1005D7E48);
      return;
    }
    v26 = COERCE_DOUBLE(FMIPUnknownItemProductMetadata.heatzonePercentY.getter());
    v28 = v27;
    v25(v9, v19);
    if ((v28 & 1) != 0 || v22 < 0.0 || v22 > 1.0 || (v29 = v26, v26 < 0.0) || v26 > 1.0)
    {
LABEL_12:

    }
    else
    {
      v30 = *(void **)&v14[v18];
      objc_msgSend(v30, "setNeedsLayout");
      objc_msgSend(v30, "layoutIfNeeded");
      v31 = v30;
      objc_msgSend(v56, "size");
      v33 = v32;
      v35 = v34;
      objc_msgSend(v31, "bounds");
      v37 = v36;
      v39 = v38;
      v41 = v40;
      v43 = v42;
      v58.width = v33;
      v58.height = v35;
      v63.origin.x = v37;
      v63.origin.y = v39;
      v63.size.width = v41;
      v63.size.height = v43;
      v59 = AVMakeRectWithAspectRatioInsideRect(v58, v63);
      x = v59.origin.x;
      y = v59.origin.y;
      width = v59.size.width;
      height = v59.size.height;
      v48 = CGRectGetWidth(v59) * v22;
      v60.origin.x = x;
      v60.origin.y = y;
      v60.size.width = width;
      v60.size.height = height;
      v49 = v48 + CGRectGetMinX(v60);
      v61.origin.x = x;
      v61.origin.y = y;
      v61.size.width = width;
      v61.size.height = height;
      v50 = CGRectGetHeight(v61) * v29;
      v62.origin.x = x;
      v62.origin.y = y;
      v62.size.width = width;
      v62.size.height = height;
      MinY = CGRectGetMinY(v62);

      v52 = sub_1001507D8(v49, v50 + MinY, 20.0);
      v53 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_heatZone;
      v54 = *(void **)&v14[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_heatZone];
      *(_QWORD *)&v14[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_heatZone] = v52;

      v55 = objc_msgSend(*(id *)&v14[v18], "layer");
      objc_msgSend(v55, "addSublayer:", *(_QWORD *)&v14[v53]);

    }
  }
}

uint64_t sub_10014C4F4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  Swift::String v20;
  uint64_t v21;
  NSString v22;
  NSString v23;
  id v24;
  void (*v25)(char *, char *, uint64_t);
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  char *v30;
  id v31;
  NSURL *v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v43 - v6;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v43 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v43 - v13;
  __chkstk_darwin(v12);
  v44 = (char *)&v43 - v15;
  v16 = sub_10014E710();
  v18 = v17;
  v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v45 = v16;
  v46 = v18;
  v20._countAndFlagsBits = 0x6D7473756A64415FLL;
  v20._object = (void *)0xEC00000073746E65;
  String.append(_:)(v20);
  v21 = v46;
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v19, "URLForResource:withExtension:", v22, v23);

  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_6;
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v24);

  v25 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v25(v7, v14, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v26(v7, 1, v8) == 1)
  {
LABEL_6:
    v28 = (uint64_t)v7;
    return sub_1000051EC(v28, (uint64_t *)&unk_1005D3470);
  }
  v27 = v44;
  v25(v44, v7, v8);
  sub_10014E874((uint64_t)v5);
  if (v26(v5, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v27, v8);
    v28 = (uint64_t)v5;
    return sub_1000051EC(v28, (uint64_t *)&unk_1005D3470);
  }
  v30 = v43;
  v25(v43, v5, v8);
  v31 = objc_allocWithZone((Class)SFMediaPlayerItem);
  URL._bridgeToObjectiveC()(v32);
  v34 = v33;
  v35 = objc_msgSend(v31, "initWithURL:", v33);

  objc_msgSend(v35, "setShouldLoop:", 1);
  v36 = objc_msgSend(v1, "traitCollection");
  v37 = objc_msgSend(v36, "userInterfaceStyle");

  if (v37 == (id)2)
    v38 = 1;
  else
    v38 = 2;
  v39 = *(void **)&v1[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_playerView];
  URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_playerView);
  v41 = v40;
  objc_msgSend(v39, "updateViewForAssetType:adjustmentsURL:", v38, v40);

  objc_msgSend(v39, "addMovieItem:", v35);
  objc_msgSend(v39, "play");

  v42 = *(void (**)(char *, uint64_t))(v9 + 8);
  v42(v30, v8);
  return ((uint64_t (*)(char *, uint64_t))v42)(v27, v8);
}

uint64_t sub_10014C8B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;

  v2 = v1;
  v4 = type metadata accessor for FMIPUnknownItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100056D88(v8, (uint64_t)qword_1005F5748);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMUTAccessoryInformationViewController: Start scanning for encrypted payload", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_findUnknownItem) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v20 = type metadata accessor for FMIPFetchEncryptedPayloadAction(0);
    swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    v21 = FMIPFetchEncryptedPayloadAction.init(unknownItem:)(v7);
    v22 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2
                                            + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_mediator)
                                + 24)
                    + 32);
    v23 = swift_allocObject(&unk_100548B58, 24, 7);
    swift_unknownObjectWeakInit(v23 + 16);
    swift_retain(v22);
    swift_retain(v23);
    sub_1000B11B4(v21, (uint64_t)sub_10014FA3C, v23);
    swift_release(v21);
    swift_release(v22);
    v19 = v23;
    return swift_release_n(v19, 2);
  }
  v14 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownAccessoryDiscoveryController);
  if (v14)
  {
    v15 = swift_retain(*(_QWORD *)(v2
                                 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownAccessoryDiscoveryController));
    v16 = FMIPUnknownItem.unknownBeacon.getter(v15);
    if (v16)
    {
      v17 = (void *)v16;
      v18 = swift_allocObject(&unk_100548B58, 24, 7);
      swift_unknownObjectWeakInit(v18 + 16);
      swift_retain(v18);
      dispatch thunk of FMIPUnknownAccessoryDiscoveryController.initiateFetchEncryptedPayloadForUnknownBeacon(beacon:completion:)(v17, sub_100150444, v18);
      swift_release(v14);

      v19 = v18;
      return swift_release_n(v19, 2);
    }
    swift_release(v14);
  }
  v25 = Logger.logObject.getter(v13);
  v26 = static os_log_type_t.default.getter(v25);
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "FMUTAccessoryInformationViewController: fetching encrypted payload completed with error, insuffienct beacon information.", v27, 2u);
    swift_slowDealloc(v27, -1, -1);
  }

  return sub_10014FE94();
}

uint64_t sub_10014CBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *Strong;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t);
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45[24];
  void **aBlock;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  void *v49;
  void *v50;
  uint64_t v51;
  char v52[32];

  v39 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v44 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005D7E28);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a2 + 16;
  v41 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v40 = static OS_dispatch_queue.main.getter(v41);
  v14 = swift_allocObject(&unk_100548B58, 24, 7);
  v36 = v13;
  swift_beginAccess(v13, v52, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v13);
  swift_unknownObjectWeakInit(v14 + 16);

  sub_100007464(v39, (uint64_t)v12, &qword_1005D7E28);
  v16 = *(unsigned __int8 *)(v10 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = (v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(&unk_100548BA8, v18 + 8, v16 | 7);
  sub_10005DAA0((uint64_t)v12, v19 + v17, &qword_1005D7E28);
  *(_QWORD *)(v19 + v18) = v14;
  v50 = sub_1001504FC;
  v51 = v19;
  aBlock = _NSConcreteStackBlock;
  v47 = 1107296256;
  v48 = sub_100037DF8;
  v49 = &unk_100548BC0;
  v20 = _Block_copy(&aBlock);
  swift_release(v51);
  static DispatchQoS.unspecified.getter(v21);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v22 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v39 = v22;
  v23 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v38 = v23;
  v37 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v23, v37, v3, v22);
  v24 = (void *)v40;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v20);
  _Block_release(v20);

  v25 = *(void (**)(char *, uint64_t))(v44 + 8);
  v25(v5, v3);
  v26 = v43;
  v27 = *(uint64_t (**)(char *, uint64_t))(v42 + 8);
  v28 = v27(v8, v43);
  v29 = (void *)static OS_dispatch_queue.main.getter(v28);
  v30 = swift_allocObject(&unk_100548B58, 24, 7);
  v31 = v36;
  swift_beginAccess(v36, v45, 0, 0);
  v32 = (void *)swift_unknownObjectWeakLoadStrong(v31);
  swift_unknownObjectWeakInit(v30 + 16);

  v50 = sub_10014FA24;
  v51 = v30;
  aBlock = _NSConcreteStackBlock;
  v47 = 1107296256;
  v48 = sub_100037DF8;
  v49 = &unk_100548BE8;
  v33 = _Block_copy(&aBlock);
  swift_release(v51);
  static DispatchQoS.unspecified.getter(v34);
  aBlock = (void **)_swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v38, v37, v3, v39);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v33);
  _Block_release(v33);

  v25(v5, v3);
  return v27(v8, v26);
}

uint64_t sub_10014CFCC(void (*a1)(uint64_t, char *, uint64_t), uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  __n128 v39;
  void (*v40)(char *, uint64_t, __n128);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t Strong;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  void (*v63)(uint64_t, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[3];

  v63 = a1;
  v3 = type metadata accessor for FMIPAccessoryError(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v60 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v62 = (char *)&v58 - v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v58 - v9;
  v11 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v11);
  v61 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100053F2C(&qword_1005D7E28);
  __chkstk_darwin(v17);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (char *)(a2 + 16);
  sub_100007464((uint64_t)v63, (uint64_t)v19, &qword_1005D7E28);
  if (swift_getEnumCaseMultiPayload(v19, v17) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v10, v19, v3);
    v21 = v3;
    v22 = v4;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v23 = type metadata accessor for Logger(0);
    sub_100056D88(v23, (uint64_t)qword_1005F5748);
    v24 = *(uint64_t (**)(char *, char *, uint64_t))(v4 + 16);
    v25 = v62;
    v26 = v24(v62, v10, v21);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter(v27);
    v29 = os_log_type_enabled(v27, v28);
    v63 = (void (*)(uint64_t, char *, uint64_t))v24;
    if (v29)
    {
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = swift_slowAlloc(32, -1);
      v61 = v20;
      v59 = v10;
      v32 = v31;
      v66[0] = v31;
      v58 = v22;
      *(_DWORD *)v30 = 136315138;
      v33 = v60;
      v24(v60, v25, v21);
      v34 = String.init<A>(describing:)(v33, v21);
      v35 = v21;
      v37 = v36;
      v64 = sub_100056DA0(v34, v36, v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65);
      v38 = v37;
      v21 = v35;
      v39 = swift_bridgeObjectRelease(v38);
      v40 = *(void (**)(char *, uint64_t, __n128))(v58 + 8);
      v40(v25, v21, v39);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "FMUTAccessoryInformationViewController: fetching encrypted payload completed with error %s", v30, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      v41 = v32;
      v10 = v59;
      v20 = v61;
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v30, -1, -1);
    }
    else
    {
      v40 = *(void (**)(char *, uint64_t, __n128))(v22 + 8);
      ((void (*)(char *, uint64_t))v40)(v25, v21);
    }

    swift_beginAccess(v20, v66, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v20);
    if (Strong)
    {
      v54 = (void *)Strong;
      v55 = sub_100008000((unint64_t *)&unk_1005D7E30, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPAccessoryError, (uint64_t)&protocol conformance descriptor for FMIPAccessoryError);
      v56 = swift_allocError(v21, v55, 0, 0);
      v63(v57, v10, v21);
      sub_10014FE94();
      swift_errorRelease(v56);

    }
    return ((uint64_t (*)(char *, uint64_t))v40)(v10, v21);
  }
  else
  {
    v42 = v20;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v19, v13);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v43 = type metadata accessor for Logger(0);
    v44 = sub_100056D88(v43, (uint64_t)qword_1005F5748);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.default.getter(v45);
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v47 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "FMUTAccessoryInformationViewController: fetching encrypted payload completed successfully", v47, 2u);
      swift_slowDealloc(v47, -1, -1);
    }

    swift_beginAccess(v42, v66, 0, 0);
    v48 = swift_unknownObjectWeakLoadStrong(v42);
    if (v48)
    {
      v49 = (char *)v48;
      v50 = (uint64_t)v61;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v61, v16, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v50, 0, 1, v13);
      v51 = (uint64_t)&v49[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_nfcURL];
      swift_beginAccess(&v49[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_nfcURL], &v64, 33, 0);
      sub_100150540(v50, v51);
      swift_endAccess(&v64);

    }
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

void sub_10014D520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t Strong;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t aBlock[5];
  uint64_t v76;
  char v77[24];
  uint64_t v78;
  _BYTE v79[24];

  v73 = a1;
  v74 = a2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v14);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FMIPItemActionStatus(0);
  v18 = __chkstk_darwin(v17);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a4 + 16;
  if (a3)
  {
    swift_beginAccess(v22, aBlock, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v22);
    if (Strong)
    {
      v24 = (void *)Strong;
      swift_errorRetain(a3);
      sub_10014FE94();
      swift_errorRelease(a3);

    }
  }
  else
  {
    v25 = v19;
    v65 = v18;
    v66 = v16;
    v67 = v13;
    v71 = v6;
    v72 = v22;
    v68 = v11;
    v69 = v10;
    v70 = v7;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v26 = type metadata accessor for Logger(0);
    sub_100056D88(v26, (uint64_t)qword_1005F5748);
    v27 = v25;
    v28 = v65;
    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 16))(v21, v73, v65);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter(v30);
    v32 = v9;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = swift_slowAlloc(22, -1);
      v34 = swift_slowAlloc(64, -1);
      aBlock[0] = v34;
      *(_DWORD *)v33 = 136315394;
      v35 = sub_100008000((unint64_t *)&unk_1005D2C50, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemActionStatus, (uint64_t)&protocol conformance descriptor for FMIPItemActionStatus);
      v36 = dispatch thunk of CustomStringConvertible.description.getter(v28, v35);
      v38 = v37;
      v78 = sub_100056DA0(v36, v37, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, v79);
      v39 = swift_bridgeObjectRelease(v38);
      (*(void (**)(char *, uint64_t, __n128))(v27 + 8))(v21, v28, v39);
      *(_WORD *)(v33 + 12) = 2080;
      v78 = 0;
      v40 = sub_100053F2C(&qword_1005D7E40);
      v41 = String.init<A>(describing:)(&v78, v40);
      v43 = v42;
      v78 = sub_100056DA0(v41, v42, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, v79);
      swift_bridgeObjectRelease(v43);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "FMUTAccessoryInformationViewController: fetching encrypted payload completed with status: %s, and error %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy(v34, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v28);
    }

    v44 = v72;
    v45 = v74;
    v46 = (uint64_t)v66;
    swift_beginAccess(v72, &v78, 0, 0);
    v47 = swift_unknownObjectWeakLoadStrong(v44);
    v49 = v70;
    v48 = v71;
    v50 = v67;
    v51 = v68;
    if (v47)
    {
      v52 = (char *)v47;
      sub_100007464(v45, v46, (uint64_t *)&unk_1005D3470);
      v53 = (uint64_t)&v52[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_nfcURL];
      swift_beginAccess(&v52[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_nfcURL], aBlock, 33, 0);
      sub_100150540(v46, v53);
      swift_endAccess(aBlock);

    }
    v54 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v55 = (void *)static OS_dispatch_queue.main.getter(v54);
    v56 = swift_allocObject(&unk_100548B58, 24, 7);
    v57 = v72;
    swift_beginAccess(v72, v77, 0, 0);
    v58 = (void *)swift_unknownObjectWeakLoadStrong(v57);
    swift_unknownObjectWeakInit(v56 + 16);

    aBlock[4] = (uint64_t)sub_10014FA24;
    v76 = v56;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100037DF8;
    aBlock[3] = (uint64_t)&unk_100548CB0;
    v59 = _Block_copy(aBlock);
    swift_release(v76);
    static DispatchQoS.unspecified.getter(v60);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v61 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v62 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v63 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v62, v63, v48, v61);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v50, v32, v59);
    _Block_release(v59);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v48);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v69);
  }
}

void sub_10014DAA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  uint64_t v9;
  Class isa;
  uint64_t v11;
  Class v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  void *v24;
  uint64_t v25;
  Class v26;
  uint64_t v27;
  Class v28;
  char *v29;
  void *object;
  uint64_t v31;
  Class v32;
  uint64_t v33;
  Class v34;
  unint64_t v35;
  Swift::String_optional v36;
  Swift::String v37;
  id v38;
  NSString v39;
  unint64_t v40;
  _BYTE v42[24];

  v1 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v1);
  v3 = &v42[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for FMIPUnknownItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_showDisableInfo) == 1)
  {
    v8 = (void *)objc_opt_self(NSLayoutConstraint);
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonShowingConstraints);
    sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v9);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "activateConstraints:", isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

    v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonHiddenConstraints);
    swift_bridgeObjectRetain(v11);
    v12 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "deactivateConstraints:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

    v13 = *(char **)(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButton);
    objc_msgSend(v13, "setHidden:", 0);
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_waitingView), "setHidden:", 1);
    v14 = v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownItem;
    v15 = swift_beginAccess(v14, v42, 0, 0);
    v16 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v14, v4, v15);
    LOBYTE(v12) = FMIPUnknownItem.isFindMyNetwork.getter(v16);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v18 = 0xD000000000000018;
    if ((v12 & 1) != 0)
    {
      v19 = 0xD00000000000001ELL;
      v40 = 0x80000001004A5660;
      v20 = "ACCESSORY_REPLACE_BATTERY_DONE";
LABEL_9:
      v35 = (unint64_t)(v20 - 32) | 0x8000000000000000;
      v36.value._object = (void *)0x80000001004A5640;
      v36.value._countAndFlagsBits = 0xD000000000000013;
      v37._countAndFlagsBits = 0;
      v37._object = (void *)0xE000000000000000;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v19, v36, (NSBundle)v17, v37, *(Swift::String *)&v18)._object;

      goto LABEL_10;
    }
    v19 = 0xD00000000000002FLL;
LABEL_8:
    v40 = 0x80000001004A5660;
    v20 = "ACCESSORY_FOLLOWING_LEARN_MORE_CONTINUE_WEBSITE";
    goto LABEL_9;
  }
  v21 = v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_nfcURL;
  swift_beginAccess(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_nfcURL, v42, 0, 0);
  sub_100007464(v21, (uint64_t)v3, (uint64_t *)&unk_1005D3470);
  v22 = type metadata accessor for URL(0);
  v23 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v3, 1, v22);
  sub_1000051EC((uint64_t)v3, (uint64_t *)&unk_1005D3470);
  v24 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  if (v23 != 1)
  {
    v31 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonShowingConstraints);
    swift_bridgeObjectRetain(v31);
    v32 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v24, "activateConstraints:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

    v33 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonHiddenConstraints);
    swift_bridgeObjectRetain(v33);
    v34 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v24, "deactivateConstraints:", v34, swift_bridgeObjectRelease(v33).n128_f64[0]);

    v13 = *(char **)(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButton);
    objc_msgSend(v13, "setHidden:", 0);
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_waitingView), "setHidden:", 1);
    v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v18 = 0xD000000000000018;
    v19 = 0xD00000000000002FLL;
    goto LABEL_8;
  }
  v25 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonHiddenConstraints);
  swift_bridgeObjectRetain(v25);
  v26 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v24, "activateConstraints:", v26, swift_bridgeObjectRelease(v25).n128_f64[0]);

  v27 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonShowingConstraints);
  swift_bridgeObjectRetain(v27);
  v28 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v24, "deactivateConstraints:", v28, swift_bridgeObjectRelease(v27).n128_f64[0]);

  v13 = *(char **)(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButton);
  objc_msgSend(v13, "setHidden:", 1);
  v29 = *(char **)(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_waitingView);
  objc_msgSend(v29, "setHidden:", 0);
  objc_msgSend(*(id *)&v29[OBJC_IVAR____TtC6FindMy13FMWaitingView_activityIndicator], "startAnimating");
  object = (void *)0xE000000000000000;
LABEL_10:
  v38 = *(id *)&v13[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label];
  v39 = String._bridgeToObjectiveC()();
  objc_msgSend(v38, "setText:", v39, swift_bridgeObjectRelease(object).n128_f64[0]);

}

uint64_t sub_10014E00C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  void (*v22)(char *, uint64_t, uint64_t, __n128);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  char *v31;
  char *v32;
  __n128 v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58[16];
  char *v59;
  _QWORD aBlock[5];
  uint64_t v61;
  char v62[32];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v55 = *(_QWORD *)(v1 - 8);
  v56 = v1;
  __chkstk_darwin(v1);
  v54 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v52 = *(_QWORD *)(v3 - 8);
  v53 = v3;
  __chkstk_darwin(v3);
  v51 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C((uint64_t *)&unk_1005D2A50);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMIPUnknownItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v47 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v46 - v16;
  __chkstk_darwin(v15);
  v49 = (char *)&v46 - v18;
  v19 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_mediator) + 24);
  v50 = v0;
  v20 = v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownItem;
  v21 = swift_beginAccess(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownItem, v62, 0, 0);
  v22 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v22(v17, v20, v11, v21);
  v23 = swift_retain(v19);
  FMIPUnknownItem.identifier.getter(v23);
  v48 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
  v24 = v48(v17, v11);
  v25 = FMIPManager.unknownItems.getter(v24);
  v59 = v7;
  v26 = sub_1003DBD90(sub_1001381B0, (uint64_t)v58, v25);
  v27 = v26;
  if (*(_QWORD *)(v26 + 16))
  {
    ((void (*)(char *, unint64_t, uint64_t))v22)(v10, v26 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v11);
    v28 = 0;
  }
  else
  {
    v28 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v28, 1, v11);
  swift_release(v19);
  v29 = swift_bridgeObjectRelease(v27);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v57, v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_1000051EC((uint64_t)v10, (uint64_t *)&unk_1005D2A50);
  v31 = v49;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v49, v10, v11);
  v32 = v47;
  ((void (*)(char *, char *, uint64_t))v22)(v47, v31, v11);
  v33 = swift_beginAccess(v20, aBlock, 33, 0);
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v12 + 40))(v20, v32, v11, v33);
  swift_endAccess(aBlock);
  v34 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v35 = (void *)static OS_dispatch_queue.main.getter(v34);
  v36 = swift_allocObject(&unk_100548B58, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16);
  aBlock[4] = sub_10014FA24;
  v61 = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100548B70;
  v37 = _Block_copy(aBlock);
  swift_release(v61);
  v38 = v51;
  static DispatchQoS.unspecified.getter(v39);
  aBlock[0] = _swiftEmptyArrayStorage;
  v40 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v41 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v42 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  v43 = v54;
  v44 = v41;
  v45 = v56;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v44, v42, v56, v40);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v38, v43, v37);
  _Block_release(v37);

  (*(void (**)(char *, uint64_t))(v55 + 8))(v43, v45);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v38, v53);
  return v48(v31, v11);
}

void sub_10014E4C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_10014DAA4();

  }
}

void sub_10014E514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  NSURL *v14;
  void *v15;
  void *v16;
  void *v17;
  Class isa;
  void *Strong;
  void *v20;
  id v21;
  _BYTE v23[24];

  v5 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v5);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = a3 + 16;
  sub_100007464(a2, (uint64_t)v7, (uint64_t *)&unk_1005D3470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1000051EC((uint64_t)v7, (uint64_t *)&unk_1005D3470);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v13 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
    if (v13)
    {
      v15 = v13;
      URL._bridgeToObjectiveC()(v14);
      v17 = v16;
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v15, "openSensitiveURL:withOptions:", v17, isa);

    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  swift_beginAccess(v12, v23, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v12);
  if (Strong)
  {
    v20 = Strong;
    v21 = objc_msgSend(Strong, "parentViewController");

    if (v21)
    {
      objc_msgSend(v21, "dismissViewControllerAnimated:completion:", 1, 0);

    }
  }
}

uint64_t sub_10014E710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v1 = type metadata accessor for FMIPUnknownItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_showDisableInfo);
  v6 = v0 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownItem;
  swift_beginAccess(v6, v20, 0, 0);
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v6, v1);
  v8 = (void *)FMIPUnknownItem.unknownBeacon.getter(v7);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v8)
  {
    v10 = SPUnknownBeacon.productId.getter(v9);

  }
  else
  {
    v10 = 0;
  }
  if (v5)
    v11 = (void *)0xEA0000000000656CLL;
  else
    v11 = (void *)0xEC00000065726F4DLL;
  if (v5)
    v12 = 0x62617369445F5455;
  else
    v12 = 0x6E7261654C5F5455;
  v17 = v10;
  v18 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v19 = v13;
  v14._countAndFlagsBits = 95;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  v15._countAndFlagsBits = v12;
  v15._object = v11;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v11);
  return v18;
}

uint64_t sub_10014E874@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  NSString v12;
  NSString v13;
  id v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a1;
  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10014E710();
  v10 = v9;
  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  swift_bridgeObjectRetain(v10);
  v28 = v8;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v11, "URLForResource:withExtension:", v12, v13);

  if (v14)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v14);

    v15 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
    v15(v7, v4, v1);
    v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v16((uint64_t)v7, 0, 1, v1);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) != 1)
    {
      v17 = swift_bridgeObjectRelease(v10);
      v18 = v29;
      ((void (*)(uint64_t, char *, uint64_t, __n128))v15)(v29, v7, v1, v17);
      v19 = v18;
      v20 = 0;
      return v16(v19, v20, 1, v1);
    }
  }
  else
  {
    v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v16((uint64_t)v7, 1, 1, v1);
  }
  sub_1000051EC((uint64_t)v7, (uint64_t *)&unk_1005D3470);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v21 = type metadata accessor for Logger(0);
  sub_100056D88(v21, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(v10);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v31 = v26;
    *(_DWORD *)v25 = 136315138;
    swift_bridgeObjectRetain(v10);
    v30 = sub_100056DA0(v28, v10, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    swift_bridgeObjectRelease_n(v10, 3);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "FMUTAccessoryInformationViewController: Unable to find a video asset with name: %s", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v10, 2);
  }
  v19 = v29;
  v20 = 1;
  return v16(v19, v20, 1, v1);
}

id sub_10014EC08()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMUTAccessoryInformationViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10014EDE8()
{
  return type metadata accessor for FMUTAccessoryInformationViewController(0);
}

uint64_t type metadata accessor for FMUTAccessoryInformationViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D7E10;
  if (!qword_1005D7E10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMUTAccessoryInformationViewController);
  return result;
}

void sub_10014EE2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[25];

  v6[0] = &unk_100485118;
  v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[7] = &unk_100485130;
  v6[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[13] = &unk_100485130;
  v6[14] = &unk_100485130;
  v6[15] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[16] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[17] = &unk_100485148;
  v6[18] = &unk_100485148;
  v2 = type metadata accessor for FMIPUnknownItem(319);
  if (v3 <= 0x3F)
  {
    v6[19] = *(_QWORD *)(v2 - 8) + 64;
    sub_10014EF1C(319);
    if (v5 <= 0x3F)
    {
      v6[20] = *(_QWORD *)(v4 - 8) + 64;
      v6[21] = &unk_100485130;
      v6[22] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[23] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[24] = &unk_100485130;
      swift_updateClassMetadata2(a1, 256, 25, v6, a1 + 80);
    }
  }
}

void sub_10014EF1C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005D7E20)
  {
    v2 = type metadata accessor for URL(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005D7E20);
  }
}

uint64_t sub_10014EF70(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(*v2 + OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_scrollHandler);
  v4 = *v3;
  v5 = v3[1];
  *v3 = a1;
  v3[1] = a2;
  return sub_1000327F0(v4, v5);
}

id sub_10014EF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  objc_class *v44;
  id v45;
  uint64_t v46;
  NSString v47;
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  objc_super v58;
  _QWORD *v59;

  v7 = v6;
  v53 = a5;
  v54 = a6;
  v56 = a3;
  v57 = a4;
  v55 = a2;
  v52 = a1;
  v51 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v8 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v16 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = &v7[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_scrollHandler];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v50 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_updateQueue;
  v49[1] = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v18 = v7;
  static DispatchQoS.unspecified.getter(v18);
  v59 = _swiftEmptyArrayStorage;
  v19 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v20 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v21 = sub_10003F774((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v59, v20, v21, v11, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v51);
  v22 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000028, 0x80000001004AEEB0, v16, v13, v10, 0);
  *(_QWORD *)&v7[v50] = v22;
  v23 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_titleLabel;
  *(_QWORD *)&v18[v23] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v24 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_subtitleLabel;
  *(_QWORD *)&v18[v24] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v25 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_scrollView;
  *(_QWORD *)&v18[v25] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v26 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_scrollContentView;
  *(_QWORD *)&v18[v26] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_cancelButton] = 0;
  v27 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_footnoteLabel;
  *(_QWORD *)&v18[v27] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v28 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_playerView;
  *(_QWORD *)&v18[v28] = objc_msgSend(objc_allocWithZone((Class)SFMediaPlayerView), "init");
  v29 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_productImageView;
  *(_QWORD *)&v18[v29] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v30 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_backgroundView;
  *(_QWORD *)&v18[v30] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v31 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_heatZone;
  *(_QWORD *)&v18[v31] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_productImage] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_imageFetchCancellable] = 0;
  v32 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButton;
  v33 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v34 = objc_allocWithZone((Class)type metadata accessor for FMSingleLinePlatterButton());
  v35 = sub_1000472FC(v33, 1, 0, 1);

  *(_QWORD *)&v18[v32] = v35;
  v36 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_waitingView;
  *(_QWORD *)&v18[v36] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMWaitingView()), "init");
  v37 = &v18[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_nfcURL];
  v38 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 1, v38);
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownAccessoryDiscoveryController] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonShowingConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonHiddenConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_devicesSubscription] = 0;
  v39 = v52;
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_mediator] = v52;
  v18[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_showDisableInfo] = v53;
  v18[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_findUnknownItem] = v54;
  v40 = &v18[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownItem];
  v41 = type metadata accessor for FMIPUnknownItem(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v40, v55, v41);
  swift_retain(v39);

  v44 = (objc_class *)type metadata accessor for FMUTAccessoryInformationViewController(0);
  v58.receiver = v18;
  v58.super_class = v44;
  v45 = objc_msgSendSuper2(&v58, "initWithNibName:bundle:", 0, 0);
  v46 = v57;
  v47 = String._bridgeToObjectiveC()();
  objc_msgSend(v45, "setTitle:", v47, swift_bridgeObjectRelease(v46).n128_f64[0]);

  sub_100147D78();
  sub_1001497F0();
  sub_10014992C();

  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v41);
  return v45;
}

id sub_10014F4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7)
{
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  objc_class *v48;
  id v49;
  uint64_t v50;
  NSString v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  objc_super v63;
  _QWORD *v64;

  v8 = v7;
  v60 = a7;
  v61 = a3;
  v57 = a5;
  v58 = a6;
  v62 = a4;
  v59 = a2;
  v56 = a1;
  v55 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v9 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v8[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_scrollHandler];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v54 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_updateQueue;
  v53 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v19 = v8;
  static DispatchQoS.unspecified.getter(v19);
  v64 = _swiftEmptyArrayStorage;
  v20 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v21 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v22 = sub_10003F774((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v64, v21, v22, v12, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v55);
  v23 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000028, 0x80000001004AEEB0, v17, v14, v11, 0);
  *(_QWORD *)&v8[v54] = v23;
  v24 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_titleLabel;
  *(_QWORD *)&v19[v24] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v25 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_subtitleLabel;
  *(_QWORD *)&v19[v25] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v26 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_scrollView;
  *(_QWORD *)&v19[v26] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v27 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_scrollContentView;
  *(_QWORD *)&v19[v27] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_cancelButton] = 0;
  v28 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_footnoteLabel;
  *(_QWORD *)&v19[v28] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v29 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_playerView;
  *(_QWORD *)&v19[v29] = objc_msgSend(objc_allocWithZone((Class)SFMediaPlayerView), "init");
  v30 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_productImageView;
  *(_QWORD *)&v19[v30] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v31 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_backgroundView;
  *(_QWORD *)&v19[v31] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v32 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_heatZone;
  *(_QWORD *)&v19[v32] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_productImage] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_imageFetchCancellable] = 0;
  v33 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButton;
  v34 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v35 = objc_allocWithZone((Class)type metadata accessor for FMSingleLinePlatterButton());
  v36 = sub_1000472FC(v34, 1, 0, 1);

  *(_QWORD *)&v19[v33] = v36;
  v37 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_waitingView;
  *(_QWORD *)&v19[v37] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMWaitingView()), "init");
  v38 = &v19[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_nfcURL];
  v39 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 1, 1, v39);
  v40 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownAccessoryDiscoveryController;
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownAccessoryDiscoveryController] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonShowingConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonHiddenConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_devicesSubscription] = 0;
  v41 = v56;
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_mediator] = v56;
  v19[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_showDisableInfo] = v57;
  v19[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_findUnknownItem] = v58;
  v42 = &v19[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownItem];
  v43 = type metadata accessor for FMIPUnknownItem(0);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v42, v59, v43);
  v46 = *(_QWORD *)&v19[v40];
  v47 = v60;
  *(_QWORD *)&v19[v40] = v60;
  swift_retain(v41);
  swift_retain(v47);

  swift_release(v46);
  v48 = (objc_class *)type metadata accessor for FMUTAccessoryInformationViewController(0);
  v63.receiver = v19;
  v63.super_class = v48;
  v49 = objc_msgSendSuper2(&v63, "initWithNibName:bundle:", 0, 0);
  v50 = v62;
  v51 = String._bridgeToObjectiveC()();
  objc_msgSend(v49, "setTitle:", v51, swift_bridgeObjectRelease(v50).n128_f64[0]);

  sub_100147D78();
  sub_1001497F0();
  sub_10014992C();

  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v43);
  return v49;
}

uint64_t sub_10014FA00()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10014FA24()
{
  uint64_t v0;

  sub_10014E4C4(v0);
}

void sub_10014FA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10014D520(a1, a2, a3, v3);
}

void sub_10014FA44()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;

  v1 = v0;
  v35 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v2 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v1[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_scrollHandler];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v34 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_updateQueue;
  v12 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v12);
  v36 = _swiftEmptyArrayStorage;
  v13 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v14 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v15 = sub_10003F774((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v36, v14, v15, v5, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v35);
  v16 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000028, 0x80000001004AEEB0, v10, v7, v4, 0);
  *(_QWORD *)&v1[v34] = v16;
  v17 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_titleLabel;
  *(_QWORD *)&v1[v17] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v18 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_subtitleLabel;
  *(_QWORD *)&v1[v18] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v19 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_scrollView;
  *(_QWORD *)&v1[v19] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v20 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_scrollContentView;
  *(_QWORD *)&v1[v20] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_cancelButton] = 0;
  v21 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_footnoteLabel;
  *(_QWORD *)&v1[v21] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v22 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_playerView;
  *(_QWORD *)&v1[v22] = objc_msgSend(objc_allocWithZone((Class)SFMediaPlayerView), "init");
  v23 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_productImageView;
  *(_QWORD *)&v1[v23] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v24 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_backgroundView;
  *(_QWORD *)&v1[v24] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v25 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_heatZone;
  *(_QWORD *)&v1[v25] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_productImage] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_imageFetchCancellable] = 0;
  v26 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButton;
  v27 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v28 = objc_allocWithZone((Class)type metadata accessor for FMSingleLinePlatterButton());
  v29 = sub_1000472FC(v27, 1, 0, 1);

  *(_QWORD *)&v1[v26] = v29;
  v30 = OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_waitingView;
  *(_QWORD *)&v1[v30] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMWaitingView()), "init");
  v31 = &v1[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_nfcURL];
  v32 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_unknownAccessoryDiscoveryController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonShowingConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_actionButtonHiddenConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy38FMUTAccessoryInformationViewController_devicesSubscription] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMUTAccessoryInformationViewController.swift", 51, 2, 112, 0);
  __break(1u);
}

uint64_t sub_10014FE94()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSString v32;
  void *v33;
  id v34;
  const void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  NSString v51;
  void *v52;
  id v53;
  const void *v54;
  id v55;
  uint64_t v57;
  char *v58;
  char *v59;
  id v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE v65[24];
  void **aBlock;
  uint64_t v67;
  void (*v68)(uint64_t, void *);
  void *v69;
  uint64_t (*v70)();
  uint64_t v71;
  _BYTE v72[24];
  _BYTE v73[16];

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  v63 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v59 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v64 = (uint64_t)&v57 - v6;
  v61 = v7;
  __chkstk_darwin(v5);
  v9 = (char *)&v57 - v8;
  v10 = type metadata accessor for FMIPAlertType(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FMNetworkUtil(0);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for FMIPAlertType.networkIssue(_:), v10);
  v14 = static FMNetworkUtil.relevantNetworkAlert(alertType:)(v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v60 = v1;
  v15 = swift_unknownObjectWeakInit(v73);
  FMIPAlert.title.getter(v15);
  v17 = v16;
  FMIPAlert.message.getter();
  v19 = v18;
  if (v17)
  {
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    if (v19)
    {
LABEL_3:
      v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v19);
      goto LABEL_6;
    }
  }
  else
  {
    v20 = 0;
    if (v18)
      goto LABEL_3;
  }
  v21 = 0;
LABEL_6:
  v22 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v20, v21, 1);

  FMIPAlert.okButtonLabel.getter();
  v24 = v23;
  FMIPAlert.okButtonURL.getter();
  v62 = v22;
  if (v24)
  {
    v25 = swift_allocObject(&unk_100548B58, 24, 7);
    swift_beginAccess(v73, v65, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v73);
    swift_unknownObjectWeakInit(v25 + 16);
    swift_bridgeObjectRetain(v24);

    v27 = v64;
    sub_100007464((uint64_t)v9, v64, (uint64_t *)&unk_1005D3470);
    v28 = *(unsigned __int8 *)(v63 + 80);
    v58 = v9;
    v29 = (v28 + 16) & ~v28;
    v30 = (v61 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    v31 = swift_allocObject(&unk_100548C70, v30 + 8, v28 | 7);
    sub_10005DAA0(v27, v31 + v29, (uint64_t *)&unk_1005D3470);
    *(_QWORD *)(v31 + v30) = v25;
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v24);
    v70 = sub_10015058C;
    v71 = v31;
    aBlock = _NSConcreteStackBlock;
    v67 = 1107296256;
    v68 = sub_100008B40;
    v69 = &unk_100548C88;
    v33 = _Block_copy(&aBlock);
    swift_release(v71);
    v34 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v32, 0, v33);
    v35 = v33;
    v22 = v62;
    _Block_release(v35);
    swift_bridgeObjectRelease(v24);

    sub_1000051EC((uint64_t)v58, (uint64_t *)&unk_1005D3470);
    v36 = v22;
    objc_msgSend(v36, "addAction:", v34);

  }
  else
  {
    v37 = sub_1000051EC((uint64_t)v9, (uint64_t *)&unk_1005D3470);
  }
  v38 = FMIPAlert.cancelButtonLabel.getter(v37);
  v40 = v39;
  v41 = (uint64_t)v59;
  FMIPAlert.cancelButtonURL.getter();
  if (v40)
  {
    v42 = swift_allocObject(&unk_100548B58, 24, 7);
    v58 = (char *)v38;
    v43 = v42;
    v44 = v42 + 16;
    swift_beginAccess(v73, v72, 0, 0);
    v45 = (void *)swift_unknownObjectWeakLoadStrong(v73);
    swift_unknownObjectWeakInit(v44);
    swift_bridgeObjectRetain(v40);

    v46 = v64;
    sub_100007464(v41, v64, (uint64_t *)&unk_1005D3470);
    v47 = *(unsigned __int8 *)(v63 + 80);
    v48 = (v47 + 16) & ~v47;
    v49 = (v61 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    v50 = swift_allocObject(&unk_100548C20, v49 + 8, v47 | 7);
    sub_10005DAA0(v46, v50 + v48, (uint64_t *)&unk_1005D3470);
    *(_QWORD *)(v50 + v49) = v43;
    v51 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v40);
    v70 = sub_10015058C;
    v71 = v50;
    aBlock = _NSConcreteStackBlock;
    v67 = 1107296256;
    v68 = sub_100008B40;
    v69 = &unk_100548C38;
    v52 = _Block_copy(&aBlock);
    swift_release(v71);
    v53 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v51, 1, v52);
    v54 = v52;
    v22 = v62;
    _Block_release(v54);
    swift_bridgeObjectRelease(v40);

    sub_1000051EC(v41, (uint64_t *)&unk_1005D3470);
    v55 = v22;
    objc_msgSend(v55, "addAction:", v53);

  }
  else
  {
    sub_1000051EC(v41, (uint64_t *)&unk_1005D3470);
  }
  objc_msgSend(v60, "presentViewController:animated:completion:", v22, 1, 0);

  swift_release(v14);
  return swift_unknownObjectWeakDestroy(v73);
}

uint64_t sub_100150444(uint64_t a1)
{
  uint64_t v1;

  return sub_10014CBB8(a1, v1);
}

uint64_t sub_10015044C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = sub_100053F2C(&qword_1005D7E28);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
    v6 = type metadata accessor for FMIPAccessoryError(0);
  else
    v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);
  v7 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v8, v3 | 7);
}

uint64_t sub_1001504FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_100053F2C(&qword_1005D7E28) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_10014CFCC((void (*)(uint64_t, char *, uint64_t))(v0 + v2), *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100150540(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100150594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_100053F2C((uint64_t *)&unk_1005D3470) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v8, v2 | 7);
}

void sub_100150648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_100053F2C((uint64_t *)&unk_1005D3470) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_10014E514(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_10015069C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005E1990;
  if (!qword_1005E1990)
  {
    v1 = sub_100006C5C(255, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_1005E1990);
  }
  return result;
}

uint64_t sub_1001506F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_100053F2C(&qword_1005D7E48) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v5 = type metadata accessor for FMIPUnknownItemProductMetadata(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_100150794(void **a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_100053F2C(&qword_1005D7E48) - 8) + 80);
  sub_10014C188(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

id sub_1001507D8(double a1, double a2, double a3)
{
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v6 = (void *)objc_opt_self(UIBezierPath);
  v7 = objc_msgSend(v6, "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, a1, a2, a3, 0.0, 6.28318531);
  v8 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v9 = objc_msgSend(v7, "CGPath");
  objc_msgSend(v8, "setPath:", v9);

  v10 = (void *)objc_opt_self(UIColor);
  v11 = objc_msgSend(v10, "redColor");
  v12 = objc_msgSend(v11, "colorWithAlphaComponent:", 0.25);

  v13 = objc_msgSend(v12, "CGColor");
  objc_msgSend(v8, "setFillColor:", v13);

  v14 = objc_msgSend(v6, "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, a1, a2, a3 * 0.5, 0.0, 6.28318531);
  v15 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v16 = objc_msgSend(v14, "CGPath");
  objc_msgSend(v15, "setPath:", v16);

  v17 = objc_msgSend(v10, "systemDarkRedColor");
  v18 = objc_msgSend(v17, "colorWithAlphaComponent:", 0.25);

  v19 = objc_msgSend(v18, "CGColor");
  objc_msgSend(v15, "setFillColor:", v19);

  objc_msgSend(v8, "addSublayer:", v15);
  return v8;
}

uint64_t sub_100150A7C(_BYTE *a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, double a6, double a7, double a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  char *v24;
  BOOL v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  void *v29;
  void *v30;
  id v31;
  double *v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  _BYTE *v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD aBlock[5];
  uint64_t v63;
  uint64_t v64;

  v55 = a4;
  v56 = a5;
  v54 = a3;
  v57 = a2;
  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v61 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v59 = *(_QWORD *)(v15 - 8);
  v60 = v15;
  __chkstk_darwin(v15);
  v58 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FMIPItem(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = type metadata accessor for FMIPConfigValue(0);
  v21 = *(_QWORD *)(v20 - 8);
  result = __chkstk_darwin(v20);
  v24 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*(_QWORD *)&a6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a6 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a6 < 9.22337204e18)
  {
    v52 = v12;
    v53 = v13;
    (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v24, enum case for FMIPConfigValue.inaccuracyRadiusThreshold(_:), v20);
    v64 = 0x7FFFFFFFFFFFFFFFLL;
    FMIPGlobalConfig<A>(_:fallback:)(aBlock, v24, &v64, &type metadata for Int);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
    v25 = aBlock[0] < (uint64_t)a6;
    v26 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    v27 = v57;
    v26((char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v57, v17);
    v28 = &a1[OBJC_IVAR____TtC6FindMy16FMItemAnnotation_item];
    swift_beginAccess(&a1[OBJC_IVAR____TtC6FindMy16FMItemAnnotation_item], aBlock, 33, 0);
    (*(void (**)(char *, char *, uint64_t))(v18 + 40))(v28, (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
    swift_endAccess(aBlock);
    v29 = *(void **)&a1[OBJC_IVAR____TtC6FindMy16FMItemAnnotation_itemImage];
    v30 = v54;
    *(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy16FMItemAnnotation_itemImage] = v54;
    v31 = v30;

    v32 = (double *)&a1[OBJC_IVAR____TtC6FindMy16FMItemAnnotation_tempCoordinate];
    *v32 = a7;
    v32[1] = a8;
    *(double *)&a1[OBJC_IVAR____TtC6FindMy12FMAnnotation_horizontalAccuracy] = a6;
    v33 = (uint64_t *)&a1[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier];
    v34 = *(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier];
    v35 = *(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier + 8];
    v36 = v55;
    v37 = v56;
    *v33 = v55;
    v33[1] = v37;
    sub_1000758C4(v36, v37);
    sub_1000758D8(v34, v35);
    a1[OBJC_IVAR____TtC6FindMy12FMAnnotation_isInaccurate] = v25;
    sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v38 = (void *)static OS_dispatch_queue.main.getter();
    v26((char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v17);
    v39 = *(unsigned __int8 *)(v18 + 80);
    v40 = (v39 + 24) & ~v39;
    v41 = swift_allocObject(&unk_100548D78, v40 + v19, v39 | 7);
    *(_QWORD *)(v41 + 16) = a1;
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v41 + v40, (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
    aBlock[4] = sub_1001519D4;
    v63 = v41;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_100548D90;
    v42 = _Block_copy(aBlock);
    v43 = v63;
    v44 = a1;
    swift_release(v43);
    v45 = v58;
    static DispatchQoS.unspecified.getter(v46);
    aBlock[0] = _swiftEmptyArrayStorage;
    v47 = sub_100056580();
    v48 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v49 = sub_1000555E4();
    v50 = v61;
    v51 = v52;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v48, v49, v52, v47);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v45, v50, v42);
    _Block_release(v42);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v50, v51);
    return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v45, v60);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_100150EA4(char *a1)
{
  NSString v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "willChangeValueForKey:", v2);

  v3 = FMIPItem.name.getter();
  v4 = (uint64_t *)&a1[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
  v5 = *(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
  *v4 = v3;
  v4[1] = v6;
  swift_bridgeObjectRelease(v5);
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "didChangeValueForKey:", v7);

}

id sub_100150F58()
{
  char *v0;

  return objc_msgSend(v0, "setCoordinate:", *(double *)&v0[OBJC_IVAR____TtC6FindMy16FMItemAnnotation_tempCoordinate], *(double *)&v0[OBJC_IVAR____TtC6FindMy16FMItemAnnotation_tempCoordinate + 8]);
}

uint64_t sub_100150F78()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  OS_dispatch_queue.sync<A>(execute:)(&v3, sub_100151A1C, &v2, v0);
  return v3;
}

id sub_100150FEC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  id v4;

  v3 = *(void **)(a1 + OBJC_IVAR____TtC6FindMy16FMItemAnnotation_itemImage);
  if (v3)
  {
    v4 = *(id *)(a1 + OBJC_IVAR____TtC6FindMy16FMItemAnnotation_itemImage);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    v3 = 0;
  }
  *a2 = v4;
  return v3;
}

_QWORD *sub_10015104C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v2 = type metadata accessor for FMAnnotationIdentifier(0);
  return OS_dispatch_queue.sync<A>(execute:)(a1, sub_100151A04, &v4, v2);
}

uint64_t sub_1001510B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v17[24];

  v4 = type metadata accessor for FMIPItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = a1 + OBJC_IVAR____TtC6FindMy16FMItemAnnotation_item;
  v9 = swift_beginAccess(v8, v17, 0, 0);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v8, v4, v9);
  v11 = FMIPItem.identifier.getter(v10);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v11;
  a2[1] = v13;
  v14 = type metadata accessor for FMAnnotationIdentifier(0);
  return swift_storeEnumTagMultiPayload(a2, v14, 1);
}

void sub_1001511A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC6FindMy16FMItemAnnotation_item;
  v2 = type metadata accessor for FMIPItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

}

id sub_1001511FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMItemAnnotation(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100151290()
{
  return type metadata accessor for FMItemAnnotation(0);
}

void sub_100151298(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7)
{
  char *v7;
  char *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  double *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;

  v8 = v7;
  v50 = a3;
  v51 = a4;
  v52 = a1;
  v53 = a2;
  v12 = type metadata accessor for FMIPConfigValue(0);
  v48 = *(_QWORD *)(v12 - 8);
  v49 = v12;
  __chkstk_darwin(v12);
  v47 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = OBJC_IVAR____TtC6FindMy16FMItemAnnotation_itemImage;
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy16FMItemAnnotation_itemImage] = 0;
  v25 = OBJC_IVAR____TtC6FindMy16FMItemAnnotation_updateQueue;
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v26 = v8;
  v27 = static DispatchQoS.userInteractive.getter();
  static OS_dispatch_queue.Attributes.concurrent.getter(v27);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v14);
  v28 = v23;
  v29 = v52;
  *(_QWORD *)&v8[v25] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001FLL, 0x80000001004AF100, v28, v20, v17, 0);
  v30 = &v26[OBJC_IVAR____TtC6FindMy16FMItemAnnotation_item];
  v31 = type metadata accessor for FMIPItem(0);
  v32 = *(_QWORD *)(v31 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v30, v29, v31);
  v33 = *(void **)&v8[v24];
  v34 = v53;
  *(_QWORD *)&v8[v24] = v53;
  v35 = v34;

  v36 = (double *)&v26[OBJC_IVAR____TtC6FindMy16FMItemAnnotation_tempCoordinate];
  *v36 = a5;
  v36[1] = a6;

  if ((~*(_QWORD *)&a7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a7 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a7 < 9.22337204e18)
  {
    v38 = v47;
    v37 = v48;
    v39 = v49;
    (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v47, enum case for FMIPConfigValue.inaccuracyRadiusThreshold(_:), v49);
    v54 = 0x7FFFFFFFFFFFFFFFLL;
    FMIPGlobalConfig<A>(_:fallback:)(&v55, v38, &v54, &type metadata for Int);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
    v40 = (char *)sub_100143FEC(v50, v51, v55 < (uint64_t)a7, 0, a5, a6, a7);
    v41 = FMIPItem.name.getter(v40);
    v42 = (uint64_t *)&v40[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
    v43 = *(_QWORD *)&v40[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
    *v42 = v41;
    v42[1] = v44;

    v45 = swift_bridgeObjectRelease(v43);
    (*(void (**)(uint64_t, uint64_t, __n128))(v32 + 8))(v29, v31, v45);
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1001515E0(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, double a5, double a6, double a7)
{
  char *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  double *v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD aBlock[5];
  uint64_t v47;

  v39 = a3;
  v40 = a4;
  v38 = a2;
  v12 = type metadata accessor for DispatchQoS(0);
  v44 = *(_QWORD *)(v12 - 8);
  v45 = v12;
  __chkstk_darwin(v12);
  v42 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMIPItem(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for DispatchWorkItemFlags(0);
  v41 = *(_QWORD *)(v43 - 8);
  v18 = __chkstk_darwin(v43);
  v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy16FMItemAnnotation_updateQueue];
  static DispatchWorkItemFlags.barrier.getter(v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  v21 = *(unsigned __int8 *)(v15 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = (v16 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject(&unk_100548D28, v25 + 16, v21 | 7);
  *(double *)(v26 + 16) = a7;
  *(_QWORD *)(v26 + 24) = v7;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v26 + v22, v17, v14);
  v27 = v38;
  *(_QWORD *)(v26 + v23) = v38;
  v28 = (double *)(v26 + v24);
  *v28 = a5;
  v28[1] = a6;
  v29 = (uint64_t *)(v26 + v25);
  v31 = v39;
  v30 = v40;
  *v29 = v39;
  v29[1] = v30;
  aBlock[4] = sub_1001518F8;
  v47 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100548D40;
  v32 = _Block_copy(aBlock);
  v33 = v27;
  v34 = v7;
  v35 = sub_1000758C4(v31, v30);
  v36 = v42;
  static DispatchQoS.unspecified.getter(v35);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v36, v20, v32);
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v36, v45);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v20, v43);
  swift_release(v47);
}

uint64_t sub_10015184C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for FMIPItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v7 = *(_QWORD *)(v0 + v6 + 8);
  if (v7 >= 4)
    swift_bridgeObjectRelease(v7);
  return swift_deallocObject(v0, v6 + 16, v3 | 7);
}

uint64_t sub_1001518F8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for FMIPItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100150A7C(*(_BYTE **)(v0 + 24), v0 + v2, *(void **)(v0 + v3), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(double *)(v0 + 16), *(double *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(double *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_100151960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMIPItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001519D4()
{
  uint64_t v0;

  type metadata accessor for FMIPItem(0);
  sub_100150EA4(*(char **)(v0 + 16));
}

uint64_t sub_100151A04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1001510B0(*(_QWORD *)(v1 + 16), a1);
}

id sub_100151A1C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100150FEC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100151A3C()
{
  uint64_t v0;
  int v1;
  id v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  uint64_t countAndFlagsBits;
  Swift::String v17;
  Swift::String v18;

  v1 = *(unsigned __int8 *)(v0 + 24);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v1 == 1)
  {
    v3.value._countAndFlagsBits = 0xD000000000000013;
    v17._countAndFlagsBits = 0xD000000000000018;
    v4._countAndFlagsBits = 0xD000000000000021;
    v17._object = (void *)0x80000001004A5660;
    v4._object = (void *)0x80000001004AF3B0;
    v3.value._object = (void *)0x80000001004A5640;
    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v3, (NSBundle)v2, v5, v17);

    v7 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v8 = swift_allocObject(v7, 72, 7);
    *(_OWORD *)(v8 + 16) = xmmword_100481740;
    v10 = *(_QWORD *)(v0 + 32);
    v9 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v8 + 56) = &type metadata for String;
    *(_QWORD *)(v8 + 64) = sub_100071E88();
    *(_QWORD *)(v8 + 32) = v10;
    *(_QWORD *)(v8 + 40) = v9;
    swift_bridgeObjectRetain(v9);
    v11 = String.init(format:_:)(v6._countAndFlagsBits, v6._object, v8);
    swift_bridgeObjectRelease(v6._object);
    return v11;
  }
  else
  {
    v18._countAndFlagsBits = 0xD000000000000015;
    v13._countAndFlagsBits = 0xD00000000000001CLL;
    v18._object = (void *)0x80000001004ADC20;
    v13._object = (void *)0x80000001004AF390;
    v14.value._object = (void *)0x80000001004ADC00;
    v14.value._countAndFlagsBits = 0xD000000000000010;
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v2, v15, v18)._countAndFlagsBits;

    return countAndFlagsBits;
  }
}

uint64_t sub_100151BE0()
{
  uint64_t v0;
  int v1;
  id v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t countAndFlagsBits;
  unint64_t v11;

  v1 = *(unsigned __int8 *)(v0 + 24);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v1 == 1)
  {
    v3 = 0xD000000000000013;
    v4 = 0xD000000000000018;
    v5 = 0xD000000000000023;
    v11 = 0x80000001004A5660;
    v6 = 0x80000001004AF360;
    v7 = 0x80000001004A5640;
  }
  else
  {
    v4 = 0xD000000000000015;
    v5 = 0xD00000000000001ELL;
    v11 = 0x80000001004ADC20;
    v6 = 0x80000001004AF340;
    v7 = 0x80000001004ADC00;
    v3 = 0xD000000000000010;
  }
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, *(Swift::String_optional *)&v3, (NSBundle)v2, v8, *(Swift::String *)&v4)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100151CEC()
{
  uint64_t v0;
  int v1;
  id v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t countAndFlagsBits;
  uint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  const char *v14;
  unint64_t v15;
  Swift::String_optional v16;
  Swift::String v17;
  unint64_t v19;
  unint64_t v20;

  v1 = *(unsigned __int8 *)(v0 + 24);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v1 == 1)
  {
    v3 = 0xD000000000000018;
    v4 = 0xD00000000000002CLL;
    v19 = 0x80000001004A5660;
    v5 = 0x80000001004AF310;
    v6 = 0x80000001004A5640;
    v7 = 0xD000000000000013;
  }
  else
  {
    v7 = 0xD000000000000010;
    v3 = 0xD000000000000015;
    v4 = 0xD000000000000027;
    v19 = 0x80000001004ADC20;
    v5 = 0x80000001004AF260;
    v6 = 0x80000001004ADC00;
  }
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, *(Swift::String_optional *)&v7, (NSBundle)v2, v8, *(Swift::String *)&v3)._countAndFlagsBits;

  v10 = *(_QWORD *)(v0 + 48);
  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v12 = 0xD000000000000018;
  if ((v10 & 4) != 0)
  {
    v13 = 0xD00000000000003CLL;
    v20 = 0x80000001004A5660;
    v14 = "ACCESSORY_FOLLOWING_WELCOME_RECOGNIZED_MESSAGE_REQUEST_SHARE";
  }
  else
  {
    v13 = 0xD000000000000036;
    v20 = 0x80000001004A5660;
    v14 = "ACCESSORY_FOLLOWING_WELCOME_RECOGNIZED_MESSAGE_DEFAULT";
  }
  v15 = (unint64_t)(v14 - 32) | 0x8000000000000000;
  v16.value._object = (void *)0x80000001004A5640;
  v16.value._countAndFlagsBits = 0xD000000000000013;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v13, v16, (NSBundle)v11, v17, *(Swift::String *)&v12);

  return countAndFlagsBits;
}

uint64_t sub_100151EA8()
{
  uint64_t v0;
  int v1;
  id v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t countAndFlagsBits;
  uint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  Swift::String_optional v14;
  Swift::String v15;
  unint64_t v17;
  Swift::String v18;

  v1 = *(unsigned __int8 *)(v0 + 24);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v1 == 1)
  {
    v3 = 0xD000000000000018;
    v4 = 0xD000000000000030;
    v17 = 0x80000001004A5660;
    v5 = 0x80000001004AF220;
    v6 = 0x80000001004A5640;
    v7 = 0xD000000000000013;
  }
  else
  {
    v7 = 0xD000000000000010;
    v3 = 0xD000000000000015;
    v4 = 0xD00000000000002BLL;
    v17 = 0x80000001004ADC20;
    v5 = 0x80000001004AF170;
    v6 = 0x80000001004ADC00;
  }
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, *(Swift::String_optional *)&v7, (NSBundle)v2, v8, *(Swift::String *)&v3)._countAndFlagsBits;

  v10 = *(_QWORD *)(v0 + 48);
  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((v10 & 2) != 0)
    v12 = 0x80000001004AF1E0;
  else
    v12 = 0x80000001004AF1A0;
  v18._countAndFlagsBits = 0xD000000000000018;
  v13 = 0xD00000000000003ALL;
  v18._object = (void *)0x80000001004A5660;
  v14.value._object = (void *)0x80000001004A5640;
  v14.value._countAndFlagsBits = 0xD000000000000013;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)(&v12 - 1), v14, (NSBundle)v11, v15, v18);

  return countAndFlagsBits;
}

uint64_t sub_10015205C()
{
  _QWORD *v0;
  void *v1;
  char *v2;
  uint64_t v3;

  v1 = (void *)v0[2];
  swift_bridgeObjectRelease(v0[5]);

  v2 = (char *)v0 + OBJC_IVAR____TtC6FindMy20FMUTWelcomeViewModel___observationRegistrar;
  v3 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1001520BC()
{
  return type metadata accessor for FMUTWelcomeViewModel(0);
}

uint64_t type metadata accessor for FMUTWelcomeViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D7F40;
  if (!qword_1005D7F40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMUTWelcomeViewModel);
  return result;
}

uint64_t sub_100152100(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "(";
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t destroy for UnknownItem(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for UnknownItem(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = v3;
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for UnknownItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for UnknownItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for UnknownItem()
{
  return &type metadata for UnknownItem;
}

ValueMetadata *type metadata accessor for UnknownItemActionCapabilities()
{
  return &type metadata for UnknownItemActionCapabilities;
}

unint64_t sub_1001522E4()
{
  unint64_t result;

  result = qword_1005D7FD0;
  if (!qword_1005D7FD0)
  {
    result = swift_getWitnessTable(&unk_1004852B0, &type metadata for UnknownItemActionCapabilities);
    atomic_store(result, (unint64_t *)&qword_1005D7FD0);
  }
  return result;
}

unint64_t sub_10015232C()
{
  unint64_t result;

  result = qword_1005D7FD8;
  if (!qword_1005D7FD8)
  {
    result = swift_getWitnessTable(&unk_100485280, &type metadata for UnknownItemActionCapabilities);
    atomic_store(result, (unint64_t *)&qword_1005D7FD8);
  }
  return result;
}

unint64_t sub_100152374()
{
  unint64_t result;

  result = qword_1005D7FE0;
  if (!qword_1005D7FE0)
  {
    result = swift_getWitnessTable(&unk_1004852D8, &type metadata for UnknownItemActionCapabilities);
    atomic_store(result, (unint64_t *)&qword_1005D7FE0);
  }
  return result;
}

unint64_t sub_1001523BC()
{
  unint64_t result;

  result = qword_1005D7FE8;
  if (!qword_1005D7FE8)
  {
    result = swift_getWitnessTable(&unk_100485310, &type metadata for UnknownItemActionCapabilities);
    atomic_store(result, (unint64_t *)&qword_1005D7FE8);
  }
  return result;
}

char *sub_100152400(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;

  v59 = a1;
  v3 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v3);
  v58 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPDevice(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v57 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v8);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMIPFeatures(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v53 - v17;
  v19 = FMIPDevice.features.getter(v16);
  static FMIPFeatures.isEraseAfterLockSupported.getter(v19);
  v20 = sub_1001404F0();
  v21 = dispatch thunk of SetAlgebra.isSuperset(of:)(v15, v11, v20);
  v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v22(v15, v11);
  v22(v18, v11);
  v23 = 0xD00000000000001ALL;
  if ((v21 & 1) != 0)
    v23 = 0xD000000000000017;
  v54 = v23;
  if ((v21 & 1) != 0)
    v24 = 0x80000001004AF4A0;
  else
    v24 = 0x80000001004AF460;
  v56 = v6;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v26 = a2;
  v25(v10, a2, v5);
  v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56);
  v27(v10, 0, 1, v5);
  v28 = sub_1001DE71C(0xD000000000000014, 0x80000001004AF480, (uint64_t)v10);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  swift_bridgeObjectRetain(v33);
  v55 = sub_1001DDC8C(v28, v30, v32, v34, 0, 0);
  v36 = v35;
  swift_bridgeObjectRelease_n(v34, 2);
  swift_bridgeObjectRelease(v30);
  sub_100152D00((uint64_t)v10);
  v37 = v26;
  v25(v10, v26, v5);
  v27(v10, 0, 1, v5);
  v38 = sub_1001DE71C(v54, v24, (uint64_t)v10);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  swift_bridgeObjectRetain(v43);
  v45 = sub_1001DDC8C(v38, v40, v42, v44, 0, 0);
  v47 = v46;
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease_n(v44, 2);
  swift_bridgeObjectRelease(v40);
  sub_100152D00((uint64_t)v10);
  v48 = (uint64_t)v57;
  v25(v57, v37, v5);
  v49 = type metadata accessor for FMIPItem(0);
  v50 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v58, 1, 1, v49);
  v51 = sub_100326498(v55, v36, v45, v47, v59, v48, v50, 1);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v37, v5);
  return v51;
}

void sub_100152798()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  _BYTE v28[24];

  v1 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v1);
  v3 = &v28[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10032668C();
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMDeviceActionsViewController_performButton];
  v5 = (uint64_t)&v0[OBJC_IVAR____TtC6FindMy29FMDeviceActionsViewController_device];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6FindMy29FMDeviceActionsViewController_device], v28, 0, 0);
  sub_100115AB0(v5, (uint64_t)v3);
  v6 = sub_1001DE71C(0xD000000000000024, 0x80000001004AF410, (uint64_t)v3);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  swift_bridgeObjectRetain(v11);
  sub_1001DDC8C(v6, v8, v10, v12, 0, 0);
  v14 = v13;
  swift_bridgeObjectRelease_n(v12, 2);
  swift_bridgeObjectRelease(v8);
  sub_100152D00((uint64_t)v3);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setTitle:forState:", v15, 0, swift_bridgeObjectRelease(v14).n128_f64[0]);

  v16 = objc_msgSend(v0, "buttonTray");
  sub_100115AB0(v5, (uint64_t)v3);
  v17 = sub_1001DE71C(0xD000000000000012, 0x80000001004AF440, (uint64_t)v3);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_bridgeObjectRetain(v22);
  sub_1001DDC8C(v17, v19, v21, v23, 0, 0);
  v25 = v24;
  swift_bridgeObjectRelease_n(v23, 2);
  swift_bridgeObjectRelease(v19);
  sub_100152D00((uint64_t)v3);
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setCaptionText:", v26, swift_bridgeObjectRelease(v25).n128_f64[0]);

}

id sub_1001529D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  NSString v12;
  NSString v13;
  NSString v14;
  id v15;
  objc_super v17;

  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (!a4)
  {
    v13 = 0;
    if (a6)
      goto LABEL_3;
LABEL_5:
    v14 = 0;
    goto LABEL_6;
  }
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (!a6)
    goto LABEL_5;
LABEL_3:
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a6);
LABEL_6:
  v17.receiver = v7;
  v17.super_class = (Class)type metadata accessor for FMDeviceLockViewController(0);
  v15 = objc_msgSendSuper2(&v17, "initWithTitle:detailText:symbolName:contentLayout:", v12, v13, v14, a7);

  return v15;
}

id sub_100152C54()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMDeviceLockViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100152C88()
{
  return type metadata accessor for FMDeviceLockViewController(0);
}

uint64_t type metadata accessor for FMDeviceLockViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D8018;
  if (!qword_1005D8018)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMDeviceLockViewController);
  return result;
}

uint64_t sub_100152CCC(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 416);
}

uint64_t sub_100152D00(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100053F2C(&qword_1005D6710);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100152E2C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPersonAnnotationView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100153024()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t aBlock[5];
  uint64_t v39;
  objc_super v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int16 v44;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v36 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v35 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (objc_class *)type metadata accessor for FMItemImageCreationOperation();
  v40.receiver = v0;
  v40.super_class = v7;
  objc_msgSendSuper2(&v40, "start");
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  sub_100056D88(v8, (uint64_t)qword_1005F5748);
  v9 = v0;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v33 = v5;
    v14 = v13;
    aBlock[0] = v13;
    v34 = v4;
    *(_DWORD *)v12 = 136315138;
    v15 = *(_OWORD *)&v9[OBJC_IVAR____TtC6FindMy28FMItemImageCreationOperation_request + 16];
    v41 = *(_OWORD *)&v9[OBJC_IVAR____TtC6FindMy28FMItemImageCreationOperation_request];
    v42 = v15;
    v43 = *(_OWORD *)&v9[OBJC_IVAR____TtC6FindMy28FMItemImageCreationOperation_request + 32];
    v44 = *(_WORD *)&v9[OBJC_IVAR____TtC6FindMy28FMItemImageCreationOperation_request + 48];
    v16 = sub_100066CEC();
    v18 = v17;
    v37 = sub_100056DA0(v16, v17, aBlock);
    v4 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, aBlock);

    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMItemImageCreationOperation: started for filename: %s", v12, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    v19 = v14;
    v5 = v33;
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

  }
  v20 = sub_1000555A8();
  v21 = (void *)static OS_dispatch_queue.main.getter(v20);
  v22 = swift_allocObject(&unk_100548FE0, 24, 7);
  *(_QWORD *)(v22 + 16) = v9;
  aBlock[4] = (uint64_t)sub_10015384C;
  v39 = v22;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_100548FF8;
  v23 = _Block_copy(aBlock);
  v24 = v39;
  v25 = v9;
  swift_release(v24);
  v26 = v35;
  static DispatchQoS.unspecified.getter(v27);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v28 = sub_100056580();
  v29 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v30 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v1, v28);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v26, v4, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v26, v5);
}

id sub_1001533B0(char *a1)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  id v6;
  double v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  CGImageRef v12;
  double v13;
  id v14;
  void (*v15)(id, _QWORD);
  id v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void (*v30)(_QWORD, uint64_t);
  unint64_t v31;
  uint64_t v32;
  uint8_t *buf;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[7];
  char v38;
  char v39;

  v2 = &a1[OBJC_IVAR____TtC6FindMy28FMItemImageCreationOperation_request];
  v3 = *(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy28FMItemImageCreationOperation_request + 16];
  v4 = *(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy28FMItemImageCreationOperation_request + 24];
  v5 = a1[OBJC_IVAR____TtC6FindMy28FMItemImageCreationOperation_request + 48];
  v6 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v6, "scale");

  v7 = 66.0;
  if (!v5)
    v7 = 30.0;
  sub_1003564F4(v3, v4, v5, v7);
  if (!v8)
    goto LABEL_12;
  v9 = v8;
  v10 = objc_msgSend(v8, "CGImage");
  if (!v10 || (v11 = v10, v12 = sub_100355B1C(), v11, !v12))
  {

    goto LABEL_12;
  }
  objc_msgSend(v9, "scale");
  v14 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v12, objc_msgSend(v9, "imageOrientation"), v13);

  if (!v14)
  {
LABEL_12:
    v30 = *(void (**)(_QWORD, uint64_t))&a1[OBJC_IVAR____TtC6FindMy28FMItemImageCreationOperation_completion];
    v31 = sub_100153854();
    v32 = swift_allocError(&type metadata for FMItemImageCreationOperationError, v31, 0, 0);
    v30(0, v32);
    swift_errorRelease(v32);
    return objc_msgSend(a1, "setFinished:", 1);
  }
  v15 = *(void (**)(id, _QWORD))&a1[OBJC_IVAR____TtC6FindMy28FMItemImageCreationOperation_completion];
  v16 = v14;
  v15(v14, 0);

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v17 = type metadata accessor for Logger(0);
  sub_100056D88(v17, (uint64_t)qword_1005F5748);
  v18 = a1;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v35 = swift_slowAlloc(32, -1);
    *(_DWORD *)v21 = 136315138;
    buf = v21;
    v22 = *(_QWORD *)v2;
    v23 = *((_QWORD *)v2 + 1);
    v24 = *((_QWORD *)v2 + 4);
    v25 = *((_QWORD *)v2 + 5);
    v26 = v2[49];
    v37[0] = v35;
    v37[1] = v22;
    v37[2] = v23;
    v37[3] = v3;
    v37[4] = v4;
    v37[5] = v24;
    v37[6] = v25;
    v38 = v5;
    v39 = v26;
    v27 = sub_100066CEC();
    v29 = v28;
    v36 = sub_100056DA0(v27, v28, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37);

    swift_bridgeObjectRelease(v29);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMItemImageCreationOperation: image created for: %s", buf, 0xCu);
    swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(buf, -1, -1);

  }
  else
  {

  }
  return objc_msgSend(a1, "setFinished:", 1);
}

id sub_100153778()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMItemImageCreationOperation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMItemImageCreationOperation()
{
  return objc_opt_self(_TtC6FindMy28FMItemImageCreationOperation);
}

uint64_t sub_100153828()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10015384C()
{
  uint64_t v0;

  return sub_1001533B0(*(char **)(v0 + 16));
}

unint64_t sub_100153854()
{
  unint64_t result;

  result = qword_1005D8090;
  if (!qword_1005D8090)
  {
    result = swift_getWitnessTable(&unk_10048553C, &type metadata for FMItemImageCreationOperationError);
    atomic_store(result, (unint64_t *)&qword_1005D8090);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMItemImageCreationOperationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1001538D8 + 4 * asc_100485470[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1001538F8 + 4 * byte_100485475[v4]))();
}

_BYTE *sub_1001538D8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1001538F8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100153900(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100153908(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100153910(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100153918(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FMItemImageCreationOperationError()
{
  return &type metadata for FMItemImageCreationOperationError;
}

unint64_t sub_100153938()
{
  unint64_t result;

  result = qword_1005D8098;
  if (!qword_1005D8098)
  {
    result = swift_getWitnessTable(&unk_100485514, &type metadata for FMItemImageCreationOperationError);
    atomic_store(result, (unint64_t *)&qword_1005D8098);
  }
  return result;
}

uint64_t sub_10015397C(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD v20[2];

  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain(a3);
  v12 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * i);
    v19 = v18[1];
    v20[0] = *v18;
    v20[1] = v19;
    swift_bridgeObjectRetain(v19);
    a1(v20);
    if (v3)
    {
      swift_release(a3);
      return swift_bridgeObjectRelease(v19);
    }
    result = swift_bridgeObjectRelease(v19);
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10)
      return swift_release(a3);
    v16 = *(_QWORD *)(v6 + 8 * v12);
    if (!v16)
      break;
LABEL_17:
    v9 = (v16 - 1) & v16;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v10)
    return swift_release(a3);
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v10)
    return swift_release(a3);
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v10)
    return swift_release(a3);
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 4;
  if (v12 + 4 >= v10)
    return swift_release(a3);
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v10)
      return swift_release(a3);
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

_QWORD *sub_100153B28(void (*a1)(_QWORD *__return_ptr, _QWORD *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD *v20;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v20 = _swiftEmptyArrayStorage;
    sub_100111E28(0, v5, 0);
    v6 = _swiftEmptyArrayStorage;
    v8 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v9 = *v8;
      v18[0] = *(v8 - 1);
      v18[1] = v9;
      v10 = swift_bridgeObjectRetain(v9);
      a1(v19, v18, v10);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease(v9);
      v12 = v19[0];
      v11 = v19[1];
      v20 = v6;
      v14 = v6[2];
      v13 = v6[3];
      if (v14 >= v13 >> 1)
      {
        sub_100111E28(v13 > 1, v14 + 1, 1);
        v6 = v20;
      }
      v8 += 2;
      v6[2] = v14 + 1;
      v15 = &v6[2 * v14];
      v15[4] = v12;
      v15[5] = v11;
      if (!--v5)
        return v6;
    }
    swift_release(v6);
    swift_bridgeObjectRelease(v9);
  }
  return v6;
}

_QWORD *sub_100153C48(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v29 = _swiftEmptyArrayStorage;
    sub_100111FDC(0, v5, 0);
    v6 = _swiftEmptyArrayStorage;
    v8 = (char *)(a3 + 32);
    while (1)
    {
      v9 = *v8++;
      v23 = v9;
      a1(&v24, &v23);
      if (v4)
        break;
      v4 = 0;
      v11 = v24;
      v10 = v25;
      v13 = v26;
      v12 = v27;
      v14 = v28;
      v29 = v6;
      v16 = v6[2];
      v15 = v6[3];
      if (v16 >= v15 >> 1)
      {
        v18 = v25;
        v20 = v28;
        v21 = v27;
        sub_100111FDC(v15 > 1, v16 + 1, 1);
        v14 = v20;
        v12 = v21;
        v10 = v18;
        v6 = v29;
      }
      v6[2] = v16 + 1;
      v17 = &v6[5 * v16];
      v17[4] = v11;
      v17[5] = v10;
      v17[6] = v13;
      v17[7] = v12;
      v17[8] = v14;
      if (!--v5)
        return v6;
    }
    swift_release(v6);
  }
  return v6;
}

_QWORD *sub_100153D70(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  _QWORD *v21;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  v6 = type metadata accessor for FMItemCellViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    v21 = _swiftEmptyArrayStorage;
    sub_10011210C(0, v10, 0);
    v11 = v21;
    v12 = *(_QWORD *)(type metadata accessor for FMIPBeaconShare(0) - 8);
    v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = v11[2];
      v14 = v11[3];
      if (v15 >= v14 >> 1)
      {
        sub_10011210C(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      v11[2] = v15 + 1;
      sub_10015B2C8((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15);
      v13 += v18;
      if (!--v10)
        return v11;
    }
    swift_release(v11);
  }
  return v11;
}

char *sub_100153EDC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  char *v19;
  uint64_t v20;
  void **p_cache;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  objc_class *v37;
  char *v38;
  NSString v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, unint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void *v53;
  id v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void *v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  _QWORD *v74;
  objc_super v75;

  v64 = a4;
  v65 = a5;
  v66 = a2;
  v73 = a1;
  v7 = type metadata accessor for FMFFriend(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v70 = *(_QWORD *)(v11 - 8);
  v71 = v11;
  __chkstk_darwin(v11);
  v72 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v68);
  v69 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v67 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v5[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextViewHeightConstraint] = 0;
  v17 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContactsTableView;
  v18 = objc_allocWithZone((Class)UITableView);
  v19 = v5;
  *(_QWORD *)&v5[v17] = objc_msgSend(v18, "init");
  v20 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContactsTableView;
  *(_QWORD *)&v19[v20] = objc_msgSend(objc_allocWithZone((Class)UITableView), "init");
  v19[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_hideSuggestedContactsLabel] = 1;
  p_cache = &OBJC_METACLASS____TtC6FindMy26FMDeviceLockViewController.cache;
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_excludedSuggestedContactHandles] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_rightActionButtonItem] = 0;
  v22 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_horizontalRuleView;
  *(_QWORD *)&v19[v22] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v23 = &v19[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_style];
  if (qword_1005D1C40 != -1)
    swift_once(&qword_1005D1C40, sub_1001574A0);
  v24 = (void *)qword_1005F4FD0;
  v25 = qword_1005F4FF8;
  v26 = unk_1005F4FD8;
  v27 = unk_1005F4FE8;
  *(_OWORD *)v23 = xmmword_1005F4FC0;
  *((_QWORD *)v23 + 2) = v24;
  *(_OWORD *)(v23 + 24) = v26;
  *(_OWORD *)(v23 + 40) = v27;
  *((_QWORD *)v23 + 7) = v25;
  v28 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_contactStore;
  v29 = objc_allocWithZone((Class)CNContactStore);
  v30 = v24;
  *(_QWORD *)&v19[v28] = objc_msgSend(v29, "init");
  v31 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_operationQueue;
  *(_QWORD *)&v19[v31] = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_peopleSuggester] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_alertedOfferOutOfNetworkHandles] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_reachabilityOperation] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchOperation] = 0;
  v19[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiresReachability] = 0;
  v32 = &v19[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiredCapability];
  v33 = type metadata accessor for MessagingCapability(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 1, 1, v33);
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContacts] = 0;
  v34 = v73;
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_mediator] = v73;
  v35 = &v19[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_action];
  v36 = v65;
  *(_QWORD *)v35 = v64;
  *((_QWORD *)v35 + 1) = v36;
  swift_retain(v34);

  v37 = (objc_class *)type metadata accessor for FMRecipientsViewController(0);
  v75.receiver = v19;
  v75.super_class = v37;
  v38 = (char *)objc_msgSendSuper2(&v75, "initWithNibName:bundle:", 0, 0);
  v39 = String._bridgeToObjectiveC()();
  objc_msgSend(v38, "setTitle:", v39, swift_bridgeObjectRelease(a3).n128_f64[0]);
  v66 = v38;

  v41 = dispatch thunk of FMFManager.friends.getter(v40);
  v42 = v41;
  v74 = _swiftEmptyArrayStorage;
  v43 = *(_QWORD *)(v41 + 16);
  if (v43)
  {
    v44 = v41 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v45 = *(_QWORD *)(v8 + 72);
    v46 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v8 + 16);
    do
    {
      v47 = v46(v10, v44, v7);
      v48 = FMFFriend.contactHandles.getter(v47);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_1003E5214(v48);
      v44 += v45;
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease(v42);
    v34 = v73;
    v49 = v74;
    p_cache = (void **)(&OBJC_METACLASS____TtC6FindMy26FMDeviceLockViewController + 16);
  }
  else
  {
    swift_bridgeObjectRelease(v41);
    v49 = _swiftEmptyArrayStorage;
  }
  v50 = (char *)p_cache[28];
  v51 = v66;
  v52 = *(_QWORD *)&v50[(_QWORD)v66];
  *(_QWORD *)&v50[(_QWORD)v66] = v49;
  swift_bridgeObjectRelease(v52);
  v53 = *(void **)&v51[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_operationQueue];
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v54 = v53;
  v55 = v67;
  static DispatchQoS.userInteractive.getter();
  v74 = _swiftEmptyArrayStorage;
  v56 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v57 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v58 = sub_10003F774((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0, (uint64_t)&protocol conformance descriptor for [A]);
  v59 = v69;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v74, v57, v58, v68, v56);
  v60 = v72;
  (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v72, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v71);
  v61 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001BLL, 0x80000001004AF790, v55, v59, v60, 0);
  objc_msgSend(v54, "setUnderlyingQueue:", v61);

  swift_release(v34);
  return v51;
}

void sub_100154498()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSString v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double Width;
  double v44;
  id v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  Swift::String v51;
  Swift::String v52;
  void *object;
  NSString v54;
  void *v55;
  void *v56;
  id v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t ObjCClassFromMetadata;
  id v63;
  NSString v64;
  id v65;
  void *v66;
  uint64_t v67;
  id v68;
  NSString v69;
  id v70;
  void *v71;
  id v72;
  void *v73;
  uint64_t v74;
  id v75;
  id v76;
  id v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  Swift::String v81;
  CGRect v82;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v2 = v1;
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "systemBackgroundColor");
  objc_msgSend(v2, "setBackgroundColor:", v4);

  v5 = objc_msgSend(v0, "navigationController");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "navigationBar");

    objc_msgSend(v7, "setTranslucent:", 1);
  }
  v8 = objc_msgSend(v0, "navigationController");
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "navigationBar");

    v11 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    objc_msgSend(v10, "setBackgroundImage:forBarMetrics:", v11, 0);

  }
  v12 = objc_msgSend(v0, "navigationController");
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v12, "navigationBar");

    v15 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    objc_msgSend(v14, "setShadowImage:", v15);

  }
  v16 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v0, "cancelActionWithSender:");
  v17 = objc_msgSend(v0, "navigationItem");
  v77 = v16;
  objc_msgSend(v17, "setLeftBarButtonItem:", v16);

  v18 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithFrame:", 0.0, 0.0, 20.0, 20.0);
  v19 = objc_msgSend(v3, "grayColor");
  v76 = v18;
  objc_msgSend(v18, "setColor:", v19);

  v20 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_action + 8];
  v21 = type metadata accessor for FMRecipientsViewController(0);
  v80 = v21;
  v78 = v0;
  swift_bridgeObjectRetain(v20);
  v22 = v0;
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  if (v21)
  {
    v24 = sub_100029550(&v78, v21);
    v25 = *(_QWORD *)(v21 - 8);
    __chkstk_darwin(v24);
    v27 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v25 + 16))(v27);
    v28 = _bridgeAnythingToObjectiveC<A>(_:)(v27, v21);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v21);
    sub_100029574(&v78);
  }
  else
  {
    v28 = 0;
  }
  v29 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithTitle:style:target:action:", v23, 2, v28, "actionWithSender:");
  swift_unknownObjectRelease(v28);

  v30 = objc_msgSend(v22, "navigationItem");
  objc_msgSend(v30, "setRightBarButtonItem:", v29);

  v31 = *(void **)&v22[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_rightActionButtonItem];
  *(_QWORD *)&v22[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_rightActionButtonItem] = v29;
  v32 = v29;

  v33 = objc_msgSend(v22, "view");
  if (!v33)
    goto LABEL_22;
  v34 = v33;
  objc_msgSend(v33, "bounds");
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;

  v82.origin.x = v36;
  v82.origin.y = v38;
  v82.size.width = v40;
  v82.size.height = v42;
  Width = CGRectGetWidth(v82);
  objc_msgSend((id)objc_opt_self(MFComposeHeaderView), "preferredHeight");
  v45 = objc_msgSend(objc_allocWithZone((Class)MFComposeRecipientTextView), "initWithFrame:", 0.0, 0.0, Width, v44);
  v46 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView;
  v47 = *(void **)&v22[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  *(_QWORD *)&v22[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView] = v45;

  v48 = *(void **)&v22[v46];
  if (!v48)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v78 = 0;
  v79 = 0xE000000000000000;
  v49 = v48;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v79);
  v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v51._countAndFlagsBits = 0xD00000000000001ALL;
  v81._countAndFlagsBits = 0xD00000000000002CLL;
  v81._object = (void *)0x80000001004AF9C0;
  v51._object = (void *)0x80000001004AF9A0;
  v52._countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)v50, v52, v81)._object;

  v54 = String._bridgeToObjectiveC()();
  objc_msgSend(v49, "setLabel:", v54, swift_bridgeObjectRelease(object).n128_f64[0]);

  v55 = *(void **)&v22[v46];
  if (!v55)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  objc_msgSend(v55, "setSeparatorHidden:", 1);
  v56 = *(void **)&v22[v46];
  if (!v56)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  objc_msgSend(v56, "setDelegate:", v22);
  v57 = objc_msgSend(v22, "view");
  if (!v57)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v75 = v32;
  if (!*(_QWORD *)&v22[v46])
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v58 = v57;
  objc_msgSend(v57, "addSubview:");

  v59 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContactsTableView;
  objc_msgSend(*(id *)&v22[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContactsTableView], "setHidden:", 1);
  objc_msgSend(*(id *)&v22[v59], "setDelegate:", v22);
  objc_msgSend(*(id *)&v22[v59], "setDataSource:", v22);
  objc_msgSend(*(id *)&v22[v59], "setRowHeight:", UITableViewAutomaticDimension);
  objc_msgSend(*(id *)&v22[v59], "setKeyboardDismissMode:", 1);
  objc_msgSend(*(id *)&v22[v59], "setTag:", 1);
  v60 = *(void **)&v22[v59];
  v61 = type metadata accessor for FMRecipientTableViewCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v61);
  v63 = v60;
  v64 = String._bridgeToObjectiveC()();
  objc_msgSend(v63, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v64);

  objc_msgSend(*(id *)&v22[v59], "setSectionHeaderTopPadding:", 0.0);
  v65 = objc_msgSend(v22, "view");
  if (!v65)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v66 = v65;
  objc_msgSend(v65, "addSubview:", *(_QWORD *)&v22[v59]);

  v67 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContactsTableView;
  objc_msgSend(*(id *)&v22[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContactsTableView], "setHidden:", 0);
  objc_msgSend(*(id *)&v22[v67], "setDelegate:", v22);
  objc_msgSend(*(id *)&v22[v67], "setDataSource:", v22);
  objc_msgSend(*(id *)&v22[v67], "setRowHeight:", UITableViewAutomaticDimension);
  objc_msgSend(*(id *)&v22[v67], "setKeyboardDismissMode:", 1);
  objc_msgSend(*(id *)&v22[v67], "setTag:", 2);
  v68 = *(id *)&v22[v67];
  v69 = String._bridgeToObjectiveC()();
  objc_msgSend(v68, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v69);

  objc_msgSend(*(id *)&v22[v67], "setSectionHeaderTopPadding:", 0.0);
  v70 = objc_msgSend(v22, "view");
  if (!v70)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v71 = v70;
  objc_msgSend(v70, "addSubview:", *(_QWORD *)&v22[v67]);

  v72 = objc_msgSend(v22, "view");
  if (v72)
  {
    v73 = v72;
    objc_msgSend(v72, "addSubview:", *(_QWORD *)&v22[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_horizontalRuleView]);

    return;
  }
LABEL_30:
  __break(1u);
}

void sub_100154D20()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  double v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  Class isa;
  void *v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  double *v44;
  id v45;
  id v46;
  double v47;
  id v48;
  double v49;
  double v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  Class v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  void *v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  Class v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  void *v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  void *v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  void *v112;
  id v113;
  id v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  Class v119;
  _OWORD v120[2];
  _QWORD v121[4];

  v1 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_20;
  }
  v3 = v0;
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  v4 = *(void **)&v0[v1];
  v121[3] = sub_100053F2C((uint64_t *)&unk_1005D81E0);
  v121[0] = v4;
  memset(v120, 0, sizeof(v120));
  v5 = (void *)objc_opt_self(MFComposeHeaderView);
  v6 = v4;
  objc_msgSend(v5, "preferredHeight");
  v8 = sub_1003CEF24(v121, 8, 0, v120, 0, 1.0, v7);
  v9 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextViewHeightConstraint;
  v10 = *(void **)&v3[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextViewHeightConstraint];
  *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextViewHeightConstraint] = v8;

  v118 = sub_100053F2C(&qword_1005D2F10);
  v11 = swift_allocObject(v118, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100481720;
  v12 = *(void **)&v3[v1];
  if (!v12)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v13 = objc_msgSend(v12, "topAnchor");
  v14 = objc_msgSend(v3, "view");
  if (!v14)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "safeAreaLayoutGuide");

  v17 = objc_msgSend(v16, "topAnchor");
  v18 = objc_msgSend(v13, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v11 + 32) = v18;
  v19 = *(void **)&v3[v9];
  if (!v19)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  *(_QWORD *)(v11 + 40) = v19;
  v20 = *(void **)&v3[v1];
  if (!v20)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v21 = v19;
  v22 = objc_msgSend(v20, "leadingAnchor");
  v23 = objc_msgSend(v3, "view");
  if (!v23)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, "safeAreaLayoutGuide");

  v26 = objc_msgSend(v25, "leadingAnchor");
  v27 = objc_msgSend(v22, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v11 + 48) = v27;
  v28 = *(void **)&v3[v1];
  if (!v28)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v29 = objc_msgSend(v28, "trailingAnchor");
  v30 = objc_msgSend(v3, "view");
  if (!v30)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v31 = v30;
  v32 = (void *)objc_opt_self(NSLayoutConstraint);
  v33 = objc_msgSend(v31, "safeAreaLayoutGuide");

  v34 = objc_msgSend(v33, "trailingAnchor");
  v35 = objc_msgSend(v29, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v11 + 56) = v35;
  v121[0] = v11;
  specialized Array._endMutation()(v36);
  v37 = v121[0];
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v32, "activateConstraints:", isa, swift_bridgeObjectRelease(v37).n128_f64[0]);

  v39 = *(void **)&v3[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_horizontalRuleView];
  objc_msgSend(v39, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v40 = swift_allocObject(v118, 64, 7);
  *(_OWORD *)(v40 + 16) = xmmword_100481720;
  v41 = objc_msgSend(v39, "bottomAnchor");
  v42 = *(void **)&v3[v1];
  if (!v42)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v43 = objc_msgSend(v42, "bottomAnchor");
  v44 = (double *)&v3[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_style];
  v45 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v43, *(double *)&v3[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_style]);

  *(_QWORD *)(v40 + 32) = v45;
  v46 = objc_msgSend(v39, "heightAnchor");
  v47 = v44[1];
  v48 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v48, "scale");
  v50 = v49;

  v51 = objc_msgSend(v46, "constraintEqualToConstant:", v47 / v50);
  *(_QWORD *)(v40 + 40) = v51;
  v52 = objc_msgSend(v39, "leadingAnchor");
  v53 = objc_msgSend(v3, "view");
  if (!v53)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v54 = v53;
  v55 = objc_msgSend(v53, "safeAreaLayoutGuide");

  v56 = objc_msgSend(v55, "leadingAnchor");
  v57 = objc_msgSend(v52, "constraintEqualToAnchor:", v56);

  *(_QWORD *)(v40 + 48) = v57;
  v58 = objc_msgSend(v39, "trailingAnchor");
  v59 = objc_msgSend(v3, "view");
  if (!v59)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v60 = v59;
  v61 = objc_msgSend(v59, "safeAreaLayoutGuide");

  v62 = objc_msgSend(v61, "trailingAnchor");
  v63 = objc_msgSend(v58, "constraintEqualToAnchor:", v62);

  *(_QWORD *)(v40 + 56) = v63;
  v121[0] = v40;
  specialized Array._endMutation()(v64);
  v65 = v121[0];
  v66 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v32, "activateConstraints:", v66, swift_bridgeObjectRelease(v65).n128_f64[0]);

  v67 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContactsTableView;
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContactsTableView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v68 = swift_allocObject(v118, 64, 7);
  *(_OWORD *)(v68 + 16) = xmmword_100481720;
  v69 = objc_msgSend(*(id *)&v3[v67], "topAnchor");
  v70 = objc_msgSend(v39, "bottomAnchor");
  v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

  *(_QWORD *)(v68 + 32) = v71;
  v72 = objc_msgSend(*(id *)&v3[v67], "bottomAnchor");
  v73 = objc_msgSend(v3, "view");
  if (!v73)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v74 = v73;
  v75 = objc_msgSend(v73, "safeAreaLayoutGuide");

  v76 = objc_msgSend(v75, "bottomAnchor");
  v77 = objc_msgSend(v72, "constraintEqualToAnchor:", v76);

  *(_QWORD *)(v68 + 40) = v77;
  v78 = objc_msgSend(*(id *)&v3[v67], "leadingAnchor");
  v79 = objc_msgSend(v3, "view");
  if (!v79)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v80 = v79;
  v81 = objc_msgSend(v79, "safeAreaLayoutGuide");

  v82 = objc_msgSend(v81, "leadingAnchor");
  v83 = objc_msgSend(v78, "constraintEqualToAnchor:", v82);

  *(_QWORD *)(v68 + 48) = v83;
  v84 = objc_msgSend(*(id *)&v3[v67], "trailingAnchor");
  v85 = objc_msgSend(v3, "view");
  if (!v85)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v86 = v85;
  v87 = objc_msgSend(v85, "safeAreaLayoutGuide");

  v88 = objc_msgSend(v87, "trailingAnchor");
  v89 = objc_msgSend(v84, "constraintEqualToAnchor:", v88);

  *(_QWORD *)(v68 + 56) = v89;
  v121[0] = v68;
  specialized Array._endMutation()(v90);
  v91 = v121[0];
  v92 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v32, "activateConstraints:", v92, swift_bridgeObjectRelease(v91).n128_f64[0]);

  v93 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContactsTableView;
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContactsTableView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v94 = swift_allocObject(v118, 64, 7);
  *(_OWORD *)(v94 + 16) = xmmword_100481720;
  v95 = objc_msgSend(*(id *)&v3[v93], "topAnchor");
  v96 = objc_msgSend(v39, "bottomAnchor");
  v97 = objc_msgSend(v95, "constraintEqualToAnchor:", v96);

  *(_QWORD *)(v94 + 32) = v97;
  v98 = objc_msgSend(*(id *)&v3[v93], "bottomAnchor");
  v99 = objc_msgSend(v3, "view");
  if (!v99)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v100 = v99;
  v101 = objc_msgSend(v99, "safeAreaLayoutGuide");

  v102 = objc_msgSend(v101, "bottomAnchor");
  v103 = objc_msgSend(v98, "constraintEqualToAnchor:", v102);

  *(_QWORD *)(v94 + 40) = v103;
  v104 = objc_msgSend(*(id *)&v3[v93], "leadingAnchor");
  v105 = objc_msgSend(v3, "view");
  if (!v105)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v106 = v105;
  v107 = objc_msgSend(v105, "safeAreaLayoutGuide");

  v108 = objc_msgSend(v107, "leadingAnchor");
  v109 = objc_msgSend(v104, "constraintEqualToAnchor:", v108);

  *(_QWORD *)(v94 + 48) = v109;
  v110 = objc_msgSend(*(id *)&v3[v93], "trailingAnchor");
  v111 = objc_msgSend(v3, "view");
  if (v111)
  {
    v112 = v111;
    v113 = objc_msgSend(v111, "safeAreaLayoutGuide");

    v114 = objc_msgSend(v113, "trailingAnchor");
    v115 = objc_msgSend(v110, "constraintEqualToAnchor:", v114);

    *(_QWORD *)(v94 + 56) = v115;
    v121[0] = v94;
    specialized Array._endMutation()(v116);
    v117 = v121[0];
    v119 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v32, "activateConstraints:", v119, swift_bridgeObjectRelease(v117).n128_f64[0]);

    return;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_1001558C0(uint64_t a1, uint64_t a2)
{
  char *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  NSString v21;
  unsigned int v22;
  void *v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  void *object;
  id v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  NSString v37;
  NSString v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  void **aBlock;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  void *v46;
  void (*v47)();
  uint64_t v48;
  Swift::String v49;
  Swift::String v50;

  v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText + 8];
  if (v3)
  {
    v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText];
    v5 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v5 = v4 & 0xFFFFFFFFFFFFLL;
    if (v5)
    {
      v6 = v2;
      type metadata accessor for FMContactsUtilities();
      swift_bridgeObjectRetain(v3);
      if ((sub_1003BF070(v4, v3) & 1) != 0)
      {
        swift_bridgeObjectRelease(v3);
        v9 = (void *)objc_opt_self(FMAddFriendsUtilities);
        v10 = swift_allocObject(&unk_100549530, 24, 7);
        *(_QWORD *)(v10 + 16) = v6;
        v47 = sub_10015BE80;
        v48 = v10;
        aBlock = _NSConcreteStackBlock;
        v44 = 1107296256;
        v45 = sub_100037DF8;
        v46 = &unk_100549548;
        v11 = _Block_copy(&aBlock);
        v12 = v48;
        v13 = v6;
        objc_msgSend(v9, "showOfferToSelfErrorInViewController:completion:", 0, v11, swift_release(v12).n128_f64[0]);
        _Block_release(v11);
      }
      else
      {
        swift_bridgeObjectRetain(v3);
        v14 = sub_1003C06A0(v4, v3, 0);
        v16 = v15;
        swift_bridgeObjectRelease(v3);
        swift_bridgeObjectRelease(v16);
        if ((v14 & 1) != 0)
          goto LABEL_9;
        sub_100006C5C(0, (unint64_t *)&qword_1005D8190, NSPredicate_ptr);
        v17 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
        v18 = swift_allocObject(v17, 72, 7);
        *(_OWORD *)(v18 + 16) = xmmword_100481740;
        *(_QWORD *)(v18 + 56) = &type metadata for String;
        v19 = sub_100071E88();
        *(_QWORD *)(v18 + 64) = v19;
        *(_QWORD *)(v18 + 32) = 0xD000000000000029;
        *(_QWORD *)(v18 + 40) = 0x80000001004ACC10;
        swift_bridgeObjectRetain(v3);
        v20 = (void *)NSPredicate.init(format:_:)(0x54414D20464C4553, 0xEF40252053454843, v18);
        v21 = String._bridgeToObjectiveC()();
        v22 = objc_msgSend(v20, "evaluateWithObject:", v21);

        swift_bridgeObjectRelease(v3);
        if (v22)
        {
LABEL_9:
          sub_1001566B4(v4, v3, a1, a2);
          swift_bridgeObjectRelease(v3);
          return 1;
        }
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(0xE000000000000000);
        v24 = (void *)objc_opt_self(NSBundle);
        v25 = objc_msgSend(v24, "mainBundle");
        v49._countAndFlagsBits = 0xD000000000000030;
        v49._object = (void *)0x80000001004AF8F0;
        v26._object = (void *)0x80000001004AF8D0;
        v26._countAndFlagsBits = 0xD00000000000001ELL;
        v27._countAndFlagsBits = 0;
        v27._object = (void *)0xE000000000000000;
        object = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v49)._object;

        _StringGuts.grow(_:)(20);
        v29 = objc_msgSend(v24, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
        v30._countAndFlagsBits = 0xD000000000000020;
        v50._countAndFlagsBits = 0xD000000000000032;
        v50._object = (void *)0x80000001004AF960;
        v30._object = (void *)0x80000001004AF930;
        v31._countAndFlagsBits = 0;
        v31._object = (void *)0xE000000000000000;
        v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v50);

        v33 = swift_allocObject(v17, 72, 7);
        *(_OWORD *)(v33 + 16) = xmmword_100481740;
        *(_QWORD *)(v33 + 56) = &type metadata for String;
        *(_QWORD *)(v33 + 64) = v19;
        *(_QWORD *)(v33 + 32) = v4;
        *(_QWORD *)(v33 + 40) = v3;
        String.init(format:_:)(v32._countAndFlagsBits, v32._object, v33);
        v35 = v34;
        swift_bridgeObjectRelease(v32._object);
        v36 = (void *)objc_opt_self(FMAddFriendsUtilities);
        v37 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(object);
        v38 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v35);
        v39 = swift_allocObject(&unk_1005494E0, 24, 7);
        *(_QWORD *)(v39 + 16) = v6;
        v47 = sub_10015BE38;
        v48 = v39;
        aBlock = _NSConcreteStackBlock;
        v44 = 1107296256;
        v45 = sub_100037DF8;
        v46 = &unk_1005494F8;
        v40 = _Block_copy(&aBlock);
        v41 = v48;
        v42 = v6;
        objc_msgSend(v36, "showSimpleAlertWithTitle:message:handler:", v37, v38, v40, swift_release(v41).n128_f64[0]);
        _Block_release(v40);

      }
    }
  }
  return 0;
}

void sub_100155D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  _QWORD *v30;
  uint64_t v31[2];
  char v32[24];

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_alertedOfferOutOfNetworkHandles);
  swift_beginAccess(v12, v32, 0, 0);
  v13 = *v12;
  swift_bridgeObjectRetain(*v12);
  v14 = sub_10012A6FC(a1, a2, v13);
  swift_bridgeObjectRelease(v13);
  if ((v14 & 1) == 0 || *(_BYTE *)(v3 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiresReachability) == 1)
  {
    swift_beginAccess(v12, aBlock, 33, 0);
    swift_bridgeObjectRetain(a2);
    sub_100203C38(v31, a1, a2);
    v15 = v31[1];
    swift_endAccess(aBlock);
    swift_bridgeObjectRelease(v15);
    v16 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v17 = (void *)static OS_dispatch_queue.main.getter(v16);
    v18 = swift_allocObject(&unk_100549328, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16);
    v19 = (_QWORD *)swift_allocObject(&unk_100549490, 40, 7);
    v19[2] = v18;
    v19[3] = a1;
    v19[4] = a2;
    aBlock[4] = sub_10015BE08;
    v30 = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_1005494A8;
    v20 = _Block_copy(aBlock);
    v21 = v30;
    swift_bridgeObjectRetain(a2);
    swift_release(v21);
    static DispatchQoS.unspecified.getter(v22);
    aBlock[0] = _swiftEmptyArrayStorage;
    v23 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v24 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v25 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v6, v23);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v27);
  }
}

uint64_t sub_100156080(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  _QWORD *v31;
  char v32[24];

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C(&qword_1005D6938);
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v2 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiredCapability;
  swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiredCapability, v32, 0, 0);
  sub_10015BD2C(v14, (uint64_t)v13);
  v15 = type metadata accessor for MessagingCapability(0);
  LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v13, 1, v15);
  result = sub_1000051EC((uint64_t)v13, &qword_1005D6938);
  if ((_DWORD)v14 != 1)
  {
    v17 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v18 = (void *)static OS_dispatch_queue.main.getter(v17);
    v19 = swift_allocObject(&unk_100549328, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16);
    v20 = (_QWORD *)swift_allocObject(&unk_100549440, 40, 7);
    v20[2] = v19;
    v20[3] = a1;
    v20[4] = a2;
    aBlock[4] = sub_10015BDCC;
    v31 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_100549458;
    v21 = _Block_copy(aBlock);
    v22 = v31;
    swift_bridgeObjectRetain(a2);
    swift_release(v22);
    static DispatchQoS.unspecified.getter(v23);
    aBlock[0] = _swiftEmptyArrayStorage;
    v24 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v25 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v26 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v5, v24);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v28);
  }
  return result;
}

void sub_100156364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  id v33;
  double v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  _QWORD aBlock[5];
  _QWORD *v44;

  v9 = *(void **)(v4 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_operationQueue);
  objc_msgSend(v9, "cancelAllOperations");
  v10 = swift_allocObject(&unk_100549288, 24, 7);
  *(_QWORD *)(v10 + 16) = 0;
  v11 = *(void **)(v4 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView);
  if (v11)
  {
    v12 = objc_msgSend(v11, "recipients");
    if (v12)
    {
      v13 = v12;
      v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, (char *)&type metadata for Any + 8);

      v15 = sub_10046C214(v14);
      swift_bridgeObjectRelease(v14);
      if (v15)
      {
        v16 = sub_10015B30C((unint64_t)v15);
        swift_bridgeObjectRelease(v15);
        *(_QWORD *)(v10 + 16) = v16;
        swift_bridgeObjectRelease(0);
      }
    }
    v17 = *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_excludedSuggestedContactHandles);
    if (v17)
    {
      v18 = *(_QWORD *)(v17 + 16);
      if (v18)
      {
        v39 = a1;
        v40 = a2;
        v41 = a4;
        v38 = v4;
        v42 = v9;
        v19 = *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_excludedSuggestedContactHandles);
        swift_bridgeObjectRetain_n(v17, 2);
        v20 = v19;
        v21 = (_QWORD *)(v19 + 40);
        do
        {
          v22 = *(v21 - 1);
          v23 = *v21;
          if (*(_QWORD *)(v10 + 16))
            v24 = *(_QWORD **)(v10 + 16);
          else
            v24 = _swiftEmptyArrayStorage;
          swift_bridgeObjectRetain_n(*v21, 2);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v24);
          *(_QWORD *)(v10 + 16) = v24;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v24 = sub_100070178(0, v24[2] + 1, 1, v24);
            *(_QWORD *)(v10 + 16) = v24;
          }
          v27 = v24[2];
          v26 = v24[3];
          if (v27 >= v26 >> 1)
          {
            v24 = sub_100070178((_QWORD *)(v26 > 1), v27 + 1, 1, v24);
            *(_QWORD *)(v10 + 16) = v24;
          }
          v21 += 2;
          v24[2] = v27 + 1;
          v28 = &v24[2 * v27];
          v28[4] = v22;
          v28[5] = v23;
          swift_bridgeObjectRelease(v23);
          --v18;
        }
        while (v18);
        swift_bridgeObjectRelease_n(v20, 2);
        a4 = v41;
        v9 = v42;
        v4 = v38;
        a1 = v39;
        a2 = v40;
      }
    }
    v29 = swift_allocObject(&unk_100549328, 24, 7);
    swift_unknownObjectWeakInit(v29 + 16);
    v30 = (_QWORD *)swift_allocObject(&unk_1005493F0, 64, 7);
    v30[2] = a1;
    v30[3] = a2;
    v30[4] = v29;
    v30[5] = v10;
    v30[6] = a3;
    v30[7] = a4;
    aBlock[4] = sub_10015BDB8;
    v44 = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_100549408;
    v31 = _Block_copy(aBlock);
    v32 = (void *)objc_opt_self(NSBlockOperation);
    swift_bridgeObjectRetain(a2);
    swift_retain(v29);
    swift_retain(v10);
    sub_1000A190C(a3, a4);
    v33 = objc_msgSend(v32, "blockOperationWithBlock:", v31);
    _Block_release(v31);
    swift_release(v44);
    *(_QWORD *)&v34 = swift_release(v29).n128_u64[0];
    v35 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchOperation;
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchOperation), "cancel", v34);
    v36 = *(void **)(v4 + v35);
    *(_QWORD *)(v4 + v35) = v33;
    v37 = v33;

    objc_msgSend(v9, "addOperation:", v37);
    swift_release(v10);
  }
  else
  {
    __break(1u);
  }
}

void sub_1001566B4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (**v23)(uint64_t *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;

  v5 = v4;
  ObjectType = swift_getObjectType(v4);
  type metadata accessor for FMContactsUtilities();
  if ((sub_1003BF070(a1, a2) & 1) != 0)
  {
    v11 = *(void **)(v4 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView);
    if (v11)
    {
      objc_msgSend(v11, "clearText");
      v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts);
      *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts) = 0;
      swift_bridgeObjectRelease(v12);
      sub_100158340();
      objc_msgSend((id)objc_opt_self(FMAddFriendsUtilities), "showOfferToSelfError");
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v13 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0)
      v13 = a1 & 0xFFFFFFFFFFFFLL;
    if (v13)
    {
      v14 = sub_1003BF184(a1, a2, 0, 0, 0, 0, 0);
      if ((v16 & 1) == 0)
      {
        v17 = v15;
        v18 = v16;
        v27 = v14;
        v19 = objc_allocWithZone((Class)type metadata accessor for FMReachabilityOperation(0));
        swift_bridgeObjectRetain(a2);
        v20 = (char *)sub_1003D0FC0(a1, a2, 0, 1);
        v21 = swift_allocObject(&unk_100549328, 24, 7);
        swift_unknownObjectWeakInit(v21 + 16);
        v22 = swift_allocObject(&unk_100549350, 96, 7);
        *(_QWORD *)(v22 + 16) = a1;
        *(_QWORD *)(v22 + 24) = a2;
        *(_QWORD *)(v22 + 32) = v21;
        *(_QWORD *)(v22 + 40) = v27;
        *(_QWORD *)(v22 + 48) = v17;
        *(_BYTE *)(v22 + 56) = 0;
        *(_BYTE *)(v22 + 57) = BYTE1(v18) & 1;
        *(_BYTE *)(v22 + 58) = BYTE2(v18) & 1;
        *(_QWORD *)(v22 + 64) = v17;
        *(_QWORD *)(v22 + 72) = a3;
        *(_QWORD *)(v22 + 80) = a4;
        *(_QWORD *)(v22 + 88) = ObjectType;
        v23 = (uint64_t (**)(uint64_t *))&v20[qword_1005D5140];
        v24 = *(_QWORD *)&v20[qword_1005D5140];
        v25 = *(_QWORD *)&v20[qword_1005D5140 + 8];
        *v23 = sub_10015BAC0;
        v23[1] = (uint64_t (*)(uint64_t *))v22;
        swift_bridgeObjectRetain(a2);
        v28 = v27;
        sub_1000A190C(a3, a4);
        v26 = sub_1000327F0(v24, v25);
        sub_100389D70(v26);
        objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_operationQueue), "addOperation:", v20);

        v14 = v28;
      }

    }
  }
}

id sub_100156910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  unint64_t v7;
  _BOOL8 v9;
  id result;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMRecipientsViewController: updateSendButtonEnabled", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText + 8);
  if (v7)
  {
    if ((v7 & 0x2000000000000000) != 0
       ? HIBYTE(v7) & 0xF
       : *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText) & 0xFFFFFFFFFFFFLL)
    {
      v9 = 1;
      goto LABEL_14;
    }
  }
  result = *(id *)(v1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView);
  if (!result)
  {
    __break(1u);
    goto LABEL_18;
  }
  result = objc_msgSend(result, "recipients");
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = result;
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(result, (char *)&type metadata for Any + 8);

  v13 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRelease(v12);
  v9 = v13 != 0;
LABEL_14:
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_rightActionButtonItem), "setEnabled:", v9);
  result = objc_msgSend((id)objc_opt_self(CNContactStore), "authorizationStatusForEntityType:", 0);
  if (result == (id)3)
    return result;
  result = *(id *)(v1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView);
  if (result)
    return objc_msgSend(result, "setShowsAddButtonWhenExpanded:", 0);
LABEL_19:
  __break(1u);
  return result;
}

void sub_100156ADC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  char *v25;
  char *v26;

  v1 = swift_allocObject(&unk_100549288, 24, 7);
  *(_QWORD *)(v1 + 16) = 0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  if (v2)
  {
    v3 = objc_msgSend(v2, "recipients");
    if (v3)
    {
      v4 = v3;
      v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, (char *)&type metadata for Any + 8);

      v6 = sub_10046C214(v5);
      swift_bridgeObjectRelease(v5);
      if (v6)
      {
        v7 = sub_10015B30C((unint64_t)v6);
        swift_bridgeObjectRelease(v6);
        *(_QWORD *)(v1 + 16) = v7;
        swift_bridgeObjectRelease(0);
      }
    }
    v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_excludedSuggestedContactHandles];
    if (v8)
    {
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
      {
        v26 = v0;
        swift_bridgeObjectRetain_n(v8, 2);
        v10 = v8;
        v11 = (_QWORD *)(v8 + 40);
        do
        {
          v13 = *(v11 - 1);
          v12 = *v11;
          if (*(_QWORD *)(v1 + 16))
            v14 = *(_QWORD **)(v1 + 16);
          else
            v14 = _swiftEmptyArrayStorage;
          swift_bridgeObjectRetain_n(*v11, 2);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
          *(_QWORD *)(v1 + 16) = v14;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v14 = sub_100070178(0, v14[2] + 1, 1, v14);
            *(_QWORD *)(v1 + 16) = v14;
          }
          v17 = v14[2];
          v16 = v14[3];
          if (v17 >= v16 >> 1)
          {
            v14 = sub_100070178((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
            *(_QWORD *)(v1 + 16) = v14;
          }
          v11 += 2;
          v14[2] = v17 + 1;
          v18 = &v14[2 * v17];
          v18[4] = v13;
          v18[5] = v12;
          swift_bridgeObjectRelease(v12);
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease_n(v10, 2);
        v0 = v26;
      }
    }
    v19 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMPeopleSuggester()), "init");
    v20 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_peopleSuggester;
    v21 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_peopleSuggester];
    *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_peopleSuggester] = v19;

    v22 = *(void **)&v0[v20];
    if (v22)
    {
      v23 = swift_allocObject(&unk_1005492B0, 32, 7);
      *(_QWORD *)(v23 + 16) = v1;
      *(_QWORD *)(v23 + 24) = v0;
      v24 = v22;
      swift_retain(v1);
      v25 = v0;
      sub_100271210((uint64_t)sub_10015BA40, v23);
      swift_release(v23);

    }
    swift_release(v1);
  }
  else
  {
    __break(1u);
  }
}

void sub_100156D30()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  unsigned int v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString *const *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  NSString v38;
  unint64_t v39;
  NSString v40;
  id v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  id v55;
  id v56;
  id v57;

  v1 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView);
  if (!v2)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    return;
  }
  v3 = objc_msgSend(v2, "recipients");
  if (v3)
  {
    v4 = v3;
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, (char *)&type metadata for Any + 8);

    v6 = (uint64_t)sub_10046C214(v5);
    swift_bridgeObjectRelease(v5);
    if (v6)
    {
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
      if ((unint64_t)v6 >> 62)
      {
LABEL_34:
        if (v6 >= 0)
          v52 = v7;
        else
          v52 = v6;
        v53 = v54;
        swift_bridgeObjectRetain(v6);
        v8 = _CocoaArrayWrapper.endIndex.getter(v52);
        if (v8)
        {
LABEL_6:
          v10 = 0;
          v11 = 4;
          while (1)
          {
            if ((v6 & 0xC000000000000001) != 0)
              v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, v6);
            else
              v12 = *(id *)(v6 + 8 * v11);
            v13 = v12;
            v14 = v11 - 3;
            if (__OFADD__(v11 - 4, 1))
            {
              __break(1u);
              goto LABEL_34;
            }
            v15 = *(void **)&v54[v1];
            if (!v15)
            {
              __break(1u);
LABEL_42:
              __break(1u);
              goto LABEL_43;
            }
            v55 = v13;
            v16 = objc_msgSend(v15, "atomViewForRecipient:");
            if (!v16)
              goto LABEL_42;
            v56 = v16;

            v17 = objc_msgSend(v56, "isSelected");
            if (v17)
              break;

            ++v11;
            v18 = v56;
            v10 = v56;
            if (v14 == v8)
              goto LABEL_39;
          }

          swift_bridgeObjectRelease_n(v6, 2);
          v19 = objc_msgSend(v55, "contact");
          if (!v19)
          {
            v41 = objc_msgSend(v55, "address");
            if (v41)
            {
              v42 = v41;
              v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
              v45 = v44;

              type metadata accessor for FMContactsUtilities();
              v46 = sub_1003BF184(v43, v45, 0, 0, 0, 0, 0);
              swift_bridgeObjectRelease(v45);
              v37 = objc_msgSend((id)objc_opt_self(CNContactViewController), "viewControllerForContact:", v46);

              if (v37)
                goto LABEL_31;
            }

LABEL_32:
            v51 = v55;
            goto LABEL_40;
          }
          v20 = v19;
          v21 = objc_msgSend((id)objc_opt_self(CNContactViewController), "viewControllerForContact:", v19);
          v22 = objc_msgSend(v55, "address");
          if (!v22)
            goto LABEL_44;
          v23 = v22;
          v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
          v26 = v25;

          LOBYTE(v23) = String.isPhoneNumber.getter(v24, v26);
          swift_bridgeObjectRelease(v26);
          v27 = &CNContactPhoneNumbersKey;
          if ((v23 & 1) == 0)
            v27 = &CNContactEmailAddressesKey;
          static String._unconditionallyBridgeFromObjectiveC(_:)(*v27);
          v29 = v28;
          v30 = objc_msgSend(v55, "address");
          if (v30)
          {
            v31 = v30;
            v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
            v34 = v33;

            sub_1003C1304(v32, v34, v20);
            v36 = v35;
            swift_bridgeObjectRelease(v34);
            if (!v21)
            {

              swift_bridgeObjectRelease(v29);
              swift_bridgeObjectRelease(v36);
              return;
            }
            v37 = v21;
            v38 = String._bridgeToObjectiveC()();
            v39 = swift_bridgeObjectRelease(v29).n128_u64[0];
            if (v36)
            {
              v40 = String._bridgeToObjectiveC()();
              v39 = swift_bridgeObjectRelease(v36).n128_u64[0];
            }
            else
            {
              v40 = 0;
            }
            objc_msgSend(v37, "highlightPropertyWithKey:identifier:", v38, v40, *(double *)&v39);

LABEL_31:
            v47 = v37;
            objc_msgSend(v47, "setDisplayMode:", 1);
            objc_msgSend(v47, "setAllowsActions:", 1);
            v48 = objc_msgSend(v47, "navigationItem");
            v49 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v54, "cancelActionWithSender:");
            objc_msgSend(v48, "setLeftBarButtonItem:", v49);

            v50 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v47);
            objc_msgSend(v50, "setModalPresentationStyle:", 2);
            objc_msgSend(v54, "presentViewController:animated:completion:", v50, 1, 0);

            goto LABEL_32;
          }
          goto LABEL_45;
        }
      }
      else
      {
        v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v9 = v54;
        swift_bridgeObjectRetain(v6);
        if (v8)
          goto LABEL_6;
      }
      v18 = 0;
LABEL_39:
      v57 = v18;

      swift_bridgeObjectRelease_n(v6, 2);
      v51 = v57;
LABEL_40:

    }
  }
}

void sub_10015728C()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  id v10;

  v1 = v0;
  v10 = objc_msgSend(objc_allocWithZone((Class)CNContactPickerViewController), "init");
  objc_msgSend(v10, "setDelegate:", v0);
  objc_msgSend(v10, "setAllowsEditing:", 1);
  objc_msgSend(v10, "setAllowsCancel:", 1);
  objc_msgSend(v10, "setModalPresentationStyle:", 3);
  sub_100006C5C(0, (unint64_t *)&qword_1005D8190, NSPredicate_ptr);
  v2 = (void *)NSPredicate.init(format:_:)(0xD000000000000038, 0x80000001004AF810, _swiftEmptyArrayStorage);
  objc_msgSend(v10, "setPredicateForEnablingContact:", v2);

  v3 = (void *)NSPredicate.init(format:_:)(0xD000000000000038, 0x80000001004AF810, _swiftEmptyArrayStorage);
  objc_msgSend(v10, "setPredicateForSelectionOfContact:", v3);

  v4 = (void *)NSPredicate.init(format:_:)(0xD00000000000003ELL, 0x80000001004AF850, _swiftEmptyArrayStorage);
  objc_msgSend(v10, "setPredicateForSelectionOfProperty:", v4);

  v5 = sub_100053F2C((uint64_t *)&unk_1005D2A90);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100481730;
  *(_QWORD *)(v6 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactEmailAddressesKey);
  *(_QWORD *)(v6 + 40) = v7;
  *(_QWORD *)(v6 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactPhoneNumbersKey);
  *(_QWORD *)(v6 + 56) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v10, "setDisplayedPropertyKeys:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

  objc_msgSend(v1, "presentViewController:animated:completion:", v10, 1, 0);
}

UIFontTextStyle sub_1001574A0()
{
  xmmword_1005F4FC0 = xmmword_100485580;
  qword_1005F4FD0 = (uint64_t)UIFontTextStyleFootnote;
  unk_1005F4FD8 = xmmword_100485590;
  unk_1005F4FE8 = xmmword_1004855A0;
  qword_1005F4FF8 = 0x4079000000000000;
  return UIFontTextStyleFootnote;
}

void sub_100157628()
{
  char *v0;
  id v1;
  void *v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for FMRecipientsViewController(0);
  objc_msgSendSuper2(&v3, "viewDidLoad");
  sub_100154498();
  sub_100154D20();
  v1 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "showSelectedRecipientContactDetails");
  objc_msgSend(v1, "setNumberOfTapsRequired:", 2);
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  if (v2)
  {
    objc_msgSend(v2, "addGestureRecognizer:", v1);

  }
  else
  {
    __break(1u);
  }
}

void sub_10015780C(char a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for FMRecipientsViewController(0);
  objc_msgSendSuper2(&v9, "viewDidAppear:", a1 & 1);
  v3 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  objc_msgSend(v4, "reflow");
  v5 = *(void **)&v1[v3];
  if (!v5)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(v5, "setEditable:", 1);
  v6 = *(void **)&v1[v3];
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = objc_msgSend(v6, "textView");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "becomeFirstResponder");

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_10015797C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;

  v2 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView;
  v3 = *(void **)(a1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  objc_msgSend(v3, "setEditable:", 1);
  v4 = *(void **)(a1 + v2);
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v5 = objc_msgSend(v4, "textView");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "becomeFirstResponder");

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_100157A00(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_1000517B8();
  v10 = StringProtocol.components(separatedBy:)(a1, &type metadata for String, v4);
  v5 = sub_100053F2C(&qword_1005D39B0);
  v6 = sub_10003F774((unint64_t *)&qword_1005E2AD0, &qword_1005D39B0, (uint64_t)&protocol conformance descriptor for [A]);
  v7 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v5, v6);
  v9 = v8;
  swift_bridgeObjectRelease(v10);
  *a2 = v7;
  a2[1] = v9;
}

uint64_t sub_100157AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void *v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD aBlock[5];
  uint64_t v56;
  char v57[32];

  v50 = a5;
  v51 = a6;
  v49 = a4;
  v47 = a3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v53 = *(_QWORD *)(v12 - 8);
  v54 = v12;
  __chkstk_darwin(v12);
  v52 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CharacterSet(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = *(_QWORD *)a1;
  v18 = *(_BYTE *)(a1 + 8);
  a2 += 16;
  swift_beginAccess(a2, v57, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v43 = (void *)result;
    v20 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v46 = static OS_dispatch_queue.main.getter(v20);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v47, v14);
    v21 = *(unsigned __int8 *)(v15 + 80);
    v44 = v11;
    v45 = v8;
    v22 = (v21 + 25) & ~v21;
    v23 = (v16 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v47 = v9;
    v24 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
    v26 = swift_allocObject(&unk_100549210, v25 + 8, v21 | 7);
    v27 = v48;
    *(_QWORD *)(v26 + 16) = v48;
    *(_BYTE *)(v26 + 24) = v18;
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v26 + v22, v17, v14);
    v28 = (_QWORD *)(v26 + v23);
    v29 = v50;
    *v28 = v49;
    v28[1] = v29;
    v30 = v43;
    *(_QWORD *)(v26 + v24) = v43;
    v31 = v51;
    *(_QWORD *)(v26 + v25) = v51;
    aBlock[4] = sub_10015B240;
    v56 = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_100549228;
    v32 = _Block_copy(aBlock);
    v33 = v56;
    sub_10015B2A4(v27, v18);
    swift_retain(v29);
    v34 = v30;
    swift_bridgeObjectRetain(v31);
    swift_release(v33);
    v35 = v52;
    static DispatchQoS.unspecified.getter(v36);
    aBlock[0] = _swiftEmptyArrayStorage;
    v37 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v38 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v39 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    v41 = v44;
    v40 = v45;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v38, v39, v45, v37);
    v42 = (void *)v46;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v35, v41, v32);
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v41, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v35, v54);
  }
  return result;
}

uint64_t sub_100157DFC(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v10;
  __n128 v11;
  _QWORD v13[5];
  _QWORD *v14;

  if ((a2 & 1) != 0)
    return a4(a6, a7);
  v14 = _swiftEmptyArrayStorage;
  v13[2] = a3;
  v13[3] = &v14;
  swift_bridgeObjectRetain(a1);
  sub_10015397C((void (*)(_QWORD *))sub_10015B2B0, (uint64_t)v13, a1);
  sub_10015B234(a1, 0);
  v10 = v14;
  v11 = swift_bridgeObjectRetain(v14);
  ((void (*)(uint64_t, _QWORD *, __n128))a4)(a6, v10, v11);
  return swift_bridgeObjectRelease_n(v10, 2);
}

uint64_t sub_100157ED4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  Swift::String v5;
  void *object;
  Swift::String v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;

  v5._countAndFlagsBits = 980182388;
  v5._object = (void *)0xE400000000000000;
  object = String.deletingPrefix(_:)(v5)._object;
  v7._countAndFlagsBits = 0x3A6F746C69616DLL;
  v7._object = (void *)0xE700000000000000;
  v8 = String.deletingPrefix(_:)(v7)._object;
  swift_bridgeObjectRelease(object);
  v9 = sub_1000517B8();
  v10 = StringProtocol.components(separatedBy:)(a2, &type metadata for String, v9);
  swift_bridgeObjectRelease(v8);
  v11 = sub_100053F2C(&qword_1005D39B0);
  v12 = sub_10003F774((unint64_t *)&qword_1005E2AD0, &qword_1005D39B0, (uint64_t)&protocol conformance descriptor for [A]);
  v13 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v11, v12);
  v15 = v14;
  swift_bridgeObjectRelease(v10);
  v16 = (_QWORD *)*a3;
  result = swift_isUniquelyReferenced_nonNull_native(*a3);
  *a3 = (uint64_t)v16;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_100070178(0, v16[2] + 1, 1, v16);
    v16 = (_QWORD *)result;
    *a3 = result;
  }
  v19 = v16[2];
  v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    result = (uint64_t)sub_100070178((_QWORD *)(v18 > 1), v19 + 1, 1, v16);
    v16 = (_QWORD *)result;
    *a3 = result;
  }
  v16[2] = v19 + 1;
  v20 = &v16[2 * v19];
  v20[4] = v13;
  v20[5] = v15;
  return result;
}

void sub_100158060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *Strong;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _BYTE v16[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *Strong) + 0x338))(a2, a3);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v11 = objc_msgSend(v10, "keyWindow");

      if (v11)
      {
        v12 = objc_msgSend(v11, "rootViewController");

        if (v12)
        {
          while (1)
          {
            v13 = objc_msgSend(v12, "presentedViewController");

            if (!v13)
              break;
            v14 = objc_msgSend(v12, "presentedViewController");

            v12 = v14;
            if (!v14)
              goto LABEL_9;
          }
          v15 = v12;
          objc_msgSend(v15, "presentViewController:animated:completion:", v9, 1, 0);

        }
      }
LABEL_9:

    }
  }
}

void sub_1001581D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *Strong;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _BYTE v16[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *Strong) + 0x340))(a2, a3);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v11 = objc_msgSend(v10, "keyWindow");

      if (v11)
      {
        v12 = objc_msgSend(v11, "rootViewController");

        if (v12)
        {
          while (1)
          {
            v13 = objc_msgSend(v12, "presentedViewController");

            if (!v13)
              break;
            v14 = objc_msgSend(v12, "presentedViewController");

            v12 = v14;
            if (!v14)
              goto LABEL_9;
          }
          v15 = v12;
          objc_msgSend(v15, "presentViewController:animated:completion:", v9, 1, 0);

        }
      }
LABEL_9:

    }
  }
}

id sub_100158340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL8 v3;

  v1 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContactsTableView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContactsTableView), "reloadData");
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts);
  v3 = v2 != 0;
  objc_msgSend(*(id *)(v0 + v1), "setHidden:", v2 == 0);
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContactsTableView), "setHidden:", v3);
}

uint64_t sub_1001583B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unint64_t), uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  char *v27;
  char *v28;
  uint8_t *v29;
  uint8_t *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  void *v33;
  NSString v34;
  id v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  char *v40;
  double v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  char *v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t Strong;
  void *v51;
  void *v52;
  uint64_t v53;
  Class isa;
  double v55;
  id v56;
  double v57;
  uint64_t v58;
  unint64_t v59;
  id v60;
  char *v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  _BOOL4 v65;
  uint8_t *v66;
  char *v67;
  uint8_t *v68;
  char *v69;
  double v70;
  char *v71;
  void (*v72)(char *, uint64_t);
  char *v73;
  id v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  _BOOL4 v80;
  char *v81;
  uint8_t *v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  unint64_t v86;
  __n128 v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  char *v92;
  double v93;
  char *v94;
  void (*v95)(char *, uint64_t);
  void *v96;
  unint64_t v98;
  id v99;
  void (*v100)(char *, uint64_t);
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t (*v105)(char *, char *, uint64_t);
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  void (*v110)(unint64_t);
  uint64_t v111;
  double v112;
  uint64_t v113;
  double v114;
  uint64_t v115;
  double v116;
  uint64_t v117;

  v104 = a6;
  v110 = a5;
  v102 = a4;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v103 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v106 = (char *)&v98 - v12;
  v13 = __chkstk_darwin(v11);
  v101 = (char *)&v98 - v14;
  v15 = __chkstk_darwin(v13);
  v109 = (char *)&v98 - v16;
  v17 = __chkstk_darwin(v15);
  v108 = (char *)&v98 - v18;
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v98 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v98 - v22;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v24 = type metadata accessor for Logger(0);
  v111 = sub_100056D88(v24, (uint64_t)qword_1005F5748);
  v25 = Logger.logObject.getter(v111);
  v26 = static os_log_type_t.default.getter(v25);
  if (os_log_type_enabled(v25, v26))
  {
    v27 = v21;
    v28 = v23;
    v29 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "FMRecipientsViewController: Fetch all the predicates for contacts.", v29, 2u);
    v30 = v29;
    v23 = v28;
    v21 = v27;
    swift_slowDealloc(v30, -1, -1);
  }
  v31 = (void (*)(char *, uint64_t))(a3 + 16);

  Date.init()(v32);
  v33 = (void *)objc_opt_self(CNContact);
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v33, "predicateForContactsMatchingString:accountIdentifier:containerIdentifier:groupIdentifier:", v34, 0, 0, 0);

  v105 = *(uint64_t (**)(char *, char *, uint64_t))(v8 + 16);
  v36 = v105(v21, v23, v7);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.default.getter(v37);
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(12, -1);
    v107 = v23;
    *(_DWORD *)v39 = 134217984;
    v100 = v31;
    v40 = v108;
    Date.init()(v39);
    v41 = Date.timeIntervalSince(_:)(v21);
    v42 = *(void (**)(char *, uint64_t))(v8 + 8);
    v42(v40, v7);
    v116 = v41;
    v31 = v100;
    v23 = v107;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117);
    v42(v21, v7);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "FMRecipientsViewController: Fetch all the predicates completed. Took %f seconds.", v39, 0xCu);
    swift_slowDealloc(v39, -1, -1);
  }
  else
  {
    v42 = *(void (**)(char *, uint64_t))(v8 + 8);
    v42(v21, v7);
  }

  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.default.getter(v44);
  v46 = os_log_type_enabled(v44, v45);
  v47 = v109;
  if (v46)
  {
    v48 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "FMRecipientsViewController: Fetch all contacts.", v48, 2u);
    swift_slowDealloc(v48, -1, -1);
  }

  Date.init()(v49);
  swift_beginAccess(v31, &v116, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v31);
  if (Strong)
  {
    v51 = (void *)Strong;
    v52 = *(void **)(Strong + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_contactStore);
    if (qword_1005D2028 != -1)
      swift_once(&qword_1005D2028, sub_1003BFE68);
    v53 = qword_1005F5FB8;
    swift_bridgeObjectRetain(qword_1005F5FB8);
    sub_100053F2C(&qword_1005D2410);
    isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v55 = swift_bridgeObjectRelease(v53).n128_u64[0];
    v114 = 0.0;
    v56 = objc_msgSend(v52, "unifiedContactsMatchingPredicate:keysToFetch:error:", v35, isa, &v114, v55);

    v57 = v114;
    if (v56)
    {
      v100 = v42;
      v58 = sub_100006C5C(0, (unint64_t *)&qword_1005D81D0, CNContact_ptr);
      v59 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v56, v58);
      v60 = *(id *)&v57;

      v61 = v101;
      v62 = v105(v101, v47, v7);
      v63 = Logger.logObject.getter(v62);
      v64 = static os_log_type_t.default.getter(v63);
      v65 = os_log_type_enabled(v63, v64);
      v107 = v23;
      v99 = v35;
      if (v65)
      {
        v66 = (uint8_t *)swift_slowAlloc(12, -1);
        v98 = v59;
        v67 = v61;
        v68 = v66;
        *(_DWORD *)v66 = 134217984;
        v69 = v108;
        Date.init()(v66);
        v70 = Date.timeIntervalSince(_:)(v67);
        v71 = v69;
        v72 = v100;
        v100(v71, v7);
        v114 = v70;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
        v73 = v67;
        v59 = v98;
        v72(v73, v7);
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "FMRecipientsViewController: Fetch all contacts completed. Took %f seconds.", v68, 0xCu);
        swift_slowDealloc(v68, -1, -1);
      }
      else
      {
        v100(v61, v7);
      }
      v76 = (_QWORD *)(v102 + 16);

      v78 = Logger.logObject.getter(v77);
      v79 = static os_log_type_t.default.getter(v78);
      v80 = os_log_type_enabled(v78, v79);
      v81 = v103;
      if (v80)
      {
        v82 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v82 = 0;
        _os_log_impl((void *)&_mh_execute_header, v78, v79, "FMRecipientsViewController: Fetch all searchedContacts.", v82, 2u);
        swift_slowDealloc(v82, -1, -1);
      }

      v83 = v106;
      Date.init()(v84);
      swift_beginAccess(v76, &v114, 0, 0);
      v85 = (_QWORD *)*v76;
      swift_bridgeObjectRetain(*v76);
      v86 = sub_100186820(v59, 0, v85, 0);
      swift_bridgeObjectRelease(v85);
      v87 = swift_bridgeObjectRelease(v59);
      v88 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v105)(v81, v83, v7, v87);
      v89 = Logger.logObject.getter(v88);
      v90 = static os_log_type_t.default.getter(v89);
      if (os_log_type_enabled(v89, v90))
      {
        v91 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v91 = 134217984;
        v92 = v108;
        Date.init()(v91);
        v93 = Date.timeIntervalSince(_:)(v81);
        v94 = v92;
        v95 = v100;
        v100(v94, v7);
        v112 = v93;
        v42 = v95;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &v113);
        v95(v81, v7);
        _os_log_impl((void *)&_mh_execute_header, v89, v90, "FMRecipientsViewController: Fetch all searchedContacts completed. Took %f seconds.", v91, 0xCu);
        swift_slowDealloc(v91, -1, -1);
      }
      else
      {
        v42 = v100;
        v100(v81, v7);
      }
      v47 = v109;
      v23 = v107;
      v96 = v99;

      if (v110)
        v110(v86);
      swift_bridgeObjectRelease(v86);

      v42(v106, v7);
      goto LABEL_29;
    }
    v74 = *(id *)&v114;
    v75 = _convertNSErrorToError(_:)(*(_QWORD *)&v57);

    swift_willThrow();
    swift_errorRelease(v75);
  }
  if (v110)
    v110((unint64_t)_swiftEmptyArrayStorage);

LABEL_29:
  v42(v47, v7);
  return ((uint64_t (*)(char *, uint64_t))v42)(v23, v7);
}

uint64_t sub_100158C9C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *Strong;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD aBlock[5];
  uint64_t v56;
  char v57[32];

  v46 = a6;
  v47 = a11;
  v48 = a8;
  v50 = a10;
  v51 = a5;
  v49 = a9;
  v16 = type metadata accessor for DispatchWorkItemFlags(0);
  v54 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DispatchQoS(0);
  v52 = *(_QWORD *)(v19 - 8);
  v53 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a1;
  v23 = *((unsigned __int8 *)a1 + 8);
  v24 = swift_bridgeObjectRetain(a3);
  v25 = sub_100067AD8(v22, v23, a2, a3, v24);
  LOBYTE(v22) = v26;
  swift_bridgeObjectRelease(a3);
  if ((v22 & 1) != 0)
  {
    sub_10015BB28(v25, 1);
    v27 = 0;
  }
  else
  {
    v27 = v25 & 1;
  }
  v28 = a4 + 16;
  v29 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v45 = static OS_dispatch_queue.main.getter(v29);
  v30 = swift_allocObject(&unk_100549328, 24, 7);
  swift_beginAccess(v28, v57, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v28);
  swift_unknownObjectWeakInit(v30 + 16);

  v32 = swift_allocObject(&unk_100549378, 104, 7);
  *(_QWORD *)(v32 + 16) = v30;
  *(_QWORD *)(v32 + 24) = a2;
  v33 = v51;
  *(_QWORD *)(v32 + 32) = a3;
  *(_QWORD *)(v32 + 40) = v33;
  *(_QWORD *)(v32 + 48) = v46;
  *(_BYTE *)(v32 + 56) = a7 & 1;
  *(_BYTE *)(v32 + 57) = BYTE1(a7) & 1;
  *(_BYTE *)(v32 + 58) = BYTE2(a7) & 1;
  v34 = v49;
  *(_QWORD *)(v32 + 64) = v48;
  *(_BYTE *)(v32 + 72) = v27;
  v35 = v50;
  *(_QWORD *)(v32 + 80) = v34;
  *(_QWORD *)(v32 + 88) = v35;
  *(_QWORD *)(v32 + 96) = v47;
  aBlock[4] = sub_10015BB78;
  v56 = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100549390;
  v36 = _Block_copy(aBlock);
  v37 = v56;
  swift_bridgeObjectRetain(a3);
  v38 = v33;
  sub_1000A190C(v34, v35);
  swift_release(v37);
  static DispatchQoS.unspecified.getter(v39);
  aBlock[0] = _swiftEmptyArrayStorage;
  v40 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v41 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v42 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v41, v42, v16, v40);
  v43 = (void *)v45;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v21, v18, v36);
  _Block_release(v36);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v18, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v21, v53);
}

double sub_100158FD0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t Strong;
  void *v24;
  uint64_t v25;
  double result;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];
  _BYTE v42[24];

  v19 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v19);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1 + 16;
  swift_beginAccess(v22, v42, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v22);
  if (Strong)
  {
    v24 = (void *)Strong;
    sub_10034AB98(Strong);

  }
  swift_beginAccess(v22, v41, 0, 0);
  v25 = swift_unknownObjectWeakLoadStrong(v22);
  if (v25)
  {
    v27 = (void *)v25;
    v39 = a2;
    v40 = a11;
    v28 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v21, 1, 1, v28);
    type metadata accessor for MainActor(0);
    v38 = a7;
    v29 = v27;
    HIDWORD(v37) = a8;
    v30 = v29;
    swift_bridgeObjectRetain(a3);
    v31 = a4;
    v32 = sub_1000A190C(a9, a10);
    v33 = static MainActor.shared.getter(v32);
    v34 = swift_allocObject(&unk_1005493C8, 120, 7);
    *(_QWORD *)(v34 + 16) = v33;
    *(_QWORD *)(v34 + 24) = &protocol witness table for MainActor;
    v35 = v39;
    *(_QWORD *)(v34 + 32) = v30;
    *(_QWORD *)(v34 + 40) = v35;
    *(_QWORD *)(v34 + 48) = a3;
    *(_QWORD *)(v34 + 56) = v31;
    *(_QWORD *)(v34 + 64) = a5;
    *(_BYTE *)(v34 + 72) = a6 & 1;
    *(_BYTE *)(v34 + 73) = BYTE1(a6) & 1;
    *(_BYTE *)(v34 + 74) = BYTE2(a6) & 1;
    *(_QWORD *)(v34 + 80) = v38;
    *(_BYTE *)(v34 + 88) = BYTE4(v37) & 1;
    *(_QWORD *)(v34 + 96) = a9;
    *(_QWORD *)(v34 + 104) = a10;
    *(_QWORD *)(v34 + 112) = v40;
    v36 = sub_100138D6C((uint64_t)v21, (uint64_t)&unk_1005D81B0, v34);

    *(_QWORD *)&result = swift_release(v36).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001591BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)(v7 + 96) = v22;
  *(_QWORD *)(v7 + 104) = v23;
  *(_BYTE *)(v7 + 288) = v21;
  *(_QWORD *)(v7 + 80) = a7;
  *(_QWORD *)(v7 + 88) = v20;
  *(_QWORD *)(v7 + 64) = a5;
  *(_QWORD *)(v7 + 72) = a6;
  *(_QWORD *)(v7 + 56) = a4;
  v8 = sub_100053F2C(&qword_1005D81B8);
  *(_QWORD *)(v7 + 112) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = ((uint64_t (*)(_QWORD))type metadata accessor for Destination)(0);
  *(_QWORD *)(v7 + 120) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v7 + 128) = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 136) = swift_task_alloc(v11);
  *(_QWORD *)(v7 + 144) = swift_task_alloc(v11);
  v12 = (*(_QWORD *)(*(_QWORD *)(sub_100053F2C(&qword_1005D6938) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 152) = swift_task_alloc(v12);
  *(_QWORD *)(v7 + 160) = swift_task_alloc(v12);
  v13 = type metadata accessor for MessagingCapability(0);
  *(_QWORD *)(v7 + 168) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v7 + 176) = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 184) = swift_task_alloc(v15);
  *(_QWORD *)(v7 + 192) = swift_task_alloc(v15);
  *(_QWORD *)(v7 + 200) = swift_task_alloc(v15);
  v16 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 208) = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
  *(_QWORD *)(v7 + 216) = v17;
  *(_QWORD *)(v7 + 224) = v18;
  return swift_task_switch(sub_10015931C, v17, v18);
}

void *sub_10015931C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *result;
  _BYTE *v33;
  id v34;
  int v35;
  void *v36;
  char **v37;
  const char *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  _BOOL4 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  __n128 v72;
  void (*v73)(uint64_t, uint64_t, __n128);
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  __n128 v77;
  void (*v78)(uint64_t, uint64_t, __n128);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  os_log_type_t type[8];
  os_log_type_t typea;
  char *typeb;
  uint64_t v91;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiredCapability;
  *(_QWORD *)(v0 + 232) = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiredCapability;
  v6 = v1 + v5;
  swift_beginAccess(v1 + v5, v0 + 16, 0, 0);
  sub_10015BD2C(v6, v4);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(_QWORD *)(v0 + 240) = v7;
  if (v7(v4, 1, v2) == 1)
  {
    v8 = *(_QWORD *)(v0 + 160);
    swift_release(*(_QWORD *)(v0 + 208));
    sub_1000051EC(v8, &qword_1005D6938);
    v9 = *(_BYTE *)(v0 + 288);
    v11 = *(void **)(v0 + 80);
    v10 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 56);
    v14 = objc_allocWithZone((Class)MFComposeRecipient);
    swift_bridgeObjectRetain(v12);
    v15 = v11;
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v14, "initWithContact:address:kind:", v15, v16, v10, swift_bridgeObjectRelease(v12).n128_f64[0]);

    if (*(_BYTE *)(v13 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiresReachability) == 1
      && (v9 & 1) == 0)
    {
      sub_100155D9C(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
LABEL_18:

      goto LABEL_19;
    }
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 240);
    v28 = *(_QWORD *)(v0 + 168);
    v29 = *(_QWORD *)(v0 + 152);
    sub_10015BD2C(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 232), v29);
    v27(v29, 1, v28);
    sub_1000051EC(v29, &qword_1005D6938);
    v30 = *(_QWORD *)(v0 + 56);
    v31 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView;
    result = *(void **)(v30 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView);
    if (result)
    {
      objc_msgSend(result, "addRecipient:", v17);
      result = *(void **)(v30 + v31);
      if (result)
      {
        v33 = (_BYTE *)(v0 + 288);
        v34 = objc_msgSend(result, "atomViewForRecipient:", v17);
        if (v34)
        {
          v35 = *v33;
          v36 = (void *)objc_opt_self(UIColor);
          v37 = &selRef_systemBlueColor;
          if (!v35)
            v37 = &selRef_labelColor;
          v38 = *v37;
          v39 = v34;
          v40 = objc_msgSend(v36, v38);
          objc_msgSend(v39, "setTintColor:", v40);

        }
        if ((*v33 & 1) == 0)
          sub_100155D9C(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
        result = *(void **)(v30 + v31);
        if (result)
        {
          v41 = *(_QWORD *)(v0 + 96);
          v42 = *(_QWORD *)(v0 + 56);
          objc_msgSend(result, "clearText");
          v43 = *(_QWORD *)(v42 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts);
          *(_QWORD *)(v42 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts) = 0;
          swift_bridgeObjectRelease(v43);
          sub_100158340();
          sub_100156ADC();

          if (v41)
            (*(void (**)(_QWORD))(v0 + 96))(*v33);
          goto LABEL_18;
        }
        goto LABEL_28;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_28:
    __break(1u);
    return result;
  }
  v18 = *(_QWORD *)(v0 + 120);
  v19 = *(_QWORD *)(v0 + 128);
  v20 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 64);
  v21 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 32))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
  type metadata accessor for QueryController(0);
  v23 = QueryController.__allocating_init(serviceName:)(0xD000000000000037, 0x80000001004AF890);
  *(_QWORD *)(v0 + 248) = v23;
  v24 = swift_bridgeObjectRetain(v21);
  Destination.init(string:)(v22, v21, v24);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v20, 1, v18) == 1)
  {
    v25 = *(_QWORD *)(v0 + 208);
    v26 = *(_QWORD *)(v0 + 112);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 168));
    swift_release(v25);
    swift_release(v23);
    sub_1000051EC(v26, &qword_1005D81B8);
LABEL_19:
    v44 = *(_QWORD *)(v0 + 192);
    v45 = *(_QWORD *)(v0 + 184);
    v47 = *(_QWORD *)(v0 + 152);
    v46 = *(_QWORD *)(v0 + 160);
    v49 = *(_QWORD *)(v0 + 136);
    v48 = *(_QWORD *)(v0 + 144);
    v50 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 200));
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    return (void *)(*(uint64_t (**)(void))(v0 + 8))();
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v51 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)type = *(_QWORD *)(v0 + 200);
  v53 = *(_QWORD *)(v0 + 168);
  v52 = *(_QWORD *)(v0 + 176);
  v55 = *(_QWORD *)(v0 + 136);
  v54 = *(_QWORD *)(v0 + 144);
  v57 = *(_QWORD *)(v0 + 120);
  v56 = *(_QWORD *)(v0 + 128);
  v58 = type metadata accessor for Logger(0);
  sub_100056D88(v58, (uint64_t)qword_1005F5748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v54, v57);
  v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 16);
  v60 = v59(v51, *(_QWORD *)type, v53);
  v61 = Logger.logObject.getter(v60);
  v62 = static os_log_type_t.default.getter(v61);
  v63 = os_log_type_enabled(v61, v62);
  v64 = *(_QWORD *)(v0 + 192);
  if (v63)
  {
    v84 = *(_QWORD *)(v0 + 184);
    v87 = *(_QWORD *)(v0 + 176);
    v85 = *(_QWORD *)(v0 + 168);
    typea = v62;
    v65 = *(_QWORD *)(v0 + 136);
    v83 = *(_QWORD *)(v0 + 128);
    v66 = *(_QWORD *)(v0 + 120);
    v67 = swift_slowAlloc(22, -1);
    v86 = swift_slowAlloc(64, -1);
    v91 = v86;
    *(_DWORD *)v67 = 136315394;
    v68 = sub_100008000((unint64_t *)&unk_1005D81C0, (uint64_t (*)(uint64_t))&type metadata accessor for Destination, (uint64_t)&protocol conformance descriptor for Destination);
    v69 = dispatch thunk of CustomStringConvertible.description.getter(v66, v68);
    v71 = v70;
    *(_QWORD *)(v0 + 40) = sub_100056DA0(v69, v70, &v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
    v72 = swift_bridgeObjectRelease(v71);
    v73 = *(void (**)(uint64_t, uint64_t, __n128))(v83 + 8);
    v73(v65, v66, v72);
    *(_WORD *)(v67 + 12) = 2080;
    v59(v84, v64, v85);
    v74 = String.init<A>(describing:)(v84, v85);
    v76 = v75;
    *(_QWORD *)(v0 + 48) = sub_100056DA0(v74, v75, &v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
    v77 = swift_bridgeObjectRelease(v76);
    v78 = *(void (**)(uint64_t, uint64_t, __n128))(v87 + 8);
    v78(v64, v85, v77);
    _os_log_impl((void *)&_mh_execute_header, v61, typea, "Checking capability for destination: %s, capability: %s", (uint8_t *)v67, 0x16u);
    swift_arrayDestroy(v86, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v86, -1, -1);
    swift_slowDealloc(v67, -1, -1);

  }
  else
  {
    v79 = *(_QWORD *)(v0 + 192);
    v81 = *(_QWORD *)(v0 + 168);
    v80 = *(_QWORD *)(v0 + 176);
    v73 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 128) + 8);
    ((void (*)(_QWORD, _QWORD))v73)(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    v78 = *(void (**)(uint64_t, uint64_t, __n128))(v80 + 8);
    ((void (*)(uint64_t, uint64_t))v78)(v79, v81);

  }
  *(_QWORD *)(v0 + 256) = v78;
  *(_QWORD *)(v0 + 264) = v73;
  typeb = (char *)&async function pointer to dispatch thunk of QueryController.destinationHasCapabilityWithDataReloadIfRequired(destination:capability:)
        + async function pointer to dispatch thunk of QueryController.destinationHasCapabilityWithDataReloadIfRequired(destination:capability:);
  v82 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of QueryController.destinationHasCapabilityWithDataReloadIfRequired(destination:capability:)
                                   + 1));
  *(_QWORD *)(v0 + 272) = v82;
  *v82 = v0;
  v82[1] = sub_1001599E8;
  return (void *)((uint64_t (*)(_QWORD, _QWORD))typeb)(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 200));
}

uint64_t sub_1001599E8(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *(*v8)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 272);
  *(_QWORD *)(*v2 + 280) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 216);
    v7 = *(_QWORD *)(v4 + 224);
    v8 = sub_100159D58;
  }
  else
  {
    *(_BYTE *)(v4 + 289) = a1 & 1;
    v6 = *(_QWORD *)(v4 + 216);
    v7 = *(_QWORD *)(v4 + 224);
    v8 = sub_100159A60;
  }
  return swift_task_switch(v8, v6, v7);
}

void *sub_100159A60()
{
  uint64_t v0;
  _BYTE *v1;
  void (*v2)(uint64_t, uint64_t, __n128);
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  char v10;
  char v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  NSString v18;
  id v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void *result;
  id v27;
  int v28;
  void *v29;
  char **v30;
  const char *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = (_BYTE *)(v0 + 288);
  v3 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  v2 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 264);
  v4 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 248));
  v9 = swift_release(v5);
  v2(v7, v8, v9);
  v3(v4, v6);
  v10 = *(_BYTE *)(v0 + 289);
  v11 = *(_BYTE *)(v0 + 288);
  v13 = *(void **)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 56);
  v16 = objc_allocWithZone((Class)MFComposeRecipient);
  swift_bridgeObjectRetain(v14);
  v17 = v13;
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v16, "initWithContact:address:kind:", v17, v18, v12, swift_bridgeObjectRelease(v14).n128_f64[0]);

  if (*(_BYTE *)(v15 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiresReachability) == 1 && (v11 & 1) == 0)
  {
    sub_100155D9C(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
LABEL_20:

    v37 = *(_QWORD *)(v0 + 192);
    v38 = *(_QWORD *)(v0 + 184);
    v40 = *(_QWORD *)(v0 + 152);
    v39 = *(_QWORD *)(v0 + 160);
    v42 = *(_QWORD *)(v0 + 136);
    v41 = *(_QWORD *)(v0 + 144);
    v43 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 200));
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    return (void *)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 240);
  v21 = *(_QWORD *)(v0 + 168);
  v22 = *(_QWORD *)(v0 + 152);
  sub_10015BD2C(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 232), v22);
  LODWORD(v21) = v20(v22, 1, v21);
  sub_1000051EC(v22, &qword_1005D6938);
  if ((_DWORD)v21 == 1)
    v23 = 1;
  else
    v23 = v10;
  if ((v23 & 1) == 0)
  {
    sub_100156080(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
    goto LABEL_20;
  }
  v24 = *(_QWORD *)(v0 + 56);
  v25 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView;
  result = *(void **)(v24 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView);
  if (!result)
  {
    __break(1u);
    goto LABEL_22;
  }
  objc_msgSend(result, "addRecipient:", v19);
  result = *(void **)(v24 + v25);
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v27 = objc_msgSend(result, "atomViewForRecipient:", v19);
  if (v27)
  {
    v28 = *v1;
    v29 = (void *)objc_opt_self(UIColor);
    v30 = &selRef_systemBlueColor;
    if (!v28)
      v30 = &selRef_labelColor;
    v31 = *v30;
    v32 = v27;
    v33 = objc_msgSend(v29, v31);
    objc_msgSend(v32, "setTintColor:", v33);

  }
  if ((*v1 & 1) == 0)
    sub_100155D9C(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  result = *(void **)(v24 + v25);
  if (result)
  {
    v34 = *(_QWORD *)(v0 + 96);
    v35 = *(_QWORD *)(v0 + 56);
    objc_msgSend(result, "clearText");
    v36 = *(_QWORD *)(v35 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts);
    *(_QWORD *)(v35 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts) = 0;
    swift_bridgeObjectRelease(v36);
    sub_100158340();
    sub_100156ADC();

    if (v34)
      (*(void (**)(_QWORD))(v0 + 96))(*v1);
    goto LABEL_20;
  }
LABEL_23:
  __break(1u);
  return result;
}

void *sub_100159D58()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, __n128);
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  NSString v17;
  id v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *result;
  _BYTE *v25;
  id v26;
  int v27;
  void *v28;
  char **v29;
  const char *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 280);
  v3 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  v2 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 264);
  v5 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 248));
  v9 = swift_release(v4);
  v2(v7, v8, v9);
  v3(v5, v6);
  swift_errorRelease(v1);
  v10 = *(_BYTE *)(v0 + 288);
  v12 = *(void **)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 72);
  v14 = *(_QWORD *)(v0 + 56);
  v15 = objc_allocWithZone((Class)MFComposeRecipient);
  swift_bridgeObjectRetain(v13);
  v16 = v12;
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v15, "initWithContact:address:kind:", v16, v17, v11, swift_bridgeObjectRelease(v13).n128_f64[0]);

  if (*(_BYTE *)(v14 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiresReachability) == 1 && (v10 & 1) == 0)
  {
    sub_100155D9C(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
LABEL_17:

    v36 = *(_QWORD *)(v0 + 192);
    v37 = *(_QWORD *)(v0 + 184);
    v39 = *(_QWORD *)(v0 + 152);
    v38 = *(_QWORD *)(v0 + 160);
    v41 = *(_QWORD *)(v0 + 136);
    v40 = *(_QWORD *)(v0 + 144);
    v42 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 200));
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    return (void *)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 240);
  v20 = *(_QWORD *)(v0 + 168);
  v21 = *(_QWORD *)(v0 + 152);
  sub_10015BD2C(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 232), v21);
  LODWORD(v20) = v19(v21, 1, v20);
  sub_1000051EC(v21, &qword_1005D6938);
  if ((_DWORD)v20 != 1)
  {
    sub_100156080(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
    goto LABEL_17;
  }
  v22 = *(_QWORD *)(v0 + 56);
  v23 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView;
  result = *(void **)(v22 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView);
  if (!result)
  {
    __break(1u);
    goto LABEL_19;
  }
  objc_msgSend(result, "addRecipient:", v18);
  result = *(void **)(v22 + v23);
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v25 = (_BYTE *)(v0 + 288);
  v26 = objc_msgSend(result, "atomViewForRecipient:", v18);
  if (v26)
  {
    v27 = *v25;
    v28 = (void *)objc_opt_self(UIColor);
    v29 = &selRef_systemBlueColor;
    if (!v27)
      v29 = &selRef_labelColor;
    v30 = *v29;
    v31 = v26;
    v32 = objc_msgSend(v28, v30);
    objc_msgSend(v31, "setTintColor:", v32);

  }
  if ((*v25 & 1) == 0)
    sub_100155D9C(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  result = *(void **)(v22 + v23);
  if (result)
  {
    v33 = *(_QWORD *)(v0 + 96);
    v34 = *(_QWORD *)(v0 + 56);
    objc_msgSend(result, "clearText");
    v35 = *(_QWORD *)(v34 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts);
    *(_QWORD *)(v34 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts) = 0;
    swift_bridgeObjectRelease(v35);
    sub_100158340();
    sub_100156ADC();

    if (v33)
      (*(void (**)(_QWORD))(v0 + 96))(*v25);
    goto LABEL_17;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_10015A04C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  uint64_t v33;
  char v34[24];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(a1);
  v13 = sub_1000389AC(v12);
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRetain(a1);
  v15 = sub_1003EF864(v14);
  swift_bridgeObjectRelease(a1);
  swift_beginAccess(a2 + 16, v34, 0, 0);
  v16 = *(_QWORD **)(a2 + 16);
  swift_bridgeObjectRetain(v16);
  v17 = sub_100186820(v13, (uint64_t)v15, v16, 1);
  swift_release(v13);
  swift_bridgeObjectRelease(v16);
  swift_release(v15);
  v18 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v19 = (void *)static OS_dispatch_queue.main.getter(v18);
  v20 = swift_allocObject(&unk_1005492D8, 32, 7);
  *(_QWORD *)(v20 + 16) = a3;
  *(_QWORD *)(v20 + 24) = v17;
  aBlock[4] = sub_10015BA74;
  v33 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005492F0;
  v21 = _Block_copy(aBlock);
  v22 = v33;
  v23 = a3;
  swift_release(v22);
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v25 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v26 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v27 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v6, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v30);
}

id sub_10015A2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id result;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContacts);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContacts) = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v4);
  result = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContactsTableView), "reloadData");
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v7 = a2;
    else
      v7 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v6 = _CocoaArrayWrapper.endIndex.getter(v7);
    result = (id)swift_bridgeObjectRelease(a2);
  }
  else
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_BYTE *)(a1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_hideSuggestedContactsLabel) = v6 == 0;
  return result;
}

void sub_10015A508(uint64_t a1)
{
  char *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  objc_super v19;

  v19.receiver = v1;
  v19.super_class = (Class)type metadata accessor for FMRecipientsViewController(0);
  objc_msgSendSuper2(&v19, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "userInterfaceStyle");

  v5 = (void *)objc_opt_self(UIColor);
  if (v4 == (id)2)
  {
    v6 = objc_msgSend(v5, "systemGray5Color");
  }
  else
  {
    v7 = objc_msgSend(v5, "systemLightGrayColor");
    v6 = objc_msgSend(v7, "colorWithAlphaComponent:", 0.25);

  }
  v8 = objc_msgSend(v1, "navigationController");
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "navigationBar");

    objc_msgSend(v10, "setBackgroundColor:", v6);
  }
  v11 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView;
  v12 = *(void **)&v1[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  if (v12)
  {
    objc_msgSend(v12, "setBackgroundColor:", v6);
    v13 = *(void **)&v1[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_horizontalRuleView];
    v14 = (void *)objc_opt_self(UIColor);
    v15 = objc_msgSend(v14, "separatorColor");
    objc_msgSend(v13, "setBackgroundColor:", v15);

    v16 = *(void **)&v1[v11];
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v14, "labelColor");
      objc_msgSend(v17, "setTypingTextColor:", v18);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10015A77C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMRecipientsViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10015A91C()
{
  return type metadata accessor for FMRecipientsViewController(0);
}

uint64_t type metadata accessor for FMRecipientsViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D8160;
  if (!qword_1005D8160)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMRecipientsViewController);
  return result;
}

void sub_10015A960(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[22];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_1004855E0;
  v4[2] = &unk_1004855F8;
  v4[3] = &unk_100485610;
  v4[4] = &unk_100485610;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = &unk_100485628;
  v4[8] = &unk_100485610;
  v4[9] = &unk_100485610;
  v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[11] = &unk_100485640;
  v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[14] = &unk_100485610;
  v4[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[16] = &unk_100485610;
  v4[17] = &unk_100485610;
  v4[18] = &unk_100485628;
  sub_10015AA40(319);
  if (v3 <= 0x3F)
  {
    v4[19] = *(_QWORD *)(v2 - 8) + 64;
    v4[20] = &unk_100485610;
    v4[21] = &unk_100485610;
    swift_updateClassMetadata2(a1, 256, 22, v4, a1 + 80);
  }
}

void sub_10015AA40(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005D8170)
  {
    v2 = type metadata accessor for MessagingCapability(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005D8170);
  }
}

void destroy for FMRecipientsViewControllerViewStyle(uint64_t a1)
{

}

uint64_t initializeWithCopy for FMRecipientsViewControllerViewStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v4 = v3;
  return a1;
}

_QWORD *assignWithCopy for FMRecipientsViewControllerViewStyle(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

__n128 initializeWithTake for FMRecipientsViewControllerViewStyle(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FMRecipientsViewControllerViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMRecipientsViewControllerViewStyle(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMRecipientsViewControllerViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMRecipientsViewControllerViewStyle()
{
  return &type metadata for FMRecipientsViewControllerViewStyle;
}

void sub_10015AC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t (**v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;

  v6 = type metadata accessor for CharacterSet(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v6);
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - v10;
  CharacterSet.init(charactersIn:)(0x80E2AD80E28E80E2, 0xAC000000202928ACLL);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v45 = a1;
    else
      v45 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v45);
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
  }
  v52 = v6;
  v53 = v11;
  v50 = a3;
  v51 = v7;
  v48 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a2;
  v47 = v8;
  if (v12)
  {
    if (v12 < 1)
    {
      __break(1u);
      return;
    }
    v13 = 0;
    v14 = _swiftEmptyArrayStorage;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
      else
        v15 = *(id *)(a1 + 8 * v13 + 32);
      v16 = v15;
      v17 = objc_msgSend(v15, "normalizedAddress");
      if (v17)
      {
        v18 = v17;
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v21 = v20;

        if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
          v14 = sub_100070178(0, v14[2] + 1, 1, v14);
        v23 = v14[2];
        v22 = v14[3];
        if (v23 >= v22 >> 1)
          v14 = sub_100070178((_QWORD *)(v22 > 1), v23 + 1, 1, v14);
        v14[2] = v23 + 1;
        v24 = &v14[2 * v23];
        v24[4] = v19;
        v24[5] = v21;
      }
      else
      {

      }
      ++v13;
    }
    while (v12 != v13);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(a1);
  __chkstk_darwin(v25);
  v26 = v53;
  *(&v46 - 2) = (uint64_t)v53;
  v27 = sub_100153B28((void (*)(_QWORD *__return_ptr, _QWORD *, __n128))sub_10015B02C, (uint64_t)(&v46 - 4), (uint64_t)v14);
  swift_bridgeObjectRelease(v14);
  v28 = objc_allocWithZone((Class)type metadata accessor for FMReachabilityOperation(0));
  swift_bridgeObjectRetain(v27);
  v30 = (char *)sub_1003D12D4(v29, 0, 1);
  v31 = swift_allocObject(&unk_1005491C0, 24, 7);
  swift_unknownObjectWeakInit(v31 + 16);
  v33 = v51;
  v32 = v52;
  v34 = v48;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v26, v52);
  v35 = *(unsigned __int8 *)(v33 + 80);
  v36 = (v35 + 24) & ~v35;
  v37 = (v47 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 23) & 0xFFFFFFFFFFFFFFF8;
  v39 = swift_allocObject(&unk_1005491E8, v38 + 8, v35 | 7);
  *(_QWORD *)(v39 + 16) = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v39 + v36, v34, v32);
  v40 = (_QWORD *)(v39 + v37);
  v41 = v50;
  *v40 = v49;
  v40[1] = v41;
  *(_QWORD *)(v39 + v38) = v27;
  v42 = (uint64_t (**)(uint64_t))&v30[qword_1005D5140];
  v43 = *(_QWORD *)&v30[qword_1005D5140];
  v44 = *(_QWORD *)&v30[qword_1005D5140 + 8];
  *v42 = sub_10015B110;
  v42[1] = (uint64_t (*)(uint64_t))v39;
  swift_retain(v41);
  sub_1000327F0(v43, v44);
  if (qword_1005D1C50 != -1)
    swift_once(&qword_1005D1C50, sub_10016D590);
  objc_msgSend(*(id *)(static FMTaskScheduler.shared + 24), "addOperation:", v30);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v53, v32);
}

void sub_10015B02C(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_100157A00(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10015B048()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10015B06C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for CharacterSet(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_10015B110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for CharacterSet(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100157AC4(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10015B174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for CharacterSet(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 25) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_10015B234(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v8 + 8, v5);
}

uint64_t sub_10015B234(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_errorRelease(a1);
  else
    return swift_bridgeObjectRelease(a1);
}

uint64_t sub_10015B240()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for CharacterSet(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100157DFC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10015B2A4(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_errorRetain(a1);
  else
    return swift_bridgeObjectRetain(a1);
}

uint64_t sub_10015B2B0(uint64_t a1)
{
  uint64_t v1;

  return sub_100157ED4(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_10015B2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMItemCellViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_10015B30C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  BOOL v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSString v17;
  unsigned int v18;
  _QWORD *result;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_37:
    if (v1 < 0)
      v40 = v1;
    else
      v40 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v40);
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v2)
    {
LABEL_3:
      sub_100006C5C(0, (unint64_t *)&qword_1005D8190, NSPredicate_ptr);
      v42 = v1 & 0xC000000000000001;
      v3 = _swiftEmptyArrayStorage;
      v4 = 4;
      v41 = v1;
      while (1)
      {
        if (v42)
          v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v1);
        else
          v6 = *(id *)(v1 + 8 * v4);
        v7 = v6;
        v8 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
          goto LABEL_37;
        }
        v9 = v2;
        v10 = objc_msgSend(v6, "address");
        if (v10)
        {
          v11 = v10;
          static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
          v13 = v12;

        }
        else
        {
          v13 = 0;
        }
        v14 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
        v15 = swift_allocObject(v14, 72, 7);
        *(_OWORD *)(v15 + 16) = xmmword_100481740;
        *(_QWORD *)(v15 + 56) = &type metadata for String;
        *(_QWORD *)(v15 + 64) = sub_100071E88();
        *(_QWORD *)(v15 + 32) = 0xD000000000000029;
        *(_QWORD *)(v15 + 40) = 0x80000001004ACC10;
        v16 = (void *)NSPredicate.init(format:_:)(0x54414D20464C4553, 0xEF40252053454843, v15);
        v17 = v13 ? String._bridgeToObjectiveC()() : 0;
        v18 = objc_msgSend(v16, "evaluateWithObject:", v17, v41);
        swift_bridgeObjectRelease(v13);

        swift_unknownObjectRelease(v17);
        result = objc_msgSend(v7, "address");
        v20 = result;
        if (v18)
          break;
        if (result)
        {
          v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
          v29 = v28;

        }
        else
        {
          v27 = 0;
          v29 = 0;
        }
        v30 = sub_1003C06A0(v27, v29, 1);
        v32 = v31;
        v34 = v33;
        *(_QWORD *)&v35 = swift_bridgeObjectRelease(v29).n128_u64[0];
        if ((v30 & 1) != 0)
        {
          if (v34)
          {
            if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
              v3 = sub_100070178(0, v3[2] + 1, 1, v3);
            v37 = v3[2];
            v36 = v3[3];
            if (v37 >= v36 >> 1)
              v3 = sub_100070178((_QWORD *)(v36 > 1), v37 + 1, 1, v3);
            v3[2] = v37 + 1;
            v38 = &v3[2 * v37];
            v38[4] = v32;
            v38[5] = v34;
            goto LABEL_33;
          }
          v39 = objc_msgSend(v7, "address", v35);
          if (v39)
          {
            v20 = v39;
            goto LABEL_18;
          }
LABEL_33:

          goto LABEL_5;
        }

        swift_bridgeObjectRelease(v34);
LABEL_5:
        ++v4;
        v2 = v9;
        v5 = v8 == v9;
        v1 = v41;
        if (v5)
          goto LABEL_42;
      }
      if (!result)
      {
        __break(1u);
        return result;
      }
LABEL_18:
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        v3 = sub_100070178(0, v3[2] + 1, 1, v3);
      v25 = v3[2];
      v24 = v3[3];
      if (v25 >= v24 >> 1)
        v3 = sub_100070178((_QWORD *)(v24 > 1), v25 + 1, 1, v3);
      v3[2] = v25 + 1;
      v26 = &v3[2 * v25];
      v26[4] = v21;
      v26[5] = v23;
      goto LABEL_33;
    }
  }
  v3 = _swiftEmptyArrayStorage;
LABEL_42:
  swift_bridgeObjectRelease(v1);
  return v3;
}

void sub_10015B6D8()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  _QWORD v5[6];

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  if (v1)
  {
    v2 = objc_msgSend(v1, "textView");
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v2, "resignFirstResponder");

      v5[4] = State.rawValue.getter;
      v5[5] = 0;
      v5[0] = _NSConcreteStackBlock;
      v5[1] = 1107296256;
      v5[2] = sub_100037DF8;
      v5[3] = &unk_100549250;
      v4 = _Block_copy(v5);
      objc_msgSend(v0, "dismissViewControllerAnimated:completion:", 1, v4);
      _Block_release(v4);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10015B7A0()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v1 = &v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText];
  *v1 = 0;
  v1[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextViewHeightConstraint] = 0;
  v2 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContactsTableView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UITableView), "init");
  v3 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContactsTableView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UITableView), "init");
  v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_hideSuggestedContactsLabel] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_excludedSuggestedContactHandles] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_rightActionButtonItem] = 0;
  v4 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_horizontalRuleView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v5 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_style;
  if (qword_1005D1C40 != -1)
    swift_once(&qword_1005D1C40, sub_1001574A0);
  v6 = &v0[v5];
  v7 = (void *)qword_1005F4FD0;
  v8 = qword_1005F4FF8;
  v9 = unk_1005F4FD8;
  v10 = unk_1005F4FE8;
  *(_OWORD *)v6 = xmmword_1005F4FC0;
  *((_QWORD *)v6 + 2) = v7;
  *(_OWORD *)(v6 + 24) = v9;
  *(_OWORD *)(v6 + 40) = v10;
  *((_QWORD *)v6 + 7) = v8;
  v11 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_contactStore;
  v12 = objc_allocWithZone((Class)CNContactStore);
  v13 = v7;
  *(_QWORD *)&v0[v11] = objc_msgSend(v12, "init");
  v14 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_operationQueue;
  *(_QWORD *)&v0[v14] = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_peopleSuggester] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_alertedOfferOutOfNetworkHandles] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_reachabilityOperation] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchOperation] = 0;
  v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiresReachability] = 0;
  v15 = &v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiredCapability];
  v16 = type metadata accessor for MessagingCapability(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_searchedContacts] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_suggestedContacts] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMRecipientsViewController.swift", 39, 2, 83, 0);
  __break(1u);
}

uint64_t sub_10015B9F0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10015BA14()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10015BA40(uint64_t a1)
{
  uint64_t v1;

  return sub_10015A04C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10015BA48()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_10015BA74()
{
  uint64_t v0;

  return sub_10015A2E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10015BA7C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  if (*(_QWORD *)(v0 + 72))
    swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_10015BAC0(uint64_t *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  if (*(_BYTE *)(v1 + 58))
    v2 = 0x10000;
  else
    v2 = 0;
  if (*(_BYTE *)(v1 + 57))
    v3 = 256;
  else
    v3 = 0;
  return sub_100158C9C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), v2 | v3 | *(unsigned __int8 *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_10015BB28(uint64_t result, char a2)
{
  if ((a2 & 1) != 0)
    return swift_errorRelease(result);
  return result;
}

uint64_t sub_10015BB34()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  if (*(_QWORD *)(v0 + 80))
    swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 104, 7);
}

double sub_10015BB78()
{
  uint64_t v0;
  int v1;
  int v2;

  if (*(_BYTE *)(v0 + 58))
    v1 = 0x10000;
  else
    v1 = 0;
  if (*(_BYTE *)(v0 + 57))
    v2 = 256;
  else
    v2 = 0;
  return sub_100158FD0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), v1 | v2 | *(unsigned __int8 *)(v0 + 56), *(_QWORD *)(v0 + 64), *(unsigned __int8 *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
}

uint64_t sub_10015BBE4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  if (*(_QWORD *)(v0 + 96))
    swift_release(*(_QWORD *)(v0 + 104));
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_10015BC30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = v1[3];
  v11 = v1[2];
  v4 = v1[5];
  v9 = v1[4];
  v5 = v1[6];
  v6 = v1[7];
  v7 = (_QWORD *)swift_task_alloc(dword_1005D81AC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000BBF58;
  return sub_1001591BC(a1, v11, v10, v9, v4, v5, v6);
}

uint64_t sub_10015BD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D6938);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10015BD74()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  if (v0[6])
    swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10015BDB8()
{
  uint64_t v0;

  return sub_1001583B4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void (**)(unint64_t))(v0 + 48), *(_QWORD *)(v0 + 56));
}

void sub_10015BDCC()
{
  uint64_t *v0;

  sub_1001581D0(v0[2], v0[3], v0[4]);
}

uint64_t sub_10015BDDC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10015BE08()
{
  uint64_t *v0;

  sub_100158060(v0[2], v0[3], v0[4]);
}

uint64_t sub_10015BE14()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10015BE38()
{
  uint64_t v0;

  sub_10015797C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10015BE90(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v17);
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    v9 = a2[6];
    v10 = *((_BYTE *)a2 + 56);
    sub_10015C074(v8, v9);
    *(_QWORD *)(v4 + 40) = v8;
    *(_QWORD *)(v4 + 48) = v9;
    *(_BYTE *)(v4 + 56) = v10;
    v11 = a3[6];
    v12 = (uint64_t *)(v4 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = sub_100053F2C(&qword_1005D81F0);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      v18 = *v13;
      *v12 = *v13;
      swift_retain(v18);
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
    v19 = a3[7];
    v20 = (uint64_t *)(v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = sub_100053F2C(&qword_1005D81F8);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v21, v22);
    v24 = *v21;
    *v20 = *v21;
    if (EnumCaseMultiPayload == 1)
    {
      v25 = v21[1];
      v20[1] = v25;
      swift_retain(v24);
      swift_retain(v25);
      v26 = *(int *)(sub_100053F2C(&qword_1005D8200) + 32);
      v27 = (char *)v20 + v26;
      v28 = (char *)v21 + v26;
      v29 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      v30 = 1;
    }
    else
    {
      swift_retain(v24);
      v30 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v22, v30);
    v31 = a3[8];
    v32 = v4 + v31;
    v33 = (uint64_t)a2 + v31;
    v34 = sub_100053F2C(&qword_1005D8208);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  }
  return v4;
}

uint64_t sub_10015C074(uint64_t a1, uint64_t a2)
{
  return swift_retain(a2);
}

uint64_t sub_10015C07C(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_10015C194(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  v4 = (_QWORD *)(a1 + a2[6]);
  v5 = sub_100053F2C(&qword_1005D81F0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  v7 = (_QWORD *)(a1 + a2[7]);
  v8 = sub_100053F2C(&qword_1005D81F8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  swift_release(*v7);
  if (EnumCaseMultiPayload == 1)
  {
    swift_release(v7[1]);
    v10 = (char *)v7 + *(int *)(sub_100053F2C(&qword_1005D8200) + 32);
    v11 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[8];
  v13 = sub_100053F2C(&qword_1005D8208);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

uint64_t sub_10015C194(uint64_t a1, uint64_t a2)
{
  return swift_release(a2);
}

uint64_t sub_10015C19C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_BYTE *)(a2 + 56);
  sub_10015C074(v7, v8);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v9;
  v10 = a3[6];
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v13 = sub_100053F2C(&qword_1005D81F0);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    v15 = 1;
  }
  else
  {
    v16 = *v12;
    *v11 = *v12;
    swift_retain(v16);
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v13, v15);
  v17 = a3[7];
  v18 = (uint64_t *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v20 = sub_100053F2C(&qword_1005D81F8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v20);
  v22 = *v19;
  *v18 = *v19;
  if (EnumCaseMultiPayload == 1)
  {
    v23 = v19[1];
    v18[1] = v23;
    swift_retain(v22);
    swift_retain(v23);
    v24 = *(int *)(sub_100053F2C(&qword_1005D8200) + 32);
    v25 = (char *)v18 + v24;
    v26 = (char *)v19 + v24;
    v27 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = 1;
  }
  else
  {
    swift_retain(v22);
    v28 = 0;
  }
  swift_storeEnumTagMultiPayload(v18, v20, v28);
  v29 = a3[8];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_100053F2C(&qword_1005D8208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

uint64_t sub_10015C354(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a2 + 56);
  sub_10015C074(v6, v7);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v8;
  sub_10015C194(v9, v10);
  if (a1 != a2)
  {
    v11 = a3[6];
    v12 = (uint64_t *)(a1 + v11);
    v13 = (uint64_t *)(a2 + v11);
    sub_1000051EC(a1 + v11, &qword_1005D81F0);
    v14 = sub_100053F2C(&qword_1005D81F0);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      v17 = *v13;
      *v12 = *v13;
      swift_retain(v17);
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
    v18 = a3[7];
    v19 = (uint64_t *)(a1 + v18);
    v20 = (uint64_t *)(a2 + v18);
    sub_1000051EC(a1 + v18, &qword_1005D81F8);
    v21 = sub_100053F2C(&qword_1005D81F8);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v21);
    v23 = *v20;
    *v19 = *v20;
    if (EnumCaseMultiPayload == 1)
    {
      v24 = v20[1];
      v19[1] = v24;
      swift_retain(v23);
      swift_retain(v24);
      v25 = *(int *)(sub_100053F2C(&qword_1005D8200) + 32);
      v26 = (char *)v19 + v25;
      v27 = (char *)v20 + v25;
      v28 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      v29 = 1;
    }
    else
    {
      swift_retain(v23);
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v21, v29);
  }
  v30 = a3[8];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_100053F2C(&qword_1005D8208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  return a1;
}

uint64_t sub_10015C558(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_100053F2C(&qword_1005D81F0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = sub_100053F2C(&qword_1005D81F8);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = v14[1];
    *v13 = *v14;
    v13[1] = v16;
    v17 = *(int *)(sub_100053F2C(&qword_1005D8200) + 32);
    v18 = (char *)v13 + v17;
    v19 = (char *)v14 + v17;
    v20 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    swift_storeEnumTagMultiPayload(v13, v15, 1);
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_100053F2C(&qword_1005D8208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

uint64_t sub_10015C6F8(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 56);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v7;
  sub_10015C194(v8, v9);
  if (a1 != a2)
  {
    v10 = a3[6];
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    sub_1000051EC(a1 + v10, &qword_1005D81F0);
    v13 = sub_100053F2C(&qword_1005D81F0);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    v15 = a3[7];
    v16 = (_QWORD *)(a1 + v15);
    v17 = (_QWORD *)(a2 + v15);
    sub_1000051EC(a1 + v15, &qword_1005D81F8);
    v18 = sub_100053F2C(&qword_1005D81F8);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = v17[1];
      *v16 = *v17;
      v16[1] = v19;
      v20 = *(int *)(sub_100053F2C(&qword_1005D8200) + 32);
      v21 = (char *)v16 + v20;
      v22 = (char *)v17 + v20;
      v23 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      swift_storeEnumTagMultiPayload(v16, v18, 1);
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_100053F2C(&qword_1005D8208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  return a1;
}

uint64_t sub_10015C8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10015C8DC);
}

uint64_t sub_10015C8DC(uint64_t a1, uint64_t a2, int *a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = sub_100053F2C(&qword_1005D8210);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = sub_100053F2C(&qword_1005D8218);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        v10 = sub_100053F2C(&qword_1005D8208);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_10015C9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10015C9B0);
}

uint64_t sub_10015C9B0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 56) = -(char)a2;
  }
  else
  {
    v8 = sub_100053F2C(&qword_1005D8210);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = sub_100053F2C(&qword_1005D8218);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        v10 = sub_100053F2C(&qword_1005D8208);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for FMChooseMapView(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D8278;
  if (!qword_1005D8278)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMChooseMapView);
  return result;
}

void sub_10015CAB4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  v8[0] = "(";
  v8[1] = &unk_1004856D0;
  sub_10015CB68(319);
  if (v3 <= 0x3F)
  {
    v8[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_10015CBBC(319);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_10015CC14(319);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 5, v8, a1 + 16);
      }
    }
  }
}

void sub_10015CB68(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005D8288)
  {
    v2 = type metadata accessor for DynamicTypeSize(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005D8288);
  }
}

void sub_10015CBBC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005D8290)
  {
    v2 = sub_10004058C(&qword_1005D8200);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005D8290);
  }
}

void sub_10015CC14(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005D8298)
  {
    v2 = sub_10015CC6C();
    v3 = type metadata accessor for ScaledMetric(a1, &type metadata for Double, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005D8298);
  }
}

unint64_t sub_10015CC6C()
{
  unint64_t result;

  result = qword_1005D82A0;
  if (!qword_1005D82A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Double, &type metadata for Double);
    atomic_store(result, (unint64_t *)&qword_1005D82A0);
  }
  return result;
}

uint64_t sub_10015CCB0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004D90F8, 1);
}

uint64_t sub_10015CCC0@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *);

  v16 = a1;
  v5 = sub_100053F2C(&qword_1005D8330);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005D8308);
  __chkstk_darwin(v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007464(v2, (uint64_t)v11, &qword_1005D8308);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    v12 = sub_100053F2C(&qword_1005D8338);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  else
  {
    sub_10005DAA0((uint64_t)v11, (uint64_t)v8, &qword_1005D8330);
    v16(v8);
    result = sub_1000051EC((uint64_t)v8, &qword_1005D8330);
    if (!v3)
    {
      v14 = sub_100053F2C(&qword_1005D8338);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 0, 1, v14);
    }
  }
  return result;
}

uint64_t sub_10015CE50@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  _BYTE v21[16];
  _QWORD *v22;
  int v23;

  v3 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v3);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100053F2C(&qword_1005D82E0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = static HorizontalAlignment.leading.getter(v8);
  v12 = *v1;
  v22 = v1;
  v23 = 0;
  v13 = sub_100008000(&qword_1005D82E8, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)(&v23, v3, v13);
  v14 = sub_100053F2C(&qword_1005D82F0);
  v15 = sub_10003F774(&qword_1005D82F8, &qword_1005D82F0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v16 = LazyVStack.init(alignment:spacing:pinnedViews:content:)(v11, v12, 0, v5, sub_100160DFC, v21, v14, v15);
  v17 = static Alignment.topLeading.getter(v16);
  v19 = sub_10015D6E4(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, a1, 0.0, 1, INFINITY, 0, v17, v18);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v7 + 8))(v10, v6, v19);
}

uint64_t sub_10015D010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a2;
  v3 = sub_100053F2C(&qword_1005D8308);
  __chkstk_darwin(v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D8310);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v27 - v10;
  v12 = sub_100053F2C(&qword_1005D8318);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v27 - v16;
  sub_10015D28C((uint64_t)&v27 - v16);
  v19 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v20 = *(unsigned __int8 *)(a1 + 56);
  v21 = type metadata accessor for FMChooseMapViewModel(0);
  v22 = sub_100008000(&qword_1005D8320, type metadata accessor for FMChooseMapViewModel, (uint64_t)&unk_100488160);
  v23 = StateObject.wrappedValue.getter(v19, v18, v20, v21, v22);
  sub_100007464(v23 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel_mapAttribution, (uint64_t)v5, &qword_1005D8308);
  swift_release(v23);
  v29 = a1;
  sub_10015CCC0((void (*)(char *))sub_100160E04, (uint64_t)v9);
  sub_1000051EC((uint64_t)v5, &qword_1005D8308);
  sub_10005DAA0((uint64_t)v9, (uint64_t)v11, &qword_1005D8310);
  sub_100007464((uint64_t)v17, (uint64_t)v15, &qword_1005D8318);
  sub_100007464((uint64_t)v11, (uint64_t)v9, &qword_1005D8310);
  v24 = v28;
  sub_100007464((uint64_t)v15, v28, &qword_1005D8318);
  v25 = sub_100053F2C(&qword_1005D8328);
  sub_100007464((uint64_t)v9, v24 + *(int *)(v25 + 48), &qword_1005D8310);
  sub_1000051EC((uint64_t)v11, &qword_1005D8310);
  sub_1000051EC((uint64_t)v17, &qword_1005D8318);
  sub_1000051EC((uint64_t)v9, &qword_1005D8310);
  return sub_1000051EC((uint64_t)v15, &qword_1005D8318);
}

uint64_t sub_10015D28C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v2 = v1;
  v48 = a1;
  v49 = sub_100053F2C(&qword_1005D83B0);
  __chkstk_darwin(v49);
  v45 = (uint64_t)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C(&qword_1005D83B8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v42 - v9;
  v11 = __chkstk_darwin(v8);
  v44 = (uint64_t)&v42 - v12;
  __chkstk_darwin(v11);
  v43 = (uint64_t)&v42 - v13;
  v46 = sub_100053F2C(&qword_1005D83C0);
  __chkstk_darwin(v46);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100053F2C(&qword_1005D83C8);
  __chkstk_darwin(v47);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DynamicTypeSize(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v24 = (char *)&v42 - v23;
  type metadata accessor for FMChooseMapView(0);
  sub_100160EF4((uint64_t)v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v22, enum case for DynamicTypeSize.accessibility2(_:), v18);
  v25 = sub_100008000(&qword_1005D83A0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v26 = dispatch thunk of static Comparable.< infix(_:_:)(v22, v24, v18, v25);
  v27 = *(void (**)(char *, uint64_t))(v19 + 8);
  v27(v22, v18);
  v28 = ((uint64_t (*)(char *, uint64_t))v27)(v24, v18);
  if ((v26 & 1) != 0)
  {
    v29 = v43;
    sub_10015DBF4(0, v43);
    v30 = v44;
    sub_10015DBF4(1, v44);
    sub_100007464(v29, (uint64_t)v10, &qword_1005D83B8);
    sub_100007464(v30, (uint64_t)v7, &qword_1005D83B8);
    v31 = v45;
    sub_100007464((uint64_t)v10, v45, &qword_1005D83B8);
    v32 = sub_100053F2C(&qword_1005D83E8);
    sub_100007464((uint64_t)v7, v31 + *(int *)(v32 + 48), &qword_1005D83B8);
    sub_1000051EC((uint64_t)v7, &qword_1005D83B8);
    sub_1000051EC((uint64_t)v10, &qword_1005D83B8);
    sub_100007464(v31, (uint64_t)v15, &qword_1005D83B0);
    swift_storeEnumTagMultiPayload(v15, v46, 1);
    v33 = sub_10003F774(&qword_1005D83D8, &qword_1005D83C8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v34 = sub_10003F774(&qword_1005D83E0, &qword_1005D83B0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v15, v47, v49, v33, v34);
    sub_1000051EC(v31, &qword_1005D83B0);
    sub_1000051EC(v30, &qword_1005D83B8);
    v35 = v29;
    v36 = &qword_1005D83B8;
  }
  else
  {
    v37 = *v2;
    *(_QWORD *)v17 = static VerticalAlignment.center.getter(v28);
    *((_QWORD *)v17 + 1) = v37;
    v17[16] = 0;
    v38 = sub_100053F2C(&qword_1005D83D0);
    sub_10015DA90((uint64_t)&v17[*(int *)(v38 + 44)]);
    sub_100007464((uint64_t)v17, (uint64_t)v15, &qword_1005D83C8);
    swift_storeEnumTagMultiPayload(v15, v46, 0);
    v39 = sub_10003F774(&qword_1005D83D8, &qword_1005D83C8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v40 = sub_10003F774(&qword_1005D83E0, &qword_1005D83B0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v15, v47, v49, v39, v40);
    v35 = (uint64_t)v17;
    v36 = &qword_1005D83C8;
  }
  return sub_1000051EC(v35, v36);
}

__n128 sub_10015D6E4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __n128 result;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v16 = v15;
  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((_DWORD)v21)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((a4 & 1) != 0)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = v24;
  if (v22 > v24 || v24 > v27)
    goto LABEL_22;
  v29 = a7;
  if ((a8 & 1) != 0)
    v29 = -INFINITY;
  v30 = a10;
  if ((a11 & 1) != 0)
    v30 = v29;
  v31 = a12;
  if ((a13 & 1) != 0)
    v31 = v30;
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v21;
    v33 = static os_log_type_t.fault.getter();
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &_mh_execute_header, v34, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a15;
    v21 = v40;
    a1 = v41;
    v20 = a10;
    a3 = v42;
    v19 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, a13 & 1, a14, v18);
  v35 = sub_100053F2C(&qword_1005D82E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a9, v16, v35);
  v36 = a9 + *(int *)(sub_100053F2C(&qword_1005D8300) + 36);
  v37 = v45[5];
  *(_OWORD *)(v36 + 64) = v45[4];
  *(_OWORD *)(v36 + 80) = v37;
  *(_OWORD *)(v36 + 96) = v45[6];
  v38 = v45[1];
  *(_OWORD *)v36 = v45[0];
  *(_OWORD *)(v36 + 16) = v38;
  result = (__n128)v45[3];
  *(_OWORD *)(v36 + 32) = v45[2];
  *(__n128 *)(v36 + 48) = result;
  return result;
}

double sub_10015D8B0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  double v36;
  double v37;
  double v38;
  uint64_t v40;
  void *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  double result;
  unsigned int v46;
  unsigned int v47;
  double v48;
  double v49;
  double v50;
  double v51;
  _OWORD v52[7];

  v20 = a19;
  v21 = a18;
  v22 = a17;
  v24 = a14;
  v23 = a15;
  v25 = a12;
  v26 = a10;
  v27 = a2 & 1;
  v28 = a1;
  if ((_DWORD)v27)
    v28 = -INFINITY;
  v29 = a4 & 1;
  v30 = a3;
  if ((_DWORD)v29)
    v30 = v28;
  v31 = a6 & 1;
  v32 = a8 & 1;
  v33 = a13 & 1;
  v34 = a5;
  if ((a6 & 1) != 0)
    v34 = v30;
  if (v28 > v30 || v30 > v34)
    goto LABEL_22;
  v36 = a7;
  if ((a8 & 1) != 0)
    v36 = -INFINITY;
  v37 = a10;
  if ((a11 & 1) != 0)
    v37 = v36;
  v38 = a12;
  if ((a13 & 1) != 0)
    v38 = v37;
  if (v36 > v37 || v37 > v38)
  {
LABEL_22:
    v50 = a7;
    v51 = a5;
    v48 = a1;
    v49 = a3;
    v47 = v27;
    v46 = v29;
    v40 = static os_log_type_t.fault.getter();
    v41 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v41, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v33 = a13 & 1;
    v29 = v46;
    v24 = a14;
    v23 = a15;
    v27 = v47;
    v26 = a10;
    v25 = a12;
    a1 = v48;
    a3 = v49;
    a7 = v50;
    a5 = v51;
    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v52, *(_QWORD *)&a1, v27, *(_QWORD *)&a3, v29, *(_QWORD *)&a5, v31, *(_QWORD *)&a7, v32, *(_QWORD *)&v26, a11 & 1, *(_QWORD *)&v25, v33, v24, v23);
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  v42 = v52[5];
  *(_OWORD *)(a9 + 96) = v52[4];
  *(_OWORD *)(a9 + 112) = v42;
  *(_OWORD *)(a9 + 128) = v52[6];
  v43 = v52[1];
  *(_OWORD *)(a9 + 32) = v52[0];
  *(_OWORD *)(a9 + 48) = v43;
  v44 = v52[3];
  *(_OWORD *)(a9 + 64) = v52[2];
  *(_OWORD *)(a9 + 80) = v44;
  sub_1001615D4(a16, v22, v21 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v20).n128_u64[0];
  return result;
}

uint64_t sub_10015DA90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v2 = sub_100053F2C(&qword_1005D83B8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v16 - v7;
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v16 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v16 - v12;
  sub_10015DBF4(0, (uint64_t)&v16 - v12);
  sub_10015DBF4(1, (uint64_t)v11);
  sub_100007464((uint64_t)v13, (uint64_t)v8, &qword_1005D83B8);
  sub_100007464((uint64_t)v11, (uint64_t)v5, &qword_1005D83B8);
  sub_100007464((uint64_t)v8, a1, &qword_1005D83B8);
  v14 = sub_100053F2C(&qword_1005D83E8);
  sub_100007464((uint64_t)v5, a1 + *(int *)(v14 + 48), &qword_1005D83B8);
  sub_1000051EC((uint64_t)v11, &qword_1005D83B8);
  sub_1000051EC((uint64_t)v13, &qword_1005D83B8);
  sub_1000051EC((uint64_t)v5, &qword_1005D83B8);
  return sub_1000051EC((uint64_t)v8, &qword_1005D83B8);
}

uint64_t sub_10015DBF4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  int v132;
  uint64_t v133;
  _BYTE v134[24];
  _QWORD *v135;

  v3 = v2;
  v128 = a2;
  v126 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v126);
  v127 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D83F0);
  __chkstk_darwin(v6);
  v124 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_100053F2C(&qword_1005D83F8);
  __chkstk_darwin(v123);
  v125 = (uint64_t)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for PlainButtonStyle(0);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v111 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for AccessibilityTraits(0);
  v109 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v107 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMChooseMapView(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100053F2C(&qword_1005D8400);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v16 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_100053F2C(&qword_1005D8408);
  __chkstk_darwin(v108);
  v104 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100053F2C(&qword_1005D8410);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v131 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100053F2C(&qword_1005D8418);
  __chkstk_darwin(v114);
  v133 = (uint64_t)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_100053F2C(&qword_1005D8420);
  __chkstk_darwin(v117);
  v120 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100053F2C(&qword_1005D8428);
  __chkstk_darwin(v118);
  v122 = (char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_100053F2C(&qword_1005D83B8);
  __chkstk_darwin(v119);
  v121 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FC74(v3, (uint64_t)v14, type metadata accessor for FMChooseMapView);
  v23 = *(unsigned __int8 *)(v12 + 80);
  v24 = (v23 + 16) & ~v23;
  v25 = v24 + v13;
  v26 = swift_allocObject(&unk_1005495B0, v24 + v13 + 1, v23 | 7);
  sub_10016130C((uint64_t)v14, v26 + v24);
  *(_BYTE *)(v26 + v25) = a1 & 1;
  v132 = a1 & 1;
  v134[16] = a1 & 1;
  if ((a1 & 1) != 0)
    v27 = 0x74696C6C65746173;
  else
    v27 = 0x65726F6C707865;
  if ((a1 & 1) != 0)
    v28 = 0xE900000000000065;
  else
    v28 = 0xE700000000000000;
  v29 = sub_100053F2C(&qword_1005D8430);
  v30 = sub_100161390();
  v103 = v16;
  Button.init(action:label:)(sub_100161350, v26, sub_100161388, v134, v29, v30);
  v31 = *(_QWORD *)(v3 + 40);
  v32 = *(_QWORD *)(v3 + 48);
  v33 = *(unsigned __int8 *)(v3 + 56);
  v34 = type metadata accessor for FMChooseMapViewModel(0);
  v129 = sub_100008000(&qword_1005D8320, type metadata accessor for FMChooseMapViewModel, (uint64_t)&unk_100488160);
  v130 = v34;
  v35 = v34;
  v36 = v27;
  v37 = StateObject.wrappedValue.getter(v31, v32, v33, v35, v129);
  KeyPath = swift_getKeyPath(&unk_100485768);
  v39 = swift_getKeyPath(&unk_100485790);
  static Published.subscript.getter(&v135, v37, KeyPath, v39);
  swift_release(v37);
  swift_release(KeyPath);
  swift_release(v39);
  if ((_BYTE)v135)
    v40 = 0x74696C6C65746173;
  else
    v40 = 0x65726F6C707865;
  if ((_BYTE)v135)
    v41 = 0xE900000000000065;
  else
    v41 = 0xE700000000000000;
  if (v40 == v27 && v41 == v28)
  {
    v42 = swift_bridgeObjectRelease_n(v41, 2);
LABEL_17:
    v44 = v107;
    static AccessibilityTraits.isSelected.getter(v42);
    v45 = v110;
    goto LABEL_19;
  }
  v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v41, v27, v28, 0);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v28);
  if ((v43 & 1) != 0)
    goto LABEL_17;
  v135 = _swiftEmptyArrayStorage;
  v46 = sub_100008000(&qword_1005D8458, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
  v47 = sub_100053F2C(&qword_1005D8460);
  v48 = sub_10003F774(&qword_1005D8468, &qword_1005D8460, (uint64_t)&protocol conformance descriptor for [A]);
  v44 = v107;
  v45 = v110;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v135, v47, v48, v110, v46);
LABEL_19:
  v49 = sub_10003F774(&qword_1005D8470, &qword_1005D8400, (uint64_t)&protocol conformance descriptor for Button<A>);
  v50 = (uint64_t)v104;
  v51 = v106;
  v52 = v103;
  View.accessibility(addTraits:)(v44, v106, v49);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v44, v45);
  v53 = (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v52, v51);
  v54 = v111;
  PlainButtonStyle.init()(v53);
  v55 = sub_100161480();
  v56 = sub_100008000(&qword_1005D8398, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v57 = v113;
  View.buttonStyle<A>(_:)(v54, v108, v113, v55, v56);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v54, v57);
  sub_1000051EC(v50, &qword_1005D8408);
  v58 = StateObject.wrappedValue.getter(*(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(unsigned __int8 *)(v3 + 56), v130, v129);
  v59 = swift_getKeyPath(&unk_100485768);
  v60 = swift_getKeyPath(&unk_100485790);
  static Published.subscript.getter(&v135, v58, v59, v60);
  swift_release(v58);
  swift_release(v59);
  swift_release(v60);
  if ((_BYTE)v135)
    v61 = 0x74696C6C65746173;
  else
    v61 = 0x65726F6C707865;
  if ((_BYTE)v135)
    v62 = 0xE900000000000065;
  else
    v62 = 0xE700000000000000;
  v63 = (uint64_t)v124;
  if (v61 == v36 && v62 == v28)
  {
    swift_bridgeObjectRelease_n(v28, 2);
    v64 = 0;
  }
  else
  {
    v65 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v62, v36, v28, 0);
    swift_bridgeObjectRelease(v62);
    swift_bridgeObjectRelease(v28);
    v64 = v65 ^ 1;
  }
  v66 = v115;
  v67 = v133;
  v68 = v131;
  v69 = v116;
  (*(void (**)(uint64_t, char *, uint64_t))(v115 + 16))(v133, v131, v116);
  *(_BYTE *)(v67 + *(int *)(v114 + 36)) = v64 & 1;
  v70 = (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v68, v69);
  *(_QWORD *)v63 = static HorizontalAlignment.center.getter(v70);
  *(_QWORD *)(v63 + 8) = 0;
  *(_BYTE *)(v63 + 16) = 0;
  v71 = sub_100053F2C(&qword_1005D8480);
  sub_10015E9B4(v3, v132, (_QWORD *)(v63 + *(int *)(v71 + 44)));
  v72 = StateObject.wrappedValue.getter(*(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(unsigned __int8 *)(v3 + 56), v130, v129);
  v73 = swift_getKeyPath(&unk_100485768);
  v74 = swift_getKeyPath(&unk_100485790);
  static Published.subscript.getter(&v135, v72, v73, v74);
  swift_release(v72);
  swift_release(v73);
  swift_release(v74);
  if ((_BYTE)v135)
    v75 = 0x74696C6C65746173;
  else
    v75 = 0x65726F6C707865;
  if ((_BYTE)v135)
    v76 = 0xE900000000000065;
  else
    v76 = 0xE700000000000000;
  if (v75 == v36 && v76 == v28)
  {
    v77 = 1;
    v76 = v28;
  }
  else
  {
    v77 = _stringCompareWithSmolCheck(_:_:expecting:)(v75, v76, v36, v28, 0);
  }
  swift_bridgeObjectRelease(v76);
  swift_bridgeObjectRelease(v28);
  v78 = v125;
  sub_100007464(v63, v125, &qword_1005D83F0);
  *(_BYTE *)(v78 + *(int *)(v123 + 36)) = v77 & 1;
  v79 = sub_1000051EC(v63, &qword_1005D83F0);
  v80 = static Alignment.center.getter(v79);
  v82 = v81;
  v83 = (uint64_t)v120;
  v84 = (uint64_t)&v120[*(int *)(v117 + 36)];
  sub_100007464(v78, v84, &qword_1005D83F8);
  v85 = (uint64_t *)(v84 + *(int *)(sub_100053F2C(&qword_1005D8488) + 36));
  *v85 = v80;
  v85[1] = v82;
  v86 = v133;
  sub_100007464(v133, v83, &qword_1005D8418);
  sub_1000051EC(v78, &qword_1005D83F8);
  sub_1000051EC(v86, &qword_1005D8418);
  v87 = *(_QWORD *)(v3 + 8);
  v88 = v127;
  v89 = &v127[*(int *)(v126 + 20)];
  v90 = enum case for RoundedCornerStyle.continuous(_:);
  v91 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 104))(v89, v90, v91);
  *v88 = v87;
  v88[1] = v87;
  v92 = (uint64_t)v122;
  v93 = (uint64_t)&v122[*(int *)(v118 + 36)];
  sub_10004FC74((uint64_t)v88, v93, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v93 + *(int *)(sub_100053F2C(&qword_1005D8490) + 36)) = 256;
  sub_100007464(v83, v92, &qword_1005D8420);
  sub_10004FCB8((uint64_t)v88, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v94 = sub_1000051EC(v83, &qword_1005D8420);
  v95 = static Alignment.center.getter(v94);
  v97 = v96;
  v98 = (uint64_t)v121;
  v99 = (uint64_t)&v121[*(int *)(v119 + 36)];
  sub_10015ED2C(v3, v132, v99);
  v100 = (uint64_t *)(v99 + *(int *)(sub_100053F2C(&qword_1005D8498) + 36));
  *v100 = v95;
  v100[1] = v97;
  sub_10005DAA0(v92, v98, &qword_1005D8428);
  return sub_10005DAA0(v98, v128, &qword_1005D83B8);
}

double sub_10015E758(uint64_t a1, char a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v2 = a2 & 1;
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(unsigned __int8 *)(a1 + 56);
  v6 = type metadata accessor for FMChooseMapViewModel(0);
  v7 = sub_100008000(&qword_1005D8320, type metadata accessor for FMChooseMapViewModel, (uint64_t)&unk_100488160);
  v8 = StateObject.wrappedValue.getter(v3, v4, v5, v6, v7);
  sub_1001FC3D4(v2);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

uint64_t sub_10015E7DC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v25[4];
  __int16 v26;

  v4 = type metadata accessor for Image.ResizingMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D8430);
  __chkstk_darwin(v8);
  v10 = (char *)&v25[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1 & 1;
  if (v11)
    v12 = 0x74696C6C65746153;
  else
    v12 = 0x4D65726F6C707845;
  if (v11)
    v13 = 0xEC00000070614D65;
  else
    v13 = 0xEA00000000007061;
  v14 = Image.init(_:bundle:)(v12, v13, 0);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
  v15 = Image.resizable(capInsets:resizingMode:)(v7, v14, 0.0, 0.0, 0.0, 0.0);
  v16 = swift_release(v14);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v16);
  v25[2] = v15;
  v25[3] = 0;
  v26 = 1;
  v17 = sub_1001DFC84(v11);
  v19 = v18;
  v25[0] = v17;
  v25[1] = v18;
  v20 = sub_100053F2C(&qword_1005D8448);
  v21 = sub_100161414();
  v22 = sub_1000517B8();
  View.accessibilityLabel<A>(_:)(v25, v20, &type metadata for String, v21, v22);
  swift_release(v15);
  swift_bridgeObjectRelease(v19);
  return sub_10005DAA0((uint64_t)v10, a2, &qword_1005D8430);
}

uint64_t sub_10015E9B4@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  char v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;

  v56 = a3;
  v4 = a2 & 1;
  v5 = type metadata accessor for Material(0);
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D84C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C(&qword_1005D84C8);
  __chkstk_darwin(v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100053F2C(&qword_1005D84D0);
  __chkstk_darwin(v52);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_100053F2C(&qword_1005D84D8);
  v16 = __chkstk_darwin(v53);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v51 - v20;
  *(_QWORD *)v10 = static VerticalAlignment.center.getter(v19);
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 1;
  v22 = sub_100053F2C(&qword_1005D84E0);
  v23 = sub_10015F0AC(v4, a1, (uint64_t)&v10[*(int *)(v22 + 44)]);
  v24 = static Edge.Set.vertical.getter(v23);
  v25 = EdgeInsets.init(_all:)(*(double *)(a1 + 24));
  v27 = v26;
  v29 = v28;
  v31 = v30;
  sub_100007464((uint64_t)v10, (uint64_t)v13, &qword_1005D84C0);
  v32 = &v13[*(int *)(v11 + 36)];
  *v32 = v24;
  *((double *)v32 + 1) = v25;
  *((_QWORD *)v32 + 2) = v27;
  *((_QWORD *)v32 + 3) = v29;
  *((_QWORD *)v32 + 4) = v31;
  v32[40] = 0;
  v33 = sub_1000051EC((uint64_t)v10, &qword_1005D84C0);
  LOBYTE(v10) = static Edge.Set.horizontal.getter(v33);
  v34 = EdgeInsets.init(_all:)(*(double *)(a1 + 32));
  v36 = v35;
  v38 = v37;
  v40 = v39;
  sub_100007464((uint64_t)v13, (uint64_t)v15, &qword_1005D84C8);
  v41 = &v15[*(int *)(v52 + 36)];
  *v41 = (char)v10;
  *((double *)v41 + 1) = v34;
  *((_QWORD *)v41 + 2) = v36;
  *((_QWORD *)v41 + 3) = v38;
  *((_QWORD *)v41 + 4) = v40;
  v41[40] = 0;
  v42 = sub_1000051EC((uint64_t)v13, &qword_1005D84C8);
  v43 = static Material.regular.getter(v42);
  LOBYTE(v10) = static Edge.Set.all.getter(v43);
  v44 = v54;
  v45 = &v18[*(int *)(v53 + 36)];
  v46 = v55;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v45, v7, v55);
  v45[*(int *)(sub_100053F2C(&qword_1005D84E8) + 36)] = (char)v10;
  sub_100007464((uint64_t)v15, (uint64_t)v18, &qword_1005D84D0);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v7, v46);
  sub_1000051EC((uint64_t)v15, &qword_1005D84D0);
  sub_10005DAA0((uint64_t)v18, (uint64_t)v21, &qword_1005D84D8);
  sub_100007464((uint64_t)v21, (uint64_t)v18, &qword_1005D84D8);
  v47 = v56;
  *v56 = 0;
  *((_BYTE *)v47 + 8) = 1;
  v48 = v47;
  v49 = sub_100053F2C(&qword_1005D84F0);
  sub_100007464((uint64_t)v18, (uint64_t)v48 + *(int *)(v49 + 48), &qword_1005D84D8);
  sub_1000051EC((uint64_t)v21, &qword_1005D84D8);
  return sub_1000051EC((uint64_t)v18, &qword_1005D84D8);
}

uint64_t sub_10015ED2C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[2];
  uint64_t v46;

  v44 = a3;
  v5 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100053F2C(&qword_1005D84A0);
  v43 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(unsigned __int8 *)(a1 + 56);
  v14 = type metadata accessor for FMChooseMapViewModel(0);
  v15 = sub_100008000(&qword_1005D8320, type metadata accessor for FMChooseMapViewModel, (uint64_t)&unk_100488160);
  v16 = StateObject.wrappedValue.getter(v11, v12, v13, v14, v15);
  KeyPath = swift_getKeyPath(&unk_100485768);
  v18 = swift_getKeyPath(&unk_100485790);
  static Published.subscript.getter(v45, v16, KeyPath, v18);
  swift_release(v16);
  swift_release(KeyPath);
  swift_release(v18);
  if (LOBYTE(v45[0]))
    v19 = 0x74696C6C65746173;
  else
    v19 = 0x65726F6C707865;
  if (LOBYTE(v45[0]))
    v20 = 0xE900000000000065;
  else
    v20 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v21 = 0x74696C6C65746173;
  else
    v21 = 0x65726F6C707865;
  if ((a2 & 1) != 0)
    v22 = 0xE900000000000065;
  else
    v22 = 0xE700000000000000;
  if (v19 == v21 && v20 == v22)
  {
    swift_bridgeObjectRelease_n(v20, 2);
  }
  else
  {
    v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, v21, v22, 0);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v22);
    if ((v23 & 1) == 0)
    {
      v40 = 1;
      v39 = v44;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v39, v40, 1, v8);
    }
  }
  v24 = *(_QWORD *)(a1 + 8);
  v25 = (char *)v7 + *(int *)(v5 + 20);
  v26 = enum case for RoundedCornerStyle.continuous(_:);
  v27 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  *v7 = v24;
  v7[1] = v24;
  v28 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v29 = Color.init(_:)(v28);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v45, 0, 0, _swiftEmptyArrayStorage, *(double *)(a1 + 16), 10.0, 0.0);
  sub_10004FC74((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v30 = *(double *)v45 * 0.5;
  v31 = (uint64_t)&v10[*(int *)(v8 + 68)];
  sub_10004FC74((uint64_t)v7, v31, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(double *)(v31 + *(int *)(type metadata accessor for RoundedRectangle._Inset(0) + 20)) = v30;
  v32 = v31 + *(int *)(sub_100053F2C(&qword_1005D84A8) + 36);
  v33 = v45[1];
  *(_OWORD *)v32 = v45[0];
  *(_OWORD *)(v32 + 16) = v33;
  *(_QWORD *)(v32 + 32) = v46;
  v34 = sub_100053F2C(&qword_1005D84B0);
  *(_QWORD *)(v31 + *(int *)(v34 + 52)) = v29;
  *(_WORD *)(v31 + *(int *)(v34 + 56)) = 256;
  v35 = static Alignment.center.getter();
  v37 = v36;
  v38 = (uint64_t *)(v31 + *(int *)(sub_100053F2C(&qword_1005D84B8) + 36));
  *v38 = v35;
  v38[1] = v37;
  sub_10004FCB8((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v39 = v44;
  sub_10005DAA0((uint64_t)v10, v44, &qword_1005D84A0);
  v40 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v39, v40, 1, v8);
}

double sub_10015F0AC@<D0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t KeyPath;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  double result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  int v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];

  v44 = a2;
  v4 = a1 & 1;
  v41 = a1 & 1;
  v42 = sub_100053F2C(&qword_1005D84F8);
  v45 = *(_QWORD *)(v42 - 8);
  v5 = __chkstk_darwin(v42);
  v43 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - v7;
  v46[0] = sub_1001DFC84(v4);
  v46[1] = v9;
  v10 = sub_1000517B8();
  v11 = Text.init<A>(_:)(v46, &type metadata for String, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  v18 = static Font.subheadline.getter();
  v19 = Text.font(_:)(v18, v11, v13, v17, v15);
  v38 = v21;
  v39 = v20;
  v23 = v22;
  swift_release(v18);
  v24 = v23 & 1;
  sub_10016151C(v11, v13, v17);
  swift_bridgeObjectRelease(v15);
  KeyPath = swift_getKeyPath(&unk_1004857B0);
  v26 = swift_getKeyPath(&unk_1004857E0);
  v37 = v26;
  v40 = v8;
  sub_10015F2F8(v41, (uint64_t)v8);
  v27 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v29 = v42;
  v28 = v43;
  v27(v43, v8, v42);
  v31 = v38;
  v30 = v39;
  *(_QWORD *)a3 = v19;
  *(_QWORD *)(a3 + 8) = v30;
  *(_BYTE *)(a3 + 16) = v24;
  *(_QWORD *)(a3 + 24) = v31;
  *(_QWORD *)(a3 + 32) = KeyPath;
  *(_QWORD *)(a3 + 40) = 0x3FE3333333333333;
  *(_QWORD *)(a3 + 48) = v26;
  *(_QWORD *)(a3 + 56) = 1;
  *(_BYTE *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = 0;
  *(_BYTE *)(a3 + 80) = 1;
  v32 = sub_100053F2C(&qword_1005D8500);
  v27((char *)(a3 + *(int *)(v32 + 64)), v28, v29);
  sub_1001615D4(v19, v30, v24);
  v33 = *(void (**)(char *, uint64_t))(v45 + 8);
  swift_bridgeObjectRetain(v31);
  v34 = KeyPath;
  swift_retain(KeyPath);
  v35 = v37;
  swift_retain(v37);
  v33(v40, v29);
  v33(v28, v29);
  sub_10016151C(v19, v30, v24);
  swift_release(v35);
  swift_release(v34);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v31).n128_u64[0];
  return result;
}

uint64_t sub_10015F2F8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65[16];
  uint64_t v66;
  uint64_t v67;

  v61 = a1;
  v60 = a2;
  v59 = sub_100053F2C(&qword_1005D8508);
  __chkstk_darwin(v59);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMChooseMapView(0);
  v6 = __chkstk_darwin(v5);
  v55 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v55 - v8;
  v10 = sub_100053F2C(&qword_1005D8510);
  v62 = *(_QWORD *)(v10 - 8);
  v63 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_100053F2C(&qword_1005D8518);
  __chkstk_darwin(v64);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100053F2C(&qword_1005D84F8);
  v57 = *(_QWORD *)(v15 - 8);
  v58 = v15;
  __chkstk_darwin(v15);
  v56 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = v2;
  v17 = sub_100053F2C(&qword_1005D8520);
  v18 = sub_100053F2C(&qword_1005D8528);
  v19 = sub_1001615EC();
  v20 = sub_10003F774(&qword_1005D8550, &qword_1005D8528, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  Menu.init(content:label:)(sub_1001615E4, v65, sub_1001601F8, 0, v17, v18, v19, v20);
  v21 = *(_QWORD *)(v2 + 40);
  v22 = *(_QWORD *)(v2 + 48);
  v23 = *(unsigned __int8 *)(v2 + 56);
  v24 = type metadata accessor for FMChooseMapViewModel(0);
  v25 = sub_100008000(&qword_1005D8320, type metadata accessor for FMChooseMapViewModel, (uint64_t)&unk_100488160);
  v26 = StateObject.wrappedValue.getter(v21, v22, v23, v24, v25);
  KeyPath = swift_getKeyPath(&unk_100485768);
  v28 = swift_getKeyPath(&unk_100485790);
  static Published.subscript.getter(&v67, v26, KeyPath, v28);
  swift_release(v26);
  swift_release(KeyPath);
  swift_release(v28);
  if ((_BYTE)v67)
    v29 = 0x74696C6C65746173;
  else
    v29 = 0x65726F6C707865;
  if ((_BYTE)v67)
    v30 = 0xE900000000000065;
  else
    v30 = 0xE700000000000000;
  if ((v61 & 1) != 0)
    v31 = 0x74696C6C65746173;
  else
    v31 = 0x65726F6C707865;
  if ((v61 & 1) != 0)
    v32 = 0xE900000000000065;
  else
    v32 = 0xE700000000000000;
  if (v29 == v31 && v30 == v32)
  {
    swift_bridgeObjectRelease_n(v30, 2);
    sub_10004FC74(v2, (uint64_t)v9, type metadata accessor for FMChooseMapView);
  }
  else
  {
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, v31, v32, 0);
    swift_bridgeObjectRelease(v30);
    swift_bridgeObjectRelease(v32);
    sub_10004FC74(v2, (uint64_t)v9, type metadata accessor for FMChooseMapView);
    v34 = 0.0;
    if ((v33 & 1) == 0)
    {
      v41 = (uint64_t)v9;
      goto LABEL_21;
    }
  }
  v35 = *((_QWORD *)v9 + 5);
  v36 = *((_QWORD *)v9 + 6);
  v37 = v9[56];
  sub_10015C074(v35, v36);
  v38 = StateObject.wrappedValue.getter(v35, v36, v37, v24, v25);
  sub_10015C194(v35, v36);
  v39 = swift_getKeyPath(&unk_100485768);
  v40 = swift_getKeyPath(&unk_100485790);
  static Published.subscript.getter(&v67, v38, v39, v40);
  swift_release(v38);
  swift_release(v39);
  swift_release(v40);
  LOBYTE(v39) = v67;
  v41 = v55;
  sub_10004FC74((uint64_t)v9, v55, type metadata accessor for FMChooseMapView);
  if ((v39 & 1) == 0)
  {
    v42 = StateObject.wrappedValue.getter(*(_QWORD *)(v41 + 40), *(_QWORD *)(v41 + 48), *(unsigned __int8 *)(v41 + 56), v24, v25);
    v43 = swift_getKeyPath(&unk_100485768);
    v44 = swift_getKeyPath(&unk_100485790);
    static Published.subscript.getter(&v67, v42, v43, v44);
    swift_release(v42);
    swift_release(v43);
    swift_release(v44);
  }
  sub_10004FCB8((uint64_t)v9, type metadata accessor for FMChooseMapView);
  v34 = 1.0;
LABEL_21:
  sub_10004FCB8(v41, type metadata accessor for FMChooseMapView);
  v46 = v62;
  v45 = v63;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v14, v12, v63);
  v47 = v64;
  *(double *)&v14[*(int *)(v64 + 36)] = v34;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v45);
  v48 = enum case for DynamicTypeSize.xxxLarge(_:);
  v49 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v4, v48, v49);
  v50 = sub_100008000(&qword_1005D8558, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v4, v4, v49, v50);
  if ((result & 1) != 0)
  {
    v52 = sub_1001616C4();
    v53 = sub_10003F774(&qword_1005D8570, &qword_1005D8508, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v54 = v56;
    View.dynamicTypeSize<A>(_:)(v4, v47, v59, v52, v53);
    sub_1000051EC((uint64_t)v4, &qword_1005D8508);
    sub_1000051EC((uint64_t)v14, &qword_1005D8518);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v57 + 32))(v60, v54, v58);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10015F8C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  __int128 v68;

  v63 = a2;
  v3 = type metadata accessor for FMChooseMapView(0);
  v64 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v64 + 64);
  __chkstk_darwin(v3);
  v5 = sub_100053F2C(&qword_1005D8580);
  v6 = __chkstk_darwin(v5);
  v62 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v61 = (uint64_t)&v60 - v9;
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v60 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v60 - v13;
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(unsigned __int8 *)(a1 + 56);
  v18 = type metadata accessor for FMChooseMapViewModel(0);
  v19 = sub_100008000(&qword_1005D8320, type metadata accessor for FMChooseMapViewModel, (uint64_t)&unk_100488160);
  v20 = StateObject.wrappedValue.getter(v15, v16, v17, v18, v19);
  KeyPath = swift_getKeyPath(&unk_100485768);
  v22 = swift_getKeyPath(&unk_100485790);
  static Published.subscript.getter(&v65, v20, KeyPath, v22);
  swift_release(v20);
  swift_release(KeyPath);
  swift_release(v22);
  if (v65 == 1)
  {
    if (qword_1005D1CC8 != -1)
      swift_once(&qword_1005D1CC8, sub_1001DFE90);
    v23 = *((_QWORD *)&xmmword_1005F51A0 + 1);
    v68 = xmmword_1005F51A0;
    sub_10004FC74(a1, (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FMChooseMapView);
    type metadata accessor for MainActor(0);
    swift_bridgeObjectRetain(v23);
    v25 = static MainActor.shared.getter(v24);
    v26 = *(unsigned __int8 *)(v64 + 80);
    v27 = (v26 + 32) & ~v26;
    v28 = swift_allocObject(&unk_1005495D8, v27 + v4, v26 | 7);
    *(_QWORD *)(v28 + 16) = v25;
    *(_QWORD *)(v28 + 24) = &protocol witness table for MainActor;
    sub_10016130C((uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27);
    v29 = StateObject.wrappedValue.getter(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56), v18, v19);
    v30 = (_QWORD *)swift_allocObject(&unk_100549600, 48, 7);
    v30[2] = 0;
    v30[3] = 0;
    v30[4] = sub_1001617A8;
    v30[5] = v29;
    v31 = (_QWORD *)swift_allocObject(&unk_100549628, 48, 7);
    v31[2] = 0;
    v31[3] = 0;
    v31[4] = sub_1001617B4;
    v31[5] = v30;
    Binding.init(get:set:)(&v65, sub_10016179C, v28, sub_1001617D8, v31, &type metadata for Bool);
    v32 = v65;
    v33 = v66;
    v34 = v67;
    v35 = sub_1000517B8();
    Toggle<>.init<A>(_:isOn:)(&v68, v32, v33, v34, &type metadata for String, v35);
    v36 = sub_100053F2C(&qword_1005D8588);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v14, 0, 1, v36);
  }
  else
  {
    v37 = sub_100053F2C(&qword_1005D8588);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v14, 1, 1, v37);
  }
  v38 = StateObject.wrappedValue.getter(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56), v18, v19);
  v39 = swift_getKeyPath(&unk_100485768);
  v40 = swift_getKeyPath(&unk_100485790);
  static Published.subscript.getter(&v65, v38, v39, v40);
  swift_release(v38);
  swift_release(v39);
  swift_release(v40);
  if (qword_1005D1CC0 != -1)
    swift_once(&qword_1005D1CC0, sub_1001DFDC0);
  v41 = *((_QWORD *)&xmmword_1005F5190 + 1);
  v68 = xmmword_1005F5190;
  sub_10004FC74(a1, (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FMChooseMapView);
  type metadata accessor for MainActor(0);
  swift_bridgeObjectRetain(v41);
  v43 = static MainActor.shared.getter(v42);
  v44 = *(unsigned __int8 *)(v64 + 80);
  v45 = (v44 + 32) & ~v44;
  v46 = swift_allocObject(&unk_100549650, v45 + v4, v44 | 7);
  *(_QWORD *)(v46 + 16) = v43;
  *(_QWORD *)(v46 + 24) = &protocol witness table for MainActor;
  sub_10016130C((uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v46 + v45);
  v47 = StateObject.wrappedValue.getter(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56), v18, v19);
  v48 = (_QWORD *)swift_allocObject(&unk_100549678, 48, 7);
  v48[2] = 0;
  v48[3] = 0;
  v48[4] = sub_1001619BC;
  v48[5] = v47;
  v49 = (_QWORD *)swift_allocObject(&unk_1005496A0, 48, 7);
  v49[2] = 0;
  v49[3] = 0;
  v49[4] = sub_100161B50;
  v49[5] = v48;
  Binding.init(get:set:)(&v65, sub_100161960, v46, sub_100161B48, v49, &type metadata for Bool);
  v50 = v65;
  v51 = v66;
  v52 = v67;
  v53 = sub_1000517B8();
  Toggle<>.init<A>(_:isOn:)(&v68, v50, v51, v52, &type metadata for String, v53);
  v54 = sub_100053F2C(&qword_1005D8588);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v12, 0, 1, v54);
  v55 = v61;
  sub_100007464((uint64_t)v14, v61, &qword_1005D8580);
  v56 = v62;
  sub_100007464((uint64_t)v12, v62, &qword_1005D8580);
  v57 = v63;
  sub_100007464(v55, v63, &qword_1005D8580);
  v58 = sub_100053F2C(&qword_1005D8590);
  sub_100007464(v56, v57 + *(int *)(v58 + 48), &qword_1005D8580);
  sub_1000051EC((uint64_t)v12, &qword_1005D8580);
  sub_1000051EC((uint64_t)v14, &qword_1005D8580);
  sub_1000051EC(v56, &qword_1005D8580);
  return sub_1000051EC(v55, &qword_1005D8580);
}

void sub_10015FEC0(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(unsigned __int8 *)(a1 + 56);
  v6 = type metadata accessor for FMChooseMapViewModel(0);
  v7 = sub_100008000(&qword_1005D8320, type metadata accessor for FMChooseMapViewModel, (uint64_t)&unk_100488160);
  v8 = StateObject.wrappedValue.getter(v3, v4, v5, v6, v7);
  KeyPath = swift_getKeyPath(&unk_100485768);
  v10 = swift_getKeyPath(&unk_100485790);
  static Published.subscript.getter(&v11, v8, KeyPath, v10);
  swift_release(v8);
  swift_release(KeyPath);
  swift_release(v10);
  *a2 = BYTE2(v11);
}

double sub_10015FF94(char a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  _BYTE *v9;
  double result;
  uint64_t v11;

  KeyPath = swift_getKeyPath(&unk_100485768);
  v5 = swift_getKeyPath(&unk_100485790);
  static Published.subscript.getter(&v11, a2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = BYTE1(v11);
  v7 = BYTE2(v11);
  if ((_BYTE)v11)
  {
    v7 = a1;
    v6 = BYTE1(v11) & a1;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 56);
  v9 = (_BYTE *)(v8 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode);
  *v9 = v11;
  v9[1] = v6 & 1;
  v9[2] = v7 & 1;
  swift_retain(v8);
  sub_1001F5BB0();
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

void sub_100160064(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(unsigned __int8 *)(a1 + 56);
  v6 = type metadata accessor for FMChooseMapViewModel(0);
  v7 = sub_100008000(&qword_1005D8320, type metadata accessor for FMChooseMapViewModel, (uint64_t)&unk_100488160);
  v8 = StateObject.wrappedValue.getter(v3, v4, v5, v6, v7);
  KeyPath = swift_getKeyPath(&unk_100485768);
  v10 = swift_getKeyPath(&unk_100485790);
  static Published.subscript.getter(&v11, v8, KeyPath, v10);
  swift_release(v8);
  swift_release(KeyPath);
  swift_release(v10);
  *a2 = BYTE1(v11);
}

double sub_100160138(char a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _BYTE *v8;
  double result;
  uint64_t v10;

  KeyPath = swift_getKeyPath(&unk_100485768);
  v5 = swift_getKeyPath(&unk_100485790);
  static Published.subscript.getter(&v10, a2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = BYTE2(v10) | a1;
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 56);
  v8 = (_BYTE *)(v7 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode);
  *v8 = v10;
  v8[1] = a1;
  v8[2] = v6 & 1;
  swift_retain(v7);
  sub_1001F5BB0();
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_1001601F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  __n128 v12;
  uint64_t OpaqueTypeConformance2;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];

  v24 = a1;
  v1 = type metadata accessor for SymbolVariants(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D8538);
  v22 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100053F2C(&qword_1005D8578);
  v8 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[0] = Image.init(systemName:)(0x73697370696C6C65, 0xE800000000000000);
  static SymbolVariants.circle.getter();
  View.symbolVariant(_:)(v4, &type metadata for Image, &protocol witness table for Image);
  v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v4, v1);
  v12 = swift_release(v25[0]);
  static SymbolVariants.fill.getter(v12);
  v25[0] = &type metadata for Image;
  v25[1] = &protocol witness table for Image;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v25, &opaque type descriptor for <<opaque return type of View.symbolVariant(_:)>>, 1);
  View.symbolVariant(_:)(v4, v5, OpaqueTypeConformance2);
  v11(v4, v1);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v7, v5);
  v15 = static Color.secondary.getter(v14);
  KeyPath = swift_getKeyPath(&unk_100485810);
  v18 = v23;
  v17 = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v24, v10, v23);
  v19 = (uint64_t *)(v17 + *(int *)(sub_100053F2C(&qword_1005D8520) + 36));
  *v19 = KeyPath;
  v19[1] = v15;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v18);
}

uint64_t sub_100160404@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void **v35;
  char *v36;
  void *v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, _QWORD, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t OpaqueTypeConformance2;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void **v72;
  uint64_t v73;
  uint64_t KeyPath;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  void **v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103[16];
  void **v104;
  _QWORD v105[5];
  uint64_t v106;

  v93 = a3;
  v99 = a1;
  v102 = sub_100053F2C(&qword_1005D8340);
  v4 = __chkstk_darwin(v102);
  v92 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v87 = (char *)&v80 - v6;
  v7 = type metadata accessor for DynamicTypeSize(0);
  v100 = *(_QWORD *)(v7 - 8);
  v101 = v7;
  v8 = __chkstk_darwin(v7);
  v95 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v94 = (char *)&v80 - v10;
  v91 = sub_100053F2C(&qword_1005D8348);
  v11 = __chkstk_darwin(v91);
  v85 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v90 = (uint64_t)&v80 - v13;
  v106 = type metadata accessor for PlainButtonStyle(0);
  v98 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v96 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100053F2C(&qword_1005D8330);
  __chkstk_darwin(v15);
  v17 = (void **)((char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_100053F2C(&qword_1005D8350);
  v97 = *(char **)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_100053F2C(&qword_1005D8358);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v22 = (void **)((char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v89 = sub_100053F2C(&qword_1005D8360);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v86 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(a2 + 40);
  v25 = *(_QWORD *)(a2 + 48);
  v26 = *(unsigned __int8 *)(a2 + 56);
  v27 = type metadata accessor for FMChooseMapViewModel(0);
  v28 = sub_100008000(&qword_1005D8320, type metadata accessor for FMChooseMapViewModel, (uint64_t)&unk_100488160);
  v29 = v25;
  v30 = v27;
  v32 = v94;
  v31 = v95;
  v33 = StateObject.wrappedValue.getter(v24, v29, v26, v30, v28);
  v34 = *(int *)(v15 + 48);
  v35 = v99;
  v36 = (char *)v99 + v34;
  v37 = *v99;
  *v17 = *v99;
  sub_100007464((uint64_t)v35 + v34, (uint64_t)v17 + v34, (uint64_t *)&unk_1005D3470);
  v104 = v17;
  v38 = v37;
  v39 = sub_100053F2C(&qword_1005D8368);
  v40 = sub_100160E2C();
  Button.init(action:label:)(sub_100160E20, v33, sub_100160E24, v103, v39, v40);
  v41 = sub_1000051EC((uint64_t)v17, &qword_1005D8330);
  v42 = v96;
  PlainButtonStyle.init()(v41);
  v43 = sub_10003F774(&qword_1005D8390, &qword_1005D8350, (uint64_t)&protocol conformance descriptor for Button<A>);
  v44 = sub_100008000(&qword_1005D8398, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v99 = v22;
  v45 = v106;
  v82 = v44;
  View.buttonStyle<A>(_:)(v42, v18, v106, v43, v44);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v42, v45);
  v46 = (void (*)(char *, uint64_t))*((_QWORD *)v97 + 1);
  v98 = v18;
  v46(v20, v18);
  v47 = v101;
  v48 = v100;
  v49 = *(void (**)(char *, _QWORD, uint64_t))(v100 + 104);
  v49(v32, enum case for DynamicTypeSize.medium(_:), v101);
  v49(v31, enum case for DynamicTypeSize.xxxLarge(_:), v47);
  v50 = sub_100008000(&qword_1005D83A0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v51 = v47;
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v32, v31, v47, v50);
  if ((result & 1) != 0)
  {
    v53 = *(int *)(v102 + 48);
    v54 = v102;
    v97 = v36;
    v55 = v87;
    v56 = &v87[v53];
    v57 = v48;
    v58 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    v58(v87, v32, v51);
    v81 = v56;
    v58(v56, v31, v51);
    v59 = v92;
    v60 = &v92[*(int *)(v54 + 48)];
    v61 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
    v61(v92, v55, v51);
    v61(v60, v56, v51);
    v96 = (char *)v43;
    v62 = (uint64_t)v85;
    v58(v85, v59, v51);
    v63 = *(void (**)(char *, uint64_t))(v57 + 8);
    v63(v60, v51);
    v64 = &v59[*(int *)(v102 + 48)];
    v58(v59, v55, v51);
    v58(v64, v81, v51);
    v65 = v91;
    v58((char *)(v62 + *(int *)(v91 + 36)), v64, v51);
    v63(v59, v51);
    v66 = v90;
    sub_10005DAA0(v62, v90, &qword_1005D8348);
    v105[0] = v98;
    v105[1] = v106;
    v105[2] = v96;
    v105[3] = v82;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v105, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v68 = sub_10003F774(&qword_1005D83A8, &qword_1005D8348, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v69 = v86;
    v70 = v84;
    v71 = OpaqueTypeConformance2;
    v72 = v99;
    View.dynamicTypeSize<A>(_:)(v66, v84, v65, v71, v68);
    sub_1000051EC(v66, &qword_1005D8348);
    (*(void (**)(void **, uint64_t))(v83 + 8))(v72, v70);
    v73 = type metadata accessor for URL(0);
    LOBYTE(v66) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 48))(v97, 1, v73) == 1;
    KeyPath = swift_getKeyPath(&unk_100485738);
    v75 = swift_allocObject(&unk_100549588, 17, 7);
    *(_BYTE *)(v75 + 16) = v66;
    v76 = v88;
    v77 = v93;
    v78 = v89;
    (*(void (**)(uint64_t, char *, uint64_t))(v88 + 16))(v93, v69, v89);
    v79 = (uint64_t *)(v77 + *(int *)(sub_100053F2C(&qword_1005D8338) + 36));
    *v79 = KeyPath;
    v79[1] = (uint64_t)sub_100161198;
    v79[2] = v75;
    return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v69, v78);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100160B18@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;

  v4 = sub_100053F2C(&qword_1005D8330);
  v5 = __chkstk_darwin(v4);
  v7 = (void **)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(int *)(v5 + 48);
  v9 = (uint64_t)v7 + v8;
  v10 = *a1;
  *v7 = *a1;
  sub_100007464((uint64_t)a1 + v8, (uint64_t)v7 + v8, (uint64_t *)&unk_1005D3470);
  v11 = v10;
  result = sub_1000051EC(v9, (uint64_t *)&unk_1005D3470);
  *(_QWORD *)a2 = v11;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

id sub_100160BC0(uint64_t a1, uint64_t a2)
{
  id v3;
  double v4;
  double v5;

  v3 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v3, "setAttributedText:", a2);
  objc_msgSend(v3, "setNumberOfLines:", 3);
  objc_msgSend(v3, "setTextAlignment:", 4);
  objc_msgSend(v3, "setAdjustsFontForContentSizeCategory:", 1);
  LODWORD(v4) = 1132068864;
  objc_msgSend(v3, "setContentCompressionResistancePriority:forAxis:", 0, v4);
  LODWORD(v5) = 1144750080;
  objc_msgSend(v3, "setContentHuggingPriority:forAxis:", 1, v5);
  return v3;
}

id sub_100160C84(uint64_t a1)
{
  uint64_t *v1;

  return sub_100160BC0(a1, *v1);
}

uint64_t sub_100160C9C(uint64_t a1, char a2)
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)(a1, a2 & 1);
}

id sub_100160CCC(uint64_t a1, int a2, id a3)
{
  id result;
  uint64_t v5;
  uint64_t v6;

  result = objc_msgSend(a3, "systemLayoutSizeFittingSize:", *(double *)a1, 1.79769313e308);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  return result;
}

uint64_t sub_100160D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100161B04();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100160D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100161B04();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100160DB4()
{
  return static View._viewListCount(inputs:)();
}

void sub_100160DCC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100161B04();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_100160DFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10015D010(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100160E04@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100160404(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_100160E24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100160B18(*(void ***)(v1 + 16), a1);
}

unint64_t sub_100160E2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D8370;
  if (!qword_1005D8370)
  {
    v1 = sub_10004058C(&qword_1005D8368);
    sub_100160EB0();
    sub_10003F774(&qword_1005D8380, &qword_1005D8388, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D8370);
  }
  return result;
}

unint64_t sub_100160EB0()
{
  unint64_t result;

  result = qword_1005D8378;
  if (!qword_1005D8378)
  {
    result = swift_getWitnessTable(&unk_100485908, &type metadata for FMChooseMapView.CustomAttributedText);
    atomic_store(result, (unint64_t *)&qword_1005D8378);
  }
  return result;
}

uint64_t sub_100160EF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;
  os_log_type_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D81F0);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007464(v2, (uint64_t)v10, &qword_1005D81F0);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    v13 = *v10;
    v14 = static os_log_type_t.fault.getter();
    v15 = static Log.runtimeIssuesLog.getter();
    v16 = v14;
    if (os_log_type_enabled(v15, v14))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v21[1] = a1;
      v19 = v18;
      v23 = v18;
      *(_DWORD *)v17 = 136315138;
      v22 = sub_100056DA0(0x5463696D616E7944, 0xEF657A6953657079, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v17, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, v13);
    v20 = swift_release(v13);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v20);
  }
}

uint64_t sub_100161138@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100161164(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_100161188()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_100161198(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_1001611B0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (int *)type metadata accessor for FMChooseMapView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  sub_10015C194(*(_QWORD *)(v0 + v4 + 40), *(_QWORD *)(v0 + v4 + 48));
  v7 = (_QWORD *)(v0 + v4 + v1[6]);
  v8 = sub_100053F2C(&qword_1005D81F0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = (_QWORD *)(v6 + v1[7]);
  v11 = sub_100053F2C(&qword_1005D81F8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
  swift_release(*v10);
  if (EnumCaseMultiPayload == 1)
  {
    swift_release(v10[1]);
    v13 = (char *)v10 + *(int *)(sub_100053F2C(&qword_1005D8200) + 32);
    v14 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  v15 = v6 + v1[8];
  v16 = sub_100053F2C(&qword_1005D8208);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  return swift_deallocObject(v0, v5 + v4 + 1, v3 | 7);
}

uint64_t sub_10016130C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMChooseMapView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_100161350()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for FMChooseMapView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_10015E758(v0 + v2, *(_BYTE *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

uint64_t sub_100161388@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10015E7DC(*(_BYTE *)(v1 + 16), a1);
}

unint64_t sub_100161390()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D8438;
  if (!qword_1005D8438)
  {
    v1 = sub_10004058C(&qword_1005D8430);
    sub_100161414();
    sub_100008000(&qword_1005D8450, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D8438);
  }
  return result;
}

unint64_t sub_100161414()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D8440;
  if (!qword_1005D8440)
  {
    v1 = sub_10004058C(&qword_1005D8448);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D8440);
  }
  return result;
}

unint64_t sub_100161480()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D8478;
  if (!qword_1005D8478)
  {
    v1 = sub_10004058C(&qword_1005D8408);
    sub_10003F774(&qword_1005D8470, &qword_1005D8400, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100008000(&qword_1005D8450, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D8478);
  }
  return result;
}

uint64_t sub_10016151C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

void sub_10016152C(double *a1@<X8>)
{
  *a1 = EnvironmentValues.minimumScaleFactor.getter();
}

uint64_t sub_100161554(double *a1)
{
  return EnvironmentValues.minimumScaleFactor.setter(*a1);
}

uint64_t sub_100161578@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1001615A8(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1001615D4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_1001615E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10015F8C0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1001615EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  void *v4;
  void *v5;

  result = qword_1005D8530;
  if (!qword_1005D8530)
  {
    v1 = sub_10004058C(&qword_1005D8520);
    v2 = sub_10004058C(&qword_1005D8538);
    v4 = &type metadata for Image;
    v5 = &protocol witness table for Image;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.symbolVariant(_:)>>, 1);
    v4 = (void *)v2;
    v5 = (void *)OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.symbolVariant(_:)>>, 1);
    sub_10003F774(&qword_1005D8540, &qword_1005D8548, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D8530);
  }
  return result;
}

unint64_t sub_1001616C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D8560;
  if (!qword_1005D8560)
  {
    v1 = sub_10004058C(&qword_1005D8518);
    sub_10003F774(&qword_1005D8568, &qword_1005D8510, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D8560);
  }
  return result;
}

uint64_t sub_100161748@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100161770(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tintColor.setter(v1);
}

uint64_t sub_10016179C()
{
  return sub_10016196C((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_10015FEC0);
}

double sub_1001617A8(char a1)
{
  uint64_t v1;

  return sub_10015FF94(a1, v1);
}

uint64_t sub_1001617B4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1001617D8(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 32))(*a1);
}

uint64_t sub_100161800()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (int *)type metadata accessor for FMChooseMapView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  sub_10015C194(*(_QWORD *)(v0 + v4 + 40), *(_QWORD *)(v0 + v4 + 48));
  v7 = (_QWORD *)(v0 + v4 + v1[6]);
  v8 = sub_100053F2C(&qword_1005D81F0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = (_QWORD *)(v6 + v1[7]);
  v11 = sub_100053F2C(&qword_1005D81F8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
  swift_release(*v10);
  if (EnumCaseMultiPayload == 1)
  {
    swift_release(v10[1]);
    v13 = (char *)v10 + *(int *)(sub_100053F2C(&qword_1005D8200) + 32);
    v14 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  v15 = v6 + v1[8];
  v16 = sub_100053F2C(&qword_1005D8208);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100161960()
{
  return sub_10016196C((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_100160064);
}

uint64_t sub_10016196C(uint64_t (*a1)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMChooseMapView(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v2 + 32) & ~v2));
}

double sub_1001619BC(char a1)
{
  uint64_t v1;

  return sub_100160138(a1, v1);
}

uint64_t sub_1001619CC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

ValueMetadata *type metadata accessor for FMChooseMapView.CustomAttributedText()
{
  return &type metadata for FMChooseMapView.CustomAttributedText;
}

uint64_t getEnumTagSinglePayload for FMCardContainerConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FMCardContainerConfiguration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FMChooseMapViewStyle()
{
  return &type metadata for FMChooseMapViewStyle;
}

unint64_t sub_100161A70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D8598;
  if (!qword_1005D8598)
  {
    v1 = sub_10004058C(&qword_1005D8300);
    sub_10003F774(&qword_1005D85A0, &qword_1005D82E0, (uint64_t)&protocol conformance descriptor for LazyVStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D8598);
  }
  return result;
}

void *sub_100161AF8()
{
  return &protocol witness table for Never;
}

unint64_t sub_100161B04()
{
  unint64_t result;

  result = qword_1005D85A8;
  if (!qword_1005D85A8)
  {
    result = swift_getWitnessTable(&unk_100485878, &type metadata for FMChooseMapView.CustomAttributedText);
    atomic_store(result, (unint64_t *)&qword_1005D85A8);
  }
  return result;
}

uint64_t destroy for FMDeviceImageRequest(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  result = swift_bridgeObjectRelease(a1[5]);
  if (a1[7])
    return swift_release(a1[8]);
  return result;
}

uint64_t initializeWithCopy for FMDeviceImageRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v8 = (_OWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = v9;
    swift_retain(v9);
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v8;
  }
  return a1;
}

uint64_t assignWithCopy for FMDeviceImageRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a1 + 56);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v11 = *(_QWORD *)(a2 + 56);
  if (!v10)
  {
    if (v11)
    {
      v14 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v11;
      *(_QWORD *)(a1 + 64) = v14;
      swift_retain(v14);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v11)
  {
    swift_release(*(_QWORD *)(a1 + 64));
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  swift_retain(v12);
  swift_release(v13);
  return a1;
}

__n128 initializeWithTake for FMDeviceImageRequest(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for FMDeviceImageRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  if (!v11)
  {
    if (v10)
    {
      v14 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v10;
      *(_QWORD *)(a1 + 64) = v14;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v10)
  {
    swift_release(*(_QWORD *)(a1 + 64));
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v12;
  swift_release(v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMDeviceImageRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMDeviceImageRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMDeviceImageRequest()
{
  return &type metadata for FMDeviceImageRequest;
}

double sub_100161EB0@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  __n128 v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  void *object;
  void *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  void *v26;
  void *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  void *v35;
  Swift::String v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  void *v42;
  Swift::String v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  Swift::String v48;
  unint64_t v49;
  double result;
  _QWORD v51[2];
  Swift::String v52;
  unint64_t v53;
  unint64_t v54;

  v2 = v1;
  v51[1] = a1;
  v3 = type metadata accessor for CharacterSet(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = 0xD000000000000037;
  v54 = 0x80000001004AFA20;
  v7 = (void *)v1[1];
  v52._countAndFlagsBits = *v1;
  v52._object = v7;
  v8 = swift_bridgeObjectRetain(v7);
  static CharacterSet.urlPathAllowed.getter(v8);
  v9 = sub_1000517B8();
  v10 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)(v6, &type metadata for String, v9);
  v12 = v11;
  v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v6, v3);
  swift_bridgeObjectRelease(v52._object);
  if (v12)
  {
    v14 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v15 = swift_allocObject(v14, 72, 7);
    *(_OWORD *)(v15 + 16) = xmmword_100481740;
    *(_QWORD *)(v15 + 56) = &type metadata for String;
    *(_QWORD *)(v15 + 64) = sub_100071E88();
    *(_QWORD *)(v15 + 32) = v10;
    *(_QWORD *)(v15 + 40) = v12;
    v16._countAndFlagsBits = String.init(format:_:)(3096613, 0xE300000000000000, v15);
    object = v16._object;
    String.append(_:)(v16);
    swift_bridgeObjectRelease(object);
  }
  v18 = (void *)v2[3];
  v52._countAndFlagsBits = v2[2];
  v52._object = v18;
  v19 = swift_bridgeObjectRetain(v18);
  static CharacterSet.urlPathAllowed.getter(v19);
  v20 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)(v6, &type metadata for String, v9);
  v22 = v21;
  v13(v6, v3);
  swift_bridgeObjectRelease(v52._object);
  if (v22)
  {
    v23 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v24 = swift_allocObject(v23, 72, 7);
    *(_OWORD *)(v24 + 16) = xmmword_100481740;
    *(_QWORD *)(v24 + 56) = &type metadata for String;
    *(_QWORD *)(v24 + 64) = sub_100071E88();
    *(_QWORD *)(v24 + 32) = v20;
    *(_QWORD *)(v24 + 40) = v22;
    v25._countAndFlagsBits = String.init(format:_:)(16421, 0xE200000000000000, v24);
    v26 = v25._object;
    String.append(_:)(v25);
    swift_bridgeObjectRelease(v26);
  }
  v27 = (void *)v2[5];
  if (v27)
  {
    v52._countAndFlagsBits = v2[4];
    v52._object = v27;
    v28 = swift_bridgeObjectRetain(v27);
    static CharacterSet.urlPathAllowed.getter(v28);
    v29 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)(v6, &type metadata for String, v9);
    v31 = v30;
    v13(v6, v3);
    swift_bridgeObjectRelease(v52._object);
    if (v31)
    {
      v32 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
      v33 = swift_allocObject(v32, 72, 7);
      *(_OWORD *)(v33 + 16) = xmmword_100481740;
      *(_QWORD *)(v33 + 56) = &type metadata for String;
      *(_QWORD *)(v33 + 64) = sub_100071E88();
      *(_QWORD *)(v33 + 32) = v29;
      *(_QWORD *)(v33 + 40) = v31;
      v34._countAndFlagsBits = String.init(format:_:)(4203821, 0xE300000000000000, v33);
      v35 = v34._object;
      String.append(_:)(v34);
      swift_bridgeObjectRelease(v35);
    }
  }
  v36._countAndFlagsBits = 47;
  v36._object = (void *)0xE100000000000000;
  String.append(_:)(v36);
  v37 = *((unsigned __int8 *)v2 + 49);
  v38 = 0x656E696C66666FLL;
  v39 = 0xE600000000000000;
  if (v37 == 1)
    v39 = 0xE700000000000000;
  else
    v38 = 0x64656B636F6CLL;
  v40 = v37 == 0;
  if (*((_BYTE *)v2 + 49))
    v41 = v38;
  else
    v41 = 0x656E696C6E6FLL;
  if (v40)
    v42 = (void *)0xE600000000000000;
  else
    v42 = (void *)v39;
  v52._countAndFlagsBits = v41;
  v52._object = v42;
  swift_bridgeObjectRetain(v42);
  v43._countAndFlagsBits = 45;
  v43._object = (void *)0xE100000000000000;
  String.append(_:)(v43);
  swift_bridgeObjectRelease(v42);
  v44 = v52._object;
  String.append(_:)(v52);
  swift_bridgeObjectRelease(v44);
  if (*((_BYTE *)v2 + 48))
    v45 = 0x786F626F666E69;
  else
    v45 = 0x696C656372756F73;
  if (*((_BYTE *)v2 + 48))
    v46 = 0xE700000000000000;
  else
    v46 = 0xEA00000000007473;
  v47 = v46;
  String.append(_:)(*(Swift::String *)&v45);
  swift_bridgeObjectRelease(v46);
  if (qword_1005D1C48 != -1)
    swift_once(&qword_1005D1C48, sub_1001626E8);
  String.append(_:)((Swift::String)xmmword_1005F5018);
  v48._countAndFlagsBits = 1735290926;
  v48._object = (void *)0xE400000000000000;
  String.append(_:)(v48);
  v49 = v54;
  URL.init(string:)(v53, v54);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v49).n128_u64[0];
  return result;
}

uint64_t sub_1001622A8(char *a1, char *a2)
{
  return sub_100196FD0(*a1, *a2);
}

Swift::Int sub_1001622B4()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x786F626F666E69;
  else
    v2 = 0x696C656372756F73;
  if (v1)
    v3 = 0xE700000000000000;
  else
    v3 = 0xEA00000000007473;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100162338(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x786F626F666E69;
  else
    v2 = 0x696C656372756F73;
  if (*v1)
    v3 = 0xE700000000000000;
  else
    v3 = 0xEA00000000007473;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100162398(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x786F626F666E69;
  else
    v3 = 0x696C656372756F73;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xEA00000000007473;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100162418@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10053F848, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100162474(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x696C656372756F73;
  if (*v1)
    v2 = 0x786F626F666E69;
  v3 = 0xEA00000000007473;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1001624B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100196C28(*a1, *a2);
}

Swift::Int sub_1001624C4()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE700000000000000;
  v3 = 0x656E696C66666FLL;
  if (v1 != 1)
  {
    v3 = 0x64656B636F6CLL;
    v2 = 0xE600000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x656E696C6E6FLL;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE600000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_10016255C(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE700000000000000;
  v3 = 0x656E696C66666FLL;
  if (*v1 != 1)
  {
    v3 = 0x64656B636F6CLL;
    v2 = 0xE600000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x656E696C6E6FLL;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE600000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1001625D0(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE700000000000000;
  v4 = 0x656E696C66666FLL;
  if (v2 != 1)
  {
    v4 = 0x64656B636F6CLL;
    v3 = 0xE600000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x656E696C6E6FLL;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE600000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_100162664@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100162C68(*a1);
  *a2 = result;
  return result;
}

void sub_100162690(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x656E696C66666FLL;
  if (v2 != 1)
  {
    v5 = 0x64656B636F6CLL;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x656E696C6E6FLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1001626E8()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v0 = (void *)objc_opt_self(UIScreen);
  v1 = objc_msgSend(v0, "mainScreen");
  objc_msgSend(v1, "scale");
  v3 = v2;

  if (v3 <= 1.0)
  {
    result = 0;
    v10 = 0xE000000000000000;
  }
  else
  {
    v4 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v5 = swift_allocObject(v4, 72, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100481740;
    v6 = objc_msgSend(v0, "mainScreen");
    objc_msgSend(v6, "scale");
    v8 = v7;

    *(_QWORD *)(v5 + 56) = &type metadata for CGFloat;
    *(_QWORD *)(v5 + 64) = sub_1001629FC();
    *(_QWORD *)(v5 + 32) = v8;
    result = String.init(format:_:)(0x7866302E255F5FLL, 0xE700000000000000, v5);
  }
  qword_1005F5018 = result;
  unk_1005F5020 = v10;
  return result;
}

uint64_t sub_1001627F4()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  void *v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  char v20;
  _QWORD v21[2];

  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(60);
  v1._countAndFlagsBits = 60;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  v2._object = (void *)0x8000000100485960;
  v2._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v2);
  v3._countAndFlagsBits = 0x6A624F796E41203ALL;
  v3._object = (void *)0xED0000203A746365;
  String.append(_:)(v3);
  v4 = *(_QWORD *)v0;
  v5 = *(void **)(v0 + 8);
  swift_bridgeObjectRetain(v5);
  v6._countAndFlagsBits = v4;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(v5);
  v7._countAndFlagsBits = 0x203A6C65646F6D20;
  v7._object = (void *)0xE800000000000000;
  String.append(_:)(v7);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain(v9);
  v10._countAndFlagsBits = v8;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v9);
  v11._countAndFlagsBits = 0x203A726F6C6F6320;
  v11._object = (void *)0xE800000000000000;
  String.append(_:)(v11);
  v12 = *(_QWORD *)(v0 + 40);
  if (v12)
  {
    v13 = *(_QWORD *)(v0 + 32);
    v14 = *(void **)(v0 + 40);
  }
  else
  {
    v14 = (void *)0xE300000000000000;
    v13 = 7104878;
  }
  swift_bridgeObjectRetain(v12);
  v15._countAndFlagsBits = v13;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v14);
  v16._countAndFlagsBits = 9071406774580000;
  v16._object = (void *)0xE700000000000000;
  String.append(_:)(v16);
  v20 = *(_BYTE *)(v0 + 48);
  _print_unlocked<A, B>(_:_:)(&v20, v21, &type metadata for FMDeviceImageSize, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v17._countAndFlagsBits = 0x746E616972617620;
  v17._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v17);
  v20 = *(_BYTE *)(v0 + 49);
  _print_unlocked<A, B>(_:_:)(&v20, v21, &type metadata for FMDeviceImageVariant, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v18._countAndFlagsBits = 62;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  return v21[0];
}

unint64_t sub_1001629FC()
{
  unint64_t result;

  result = qword_1005D85B0;
  if (!qword_1005D85B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1005D85B0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMDeviceImageVariant(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100162A8C + 4 * byte_100485965[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100162AC0 + 4 * byte_100485960[v4]))();
}

uint64_t sub_100162AC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100162AC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100162AD0);
  return result;
}

uint64_t sub_100162ADC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100162AE4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100162AE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100162AF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMDeviceImageVariant()
{
  return &type metadata for FMDeviceImageVariant;
}

uint64_t storeEnumTagSinglePayload for FMDeviceImageSize(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100162B58 + 4 * byte_10048596F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100162B8C + 4 * byte_10048596A[v4]))();
}

uint64_t sub_100162B8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100162B94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100162B9CLL);
  return result;
}

uint64_t sub_100162BA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100162BB0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100162BB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100162BBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMDeviceImageSize()
{
  return &type metadata for FMDeviceImageSize;
}

unint64_t sub_100162BDC()
{
  unint64_t result;

  result = qword_1005D85B8;
  if (!qword_1005D85B8)
  {
    result = swift_getWitnessTable(&unk_100485A6C, &type metadata for FMDeviceImageSize);
    atomic_store(result, (unint64_t *)&qword_1005D85B8);
  }
  return result;
}

unint64_t sub_100162C24()
{
  unint64_t result;

  result = qword_1005D85C0;
  if (!qword_1005D85C0)
  {
    result = swift_getWitnessTable(&unk_100485B0C, &type metadata for FMDeviceImageVariant);
    atomic_store(result, (unint64_t *)&qword_1005D85C0);
  }
  return result;
}

unint64_t sub_100162C68(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10053F898, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

id sub_100162CB0()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC6FindMy16FMInfoAnnotation_noImage);
}

_QWORD *sub_100162CC0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v2 = type metadata accessor for FMAnnotationIdentifier(0);
  return OS_dispatch_queue.sync<A>(execute:)(a1, sub_100162F48, &v4, v2);
}

uint64_t sub_100162D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = type metadata accessor for FMIPUnknownItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + OBJC_IVAR____TtC6FindMy16FMInfoAnnotation_unknownItem, v4);
  FMIPUnknownItem.identifier.getter(v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v9 = type metadata accessor for FMAnnotationIdentifier(0);
  return swift_storeEnumTagMultiPayload(a2, v9, 5);
}

id sub_100162DE8()
{
  char *v0;

  return objc_msgSend(v0, "setCoordinate:", *(double *)&v0[OBJC_IVAR____TtC6FindMy16FMInfoAnnotation_tempCoordinate], *(double *)&v0[OBJC_IVAR____TtC6FindMy16FMInfoAnnotation_tempCoordinate + 8]);
}

void sub_100162E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC6FindMy16FMInfoAnnotation_unknownItem;
  v2 = type metadata accessor for FMIPUnknownItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy16FMInfoAnnotation_icon + 8));
}

id sub_100162E88()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMInfoAnnotation(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100162F40()
{
  return type metadata accessor for FMInfoAnnotation(0);
}

uint64_t sub_100162F48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100162D24(*(_QWORD *)(v1 + 16), a1);
}

BOOL sub_100162F60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_100162F78(uint64_t a1, uint64_t a2, char a3, void (*a4)(char *, uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *isa;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  double v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  double v64;
  id v65;
  uint8_t *v66;
  id v67;
  char *v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t aBlock;
  uint64_t v73;
  void (*v74)(uint64_t, void *);
  void *v75;
  uint64_t (*v76)();
  uint64_t v77;

  v69 = a4;
  v70 = a5;
  v9 = type metadata accessor for FMIPActionStatus(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  __chkstk_darwin(v13);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v68 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    goto LABEL_4;
  UUID.init(uuidString:)(a1, a2, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1000DC154((uint64_t)v15);
LABEL_4:
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for FMIPActionStatus.error(_:), v9);
    v20 = sub_100164794();
    v21 = swift_allocError(&type metadata for FindingExperienceCoordinatorError, v20, 0, 0);
    *v22 = 1;
    v69(v12, v21);
    swift_errorRelease(v21);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v24 = v68;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v68, v15, v16);
  v25 = *(void **)(v5 + OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_spFindingSession);
  if (v25)
  {
    v26 = qword_1005D1DE8;
    v67 = v25;
    if ((a3 & 1) != 0)
    {
      if (v26 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v27 = type metadata accessor for Logger(0);
      sub_100056D88(v27, (uint64_t)qword_1005F5748);
      v28 = swift_bridgeObjectRetain_n(a2, 2);
      v29 = Logger.logObject.getter(v28);
      v30 = static os_log_type_t.default.getter(v29);
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc(12, -1);
        v32 = swift_slowAlloc(32, -1);
        v71 = v32;
        aBlock = a1;
        *(_DWORD *)v31 = 136315138;
        v66 = v31 + 4;
        v73 = a2;
        swift_bridgeObjectRetain(a2);
        v33 = sub_100053F2C(&qword_1005D2BD0);
        v34 = String.init<A>(describing:)(&aBlock, v33);
        v36 = v35;
        aBlock = sub_100056DA0(v34, v35, &v71);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v73);
        swift_bridgeObjectRelease_n(a2, 2);
        swift_bridgeObjectRelease(v36);
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMFindingExperienceCoordinatorActions: Perform start fast advt action %s", v31, 0xCu);
        swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v32, -1, -1);
        v37 = v31;
        v24 = v68;
        swift_slowDealloc(v37, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a2, 2);
      }
      isa = UUID._bridgeToObjectiveC()().super.isa;
      v54 = swift_allocObject(&unk_100549C30, 32, 7);
      v55 = v70;
      *(_QWORD *)(v54 + 16) = v69;
      *(_QWORD *)(v54 + 24) = v55;
      v76 = sub_10016511C;
      v77 = v54;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v73 = 1107296256;
      v74 = sub_1000063D8;
      v75 = &unk_100549C48;
      v56 = _Block_copy(&aBlock);
      v57 = v77;
      swift_retain(v55);
      *(_QWORD *)&v58 = swift_release(v57).n128_u64[0];
      v59 = v67;
      objc_msgSend(v67, "startFastAdvertisingForBeacon:completion:", isa, v56, v58);
      _Block_release(v56);

    }
    else
    {
      if (v26 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v43 = type metadata accessor for Logger(0);
      sub_100056D88(v43, (uint64_t)qword_1005F5748);
      v44 = swift_bridgeObjectRetain_n(a2, 2);
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.default.getter(v45);
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc(12, -1);
        v48 = swift_slowAlloc(32, -1);
        v71 = v48;
        aBlock = a1;
        *(_DWORD *)v47 = 136315138;
        v66 = v47 + 4;
        v73 = a2;
        swift_bridgeObjectRetain(a2);
        v49 = sub_100053F2C(&qword_1005D2BD0);
        v50 = String.init<A>(describing:)(&aBlock, v49);
        v52 = v51;
        aBlock = sub_100056DA0(v50, v51, &v71);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v73);
        swift_bridgeObjectRelease_n(a2, 2);
        swift_bridgeObjectRelease(v52);
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "FMFindingExperienceCoordinatorActions: Perform stop fast advt action %s", v47, 0xCu);
        swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v48, -1, -1);
        v53 = v47;
        v24 = v68;
        swift_slowDealloc(v53, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a2, 2);
      }
      isa = UUID._bridgeToObjectiveC()().super.isa;
      v60 = swift_allocObject(&unk_100549BE0, 32, 7);
      v61 = v70;
      *(_QWORD *)(v60 + 16) = v69;
      *(_QWORD *)(v60 + 24) = v61;
      v76 = sub_100165118;
      v77 = v60;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v73 = 1107296256;
      v74 = sub_1000063D8;
      v75 = &unk_100549BF8;
      v62 = _Block_copy(&aBlock);
      v63 = v77;
      swift_retain(v61);
      *(_QWORD *)&v64 = swift_release(v63).n128_u64[0];
      v65 = v67;
      objc_msgSend(v67, "stopFastAdvertisingForBeacon:completion:", isa, v62, v64);

      _Block_release(v62);
    }
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v38 = type metadata accessor for Logger(0);
    v39 = sub_100056D88(v38, (uint64_t)qword_1005F5748);
    isa = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.default.getter(isa);
    if (os_log_type_enabled(isa, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, isa, v41, "FMFindingExperienceCoordinatorActions: Trying to perform start fast advt but spFindingSession is nil", v42, 2u);
      swift_slowDealloc(v42, -1, -1);
    }
  }

  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, v16);
}

void sub_100163660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  void *v29;
  id v30;
  NSUUID v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock[5];
  uint64_t v43;

  v4 = v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100056D88(v12, (uint64_t)qword_1005F5748);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v40 = v13;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(12, -1);
    v39 = a3;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc(32, -1);
    v37[0] = v4;
    v20 = v19;
    aBlock[0] = v19;
    v37[1] = a1;
    v38 = a2;
    *(_DWORD *)v18 = 136315138;
    v21 = sub_100163FB0();
    v22 = dispatch thunk of CustomStringConvertible.description.getter(v8, v21);
    v24 = v23;
    v41 = sub_100056DA0(v22, v23, aBlock);
    a2 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, aBlock);
    v25 = swift_bridgeObjectRelease(v24);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v25);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMFindingExperienceCoordinatorActions: Perform Start Finding Action %s", v18, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    v26 = v20;
    v4 = v37[0];
    swift_slowDealloc(v26, -1, -1);
    v27 = v18;
    a3 = v39;
    swift_slowDealloc(v27, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

  v29 = *(void **)(v4 + OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_spFindingSession);
  if (v29)
  {
    v30 = v29;
    v31.super.isa = UUID._bridgeToObjectiveC()().super.isa;
    v32 = swift_allocObject(&unk_100549AF0, 32, 7);
    *(_QWORD *)(v32 + 16) = a2;
    *(_QWORD *)(v32 + 24) = a3;
    aBlock[4] = (uint64_t)sub_100163FF8;
    v43 = v32;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000063D8;
    aBlock[3] = (uint64_t)&unk_100549B08;
    v33 = _Block_copy(aBlock);
    v34 = v43;
    swift_retain(a3);
    objc_msgSend(v30, "startFindingBeacon:completion:", v31.super.isa, v33, swift_release(v34).n128_f64[0]);
    _Block_release(v33);

  }
  else
  {
    v31.super.isa = (Class)Logger.logObject.getter(v28);
    v35 = static os_log_type_t.default.getter(v31.super.isa);
    if (os_log_type_enabled((os_log_t)v31.super.isa, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v31.super.isa, v35, "FMFindingExperienceCoordinatorActions: Trying to perform start finding but spFindingSession is nil", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }
  }

}

void sub_1001639AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  void *v29;
  id v30;
  NSUUID v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock[5];
  uint64_t v43;

  v4 = v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100056D88(v12, (uint64_t)qword_1005F5748);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v40 = v13;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(12, -1);
    v39 = a3;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc(32, -1);
    v37[0] = v4;
    v20 = v19;
    aBlock[0] = v19;
    v37[1] = a1;
    v38 = a2;
    *(_DWORD *)v18 = 136315138;
    v21 = sub_100163FB0();
    v22 = dispatch thunk of CustomStringConvertible.description.getter(v8, v21);
    v24 = v23;
    v41 = sub_100056DA0(v22, v23, aBlock);
    a2 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, aBlock);
    v25 = swift_bridgeObjectRelease(v24);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v25);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMFindingExperienceCoordinatorActions: Perform Stop Finding Action %s", v18, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    v26 = v20;
    v4 = v37[0];
    swift_slowDealloc(v26, -1, -1);
    v27 = v18;
    a3 = v39;
    swift_slowDealloc(v27, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

  v29 = *(void **)(v4 + OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_spFindingSession);
  if (v29)
  {
    v30 = v29;
    v31.super.isa = UUID._bridgeToObjectiveC()().super.isa;
    v32 = swift_allocObject(&unk_100549AA0, 32, 7);
    *(_QWORD *)(v32 + 16) = a2;
    *(_QWORD *)(v32 + 24) = a3;
    aBlock[4] = (uint64_t)sub_100163F90;
    v43 = v32;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000063D8;
    aBlock[3] = (uint64_t)&unk_100549AB8;
    v33 = _Block_copy(aBlock);
    v34 = v43;
    swift_retain(a3);
    objc_msgSend(v30, "stopFindingBeacon:completion:", v31.super.isa, v33, swift_release(v34).n128_f64[0]);
    _Block_release(v33);

  }
  else
  {
    v31.super.isa = (Class)Logger.logObject.getter(v28);
    v35 = static os_log_type_t.default.getter(v31.super.isa);
    if (os_log_type_enabled((os_log_t)v31.super.isa, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v31.super.isa, v35, "FMFindingExperienceCoordinatorActions: Trying to perform stop finding but spFindingSession is nil", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }
  }

}

uint64_t sub_100163CF8(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, const char *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int *v21;
  uint8_t *v23;
  const char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v26 = a2;
  v6 = type metadata accessor for FMIPActionStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  sub_100056D88(v10, (uint64_t)qword_1005F5748);
  swift_errorRetain(a1);
  v11 = swift_errorRetain(a1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v25 = v7;
    v14 = swift_slowAlloc(12, -1);
    v24 = a4;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc(32, -1);
    v27 = a1;
    v28 = v16;
    *(_DWORD *)v15 = 136315138;
    v23 = v15 + 4;
    swift_errorRetain(a1);
    v17 = sub_100053F2C(&qword_1005D7E40);
    v18 = String.init<A>(describing:)(&v27, v17);
    v20 = v19;
    v27 = sub_100056DA0(v18, v19, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28);
    v7 = v25;
    swift_bridgeObjectRelease(v20);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, v24, v15, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  v21 = (unsigned int *)&enum case for FMIPActionStatus.success(_:);
  if (a1)
    v21 = (unsigned int *)&enum case for FMIPActionStatus.error(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *v21, v6);
  v26(v9, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100163F6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100163F90(uint64_t a1)
{
  uint64_t v1;

  return sub_100163CF8(a1, *(void (**)(char *, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), "FMFindingExperienceCoordinatorActions: Stop Finding Action completed. Error? %s");
}

unint64_t sub_100163FB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005DA7C0;
  if (!qword_1005DA7C0)
  {
    v1 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&qword_1005DA7C0);
  }
  return result;
}

uint64_t sub_100163FF8(uint64_t a1)
{
  uint64_t v1;

  return sub_100163CF8(a1, *(void (**)(char *, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), "FMFindingExperienceCoordinatorActions: Start Finding Action completed. Error? %s");
}

double sub_100164018(uint64_t a1, uint64_t a2, int a3, char *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  BOOL v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint8_t *v60;
  NSUUID v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  double result;
  uint8_t *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t aBlock;
  uint64_t v76;
  void (*v77)(uint64_t, void *);
  void *v78;
  uint64_t (*v79)(uint64_t);
  uint64_t v80;

  v73 = a4;
  LODWORD(v71) = a3;
  v8 = type metadata accessor for FMIPActionStatus(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  __chkstk_darwin(v12);
  v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    swift_retain(a5);
    v21 = a5;
    goto LABEL_5;
  }
  v19 = v18;
  v72 = a5;
  swift_retain(a5);
  UUID.init(uuidString:)(a1, a2, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1000DC154((uint64_t)v14);
    v21 = v72;
LABEL_5:
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for FMIPActionStatus.error(_:), v8);
    v22 = sub_100164794();
    v23 = swift_allocError(&type metadata for FindingExperienceCoordinatorError, v22, 0, 0);
    *v24 = 1;
    sub_1001C80A4((uint64_t)v11, v23, v21);
    swift_errorRelease(v23);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    goto LABEL_26;
  }
  v25 = a1;
  v26 = a2;
  v27 = v19;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v14, v15);
  v28 = *(void **)&v73[OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_spFindingSession];
  if (v28)
  {
    v29 = qword_1005D1DE8;
    v30 = v28;
    v70 = v16;
    if ((v71 & 1) != 0)
    {
      if (v29 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v31 = type metadata accessor for Logger(0);
      sub_100056D88(v31, (uint64_t)qword_1005F5748);
      v32 = v26;
      v33 = swift_bridgeObjectRetain_n(v26, 2);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.default.getter(v34);
      if (os_log_type_enabled(v34, v35))
      {
        v73 = v30;
        v36 = (uint8_t *)swift_slowAlloc(12, -1);
        v37 = swift_slowAlloc(32, -1);
        v74 = v37;
        aBlock = v25;
        v71 = v27;
        *(_DWORD *)v36 = 136315138;
        v69 = v36 + 4;
        v76 = v32;
        swift_bridgeObjectRetain(v32);
        v38 = sub_100053F2C(&qword_1005D2BD0);
        v39 = String.init<A>(describing:)(&aBlock, v38);
        v41 = v40;
        aBlock = sub_100056DA0(v39, v40, &v74);
        v30 = v73;
        v27 = v71;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v76);
        swift_bridgeObjectRelease_n(v32, 2);
        swift_bridgeObjectRelease(v41);
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "FMFindingExperienceCoordinatorActions: Perform start fast advt action %s", v36, 0xCu);
        swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v37, -1, -1);
        swift_slowDealloc(v36, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v26, 2);
      }
      v61.super.isa = UUID._bridgeToObjectiveC()().super.isa;
      v62 = swift_allocObject(&unk_100549B90, 32, 7);
      v21 = v72;
      *(_QWORD *)(v62 + 16) = sub_10016478C;
      *(_QWORD *)(v62 + 24) = v21;
      v79 = sub_1001647F8;
      v80 = v62;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v76 = 1107296256;
      v77 = sub_1000063D8;
      v78 = &unk_100549BA8;
      v63 = _Block_copy(&aBlock);
      v64 = v80;
      swift_retain(v21);
      objc_msgSend(v30, "startFastAdvertisingForBeacon:completion:", v61.super.isa, v63, swift_release(v64).n128_f64[0]);
      _Block_release(v63);

    }
    else
    {
      if (v29 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v49 = type metadata accessor for Logger(0);
      sub_100056D88(v49, (uint64_t)qword_1005F5748);
      v50 = swift_bridgeObjectRetain_n(v26, 2);
      v51 = Logger.logObject.getter(v50);
      v52 = static os_log_type_t.default.getter(v51);
      if (os_log_type_enabled(v51, v52))
      {
        v73 = v30;
        v53 = swift_slowAlloc(12, -1);
        v71 = v19;
        v54 = (uint8_t *)v53;
        v55 = swift_slowAlloc(32, -1);
        v74 = v55;
        aBlock = v25;
        *(_DWORD *)v54 = 136315138;
        v69 = v54 + 4;
        v76 = v26;
        swift_bridgeObjectRetain(v26);
        v56 = sub_100053F2C(&qword_1005D2BD0);
        v57 = String.init<A>(describing:)(&aBlock, v56);
        v59 = v58;
        aBlock = sub_100056DA0(v57, v58, &v74);
        v30 = v73;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v76);
        swift_bridgeObjectRelease_n(v26, 2);
        swift_bridgeObjectRelease(v59);
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "FMFindingExperienceCoordinatorActions: Perform stop fast advt action %s", v54, 0xCu);
        swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v55, -1, -1);
        v60 = v54;
        v27 = v71;
        swift_slowDealloc(v60, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v26, 2);
      }
      v61.super.isa = UUID._bridgeToObjectiveC()().super.isa;
      v65 = swift_allocObject(&unk_100549B40, 32, 7);
      v21 = v72;
      *(_QWORD *)(v65 + 16) = sub_10016478C;
      *(_QWORD *)(v65 + 24) = v21;
      v79 = sub_1001647D8;
      v80 = v65;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v76 = 1107296256;
      v77 = sub_1000063D8;
      v78 = &unk_100549B58;
      v66 = _Block_copy(&aBlock);
      v67 = v80;
      swift_retain(v21);
      objc_msgSend(v30, "stopFastAdvertisingForBeacon:completion:", v61.super.isa, v66, swift_release(v67).n128_f64[0]);

      _Block_release(v66);
    }

    (*(void (**)(char *, uint64_t))(v70 + 8))(v27, v15);
  }
  else
  {
    v42 = v16;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v43 = type metadata accessor for Logger(0);
    v44 = sub_100056D88(v43, (uint64_t)qword_1005F5748);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.default.getter(v45);
    v47 = os_log_type_enabled(v45, v46);
    v21 = v72;
    if (v47)
    {
      v48 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "FMFindingExperienceCoordinatorActions: Trying to perform start fast advt but spFindingSession is nil", v48, 2u);
      swift_slowDealloc(v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v42 + 8))(v27, v15);
  }
LABEL_26:
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

void sub_10016478C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001C80A4(a1, a2, v2);
}

unint64_t sub_100164794()
{
  unint64_t result;

  result = qword_1005D8618;
  if (!qword_1005D8618)
  {
    result = swift_getWitnessTable(&unk_100485C4C, &type metadata for FindingExperienceCoordinatorError);
    atomic_store(result, (unint64_t *)&qword_1005D8618);
  }
  return result;
}

uint64_t sub_1001647D8(uint64_t a1)
{
  uint64_t v1;

  return sub_100163CF8(a1, *(void (**)(char *, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), "FMFindingExperienceCoordinatorActions: Perform stop fast advt action. Error? %s");
}

uint64_t sub_1001647F8(uint64_t a1)
{
  uint64_t v1;

  return sub_100163CF8(a1, *(void (**)(char *, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), "FMFindingExperienceCoordinatorActions: Perform start fast advt action. Error? %s");
}

double sub_100164818(uint64_t a1, uint64_t a2, int a3, char *a4, uint64_t a5, unint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  __n128 v22;
  unint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  char *v27;
  void *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *isa;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  double result;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t aBlock;
  uint64_t v77;
  void (*v78)(uint64_t, void *);
  void *v79;
  uint64_t (*v80)();
  uint64_t v81;

  v72 = a4;
  LODWORD(v71) = a3;
  v10 = type metadata accessor for FMIPActionStatus(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  __chkstk_darwin(v14);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for UUID(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v73 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_allocObject(&unk_100549C80, 32, 7);
  *(_QWORD *)(v20 + 16) = a5;
  *(_QWORD *)(v20 + 24) = a6;
  v74 = v20;
  if (!a2)
  {
    v22 = swift_bridgeObjectRetain(a6);
    goto LABEL_5;
  }
  v21 = swift_bridgeObjectRetain(a6);
  v70 = a1;
  UUID.init(uuidString:)(a1, a2, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1000DC154((uint64_t)v16);
LABEL_5:
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v11 + 104))(v13, enum case for FMIPActionStatus.error(_:), v10, v22);
    v23 = sub_100164794();
    v24 = swift_allocError(&type metadata for FindingExperienceCoordinatorError, v23, 0, 0);
    *v25 = 1;
    sub_1003A990C((uint64_t)v13, v24, a5, a6);
    swift_errorRelease(v24);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v26 = v74;
    goto LABEL_25;
  }
  v27 = v73;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v73, v16, v17);
  v28 = *(void **)&v72[OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_spFindingSession];
  if (v28)
  {
    v29 = qword_1005D1DE8;
    v30 = v28;
    if ((v71 & 1) != 0)
    {
      if (v29 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v31 = type metadata accessor for Logger(0);
      sub_100056D88(v31, (uint64_t)qword_1005F5748);
      v32 = swift_bridgeObjectRetain_n(a2, 2);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.default.getter(v33);
      if (os_log_type_enabled(v33, v34))
      {
        v71 = v18;
        v35 = (uint8_t *)swift_slowAlloc(12, -1);
        v36 = swift_slowAlloc(32, -1);
        v72 = v30;
        v37 = v36;
        *(_DWORD *)v35 = 136315138;
        v75 = v36;
        aBlock = v70;
        v77 = a2;
        swift_bridgeObjectRetain(a2);
        v38 = sub_100053F2C(&qword_1005D2BD0);
        v39 = String.init<A>(describing:)(&aBlock, v38);
        v41 = v40;
        aBlock = sub_100056DA0(v39, v40, &v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v77);
        swift_bridgeObjectRelease_n(a2, 2);
        v42 = v41;
        v18 = v71;
        swift_bridgeObjectRelease(v42);
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "FMFindingExperienceCoordinatorActions: Perform start fast advt action %s", v35, 0xCu);
        swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
        v43 = v37;
        v30 = v72;
        swift_slowDealloc(v43, -1, -1);
        swift_slowDealloc(v35, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a2, 2);
      }
      isa = UUID._bridgeToObjectiveC()().super.isa;
      v63 = swift_allocObject(&unk_100549CF8, 32, 7);
      v26 = v74;
      *(_QWORD *)(v63 + 16) = sub_100164FC0;
      *(_QWORD *)(v63 + 24) = v26;
      v80 = sub_10016511C;
      v81 = v63;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v77 = 1107296256;
      v78 = sub_1000063D8;
      v79 = &unk_100549D10;
      v64 = _Block_copy(&aBlock);
      v65 = v81;
      swift_retain(v26);
      objc_msgSend(v30, "startFastAdvertisingForBeacon:completion:", isa, v64, swift_release(v65).n128_f64[0]);
      _Block_release(v64);

    }
    else
    {
      if (v29 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v49 = type metadata accessor for Logger(0);
      sub_100056D88(v49, (uint64_t)qword_1005F5748);
      v50 = swift_bridgeObjectRetain_n(a2, 2);
      v51 = Logger.logObject.getter(v50);
      v52 = static os_log_type_t.default.getter(v51);
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc(12, -1);
        v54 = swift_slowAlloc(32, -1);
        v72 = v30;
        v55 = v54;
        *(_DWORD *)v53 = 136315138;
        v75 = v54;
        aBlock = v70;
        v77 = a2;
        swift_bridgeObjectRetain(a2);
        v56 = sub_100053F2C(&qword_1005D2BD0);
        v57 = String.init<A>(describing:)(&aBlock, v56);
        v58 = v18;
        v60 = v59;
        aBlock = sub_100056DA0(v57, v59, &v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v77);
        swift_bridgeObjectRelease_n(a2, 2);
        v61 = v60;
        v18 = v58;
        v27 = v73;
        swift_bridgeObjectRelease(v61);
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "FMFindingExperienceCoordinatorActions: Perform stop fast advt action %s", v53, 0xCu);
        swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
        v62 = v55;
        v30 = v72;
        swift_slowDealloc(v62, -1, -1);
        swift_slowDealloc(v53, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a2, 2);
      }
      isa = UUID._bridgeToObjectiveC()().super.isa;
      v66 = swift_allocObject(&unk_100549CA8, 32, 7);
      v26 = v74;
      *(_QWORD *)(v66 + 16) = sub_100164FC0;
      *(_QWORD *)(v66 + 24) = v26;
      v80 = sub_100165118;
      v81 = v66;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v77 = 1107296256;
      v78 = sub_1000063D8;
      v79 = &unk_100549CC0;
      v67 = _Block_copy(&aBlock);
      v68 = v81;
      swift_retain(v26);
      objc_msgSend(v30, "stopFastAdvertisingForBeacon:completion:", isa, v67, swift_release(v68).n128_f64[0]);

      _Block_release(v67);
    }
  }
  else
  {
    v26 = v74;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v44 = type metadata accessor for Logger(0);
    v45 = sub_100056D88(v44, (uint64_t)qword_1005F5748);
    isa = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.default.getter(isa);
    if (os_log_type_enabled(isa, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, isa, v47, "FMFindingExperienceCoordinatorActions: Trying to perform start fast advt but spFindingSession is nil", v48, 2u);
      swift_slowDealloc(v48, -1, -1);
    }
  }

  (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v17);
LABEL_25:
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

uint64_t sub_100164F9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100164FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003A990C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t storeEnumTagSinglePayload for FindingExperienceCoordinatorError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100165014 + 4 * byte_100485BA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100165048 + 4 * byte_100485BA0[v4]))();
}

uint64_t sub_100165048(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100165050(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100165058);
  return result;
}

uint64_t sub_100165064(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10016506CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100165070(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100165078(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FindingExperienceCoordinatorError()
{
  return &type metadata for FindingExperienceCoordinatorError;
}

unint64_t sub_100165098()
{
  unint64_t result;

  result = qword_1005D8620;
  if (!qword_1005D8620)
  {
    result = swift_getWitnessTable(&unk_100485C24, &type metadata for FindingExperienceCoordinatorError);
    atomic_store(result, (unint64_t *)&qword_1005D8620);
  }
  return result;
}

void sub_100165120()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for FMAccessoryDiscoveryVideoCard();
  objc_msgSendSuper2(&v5, "viewDidLoad");
  v1 = *(char **)&v0[OBJC_IVAR____TtC6FindMy29FMAccessoryDiscoveryVideoCard_videoPlayer];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = *(void **)&v1[OBJC_IVAR____TtC6FindMy14FMAVPlayerView_assetBundle];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy14FMAVPlayerView_assetBundle] = v2;

  v4 = objc_msgSend(v0, "contentView");
  objc_msgSend(v4, "addSubview:", v1);

  objc_msgSend(v0, "setDismissalType:", 3);
  sub_100165234();
}

void sub_100165234()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  Class isa;

  v1 = v0;
  v29 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = sub_100053F2C(&qword_1005D2F10);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1004820D0;
  v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMAccessoryDiscoveryVideoCard_videoPlayer];
  v5 = objc_msgSend(v4, "leadingAnchor");
  v6 = objc_msgSend(v1, "contentView");
  v7 = objc_msgSend(v6, "mainContentGuide");

  v8 = objc_msgSend(v7, "leadingAnchor");
  v9 = objc_msgSend(v5, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v3 + 32) = v9;
  v10 = objc_msgSend(v4, "trailingAnchor");
  v11 = objc_msgSend(v1, "contentView");
  v12 = objc_msgSend(v11, "mainContentGuide");

  v13 = objc_msgSend(v12, "trailingAnchor");
  v14 = objc_msgSend(v10, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v3 + 40) = v14;
  v15 = objc_msgSend(v4, "topAnchor");
  v16 = objc_msgSend(v1, "contentView");
  v17 = objc_msgSend(v16, "mainContentGuide");

  v18 = objc_msgSend(v17, "topAnchor");
  v19 = objc_msgSend(v15, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v3 + 48) = v19;
  v20 = objc_msgSend(v4, "bottomAnchor");
  v21 = objc_msgSend(v1, "contentView");
  v22 = objc_msgSend(v21, "mainContentGuide");

  v23 = objc_msgSend(v22, "bottomAnchor");
  v24 = objc_msgSend(v20, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v3 + 56) = v24;
  v25 = objc_msgSend(v4, "heightAnchor");
  v26 = objc_msgSend(v4, "widthAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:multiplier:", v26, 0.75);

  *(_QWORD *)(v3 + 64) = v27;
  specialized Array._endMutation()(v28);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v29, "activateConstraints:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

}

id sub_100165650()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryDiscoveryVideoCard();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMAccessoryDiscoveryVideoCard()
{
  return objc_opt_self(_TtC6FindMy29FMAccessoryDiscoveryVideoCard);
}

void sub_1001656B0()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  Class isa;

  if (v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_isActionButtonHidden] == 1)
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_actionButton], "removeFromSuperview");
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_buttonSeparator], "removeFromSuperview");
    v1 = (void *)objc_opt_self(NSLayoutConstraint);
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_actionButtonShowingConstraints];
    sub_100048C64();
    swift_bridgeObjectRetain(v2);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v1, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v2).n128_f64[0]);
  }
  else
  {
    objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_actionButton]);
    objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_buttonSeparator]);
    v3 = (void *)objc_opt_self(NSLayoutConstraint);
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_actionButtonShowingConstraints];
    sub_100048C64();
    swift_bridgeObjectRetain(v4);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);
  }

}

_QWORD *sub_1001657F0(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  NSString v16;
  _QWORD *v17;
  objc_super v19;

  v4 = OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_sectionLabel;
  v5 = objc_allocWithZone((Class)UILabel);
  v6 = v2;
  *(_QWORD *)&v2[v4] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_contentStackView;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v8 = OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_actionButton;
  *(_QWORD *)&v6[v8] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v9 = OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_buttonSeparator;
  *(_QWORD *)&v6[v9] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_contentView;
  *(_QWORD *)&v6[v10] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_actionButtonShowingConstraints] = _swiftEmptyArrayStorage;
  v6[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_isActionEnabled] = 1;
  v6[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_isActionButtonHidden] = 1;

  v19.receiver = v6;
  v19.super_class = (Class)type metadata accessor for FMPlatterButtonGroupView();
  v11 = objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = v11;
  if (a2)
  {
    v13 = *(void **)((char *)v11 + OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_actionButton);
    v14 = v11;
    v15 = v13;
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setTitle:forState:", v16, 0, swift_bridgeObjectRelease(a2).n128_f64[0]);

  }
  else
  {
    v17 = v11;
  }
  (*(void (**)(_QWORD *))((swift_isaMask & *v12) + 0xE0))(v17);
  sub_100165FD8();

  return v12;
}

void sub_1001659F8()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  char **v5;
  id v6;
  id v7;
  id v8;
  id v9;
  double v10;
  double v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  double v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  void *v38;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_contentView];
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceStyle");
  v4 = (void *)objc_opt_self(UIColor);
  v5 = &selRef_tertiarySystemFillColor;
  if (v3 != (id)2)
    v5 = &selRef_whiteColor;
  v6 = objc_msgSend(v4, *v5);

  objc_msgSend(v1, "setBackgroundColor:", v6);
  v7 = objc_msgSend(v1, "layer");
  objc_msgSend(v7, "setShouldRasterize:", 1);

  v8 = objc_msgSend(v1, "layer");
  v9 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v9, "scale");
  v11 = v10;

  objc_msgSend(v8, "setRasterizationScale:", v11);
  v12 = objc_msgSend(v1, "layer");
  objc_msgSend(v12, "setCornerRadius:", _UISheetCornerRadius);

  v13 = objc_msgSend(v1, "layer");
  objc_msgSend(v13, "setCornerCurve:", kCACornerCurveContinuous);

  v14 = objc_msgSend(v1, "layer");
  objc_msgSend(v14, "setMasksToBounds:", 0);

  v15 = objc_msgSend(v1, "layer");
  v16 = (void *)objc_opt_self(UIColor);
  v17 = objc_msgSend(v16, "blackColor");
  v18 = objc_msgSend(v17, "CGColor");

  objc_msgSend(v15, "setShadowColor:", v18);
  v19 = objc_msgSend(v1, "layer");
  LODWORD(v20) = 1031127695;
  objc_msgSend(v19, "setShadowOpacity:", v20);

  v21 = objc_msgSend(v1, "layer");
  objc_msgSend(v21, "setShadowRadius:", 16.0);

  v22 = objc_msgSend(v1, "layer");
  objc_msgSend(v22, "setShadowOffset:", 0.0, 0.0);

  v38 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_contentStackView];
  objc_msgSend(v38, "setAxis:", 1);
  v23 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_sectionLabel];
  v24 = (void *)objc_opt_self(UIFont);
  v25 = objc_msgSend(v24, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v23, "setFont:", v25);

  objc_msgSend(v23, "setNumberOfLines:", 0);
  v26 = objc_msgSend(v16, "secondaryLabelColor");
  objc_msgSend(v23, "setTextColor:", v26);

  objc_msgSend(v23, "setAdjustsFontForContentSizeCategory:", 1);
  v27 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_actionButton];
  v28 = objc_msgSend(v27, "titleLabel");
  if (v28)
  {
    v29 = v28;
    v30 = objc_msgSend(v24, "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v29, "setFont:", v30);

  }
  v31 = objc_msgSend(v27, "titleLabel");
  objc_msgSend(v31, "setAdjustsFontForContentSizeCategory:", 1);

  v32 = objc_msgSend(v16, "clearColor");
  objc_msgSend(v27, "setBackgroundColor:", v32);

  objc_msgSend(v27, "setContentHorizontalAlignment:", 4);
  objc_msgSend(v27, "addTarget:action:forControlEvents:", v0, "handleAction", 64);
  v33 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_buttonSeparator];
  v34 = objc_msgSend(v16, "quaternaryLabelColor");
  objc_msgSend(v33, "setBackgroundColor:", v34);

  objc_msgSend(v0, "addSubview:", v23);
  objc_msgSend(v0, "addSubview:", v1);
  objc_msgSend(v0, "addSubview:", v38);
  v35 = objc_msgSend(v27, "titleLabel");
  if (v35)
  {
    v36 = v35;
    v37 = objc_msgSend(v35, "text");

    if (v37)
    {

      objc_msgSend(v0, "addSubview:", v27);
    }
  }
}

void sub_100165FD8()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  Class v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  Class v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  id v65;
  char v66;
  unint64_t v67;
  id v68;
  id v69;

  v1 = v0;
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v2 = *(double *)&qword_1005F5978;
  v3 = *(double *)&qword_1005F5978;
  if (qword_1005D20B8 != -1)
  {
    swift_once(&qword_1005D20B8, sub_10005E610);
    v3 = *(double *)&qword_1005F5978;
  }
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_buttonSeparator], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v68 = *(id *)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_actionButton];
  objc_msgSend(v68, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_sectionLabel];
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_contentView];
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_contentStackView];
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v69 = (id)objc_opt_self(NSLayoutConstraint);
  v7 = sub_100053F2C(&qword_1005D2F10);
  v8 = swift_allocObject(v7, 56, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1004820C0;
  v9 = objc_msgSend(v4, "topAnchor");
  v10 = objc_msgSend(v1, "topAnchor");
  if (qword_1005D2090 != -1)
    swift_once(&qword_1005D2090, sub_100417424);
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, *((double *)&xmmword_1005F6080 + 1));

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(v4, "leadingAnchor");
  v13 = objc_msgSend(v1, "leadingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v8 + 40) = v14;
  v15 = objc_msgSend(v4, "trailingAnchor");
  v16 = objc_msgSend(v1, "trailingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, -v3);

  *(_QWORD *)(v8 + 48) = v17;
  specialized Array._endMutation()(v18);
  v67 = sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v69, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  v20 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100481720;
  v21 = objc_msgSend(v5, "topAnchor");
  v22 = objc_msgSend(v6, "topAnchor");
  v23 = v7;
  v24 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v20 + 32) = v24;
  v25 = objc_msgSend(v5, "leadingAnchor");
  v26 = objc_msgSend(v6, "leadingAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:constant:", v26, -v3);

  *(_QWORD *)(v20 + 40) = v27;
  v28 = objc_msgSend(v5, "trailingAnchor");
  v29 = objc_msgSend(v6, "trailingAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, v3);

  *(_QWORD *)(v20 + 48) = v30;
  v31 = objc_msgSend(v5, "bottomAnchor");
  v32 = objc_msgSend(v1, "bottomAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v20 + 56) = v33;
  specialized Array._endMutation()(v34);
  v35 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v69, "activateConstraints:", v35, swift_bridgeObjectRelease(v20).n128_f64[0]);

  v36 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v36 + 16) = xmmword_1004820C0;
  v37 = objc_msgSend(v6, "topAnchor");
  v38 = objc_msgSend(v4, "bottomAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, *(double *)&qword_1005F6090);

  *(_QWORD *)(v36 + 32) = v39;
  v40 = objc_msgSend(v6, "leadingAnchor");
  v41 = objc_msgSend(v1, "leadingAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:constant:", v41, v3);

  *(_QWORD *)(v36 + 40) = v42;
  v43 = objc_msgSend(v6, "trailingAnchor");
  v44 = objc_msgSend(v1, "trailingAnchor");
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:constant:", v44, -v3);

  *(_QWORD *)(v36 + 48) = v45;
  specialized Array._endMutation()(v46);
  v47 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v69, "activateConstraints:", v47, swift_bridgeObjectRelease(v36).n128_f64[0]);

  v48 = swift_allocObject(v23, 64, 7);
  *(_OWORD *)(v48 + 16) = xmmword_100481720;
  v49 = objc_msgSend(v68, "topAnchor");
  v50 = objc_msgSend(v6, "bottomAnchor");
  if (qword_1005D1BC8 != -1)
    swift_once(&qword_1005D1BC8, sub_1000ABDB8);
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:constant:", v50, *(double *)&qword_1005F4D78, v67);

  *(_QWORD *)(v48 + 32) = v51;
  v52 = objc_msgSend(v68, "leadingAnchor");
  v53 = objc_msgSend(v1, "leadingAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:constant:", v53, v2);

  *(_QWORD *)(v48 + 40) = v54;
  v55 = objc_msgSend(v68, "trailingAnchor");
  v56 = objc_msgSend(v1, "trailingAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:constant:", v56, -v2);

  *(_QWORD *)(v48 + 48) = v57;
  v58 = objc_msgSend(v68, "bottomAnchor");
  v59 = objc_msgSend(v1, "bottomAnchor");
  v60 = objc_msgSend(v58, "constraintEqualToAnchor:constant:", v59, -*(double *)&qword_1005F4D80);

  *(_QWORD *)(v48 + 56) = v60;
  specialized Array._endMutation()(v61);
  v62 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_actionButtonShowingConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_actionButtonShowingConstraints] = v48;
  v63 = objc_msgSend(v68, "titleLabel", swift_bridgeObjectRelease(v62).n128_f64[0]);
  if (v63 && (v64 = v63, v65 = objc_msgSend(v63, "text"), v64, v65))
  {

    v66 = 0;
  }
  else
  {
    v66 = 1;
  }
  v1[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_isActionButtonHidden] = v66;
  sub_1001656B0();
}

void sub_1001668E8(uint64_t a1)
{
  char *v1;
  void *v3;
  id v4;
  id v5;
  void *v6;
  char **v7;
  id v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for FMPlatterButtonGroupView();
  objc_msgSendSuper2(&v9, "traitCollectionDidChange:", a1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_contentView];
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend(v4, "userInterfaceStyle");
  v6 = (void *)objc_opt_self(UIColor);
  v7 = &selRef_tertiarySystemFillColor;
  if (v5 != (id)2)
    v7 = &selRef_whiteColor;
  v8 = objc_msgSend(v6, *v7);

  objc_msgSend(v3, "setBackgroundColor:", v8);
}

id sub_100166A68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPlatterButtonGroupView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMPlatterButtonGroupView()
{
  return objc_opt_self(_TtC6FindMy24FMPlatterButtonGroupView);
}

void sub_100166B30()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_sectionLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v2 = OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_contentStackView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v3 = OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_actionButton;
  *(_QWORD *)&v0[v3] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v4 = OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_buttonSeparator;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v5 = OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_contentView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_actionButtonShowingConstraints] = &_swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_isActionEnabled] = 1;
  v0[OBJC_IVAR____TtC6FindMy24FMPlatterButtonGroupView_isActionButtonHidden] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMPlatterButtonGroupView.swift", 37, 2, 65, 0);
  __break(1u);
}

void sub_100166C78(void *a1)
{
  uint64_t v1;
  NSObject *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  CGFloat Width;
  CGFloat Height;
  double v14;
  double v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  NSObject *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  double v38;
  CGFloat *v39;
  void *v40;
  CGFloat *v41;
  NSObject *v42;
  id v43;
  uint64_t v44;
  void *v45;
  CGFloat *v46;
  double v47;
  NSObject *v48;
  NSObject *oslog;
  os_log_t osloga;
  void **aBlock;
  uint64_t v52;
  void *v53;
  void *v54;
  id (*v55)();
  CGFloat *v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;

  v3 = objc_msgSend(a1, "viewForKey:", UITransitionContextToViewKey);
  if (!v3)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100056D88(v23, (uint64_t)qword_1005F5748);
    oslog = Logger.logObject.getter(v24);
    v25 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v25, "FMR1FindingViewPresentedTransition: Invalid presented view controller", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }
    goto LABEL_20;
  }
  v48 = v3;
  v4 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  if (!v4 || (v5 = v4, v6 = objc_msgSend(v4, "view"), v5, !v6))
  {
LABEL_16:
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100056D88(v27, (uint64_t)qword_1005F5748);
    oslog = Logger.logObject.getter(v28);
    v29 = static os_log_type_t.error.getter(oslog);
    if (!os_log_type_enabled(oslog, v29))
    {

      v31 = v48;
      goto LABEL_22;
    }
    v30 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v29, "FMR1FindingViewPresentedTransition: Invalid presenting view controller", v30, 2u);
    swift_slowDealloc(v30, -1, -1);

LABEL_20:
    v31 = oslog;
LABEL_22:

    return;
  }
  v7 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  if (!v7)
  {
LABEL_15:

    goto LABEL_16;
  }
  v8 = v7;
  v9 = type metadata accessor for FMCardContainerViewController();
  v10 = swift_dynamicCastClass(v8, v9);
  if (!v10)
  {

    goto LABEL_15;
  }
  v11 = *(void **)(v10 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer);
  objc_msgSend(v11, "bounds");
  Width = CGRectGetWidth(v57);
  objc_msgSend(v11, "bounds");
  Height = CGRectGetHeight(v58);
  objc_msgSend(v6, "bounds");
  v14 = CGRectGetWidth(v59);
  objc_msgSend(v6, "bounds");
  v15 = CGRectGetHeight(v60);
  -[NSObject setFrame:](v48, "setFrame:", 0.0, 0.0, v14, v15);
  v16 = objc_msgSend(a1, "containerView");
  objc_msgSend(v16, "insertSubview:belowSubview:", v48, v6);

  -[NSObject layoutIfNeeded](v48, "layoutIfNeeded");
  -[NSObject setFrame:](v48, "setFrame:", 0.0, 0.0, v14, v15);
  -[NSObject setAlpha:](v48, "setAlpha:", 0.0);
  v17 = objc_msgSend(a1, "containerView");
  v18 = type metadata accessor for FMPassthroughView();
  v19 = v17;
  v20 = v19;
  while (1)
  {
    v21 = swift_dynamicCastClass(v20, v18);
    if (v21)
      break;
    v22 = objc_msgSend(v19, "superview");

    v20 = v22;
    if (!v22)
    {
      v20 = v19;
      goto LABEL_24;
    }
  }
  v32 = v21;

  *(_BYTE *)(v32 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled) = 0;
LABEL_24:

  sub_1001F9810(a1);
  v33 = (void *)objc_opt_self(UIView);
  osloga = *(os_log_t *)(v1 + OBJC_IVAR____TtC6FindMy14FMR1Transition_duration);
  v47 = *(double *)(v1 + OBJC_IVAR____TtC6FindMy14FMR1Transition_delay);
  v34 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy14FMR1Transition_animationOptions);
  v35 = *(double *)(v1 + OBJC_IVAR____TtC6FindMy14FMR1Transition_mass);
  v36 = *(double *)(v1 + OBJC_IVAR____TtC6FindMy14FMR1Transition_stiffness);
  v37 = *(double *)(v1 + OBJC_IVAR____TtC6FindMy14FMR1Transition_springDamping);
  v38 = *(double *)(v1 + OBJC_IVAR____TtC6FindMy14FMR1Transition_initialSpringVelocity);
  v39 = (CGFloat *)swift_allocObject(&unk_100549E38, 64, 7);
  *((_QWORD *)v39 + 2) = v48;
  *((_QWORD *)v39 + 3) = v6;
  v39[4] = Width;
  v39[5] = Height;
  v39[6] = v14;
  v39[7] = v15;
  v55 = sub_10016738C;
  v56 = v39;
  aBlock = _NSConcreteStackBlock;
  v52 = 1107296256;
  v53 = sub_100037DF8;
  v54 = &unk_100549E50;
  v40 = _Block_copy(&aBlock);
  v41 = v56;
  v42 = v48;
  v43 = v6;
  swift_release(v41);
  v44 = swift_allocObject(&unk_100549E88, 24, 7);
  *(_QWORD *)(v44 + 16) = a1;
  v55 = sub_100167410;
  v56 = (CGFloat *)v44;
  aBlock = _NSConcreteStackBlock;
  v52 = 1107296256;
  v53 = sub_10005D218;
  v54 = &unk_100549EA0;
  v45 = _Block_copy(&aBlock);
  v46 = v56;
  swift_unknownObjectRetain(a1);
  swift_release(v46);
  objc_msgSend(v33, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", v34, v40, v45, *(double *)&osloga, v47, v35, v36, v37, v38);
  _Block_release(v45);
  _Block_release(v40);

}

id sub_100167310()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMR1FindingViewPresentedTransition();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMR1FindingViewPresentedTransition()
{
  return objc_opt_self(_TtC6FindMy34FMR1FindingViewPresentedTransition);
}

uint64_t sub_100167360()
{
  uint64_t v0;

  return swift_deallocObject(v0, 64, 7);
}

id sub_10016738C()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  double v4;

  v1 = *(void **)(v0 + 24);
  v2 = *(double *)(v0 + 40);
  v3 = *(double *)(v0 + 48);
  v4 = *(double *)(v0 + 56);
  objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
  return objc_msgSend(v1, "setFrame:", 0.0, v2, v3, v4);
}

uint64_t sub_1001673EC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_100167410()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "completeTransition:", objc_msgSend(*(id *)(v0 + 16), "transitionWasCancelled") ^ 1);
}

void destroy for FMETARequest(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

}

_QWORD *initializeWithCopy for FMETARequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain(v3);
  v6 = v4;
  v7 = v5;
  return a1;
}

_QWORD *assignWithCopy for FMETARequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  v9 = (void *)a2[3];
  v10 = (void *)a1[3];
  a1[3] = v9;
  v11 = v9;

  return a1;
}

_QWORD *assignWithTake for FMETARequest(_QWORD *a1, uint64_t a2)
{
  void *v4;
  void *v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = (void *)a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);

  v5 = (void *)a1[3];
  a1[3] = *(_QWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for FMETARequest()
{
  return &type metadata for FMETARequest;
}

unint64_t sub_1001675A0(uint64_t a1, void *a2, void *a3, void *a4)
{
  Swift::String v8;
  Swift::String v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  Swift::String v23;

  _StringGuts.grow(_:)(38);
  swift_bridgeObjectRelease(0xE000000000000000);
  swift_bridgeObjectRetain(a2);
  v8._countAndFlagsBits = a1;
  v8._object = a2;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(a2);
  v9._countAndFlagsBits = 0x203A747261747320;
  v9._object = (void *)0xE800000000000000;
  String.append(_:)(v9);
  v10 = a3;
  v11 = objc_msgSend(v10, "description");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);

  swift_bridgeObjectRelease(v14);
  v16._countAndFlagsBits = 0x203A646E6520;
  v16._object = (void *)0xE600000000000000;
  String.append(_:)(v16);
  v17 = a4;
  v18 = objc_msgSend(v17, "description");
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22._countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);

  swift_bridgeObjectRelease(v21);
  v23._countAndFlagsBits = 62;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  return 0xD00000000000001BLL;
}

unint64_t sub_100167714()
{
  uint64_t v0;

  return sub_1001675A0(*(_QWORD *)v0, *(void **)(v0 + 8), *(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t *sub_100167720(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (v7 + v10) & ~v10;
  v13 = *(_QWORD *)(v9 + 64);
  v14 = v13 + v10;
  v15 = ((v13 + v10 + v12) & ~v10) + v13;
  v16 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v9 + 80));
  if (v16 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v15 > 0x18)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v16 + 16) & ~v16));
    swift_retain(v19);
  }
  else
  {
    v20 = v8;
    v21 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v22 = ((unint64_t)a2 + v11) & v21;
    v23 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    v23(((unint64_t)a1 + v11) & v21, v22, v20);
    v23((v14 + (((unint64_t)a1 + v11) & v21)) & v21, (v14 + v22) & v21, v20);
  }
  return a1;
}

uint64_t sub_100167834(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + a1 + v7) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v10(v8, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v10)((*(_QWORD *)(v6 + 64) + v7 + v8) & ~v7, v5);
}

uint64_t sub_1001678CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v13(v11, v12, v7);
  v13((*(_QWORD *)(v8 + 64) + v9 + v11) & ~v9, (*(_QWORD *)(v8 + 64) + v9 + v12) & ~v9, v7);
  return a1;
}

uint64_t sub_100167978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  v13(v11, v12, v7);
  v13((*(_QWORD *)(v8 + 64) + v9 + v11) & ~v9, (*(_QWORD *)(v8 + 64) + v9 + v12) & ~v9, v7);
  return a1;
}

uint64_t sub_100167A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v13(v11, v12, v7);
  v13((*(_QWORD *)(v8 + 64) + v9 + v11) & ~v9, (*(_QWORD *)(v8 + 64) + v9 + v12) & ~v9, v7);
  return a1;
}

uint64_t sub_100167AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  v13(v11, v12, v7);
  v13((*(_QWORD *)(v8 + 64) + v9 + v11) & ~v9, (*(_QWORD *)(v8 + 64) + v9 + v12) & ~v9, v7);
  return a1;
}

uint64_t sub_100167B7C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = *(_QWORD *)(v6 + 64) + v12;
  if (a2 <= v11)
    goto LABEL_23;
  v14 = ((*(_QWORD *)(v9 + 64) + v12 + (v13 & ~v12)) & ~v12) + *(_QWORD *)(v9 + 64);
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v7 >= v10)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))((v13 + a1) & ~v12, v10, v8);
      }
      return 0;
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_23;
LABEL_14:
  v18 = (v16 - 1) << v15;
  if (v14 > 3)
    v18 = 0;
  if ((_DWORD)v14)
  {
    if (v14 <= 3)
      v19 = v14;
    else
      v19 = 4;
    __asm { BR              X12 }
  }
  return v11 + v18 + 1;
}

void sub_100167D20(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v9 + 64)
        + *(unsigned __int8 *)(v9 + 80)
        + ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  if (a3 <= v10)
  {
    v12 = 0;
  }
  else if (v11 <= 3)
  {
    v14 = ((a3 - v10 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
    if (HIWORD(v14))
    {
      v12 = &dword_100000004;
    }
    else if (v14 >= 0x100)
    {
      v12 = 2;
    }
    else
    {
      v12 = v14 > 1;
    }
  }
  else
  {
    v12 = &_mh_execute_header.magic + 1;
  }
  if (v10 < a2)
  {
    v13 = ~v10 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v15 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t *sub_100167F48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v7 + 64) + v10;
  v12 = (*(_BYTE *)(v7 + 80) | *(_BYTE *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(_QWORD *)(v9 + 64) > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain(v15);
  }
  else
  {
    v16 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v16, ((unint64_t)a2 + v11) & v16, v8);
  }
  return a1;
}

uint64_t sub_100168020(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((*(_QWORD *)(v5 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_100168084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 16))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_100168100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_10016817C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1001681F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_100168274(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (!a2)
    return 0;
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = *(_QWORD *)(v7 + 64) + v13;
  if (a2 <= v12)
    goto LABEL_23;
  v15 = (v14 & ~v13) + *(_QWORD *)(v10 + 64);
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v18 = ((a2 - v12 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v18 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v18 < 2)
    {
LABEL_23:
      if (v12)
      {
        if (v8 >= v11)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, v8, v6);
        else
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 48))((v14 + a1) & ~v13, *(unsigned int *)(v10 + 84), v9);
      }
      return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_23;
LABEL_14:
  v19 = (v17 - 1) << v16;
  if (v15 > 3)
    v19 = 0;
  if ((_DWORD)v15)
  {
    if (v15 <= 3)
      v20 = (v14 & ~(_DWORD)v13) + *(_DWORD *)(v10 + 64);
    else
      v20 = 4;
    __asm { BR              X12 }
  }
  return v12 + v19 + 1;
}

void sub_100168404(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v8 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(unsigned __int8 *)(v9 + 80);
  v12 = ((*(_QWORD *)(v8 + 64) + v11) & ~v11) + *(_QWORD *)(v9 + 64);
  if (a3 <= v10)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v10 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = &dword_100000004;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = &_mh_execute_header.magic + 1;
  }
  if (v10 < a2)
  {
    v14 = ~v10 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, ((*(_QWORD *)(v8 + 64) + v11) & ~v11) + *(_QWORD *)(v9 + 64));
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, ((*(_QWORD *)(v8 + 64) + v11) & ~v11) + *(_QWORD *)(v9 + 64));
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

uint64_t *sub_100168638(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(_QWORD *)(v9 + 64) > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain(v15);
  }
  else
  {
    v16 = v8;
    v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, ((unint64_t)a2 + v11) & v17, v16);
  }
  return a1;
}

uint64_t sub_100168718(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = type metadata accessor for IndexPath(0);
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))((v4 + a1 + *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80), v5);
}

uint64_t sub_10016876C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1001687DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_10016884C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1001688BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_10016892C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = *(_QWORD *)(v6 + 64) + v12;
  if (a2 <= v11)
    goto LABEL_23;
  v14 = (v13 & ~v12) + *(_QWORD *)(v9 + 64);
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v7 >= v10)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))((v13 + a1) & ~v12, v10, v8);
      }
      return 0;
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_23;
LABEL_14:
  v18 = (v16 - 1) << v15;
  if (v14 > 3)
    v18 = 0;
  if ((_DWORD)v14)
  {
    if (v14 <= 3)
      v19 = v14;
    else
      v19 = 4;
    __asm { BR              X12 }
  }
  return v11 + v18 + 1;
}

void sub_100168AC4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  if (a3 <= v10)
  {
    v12 = 0;
  }
  else if (v11 <= 3)
  {
    v14 = ((a3 - v10 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
    if (HIWORD(v14))
    {
      v12 = &dword_100000004;
    }
    else if (v14 >= 0x100)
    {
      v12 = 2;
    }
    else
    {
      v12 = v14 > 1;
    }
  }
  else
  {
    v12 = &_mh_execute_header.magic + 1;
  }
  if (v10 < a2)
  {
    v13 = ~v10 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v15 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

_QWORD *sub_100168CE0(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_100168D10(a1);
}

_QWORD *sub_100168D10(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;

  v2 = v1;
  v4 = OBJC_IVAR____TtC6FindMy18FMItemTerminalView_secondaryActionButton;
  v5 = (objc_class *)type metadata accessor for FMEmptyListButton();
  v6 = (char *)objc_allocWithZone(v5);
  v7 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  v8 = (void *)objc_opt_self(UIColor);
  v9 = v2;
  v10 = v6;
  *(_QWORD *)&v6[v7] = objc_msgSend(v8, "systemBlueColor");
  v10[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  v11 = objc_msgSend(v8, "tertiarySystemFillColor");
  v12 = sub_1000472FC(v11, 1, 1, 0);

  *(_QWORD *)&v2[v4] = v12;
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy18FMItemTerminalView_secondaryActionButtonHeight] = 0;
  v13 = OBJC_IVAR____TtC6FindMy18FMItemTerminalView_tertiaryActionButton;
  v14 = (char *)objc_allocWithZone(v5);
  v15 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  v16 = v14;
  *(_QWORD *)&v14[v15] = objc_msgSend(v8, "systemBlueColor");
  v16[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  v17 = objc_msgSend(v8, "tertiarySystemFillColor");
  v18 = sub_1000472FC(v17, 1, 1, 0);

  *(_QWORD *)&v9[v13] = v18;
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy18FMItemTerminalView_tertiaryActionButtonHeight] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy18FMItemTerminalView_cardChangeSubscription] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy18FMItemTerminalView_devicesSubscription] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy18FMItemTerminalView_lastCardPercentage] = 0;

  v19 = swift_retain(a1);
  v20 = sub_100366F70(v19);
  sub_10016969C();

  swift_release(a1);
  return v20;
}

uint64_t sub_100168F08()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy18FMItemTerminalView_cardChangeSubscription));
  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy18FMItemTerminalView_devicesSubscription));
}

id sub_100168F74()
{
  void *v0;
  objc_super v2;

  sub_100169A20();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMItemTerminalView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100169088()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  void *object;
  NSString v13;
  NSString v14;
  char *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t inited;
  NSString *v21;
  unint64_t v22;
  id v23;
  id v24;
  id v25;
  Swift::String v26;
  Swift::String_optional v27;
  Swift::String v28;
  void *v29;
  NSString v30;
  NSString v31;
  void *v32;
  char *v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  NSString *v39;
  unint64_t v40;
  id v41;
  id v42;
  id v43;
  Swift::String v44;
  Swift::String_optional v45;
  Swift::String v46;
  void *v47;
  NSString v48;
  NSString v49;
  uint64_t v50;
  void *comment_8;
  char v52[48];
  char v53[56];
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;

  v1 = v0;
  sub_10004A188();
  v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconView);
  sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  v3 = sub_100342F84(0x63496D6574496F4ELL, 0xEA00000000006E6FLL, 6778480, 0xE300000000000000);
  objc_msgSend(v2, "setImage:", v3);

  v4 = *(char **)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton);
  v5 = *(void **)&v4[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label];
  v6 = (void *)objc_opt_self(NSBundle);
  v7 = v5;
  comment_8 = v6;
  v8 = objc_msgSend(v6, "mainBundle");
  v9._countAndFlagsBits = 0xD000000000000014;
  v54._countAndFlagsBits = 0xD000000000000018;
  v54._object = (void *)0x80000001004A5660;
  v9._object = (void *)0x80000001004AFD70;
  v10.value._countAndFlagsBits = 0xD000000000000013;
  v10.value._object = (void *)0x80000001004A5640;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v54)._object;

  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setText:", v13, swift_bridgeObjectRelease(object).n128_f64[0]);

  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setAccessibilityIdentifier:", v14);

  v15 = *(char **)(v1 + OBJC_IVAR____TtC6FindMy18FMItemTerminalView_secondaryActionButton);
  v16 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label;
  v17 = *(id *)&v15[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label];
  v18 = objc_msgSend(v17, "font");
  if (v18)
  {
    v19 = v18;
    v50 = sub_100053F2C((uint64_t *)&unk_1005D7EA0);
    inited = swift_initStackObject(v50, v53);
    *(_OWORD *)(inited + 16) = xmmword_100481740;
    *(_QWORD *)(inited + 32) = UIFontWeightTrait;
    *(UIFontWeight *)(inited + 40) = UIFontWeightRegular;
    v21 = UIFontWeightTrait;
    v22 = sub_10004907C(inited);
    v23 = sub_100049188(v22);

    objc_msgSend(v17, "setFont:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);
    v24 = *(id *)&v15[v16];
    v25 = objc_msgSend(comment_8, "mainBundle");
    v26._countAndFlagsBits = 0xD000000000000019;
    v55._object = (void *)0x80000001004A5660;
    v26._object = (void *)0x80000001004AFD90;
    v27.value._countAndFlagsBits = 0xD000000000000013;
    v27.value._object = (void *)0x80000001004A5640;
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    v55._countAndFlagsBits = 0xD000000000000018;
    v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v55)._object;

    v30 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setText:", v30, swift_bridgeObjectRelease(v29).n128_f64[0]);

    v31 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setAccessibilityIdentifier:", v31);

    v32 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonsStackView);
    objc_msgSend(v32, "addArrangedSubview:", v15);
    v33 = *(char **)(v1 + OBJC_IVAR____TtC6FindMy18FMItemTerminalView_tertiaryActionButton);
    v34 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label;
    v35 = *(id *)&v33[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label];
    v36 = objc_msgSend(v35, "font");
    if (v36)
    {
      v37 = v36;
      v38 = swift_initStackObject(v50, v52);
      *(_OWORD *)(v38 + 16) = xmmword_100481740;
      *(_QWORD *)(v38 + 32) = v21;
      *(UIFontWeight *)(v38 + 40) = UIFontWeightRegular;
      v39 = v21;
      v40 = sub_10004907C(v38);
      v41 = sub_100049188(v40);

      objc_msgSend(v35, "setFont:", v41, swift_bridgeObjectRelease(v40).n128_f64[0]);
      v42 = *(id *)&v33[v34];
      v43 = objc_msgSend(comment_8, "mainBundle");
      v56._countAndFlagsBits = 0xD000000000000018;
      v44._countAndFlagsBits = 0xD00000000000001DLL;
      v56._object = (void *)0x80000001004A5660;
      v44._object = (void *)0x80000001004AFDD0;
      v45.value._object = (void *)0x80000001004A5640;
      v45.value._countAndFlagsBits = 0xD000000000000013;
      v46._countAndFlagsBits = 0;
      v46._object = (void *)0xE000000000000000;
      v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v44, v45, (NSBundle)v43, v46, v56)._object;

      v48 = String._bridgeToObjectiveC()();
      objc_msgSend(v42, "setText:", v48, swift_bridgeObjectRelease(v47).n128_f64[0]);

      v49 = String._bridgeToObjectiveC()();
      objc_msgSend(v33, "setAccessibilityIdentifier:", v49);

      objc_msgSend(v32, "addArrangedSubview:", v33);
      sub_100169BAC(0, 1.0);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1001695FC()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  id result;

  sub_1000479B8();
  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC6FindMy18FMItemTerminalView_secondaryActionButton), "heightAnchor"));
  v2 = objc_msgSend(v1, "constraintEqualToConstant:", 0.0);

  v3 = OBJC_IVAR____TtC6FindMy18FMItemTerminalView_secondaryActionButtonHeight;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy18FMItemTerminalView_secondaryActionButtonHeight);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy18FMItemTerminalView_secondaryActionButtonHeight) = v2;

  result = *(id *)(v0 + v3);
  if (result)
    return objc_msgSend(result, "setActive:", 1);
  return result;
}

uint64_t sub_10016969C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD v19[5];
  uint64_t v20;

  v1 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator] + 24);
  v2 = type metadata accessor for FMDevicesSubscription(0);
  v3 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v4 = v3 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v4 + 8) = 0;
  swift_unknownObjectWeakInit(v4);
  swift_retain(v1);
  v5 = v0;
  UUID.init()(v5);
  v6 = v3 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v6 + 8) = &off_10054A0E0;
  swift_unknownObjectWeakAssign(v6, v5);

  swift_beginAccess(v1 + 16, v19, 33, 0);
  v7 = swift_retain(v3);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v9 = *(_QWORD *)((*(_QWORD *)(v1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v8 = *(_QWORD *)((*(_QWORD *)(v1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v9 >= v8 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
  v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v3);
  specialized Array._endMutation()(v10);
  swift_endAccess(v19);
  swift_release(v1);
  v11 = *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy18FMItemTerminalView_devicesSubscription];
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy18FMItemTerminalView_devicesSubscription] = v3;
  swift_release(v11);
  v12 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1005D20D8 != -1)
    swift_once(&qword_1005D20D8, sub_10005D2D8);
  v13 = qword_1005F61F8;
  v14 = swift_allocObject(&unk_10054A280, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v19[4] = sub_10016AA88;
  v20 = v14;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_1003B9AE8;
  v19[3] = &unk_10054A298;
  v15 = _Block_copy(v19);
  v16 = objc_msgSend(v12, "addObserverForName:object:queue:usingBlock:", v13, 0, 0, v15, swift_release(v20).n128_f64[0]);
  _Block_release(v15);

  v17 = *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy18FMItemTerminalView_cardChangeSubscription];
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy18FMItemTerminalView_cardChangeSubscription] = v16;
  return swift_unknownObjectRelease(v17);
}

void sub_1001698F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  double v8;
  uint64_t Strong;
  void *v10;
  _QWORD v11[2];
  _QWORD v12[5];
  __int128 v13;
  __int128 v14;

  v3 = Notification.userInfo.getter();
  if (!v3)
  {
    v13 = 0u;
    v14 = 0u;
LABEL_11:
    sub_10005D03C((uint64_t)&v13);
    return;
  }
  v4 = v3;
  v11[0] = 0x746E6563726570;
  v11[1] = 0xE700000000000000;
  AnyHashable.init<A>(_:)(v12, v11, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_100025F20((uint64_t)v12), (v6 & 1) != 0))
  {
    sub_100056E70(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  swift_bridgeObjectRelease(v4);
  sub_100025EEC((uint64_t)v12);
  if (!*((_QWORD *)&v14 + 1))
    goto LABEL_11;
  if ((swift_dynamicCast(v12, &v13, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6) & 1) != 0)
  {
    v7 = a2 + 16;
    v8 = *(double *)v12;
    swift_beginAccess(v7, v12, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v7);
    if (Strong)
    {
      v10 = (void *)Strong;
      sub_100169BAC(1, v8);

    }
  }
}

void sub_100169A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v1 = OBJC_IVAR____TtC6FindMy18FMItemTerminalView_devicesSubscription;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy18FMItemTerminalView_devicesSubscription);
  if (v2)
  {
    v3 = v0;
    v4 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator) + 24);
    v5 = (id)(v4 + 16);
    swift_beginAccess(v4 + 16, v12, 33, 0);
    swift_retain(v2);
    swift_retain(v4);
    v6 = sub_1001138E0((uint64_t *)(v4 + 16), v2);
    v7 = v6;
    v8 = *(_QWORD *)(v4 + 16);
    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v11 = *(_QWORD *)(v4 + 16);
      else
        v11 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v4 + 16));
      v9 = _CocoaArrayWrapper.endIndex.getter(v11);
      swift_bridgeObjectRelease(v8);
      if (v9 >= v7)
      {
LABEL_4:
        sub_1002006EC(v7, v9);
        swift_endAccess(v12);
        swift_release(v4);
        v10 = *(_QWORD *)(v3 + v1);
        *(_QWORD *)(v3 + v1) = 0;
        swift_release(v10);
        v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        if (qword_1005D20D8 == -1)
        {
LABEL_5:
          objc_msgSend(v5, "removeObserver:name:object:", v3, qword_1005F61F8, 0);
          swift_release(v2);

          return;
        }
LABEL_12:
        swift_once(&qword_1005D20D8, sub_10005D2D8);
        goto LABEL_5;
      }
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= v6)
        goto LABEL_4;
    }
    __break(1u);
    goto LABEL_12;
  }
}

double sub_100169BAC(char a1, double a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  char *v16;
  double result;
  char *v18;
  _QWORD v19[5];
  _QWORD *v20;

  v3 = v2;
  if (a2 >= 0.64)
  {
    v9 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator] + 24);
    swift_retain(v6);
    v7 = sub_1000BD1E4();
    swift_release(v6);
    v8 = *(_QWORD *)(v7 + 16);
    swift_bridgeObjectRelease(v7);
    v9 = v8 != 0;
  }
  v10 = swift_allocObject(&unk_10054A1E0, 25, 7);
  *(_QWORD *)(v10 + 16) = v3;
  *(_BYTE *)(v10 + 24) = v9;
  v11 = swift_allocObject(&unk_10054A208, 25, 7);
  *(_QWORD *)(v11 + 16) = v3;
  *(_BYTE *)(v11 + 24) = a2 < 0.64;
  *(double *)&v3[OBJC_IVAR____TtC6FindMy18FMItemTerminalView_lastCardPercentage] = a2;
  if ((a1 & 1) != 0)
  {
    v12 = (void *)objc_opt_self(UIView);
    v13 = (_QWORD *)swift_allocObject(&unk_10054A230, 48, 7);
    v13[2] = sub_10016A9A8;
    v13[3] = v10;
    v13[4] = sub_10016A9D4;
    v13[5] = v11;
    v19[4] = sub_10016AA2C;
    v20 = v13;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_100037DF8;
    v19[3] = &unk_10054A248;
    v14 = _Block_copy(v19);
    v15 = v20;
    v16 = v3;
    swift_retain(v10);
    swift_retain(v11);
    swift_release(v15);
    objc_msgSend(v12, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0x20000, v14, 0, 0.4, 0.0, 0.8, 0.4);
    _Block_release(v14);
    swift_release(v10);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  else
  {
    v18 = v3;
    sub_100169E00((uint64_t)v18, v9, &OBJC_IVAR____TtC6FindMy18FMItemTerminalView_secondaryActionButton, &OBJC_IVAR____TtC6FindMy18FMItemTerminalView_secondaryActionButtonHeight);
    sub_100169E00((uint64_t)v18, a2 < 0.64, &OBJC_IVAR____TtC6FindMy18FMItemTerminalView_tertiaryActionButton, &OBJC_IVAR____TtC6FindMy18FMItemTerminalView_tertiaryActionButtonHeight);
    swift_release(v10);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

id sub_100169E00(uint64_t a1, int a2, _QWORD *a3, _QWORD *a4)
{
  char *v7;
  char v8;
  id v9;
  double v10;

  v7 = *(char **)(a1 + *a3);
  v8 = a2 ^ 1;
  if (((objc_msgSend(v7, "isHidden") ^ a2) & 1) == 0)
    objc_msgSend(v7, "setHidden:", v8 & 1);
  v9 = *(id *)&v7[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label];
  if (((objc_msgSend(v9, "isHidden") ^ a2) & 1) == 0)
    objc_msgSend(v9, "setHidden:", v8 & 1);

  v10 = 1.0;
  if ((a2 & 1) == 0)
    v10 = 0.0;
  objc_msgSend(v7, "setAlpha:", v10);
  return objc_msgSend(*(id *)(a1 + *a4), "setActive:", v8 & 1);
}

void sub_100169EE0()
{
  sub_100045720();
  __asm { BR              X10 }
}

void sub_100169F48()
{
  uint64_t v0;
  char v1;
  void *v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  void *object;
  NSString v9;
  void *v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  void *v15;
  NSString v16;
  id v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  void *v21;
  NSString v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;

  v1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x41646567616E616DLL, 0xEE00746E756F6363, 0x6E756F6363416F6ELL, 0xE900000000000074, 0);
  swift_bridgeObjectRelease(0xEE00746E756F6363);
  if ((v1 & 1) != 0)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel);
    v3 = (void *)objc_opt_self(NSBundle);
    v4 = objc_msgSend(v3, "mainBundle");
    v5._countAndFlagsBits = 0xD000000000000016;
    v23._object = (void *)0x80000001004A5660;
    v5._object = (void *)0x80000001004AFCE0;
    v6.value._countAndFlagsBits = 0xD000000000000013;
    v6.value._object = (void *)0x80000001004A5640;
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v23._countAndFlagsBits = 0xD000000000000018;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v23)._object;

    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v2, "setText:", v9);

    v10 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel);
    v11 = objc_msgSend(v3, "mainBundle");
    v24._object = (void *)0x80000001004A5660;
    v12._object = (void *)0x80000001004AFD00;
    v12._countAndFlagsBits = 0xD000000000000018;
    v13.value._countAndFlagsBits = 0xD000000000000013;
    v13.value._object = (void *)0x80000001004A5640;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v24._countAndFlagsBits = 0xD000000000000018;
    v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v24)._object;

    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
    objc_msgSend(v10, "setText:", v16);

    v17 = objc_retain(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton)
                            + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label));
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v18 = objc_msgSend(v3, "mainBundle");
    v19._countAndFlagsBits = 0xD000000000000011;
    v25._countAndFlagsBits = 0xD000000000000023;
    v25._object = (void *)0x80000001004AFD40;
    v19._object = (void *)0x80000001004AFD20;
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v25)._object;

    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21);
    objc_msgSend(v17, "setText:", v22);

  }
}

void sub_10016A2CC()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleAction");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton), "addGestureRecognizer:", v1);

  v2 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleSecondaryAction");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy18FMItemTerminalView_secondaryActionButton), "addGestureRecognizer:", v2);
  v3 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleTertiaryAction");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy18FMItemTerminalView_tertiaryActionButton), "addGestureRecognizer:", v3);

}

double sub_10016A3CC()
{
  return sub_10016A420("FMItemTerminalView: secondary action tapped", 0);
}

double sub_10016A410()
{
  return sub_10016A420("FMItemTerminalView: tertiary action tapped", 1);
}

double sub_10016A420(const char *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  _BYTE v20[24];
  _BYTE v21[24];

  v5 = v2;
  v6 = type metadata accessor for FMSelectedSection(0);
  v7 = __chkstk_darwin(v6);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v20[-v10];
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100056D88(v12, (uint64_t)qword_1005F5748);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, a1, v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  v17 = *(_QWORD *)(*(_QWORD *)(v5 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator) + 56);
  *v11 = a2;
  swift_storeEnumTagMultiPayload(v11, v6, 9);
  v18 = v17 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v17 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v21, 0, 0);
  sub_100024F3C(v18, (uint64_t)v9);
  swift_beginAccess(v18, v20, 33, 0);
  swift_retain(v17);
  sub_100009DF8((uint64_t)v11, v18);
  swift_endAccess(v20);
  sub_10004C8A4((uint64_t)v9);
  sub_100024F00((uint64_t)v11);
  sub_100024F00((uint64_t)v9);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_10016A644(uint64_t a1, uint64_t a2)
{
  return sub_10016A64C(a2);
}

uint64_t sub_10016A64C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  void *v32;
  void **aBlock;
  _QWORD v34[4];
  uint64_t v35;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v12 = type metadata accessor for Logger(0);
  sub_100056D88(v12, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = v2;
    v17 = v8;
    v18 = v16;
    *(_DWORD *)v16 = 134217984;
    aBlock = *(void ***)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v34);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMNoItemView: devicesProvider didUpdate unknownItems %ld", v18, 0xCu);
    v19 = v18;
    v8 = v17;
    v2 = v32;
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  v20 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v21 = (void *)static OS_dispatch_queue.main.getter(v20);
  v22 = swift_allocObject(&unk_10054A190, 24, 7);
  *(_QWORD *)(v22 + 16) = v2;
  v34[3] = sub_10016A954;
  v35 = v22;
  aBlock = _NSConcreteStackBlock;
  v34[0] = 1107296256;
  v34[1] = sub_100037DF8;
  v34[2] = &unk_10054A1A8;
  v23 = _Block_copy(&aBlock);
  v24 = v35;
  v25 = v2;
  swift_release(v24);
  static DispatchQoS.unspecified.getter(v26);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v27 = sub_100056580();
  v28 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v29 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v28, v29, v4, v27);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10016A930()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_10016A954()
{
  uint64_t v0;

  return sub_100169BAC(1, *(double *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6FindMy18FMItemTerminalView_lastCardPercentage));
}

uint64_t sub_10016A984()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_10016A9A8()
{
  uint64_t v0;

  return sub_100169E00(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), &OBJC_IVAR____TtC6FindMy18FMItemTerminalView_secondaryActionButton, &OBJC_IVAR____TtC6FindMy18FMItemTerminalView_secondaryActionButtonHeight);
}

id sub_10016A9D4()
{
  uint64_t v0;

  return sub_100169E00(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), &OBJC_IVAR____TtC6FindMy18FMItemTerminalView_tertiaryActionButton, &OBJC_IVAR____TtC6FindMy18FMItemTerminalView_tertiaryActionButtonHeight);
}

uint64_t sub_10016AA00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10016AA2C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = (*(uint64_t (**)(void))(v0 + 16))();
  return v1(v2);
}

uint64_t sub_10016AA64()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10016AA88(uint64_t a1)
{
  uint64_t v1;

  sub_1001698F0(a1, v1);
}

void sub_10016AA90()
{
  char *v0;
  char *v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy18FMItemTerminalView_secondaryActionButton;
  v3 = (objc_class *)type metadata accessor for FMEmptyListButton();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v4;
  *(_QWORD *)&v4[v5] = objc_msgSend(v6, "systemBlueColor");
  v7[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  v8 = objc_msgSend(v6, "tertiarySystemFillColor");
  v9 = sub_1000472FC(v8, 1, 1, 0);

  *(_QWORD *)&v1[v2] = v9;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy18FMItemTerminalView_secondaryActionButtonHeight] = 0;
  v10 = OBJC_IVAR____TtC6FindMy18FMItemTerminalView_tertiaryActionButton;
  v11 = (char *)objc_allocWithZone(v3);
  v12 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  v13 = v11;
  *(_QWORD *)&v11[v12] = objc_msgSend(v6, "systemBlueColor");
  v13[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  v14 = objc_msgSend(v6, "tertiarySystemFillColor");
  v15 = sub_1000472FC(v14, 1, 1, 0);

  *(_QWORD *)&v1[v10] = v15;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy18FMItemTerminalView_tertiaryActionButtonHeight] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy18FMItemTerminalView_cardChangeSubscription] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy18FMItemTerminalView_devicesSubscription] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy18FMItemTerminalView_lastCardPercentage] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMItemTerminalView.swift", 31, 2, 40, 0);
  __break(1u);
}

id sub_10016AC8C(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t My;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Class isa;
  objc_super v41;
  __int128 v42;
  __int128 v43;
  unint64_t v44;

  ObjectType = (objc_class *)swift_getObjectType(v2);
  v6 = OBJC_IVAR____TtC6FindMy26FMChooseMapSheetController_blurredBackground;
  v7 = objc_allocWithZone((Class)type metadata accessor for FMChooseMapSheetController.FMBlurredBackgroundView());
  v8 = v2;
  *(_QWORD *)&v2[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC6FindMy26FMChooseMapSheetController_closeButton;
  *(_QWORD *)&v8[v9] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 7);
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy26FMChooseMapSheetController_mediator] = a1;
  sub_100024F3C(a2, (uint64_t)&v8[OBJC_IVAR____TtC6FindMy26FMChooseMapSheetController_previousSelection]);
  My = type metadata accessor for Feature.FindMy(0);
  *((_QWORD *)&v43 + 1) = My;
  v44 = sub_100006590();
  v11 = sub_10003D370(&v42);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v11, enum case for Feature.FindMy.springfieldIntegration(_:), My);
  swift_retain(a1);
  LOBYTE(My) = isFeatureEnabled(_:)(&v42);
  sub_100029574(&v42);
  if ((My & 1) != 0)
  {
    v12 = objc_allocWithZone((Class)type metadata accessor for FMChooseMapViewController());
    v13 = swift_retain(a1);
    v14 = sub_100207DBC(v13);
  }
  else
  {
    v15 = objc_allocWithZone((Class)type metadata accessor for FMMapSettingsViewController());
    v16 = swift_retain(a1);
    v14 = sub_1000E2214(v16);
  }
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy26FMChooseMapSheetController_content] = v14;

  v41.receiver = v8;
  v41.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v41, "initWithNibName:bundle:", 0, 0);
  v18 = qword_1005D1E80;
  v19 = v17;
  if (v18 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v20 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v20, "bounds");
  v22 = v21;
  v24 = v23;

  objc_msgSend(v19, "setPreferredContentSize:", fmin(v22, 420.0), fmin(v24, 420.0));
  v25 = objc_msgSend(v19, "presentationController");
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v25, "setDelegate:", v19);

  }
  v27 = objc_msgSend(v19, "sheetPresentationController");
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v27, "setPrefersGrabberVisible:", 1);

  }
  v29 = objc_msgSend(v19, "sheetPresentationController");
  if (v29)
  {
    v30 = v29;
    v31 = sub_100053F2C(&qword_1005D2F10);
    v32 = swift_allocObject(v31, 40, 7);
    *(_OWORD *)(v32 + 16) = xmmword_100481B00;
    if (qword_1005D1D00 != -1)
      swift_once(&qword_1005D1D00, sub_10005DE04);
    v42 = xmmword_1005F52F0;
    v43 = unk_1005F5300;
    v44 = qword_1005F5310;
    sub_100006C5C(0, &qword_1005D8A38, UISheetPresentationControllerDetent_ptr);
    v33 = String._bridgeToObjectiveC()();
    v34 = swift_allocObject(&unk_10054A310, 56, 7);
    v35 = v43;
    *(_OWORD *)(v34 + 16) = v42;
    *(_OWORD *)(v34 + 32) = v35;
    *(_QWORD *)(v34 + 48) = v44;
    v36 = static UISheetPresentationControllerDetent.custom(identifier:resolver:)(v33, sub_10016C1F4, v34);

    swift_release(v34);
    *(_QWORD *)(v32 + 32) = v36;
    specialized Array._endMutation()(v37);
    v38 = v32;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v30, "setDetents:", isa, swift_bridgeObjectRelease(v38).n128_f64[0]);
    swift_release(a1);

  }
  else
  {
    swift_release(a1);
  }

  sub_100024F00(a2);
  return v19;
}

double sub_10016B16C(char a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = type metadata accessor for FMSelectedSection(0);
  v5 = __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v17[-v8 - 8];
  v20.receiver = v1;
  v20.super_class = ObjectType;
  objc_msgSendSuper2(&v20, "viewWillDisappear:", a1 & 1);
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMChooseMapSheetController_mediator];
  v11 = *(_QWORD *)(v10 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v11, v19, 0, 0);
  sub_100024F3C(v11, (uint64_t)v9);
  swift_storeEnumTagMultiPayload(v7, v4, 15);
  sub_100024F80((uint64_t)v9, (uint64_t)v7);
  LOBYTE(v11) = v12;
  sub_100024F00((uint64_t)v7);
  sub_100024F00((uint64_t)v9);
  if ((v11 & 1) != 0)
  {
    v14 = *(_QWORD *)(v10 + 56);
    sub_100024F3C((uint64_t)&v1[OBJC_IVAR____TtC6FindMy26FMChooseMapSheetController_previousSelection], (uint64_t)v9);
    v15 = v14 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v14 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v18, 0, 0);
    sub_100024F3C(v15, (uint64_t)v7);
    swift_beginAccess(v15, v17, 33, 0);
    swift_retain(v14);
    sub_100009DF8((uint64_t)v9, v15);
    swift_endAccess(v17);
    sub_10004C8A4((uint64_t)v7);
    sub_100024F00((uint64_t)v9);
    sub_100024F00((uint64_t)v7);
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

id sub_10016B368()
{
  char *v0;
  char *v1;
  id result;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  NSString v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  Swift::String v15;

  v1 = v0;
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result;
  v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy26FMChooseMapSheetController_blurredBackground];
  objc_msgSend(result, "addSubview:", v4);

  v5 = *(void **)&v1[OBJC_IVAR____TtC6FindMy26FMChooseMapSheetController_closeButton];
  objc_msgSend(v5, "addTarget:action:forControlEvents:", v1, "handleCloseAction", 64);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v15._object = (void *)0x80000001004AFFB0;
  v7._countAndFlagsBits = 0x55425F45534F4C43;
  v7._object = (void *)0xEC0000004E4F5454;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v15._countAndFlagsBits = 0xD00000000000001ELL;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v15)._object;

  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v5, "setAccessibilityLabel:", v10);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = result;
  objc_msgSend(result, "addSubview:", v5);

  v12 = *(void **)&v1[OBJC_IVAR____TtC6FindMy26FMChooseMapSheetController_content];
  objc_msgSend(v1, "addChildViewController:", v12);
  v13 = objc_msgSend(v4, "contentView");
  result = objc_msgSend(v12, "view");
  if (result)
  {
    v14 = result;
    objc_msgSend(v13, "addSubview:", result);

    return objc_msgSend(v12, "didMoveToParentViewController:", v1);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_10016B594()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  Class isa;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  Class v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  id v77;
  id v78;
  Class v79;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMChooseMapSheetController_blurredBackground];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v78 = (id)sub_100053F2C(&qword_1005D2F10);
  v3 = swift_allocObject(v78, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100481720;
  v4 = objc_msgSend(v2, "topAnchor");
  v5 = objc_msgSend(v1, "view");
  if (!v5)
  {
    __break(1u);
    goto LABEL_15;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "topAnchor");

  v8 = objc_msgSend(v4, "constraintEqualToAnchor:", v7);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = objc_msgSend(v2, "bottomAnchor");
  v10 = objc_msgSend(v1, "view");
  if (!v10)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, "bottomAnchor");

  v13 = objc_msgSend(v9, "constraintEqualToAnchor:", v12);
  *(_QWORD *)(v3 + 40) = v13;
  v14 = objc_msgSend(v2, "leadingAnchor");
  v15 = objc_msgSend(v1, "view");
  if (!v15)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, "leadingAnchor");

  v18 = objc_msgSend(v14, "constraintEqualToAnchor:", v17);
  *(_QWORD *)(v3 + 48) = v18;
  v19 = objc_msgSend(v2, "trailingAnchor");
  v20 = objc_msgSend(v1, "view");
  if (!v20)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v21 = v20;
  v22 = (void *)objc_opt_self(NSLayoutConstraint);
  v23 = objc_msgSend(v21, "trailingAnchor");

  v24 = objc_msgSend(v19, "constraintEqualToAnchor:", v23);
  *(_QWORD *)(v3 + 56) = v24;
  specialized Array._endMutation()(v25);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v77 = v22;
  objc_msgSend(v22, "activateConstraints:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

  v27 = *(void **)&v1[OBJC_IVAR____TtC6FindMy26FMChooseMapSheetController_closeButton];
  objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v28 = swift_allocObject(v78, 64, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100481720;
  v29 = objc_msgSend(v27, "topAnchor");
  v30 = objc_msgSend(v1, "view");
  if (!v30)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v31 = v30;
  v32 = objc_msgSend(v30, "topAnchor");

  v33 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v32, 15.0);
  *(_QWORD *)(v28 + 32) = v33;
  v34 = objc_msgSend(v27, "trailingAnchor");
  v35 = objc_msgSend(v1, "view");
  if (!v35)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v36 = v35;
  v37 = objc_msgSend(v35, "layoutMarginsGuide");

  v38 = objc_msgSend(v37, "trailingAnchor");
  v39 = objc_msgSend(v34, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v28 + 40) = v39;
  v40 = objc_msgSend(v27, "heightAnchor");
  v41 = objc_msgSend(v40, "constraintEqualToConstant:", 36.0);

  *(_QWORD *)(v28 + 48) = v41;
  v42 = objc_msgSend(v27, "widthAnchor");
  v43 = objc_msgSend(v42, "constraintEqualToConstant:", 36.0);

  *(_QWORD *)(v28 + 56) = v43;
  specialized Array._endMutation()(v44);
  v45 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v22, "activateConstraints:", v45, swift_bridgeObjectRelease(v28).n128_f64[0]);

  v46 = *(void **)&v1[OBJC_IVAR____TtC6FindMy26FMChooseMapSheetController_content];
  v47 = objc_msgSend(v46, "view");
  if (!v47)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v48 = v47;
  objc_msgSend(v47, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v49 = objc_msgSend(v46, "view");
  if (!v49)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v50 = v49;
  objc_msgSend(v49, "setPreservesSuperviewLayoutMargins:", 1);

  v51 = swift_allocObject(v78, 64, 7);
  *(_OWORD *)(v51 + 16) = xmmword_100481720;
  v52 = objc_msgSend(v46, "view");
  if (!v52)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v53 = v52;
  v54 = objc_msgSend(v52, "topAnchor");

  v55 = objc_msgSend(v2, "contentView");
  v56 = objc_msgSend(v55, "topAnchor");

  v57 = objc_msgSend(v54, "constraintEqualToAnchor:", v56);
  *(_QWORD *)(v51 + 32) = v57;
  v58 = objc_msgSend(v46, "view");
  if (!v58)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v59 = v58;
  v60 = objc_msgSend(v58, "bottomAnchor");

  v61 = objc_msgSend(v2, "contentView");
  v62 = objc_msgSend(v61, "bottomAnchor");

  v63 = objc_msgSend(v60, "constraintEqualToAnchor:", v62);
  *(_QWORD *)(v51 + 40) = v63;
  v64 = objc_msgSend(v46, "view");
  if (!v64)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v65 = v64;
  v66 = objc_msgSend(v64, "leadingAnchor");

  v67 = objc_msgSend(v2, "contentView");
  v68 = objc_msgSend(v67, "leadingAnchor");

  v69 = objc_msgSend(v66, "constraintEqualToAnchor:", v68);
  *(_QWORD *)(v51 + 48) = v69;
  v70 = objc_msgSend(v46, "view");
  if (v70)
  {
    v71 = v70;
    v72 = objc_msgSend(v70, "trailingAnchor");

    v73 = objc_msgSend(v2, "contentView");
    v74 = objc_msgSend(v73, "trailingAnchor");

    v75 = objc_msgSend(v72, "constraintEqualToAnchor:", v74);
    *(_QWORD *)(v51 + 56) = v75;
    specialized Array._endMutation()(v76);
    v79 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v77, "activateConstraints:", v79, swift_bridgeObjectRelease(v51).n128_f64[0]);

    return;
  }
LABEL_25:
  __break(1u);
}

id sub_10016BE6C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  NSString v4;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType(v0);
  v1 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 1100);
  v2 = objc_msgSendSuper2(&v6, "initWithEffect:", v1);

  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "_setGroupName:", v4, v6.receiver, v6.super_class);

  if (qword_1005D1E90 != -1)
    swift_once(&qword_1005D1E90, sub_10000642C);
  objc_msgSend(v3, "_setCaptureView:", qword_1005F59F8);

  return v3;
}

uint64_t sub_10016C0C8()
{
  return type metadata accessor for FMChooseMapSheetController(0);
}

uint64_t type metadata accessor for FMChooseMapSheetController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D8A00;
  if (!qword_1005D8A00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMChooseMapSheetController);
  return result;
}

uint64_t sub_10016C10C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for FMSelectedSection(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for FMChooseMapSheetController.FMBlurredBackgroundView()
{
  return objc_opt_self(_TtCC6FindMy26FMChooseMapSheetController23FMBlurredBackgroundView);
}

uint64_t sub_10016C1E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

id sub_10016C1F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1001FEB48(a1, v1 + 16);
}

id sub_10016C1FC(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  objc_super v15;

  v9 = OBJC_IVAR____TtC6FindMy15FMCopyableLabel_menuController;
  v10 = (void *)objc_opt_self(UIMenuController);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "sharedMenuController");
  v11[OBJC_IVAR____TtC6FindMy15FMCopyableLabel_isCopyToPasteboardEnabled] = 0;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for FMCopyableLabel();
  v12 = objc_msgSendSuper2(&v15, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v12, "setUserInteractionEnabled:", 1);
  v13 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "initWithTarget:action:", v12, "showMenuWithSender:");
  objc_msgSend(v12, "addGestureRecognizer:", v13);

  return v12;
}

id sub_10016C33C(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v3 = OBJC_IVAR____TtC6FindMy15FMCopyableLabel_menuController;
  v4 = (void *)objc_opt_self(UIMenuController);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "sharedMenuController");
  v5[OBJC_IVAR____TtC6FindMy15FMCopyableLabel_isCopyToPasteboardEnabled] = 0;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for FMCopyableLabel();
  v6 = objc_msgSendSuper2(&v11, "initWithCoder:", a1);
  v7 = v6;
  if (v6)
  {
    v8 = v6;
    objc_msgSend(v8, "setUserInteractionEnabled:", 1);
    v9 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "initWithTarget:action:", v8, "showMenuWithSender:");
    objc_msgSend(v8, "addGestureRecognizer:", v9);

    a1 = v9;
  }

  return v7;
}

void sub_10016C630()
{
  uint64_t v0;

}

id sub_10016C640()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMCopyableLabel();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMCopyableLabel()
{
  return objc_opt_self(_TtC6FindMy15FMCopyableLabel);
}

id sub_10016C6A0()
{
  char *v0;
  id result;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;

  result = objc_msgSend(v0, "becomeFirstResponder");
  if (v0[OBJC_IVAR____TtC6FindMy15FMCopyableLabel_isCopyToPasteboardEnabled] == 1)
  {
    v2 = OBJC_IVAR____TtC6FindMy15FMCopyableLabel_menuController;
    result = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy15FMCopyableLabel_menuController], "isMenuVisible");
    if ((result & 1) == 0)
    {
      objc_msgSend(*(id *)&v0[v2], "setArrowDirection:", 2);
      objc_msgSend(v0, "bounds");
      v4 = v3;
      objc_msgSend(v0, "bounds");
      v6 = v5 + 4.0;
      objc_msgSend(v0, "bounds");
      v8 = v7;
      objc_msgSend(v0, "bounds");
      return objc_msgSend(*(id *)&v0[v2], "showMenuFromView:rect:", v0, v4, v6, v8);
    }
  }
  return result;
}

Swift::Int sub_10016C79C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, 0);
  v1 = *v0;
  v2 = v0[1];
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v8, v1, v2);
  swift_bridgeObjectRelease(v2);
  v3 = v0[2];
  v4 = v0[3];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(v8, v3, v4);
  swift_bridgeObjectRelease(v4);
  v5 = (void *)v0[4];
  if (v5)
  {
    Hasher._combine(_:)(1u);
    v6 = v5;
    NSObject.hash(into:)(v8);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_10016C85C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = (void *)v1[4];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRetain(v6);
  String.hash(into:)(a1, v5, v6);
  swift_bridgeObjectRelease(v6);
  if (v7)
  {
    Hasher._combine(_:)(1u);
    v8 = v7;
    NSObject.hash(into:)(a1);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_10016C938(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v9[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = (void *)v1[4];
  Hasher.init(_seed:)(v9, a1);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v9, v2, v3);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v9, v4, v5);
  swift_bridgeObjectRelease(v5);
  if (v6)
  {
    Hasher._combine(_:)(1u);
    v7 = v6;
    NSObject.hash(into:)(v9);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_10016C9F4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return sub_10016CA3C((uint64_t *)v5, v7) & 1;
}

uint64_t sub_10016CA3C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  char v20;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    v14 = v10 == v12 && v11 == v13;
    if (v14
      || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), result = 0, (v15 & 1) != 0))
    {
      v16 = (void *)a1[4];
      v17 = (void *)a2[4];
      if (v16)
      {
        if (v17)
        {
          sub_10011D1D8();
          v18 = v17;
          v19 = v16;
          v20 = static NSObject.== infix(_:_:)(v19, v18);

          if ((v20 & 1) != 0)
            return 1;
        }
      }
      else if (!v17)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

void sub_10016CB0C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, void *a6@<X6>, _QWORD *a7@<X8>)
{
  id v14;
  id v15;
  id v16;
  NSString v17;
  id v18;
  id v19;

  v14 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleTitle1);
  v15 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v14);

  v16 = v15;
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a5);
  v18 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:withConfiguration:", v17, v16);

  if (v18)
  {
    v19 = v18;
    v18 = objc_msgSend(v19, "imageWithTintColor:renderingMode:", a6, 1);

  }
  else
  {

  }
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = v18;
}

void destroy for FMSymbolBulletedListItem(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

}

_QWORD *initializeWithCopy for FMSymbolBulletedListItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for FMSymbolBulletedListItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (void *)a1[4];
  v9 = (void *)a2[4];
  a1[4] = v9;
  v10 = v9;

  return a1;
}

_QWORD *assignWithTake for FMSymbolBulletedListItem(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(a1[3]);
  v6 = (void *)a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for FMSymbolBulletedListItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMSymbolBulletedListItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMSymbolBulletedListItem()
{
  return &type metadata for FMSymbolBulletedListItem;
}

unint64_t sub_10016CE5C()
{
  unint64_t result;

  result = qword_1005D8A78;
  if (!qword_1005D8A78)
  {
    result = swift_getWitnessTable(&unk_100485F1C, &type metadata for FMSymbolBulletedListItem);
    atomic_store(result, (unint64_t *)&qword_1005D8A78);
  }
  return result;
}

unint64_t sub_10016CEA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  _QWORD *v15;
  char v16;
  unint64_t *v17;
  void (*v18)(_QWORD *);
  unint64_t *v19;
  unint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[4];
  _QWORD *v47;

  v45 = type metadata accessor for FMItemCellViewModel(0);
  v2 = *(_QWORD *)(v45 - 8);
  v3 = __chkstk_darwin(v45);
  v40 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)&v39 - v5;
  result = sub_10011E3A4((uint64_t)_swiftEmptyArrayStorage);
  v47 = (_QWORD *)result;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    return result;
  v9 = *(unsigned __int8 *)(v2 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = a1 + v10;
  v12 = *(_QWORD *)(v2 + 72);
  v44 = v10;
  v42 = v9 | 7;
  v43 = v12 + v10;
  v39 = a1;
  swift_bridgeObjectRetain(a1);
  v41 = xmmword_100481740;
  while (1)
  {
    sub_10016D1E4(v11, (uint64_t)v6);
    v14 = v6[*(int *)(v45 + 84)];
    v15 = v47;
    if (v47[2])
    {
      sub_1001717C0(v6[*(int *)(v45 + 84)]);
      if ((v16 & 1) != 0)
      {
        v18 = sub_1003FEC1C(v46, v14);
        if (*v17)
        {
          v19 = v17;
          sub_10016D1E4((uint64_t)v6, v40);
          v20 = *v19;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v19);
          *v19 = v20;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v20 = sub_1000702C0(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
            *v19 = v20;
          }
          v23 = *(_QWORD *)(v20 + 16);
          v22 = *(_QWORD *)(v20 + 24);
          if (v23 >= v22 >> 1)
          {
            v20 = sub_1000702C0(v22 > 1, v23 + 1, 1, v20);
            *v19 = v20;
          }
          *(_QWORD *)(v20 + 16) = v23 + 1;
          sub_10015B2C8(v40, v20 + v44 + v23 * v12);
        }
        ((void (*)(_QWORD *, _QWORD))v18)(v46, 0);
        goto LABEL_5;
      }
    }
    v24 = sub_100053F2C((uint64_t *)&unk_1005D2B90);
    v25 = swift_allocObject(v24, v43, v42);
    *(_OWORD *)(v25 + 16) = v41;
    sub_10016D1E4((uint64_t)v6, v25 + v44);
    v26 = swift_isUniquelyReferenced_nonNull_native(v15);
    v46[0] = v15;
    v28 = sub_1001717C0(v14);
    v29 = v15[2];
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (v15[3] >= v31)
    {
      if ((v26 & 1) != 0)
      {
        v35 = (_QWORD *)v46[0];
        if ((v27 & 1) == 0)
          goto LABEL_22;
      }
      else
      {
        sub_10017B0E8();
        v35 = (_QWORD *)v46[0];
        if ((v32 & 1) == 0)
          goto LABEL_22;
      }
    }
    else
    {
      sub_100173254(v31, v26);
      v33 = sub_1001717C0(v14);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_30;
      v28 = v33;
      v35 = (_QWORD *)v46[0];
      if ((v32 & 1) == 0)
      {
LABEL_22:
        v35[(v28 >> 6) + 8] |= 1 << v28;
        *(_BYTE *)(v35[6] + v28) = v14;
        *(_QWORD *)(v35[7] + 8 * v28) = v25;
        v36 = v35[2];
        v37 = __OFADD__(v36, 1);
        v38 = v36 + 1;
        if (v37)
          goto LABEL_29;
        v35[2] = v38;
        goto LABEL_4;
      }
    }
    v13 = v35[7];
    swift_bridgeObjectRelease(*(_QWORD *)(v13 + 8 * v28));
    *(_QWORD *)(v13 + 8 * v28) = v25;
LABEL_4:
    v47 = v35;
    swift_bridgeObjectRelease(0x8000000000000000);
LABEL_5:
    sub_10016D228((uint64_t)v6);
    v11 += v12;
    if (!--v8)
    {
      swift_bridgeObjectRelease(v39);
      return (unint64_t)v47;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for FMItemsListSection);
  __break(1u);
  return result;
}

uint64_t sub_10016D1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMItemCellViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10016D228(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMItemCellViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *FMTaskScheduler.shared.unsafeMutableAddressor()
{
  if (qword_1005D1C50 != -1)
    swift_once(&qword_1005D1C50, sub_10016D590);
  return &static FMTaskScheduler.shared;
}

Swift::Void __swiftcall FMTaskScheduler.schedule(_:)(NSOperation a1)
{
  uint64_t v1;

  objc_msgSend(*(id *)(v1 + 24), "addOperation:", a1.super.isa);
}

uint64_t sub_10016D2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  Swift::String v22;
  uint64_t v23;
  id v24;
  NSString v25;
  void *v26;
  id v27;
  Swift::String v28;
  uint64_t v29;
  id v30;
  NSString v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v2;
  v34 = a1;
  v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000555A8();
  v35 = a1;
  v36 = a2;
  swift_bridgeObjectRetain(a2);
  v16._object = (void *)0x80000001004B00E0;
  v16._countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v16);
  v17 = v35;
  v18 = v36;
  v19 = static DispatchQoS.default.getter();
  static OS_dispatch_queue.Attributes.concurrent.getter(v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v6);
  *(_QWORD *)(v3 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v17, v18, v15, v12, v9, 0);
  v20 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  *(_QWORD *)(v3 + 24) = v20;
  v21 = v34;
  v35 = v34;
  v36 = a2;
  swift_bridgeObjectRetain(a2);
  v22._object = (void *)0x80000001004B0100;
  v22._countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v22);
  v23 = v36;
  v24 = v20;
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v24, "setName:", v25, swift_bridgeObjectRelease(v23).n128_f64[0]);

  v26 = *(void **)(v3 + 24);
  objc_msgSend(v26, "setMaxConcurrentOperationCount:", -1);
  objc_msgSend(v26, "setUnderlyingQueue:", *(_QWORD *)(v3 + 16));
  v27 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  *(_QWORD *)(v3 + 32) = v27;
  v35 = v21;
  v36 = a2;
  swift_bridgeObjectRetain(a2);
  v28._countAndFlagsBits = 0xD000000000000019;
  v28._object = (void *)0x80000001004B0120;
  String.append(_:)(v28);
  v29 = v36;
  v30 = v27;
  swift_bridgeObjectRelease(a2);
  v31 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "setName:", v31, swift_bridgeObjectRelease(v29).n128_f64[0]);

  objc_msgSend(*(id *)(v3 + 32), "setMaxConcurrentOperationCount:", 1);
  return v3;
}

uint64_t sub_10016D590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = type metadata accessor for FMTaskScheduler();
  v1 = swift_allocObject(v0, 40, 7);
  result = sub_10016D2B8(0x746C7561666564, 0xE700000000000000);
  static FMTaskScheduler.shared = v1;
  return result;
}

uint64_t static FMTaskScheduler.shared.getter()
{
  if (qword_1005D1C50 != -1)
    swift_once(&qword_1005D1C50, sub_10016D590);
  return swift_retain(static FMTaskScheduler.shared);
}

void FMTaskScheduler.schedule(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD v7[5];
  uint64_t v8;

  v4 = *(void **)(v2 + 24);
  v7[4] = a1;
  v8 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100037DF8;
  v7[3] = &unk_10054A3E8;
  v5 = _Block_copy(v7);
  v6 = v8;
  swift_retain(a2);
  objc_msgSend(v4, "addOperationWithBlock:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
}

void FMTaskScheduler.scheduleAfter(_:_:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD aBlock[5];
  _QWORD *v36;

  v4 = v3;
  v30 = a1;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v33 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchTime(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v29 - v19;
  v31 = *(_QWORD *)(v4 + 16);
  static DispatchTime.now()(v18);
  + infix(_:_:)(v17, a3);
  v21 = *(void (**)(char *, uint64_t))(v14 + 8);
  v21(v17, v13);
  v22 = (_QWORD *)swift_allocObject(&unk_10054A420, 40, 7);
  v23 = v30;
  v22[2] = v4;
  v22[3] = v23;
  v22[4] = a2;
  aBlock[4] = sub_10016D9EC;
  v36 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10054A438;
  v24 = _Block_copy(aBlock);
  swift_retain(v4);
  v25 = swift_retain(a2);
  static DispatchQoS.unspecified.getter(v25);
  v34 = _swiftEmptyArrayStorage;
  v26 = sub_100056580();
  v27 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v28 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v27, v28, v7, v26);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v20, v12, v9, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v32);
  v21(v20, v13);
  swift_release(v36);
}

void sub_10016D924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD v7[5];
  uint64_t v8;

  v4 = *(void **)(a1 + 24);
  v7[4] = a2;
  v8 = a3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100037DF8;
  v7[3] = &unk_10054A4D8;
  v5 = _Block_copy(v7);
  v6 = v8;
  swift_retain(a3);
  objc_msgSend(v4, "addOperationWithBlock:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
}

uint64_t sub_10016D9C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10016D9EC()
{
  uint64_t *v0;

  sub_10016D924(v0[2], v0[3], v0[4]);
}

id FMTaskScheduler.callbackQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

Swift::Void __swiftcall FMTaskScheduler.scheduleLowPriority(_:)(NSOperation a1)
{
  uint64_t v1;

  objc_msgSend(*(id *)(v1 + 32), "addOperation:", a1.super.isa);
}

void FMTaskScheduler.scheduleLowPriority(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD v7[5];
  uint64_t v8;

  v4 = *(void **)(v2 + 32);
  v7[4] = a1;
  v8 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100037DF8;
  v7[3] = &unk_10054A460;
  v5 = _Block_copy(v7);
  v6 = v8;
  swift_retain(a2);
  objc_msgSend(v4, "addOperationWithBlock:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
}

id *FMTaskScheduler.deinit()
{
  id *v0;

  return v0;
}

uint64_t FMTaskScheduler.__deallocating_deinit()
{
  id *v0;

  return swift_deallocClassInstance(v0, 40, 7);
}

id static FMTaskScheduler.schedule(_:)(uint64_t a1)
{
  if (qword_1005D1C50 != -1)
    swift_once(&qword_1005D1C50, sub_10016D590);
  return objc_msgSend(*(id *)(static FMTaskScheduler.shared + 24), "addOperation:", a1);
}

void static FMTaskScheduler.schedule(_:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD v7[5];
  uint64_t v8;

  if (qword_1005D1C50 != -1)
    swift_once(&qword_1005D1C50, sub_10016D590);
  v4 = *(void **)(static FMTaskScheduler.shared + 24);
  v7[4] = a1;
  v8 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100037DF8;
  v7[3] = &unk_10054A488;
  v5 = _Block_copy(v7);
  v6 = v8;
  swift_retain(a2);
  objc_msgSend(v4, "addOperationWithBlock:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
}

void static FMTaskScheduler.scheduleAfter(_:_:)(uint64_t a1, uint64_t a2, double a3)
{
  if (qword_1005D1C50 != -1)
    swift_once(&qword_1005D1C50, sub_10016D590);
  FMTaskScheduler.scheduleAfter(_:_:)(a1, a2, a3);
}

id static FMTaskScheduler.callbackQueue.getter()
{
  if (qword_1005D1C50 != -1)
    swift_once(&qword_1005D1C50, sub_10016D590);
  return *(id *)(static FMTaskScheduler.shared + 16);
}

id static FMTaskScheduler.scheduleLowPriority(_:)(uint64_t a1)
{
  if (qword_1005D1C50 != -1)
    swift_once(&qword_1005D1C50, sub_10016D590);
  return objc_msgSend(*(id *)(static FMTaskScheduler.shared + 32), "addOperation:", a1);
}

void static FMTaskScheduler.scheduleLowPriority(_:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD v7[5];
  uint64_t v8;

  if (qword_1005D1C50 != -1)
    swift_once(&qword_1005D1C50, sub_10016D590);
  v4 = *(void **)(static FMTaskScheduler.shared + 32);
  v7[4] = a1;
  v8 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100037DF8;
  v7[3] = &unk_10054A4B0;
  v5 = _Block_copy(v7);
  v6 = v8;
  swift_retain(a2);
  objc_msgSend(v4, "addOperationWithBlock:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
}

uint64_t type metadata accessor for FMTaskScheduler()
{
  return objc_opt_self(_TtC6FindMy15FMTaskScheduler);
}

Swift::Int sub_10016DE68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v0 = Hasher.init(_seed:)(v7, 0);
  v1 = FMIPDevice.identifier.getter(v0);
  v3 = v2;
  String.hash(into:)(v7, v1, v2);
  swift_bridgeObjectRelease(v3);
  v4 = type metadata accessor for FMIPDeviceImageSize(0);
  v5 = sub_100008000(&qword_1005D8D48, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceImageSize, (uint64_t)&protocol conformance descriptor for FMIPDeviceImageSize);
  dispatch thunk of Hashable.hash(into:)(v7, v4, v5);
  return Hasher._finalize()();
}

uint64_t sub_10016DF0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = FMIPDevice.identifier.getter(a1);
  v4 = v3;
  String.hash(into:)(a1, v2, v3);
  swift_bridgeObjectRelease(v4);
  v5 = type metadata accessor for FMIPDeviceImageSize(0);
  v6 = sub_100008000(&qword_1005D8D48, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceImageSize, (uint64_t)&protocol conformance descriptor for FMIPDeviceImageSize);
  return dispatch thunk of Hashable.hash(into:)(a1, v5, v6);
}

Swift::Int sub_10016DF98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[9];

  v1 = Hasher.init(_seed:)(v8, a1);
  v2 = FMIPDevice.identifier.getter(v1);
  v4 = v3;
  String.hash(into:)(v8, v2, v3);
  swift_bridgeObjectRelease(v4);
  v5 = type metadata accessor for FMIPDeviceImageSize(0);
  v6 = sub_100008000(&qword_1005D8D48, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceImageSize, (uint64_t)&protocol conformance descriptor for FMIPDeviceImageSize);
  dispatch thunk of Hashable.hash(into:)(v8, v5, v6);
  return Hasher._finalize()();
}

void sub_10016E03C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v1 = *(_QWORD *)(v0 + 32);
  if (!v1)
    goto LABEL_5;
  v2 = *(_QWORD *)(v0 + 16);
  swift_beginAccess(v2 + 16, v8, 33, 0);
  swift_retain(v1);
  v3 = sub_1001138E0((uint64_t *)(v2 + 16), v1);
  v4 = v3;
  v5 = *(_QWORD *)(v2 + 16);
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v7 = v5;
    else
      v7 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease(v5);
    if (v6 >= v4)
      goto LABEL_4;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6 >= v3)
    {
LABEL_4:
      sub_1002006EC(v4, v6);
      swift_endAccess(v8);
      swift_release(v1);
LABEL_5:
      swift_release(*(_QWORD *)(v0 + 16));
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
      swift_release(*(_QWORD *)(v0 + 32));
      swift_release(*(_QWORD *)(v0 + 40));

      return;
    }
  }
  __break(1u);
}

uint64_t sub_10016E150()
{
  uint64_t v0;

  sub_10016E03C();
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t sub_10016E170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v4 = sub_100053F2C(&qword_1005D8E28);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D7320);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMIPProductType(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
  if (v15 == enum case for FMIPProductType.b389(_:))
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    v16 = sub_100053F2C((uint64_t *)&unk_1005D6DD0);
    swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
    v17 = Future.init(_:)(sub_10016EE80, 0);
    v30 = v17;
    v18 = sub_10003F774(&qword_1005E5630, (uint64_t *)&unk_1005D6DD0, (uint64_t)&protocol conformance descriptor for Future<A, B>);
    v19 = Publisher.eraseToAnyPublisher()(v16, v18);
    swift_release(v17);
    sub_1000051EC((uint64_t)v14, &qword_1005D8EA8);
  }
  else if (v15 == enum case for FMIPProductType.zeus(_:))
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    v20 = sub_100053F2C((uint64_t *)&unk_1005D6DD0);
    swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    v21 = Future.init(_:)(sub_10016EE80, 0);
    v30 = v21;
    v22 = sub_10003F774(&qword_1005E5630, (uint64_t *)&unk_1005D6DD0, (uint64_t)&protocol conformance descriptor for Future<A, B>);
    v19 = Publisher.eraseToAnyPublisher()(v20, v22);
    v23 = swift_release(v21);
    v24 = type metadata accessor for FMIPZeusProductInformation(0, v23);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v14, v24);
  }
  else if (v15 == enum case for FMIPProductType.hawkeye(_:))
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    sub_10005DAA0((uint64_t)v14, (uint64_t)v10, &qword_1005D7320);
    v19 = sub_10016EF28((uint64_t)v10, a2);
    sub_1000051EC((uint64_t)v10, &qword_1005D7320);
  }
  else
  {
    v25 = sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
    v26 = sub_10017F7E8();
    Fail.init(error:)(v26, v25, &type metadata for FMProductAssetProvider.Error, v26);
    v27 = sub_10003F774((unint64_t *)&unk_1005E5620, &qword_1005D8E28, (uint64_t)&protocol conformance descriptor for Fail<A, B>);
    v19 = Publisher.eraseToAnyPublisher()(v4, v27);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v19;
}

uint64_t sub_10016E4C8(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t);
  uint64_t v33;
  NSString v34;
  id v35;
  uint64_t v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  void (*v82)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unsigned int v115;
  _QWORD v116[6];

  v115 = a2;
  v3 = type metadata accessor for FMIPUnknownItem(0);
  v101 = *(_QWORD *)(v3 - 8);
  v102 = v3;
  __chkstk_darwin(v3);
  v99 = v4;
  v100 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D8E48);
  v104 = *(_QWORD *)(v5 - 8);
  v105 = v5;
  __chkstk_darwin(v5);
  v103 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100053F2C(&qword_1005D8E50);
  v107 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v106 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D8E58);
  v110 = *(_QWORD *)(v8 - 8);
  v111 = v8;
  __chkstk_darwin(v8);
  v108 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C(&qword_1005D7320);
  v11 = __chkstk_darwin(v10);
  v92 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v96 = (char *)&v90 - v13;
  v98 = type metadata accessor for FMIPHawkeyeProductInformation(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v91 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_100053F2C(&qword_1005D8E28);
  v94 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v93 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100053F2C(&qword_1005D8E30);
  v112 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100053F2C(&qword_1005D8E38);
  v113 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for FMIPProductType(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v24);
  v29 = (char *)&v90 - v28;
  v30 = a1;
  v31 = FMIPUnknownItem.productType.getter(v27);
  LOBYTE(a1) = FMIPProductType.isAirTag.getter(v31);
  v32 = *(uint64_t (**)(char *, uint64_t))(v23 + 8);
  v33 = v32(v29, v22);
  if ((a1 & 1) == 0)
  {
    v41 = v115;
    if ((v115 & 0xFE) != 2)
    {
      v76 = FMIPUnknownItem.productType.getter(v33);
      FMIPProductType.productInformation.getter(v116, v76);
      v32(v26, v22);
      if (v116[3])
      {
        v77 = sub_100053F2C(&qword_1005D8E98);
        v78 = (uint64_t)v96;
        v79 = v98;
        v80 = swift_dynamicCast(v96, v116, v77, v98, 6);
        v81 = v97;
        v82 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v97 + 56);
        v82(v78, v80 ^ 1u, 1, v79);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v78, 1, v79) != 1)
        {
          v83 = v91;
          (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v91, v78, v79);
          v84 = (uint64_t)v92;
          (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v92, v83, v79);
          v82(v84, 0, 1, v79);
          v40 = sub_10016EF28(v84, v41);
          sub_1000051EC(v84, &qword_1005D7320);
          (*(void (**)(char *, uint64_t))(v81 + 8))(v83, v79);
          return v40;
        }
      }
      else
      {
        sub_1000051EC((uint64_t)v116, (uint64_t *)&unk_1005E3AC0);
        v78 = (uint64_t)v96;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v97 + 56))(v96, 1, 1, v98);
      }
      sub_1000051EC(v78, &qword_1005D7320);
      return sub_10017E614(v41);
    }
    v42 = swift_allocObject(&unk_10054A660, 24, 7);
    v43 = v114;
    swift_weakInit(v42 + 16, v114);
    v45 = v100;
    v44 = v101;
    v46 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v100, v30, v102);
    v47 = *(unsigned __int8 *)(v44 + 80);
    v48 = (v47 + 17) & ~v47;
    v49 = (v99 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    v50 = swift_allocObject(&unk_10054A7F0, v49 + 8, v47 | 7);
    *(_BYTE *)(v50 + 16) = v41;
    (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v50 + v48, v45, v46);
    *(_QWORD *)(v50 + v49) = v42;
    v51 = sub_100053F2C(&qword_1005D8E60);
    swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
    v52 = Future.init(_:)(sub_10017F8F4, v50);
    v116[0] = v52;
    v53 = sub_10003F774(&qword_1005D8E68, &qword_1005D8E60, (uint64_t)&protocol conformance descriptor for Future<A, B>);
    v54 = Publisher.eraseToAnyPublisher()(v51, v53);
    swift_release(v52);
    v116[0] = v54;
    v55 = swift_retain(v43);
    v56 = static Subscribers.Demand.unlimited.getter(v55);
    v57 = sub_100053F2C(&qword_1005D8E70);
    v58 = sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
    v59 = sub_100053F2C(&qword_1005D6DC0);
    v60 = sub_10003F774(&qword_1005D8E78, &qword_1005D8E70, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v61 = sub_10003F774((unint64_t *)&unk_1005D7E70, &qword_1005D6DC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v62 = v103;
    Publisher.flatMap<A, B>(maxPublishers:_:)(v56, sub_10017F958, v43, v57, v58, v59, v60, v61);
    swift_release(v43);
    swift_release(v116[0]);
    v63 = swift_allocObject(&unk_10054A818, 25, 7);
    *(_QWORD *)(v63 + 16) = v43;
    *(_BYTE *)(v63 + 24) = v41;
    v64 = sub_10003F774(&qword_1005D8E80, &qword_1005D8E48, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
    swift_retain(v43);
    v66 = v105;
    v65 = v106;
    Publisher.tryCatch<A>(_:)(sub_10017FB34, v63, v105, v59, v64, v61);
    v67 = swift_release(v63);
    (*(void (**)(char *, uint64_t, __n128))(v104 + 8))(v62, v66, v67);
    v68 = sub_10003F774(&qword_1005D8E88, &qword_1005D8E50, (uint64_t)&protocol conformance descriptor for Publishers.TryCatch<A, B>);
    v69 = sub_10017F7E8();
    v71 = v108;
    v70 = v109;
    Publisher.mapError<A>(_:)(State.rawValue.getter, 0, v109, &type metadata for FMProductAssetProvider.Error, v68, v69);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v65, v70);
    v72 = sub_10003F774(&qword_1005D8E90, &qword_1005D8E58, (uint64_t)&protocol conformance descriptor for Publishers.MapError<A, B>);
    v73 = v111;
    v40 = Publisher.eraseToAnyPublisher()(v111, v72);
    v74 = *(void (**)(char *, uint64_t))(v110 + 8);
    v75 = v71;
LABEL_10:
    v74(v75, v73);
    return v40;
  }
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v34);

  if (!v35)
  {
    v85 = sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
    v86 = sub_10017F7E8();
    v87 = v93;
    Fail.init(error:)(v86, v85, &type metadata for FMProductAssetProvider.Error, v86);
    v88 = sub_10003F774((unint64_t *)&unk_1005E5620, &qword_1005D8E28, (uint64_t)&protocol conformance descriptor for Fail<A, B>);
    v73 = v95;
    v40 = Publisher.eraseToAnyPublisher()(v95, v88);
    v74 = *(void (**)(char *, uint64_t))(v94 + 8);
    v75 = v87;
    goto LABEL_10;
  }
  v116[0] = v35;
  v36 = sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  v37 = v35;
  Just.init(_:)(v116, v36);
  v38 = sub_10017F7E8();
  Just.setFailureType<A>(to:)(&type metadata for FMProductAssetProvider.Error, v16, &type metadata for FMProductAssetProvider.Error, v38);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v18, v16);
  v39 = sub_10003F774(&qword_1005D8E40, &qword_1005D8E38, (uint64_t)&protocol conformance descriptor for Result<A, B>.Publisher);
  v40 = Publisher.eraseToAnyPublisher()(v19, v39);

  (*(void (**)(char *, uint64_t))(v113 + 8))(v21, v19);
  return v40;
}

void sub_10016EE80(void (*a1)(id *))
{
  id v2;
  void *v3;
  id v4;
  char v5;

  sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  v2 = sub_100342FA4(6775124, 0xE300000000000000, 6778480, 0xE300000000000000);
  if (v2)
  {
    v3 = v2;
    v4 = v2;
    v5 = 0;
    a1(&v4);

  }
  else
  {
    v4 = 0;
    v5 = 1;
    a1(&v4);
  }
}

uint64_t sub_10016EF28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = v2;
  v41 = a2;
  v5 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100053F2C(&qword_1005D8DF8);
  v36 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v35 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C(&qword_1005D8E00);
  v39 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  __chkstk_darwin(v10);
  v37 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C(&qword_1005D7320);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FMIPHawkeyeProductInformation(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (uint8_t *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007464(a1, (uint64_t)v14, &qword_1005D7320);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1000051EC((uint64_t)v14, &qword_1005D7320);
    return sub_10017E614(v41);
  }
  else
  {
    (*(void (**)(uint8_t *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    v20 = v41;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *(unsigned int *)*(&off_10054A8C0 + (char)v41), v5);
    v21 = sub_100253C90(v18, (uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v42 = v21;
    v22 = swift_allocObject(&unk_10054A7C8, 25, 7);
    *(_QWORD *)(v22 + 16) = v3;
    *(_BYTE *)(v22 + 24) = v20;
    swift_retain(v3);
    v23 = sub_100053F2C(&qword_1005D8E08);
    v24 = sub_100053F2C(&qword_1005D6DC0);
    v25 = sub_10003F774(&qword_1005D8E10, &qword_1005D8E08, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v26 = sub_10003F774((unint64_t *)&unk_1005D7E70, &qword_1005D6DC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v27 = v35;
    Publisher.tryCatch<A>(_:)(sub_10017F850, v22, v23, v24, v25, v26);
    swift_release(v22);
    swift_release(v42);
    v28 = sub_10003F774(&qword_1005D8E18, &qword_1005D8DF8, (uint64_t)&protocol conformance descriptor for Publishers.TryCatch<A, B>);
    v29 = sub_10017F7E8();
    v31 = v37;
    v30 = v38;
    Publisher.mapError<A>(_:)(State.rawValue.getter, 0, v38, &type metadata for FMProductAssetProvider.Error, v28, v29);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v30);
    v32 = sub_10003F774(&qword_1005D8E20, &qword_1005D8E00, (uint64_t)&protocol conformance descriptor for Publishers.MapError<A, B>);
    v33 = v40;
    v19 = Publisher.eraseToAnyPublisher()(v40, v32);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v33);
    (*(void (**)(uint8_t *, uint64_t))(v16 + 8))(v18, v15);
  }
  return v19;
}

void sub_10016F2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t Strong;
  char *v23;
  _QWORD v24[5];
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[32];

  v34 = a4;
  v35 = a5;
  v25 = type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0);
  v8 = __chkstk_darwin(v25);
  v26 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)v24 - v10;
  v12 = type metadata accessor for FMIPDevice(0);
  v36 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v24[4] = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v30 = (char *)v24 - v16;
  __chkstk_darwin(v15);
  v17 = type metadata accessor for FMIPDeviceImageCacheRequest(0);
  v31 = *(_QWORD *)(v17 - 8);
  v32 = v17;
  __chkstk_darwin(v17);
  v37 = type metadata accessor for FMIPDeviceImageSize(0);
  v33 = *(_QWORD *)(v37 - 8);
  v18 = __chkstk_darwin(v37);
  v24[3] = (char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  __chkstk_darwin(v20);
  v21 = swift_allocObject(&unk_10054A728, 32, 7);
  v29 = a1;
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  a3 += 16;
  swift_beginAccess(a3, v38, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    v28 = v21;
    v23 = (char *)&loc_10016F4FC + *((int *)qword_10016F9F0 + v35);
    v24[2] = v11;
    v27 = Strong;
    __asm { BR              X10 }
  }
  swift_retain(a2);
  swift_release(v21);
}

void sub_10016F9C8()
{
  JUMPOUT(0x10016F528);
}

uint64_t sub_10016FA04(void (*a1)(uint64_t), uint64_t a2, int a3, uint8_t *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t Strong;
  uint64_t v70;
  uint64_t v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  uint8_t *v76;
  uint64_t v77;
  Swift::String v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  Swift::String v83;
  void *object;
  void *v85;
  __n128 v86;
  Swift::String v87;
  Swift::String v88;
  unint64_t v89;
  void (*v90)(uint64_t);
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  uint8_t *v108;
  void (*v109)(uint64_t);
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  char v117[32];

  v100 = a5;
  v108 = a4;
  v109 = a1;
  v112 = a2;
  v97 = type metadata accessor for UUID(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMIPUnknownItem(0);
  v101 = *(_QWORD *)(v7 - 8);
  v102 = v7;
  __chkstk_darwin(v7);
  v107 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v103 = *(_QWORD *)(v9 - 8);
  v104 = v9;
  __chkstk_darwin(v9);
  v99 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100053F2C(&qword_1005D8EA0);
  __chkstk_darwin(v110);
  v111 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C((uint64_t *)&unk_1005D7E90);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v95 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v95 - v19;
  v21 = sub_100053F2C(&qword_1005D7E48);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v95 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v95 - v28;
  v30 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  v31 = __chkstk_darwin(v30);
  v105 = (char *)&v95 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v95 - v34;
  v36 = __chkstk_darwin(v33);
  v38 = (char *)&v95 - v37;
  v39 = __chkstk_darwin(v36);
  v41 = (char *)&v95 - v40;
  v42 = __chkstk_darwin(v39);
  v106 = (char *)&v95 - v43;
  v98 = a3;
  if (!(_BYTE)a3)
  {
    FMIPUnknownItem.utMetadata.getter(v42);
    v49 = type metadata accessor for FMIPUnknownItemUTMetadata(0);
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v15, 1, v49) == 1)
    {
      sub_1000051EC((uint64_t)v15, (uint64_t *)&unk_1005D7E90);
      v51 = v109;
      v53 = v103;
      v52 = v104;
      v48 = (uint64_t)v105;
    }
    else
    {
      FMIPUnknownItemUTMetadata.learnMoreInfo.getter();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v15, v49);
      v62 = type metadata accessor for FMIPUnknownItemProductMetadata(0);
      v63 = *(_QWORD *)(v62 - 8);
      v64 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48))(v24, 1, v62);
      v51 = v109;
      v48 = (uint64_t)v105;
      if (v64 != 1)
      {
        FMIPUnknownItemProductMetadata.image.getter();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v24, v62);
        v41 = v35;
        v47 = v107;
        goto LABEL_22;
      }
      sub_1000051EC((uint64_t)v24, &qword_1005D7E48);
      v53 = v103;
      v52 = v104;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v35, 1, 1, v52);
    v41 = v35;
    v46 = (uint64_t)v106;
    v47 = v107;
    goto LABEL_25;
  }
  if (a3 == 2)
  {
    FMIPUnknownItem.utMetadata.getter(v42);
    v54 = type metadata accessor for FMIPUnknownItemUTMetadata(0);
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v18, 1, v54) == 1)
    {
      sub_1000051EC((uint64_t)v18, (uint64_t *)&unk_1005D7E90);
      v51 = v109;
    }
    else
    {
      FMIPUnknownItemUTMetadata.learnMoreInfo.getter();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v18, v54);
      v65 = type metadata accessor for FMIPUnknownItemProductMetadata(0);
      v66 = *(_QWORD *)(v65 - 8);
      v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48))(v27, 1, v65);
      v51 = v109;
      if (v67 != 1)
      {
        FMIPUnknownItemProductMetadata.image.getter();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v27, v65);
        v41 = v38;
        v46 = (uint64_t)v106;
        v47 = v107;
        v53 = v103;
        v52 = v104;
        goto LABEL_24;
      }
      sub_1000051EC((uint64_t)v27, &qword_1005D7E48);
    }
    v53 = v103;
    v52 = v104;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v103 + 56))(v38, 1, 1, v104);
    v41 = v38;
    v46 = (uint64_t)v106;
    v47 = v107;
LABEL_24:
    v48 = (uint64_t)v105;
    goto LABEL_25;
  }
  if (a3 != 3)
  {
    v56 = v111;
    swift_storeEnumTagMultiPayload(v111, v110, 1);
    v109((uint64_t)v56);
    v57 = &qword_1005D8EA0;
    v58 = (uint64_t)v56;
    return sub_1000051EC(v58, v57);
  }
  FMIPUnknownItem.utMetadata.getter(v42);
  v44 = type metadata accessor for FMIPUnknownItemUTMetadata(0);
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v20, 1, v44) != 1)
  {
    FMIPUnknownItemUTMetadata.disableInfo.getter();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v20, v44);
    v59 = type metadata accessor for FMIPUnknownItemProductMetadata(0);
    v60 = *(_QWORD *)(v59 - 8);
    v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48))(v29, 1, v59);
    v47 = v107;
    v48 = (uint64_t)v105;
    if (v61 == 1)
    {
      sub_1000051EC((uint64_t)v29, &qword_1005D7E48);
      v46 = (uint64_t)v106;
      goto LABEL_13;
    }
    FMIPUnknownItemProductMetadata.image.getter();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v29, v59);
    v51 = v109;
LABEL_22:
    v46 = (uint64_t)v106;
    v53 = v103;
    v52 = v104;
    goto LABEL_25;
  }
  sub_1000051EC((uint64_t)v20, (uint64_t *)&unk_1005D7E90);
  v46 = (uint64_t)v106;
  v47 = v107;
  v48 = (uint64_t)v105;
LABEL_13:
  v53 = v103;
  v52 = v104;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v103 + 56))(v41, 1, 1, v104);
  v51 = v109;
LABEL_25:
  sub_10005DAA0((uint64_t)v41, v46, (uint64_t *)&unk_1005D3470);
  sub_100007464(v46, v48, (uint64_t *)&unk_1005D3470);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v48, 1, v52) == 1)
  {
    v68 = v100 + 16;
    sub_1000051EC(v48, (uint64_t *)&unk_1005D3470);
    swift_beginAccess(v68, v117, 0, 0);
    Strong = swift_weakLoadStrong(v68);
    if (Strong)
    {
      v70 = Strong;
      v71 = (*(uint64_t (**)(char *, uint8_t *, uint64_t))(v101 + 16))(v47, v108, v102);
      v72 = static os_log_type_t.error.getter(v71);
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v73 = type metadata accessor for Logger(0);
      v74 = sub_100056D88(v73, (uint64_t)qword_1005F5748);
      v75 = Logger.logObject.getter(v74);
      if (os_log_type_enabled(v75, v72))
      {
        v76 = (uint8_t *)swift_slowAlloc(12, -1);
        v77 = swift_slowAlloc(32, -1);
        v109 = (void (*)(uint64_t))v77;
        *(_DWORD *)v76 = 136315138;
        v108 = v76 + 4;
        v114 = 0;
        v115 = 0xE000000000000000;
        v116 = v77;
        _StringGuts.grow(_:)(54);
        v78._countAndFlagsBits = 0xD00000000000001FLL;
        v78._object = (void *)0x80000001004B03C0;
        String.append(_:)(v78);
        v79 = v95;
        FMIPUnknownItem.identifier.getter(v80);
        v81 = sub_100008000((unint64_t *)&qword_1005DA7C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v82 = v97;
        v83._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v97, v81);
        object = v83._object;
        String.append(_:)(v83);
        v85 = object;
        v47 = v107;
        v86 = swift_bridgeObjectRelease(v85);
        (*(void (**)(char *, uint64_t, __n128))(v96 + 8))(v79, v82, v86);
        v87._object = (void *)0x80000001004B03E0;
        v87._countAndFlagsBits = 0xD000000000000012;
        String.append(_:)(v87);
        v113 = v98;
        _print_unlocked<A, B>(_:_:)(&v113, &v114, &type metadata for FMProductAssetProvider.AssetType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        v88._countAndFlagsBits = 41;
        v88._object = (void *)0xE100000000000000;
        String.append(_:)(v88);
        v89 = v115;
        v114 = sub_100056DA0(v114, v115, &v116);
        v46 = (uint64_t)v106;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
        swift_bridgeObjectRelease(v89);
        _os_log_impl((void *)&_mh_execute_header, v75, v72, "FMProductAssetProvider: %s", v76, 0xCu);
        v90 = v109;
        swift_arrayDestroy(v109, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v90, -1, -1);
        swift_slowDealloc(v76, -1, -1);
      }
      swift_release(v70);

      (*(void (**)(char *, uint64_t))(v101 + 8))(v47, v102);
    }
    v91 = (uint64_t)v111;
    swift_storeEnumTagMultiPayload(v111, v110, 1);
    v51(v91);
    sub_1000051EC(v91, &qword_1005D8EA0);
  }
  else
  {
    v92 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v99, v48, v52);
    v93 = (uint64_t)v111;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v111, v92, v52);
    swift_storeEnumTagMultiPayload(v93, v110, 0);
    v51(v93);
    sub_1000051EC(v93, &qword_1005D8EA0);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v92, v52);
  }
  v57 = (uint64_t *)&unk_1005D3470;
  v58 = v46;
  return sub_1000051EC(v58, v57);
}

uint64_t sub_100170414(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  void *object;
  void *v29;
  Swift::String v30;
  unint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint8_t *v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;

  v2 = type metadata accessor for NSURLSession.DataTaskPublisher(0);
  v64 = *(_QWORD *)(v2 - 8);
  v65 = v2;
  __chkstk_darwin(v2);
  v63 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C(&qword_1005D8DC8);
  v68 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v66 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D8DD0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v67 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  v60 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v54 - v13;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v62 = a1;
  v59 = v15;
  v16 = ((uint64_t (*)(char *, uint64_t, uint64_t))v15)((char *)&v54 - v13, a1, v9);
  v17 = static os_log_type_t.default.getter(v16);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v18 = type metadata accessor for Logger(0);
  v19 = sub_100056D88(v18, (uint64_t)qword_1005F5748);
  v20 = Logger.logObject.getter(v19);
  if (os_log_type_enabled(v20, v17))
  {
    v21 = swift_slowAlloc(12, -1);
    v58 = v6;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc(32, -1);
    v56 = v23;
    v57 = v7;
    *(_DWORD *)v22 = 136315138;
    v54 = v22 + 4;
    v55 = v22;
    v69 = 0;
    v70 = 0xE000000000000000;
    v71 = v23;
    _StringGuts.grow(_:)(43);
    v24._object = (void *)0x80000001004B02F0;
    v24._countAndFlagsBits = 0xD000000000000029;
    String.append(_:)(v24);
    v25 = sub_100008000((unint64_t *)&unk_1005D39D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v26._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v9, v25);
    v27 = v4;
    object = v26._object;
    String.append(_:)(v26);
    v29 = object;
    v4 = v27;
    swift_bridgeObjectRelease(v29);
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    String.append(_:)(v30);
    v31 = v70;
    v69 = sub_100056DA0(v69, v70, &v71);
    v7 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);
    swift_bridgeObjectRelease(v31);
    v32 = v55;
    _os_log_impl((void *)&_mh_execute_header, v20, v17, "FMProductAssetProvider: %s", v55, 0xCu);
    v33 = v56;
    swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    v6 = v58;
    swift_slowDealloc(v32, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  v35 = v61;
  v34 = v62;
  v36 = v63;
  NSURLSession.dataTaskPublisher(for:)(v62);
  v37 = swift_allocObject(&unk_10054A660, 24, 7);
  swift_weakInit(v37 + 16, v35);
  v38 = v60;
  v59(v60, v34, v9);
  v39 = *(unsigned __int8 *)(v10 + 80);
  v40 = (v39 + 24) & ~v39;
  v41 = swift_allocObject(&unk_10054A778, v40 + v11, v39 | 7);
  *(_QWORD *)(v41 + 16) = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v41 + v40, v38, v9);
  v42 = swift_allocObject(&unk_10054A7A0, 32, 7);
  *(_QWORD *)(v42 + 16) = sub_10017F74C;
  *(_QWORD *)(v42 + 24) = v41;
  v43 = sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  v44 = sub_100008000(&qword_1005D8DD8, (uint64_t (*)(uint64_t))&type metadata accessor for NSURLSession.DataTaskPublisher, (uint64_t)&protocol conformance descriptor for NSURLSession.DataTaskPublisher);
  v46 = v65;
  v45 = v66;
  Publisher.tryMap<A>(_:)(sub_10017F7B0, v42, v65, v43, v44);
  v47 = swift_release(v42);
  (*(void (**)(char *, uint64_t, __n128))(v64 + 8))(v36, v46, v47);
  v48 = sub_10003F774(&qword_1005D8DE0, &qword_1005D8DC8, (uint64_t)&protocol conformance descriptor for Publishers.TryMap<A, B>);
  v49 = sub_10017F7E8();
  v50 = v67;
  Publisher.mapError<A>(_:)(State.rawValue.getter, 0, v4, &type metadata for FMProductAssetProvider.Error, v48, v49);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v45, v4);
  v51 = sub_10003F774(&qword_1005D8DF0, &qword_1005D8DD0, (uint64_t)&protocol conformance descriptor for Publishers.MapError<A, B>);
  v52 = Publisher.eraseToAnyPublisher()(v6, v51);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v50, v6);
  return v52;
}

uint64_t storeEnumTagSinglePayload for FMProductAssetProvider.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100170990 + 4 * asc_100485FC0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1001709B0 + 4 * byte_100485FC5[v4]))();
}

_BYTE *sub_100170990(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1001709B0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1001709B8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1001709C0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1001709C8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1001709D0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FMProductAssetProvider.Error()
{
  return &type metadata for FMProductAssetProvider.Error;
}

uint64_t *sub_1001709EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for FMIPDevice(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for FMIPDeviceImageSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_100170A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for FMIPDevice(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for FMIPDeviceImageSize(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_100170AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for FMIPDevice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for FMIPDeviceImageSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_100170B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for FMIPDevice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for FMIPDeviceImageSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_100170BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for FMIPDevice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for FMIPDeviceImageSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_100170C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for FMIPDevice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for FMIPDeviceImageSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100170CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100170CEC);
}

uint64_t sub_100170CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for FMIPDevice(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for FMIPDeviceImageSize(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100170D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100170D6C);
}

uint64_t sub_100170D6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for FMIPDevice(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for FMIPDeviceImageSize(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_100170DE8()
{
  return sub_100008000(&qword_1005D8D28, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext, (uint64_t)&unk_1004860B8);
}

unint64_t sub_100170E18()
{
  unint64_t result;

  result = qword_1005D8D30;
  if (!qword_1005D8D30)
  {
    result = swift_getWitnessTable(&unk_1004861A0, &type metadata for FMProductAssetProvider.Error);
    atomic_store(result, (unint64_t *)&qword_1005D8D30);
  }
  return result;
}

id sub_100170E5C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  Class isa;
  id v14;
  char *v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint8_t *v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  Swift::String v28;
  void *object;
  void *v30;
  Swift::String v31;
  unint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD v37[2];
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43[24];
  uint64_t v44;

  v40 = a5;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_allocWithZone((Class)UIImage);
  sub_100027B98(a1, a2);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v12, "initWithData:", isa);
  sub_100027BDC(a1, a2);

  if (!v14)
  {
    v15 = v11;
    swift_beginAccess(a4 + 16, v43, 0, 0);
    Strong = swift_weakLoadStrong(a4 + 16);
    if (Strong)
    {
      v17 = Strong;
      v18 = v9;
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v40, v8);
      v20 = static os_log_type_t.error.getter(v19);
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v21 = type metadata accessor for Logger(0);
      v22 = sub_100056D88(v21, (uint64_t)qword_1005F5748);
      v23 = Logger.logObject.getter(v22);
      if (os_log_type_enabled(v23, v20))
      {
        LODWORD(v40) = v20;
        v24 = (uint8_t *)swift_slowAlloc(12, -1);
        v25 = swift_slowAlloc(32, -1);
        v39 = v25;
        v38 = v24;
        *(_DWORD *)v24 = 136315138;
        v44 = v25;
        v37[1] = v24 + 4;
        v41 = 0;
        v42 = 0xE000000000000000;
        _StringGuts.grow(_:)(28);
        v26._object = (void *)0x80000001004B0320;
        v26._countAndFlagsBits = 0xD00000000000001ALL;
        String.append(_:)(v26);
        v27 = sub_100008000((unint64_t *)&unk_1005D39D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v8, v27);
        object = v28._object;
        String.append(_:)(v28);
        v30 = object;
        v18 = v9;
        swift_bridgeObjectRelease(v30);
        v31._countAndFlagsBits = 0;
        v31._object = (void *)0xE000000000000000;
        String.append(_:)(v31);
        v32 = v42;
        v41 = sub_100056DA0(v41, v42, &v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
        swift_bridgeObjectRelease(v32);
        v33 = v38;
        _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v40, "FMProductAssetProvider: %s", v38, 0xCu);
        v34 = v39;
        swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v34, -1, -1);
        swift_slowDealloc(v33, -1, -1);
      }
      swift_release(v17);

      (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v8);
    }
    v35 = sub_10017F7E8();
    swift_allocError(&type metadata for FMProductAssetProvider.Error, v35, 0, 0);
    swift_willThrow();
  }
  return v14;
}

uint64_t sub_100171198(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a3;
  v22 = type metadata accessor for FMIPDevice(0);
  v5 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D8D38);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v22 - v12;
  v14 = *a2;
  v15 = a2[1];
  v16 = swift_allocObject(&unk_10054A700, 32, 7);
  *(_QWORD *)(v16 + 16) = v14;
  *(_QWORD *)(v16 + 24) = v15;
  sub_10004FC74(a1, (uint64_t)v13, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
  v17 = *(int *)(v8 + 48);
  v18 = &v13[v17];
  *(_QWORD *)v18 = sub_10017F608;
  *((_QWORD *)v18 + 1) = v16;
  v19 = &v11[v17];
  sub_10004FC74((uint64_t)v13, (uint64_t)v11, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
  *(_QWORD *)v19 = sub_10017F608;
  *((_QWORD *)v19 + 1) = v16;
  v20 = v22;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, v22);
  swift_retain(v15);
  sub_10004FCB8((uint64_t)v11, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
  LOBYTE(v16) = static FMIPDevice.== infix(_:_:)(v7, v23);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v20);
  sub_1000051EC((uint64_t)v13, &qword_1005D8D38);
  return v16 & 1;
}

void sub_100171340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *, _QWORD), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  id v26;
  double v27;
  double v28;
  void *v29;
  uint64_t v30;
  uint64_t Strong;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  Swift::String v42;
  uint64_t v43;
  Swift::String v44;
  void *object;
  void *v46;
  Swift::String v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(void *, _QWORD);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint8_t *v64;
  uint64_t v65[3];
  uint64_t v66;
  unint64_t v67;
  _QWORD v68[4];

  v59 = a6;
  v60 = a5;
  v58 = a4;
  v9 = type metadata accessor for FMIPDeviceImageSize(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMIPDevice(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v57 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v55 - v17;
  v19 = type metadata accessor for FMIPDeviceImageCacheRequest(0);
  v63 = *(_QWORD *)(v19 - 8);
  v64 = (uint8_t *)v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = *(_QWORD *)(a1 + 24);
  v22 = *(int *)(type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0) + 20);
  v55 = v14;
  v56 = a3;
  v23 = a3 + v22;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v25 = a2;
  v61 = v13;
  v24(v18, a2, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v23, v9);
  v26 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v26, "scale");
  v28 = v27;

  FMIPDeviceImageCacheRequest.init(device:size:scale:)(v18, v12, v28);
  dispatch thunk of FMImageCache.cachedImage(for:completion:)(v68, v21, 0, 0);
  (*(void (**)(char *, uint8_t *))(v63 + 8))(v21, v64);
  v29 = (void *)v68[0];
  if (v68[0])
  {
    v30 = v58 + 16;
    swift_beginAccess(v58 + 16, v68, 0, 0);
    Strong = swift_weakLoadStrong(v30);
    if (Strong)
    {
      v32 = Strong;
      v33 = v57;
      v34 = ((uint64_t (*)(char *, uint64_t, uint64_t))v24)(v57, v25, v61);
      v35 = static os_log_type_t.default.getter(v34);
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v36 = type metadata accessor for Logger(0);
      v37 = sub_100056D88(v36, (uint64_t)qword_1005F5748);
      v38 = Logger.logObject.getter(v37);
      v39 = v35;
      if (os_log_type_enabled(v38, v35))
      {
        v40 = (uint8_t *)swift_slowAlloc(12, -1);
        v41 = swift_slowAlloc(32, -1);
        *(_DWORD *)v40 = 136315138;
        v64 = v40 + 4;
        v65[0] = v41;
        v66 = 0;
        v67 = 0xE000000000000000;
        _StringGuts.grow(_:)(64);
        v42._object = (void *)0x80000001004B0220;
        v42._countAndFlagsBits = 0xD000000000000032;
        String.append(_:)(v42);
        v44._countAndFlagsBits = FMIPDevice.identifier.getter(v43);
        object = v44._object;
        String.append(_:)(v44);
        v46 = object;
        v33 = v57;
        swift_bridgeObjectRelease(v46);
        v47._countAndFlagsBits = 0x726177726F66202CLL;
        v47._object = (void *)0xEC000000676E6964;
        String.append(_:)(v47);
        v48 = v67;
        v66 = sub_100056DA0(v66, v67, v65);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);
        swift_bridgeObjectRelease(v48);
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "FMProductAssetProvider: %s", v40, 0xCu);
        swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v41, -1, -1);
        swift_slowDealloc(v40, -1, -1);
      }
      swift_release(v32);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v61);
    }
    v49 = v29;
    v60(v29, 0);

    swift_beginAccess(v30, &v66, 0, 0);
    v50 = swift_weakLoadStrong(v30);
    if (v50)
    {
      v51 = v50;
      swift_beginAccess(v50 + 24, v65, 33, 0);
      v52 = sub_100172B40(v56);
      v54 = v53;
      swift_endAccess(v65);
      sub_1000327F0(v52, v54);
      swift_release(v51);
    }

  }
}

void sub_1001717B8(uint64_t a1, uint64_t a2, int64_t a3)
{
  sub_10017E930(a1, a3);
}

unint64_t sub_1001717C0(unsigned __int8 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_100171F0C(a1, v3);
}

unint64_t sub_100171818(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1001725C4(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (unint64_t *)&unk_1005E2220, (uint64_t)&protocol conformance descriptor for UUID);
}

unint64_t sub_1001718B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_100171FAC(a1, v7);
}

unint64_t sub_100171930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_100171FAC(a1, v7);
}

unint64_t sub_1001719BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  _QWORD v13[9];

  Hasher.init(_seed:)(v13, *(_QWORD *)(v1 + 40));
  v3 = type metadata accessor for URL(0);
  v4 = sub_100008000(&qword_1005D8D80, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  dispatch thunk of Hashable.hash(into:)(v13, v3, v4);
  v5 = type metadata accessor for FMAccessoryProductImageRequest(0);
  v6 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
  v7 = sub_100008000(&qword_1005D8D78, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPHawkeyeProductInformation.AssetType, (uint64_t)&protocol conformance descriptor for FMIPHawkeyeProductInformation.AssetType);
  dispatch thunk of Hashable.hash(into:)(v13, v6, v7);
  v8 = (uint64_t *)(a1 + *(int *)(v5 + 24));
  v9 = *v8;
  v10 = v8[1];
  swift_bridgeObjectRetain(v10);
  String.hash(into:)(v13, v9, v10);
  swift_bridgeObjectRelease(v10);
  v11 = Hasher._finalize()();
  return sub_100172120(a1, v11);
}

unint64_t sub_100171AC4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  Hasher.init(_seed:)(v9, *(_QWORD *)(v1 + 40));
  v3 = *a1;
  v4 = a1[1];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(v9, v3, v4);
  swift_bridgeObjectRelease(v4);
  type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context(0);
  v5 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
  v6 = sub_100008000(&qword_1005D8D78, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPHawkeyeProductInformation.AssetType, (uint64_t)&protocol conformance descriptor for FMIPHawkeyeProductInformation.AssetType);
  dispatch thunk of Hashable.hash(into:)(v9, v5, v6);
  v7 = Hasher._finalize()();
  return sub_100172284(a1, v7);
}

unint64_t sub_100171B7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  _QWORD v11[9];

  v3 = Hasher.init(_seed:)(v11, *(_QWORD *)(v1 + 40));
  v4 = FMIPDevice.identifier.getter(v3);
  v6 = v5;
  String.hash(into:)(v11, v4, v5);
  swift_bridgeObjectRelease(v6);
  type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0);
  v7 = type metadata accessor for FMIPDeviceImageSize(0);
  v8 = sub_100008000(&qword_1005D8D48, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceImageSize, (uint64_t)&protocol conformance descriptor for FMIPDeviceImageSize);
  dispatch thunk of Hashable.hash(into:)(v11, v7, v8);
  v9 = Hasher._finalize()();
  return sub_1001723D0(a1, v9);
}

unint64_t sub_100171C38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for FMIPPlaySoundChannels(0);
  v6 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1001725C4(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, &qword_1005D7308, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
}

unint64_t sub_100171CD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for FMItemCapabilities(0);
  v6 = sub_100008000(&qword_1005D8D90, (uint64_t (*)(uint64_t))&type metadata accessor for FMItemCapabilities, (uint64_t)&protocol conformance descriptor for FMItemCapabilities);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1001725C4(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for FMItemCapabilities, &qword_1005D8D98, (uint64_t)&protocol conformance descriptor for FMItemCapabilities);
}

unint64_t sub_100171D68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, *(_QWORD *)(v1 + 40));
  type metadata accessor for CFString(0);
  v4 = v3;
  v5 = sub_100008000(&qword_1005D8D88, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_100481408);
  _CFObject.hash(into:)(v8, v4, v5);
  v6 = Hasher._finalize()();
  return sub_1001726F4(a1, v6);
}

unint64_t sub_100171DF0(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  sub_100143B68();
  v3 = Hasher._finalize()();
  return sub_100172834(a1, v3);
}

unint64_t sub_100171E48(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::UInt v5;
  Swift::Int v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, *(_QWORD *)(v2 + 40));
  switch(a2)
  {
    case 0uLL:
      v5 = 0;
      goto LABEL_7;
    case 1uLL:
      v5 = 1;
      goto LABEL_7;
    case 2uLL:
      v5 = 2;
      goto LABEL_7;
    case 3uLL:
      v5 = 3;
LABEL_7:
      Hasher._combine(_:)(v5);
      break;
    default:
      Hasher._combine(_:)(4uLL);
      String.hash(into:)(v8, a1, a2);
      break;
  }
  v6 = Hasher._finalize()();
  return sub_100172944(a1, a2, v6);
}

unint64_t sub_100171F0C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_100171FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_100172120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v20;

  v5 = type metadata accessor for FMAccessoryProductImageRequest(0);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_10004FC74(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8, type metadata accessor for FMAccessoryProductImageRequest);
      if ((static URL.== infix(_:_:)(v8, a1) & 1) != 0
        && (static FMIPHawkeyeProductInformation.AssetType.== infix(_:_:)(&v8[*(int *)(v5 + 20)], a1 + *(int *)(v5 + 20)) & 1) != 0)
      {
        v13 = *(int *)(v5 + 24);
        v14 = *(_QWORD *)&v8[v13];
        v15 = *(_QWORD *)&v8[v13 + 8];
        v16 = (_QWORD *)(a1 + v13);
        v17 = v16[1];
        v18 = v14 == *v16 && v15 == v17;
        if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, *v16, v17, 0) & 1) != 0)
          break;
      }
      sub_10004FCB8((uint64_t)v8, type metadata accessor for FMAccessoryProductImageRequest);
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        return v10;
    }
    sub_10004FCB8((uint64_t)v8, type metadata accessor for FMAccessoryProductImageRequest);
  }
  return v10;
}

unint64_t sub_100172284(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v17;

  v5 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context(0);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_10004FC74(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8, type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
      v13 = v8[1];
      v14 = a1[1];
      v15 = *v8 == *a1 && v13 == v14;
      if ((v15 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v8, v13, *a1, v14, 0) & 1) != 0)
        && (static FMIPHawkeyeProductInformation.AssetType.== infix(_:_:)((char *)v8 + *(int *)(v5 + 20), (char *)a1 + *(int *)(v5 + 20)) & 1) != 0)
      {
        break;
      }
      sub_10004FCB8((uint64_t)v8, type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        return v10;
    }
    sub_10004FCB8((uint64_t)v8, type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
  }
  return v10;
}

unint64_t sub_1001723D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v22 = type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0);
  __chkstk_darwin(v22);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v2 + 64;
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    return v10;
  v11 = ~v9;
  v12 = *(_QWORD *)(v5 + 72);
  v21 = v12;
  while (1)
  {
    sub_10004FC74(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v7, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
    if ((static FMIPDevice.== infix(_:_:)(v7, a1) & 1) == 0)
      goto LABEL_4;
    v14 = v2;
    v15 = a1;
    v16 = type metadata accessor for FMIPDeviceImageSize(0);
    v17 = sub_100008000(&qword_1005D8D50, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceImageSize, (uint64_t)&protocol conformance descriptor for FMIPDeviceImageSize);
    dispatch thunk of RawRepresentable.rawValue.getter(&v25, v16, v17);
    dispatch thunk of RawRepresentable.rawValue.getter(&v23, v16, v17);
    v18 = v26;
    v19 = v24;
    if (v25 == v23 && v26 == v24)
      break;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, v23, v24, 0);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v19);
    v2 = v14;
    v12 = v21;
    a1 = v15;
    if ((v13 & 1) != 0)
      goto LABEL_9;
LABEL_4:
    sub_10004FCB8((uint64_t)v7, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      return v10;
  }
  swift_bridgeObjectRelease_n(v26, 2);
LABEL_9:
  sub_10004FCB8((uint64_t)v7, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
  return v10;
}

unint64_t sub_1001725C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  unint64_t *v22;
  uint64_t v23;

  v22 = a4;
  v23 = a5;
  v6 = v5;
  v20 = a1;
  v21 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      v17 = sub_100008000(v22, v21, v23);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v20, v8, v17);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v18 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1001726F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v6 = v2;
    type metadata accessor for CFString(0);
    v9 = v8;
    v10 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * i);
    v11 = sub_100008000(&qword_1005D8D88, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_100481408);
    v12 = v10;
    v13 = static _CFObject.== infix(_:_:)(v12, a1, v9, v11);

    if ((v13 & 1) == 0)
    {
      v14 = ~v4;
      for (i = (i + 1) & v14; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v14)
      {
        v15 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * i);
        v16 = static _CFObject.== infix(_:_:)(v15, a1, v9, v11);

        if ((v16 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_100172834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v16;

  v5 = type metadata accessor for FMAnnotationIdentifier(0);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_10004FC74(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8, type metadata accessor for FMAnnotationIdentifier);
      sub_1001451AC((uint64_t)v8, a1);
      v14 = v13;
      sub_10004FCB8((uint64_t)v8, type metadata accessor for FMAnnotationIdentifier);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_100172944(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = ~v5;
    v10 = *(_QWORD *)(v3 + 48);
    while (2)
    {
      v11 = (_QWORD *)(v10 + 16 * v6);
      v12 = v11[1];
      switch(v12)
      {
        case 0:
          if (a2)
            goto LABEL_4;
          break;
        case 1:
          if (a2 != 1)
            goto LABEL_4;
          break;
        case 2:
          if (a2 != 2)
            goto LABEL_4;
          break;
        case 3:
          if (a2 != 3)
            goto LABEL_4;
          break;
        default:
          if (a2 < 4
            || (*v11 == a1 ? (v13 = v12 == a2) : (v13 = 0),
                !v13 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) == 0))
          {
LABEL_4:
            v6 = (v6 + 1) & v9;
            if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
              continue;
          }
          break;
      }
      break;
    }
  }
  return v6;
}

uint64_t sub_100172A58(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_1001719BC(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10017BA90(type metadata accessor for FMAccessoryProductImageRequest, &qword_1005D6C48);
    v8 = v14;
  }
  v9 = *(_QWORD *)(v8 + 48);
  v10 = type metadata accessor for FMAccessoryProductImageRequest(0);
  sub_10004FCB8(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v5, type metadata accessor for FMAccessoryProductImageRequest);
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v5);
  sub_1001782F8(v5, v8);
  v12 = *v2;
  *v2 = v8;
  swift_bridgeObjectRelease(v12);
  return v11;
}

uint64_t sub_100172B40(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_100171B7C(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10017C43C();
    v8 = v14;
  }
  v9 = *(_QWORD *)(v8 + 48);
  v10 = type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0);
  sub_10004FCB8(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v5, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v5);
  sub_100178634(v5, v8);
  v12 = *v2;
  *v2 = v8;
  swift_bridgeObjectRelease(v12);
  return v11;
}

uint64_t sub_100172C2C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_10004C348(a1, a2);
  LOBYTE(a2) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v10 = *v3;
  v14 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10017C674();
    v10 = v14;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v7 + 8));
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 32 * v7);
  sub_10017892C(v7, v10);
  v12 = *v3;
  *v3 = v10;
  swift_bridgeObjectRelease(v12);
  return v11;
}

uint64_t sub_100172D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_100171818(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v21 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10017CC54();
      v10 = v21;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, v12);
    v13 = *(_QWORD *)(v10 + 56);
    v14 = type metadata accessor for FMUnknownItemCellViewModel(0);
    v15 = *(_QWORD *)(v14 - 8);
    sub_100051774(v13 + *(_QWORD *)(v15 + 72) * v7, a2, type metadata accessor for FMUnknownItemCellViewModel);
    sub_100178B00(v7, v10);
    v16 = *v3;
    *v3 = v10;
    v17 = swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v15 + 56))(a2, 0, 1, v14, v17);
  }
  else
  {
    v19 = type metadata accessor for FMUnknownItemCellViewModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 56))(a2, 1, 1, v19, v20);
  }
}

uint64_t sub_100172E64(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_100171AC4(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10017D304();
    v8 = v14;
  }
  v9 = *(_QWORD *)(v8 + 48);
  v10 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context(0);
  sub_10004FCB8(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v5, type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v5);
  sub_100178DD4(v5, v8);
  v12 = *v2;
  *v2 = v8;
  swift_bridgeObjectRelease(v12);
  return v11;
}

void sub_100172F50(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D6C60);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v3;
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v22);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain(v31[1]);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v39, v33, v32);
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_100173254(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  Swift::UInt v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  uint64_t v35[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D6BE8);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = v3;
    v9 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v21 >= v33)
          goto LABEL_36;
        v22 = v34[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_36;
          v22 = v34[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release(v5);
                v3 = v32;
                goto LABEL_43;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v31;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v34[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_45;
                if (v9 >= v33)
                  goto LABEL_36;
                v22 = v34[v9];
                ++v23;
                if (v22)
                  goto LABEL_33;
              }
            }
            v9 = v23;
          }
        }
LABEL_33:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = *(_QWORD *)(v5 + 56);
      v29 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v20);
      v30 = *(_QWORD *)(v28 + 8 * v20);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain(*(_QWORD *)(v28 + 8 * v20));
      Hasher.init(_seed:)(v35, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v29);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v30;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_43:
  *v3 = v8;
}

void sub_100173524(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D8D70);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      swift_bridgeObjectRetain(v33);
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_100173838(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  uint64_t *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  int v54;
  uint64_t v55;
  int64_t v56;
  char *v57;
  uint64_t v58;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD **)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D6BE0);
  v54 = a2;
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_43;
  v57 = v9;
  v49 = v2;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v51 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v50 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  swift_retain(v10);
  v18 = 0;
  v52 = v10;
  v53 = v7;
  v58 = v6;
  while (1)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_24;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v50)
      break;
    v24 = v51;
    v25 = v51[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v50)
        goto LABEL_36;
      v25 = v51[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v50)
        {
LABEL_36:
          swift_release(v10);
          v3 = v49;
          if ((v54 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = v51[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v18 >= v50)
              goto LABEL_36;
            v25 = v51[v18];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v18 = v26;
      }
    }
LABEL_23:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_24:
    v27 = v7[9];
    v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
    v56 = v18;
    if ((v54 & 1) != 0)
    {
      v29 = (void (*)(char *, unint64_t, uint64_t))v7[4];
      v30 = v58;
      v29(v57, v28, v58);
      v31 = (uint64_t *)(*(_QWORD *)(v10 + 56) + 32 * v22);
      v32 = v31[1];
      v55 = *v31;
      v33 = (void *)v31[2];
      v34 = v31[3];
    }
    else
    {
      v35 = (void (*)(char *, unint64_t, uint64_t))v7[2];
      v30 = v58;
      v35(v57, v28, v58);
      v36 = (uint64_t *)(*(_QWORD *)(v10 + 56) + 32 * v22);
      v32 = v36[1];
      v55 = *v36;
      v33 = (void *)v36[2];
      v34 = v36[3];
      swift_retain(v34);
      swift_bridgeObjectRetain(v32);
      v37 = v33;
    }
    v38 = *(_QWORD *)(v12 + 40);
    v39 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v40 = dispatch thunk of Hashable._rawHashValue(seed:)(v38, v30, v39);
    v41 = -1 << *(_BYTE *)(v12 + 32);
    v42 = v40 & ~v41;
    v43 = v42 >> 6;
    if (((-1 << v42) & ~*(_QWORD *)(v17 + 8 * (v42 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v42) & ~*(_QWORD *)(v17 + 8 * (v42 >> 6)))) | v42 & 0x7FFFFFFFFFFFFFC0;
      v7 = v53;
    }
    else
    {
      v44 = 0;
      v45 = (unint64_t)(63 - v41) >> 6;
      v7 = v53;
      do
      {
        if (++v43 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v46 = v43 == v45;
        if (v43 == v45)
          v43 = 0;
        v44 |= v46;
        v47 = *(_QWORD *)(v17 + 8 * v43);
      }
      while (v47 == -1);
      v19 = __clz(__rbit64(~v47)) + (v43 << 6);
    }
    *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    ((void (*)(unint64_t, char *, uint64_t))v7[4])(*(_QWORD *)(v12 + 48) + v27 * v19, v57, v58);
    v20 = (_QWORD *)(*(_QWORD *)(v12 + 56) + 32 * v19);
    v18 = v56;
    *v20 = v55;
    v20[1] = v32;
    v20[2] = v33;
    v20[3] = v34;
    ++*(_QWORD *)(v12 + 16);
    v10 = v52;
  }
  swift_release(v10);
  v3 = v49;
  v24 = v51;
  if ((v54 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v48 = 1 << *(_BYTE *)(v10 + 32);
  if (v48 >= 64)
    bzero(v24, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v48;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_43:
  swift_release(v10);
  *v3 = v12;
}

void sub_100173C18(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t i;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  _QWORD v45[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D8D68);
  v41 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v39 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v38 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v13 << 6);
      }
      else
      {
        v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v23 >= v38)
          goto LABEL_36;
        v24 = v39[v23];
        ++v13;
        if (!v24)
        {
          v13 = v23 + 1;
          if (v23 + 1 >= v38)
            goto LABEL_36;
          v24 = v39[v13];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v38)
            {
LABEL_36:
              swift_release(v5);
              v3 = v2;
              if ((v41 & 1) != 0)
              {
                v37 = 1 << *(_BYTE *)(v5 + 32);
                if (v37 >= 64)
                  bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v39 = -1 << v37;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v39[v25];
            if (!v24)
            {
              while (1)
              {
                v13 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_43;
                if (v13 >= v38)
                  goto LABEL_36;
                v24 = v39[v13];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v13 = v25;
          }
        }
LABEL_33:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
      v31 = *v30;
      v32 = v30[1];
      v33 = *(_QWORD *)(v5 + 56) + 48 * v22;
      v34 = *(_QWORD *)(v33 + 8);
      v42 = *(_QWORD *)v33;
      v35 = *(_QWORD *)(v33 + 24);
      v44 = *(_QWORD *)(v33 + 16);
      v43 = *(_BYTE *)(v33 + 32);
      v36 = *(_QWORD *)(v33 + 40);
      if ((v41 & 1) == 0)
      {
        swift_bridgeObjectRetain(v32);
        swift_bridgeObjectRetain(v34);
        swift_bridgeObjectRetain(v35);
        swift_bridgeObjectRetain(v36);
      }
      Hasher.init(_seed:)(v45, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v45, v31, v32);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
      *v19 = v31;
      v19[1] = v32;
      v20 = *(_QWORD *)(v8 + 56) + 48 * v18;
      *(_QWORD *)v20 = v42;
      *(_QWORD *)(v20 + 8) = v34;
      *(_QWORD *)(v20 + 16) = v44;
      *(_QWORD *)(v20 + 24) = v35;
      *(_BYTE *)(v20 + 32) = v43;
      *(_QWORD *)(v20 + 40) = v36;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_100173F70(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D6BB0);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v13 << 6);
      goto LABEL_34;
    }
    v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v24 >= v41)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v24);
    ++v13;
    if (!v26)
    {
      v13 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_36;
      v26 = *(_QWORD *)(v42 + 8 * v13);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_36:
          swift_release(v5);
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v13 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v13 >= v41)
              goto LABEL_36;
            v26 = *(_QWORD *)(v42 + 8 * v13);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v13 = v27;
      }
    }
LABEL_33:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_34:
    v32 = 16 * v23;
    v33 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v32);
    v35 = *v33;
    v34 = v33[1];
    v36 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v32);
    v37 = *v36;
    v38 = v36[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain(v33[1]);
      swift_bridgeObjectRetain(v38);
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v44, v35, v34);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v17 == v29;
        if (v17 == v29)
          v17 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v35;
    v20[1] = v34;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v37;
    v21[1] = v38;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v25 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_100174294(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  Swift::Int v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t i;
  uint64_t v51;
  uint64_t v52;
  int v53;
  _QWORD v54[9];

  v5 = v3;
  v8 = type metadata accessor for FMAccessoryProductImageRequest(0);
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v5;
  if (*(_QWORD *)(*v5 + 24) > a1)
    a1 = *(_QWORD *)(*v5 + 24);
  sub_100053F2C(a3);
  v53 = a2;
  v12 = static _DictionaryStorage.resize(original:capacity:move:)(v11, a1, a2);
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_43;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v49 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v47 = v5;
  v48 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  swift_retain(v11);
  v19 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v17)
    {
      v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_24;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v48)
      break;
    v24 = v49;
    v25 = v49[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v48)
        goto LABEL_36;
      v25 = v49[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v48)
        {
LABEL_36:
          swift_release(v11);
          v5 = v47;
          if ((v53 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = v49[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v19 >= v48)
              goto LABEL_36;
            v25 = v49[v19];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v19 = v26;
      }
    }
LABEL_23:
    v17 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v51 + 72);
    v28 = *(_QWORD *)(v11 + 48) + v27 * v22;
    if ((v53 & 1) != 0)
    {
      sub_100051774(v28, (uint64_t)v10, type metadata accessor for FMAccessoryProductImageRequest);
      v29 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v22);
    }
    else
    {
      sub_10004FC74(v28, (uint64_t)v10, type metadata accessor for FMAccessoryProductImageRequest);
      v29 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v22);
    }
    Hasher.init(_seed:)(v54, *(_QWORD *)(v13 + 40));
    v30 = type metadata accessor for URL(0);
    v31 = sub_100008000(&qword_1005D8D80, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    dispatch thunk of Hashable.hash(into:)(v54, v30, v31);
    v32 = v52;
    v33 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
    v34 = sub_100008000(&qword_1005D8D78, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPHawkeyeProductInformation.AssetType, (uint64_t)&protocol conformance descriptor for FMIPHawkeyeProductInformation.AssetType);
    dispatch thunk of Hashable.hash(into:)(v54, v33, v34);
    v35 = &v10[*(int *)(v32 + 24)];
    v36 = *(_QWORD *)v35;
    v37 = *((_QWORD *)v35 + 1);
    swift_bridgeObjectRetain(v37);
    String.hash(into:)(v54, v36, v37);
    swift_bridgeObjectRelease(v37);
    v38 = Hasher._finalize()();
    v39 = -1 << *(_BYTE *)(v13 + 32);
    v40 = v38 & ~v39;
    v41 = v40 >> 6;
    if (((-1 << v40) & ~*(_QWORD *)(v18 + 8 * (v40 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v40) & ~*(_QWORD *)(v18 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v42 = 0;
      v43 = (unint64_t)(63 - v39) >> 6;
      do
      {
        if (++v41 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v44 = v41 == v43;
        if (v41 == v43)
          v41 = 0;
        v42 |= v44;
        v45 = *(_QWORD *)(v18 + 8 * v41);
      }
      while (v45 == -1);
      v20 = __clz(__rbit64(~v45)) + (v41 << 6);
    }
    *(_QWORD *)(v18 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    sub_100051774((uint64_t)v10, *(_QWORD *)(v13 + 48) + v27 * v20, type metadata accessor for FMAccessoryProductImageRequest);
    *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release(v11);
  v5 = v47;
  v24 = v49;
  if ((v53 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v46 = 1 << *(_BYTE *)(v11 + 32);
  if (v46 >= 64)
    bzero(v24, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v46;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_43:
  swift_release(v11);
  *v5 = v13;
}

void sub_1001746C8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D8EB0);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_36;
      v24 = *(_QWORD *)(v37 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_36:
          swift_release(v5);
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v36)
              goto LABEL_36;
            v24 = *(_QWORD *)(v37 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain(v30[1]);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v39, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_BYTE *)(*(_QWORD *)(v8 + 56) + v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1001749D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005DF450);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v18 >= v35)
          goto LABEL_37;
        v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v35)
            goto LABEL_37;
          v19 = v36[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_37:
              swift_release(v5);
              v3 = v34;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_44;
                if (v13 >= v35)
                  goto LABEL_37;
                v19 = v36[v13];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v13 = v20;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_10004C850(v24, v38);
      }
      else
      {
        sub_100056E70((uint64_t)v24, (uint64_t)v38);
        swift_bridgeObjectRetain(v22);
      }
      Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v37, v23, v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      sub_10004C850(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_100174CCC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t i;
  int v45;

  v3 = v2;
  v6 = type metadata accessor for FMIPPlaySoundChannels(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D8DC0);
  v45 = a2;
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_43;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v43 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v41 = v2;
  v42 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  swift_retain(v10);
  v18 = 0;
  for (i = v10; ; v10 = i)
  {
    if (v16)
    {
      v20 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_24;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v42)
      break;
    v23 = v43;
    v24 = v43[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v42)
        goto LABEL_36;
      v24 = v43[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v42)
        {
LABEL_36:
          swift_release(v10);
          v3 = v41;
          if ((v45 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = v43[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v18 >= v42)
              goto LABEL_36;
            v24 = v43[v18];
            ++v25;
            if (v24)
              goto LABEL_23;
          }
        }
        v18 = v25;
      }
    }
LABEL_23:
    v16 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_24:
    v26 = *(_QWORD *)(v7 + 72);
    v27 = *(_QWORD *)(v10 + 48) + v26 * v21;
    if ((v45 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 32))(v9, v27, v6);
      v28 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, v27, v6);
      v28 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v21);
      swift_retain(v28);
    }
    v29 = *(_QWORD *)(v12 + 40);
    v30 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
    v31 = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v6, v30);
    v32 = -1 << *(_BYTE *)(v12 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v17 + 8 * (v33 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v17 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v17 + 8 * v34);
      }
      while (v38 == -1);
      v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 48) + v26 * v19, v9, v6);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release(v10);
  v3 = v41;
  v23 = v43;
  if ((v45 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v10 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_43:
  swift_release(v10);
  *v3 = v12;
}

void sub_100175060(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];
  _OWORD v41[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D4D88);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_25;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v17 >= v37)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v38 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v37)
        goto LABEL_37;
      v19 = *(_QWORD *)(v38 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v37)
        {
LABEL_37:
          swift_release(v5);
          if ((v39 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v19 = *(_QWORD *)(v38 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_46;
            if (v13 >= v37)
              goto LABEL_37;
            v19 = *(_QWORD *)(v38 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_24;
          }
        }
        v13 = v20;
      }
    }
LABEL_24:
    v11 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_25:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v39 & 1) != 0)
    {
      sub_10004C850(v22, v41);
    }
    else
    {
      sub_100056E70((uint64_t)v22, (uint64_t)v41);
      v23 = v21;
    }
    v24 = *(_QWORD *)(v8 + 40);
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v27 = v26;
    Hasher.init(_seed:)(v40, v24);
    String.hash(into:)(v40, v25, v27);
    v28 = Hasher._finalize()();
    swift_bridgeObjectRelease(v27);
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v21;
    sub_10004C850(v41, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v18 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v18, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_100175398(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::Int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  __int128 v48;
  _QWORD v49[9];

  v3 = v2;
  v6 = type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0);
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D6C58);
  v47 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_43;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v44 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v42 = v2;
  v43 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  swift_retain(v9);
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v21 >= v43)
      break;
    v22 = v44;
    v23 = v44[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v43)
        goto LABEL_36;
      v23 = v44[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v43)
        {
LABEL_36:
          swift_release(v9);
          v3 = v42;
          if ((v47 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v23 = v44[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_45;
            if (v17 >= v43)
              goto LABEL_36;
            v23 = v44[v17];
            ++v24;
            if (v23)
              goto LABEL_23;
          }
        }
        v17 = v24;
      }
    }
LABEL_23:
    v15 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v45 + 72);
    v26 = *(_QWORD *)(v9 + 48) + v25 * v20;
    if ((v47 & 1) != 0)
    {
      sub_100051774(v26, (uint64_t)v8, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
      v48 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v20);
    }
    else
    {
      sub_10004FC74(v26, (uint64_t)v8, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
      v48 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v20);
      swift_retain(*((_QWORD *)&v48 + 1));
    }
    v27 = Hasher.init(_seed:)(v49, *(_QWORD *)(v11 + 40));
    v28 = FMIPDevice.identifier.getter(v27);
    v30 = v29;
    String.hash(into:)(v49, v28, v29);
    swift_bridgeObjectRelease(v30);
    v31 = type metadata accessor for FMIPDeviceImageSize(0);
    v32 = sub_100008000(&qword_1005D8D48, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceImageSize, (uint64_t)&protocol conformance descriptor for FMIPDeviceImageSize);
    dispatch thunk of Hashable.hash(into:)(v49, v31, v32);
    v33 = Hasher._finalize()();
    v34 = -1 << *(_BYTE *)(v11 + 32);
    v35 = v33 & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v16 + 8 * v36);
      }
      while (v40 == -1);
      v18 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    sub_100051774((uint64_t)v8, *(_QWORD *)(v11 + 48) + v25 * v18, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
    *(_OWORD *)(*(_QWORD *)(v11 + 56) + 16 * v18) = v48;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release(v9);
  v3 = v42;
  v22 = v44;
  if ((v47 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v41 = 1 << *(_BYTE *)(v9 + 32);
  if (v41 >= 64)
    bzero(v22, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v41;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_43:
  swift_release(v9);
  *v3 = v11;
}

void sub_10017577C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  char v42;
  __int128 v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D8DB0);
  v42 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v39 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v41 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v40 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v13 << 6);
      }
      else
      {
        v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v23 >= v40)
          goto LABEL_36;
        v24 = v41[v23];
        ++v13;
        if (!v24)
        {
          v13 = v23 + 1;
          if (v23 + 1 >= v40)
            goto LABEL_36;
          v24 = v41[v13];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v40)
            {
LABEL_36:
              swift_release(v5);
              v3 = v39;
              if ((v42 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v5 + 32);
                if (v38 >= 64)
                  bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v41 = -1 << v38;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v41[v25];
            if (!v24)
            {
              while (1)
              {
                v13 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_43;
                if (v13 >= v40)
                  goto LABEL_36;
                v24 = v41[v13];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v13 = v25;
          }
        }
LABEL_33:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
      v32 = *v30;
      v31 = v30[1];
      v33 = *(_QWORD *)(v5 + 56) + 32 * v22;
      v34 = *(_QWORD *)v33;
      v43 = *(_OWORD *)(v33 + 8);
      v35 = *(void **)(v33 + 24);
      if ((v42 & 1) == 0)
      {
        swift_bridgeObjectRetain(v31);
        swift_bridgeObjectRetain(v43);
        v36 = *((id *)&v43 + 1);
        v37 = v35;
      }
      Hasher.init(_seed:)(v44, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v44, v32, v31);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
      *v19 = v32;
      v19[1] = v31;
      v20 = *(_QWORD *)(v8 + 56) + 32 * v18;
      *(_QWORD *)v20 = v34;
      *(_OWORD *)(v20 + 8) = v43;
      *(_QWORD *)(v20 + 24) = v35;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_100175AB0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  _QWORD v43[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D8DB8);
  v41 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v40 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v38 = v3;
  v39 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_34;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v39)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v40 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v39)
        goto LABEL_36;
      v25 = *(_QWORD *)(v40 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v39)
        {
LABEL_36:
          swift_release(v5);
          v3 = v38;
          if ((v41 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v40 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v13 >= v39)
              goto LABEL_36;
            v25 = *(_QWORD *)(v40 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v13 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(v5 + 56) + 32 * v22;
    v35 = *(_QWORD *)v34;
    v36 = *(_QWORD *)(v34 + 8);
    v42 = *(_OWORD *)(v34 + 16);
    if ((v41 & 1) == 0)
    {
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRetain(v36);
    }
    Hasher.init(_seed:)(v43, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v43, v33, v32);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v33;
    v19[1] = v32;
    v20 = *(_QWORD *)(v8 + 56) + 32 * v18;
    *(_QWORD *)v20 = v35;
    *(_QWORD *)(v20 + 8) = v36;
    *(_OWORD *)(v20 + 16) = v42;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v38;
  v24 = (_QWORD *)(v5 + 64);
  if ((v41 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v24, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_100175DDC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t i;
  int v45;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D6BF8);
  v45 = a2;
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_43;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v43 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v41 = v2;
  v42 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  swift_retain(v10);
  v18 = 0;
  for (i = v10; ; v10 = i)
  {
    if (v16)
    {
      v20 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_24;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v42)
      break;
    v23 = v43;
    v24 = v43[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v42)
        goto LABEL_36;
      v24 = v43[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v42)
        {
LABEL_36:
          swift_release(v10);
          v3 = v41;
          if ((v45 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = v43[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v18 >= v42)
              goto LABEL_36;
            v24 = v43[v18];
            ++v25;
            if (v24)
              goto LABEL_23;
          }
        }
        v18 = v25;
      }
    }
LABEL_23:
    v16 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_24:
    v26 = *(_QWORD *)(v7 + 72);
    v27 = *(_QWORD *)(v10 + 48) + v26 * v21;
    if ((v45 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 32))(v9, v27, v6);
      v28 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, v27, v6);
      v28 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v21);
      swift_retain(v28);
    }
    v29 = *(_QWORD *)(v12 + 40);
    v30 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v31 = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v6, v30);
    v32 = -1 << *(_BYTE *)(v12 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v17 + 8 * (v33 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v17 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v17 + 8 * v34);
      }
      while (v38 == -1);
      v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 48) + v26 * v19, v9, v6);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release(v10);
  v3 = v41;
  v23 = v43;
  if ((v45 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v10 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_43:
  swift_release(v10);
  *v3 = v12;
}

void sub_100176170(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t i;
  int v52;
  uint64_t v53;

  v3 = v2;
  v6 = type metadata accessor for FMUnknownItemCellViewModel(0);
  v50 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v53 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D6C10);
  v52 = a2;
  v13 = static _DictionaryStorage.resize(original:capacity:move:)(v12, a1, a2);
  v14 = v13;
  if (*(_QWORD *)(v12 + 16))
  {
    v15 = 1 << *(_BYTE *)(v12 + 32);
    v16 = *(_QWORD *)(v12 + 64);
    v49 = (_QWORD *)(v12 + 64);
    if (v15 < 64)
      v17 = ~(-1 << v15);
    else
      v17 = -1;
    v18 = v17 & v16;
    v47 = v2;
    v48 = (unint64_t)(v15 + 63) >> 6;
    v19 = v13 + 64;
    swift_retain(v12);
    v20 = 0;
    v21 = v12;
    for (i = v12; ; v21 = i)
    {
      if (v18)
      {
        v23 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        v24 = v23 | (v20 << 6);
      }
      else
      {
        v25 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
        if (v25 >= v48)
        {
          swift_release(v21);
          v3 = v47;
          v26 = v49;
          if ((v52 & 1) == 0)
            goto LABEL_41;
LABEL_38:
          v45 = 1 << *(_BYTE *)(i + 32);
          if (v45 >= 64)
            bzero(v26, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          else
            *v26 = -1 << v45;
          v44 = i;
          *(_QWORD *)(i + 16) = 0;
          goto LABEL_44;
        }
        v26 = v49;
        v27 = v49[v25];
        ++v20;
        if (!v27)
        {
          v20 = v25 + 1;
          if (v25 + 1 >= v48)
            goto LABEL_37;
          v27 = v49[v20];
          if (!v27)
          {
            v28 = v25 + 2;
            if (v28 >= v48)
            {
LABEL_37:
              swift_release(v21);
              v3 = v47;
              if ((v52 & 1) == 0)
              {
LABEL_41:
                v44 = i;
                goto LABEL_44;
              }
              goto LABEL_38;
            }
            v27 = v49[v28];
            if (!v27)
            {
              while (1)
              {
                v20 = v28 + 1;
                if (__OFADD__(v28, 1))
                  break;
                if (v20 >= v48)
                  goto LABEL_37;
                v27 = v49[v20];
                ++v28;
                if (v27)
                  goto LABEL_23;
              }
LABEL_46:
              __break(1u);
              return;
            }
            v20 = v28;
          }
        }
LABEL_23:
        v18 = (v27 - 1) & v27;
        v24 = __clz(__rbit64(v27)) + (v20 << 6);
      }
      v29 = *(_QWORD *)(v9 + 72);
      v30 = *(_QWORD *)(v21 + 48) + v29 * v24;
      if ((v52 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 32))(v11, v30, v8);
        v31 = *(_QWORD *)(v21 + 56);
        v32 = *(_QWORD *)(v50 + 72);
        sub_100051774(v31 + v32 * v24, v53, type metadata accessor for FMUnknownItemCellViewModel);
      }
      else
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, v30, v8);
        v33 = *(_QWORD *)(v21 + 56);
        v32 = *(_QWORD *)(v50 + 72);
        sub_10004FC74(v33 + v32 * v24, v53, type metadata accessor for FMUnknownItemCellViewModel);
      }
      v34 = *(_QWORD *)(v14 + 40);
      v35 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v36 = dispatch thunk of Hashable._rawHashValue(seed:)(v34, v8, v35);
      v37 = -1 << *(_BYTE *)(v14 + 32);
      v38 = v36 & ~v37;
      v39 = v38 >> 6;
      if (((-1 << v38) & ~*(_QWORD *)(v19 + 8 * (v38 >> 6))) != 0)
      {
        v22 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v19 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v40 = 0;
        v41 = (unint64_t)(63 - v37) >> 6;
        do
        {
          if (++v39 == v41 && (v40 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          v42 = v39 == v41;
          if (v39 == v41)
            v39 = 0;
          v40 |= v42;
          v43 = *(_QWORD *)(v19 + 8 * v39);
        }
        while (v43 == -1);
        v22 = __clz(__rbit64(~v43)) + (v39 << 6);
      }
      *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v29 * v22, v11, v8);
      sub_100051774(v53, *(_QWORD *)(v14 + 56) + v32 * v22, type metadata accessor for FMUnknownItemCellViewModel);
      ++*(_QWORD *)(v14 + 16);
    }
  }
  v44 = v12;
LABEL_44:
  swift_release(v44);
  *v3 = v14;
}

void sub_10017658C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  Swift::UInt v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  uint64_t v35[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D6C00);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = v3;
    v9 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v21 >= v33)
          goto LABEL_36;
        v22 = v34[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_36;
          v22 = v34[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release(v5);
                v3 = v32;
                goto LABEL_43;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v31;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v34[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_45;
                if (v9 >= v33)
                  goto LABEL_36;
                v22 = v34[v9];
                ++v23;
                if (v22)
                  goto LABEL_33;
              }
            }
            v9 = v23;
          }
        }
LABEL_33:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = *(_QWORD *)(v5 + 56);
      v29 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v20);
      v30 = *(_QWORD *)(v28 + 8 * v20);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain(*(_QWORD *)(v28 + 8 * v20));
      Hasher.init(_seed:)(v35, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v29);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v30;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_43:
  *v3 = v8;
}

void sub_10017685C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  _QWORD v45[9];

  v3 = v2;
  v6 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  v43 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_100053F2C(&qword_1005D8DA8);
  v44 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_43;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v42 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v40 = v3;
  v41 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  swift_retain(v9);
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v41)
      break;
    v23 = v42;
    v24 = v42[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v41)
        goto LABEL_36;
      v24 = v42[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v41)
        {
LABEL_36:
          swift_release(v9);
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = v42[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v17 >= v41)
              goto LABEL_36;
            v24 = v42[v17];
            ++v25;
            if (v24)
              goto LABEL_23;
          }
        }
        v17 = v25;
      }
    }
LABEL_23:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_24:
    v26 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v43 + 72);
    v30 = *(_QWORD *)(v9 + 56) + v29 * v21;
    if ((v44 & 1) != 0)
    {
      sub_100051774(v30, (uint64_t)v8, type metadata accessor for FMBeaconSharingModuleEntry);
    }
    else
    {
      sub_10004FC74(v30, (uint64_t)v8, type metadata accessor for FMBeaconSharingModuleEntry);
      swift_bridgeObjectRetain(v27);
    }
    Hasher.init(_seed:)(v45, *(_QWORD *)(v11 + 40));
    String.hash(into:)(v45, v28, v27);
    v31 = Hasher._finalize()();
    v32 = -1 << *(_BYTE *)(v11 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    sub_100051774((uint64_t)v8, *(_QWORD *)(v11 + 56) + v29 * v18, type metadata accessor for FMBeaconSharingModuleEntry);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release(v9);
  v3 = v40;
  v23 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v9 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_43:
  swift_release(v9);
  *v3 = v11;
}

void sub_100176BDC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  __int128 v47;
  _QWORD v48[9];

  v3 = v2;
  v6 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context(0);
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D6C28);
  v46 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_43;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v43 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v41 = v2;
  v42 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  swift_retain(v9);
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v21 >= v42)
      break;
    v22 = v43;
    v23 = v43[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v42)
        goto LABEL_36;
      v23 = v43[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v42)
        {
LABEL_36:
          swift_release(v9);
          v3 = v41;
          if ((v46 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v23 = v43[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_45;
            if (v17 >= v42)
              goto LABEL_36;
            v23 = v43[v17];
            ++v24;
            if (v23)
              goto LABEL_23;
          }
        }
        v17 = v24;
      }
    }
LABEL_23:
    v15 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v44 + 72);
    v26 = *(_QWORD *)(v9 + 48) + v25 * v20;
    if ((v46 & 1) != 0)
    {
      sub_100051774(v26, (uint64_t)v8, type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
      v47 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v20);
    }
    else
    {
      sub_10004FC74(v26, (uint64_t)v8, type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
      v47 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v20);
      v27 = (id)v47;
      swift_retain(*((_QWORD *)&v47 + 1));
    }
    Hasher.init(_seed:)(v48, *(_QWORD *)(v11 + 40));
    v29 = *v8;
    v28 = v8[1];
    swift_bridgeObjectRetain(v28);
    String.hash(into:)(v48, v29, v28);
    swift_bridgeObjectRelease(v28);
    v30 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
    v31 = sub_100008000(&qword_1005D8D78, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPHawkeyeProductInformation.AssetType, (uint64_t)&protocol conformance descriptor for FMIPHawkeyeProductInformation.AssetType);
    dispatch thunk of Hashable.hash(into:)(v48, v30, v31);
    v32 = Hasher._finalize()();
    v33 = -1 << *(_BYTE *)(v11 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    sub_100051774((uint64_t)v8, *(_QWORD *)(v11 + 48) + v25 * v18, type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
    *(_OWORD *)(*(_QWORD *)(v11 + 56) + 16 * v18) = v47;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release(v9);
  v3 = v41;
  v22 = v43;
  if ((v46 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v40 = 1 << *(_BYTE *)(v9 + 32);
  if (v40 >= 64)
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v40;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_43:
  swift_release(v9);
  *v3 = v11;
}

void sub_100176FC8(uint64_t a1, uint64_t a2)
{
  sub_100176FD4(a1, a2, &qword_1005D8DA0);
}

void sub_100176FD4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  _QWORD v41[9];

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_100053F2C(a3);
  v40 = a2;
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v39 = v6 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 64);
  v37 = v4;
  v38 = (unint64_t)(v10 + 63) >> 6;
  v13 = v8 + 64;
  swift_retain(v6);
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v38)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v39 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v38)
        goto LABEL_36;
      v25 = *(_QWORD *)(v39 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v38)
        {
LABEL_36:
          swift_release(v6);
          v4 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v39 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v38)
              goto LABEL_36;
            v25 = *(_QWORD *)(v39 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v12 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v22);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain(v31[1]);
      v35 = v34;
    }
    Hasher.init(_seed:)(v41, *(_QWORD *)(v9 + 40));
    String.hash(into:)(v41, v33, v32);
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v9 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release(v6);
  v4 = v37;
  v24 = (_QWORD *)(v6 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v6 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_43:
  swift_release(v6);
  *v4 = v9;
}

void sub_1001772DC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D6BD0);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_36;
      v24 = *(_QWORD *)(v37 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_36:
          swift_release(v5);
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v36)
              goto LABEL_36;
            v24 = *(_QWORD *)(v37 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain(v30[1]);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v39, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_BYTE *)(*(_QWORD *)(v8 + 56) + v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1001775E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  Swift::UInt v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  __int128 v35;
  _QWORD v36[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D8D60);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_48;
  v32 = v3;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v34 = (_QWORD *)(v5 + 64);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_25;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_49;
    if (v17 >= v33)
      break;
    v18 = v34[v17];
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        break;
      v18 = v34[v13];
      if (!v18)
      {
        v19 = v17 + 2;
        if (v19 >= v33)
          break;
        v18 = v34[v19];
        if (!v18)
        {
          while (1)
          {
            v13 = v19 + 1;
            if (__OFADD__(v19, 1))
              goto LABEL_50;
            if (v13 >= v33)
              goto LABEL_43;
            v18 = v34[v13];
            ++v19;
            if (v18)
              goto LABEL_24;
          }
        }
        v13 = v19;
      }
    }
LABEL_24:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_25:
    v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    v35 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16 + 8);
    if ((a2 & 1) == 0)
    {
      sub_1000758C4(v35, v21);
      swift_bridgeObjectRetain(v20);
    }
    Hasher.init(_seed:)(v36, *(_QWORD *)(v8 + 40));
    switch(v21)
    {
      case 0uLL:
        v22 = 0;
        goto LABEL_33;
      case 1uLL:
        v22 = 1;
        goto LABEL_33;
      case 2uLL:
        v22 = 2;
        goto LABEL_33;
      case 3uLL:
        v22 = 3;
LABEL_33:
        Hasher._combine(_:)(v22);
        break;
      default:
        Hasher._combine(_:)(4uLL);
        String.hash(into:)(v36, v35, v21);
        break;
    }
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v8 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_10;
    }
    v27 = 0;
    v28 = (unint64_t)(63 - v24) >> 6;
    do
    {
      if (++v26 == v28 && (v27 & 1) != 0)
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        JUMPOUT(0x100177940);
      }
      v29 = v26 == v28;
      if (v26 == v28)
        v26 = 0;
      v27 |= v29;
      v30 = *(_QWORD *)(v12 + 8 * v26);
    }
    while (v30 == -1);
    v14 = __clz(__rbit64(~v30)) + (v26 << 6);
LABEL_10:
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_OWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14) = v35;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v20;
    ++*(_QWORD *)(v8 + 16);
  }
LABEL_43:
  swift_release(v5);
  v3 = v32;
  if ((a2 & 1) != 0)
  {
    v31 = 1 << *(_BYTE *)(v5 + 32);
    if (v31 >= 64)
      bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v34 = -1 << v31;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_48:
  swift_release(v5);
  *v3 = v8;
}

void sub_100177950(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  uint64_t v42[9];

  v3 = v2;
  v6 = type metadata accessor for FMAnnotationIdentifier(0);
  v40 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_100053F2C(&qword_1005D6BC8);
  v41 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_43;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v3;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  swift_retain(v9);
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v21 >= v38)
      break;
    v22 = v39;
    v23 = v39[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v38)
        goto LABEL_36;
      v23 = v39[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_36:
          swift_release(v9);
          v3 = v37;
          if ((v41 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v23 = v39[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_45;
            if (v17 >= v38)
              goto LABEL_36;
            v23 = v39[v17];
            ++v24;
            if (v23)
              goto LABEL_23;
          }
        }
        v17 = v24;
      }
    }
LABEL_23:
    v15 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(_QWORD *)(v9 + 48) + v25 * v20;
    if ((v41 & 1) != 0)
    {
      sub_100051774(v26, (uint64_t)v8, type metadata accessor for FMAnnotationIdentifier);
      v27 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v20);
    }
    else
    {
      sub_10004FC74(v26, (uint64_t)v8, type metadata accessor for FMAnnotationIdentifier);
      v27 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v20);
    }
    Hasher.init(_seed:)(v42, *(_QWORD *)(v11 + 40));
    sub_100143B68();
    v28 = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v18 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    sub_100051774((uint64_t)v8, *(_QWORD *)(v11 + 48) + v25 * v18, type metadata accessor for FMAnnotationIdentifier);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release(v9);
  v3 = v37;
  v22 = v39;
  if ((v41 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_43:
  swift_release(v9);
  *v3 = v11;
}

unint64_t sub_100177CCC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  Swift::UInt v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
        Hasher.init(_seed:)(v23, *(_QWORD *)(a2 + 40));
        Hasher._combine(_:)(v9);
        result = Hasher._finalize()();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_BYTE *)(v11 + v3);
          v13 = (_BYTE *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100177E84(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_QWORD *)(v17 + 8 * v3);
          v19 = (_QWORD *)(v17 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100178058(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  __int128 v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;

  v4 = type metadata accessor for UUID(0);
  v39 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v38 = (result + 1) & v11;
      v12 = *(_QWORD *)(v39 + 72);
      v37 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v37(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v7, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v38)
        {
          if (v21 >= v38 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            result = v24 + v15 * a1;
            v25 = v24 + v16;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v25 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v25);
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront(result, v25);
              goto LABEL_21;
            }
            v26 = *(_QWORD *)(a2 + 56);
            v27 = (_OWORD *)(v26 + 32 * a1);
            v28 = (_OWORD *)(v26 + 32 * v10);
            if (a1 != v10 || (a1 = v10, v27 >= v28 + 2))
            {
              v29 = v28[1];
              *v27 = *v28;
              v27[1] = v29;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v38 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v30 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v30;
    v32 = (-1 << a1) - 1;
  }
  else
  {
    v30 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v32 = *v30;
    v31 = (-1 << a1) - 1;
  }
  *v30 = v32 & v31;
  v33 = *(_QWORD *)(a2 + 16);
  v34 = __OFSUB__(v33, 1);
  v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001782F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t result;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  Swift::Int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD v42[9];

  v41 = type metadata accessor for FMAccessoryProductImageRequest(0);
  v3 = *(_QWORD *)(v41 - 8);
  result = __chkstk_darwin(v41);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (v5 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    v12 = v5;
    result = _HashTable.previousHole(before:)(v5, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v39 = a2 + 64;
      v40 = (result + 1) & v11;
      v13 = *(_QWORD *)(v3 + 72);
      do
      {
        v15 = v13;
        v16 = v13 * v10;
        sub_10004FC74(*(_QWORD *)(a2 + 48) + v13 * v10, (uint64_t)v7, type metadata accessor for FMAccessoryProductImageRequest);
        v17 = a2;
        Hasher.init(_seed:)(v42, *(_QWORD *)(a2 + 40));
        v18 = type metadata accessor for URL(0);
        v19 = sub_100008000(&qword_1005D8D80, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        dispatch thunk of Hashable.hash(into:)(v42, v18, v19);
        v20 = v41;
        v21 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
        v22 = sub_100008000(&qword_1005D8D78, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPHawkeyeProductInformation.AssetType, (uint64_t)&protocol conformance descriptor for FMIPHawkeyeProductInformation.AssetType);
        dispatch thunk of Hashable.hash(into:)(v42, v21, v22);
        v23 = &v7[*(int *)(v20 + 24)];
        v24 = *(_QWORD *)v23;
        v25 = *((_QWORD *)v23 + 1);
        swift_bridgeObjectRetain(v25);
        String.hash(into:)(v42, v24, v25);
        swift_bridgeObjectRelease(v25);
        v26 = Hasher._finalize()();
        result = sub_10004FCB8((uint64_t)v7, type metadata accessor for FMAccessoryProductImageRequest);
        v27 = v26 & v11;
        v14 = v12;
        if (v12 >= (uint64_t)v40)
        {
          if (v27 < v40)
          {
            v8 = v39;
            v13 = v15;
            a2 = v17;
          }
          else
          {
            v8 = v39;
            v13 = v15;
            a2 = v17;
            if (v12 >= v27)
              goto LABEL_12;
          }
        }
        else
        {
          v8 = v39;
          v13 = v15;
          a2 = v17;
          if (v27 >= v40 || v12 >= v27)
          {
LABEL_12:
            v28 = *(_QWORD *)(a2 + 48);
            result = v28 + v13 * v12;
            v29 = v28 + v16;
            if (v13 * v12 < v16 || result >= v29 + v13)
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v29);
LABEL_17:
              v14 = v12;
            }
            else if (v13 * v12 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront(result, v29);
              goto LABEL_17;
            }
            v30 = *(_QWORD *)(a2 + 56);
            v31 = (_QWORD *)(v30 + 8 * v14);
            v32 = (_QWORD *)(v30 + 8 * v10);
            if (v14 != v10 || (v14 = v10, v31 >= v32 + 1))
            {
              *v31 = *v32;
              v14 = v10;
            }
          }
        }
        v12 = v14;
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v33 = (uint64_t *)(v8 + 8 * ((unint64_t)v12 >> 6));
    v34 = *v33;
    v35 = (-1 << v12) - 1;
  }
  else
  {
    v33 = (uint64_t *)(v8 + 8 * (v5 >> 6));
    v35 = *v33;
    v34 = (-1 << v5) - 1;
  }
  *v33 = v35 & v34;
  v36 = *(_QWORD *)(a2 + 16);
  v37 = __OFSUB__(v36, 1);
  v38 = v36 - 1;
  if (v37)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v38;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100178634(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[9];

  v40 = type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0);
  v4 = *(_QWORD *)(v40 - 8);
  result = __chkstk_darwin(v40);
  v38 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v37 = (result + 1) & v10;
      v11 = *(_QWORD *)(v4 + 72);
      v39 = v10;
      v12 = (uint64_t)v38;
      do
      {
        v13 = v7;
        v14 = v11;
        v15 = v11 * v9;
        sub_10004FC74(*(_QWORD *)(a2 + 48) + v11 * v9, v12, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
        v16 = Hasher.init(_seed:)(v41, *(_QWORD *)(a2 + 40));
        v17 = FMIPDevice.identifier.getter(v16);
        v19 = v18;
        String.hash(into:)(v41, v17, v18);
        swift_bridgeObjectRelease(v19);
        v20 = type metadata accessor for FMIPDeviceImageSize(0);
        v21 = sub_100008000(&qword_1005D8D48, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceImageSize, (uint64_t)&protocol conformance descriptor for FMIPDeviceImageSize);
        dispatch thunk of Hashable.hash(into:)(v41, v20, v21);
        v22 = Hasher._finalize()();
        result = sub_10004FCB8(v12, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
        v23 = v39;
        v24 = v22 & v39;
        if (a1 >= (uint64_t)v37)
        {
          if (v24 < v37)
          {
            v7 = v13;
            v11 = v14;
          }
          else
          {
            v7 = v13;
            v11 = v14;
            if (a1 >= v24)
              goto LABEL_12;
          }
        }
        else
        {
          v7 = v13;
          v11 = v14;
          if (v24 >= v37 || a1 >= v24)
          {
LABEL_12:
            v25 = *(_QWORD *)(a2 + 48);
            result = v25 + v11 * a1;
            v26 = v25 + v15;
            if (v11 * a1 < v15 || result >= v26 + v11)
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v26);
LABEL_17:
              v23 = v39;
            }
            else if (v11 * a1 != v15)
            {
              result = swift_arrayInitWithTakeBackToFront(result, v26);
              goto LABEL_17;
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = (_OWORD *)(v27 + 16 * a1);
            v29 = (_OWORD *)(v27 + 16 * v9);
            if (a1 != v9 || (a1 = v9, v28 >= v29 + 1))
            {
              *v28 = *v29;
              a1 = v9;
            }
          }
        }
        v9 = (v9 + 1) & v23;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v30 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v30;
    v32 = (-1 << a1) - 1;
  }
  else
  {
    v30 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v32 = *v30;
    v31 = (-1 << a1) - 1;
  }
  *v30 = v32 & v31;
  v33 = *(_QWORD *)(a2 + 16);
  v34 = __OFSUB__(v33, 1);
  v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10017892C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v27, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v27, v11, v12);
        v13 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_OWORD *)(v15 + 16 * v3);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = (_OWORD *)(v18 + 32 * v3);
          v20 = (_OWORD *)(v18 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v19 >= v20 + 2))
          {
            v9 = v20[1];
            *v19 = *v20;
            v19[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100178B00(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  unint64_t v42;
  uint64_t v43;

  v4 = type metadata accessor for UUID(0);
  v43 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v42 = (result + 1) & v11;
      v12 = *(_QWORD *)(v43 + 72);
      v41 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v41(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v7, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v42)
        {
          if (v21 >= v42 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v8 = v14;
            if (v15 * a1 < v16 || v25 >= v26 + v15)
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26);
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25, v26);
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for FMUnknownItemCellViewModel(0) - 8) + 72);
            v29 = v28 * a1;
            result = v27 + v28 * a1;
            v30 = v28 * v10;
            v31 = v27 + v28 * v10;
            v32 = v31 + v28;
            if (v29 < v30 || result >= v32)
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v31);
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v29 != v30)
              {
                result = swift_arrayInitWithTakeBackToFront(result, v31);
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v42 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v34 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v35 = *v34;
    v36 = (-1 << a1) - 1;
  }
  else
  {
    v34 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v36 = *v34;
    v35 = (-1 << a1) - 1;
  }
  *v34 = v36 & v35;
  v37 = *(_QWORD *)(a2 + 16);
  v38 = __OFSUB__(v37, 1);
  v39 = v37 - 1;
  if (v38)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v39;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100178DD4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[9];

  v36 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context(0);
  v4 = *(_QWORD *)(v36 - 8);
  result = __chkstk_darwin(v36);
  v7 = (uint64_t *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v35 = v11;
      v12 = *(_QWORD *)(v4 + 72);
      do
      {
        v13 = v8;
        v14 = v12;
        v15 = v12 * v10;
        sub_10004FC74(*(_QWORD *)(a2 + 48) + v12 * v10, (uint64_t)v7, type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
        Hasher.init(_seed:)(v37, *(_QWORD *)(a2 + 40));
        v16 = *v7;
        v17 = v7[1];
        swift_bridgeObjectRetain(v17);
        String.hash(into:)(v37, v16, v17);
        swift_bridgeObjectRelease(v17);
        v18 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
        v19 = sub_100008000(&qword_1005D8D78, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPHawkeyeProductInformation.AssetType, (uint64_t)&protocol conformance descriptor for FMIPHawkeyeProductInformation.AssetType);
        dispatch thunk of Hashable.hash(into:)(v37, v18, v19);
        v20 = Hasher._finalize()();
        result = sub_10004FCB8((uint64_t)v7, type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
        v21 = v35;
        v22 = v20 & v35;
        if (a1 >= (uint64_t)v34)
        {
          if (v22 < v34)
          {
            v8 = v13;
            v12 = v14;
          }
          else
          {
            v8 = v13;
            v12 = v14;
            if (a1 >= v22)
              goto LABEL_12;
          }
        }
        else
        {
          v8 = v13;
          v12 = v14;
          if (v22 >= v34 || a1 >= v22)
          {
LABEL_12:
            v23 = *(_QWORD *)(a2 + 48);
            result = v23 + v12 * a1;
            v24 = v23 + v15;
            if (v12 * a1 < v15 || result >= v24 + v12)
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v24);
LABEL_17:
              v21 = v35;
            }
            else if (v12 * a1 != v15)
            {
              result = swift_arrayInitWithTakeBackToFront(result, v24);
              goto LABEL_17;
            }
            v25 = *(_QWORD *)(a2 + 56);
            v26 = (_OWORD *)(v25 + 16 * a1);
            v27 = (_OWORD *)(v25 + 16 * v10);
            if (a1 != v10 || (a1 = v10, v26 >= v27 + 1))
            {
              *v26 = *v27;
              a1 = v10;
            }
          }
        }
        v10 = (v10 + 1) & v21;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001790B8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  Swift::UInt v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v9;
        v10 = v9[1];
        Hasher.init(_seed:)(v27, *(_QWORD *)(a2 + 40));
        switch(v10)
        {
          case 0uLL:
            v12 = 0;
            goto LABEL_12;
          case 1uLL:
            v12 = 1;
            goto LABEL_12;
          case 2uLL:
            v12 = 2;
            goto LABEL_12;
          case 3uLL:
            v12 = 3;
LABEL_12:
            Hasher._combine(_:)(v12);
            break;
          default:
            Hasher._combine(_:)(4uLL);
            swift_bridgeObjectRetain(v10);
            String.hash(into:)(v27, v11, v10);
            break;
        }
        v13 = Hasher._finalize()();
        result = sub_1000758D8(v11, v10);
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_18;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_18:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_OWORD *)(v15 + 16 * v3);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = (_QWORD *)(v18 + 8 * v3);
          v20 = (_QWORD *)(v18 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
          {
            *v19 = *v20;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
    JUMPOUT(0x1001792F8);
  }
  *(_QWORD *)(a2 + 16) = v26;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

void sub_100179308(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10004C348(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10017B0F4();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      swift_bridgeObjectRelease(*(_QWORD *)(v19 + 8 * v12));
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_100173524(v15, a4 & 1);
  v20 = sub_10004C348(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_100179464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v7 = (_QWORD **)v6;
  v33 = a3;
  v34 = a4;
  v32 = a2;
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)*v6;
  v17 = sub_100171818(a5);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  v21 = v16;
  v22 = v15[3];
  if (v22 >= v20 && (a6 & 1) != 0)
  {
LABEL_7:
    v23 = *v7;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = (uint64_t *)(v23[7] + 32 * v17);
      v25 = (void *)v24[2];
      v26 = v24[3];
      swift_bridgeObjectRelease(v24[1]);

      swift_release(v26);
      v27 = v32;
      *v24 = a1;
      v24[1] = v27;
      v28 = v34;
      v24[2] = v33;
      v24[3] = v28;
      return;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a6 & 1) == 0)
  {
    sub_10017B2A8();
    goto LABEL_7;
  }
  sub_100173838(v20, a6 & 1);
  v29 = sub_100171818(a5);
  if ((v21 & 1) != (v30 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v11);
    __break(1u);
    return;
  }
  v17 = v29;
  v23 = *v7;
  if ((v21 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a5, v11);
  sub_10017AA44(v17, (uint64_t)v14, a1, v32, v33, v34, v23);
}

void sub_1001795F4(uint64_t a1, uint64_t a2, char a3)
{
  sub_100179A84(a1, a2, a3, &qword_1005D6C48);
}

void sub_100179600(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10004C348(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10017B548();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7] + 48 * v12;
      v20 = *(_QWORD *)(v19 + 8);
      v21 = *(_QWORD *)(v19 + 24);
      swift_bridgeObjectRelease(*(_QWORD *)(v19 + 40));
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v20);
      v22 = a1[1];
      *(_OWORD *)v19 = *a1;
      *(_OWORD *)(v19 + 16) = v22;
      *(_OWORD *)(v19 + 32) = a1[2];
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v25 = (uint64_t *)(v18[6] + 16 * v12);
    *v25 = a2;
    v25[1] = a3;
    v26 = (_OWORD *)(v18[7] + 48 * v12);
    v27 = a1[1];
    *v26 = *a1;
    v26[1] = v27;
    v26[2] = a1[2];
    v28 = v18[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (!v29)
    {
      v18[2] = v30;
      swift_bridgeObjectRetain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_100173C18(v15, a4 & 1);
  v23 = sub_10004C348(a2, a3);
  if ((v16 & 1) == (v24 & 1))
  {
    v12 = v23;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_100179798(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10004C348(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10017D554(&qword_1005D8D58);
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_100176FD4(v15, a4 & 1, &qword_1005D8D58);
  v20 = sub_10004C348(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_100179904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v6 = v5;
  v12 = *v5;
  v14 = sub_10004C348(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_10017B8D8();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      swift_bridgeObjectRelease(v21[1]);
      *v21 = a1;
      v21[1] = a2;
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v24 = (uint64_t *)(v20[6] + 16 * v14);
    *v24 = a3;
    v24[1] = a4;
    v25 = (_QWORD *)(v20[7] + 16 * v14);
    *v25 = a1;
    v25[1] = a2;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      swift_bridgeObjectRetain(a4);
      return;
    }
    goto LABEL_14;
  }
  sub_100173F70(v17, a5 & 1);
  v22 = sub_10004C348(a3, a4);
  if ((v18 & 1) == (v23 & 1))
  {
    v14 = v22;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_100179A78(uint64_t a1, uint64_t a2, char a3)
{
  sub_100179A84(a1, a2, a3, &qword_1005D6C38);
}

void sub_100179A84(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD **v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v6 = (_QWORD **)v4;
  v10 = type metadata accessor for FMAccessoryProductImageRequest(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_1001719BC(a2);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    v21 = *v6;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7];

      *(_QWORD *)(v22 + 8 * v15) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_10017BA90(type metadata accessor for FMAccessoryProductImageRequest, a4);
    goto LABEL_7;
  }
  sub_100174294(v18, a3 & 1, a4);
  v23 = sub_1001719BC(a2);
  if ((v19 & 1) != (v24 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v10);
    __break(1u);
    return;
  }
  v15 = v23;
  v21 = *v6;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_10004FC74(a2, (uint64_t)v12, type metadata accessor for FMAccessoryProductImageRequest);
  sub_10017AAF8(v15, (uint64_t)v12, a1, v21, type metadata accessor for FMAccessoryProductImageRequest);
}

void sub_100179BFC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_10004C348(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 32 * v12);
        sub_100029574(v19);
        sub_10004C850(a1, v19);
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10017BE64();
      goto LABEL_7;
    }
    sub_1001749D0(v15, a4 & 1);
    v20 = sub_10004C348(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10017AB90(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

_OWORD *sub_100179D2C(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;
  uint64_t v20;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1001718B0((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_QWORD *)(v15[7] + 32 * v9);
        sub_100029574(v16);
        return sub_10004C850(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_10017C278();
      goto LABEL_7;
    }
    sub_100175060(v12, a3 & 1);
    v18 = sub_1001718B0((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10017ABF8(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for Key(0);
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v20);
  __break(1u);
  return result;
}

void sub_100179E4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v5 = (_QWORD **)v4;
  v10 = type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_100171B7C(a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    v21 = *v5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = (uint64_t *)(v21[7] + 16 * v15);
      swift_release(v22[1]);
      *v22 = a1;
      v22[1] = a2;
      return;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_10017C43C();
    goto LABEL_7;
  }
  sub_100175398(v18, a4 & 1);
  v23 = sub_100171B7C(a3);
  if ((v19 & 1) != (v24 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v10);
    __break(1u);
    return;
  }
  v15 = v23;
  v21 = *v5;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_10004FC74(a3, (uint64_t)v12, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
  sub_10017AC5C(v15, (uint64_t)v12, a1, a2, v21);
}

void sub_100179FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;

  v8 = v7;
  v15 = *v7;
  v17 = sub_10004C348(a5, a6);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0)
    goto LABEL_7;
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_10017C674();
LABEL_7:
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = v23[7] + 32 * v17;
      v25 = *(_QWORD *)(v24 + 8);
      v26 = *(void **)(v24 + 16);

      swift_bridgeObjectRelease(v25);
      *(_QWORD *)v24 = a1;
      *(_QWORD *)(v24 + 8) = a2;
      *(_QWORD *)(v24 + 16) = a3;
      *(_QWORD *)(v24 + 24) = a4;
      return;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v29 = (uint64_t *)(v23[6] + 16 * v17);
    *v29 = a5;
    v29[1] = a6;
    v30 = (_QWORD *)(v23[7] + 32 * v17);
    *v30 = a1;
    v30[1] = a2;
    v30[2] = a3;
    v30[3] = a4;
    v31 = v23[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (!v32)
    {
      v23[2] = v33;
      swift_bridgeObjectRetain(a6);
      return;
    }
    goto LABEL_14;
  }
  sub_10017577C(v20, a7 & 1);
  v27 = sub_10004C348(a5, a6);
  if ((v21 & 1) == (v28 & 1))
  {
    v17 = v27;
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_10017A154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6, double a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v8 = v7;
  v16 = *v7;
  v18 = sub_10004C348(a3, a4);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v22 = v17;
  v23 = *(_QWORD *)(v16 + 24);
  if (v23 >= v21 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v23 >= v21 && (a5 & 1) == 0)
  {
    sub_10017C860();
LABEL_7:
    v24 = (_QWORD *)*v8;
    if ((v22 & 1) != 0)
    {
LABEL_8:
      v25 = v24[7] + 32 * v18;
      swift_bridgeObjectRelease(*(_QWORD *)(v25 + 8));
      *(_QWORD *)v25 = a1;
      *(_QWORD *)(v25 + 8) = a2;
      *(double *)(v25 + 16) = a6;
      *(double *)(v25 + 24) = a7;
      return;
    }
LABEL_11:
    v24[(v18 >> 6) + 8] |= 1 << v18;
    v28 = (uint64_t *)(v24[6] + 16 * v18);
    *v28 = a3;
    v28[1] = a4;
    v29 = v24[7] + 32 * v18;
    *(_QWORD *)v29 = a1;
    *(_QWORD *)(v29 + 8) = a2;
    *(double *)(v29 + 16) = a6;
    *(double *)(v29 + 24) = a7;
    v30 = v24[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (!v31)
    {
      v24[2] = v32;
      swift_bridgeObjectRetain(a4);
      return;
    }
    goto LABEL_14;
  }
  sub_100175AB0(v21, a5 & 1);
  v26 = sub_10004C348(a3, a4);
  if ((v22 & 1) == (v27 & 1))
  {
    v18 = v26;
    v24 = (_QWORD *)*v8;
    if ((v22 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_10017A2E0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_100171818(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      swift_release(*(_QWORD *)(v21 + 8 * v14));
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_10017CA24();
    goto LABEL_7;
  }
  sub_100175DDC(v17, a3 & 1);
  v22 = sub_100171818(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_10017ACFC(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_10017A43C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_100171818(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for FMUnknownItemCellViewModel(0);
        return sub_10017F694(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_10017CC54();
      goto LABEL_7;
    }
    sub_100176170(v17, a3 & 1);
    v24 = sub_100171818(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_10017AD94(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
  __break(1u);
  return result;
}

void sub_10017A5BC(uint64_t a1, uint64_t a2, uint64_t *a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v5 = (_QWORD **)v4;
  v10 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_100171AC4(a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    v21 = *v5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7] + 16 * v15;
      v23 = *(void **)v22;
      swift_release(*(_QWORD *)(v22 + 8));

      *(_QWORD *)v22 = a1;
      *(_QWORD *)(v22 + 8) = a2;
      return;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_10017D304();
    goto LABEL_7;
  }
  sub_100176BDC(v18, a4 & 1);
  v24 = sub_100171AC4(a3);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v10);
    __break(1u);
    return;
  }
  v15 = v24;
  v21 = *v5;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_10004FC74((uint64_t)a3, (uint64_t)v12, type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
  sub_10017AE90(v15, (uint64_t)v12, a1, a2, v21);
}

void sub_10017A724(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_100171E48(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10017D8A4();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      swift_bridgeObjectRelease(*(_QWORD *)(v19 + 8 * v12));
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      sub_1000758C4(a2, a3);
      return;
    }
    goto LABEL_14;
  }
  sub_1001775E4(v15, a4 & 1);
  v20 = sub_100171E48(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for FMAnnotationClusterIdentifier);
  __break(1u);
}

void sub_10017A884(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for FMAnnotationIdentifier(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_100171DF0(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];

      *(_QWORD *)(v20 + 8 * v13) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_10017BA90(type metadata accessor for FMAnnotationIdentifier, &qword_1005D6BC8);
    goto LABEL_7;
  }
  sub_100177950(v16, a3 & 1);
  v21 = sub_100171DF0(a2);
  if ((v17 & 1) != (v22 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }
  v13 = v21;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_10004FC74(a2, (uint64_t)v10, type metadata accessor for FMAnnotationIdentifier);
  sub_10017AAF8(v13, (uint64_t)v10, a1, v19, type metadata accessor for FMAnnotationIdentifier);
}

unint64_t sub_10017A9FC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_10017AA44(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  a7[(a1 >> 6) + 8] |= 1 << a1;
  v14 = a7[6];
  v15 = type metadata accessor for UUID(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * a1, a2, v15);
  v17 = (_QWORD *)(a7[7] + 32 * a1);
  *v17 = a3;
  v17[1] = a4;
  v17[2] = a5;
  v17[3] = a6;
  v18 = a7[2];
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    a7[2] = v20;
  return result;
}

uint64_t sub_10017AAF8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a4[6];
  v11 = a5(0);
  result = sub_100051774(a2, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a5);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

_OWORD *sub_10017AB90(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_10004C850(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_10017ABF8(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_10004C850(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_10017AC5C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0);
  result = sub_100051774(a2, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
  v13 = (_QWORD *)(a5[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_10017ACFC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for UUID(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_10017AD94(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for FMUnknownItemCellViewModel(0);
  result = sub_100051774(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, type metadata accessor for FMUnknownItemCellViewModel);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

unint64_t sub_10017AE4C(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

uint64_t sub_10017AE90(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context(0);
  result = sub_100051774(a2, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
  v13 = (_QWORD *)(a5[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_10017AF30(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_10017AAF8(a1, a2, a3, a4, type metadata accessor for FMAnnotationIdentifier);
}

void sub_10017AF3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100053F2C(&qword_1005D6C60);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10017B0E8()
{
  sub_10017CF28(&qword_1005D6BE8);
}

void sub_10017B0F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100053F2C(&qword_1005D8D70);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10017B2A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  const void *v36;
  int64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v1 = type metadata accessor for UUID(0);
  v39 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  __chkstk_darwin(v1);
  v38 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100053F2C(&qword_1005D6BE0);
  v35 = v0;
  v3 = *v0;
  v4 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = *(_QWORD *)(v3 + 16);
  v42 = v4;
  if (!v5)
  {
    swift_release(v3);
    v34 = v42;
    v33 = v35;
LABEL_28:
    *v33 = v34;
    return;
  }
  v6 = v4;
  v7 = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v36 = (const void *)(v3 + 64);
  if (v6 != v3 || (unint64_t)v7 >= v3 + 64 + 8 * v8)
  {
    memmove(v7, v36, 8 * v8);
    v6 = v42;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v41 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v37 = (unint64_t)(v11 + 63) >> 6;
  v15 = v38;
  v14 = v39;
  v16 = v40;
  v17 = v42;
  while (1)
  {
    if (v13)
    {
      v43 = (v13 - 1) & v13;
      v44 = v10;
      v18 = __clz(__rbit64(v13)) | (v10 << 6);
      v19 = v41;
      goto LABEL_12;
    }
    v29 = v10 + 1;
    v19 = v41;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v29 >= v37)
      goto LABEL_26;
    v30 = *((_QWORD *)v36 + v29);
    v31 = v10 + 1;
    if (!v30)
    {
      v31 = v10 + 2;
      if (v10 + 2 >= v37)
        goto LABEL_26;
      v30 = *((_QWORD *)v36 + v31);
      if (!v30)
        break;
    }
LABEL_25:
    v43 = (v30 - 1) & v30;
    v44 = v31;
    v18 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v14 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v16);
    v21 = 32 * v18;
    v22 = (uint64_t *)(*(_QWORD *)(v19 + 56) + 32 * v18);
    v23 = *v22;
    v24 = v22[1];
    v25 = (void *)v22[2];
    v26 = v22[3];
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v17 + 48) + v20, v15, v16);
    v27 = (_QWORD *)(*(_QWORD *)(v17 + 56) + v21);
    *v27 = v23;
    v27[1] = v24;
    v27[2] = v25;
    v27[3] = v26;
    swift_retain(v26);
    swift_bridgeObjectRetain(v24);
    v28 = v25;
    v13 = v43;
    v10 = v44;
  }
  v32 = v10 + 3;
  if (v10 + 3 >= v37)
  {
LABEL_26:
    swift_release(v41);
    v33 = v35;
    v34 = v42;
    goto LABEL_28;
  }
  v30 = *((_QWORD *)v36 + v32);
  if (v30)
  {
    v31 = v10 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v37)
      goto LABEL_26;
    v30 = *((_QWORD *)v36 + v31);
    ++v32;
    if (v30)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10017B548()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;

  v1 = v0;
  sub_100053F2C(&qword_1005D8D68);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v30 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v13)
      goto LABEL_26;
    v31 = *(_QWORD *)(v6 + 8 * v30);
    ++v9;
    if (!v31)
    {
      v9 = v30 + 1;
      if (v30 + 1 >= v13)
        goto LABEL_26;
      v31 = *(_QWORD *)(v6 + 8 * v9);
      if (!v31)
        break;
    }
LABEL_25:
    v12 = (v31 - 1) & v31;
    v15 = __clz(__rbit64(v31)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 48 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    v26 = *(_BYTE *)(v21 + 32);
    v27 = *(_QWORD *)(v21 + 40);
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v28 = v19;
    v28[1] = v18;
    v29 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v29 = v22;
    *(_QWORD *)(v29 + 8) = v23;
    *(_QWORD *)(v29 + 16) = v24;
    *(_QWORD *)(v29 + 24) = v25;
    *(_BYTE *)(v29 + 32) = v26;
    *(_QWORD *)(v29 + 40) = v27;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v27);
  }
  v32 = v30 + 2;
  if (v32 >= v13)
    goto LABEL_26;
  v31 = *(_QWORD *)(v6 + 8 * v32);
  if (v31)
  {
    v9 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v31 = *(_QWORD *)(v6 + 8 * v9);
    ++v32;
    if (v31)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10017B738()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_100053F2C(&qword_1005D8EB8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    v17 = v16;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10017B8D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_100053F2C(&qword_1005D6BB0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v22);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10017BA90(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = v2;
  v6 = a1(0);
  v32 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - v7;
  sub_100053F2C(a2);
  v9 = *v2;
  v10 = static _DictionaryStorage.copy(original:)(*v2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
LABEL_28:
    *v5 = v11;
    return;
  }
  v30 = v5;
  v12 = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)v12 >= v9 + 64 + 8 * v13)
    memmove(v12, (const void *)(v9 + 64), 8 * v13);
  v31 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v26 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v19)
      goto LABEL_26;
    v27 = *(_QWORD *)(v31 + 8 * v26);
    ++v15;
    if (!v27)
    {
      v15 = v26 + 1;
      if (v26 + 1 >= v19)
        goto LABEL_26;
      v27 = *(_QWORD *)(v31 + 8 * v15);
      if (!v27)
        break;
    }
LABEL_25:
    v18 = (v27 - 1) & v27;
    v21 = __clz(__rbit64(v27)) + (v15 << 6);
LABEL_12:
    v22 = *(_QWORD *)(v32 + 72) * v21;
    sub_10004FC74(*(_QWORD *)(v9 + 48) + v22, (uint64_t)v8, a1);
    v23 = 8 * v21;
    v24 = *(void **)(*(_QWORD *)(v9 + 56) + v23);
    sub_100051774((uint64_t)v8, *(_QWORD *)(v11 + 48) + v22, a1);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + v23) = v24;
    v25 = v24;
  }
  v28 = v26 + 2;
  if (v28 >= v19)
  {
LABEL_26:
    swift_release(v9);
    v5 = v30;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v31 + 8 * v28);
  if (v27)
  {
    v15 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v27 = *(_QWORD *)(v31 + 8 * v15);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10017BCBC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_100053F2C(&qword_1005D8EB0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    swift_bridgeObjectRetain(v17);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10017BE64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_100053F2C(&qword_1005DF450);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v25 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_100056E70(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_10004C850(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10017C048()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = type metadata accessor for FMIPPlaySoundChannels(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100053F2C(&qword_1005D8DC0);
  v24 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release(v5);
    *v24 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    swift_retain(v19);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10017C278()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];

  v1 = v0;
  sub_100053F2C(&qword_1005D4D88);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_100056E70(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v23);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_10004C850(v23, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    v19 = v17;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10017C43C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;

  v1 = v0;
  v2 = type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0);
  v27 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100053F2C(&qword_1005D6C58);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v1 = v7;
    return;
  }
  v26 = v1;
  v8 = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v10)
    memmove(v8, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v9 + 8 * v23);
    ++v12;
    if (!v24)
    {
      v12 = v23 + 1;
      if (v23 + 1 >= v16)
        goto LABEL_26;
      v24 = *(_QWORD *)(v9 + 8 * v12);
      if (!v24)
        break;
    }
LABEL_25:
    v15 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v27 + 72) * v18;
    sub_10004FC74(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
    v20 = 16 * v18;
    v21 = *(_QWORD *)(v7 + 48) + v19;
    v28 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v20);
    sub_100051774((uint64_t)v4, v21, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
    v22 = *((_QWORD *)&v28 + 1);
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + v20) = v28;
    swift_retain(v22);
  }
  v25 = v23 + 2;
  if (v25 >= v16)
  {
LABEL_26:
    swift_release(v5);
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v9 + 8 * v25);
  if (v24)
  {
    v12 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v9 + 8 * v12);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10017C674()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  id v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  __int128 v31;

  v1 = v0;
  sub_100053F2C(&qword_1005D8DB0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(void **)(v21 + 24);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v31 = *(_OWORD *)(v21 + 8);
    *v24 = v19;
    v24[1] = v18;
    v25 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v25 = v22;
    *(_OWORD *)(v25 + 8) = v31;
    *(_QWORD *)(v25 + 24) = v23;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v31);
    v26 = *((id *)&v31 + 1);
    v27 = v23;
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10017C860()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  sub_100053F2C(&qword_1005D8DB8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v25 = *(_OWORD *)(v21 + 16);
    *v24 = v19;
    v24[1] = v18;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v26 = v22;
    *(_QWORD *)(v26 + 8) = v23;
    *(_OWORD *)(v26 + 16) = v25;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v23);
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10017CA24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100053F2C(&qword_1005D6BF8);
  v24 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release(v5);
    *v24 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    swift_retain(v19);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10017CC54()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for FMUnknownItemCellViewModel(0);
  v36 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100053F2C(&qword_1005D6C10);
  v30 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = *(_QWORD *)(v5 + 16);
  v38 = v6;
  if (!v7)
  {
    swift_release(v5);
    v28 = v38;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return;
  }
  v8 = v6;
  v9 = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)v9 >= v5 + 64 + 8 * v10)
  {
    memmove(v9, (const void *)(v5 + 64), 8 * v10);
    v8 = v38;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v37 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = v5 + 64;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v16 = v33;
  v15 = v34;
  v17 = (uint64_t)v35;
  for (i = v38; ; sub_100051774(v17, *(_QWORD *)(i + 56) + v23, type metadata accessor for FMUnknownItemCellViewModel))
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v11 << 6);
      v21 = v37;
      goto LABEL_9;
    }
    v24 = v11 + 1;
    v21 = v37;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_22:
    v14 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(_QWORD *)(v21 + 48) + v22, v15);
    v23 = *(_QWORD *)(v36 + 72) * v20;
    sub_10004FC74(*(_QWORD *)(v21 + 56) + v23, v17, type metadata accessor for FMUnknownItemCellViewModel);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(i + 48) + v22, v16, v15);
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    swift_release(v37);
    v27 = v30;
    v28 = v38;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_10017CF1C()
{
  sub_10017CF28(&qword_1005D6C00);
}

void sub_10017CF28(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v2 = v1;
  sub_100053F2C(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v13 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    v17 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v16);
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16) = v17;
    swift_bridgeObjectRetain(v17);
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10017D0C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  v29 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100053F2C(&qword_1005D8DA8);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v1 = v7;
    return;
  }
  v26 = v1;
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v27 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      v11 = v23 + 1;
      if (v23 + 1 >= v28)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v11);
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v19 = *v18;
    v20 = v18[1];
    v21 = *(_QWORD *)(v29 + 72) * v16;
    sub_10004FC74(*(_QWORD *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for FMBeaconSharingModuleEntry);
    v22 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v17);
    *v22 = v19;
    v22[1] = v20;
    sub_100051774((uint64_t)v4, *(_QWORD *)(v7 + 56) + v21, type metadata accessor for FMBeaconSharingModuleEntry);
    swift_bridgeObjectRetain(v20);
  }
  v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_26:
    swift_release(v5);
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v11 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v11 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v11);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10017D304()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  __int128 v29;

  v1 = v0;
  v2 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context(0);
  v28 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100053F2C(&qword_1005D6C28);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v1 = v7;
    return;
  }
  v27 = v1;
  v8 = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v10)
    memmove(v8, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v24 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v16)
      goto LABEL_26;
    v25 = *(_QWORD *)(v9 + 8 * v24);
    ++v12;
    if (!v25)
    {
      v12 = v24 + 1;
      if (v24 + 1 >= v16)
        goto LABEL_26;
      v25 = *(_QWORD *)(v9 + 8 * v12);
      if (!v25)
        break;
    }
LABEL_25:
    v15 = (v25 - 1) & v25;
    v18 = __clz(__rbit64(v25)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v28 + 72) * v18;
    sub_10004FC74(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4, type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
    v20 = 16 * v18;
    v21 = *(_QWORD *)(v7 + 48) + v19;
    v29 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v20);
    sub_100051774((uint64_t)v4, v21, type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
    v22 = (void *)v29;
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + v20) = v29;
    v23 = v22;
    swift_retain(*((_QWORD *)&v29 + 1));
  }
  v26 = v24 + 2;
  if (v26 >= v16)
  {
LABEL_26:
    swift_release(v5);
    v1 = v27;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v9 + 8 * v26);
  if (v25)
  {
    v12 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v25 = *(_QWORD *)(v9 + 8 * v12);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10017D548()
{
  sub_10017D554(&qword_1005D8DA0);
}

void sub_10017D554(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v2 = v1;
  sub_100053F2C(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v24);
    ++v10;
    if (!v25)
    {
      v10 = v24 + 1;
      if (v24 + 1 >= v14)
        goto LABEL_26;
      v25 = *(_QWORD *)(v7 + 8 * v10);
      if (!v25)
        break;
    }
LABEL_25:
    v13 = (v25 - 1) & v25;
    v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain(v19);
    v23 = v21;
  }
  v26 = v24 + 2;
  if (v26 >= v14)
    goto LABEL_26;
  v25 = *(_QWORD *)(v7 + 8 * v26);
  if (v25)
  {
    v10 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v10);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10017D6FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_100053F2C(&qword_1005D6BD0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    swift_bridgeObjectRetain(v17);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10017D8A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_100053F2C(&qword_1005D8D60);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v18);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v18) = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    sub_1000758C4(v19, *((unint64_t *)&v19 + 1));
    swift_bridgeObjectRetain(v17);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10017DA58()
{
  sub_10017BA90(type metadata accessor for FMAnnotationIdentifier, &qword_1005D6BC8);
}

uint64_t sub_10017DA6C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(char *, __int128 *);
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;

  v6 = (uint64_t (*)(char *, __int128 *))isStackAllocationSafe;
  v7 = *(_BYTE *)(a3 + 32);
  v8 = v7 & 0x3F;
  v9 = (1 << v7) + 63;
  v10 = v9 >> 6;
  v11 = 8 * (v9 >> 6);
  if (v8 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v9 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v15 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v11);
    v12 = sub_10017DBDC((unint64_t *)((char *)&v15 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0)), v10, a3, v6);
    if (v3)
      swift_willThrow(v12);
    else
      return v12;
  }
  else
  {
    v13 = (void *)swift_slowAlloc(v11, -1);
    bzero(v13, v11);
    a2 = sub_10017DBDC((unint64_t *)v13, v10, a3, v6);
    swift_slowDealloc(v13, -1, -1);
  }
  return a2;
}

uint64_t sub_10017DBDC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, __int128 *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, __int128 *);
  __int128 v31;
  _QWORD *v32;

  v30 = a4;
  v24 = a2;
  v25 = a1;
  v6 = type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0);
  v29 = *(_QWORD *)(v6 - 8);
  result = __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v32 = (_QWORD *)a3;
  v11 = *(_QWORD *)(a3 + 64);
  v26 = 0;
  v27 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v16 = v15 | (v10 << 6);
LABEL_17:
    v20 = v32;
    sub_10004FC74(v32[6] + *(_QWORD *)(v29 + 72) * v16, (uint64_t)v9, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
    v31 = *(_OWORD *)(v20[7] + 16 * v16);
    v21 = *((_QWORD *)&v31 + 1);
    swift_retain(*((_QWORD *)&v31 + 1));
    v22 = v30(v9, &v31);
    swift_release(v21);
    result = sub_10004FCB8((uint64_t)v9, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
    if (v4)
      return result;
    if ((v22 & 1) != 0)
    {
      *(unint64_t *)((char *)v25 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = __OFADD__(v26++, 1);
      if (v17)
        goto LABEL_30;
    }
  }
  v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v28)
    return sub_10017DE44(v25, v24, v26, v32);
  v18 = *(_QWORD *)(v27 + 8 * v10);
  if (v18)
  {
LABEL_16:
    v14 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  v19 = v10 + 1;
  if (v10 + 1 >= v28)
    return sub_10017DE44(v25, v24, v26, v32);
  v18 = *(_QWORD *)(v27 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 2;
  if (v10 + 2 >= v28)
    return sub_10017DE44(v25, v24, v26, v32);
  v18 = *(_QWORD *)(v27 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 3;
  if (v10 + 3 >= v28)
    return sub_10017DE44(v25, v24, v26, v32);
  v18 = *(_QWORD *)(v27 + 8 * v19);
  if (v18)
  {
LABEL_15:
    v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v28)
      return sub_10017DE44(v25, v24, v26, v32);
    v18 = *(_QWORD *)(v27 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

Swift::Int sub_10017DE44(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  Swift::Int result;
  Swift::Int v14;
  unint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v44;
  unint64_t *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  _QWORD v53[10];

  v8 = type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0);
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v48 = (uint64_t)&v44 - v12;
  if (!a3)
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  if (a4[2] == a3)
  {
    swift_retain(a4);
    return (Swift::Int)a4;
  }
  sub_100053F2C(&qword_1005D6C58);
  result = static _DictionaryStorage.allocate(capacity:)(a3);
  v14 = result;
  v45 = a1;
  v46 = a2;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *a1;
  v16 = 0;
  v17 = result + 64;
  v47 = v11;
  while (1)
  {
    if (v15)
    {
      v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v51 = v16;
      v19 = v18 | (v16 << 6);
    }
    else
    {
      v20 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v20 >= v46)
        return v14;
      v21 = v45[v20];
      v22 = v16 + 1;
      if (!v21)
      {
        v22 = v16 + 2;
        if (v16 + 2 >= v46)
          return v14;
        v21 = v45[v22];
        if (!v21)
        {
          v22 = v16 + 3;
          if (v16 + 3 >= v46)
            return v14;
          v21 = v45[v22];
          if (!v21)
          {
            v23 = v16 + 4;
            if (v16 + 4 >= v46)
              return v14;
            v21 = v45[v23];
            if (!v21)
            {
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v22 >= v46)
                  return v14;
                v21 = v45[v22];
                ++v23;
                if (v21)
                  goto LABEL_24;
              }
            }
            v22 = v16 + 4;
          }
        }
      }
LABEL_24:
      v15 = (v21 - 1) & v21;
      v51 = v22;
      v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    v24 = v48;
    v25 = *(_QWORD *)(v49 + 72);
    sub_10004FC74(a4[6] + v25 * v19, v48, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
    v26 = a4;
    v52 = *(_OWORD *)(a4[7] + 16 * v19);
    v27 = v24;
    v28 = (uint64_t)v47;
    sub_100051774(v27, (uint64_t)v47, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
    Hasher.init(_seed:)(v53, *(_QWORD *)(v14 + 40));
    v29 = swift_retain(*((_QWORD *)&v52 + 1));
    v30 = FMIPDevice.identifier.getter(v29);
    v32 = v31;
    String.hash(into:)(v53, v30, v31);
    swift_bridgeObjectRelease(v32);
    v33 = type metadata accessor for FMIPDeviceImageSize(0);
    v34 = sub_100008000(&qword_1005D8D48, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceImageSize, (uint64_t)&protocol conformance descriptor for FMIPDeviceImageSize);
    dispatch thunk of Hashable.hash(into:)(v53, v33, v34);
    result = Hasher._finalize()();
    v35 = -1 << *(_BYTE *)(v14 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v17 + 8 * (v36 >> 6))) != 0)
    {
      v38 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v17 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      a4 = v26;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v35) >> 6;
      a4 = v26;
      do
      {
        if (++v37 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v41 = v37 == v40;
        if (v37 == v40)
          v37 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v17 + 8 * v37);
      }
      while (v42 == -1);
      v38 = __clz(__rbit64(~v42)) + (v37 << 6);
    }
    *(_QWORD *)(v17 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
    result = sub_100051774(v28, *(_QWORD *)(v14 + 48) + v38 * v25, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
    *(_OWORD *)(*(_QWORD *)(v14 + 56) + 16 * v38) = v52;
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    v16 = v51;
    if (!a3)
      return v14;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

Swift::Int sub_10017E1EC(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  Swift::Int result;
  Swift::Int v14;
  unint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[9];

  v8 = type metadata accessor for FMAnnotationIdentifier(0);
  v45 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v44 = (uint64_t)&v40 - v12;
  if (!a3)
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  if (a4[2] == a3)
  {
    swift_retain(a4);
    return (Swift::Int)a4;
  }
  sub_100053F2C(&qword_1005D6BC8);
  result = static _DictionaryStorage.allocate(capacity:)(a3);
  v14 = result;
  v41 = a1;
  v42 = a2;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *a1;
  v16 = 0;
  v17 = result + 64;
  v43 = v11;
  while (1)
  {
    if (v15)
    {
      v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v46 = v16;
      v19 = v18 | (v16 << 6);
    }
    else
    {
      v20 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v20 >= v42)
        return v14;
      v21 = v41[v20];
      v22 = v16 + 1;
      if (!v21)
      {
        v22 = v16 + 2;
        if (v16 + 2 >= v42)
          return v14;
        v21 = v41[v22];
        if (!v21)
        {
          v22 = v16 + 3;
          if (v16 + 3 >= v42)
            return v14;
          v21 = v41[v22];
          if (!v21)
          {
            v23 = v16 + 4;
            if (v16 + 4 >= v42)
              return v14;
            v21 = v41[v23];
            if (!v21)
            {
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v22 >= v42)
                  return v14;
                v21 = v41[v22];
                ++v23;
                if (v21)
                  goto LABEL_24;
              }
            }
            v22 = v16 + 4;
          }
        }
      }
LABEL_24:
      v15 = (v21 - 1) & v21;
      v46 = v22;
      v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    v24 = v44;
    v25 = *(_QWORD *)(v45 + 72);
    sub_10004FC74(a4[6] + v25 * v19, v44, type metadata accessor for FMAnnotationIdentifier);
    v26 = a4;
    v27 = *(void **)(a4[7] + 8 * v19);
    v28 = v24;
    v29 = (uint64_t)v43;
    sub_100051774(v28, (uint64_t)v43, type metadata accessor for FMAnnotationIdentifier);
    Hasher.init(_seed:)(v47, *(_QWORD *)(v14 + 40));
    v30 = v27;
    sub_100143B68();
    result = Hasher._finalize()();
    v31 = -1 << *(_BYTE *)(v14 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v17 + 8 * (v32 >> 6))) != 0)
    {
      v34 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v17 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v37 = v33 == v36;
        if (v33 == v36)
          v33 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v17 + 8 * v33);
      }
      while (v38 == -1);
      v34 = __clz(__rbit64(~v38)) + (v33 << 6);
    }
    *(_QWORD *)(v17 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v34;
    result = sub_100051774(v29, *(_QWORD *)(v14 + 48) + v34 * v25, type metadata accessor for FMAnnotationIdentifier);
    *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v34) = v30;
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v26;
    v16 = v46;
    if (!a3)
      return v14;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10017E524(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((static FMIPDevice.== infix(_:_:)(a1, a2) & 1) != 0)
  {
    type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0);
    v2 = type metadata accessor for FMIPDeviceImageSize(0);
    v3 = sub_100008000(&qword_1005D8D50, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceImageSize, (uint64_t)&protocol conformance descriptor for FMIPDeviceImageSize);
    dispatch thunk of RawRepresentable.rawValue.getter(&v10, v2, v3);
    dispatch thunk of RawRepresentable.rawValue.getter(&v8, v2, v3);
    v4 = v11;
    v5 = v9;
    if (v10 == v8 && v11 == v9)
    {
      v6 = 1;
      v5 = v11;
    }
    else
    {
      v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v8, v9, 0);
    }
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_10017E614(unsigned __int8 a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double top;
  double left;
  double right;
  double bottom;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  UIImage *v26;
  UIImage *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  UIImage *v37;
  CGSize v38;

  v1 = a1;
  v2 = sub_100053F2C(&qword_1005D8E28);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D8E30);
  v35 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005D8E38);
  v36 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v1 - 1) > 2)
  {
    v16 = 0x80000001004B0360;
    right = 15.0;
    bottom = 15.0;
    left = 15.0;
    top = 15.0;
  }
  else
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
    v16 = 0x80000001004B0340;
  }
  v17 = sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  v18 = sub_100342F84(0xD000000000000016, v16, 6778480, 0xE300000000000000);
  if (!v18)
    goto LABEL_7;
  v19 = v18;
  objc_msgSend(v18, "size");
  v21 = right + left + v20;
  objc_msgSend(v19, "size");
  v23 = bottom + top + v22;
  objc_msgSend(v19, "scale");
  v25 = v24;
  v38.width = v21;
  v38.height = v23;
  UIGraphicsBeginImageContextWithOptions(v38, 0, v25);
  objc_msgSend(v19, "drawAtPoint:", left, top);
  v26 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  if (v26)
  {
    v37 = v26;
    v27 = v26;
    Just.init(_:)(&v37, v17);
    v28 = sub_10017F7E8();
    Just.setFailureType<A>(to:)(&type metadata for FMProductAssetProvider.Error, v6, &type metadata for FMProductAssetProvider.Error, v28);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v6);
    v29 = sub_10003F774(&qword_1005D8E40, &qword_1005D8E38, (uint64_t)&protocol conformance descriptor for Result<A, B>.Publisher);
    v30 = Publisher.eraseToAnyPublisher()(v9, v29);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
  }
  else
  {
LABEL_7:
    v31 = sub_10017F7E8();
    Fail.init(error:)(v31, v17, &type metadata for FMProductAssetProvider.Error, v31);
    v32 = sub_10003F774((unint64_t *)&unk_1005E5620, &qword_1005D8E28, (uint64_t)&protocol conformance descriptor for Fail<A, B>);
    v30 = Publisher.eraseToAnyPublisher()(v2, v32);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v30;
}

void sub_10017E930(uint64_t a1, int64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, int64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  _BOOL4 v32;
  uint8_t *v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t v36;
  Swift::String v37;
  void *object;
  Swift::String v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t, uint64_t);
  int64_t v83;
  unint64_t v84;
  int64_t v85;
  unsigned int (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  int64_t v94;
  uint64_t v95;
  int64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, int64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(uint64_t);
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  int64_t v116;
  uint64_t v117;
  int64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  _QWORD *aBlock;
  unint64_t v129[4];
  uint64_t v130;
  uint64_t v131;

  v110 = a1;
  v109 = type metadata accessor for DispatchWorkItemFlags(0);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for DispatchQoS(0);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v104 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0);
  v120 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v120 + 64);
  v7 = __chkstk_darwin(v5);
  v103 = (uint64_t)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v127 = (uint64_t)&v94 - v8;
  v9 = sub_100053F2C(&qword_1005D8D38);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v97 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C(&qword_1005D8D40);
  v13 = __chkstk_darwin(v12);
  v114 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v119 = (uint64_t)&v94 - v16;
  __chkstk_darwin(v15);
  v18 = (uint64_t (*)(uint64_t))((char *)&v94 - v17);
  v19 = type metadata accessor for FMIPDevice(0);
  v20 = __chkstk_darwin(v19);
  v126 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = v21;
  __chkstk_darwin(v20);
  v23 = (char *)&v94 - v22;
  v112 = v24;
  v25 = *(void (**)(char *, int64_t, uint64_t))(v24 + 16);
  v116 = a2;
  v113 = v26;
  v100 = v25;
  v27 = ((uint64_t (*)(char *, int64_t))v25)((char *)&v94 - v22, a2);
  LOBYTE(v28) = static os_log_type_t.default.getter(v27);
  if (qword_1005D1DE8 == -1)
    goto LABEL_2;
  while (1)
  {
    swift_once(&qword_1005D1DE8, sub_100005ADC);
LABEL_2:
    v29 = type metadata accessor for Logger(0);
    v30 = sub_100056D88(v29, (uint64_t)qword_1005F5748);
    v31 = Logger.logObject.getter(v30);
    v32 = os_log_type_enabled(v31, (os_log_type_t)v28);
    v115 = v9;
    v111 = v18;
    if (v32)
    {
      v33 = (uint8_t *)swift_slowAlloc(12, -1);
      v34 = swift_slowAlloc(32, -1);
      *(_DWORD *)v33 = 136315138;
      v131 = v34;
      v125 = (uint64_t)(v33 + 4);
      aBlock = 0;
      v129[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(36);
      v35._object = (void *)0x80000001004B01F0;
      v35._countAndFlagsBits = 0xD000000000000022;
      String.append(_:)(v35);
      v37._countAndFlagsBits = FMIPDevice.identifier.getter(v36);
      object = v37._object;
      String.append(_:)(v37);
      swift_bridgeObjectRelease(object);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      String.append(_:)(v39);
      v40 = v129[0];
      aBlock = (_QWORD *)sub_100056DA0((uint64_t)aBlock, v129[0], &v131);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v129);
      swift_bridgeObjectRelease(v40);
      _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v28, "FMProductAssetProvider: %s", v33, 0xCu);
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v112 + 8))(v23, v113);
    v41 = v117;
    swift_beginAccess(v117 + 24, &v131, 0, 0);
    v42 = *(_QWORD *)(v41 + 24);
    __chkstk_darwin(v43);
    *(&v94 - 2) = v116;
    swift_bridgeObjectRetain(v42);
    LOBYTE(v28) = 0;
    v44 = sub_10017DA6C((uint64_t)sub_10017F438, (uint64_t)(&v94 - 4), v42);
    v45 = swift_bridgeObjectRelease(v42);
    v118 = 0;
    v46 = *(_QWORD *)(v44 + 64);
    v95 = v44 + 64;
    v98 = v44;
    v47 = 1 << *(_BYTE *)(v44 + 32);
    v48 = -1;
    if (v47 < 64)
      v48 = ~(-1 << v47);
    v49 = v48 & v46;
    v99 = v6 + 7;
    v96 = (unint64_t)(v47 + 63) >> 6;
    v94 = v96 - 1;
    v18 = type metadata accessor for FMProductAssetProvider.DeviceFetchingContext;
    v9 = (uint64_t)v114;
    v101 = v10;
    if (v49)
    {
      while (1)
      {
        v125 = (v49 - 1) & v49;
        v78 = __clz(__rbit64(v49)) | (v118 << 6);
        v79 = v115;
LABEL_10:
        v80 = v98;
        sub_10004FC74(*(_QWORD *)(v98 + 48) + *(_QWORD *)(v120 + 72) * v78, v9, v18);
        v81 = *(int *)(v79 + 48);
        v124 = *(_OWORD *)(*(_QWORD *)(v80 + 56) + 16 * v78);
        *(_OWORD *)(v9 + v81) = v124;
        v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
        v82(v9, 0, 1, v79);
        swift_retain(*((_QWORD *)&v124 + 1));
LABEL_29:
        v86 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
        v87 = 1;
        if (v86(v9, 1, v79) != 1)
        {
          v88 = *(int *)(v79 + 48);
          v89 = v97;
          sub_100051774(v9, v97, v18);
          v90 = swift_allocObject(&unk_10054A6D8, 32, 7);
          *(_OWORD *)(v90 + 16) = *(_OWORD *)(v9 + v88);
          v91 = (_QWORD *)(v119 + *(int *)(v79 + 48));
          sub_100051774(v89, v119, v18);
          v87 = 0;
          *v91 = sub_10017F608;
          v91[1] = v90;
        }
        v92 = v119;
        v82(v119, v87, 1, v79);
        v93 = (uint64_t)v111;
        sub_10005DAA0(v92, (uint64_t)v111, &qword_1005D8D40);
        if (v86(v93, 1, v79) == 1)
          break;
        v50 = (uint64_t *)(v93 + *(int *)(v79 + 48));
        v51 = *v50;
        v122 = v50[1];
        v123 = v51;
        v52 = v127;
        sub_100051774(v93, v127, v18);
        v53 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
        *(_QWORD *)&v124 = static OS_dispatch_queue.main.getter(v53);
        v121 = swift_allocObject(&unk_10054A660, 24, 7);
        swift_weakInit(v121 + 16, v117);
        v54 = v113;
        v100(v126, v116, v113);
        v55 = v103;
        sub_10004FC74(v52, v103, v18);
        v56 = v112;
        v57 = *(unsigned __int8 *)(v112 + 80);
        v58 = (v57 + 24) & ~v57;
        v59 = *(unsigned __int8 *)(v120 + 80);
        v60 = (v102 + v59 + v58) & ~v59;
        v61 = (v99 + v60) & 0xFFFFFFFFFFFFFFF8;
        v62 = (v61 + 15) & 0xFFFFFFFFFFFFFFF8;
        v63 = swift_allocObject(&unk_10054A688, v62 + 16, v57 | v59 | 7);
        v64 = v18;
        v65 = v110;
        *(_QWORD *)(v63 + 16) = v110;
        v66 = v63 + v58;
        v10 = v101;
        (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v66, v126, v54);
        sub_100051774(v55, v63 + v60, v64);
        v67 = v122;
        *(_QWORD *)(v63 + v61) = v121;
        v68 = (_QWORD *)(v63 + v62);
        *v68 = v123;
        v68[1] = v67;
        v129[3] = (unint64_t)sub_10017F580;
        v130 = v63;
        aBlock = _NSConcreteStackBlock;
        v129[0] = 1107296256;
        v129[1] = (unint64_t)sub_100037DF8;
        v129[2] = (unint64_t)&unk_10054A6A0;
        v23 = (char *)_Block_copy(&aBlock);
        v69 = v130;
        v70 = v65;
        v18 = v64;
        swift_retain(v70);
        swift_retain(v67);
        swift_release(v69);
        v71 = v104;
        static DispatchQoS.unspecified.getter(v72);
        aBlock = _swiftEmptyArrayStorage;
        v6 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v73 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
        v74 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
        v28 = v107;
        v75 = v109;
        dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v73, v74, v109, v6);
        v76 = (void *)v124;
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v71, v28, v23);
        _Block_release(v23);
        swift_release(v67);

        (*(void (**)(char *, uint64_t))(v108 + 8))(v28, v75);
        v77 = v71;
        v9 = (uint64_t)v114;
        (*(void (**)(char *, uint64_t))(v105 + 8))(v77, v106);
        sub_10004FCB8(v127, v64);
        v49 = v125;
        if (!v125)
          goto LABEL_11;
      }
      swift_release(v98);
      return;
    }
LABEL_11:
    v83 = v118 + 1;
    v79 = v115;
    if (!__OFADD__(v118, 1))
      break;
    __break(1u);
  }
  if (v83 >= v96)
    goto LABEL_28;
  v84 = *(_QWORD *)(v95 + 8 * v83);
  if (v84)
  {
LABEL_14:
    v125 = (v84 - 1) & v84;
    v78 = __clz(__rbit64(v84)) + (v83 << 6);
    v118 = v83;
    goto LABEL_10;
  }
  v85 = v118 + 2;
  ++v118;
  if (v83 + 1 >= v96)
    goto LABEL_28;
  v84 = *(_QWORD *)(v95 + 8 * v85);
  if (v84)
  {
LABEL_17:
    v83 = v85;
    goto LABEL_14;
  }
  v118 = v83 + 1;
  if (v83 + 2 >= v96)
    goto LABEL_28;
  v84 = *(_QWORD *)(v95 + 8 * (v83 + 2));
  if (v84)
  {
    v83 += 2;
    goto LABEL_14;
  }
  v85 = v83 + 3;
  v118 = v83 + 2;
  if (v83 + 3 >= v96)
  {
LABEL_28:
    v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v82)(v9, 1, 1, v115, v45);
    v125 = 0;
    goto LABEL_29;
  }
  v84 = *(_QWORD *)(v95 + 8 * v85);
  if (v84)
    goto LABEL_17;
  while (1)
  {
    v83 = v85 + 1;
    if (__OFADD__(v85, 1))
      break;
    if (v83 >= v96)
    {
      v118 = v94;
      goto LABEL_28;
    }
    v84 = *(_QWORD *)(v95 + 8 * v83);
    ++v85;
    if (v84)
      goto LABEL_14;
  }
  __break(1u);
}

uint64_t sub_10017F438(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_100171198(a1, a2, *(_QWORD *)(v2 + 16)) & 1;
}

uint64_t sub_10017F454()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10017F478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, __n128);
  uint64_t v16;
  uint64_t v17;

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = swift_release(*(_QWORD *)(v0 + 16));
  v14 = v0 + v4;
  v15 = *(void (**)(uint64_t, uint64_t, __n128))(v2 + 8);
  v15(v14, v1, v13);
  ((void (*)(uint64_t, uint64_t))v15)(v0 + v9, v1);
  v16 = v0 + v9 + *(int *)(v6 + 20);
  v17 = type metadata accessor for FMIPDeviceImageSize(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  swift_release(*(_QWORD *)(v0 + v11));
  swift_release(*(_QWORD *)(v0 + v12 + 8));
  return swift_deallocObject(v0, v12 + 16, v10);
}

void sub_10017F580()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100171340(*(_QWORD *)(v0 + 16), v0 + v2, v0 + v5, *(_QWORD *)(v0 + v6), *(void (**)(void *, _QWORD))(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10017F60C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_10017F644()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10017F668(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_10017F694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMUnknownItemCellViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10017F6D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

id sub_10017F74C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_100170E5C(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + ((v7 + 24) & ~v7));
}

uint64_t sub_10017F7B0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v2 + 16))(*a1, a1[1], a1[2]);
  if (!v3)
    *a2 = result;
  return result;
}

unint64_t sub_10017F7E8()
{
  unint64_t result;

  result = qword_1005D8DE8;
  if (!qword_1005D8DE8)
  {
    result = swift_getWitnessTable(&unk_100486120, &type metadata for FMProductAssetProvider.Error);
    atomic_store(result, (unint64_t *)&qword_1005D8DE8);
  }
  return result;
}

uint64_t sub_10017F82C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10017F850@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_10017E614(*(_BYTE *)(v1 + 24));
  *a1 = result;
  return result;
}

uint64_t sub_10017F880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for FMIPUnknownItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 17) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10017F8F4(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for FMIPUnknownItem(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_10016FA04(a1, a2, *(unsigned __int8 *)(v2 + 16), (uint8_t *)(v2 + v6), *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10017F958@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_100170414(a1);
  *a2 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FMProductAssetProvider.AssetType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMProductAssetProvider.AssetType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10017FA58 + 4 * byte_100485FD7[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10017FA8C + 4 * byte_100485FD2[v4]))();
}

uint64_t sub_10017FA8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10017FA94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10017FA9CLL);
  return result;
}

uint64_t sub_10017FAA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10017FAB0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_10017FAB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10017FABC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMProductAssetProvider.AssetType()
{
  return &type metadata for FMProductAssetProvider.AssetType;
}

unint64_t sub_10017FADC()
{
  unint64_t result;

  result = qword_1005D8EC0;
  if (!qword_1005D8EC0)
  {
    result = swift_getWitnessTable(&unk_100486224, &type metadata for FMProductAssetProvider.AssetType);
    atomic_store(result, (unint64_t *)&qword_1005D8EC0);
  }
  return result;
}

uint64_t sub_10017FB34@<X0>(uint64_t *a1@<X8>)
{
  return sub_10017F850(a1);
}

double sub_10017FB48()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t inited;
  NSString *v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  double result;
  uint64_t v15;

  v0 = (void *)objc_opt_self(UIFont);
  v1 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleLargeTitle);
  v2 = sub_10003CEE8(2);

  v3 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  v4 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  v5 = sub_100053F2C((uint64_t *)&unk_1005D7EA0);
  inited = swift_initStackObject(v5, &v15);
  *(_OWORD *)(inited + 16) = xmmword_100481740;
  *(_QWORD *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightSemibold;
  v7 = UIFontWeightTrait;
  v8 = sub_10004907C(inited);
  v9 = sub_100049188(v8);

  swift_bridgeObjectRelease(v8);
  v10 = sub_10003CEE8(0x8000);

  v11 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v12 = sub_10003CEE8(0x8000);

  v13 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  qword_1005D8ED0 = v2;
  *(_QWORD *)algn_1005D8ED8 = v3;
  qword_1005D8EE0 = v10;
  qword_1005D8EE8 = v12;
  qword_1005D8EF0 = (uint64_t)v13;
  *(_OWORD *)&qword_1005D8EF8 = xmmword_100486250;
  *(_OWORD *)&qword_1005D8F08 = xmmword_100486260;
  *(_OWORD *)algn_1005D8F18 = xmmword_100486270;
  result = 14.0;
  unk_1005D8F28 = xmmword_100486280;
  qword_1005D8F38 = 0x4010000000000000;
  return result;
}

void sub_10017FD28()
{
  _BYTE *v0;
  uint64_t v1;
  _BYTE *v2;
  char **v3;
  double v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD v10[5];
  uint64_t v11;

  v1 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity;
  v2 = &v0[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity];
  v3 = &selRef_startAnimating;
  if (!v0[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity])
    v3 = &selRef_stopAnimating;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy19FMActionLandingView_activityIndicator], *v3);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy19FMActionLandingView_activityIndicator], "setHidden:", (*v2 & 1) == 0);
  if (v0[v1])
    v4 = 0.0;
  else
    v4 = 1.0;
  v5 = (void *)objc_opt_self(UIView);
  v6 = swift_allocObject(&unk_10054A9A8, 32, 7);
  *(_QWORD *)(v6 + 16) = v0;
  *(double *)(v6 + 24) = v4;
  v10[4] = sub_1001827AC;
  v11 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100037DF8;
  v10[3] = &unk_10054A9C0;
  v7 = _Block_copy(v10);
  v8 = v11;
  v9 = v0;
  swift_release(v8);
  objc_msgSend(v5, "animateWithDuration:animations:", v7, 0.2);
  _Block_release(v7);
}

id sub_10017FE6C(uint64_t a1, double a2)
{
  double v4;

  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton), "setAlpha:");
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceContainerView), "setAlpha:", a2);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView), "setAlpha:", a2);
  v4 = 0.0;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity))
    v4 = 1.0;
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_activityIndicator), "setAlpha:", v4);
}

id sub_10017FF08(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  id v26;
  objc_super v28;

  v2 = v1;
  v4 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton;
  v5 = (void *)objc_opt_self(UIColor);
  v6 = v2;
  v7 = objc_msgSend(v5, "systemGray5Color");
  v8 = objc_allocWithZone((Class)type metadata accessor for FMSingleLinePlatterButton());
  v9 = sub_1000472FC(v7, 1, 0, 1);

  *(_QWORD *)&v2[v4] = v9;
  v10 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView;
  *(_QWORD *)&v6[v10] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMSymbolBulletedListView()), "init");
  v11 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollView;
  *(_QWORD *)&v6[v11] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v12 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollContentView;
  *(_QWORD *)&v6[v12] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v13 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel;
  *(_QWORD *)&v6[v13] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v14 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceContainerView;
  *(_QWORD *)&v6[v14] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v15 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImageView;
  *(_QWORD *)&v6[v15] = objc_msgSend(objc_allocWithZone((Class)SFAdjustedImageView), "init");
  v16 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceNameLabel;
  *(_QWORD *)&v6[v16] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v17 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceOwnerLabel;
  *(_QWORD *)&v6[v17] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v18 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_activityIndicator;
  *(_QWORD *)&v6[v18] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 101);
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_heightConstraint] = 0;
  v19 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnoteLabel;
  *(_QWORD *)&v6[v19] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v20 = &v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v21 = &v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnote];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v22 = &v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_action];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImage] = 0;
  v23 = &v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceName];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v24 = &v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceOwner];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_usesB389Adjustments] = 0;
  v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 0;
  v25 = &v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollHandler];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_isItem] = a1;

  v28.receiver = v6;
  v28.super_class = (Class)type metadata accessor for FMActionLandingView();
  v26 = objc_msgSendSuper2(&v28, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_1001801EC();
  sub_100180864();

  return v26;
}

void sub_1001801EC()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v1 = type metadata accessor for Logger(0);
  sub_100056D88(v1, (uint64_t)qword_1005F5748);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    v7 = *(void **)&v2[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImageView];
    v34 = v7;
    v8 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    *v6 = v7;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMActionLandingView: SFAdjustedImageView %@", v5, 0xCu);
    v9 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v6, 1, v9);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  objc_msgSend(v2, "setPreservesSuperviewLayoutMargins:", 1);
  v10 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_activityIndicator;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy19FMActionLandingView_activityIndicator], "setHidden:", 1);
  v33 = v10;
  objc_msgSend(*(id *)&v2[v10], "setAlpha:", 0.0);
  v11 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel;
  v12 = qword_1005D1C58;
  v13 = *(id *)&v2[OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel];
  if (v12 != -1)
    swift_once(&qword_1005D1C58, sub_10017FB48);
  objc_msgSend(v13, "setFont:", qword_1005D8ED0);

  objc_msgSend(*(id *)&v2[v11], "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(*(id *)&v2[v11], "setNumberOfLines:", 0);
  v14 = *(void **)&v2[v11];
  v15 = (void *)objc_opt_self(UIColor);
  v16 = v14;
  v17 = objc_msgSend(v15, "labelColor");
  objc_msgSend(v16, "setTextColor:", v17);

  objc_msgSend(*(id *)&v2[v11], "setTextAlignment:", 1);
  objc_msgSend(*(id *)&v2[v11], "setAdjustsFontForContentSizeCategory:", 1);
  v18 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceNameLabel;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceNameLabel], "setFont:", qword_1005D8EE0);
  objc_msgSend(*(id *)&v2[v18], "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(*(id *)&v2[v18], "setNumberOfLines:", 0);
  v19 = *(id *)&v2[v18];
  v20 = objc_msgSend(v15, "labelColor");
  objc_msgSend(v19, "setTextColor:", v20);

  objc_msgSend(*(id *)&v2[v18], "setTextAlignment:", 1);
  objc_msgSend(*(id *)&v2[v18], "setAdjustsFontForContentSizeCategory:", 1);
  v21 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceOwnerLabel;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceOwnerLabel], "setFont:", qword_1005D8EE8);
  objc_msgSend(*(id *)&v2[v21], "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(*(id *)&v2[v21], "setNumberOfLines:", 0);
  v22 = *(id *)&v2[v21];
  v23 = objc_msgSend(v15, "secondaryLabelColor");
  objc_msgSend(v22, "setTextColor:", v23);

  objc_msgSend(*(id *)&v2[v21], "setTextAlignment:", 1);
  objc_msgSend(*(id *)&v2[v21], "setAdjustsFontForContentSizeCategory:", 1);
  v24 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnoteLabel;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnoteLabel], "setFont:", qword_1005D8EF0);
  objc_msgSend(*(id *)&v2[v24], "setNumberOfLines:", 0);
  v25 = *(id *)&v2[v24];
  v26 = objc_msgSend(v15, "tertiaryLabelColor");
  objc_msgSend(v25, "setTextColor:", v26);

  objc_msgSend(*(id *)&v2[v24], "setTextAlignment:", 1);
  objc_msgSend(*(id *)&v2[v24], "setAdjustsFontForContentSizeCategory:", 1);
  v27 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton;
  objc_msgSend(*(id *)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton]+ OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label), "setTextAlignment:", 1);
  v28 = *(id *)(*(_QWORD *)&v2[v27] + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  v29 = objc_msgSend(v15, "systemRedColor");
  objc_msgSend(v28, "setTextColor:", v29);

  v30 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollView;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollView], "setPreservesSuperviewLayoutMargins:", 1);
  v31 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollContentView;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollContentView], "setPreservesSuperviewLayoutMargins:", 1);
  v32 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceContainerView;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceContainerView], "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImageView]);
  objc_msgSend(*(id *)&v2[v32], "addSubview:", *(_QWORD *)&v2[v18]);
  objc_msgSend(*(id *)&v2[v32], "addSubview:", *(_QWORD *)&v2[v21]);
  objc_msgSend(*(id *)&v2[v31], "addSubview:", *(_QWORD *)&v2[v11]);
  objc_msgSend(*(id *)&v2[v31], "addSubview:", *(_QWORD *)&v2[v32]);
  objc_msgSend(*(id *)&v2[v31], "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView]);
  objc_msgSend(*(id *)&v2[v31], "addSubview:", *(_QWORD *)&v2[v24]);
  objc_msgSend(*(id *)&v2[v31], "addSubview:", *(_QWORD *)&v2[v27]);
  objc_msgSend(*(id *)&v2[v31], "addSubview:", *(_QWORD *)&v2[v33]);
  objc_msgSend(*(id *)&v2[v30], "addSubview:", *(_QWORD *)&v2[v31]);
  objc_msgSend(*(id *)&v2[v30], "setContentInsetAdjustmentBehavior:", 3);
  objc_msgSend(*(id *)&v2[v30], "setDelegate:", v2);
  objc_msgSend(v2, "addSubview:", *(_QWORD *)&v2[v30]);
  sub_100182274();
}

void sub_100180864()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  uint64_t v4;
  double v5;
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  Class isa;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  Class v48;
  void *v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  Class v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  Class v78;
  uint64_t v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  uint64_t v91;
  Class v92;
  uint64_t v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  uint64_t v105;
  Class v106;
  uint64_t v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  uint64_t v122;
  Class v123;
  uint64_t v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  uint64_t v131;
  Class v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  id v143;

  v1 = v0;
  if (qword_1005D1C58 != -1)
    swift_once(&qword_1005D1C58, sub_10017FB48);
  v2 = *(double *)&qword_1005D8EF8;
  v3 = unk_1005D8F00;
  v4 = qword_1005D8F08;
  v5 = *(double *)&qword_1005D8F38;
  v6 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v7 = objc_msgSend(v6, "currentMode");

  if (v7)
  {
    objc_msgSend(v7, "size");
    v9 = v8;

    if (v9 == 1136.0)
      v10 = v3;
    else
      v10 = *(double *)&v4;
    v11 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v12 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollContentView;
    v139 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollContentView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollContentView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v133 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v134 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v140 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceContainerView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceContainerView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v136 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnoteLabel;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnoteLabel], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v137 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v138 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_activityIndicator;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_activityIndicator], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(*(id *)&v1[v12], "setDirectionalLayoutMargins:", 0.0, v5, 0.0, v5);
    v143 = (id)objc_opt_self(NSLayoutConstraint);
    v142 = sub_100053F2C(&qword_1005D2F10);
    v13 = swift_allocObject(v142, 64, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100481720;
    v14 = objc_msgSend(*(id *)&v1[v11], "topAnchor");
    v15 = objc_msgSend(v1, "topAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

    *(_QWORD *)(v13 + 32) = v16;
    v17 = objc_msgSend(*(id *)&v1[v11], "bottomAnchor");
    v18 = objc_msgSend(v1, "bottomAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

    *(_QWORD *)(v13 + 40) = v19;
    v20 = objc_msgSend(*(id *)&v1[v11], "leadingAnchor");
    v21 = objc_msgSend(v1, "safeAreaLayoutGuide");
    v22 = objc_msgSend(v21, "leadingAnchor");

    v23 = objc_msgSend(v20, "constraintEqualToAnchor:", v22);
    *(_QWORD *)(v13 + 48) = v23;
    v24 = objc_msgSend(*(id *)&v1[v11], "trailingAnchor");
    v25 = objc_msgSend(v1, "safeAreaLayoutGuide");
    v26 = objc_msgSend(v25, "trailingAnchor");

    v27 = objc_msgSend(v24, "constraintEqualToAnchor:", v26);
    *(_QWORD *)(v13 + 56) = v27;
    specialized Array._endMutation()(v28);
    sub_100048C64();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v143, "activateConstraints:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

    v30 = objc_msgSend(*(id *)&v1[v139], "heightAnchor");
    v141 = objc_msgSend(v30, "constraintGreaterThanOrEqualToConstant:", 480.0);

    v31 = swift_allocObject(v142, 72, 7);
    *(_OWORD *)(v31 + 16) = xmmword_1004820D0;
    v32 = objc_msgSend(*(id *)&v1[v139], "topAnchor");
    v33 = objc_msgSend(*(id *)&v1[v11], "topAnchor");
    v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

    *(_QWORD *)(v31 + 32) = v34;
    v35 = objc_msgSend(*(id *)&v1[v139], "bottomAnchor");
    v36 = objc_msgSend(*(id *)&v1[v11], "bottomAnchor");
    v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

    *(_QWORD *)(v31 + 40) = v37;
    v38 = objc_msgSend(*(id *)&v1[v139], "leadingAnchor");
    v39 = objc_msgSend(*(id *)&v1[v11], "layoutMarginsGuide");
    v40 = objc_msgSend(v39, "leadingAnchor");

    v41 = objc_msgSend(v38, "constraintEqualToAnchor:", v40);
    *(_QWORD *)(v31 + 48) = v41;
    v42 = objc_msgSend(*(id *)&v1[v139], "trailingAnchor");
    v43 = objc_msgSend(*(id *)&v1[v11], "layoutMarginsGuide");
    v44 = objc_msgSend(v43, "trailingAnchor");

    v45 = objc_msgSend(v42, "constraintEqualToAnchor:", v44);
    *(_QWORD *)(v31 + 56) = v45;
    *(_QWORD *)(v31 + 64) = v141;
    specialized Array._endMutation()(v46);
    v47 = v141;
    v48 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v143, "activateConstraints:", v48, swift_bridgeObjectRelease(v31).n128_f64[0]);

    v49 = *(void **)&v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_heightConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_heightConstraint] = v47;
    v135 = v47;

    v50 = swift_allocObject(v142, 56, 7);
    *(_OWORD *)(v50 + 16) = xmmword_1004820C0;
    v51 = objc_msgSend(*(id *)&v1[v133], "topAnchor");
    v52 = objc_msgSend(*(id *)&v1[v139], "safeAreaLayoutGuide");
    v53 = objc_msgSend(v52, "topAnchor");

    v54 = objc_msgSend(v51, "constraintEqualToAnchor:constant:", v53, v2);
    *(_QWORD *)(v50 + 32) = v54;
    v55 = objc_msgSend(*(id *)&v1[v133], "leadingAnchor");
    v56 = objc_msgSend(v1, "layoutMarginsGuide");
    v57 = objc_msgSend(v56, "leadingAnchor");

    v58 = objc_msgSend(v55, "constraintEqualToAnchor:", v57);
    *(_QWORD *)(v50 + 40) = v58;
    v59 = objc_msgSend(*(id *)&v1[v133], "trailingAnchor");
    v60 = objc_msgSend(v1, "layoutMarginsGuide");
    v61 = objc_msgSend(v60, "trailingAnchor");

    v62 = objc_msgSend(v59, "constraintEqualToAnchor:", v61);
    *(_QWORD *)(v50 + 48) = v62;
    specialized Array._endMutation()(v63);
    v64 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v143, "activateConstraints:", v64, swift_bridgeObjectRelease(v50).n128_f64[0]);

    v65 = swift_allocObject(v142, 56, 7);
    *(_OWORD *)(v65 + 16) = xmmword_1004820C0;
    v66 = objc_msgSend(*(id *)&v1[v140], "topAnchor");
    v67 = objc_msgSend(*(id *)&v1[v133], "bottomAnchor");
    v68 = objc_msgSend(v66, "constraintEqualToAnchor:constant:", v67, v10);

    *(_QWORD *)(v65 + 32) = v68;
    v69 = objc_msgSend(*(id *)&v1[v140], "leadingAnchor");
    v70 = objc_msgSend(*(id *)&v1[v139], "layoutMarginsGuide");
    v71 = objc_msgSend(v70, "leadingAnchor");

    v72 = objc_msgSend(v69, "constraintEqualToAnchor:", v71);
    *(_QWORD *)(v65 + 40) = v72;
    v73 = objc_msgSend(*(id *)&v1[v140], "trailingAnchor");
    v74 = objc_msgSend(*(id *)&v1[v139], "layoutMarginsGuide");
    v75 = objc_msgSend(v74, "trailingAnchor");

    v76 = objc_msgSend(v73, "constraintEqualToAnchor:", v75);
    *(_QWORD *)(v65 + 48) = v76;
    specialized Array._endMutation()(v77);
    v78 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v143, "activateConstraints:", v78, swift_bridgeObjectRelease(v65).n128_f64[0]);

    v79 = swift_allocObject(v142, 56, 7);
    *(_OWORD *)(v79 + 16) = xmmword_1004820C0;
    v80 = objc_msgSend(*(id *)&v1[v134], "topAnchor");
    v81 = objc_msgSend(*(id *)&v1[v140], "bottomAnchor");
    v82 = objc_msgSend(v80, "constraintEqualToAnchor:constant:", v81, v10);

    *(_QWORD *)(v79 + 32) = v82;
    v83 = objc_msgSend(*(id *)&v1[v134], "leadingAnchor");
    v84 = objc_msgSend(*(id *)&v1[v139], "layoutMarginsGuide");
    v85 = objc_msgSend(v84, "leadingAnchor");

    v86 = objc_msgSend(v83, "constraintEqualToAnchor:", v85);
    *(_QWORD *)(v79 + 40) = v86;
    v87 = objc_msgSend(*(id *)&v1[v134], "trailingAnchor");
    v88 = objc_msgSend(*(id *)&v1[v139], "layoutMarginsGuide");
    v89 = objc_msgSend(v88, "trailingAnchor");

    v90 = objc_msgSend(v87, "constraintEqualToAnchor:", v89);
    *(_QWORD *)(v79 + 48) = v90;
    specialized Array._endMutation()(v91);
    v92 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v143, "activateConstraints:", v92, swift_bridgeObjectRelease(v79).n128_f64[0]);

    v93 = swift_allocObject(v142, 56, 7);
    *(_OWORD *)(v93 + 16) = xmmword_1004820C0;
    v94 = objc_msgSend(*(id *)&v1[v136], "topAnchor");
    v95 = objc_msgSend(*(id *)&v1[v134], "bottomAnchor");
    v96 = objc_msgSend(v94, "constraintGreaterThanOrEqualToAnchor:constant:", v95, v10);

    *(_QWORD *)(v93 + 32) = v96;
    v97 = objc_msgSend(*(id *)&v1[v136], "leadingAnchor");
    v98 = objc_msgSend(*(id *)&v1[v139], "layoutMarginsGuide");
    v99 = objc_msgSend(v98, "leadingAnchor");

    v100 = objc_msgSend(v97, "constraintEqualToAnchor:", v99);
    *(_QWORD *)(v93 + 40) = v100;
    v101 = objc_msgSend(*(id *)&v1[v136], "trailingAnchor");
    v102 = objc_msgSend(*(id *)&v1[v139], "layoutMarginsGuide");
    v103 = objc_msgSend(v102, "trailingAnchor");

    v104 = objc_msgSend(v101, "constraintEqualToAnchor:", v103);
    *(_QWORD *)(v93 + 48) = v104;
    specialized Array._endMutation()(v105);
    v106 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v143, "activateConstraints:", v106, swift_bridgeObjectRelease(v93).n128_f64[0]);

    v107 = swift_allocObject(v142, 64, 7);
    *(_OWORD *)(v107 + 16) = xmmword_100481720;
    v108 = objc_msgSend(*(id *)&v1[v137], "topAnchor");
    v109 = objc_msgSend(*(id *)&v1[v136], "bottomAnchor");
    v110 = objc_msgSend(v108, "constraintEqualToAnchor:constant:", v109, v10);

    *(_QWORD *)(v107 + 32) = v110;
    v111 = objc_msgSend(*(id *)&v1[v137], "leadingAnchor");
    v112 = objc_msgSend(*(id *)&v1[v139], "layoutMarginsGuide");
    v113 = objc_msgSend(v112, "leadingAnchor");

    v114 = objc_msgSend(v111, "constraintEqualToAnchor:", v113);
    *(_QWORD *)(v107 + 40) = v114;
    v115 = objc_msgSend(*(id *)&v1[v137], "trailingAnchor");
    v116 = objc_msgSend(*(id *)&v1[v139], "layoutMarginsGuide");
    v117 = objc_msgSend(v116, "trailingAnchor");

    v118 = objc_msgSend(v115, "constraintEqualToAnchor:", v117);
    *(_QWORD *)(v107 + 48) = v118;
    v119 = objc_msgSend(*(id *)&v1[v137], "bottomAnchor");
    v120 = objc_msgSend(*(id *)&v1[v139], "bottomAnchor");
    v121 = objc_msgSend(v119, "constraintEqualToAnchor:constant:", v120, -v10);

    *(_QWORD *)(v107 + 56) = v121;
    specialized Array._endMutation()(v122);
    v123 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v143, "activateConstraints:", v123, swift_bridgeObjectRelease(v107).n128_f64[0]);

    v124 = swift_allocObject(v142, 48, 7);
    *(_OWORD *)(v124 + 16) = xmmword_1004820B0;
    v125 = objc_msgSend(*(id *)&v1[v138], "centerXAnchor");
    v126 = objc_msgSend(v1, "centerXAnchor");
    v127 = objc_msgSend(v125, "constraintEqualToAnchor:", v126);

    *(_QWORD *)(v124 + 32) = v127;
    v128 = objc_msgSend(*(id *)&v1[v138], "centerYAnchor");
    v129 = objc_msgSend(*(id *)&v1[v140], "centerYAnchor");
    v130 = objc_msgSend(v128, "constraintEqualToAnchor:", v129);

    *(_QWORD *)(v124 + 40) = v130;
    specialized Array._endMutation()(v131);
    v132 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v143, "activateConstraints:", v132, swift_bridgeObjectRelease(v124).n128_f64[0]);

    sub_10018199C();
  }
  else
  {
    __break(1u);
  }
}

void sub_10018199C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  double v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  Class isa;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  Class v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  char *v53;
  Class v54;

  v1 = v0;
  if (qword_1005D1C58 != -1)
    swift_once(&qword_1005D1C58, sub_10017FB48);
  v2 = *(double *)&qword_1005D8F10;
  v3 = *(double *)algn_1005D8F18;
  v5 = qword_1005D8F20;
  v4 = unk_1005D8F28;
  v6 = *(double *)&qword_1005D8F30;
  v7 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImageView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImageView), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v8 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceNameLabel;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceNameLabel), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v53 = (char *)OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceOwnerLabel;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceOwnerLabel), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v9 = sub_100053F2C(&qword_1005D2F10);
  v10 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100481720;
  v11 = objc_msgSend(*(id *)(v1 + v7), "topAnchor");
  v12 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceContainerView;
  v13 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceContainerView), "topAnchor"));
  v14 = objc_msgSend(v11, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v10 + 32) = v14;
  v15 = objc_msgSend(*(id *)(v1 + v7), "centerXAnchor");
  v16 = objc_msgSend(*(id *)(v1 + v12), "centerXAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v10 + 40) = v17;
  v18 = objc_msgSend(*(id *)(v1 + v7), "widthAnchor");
  v19 = v18;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_isItem))
    v20 = v2;
  else
    v20 = v3;
  if (!*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_isItem))
    v2 = *(double *)&v5;
  v21 = objc_msgSend(v18, "constraintEqualToConstant:", v20);

  *(_QWORD *)(v10 + 48) = v21;
  v22 = objc_msgSend(*(id *)(v1 + v7), "heightAnchor");
  v52 = (id)objc_opt_self(NSLayoutConstraint);
  v23 = objc_msgSend(v22, "constraintEqualToConstant:", v2);

  *(_QWORD *)(v10 + 56) = v23;
  specialized Array._endMutation()(v24);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v52, "activateConstraints:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v26 = swift_allocObject(v9, 56, 7);
  *(_OWORD *)(v26 + 16) = xmmword_1004820C0;
  v27 = objc_msgSend(*(id *)(v1 + v8), "topAnchor");
  v28 = objc_msgSend(*(id *)(v1 + v7), "bottomAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v28, v4);

  *(_QWORD *)(v26 + 32) = v29;
  v30 = objc_msgSend(*(id *)(v1 + v8), "leadingAnchor");
  v31 = objc_msgSend(*(id *)(v1 + v12), "leadingAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v26 + 40) = v32;
  v33 = objc_msgSend(*(id *)(v1 + v8), "trailingAnchor");
  v34 = objc_msgSend(*(id *)(v1 + v12), "trailingAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v26 + 48) = v35;
  specialized Array._endMutation()(v36);
  v37 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v52, "activateConstraints:", v37, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v38 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v38 + 16) = xmmword_100481720;
  v39 = objc_msgSend(*(id *)&v53[v1], "topAnchor");
  v40 = objc_msgSend(*(id *)(v1 + v8), "bottomAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:constant:", v40, v6);

  *(_QWORD *)(v38 + 32) = v41;
  v42 = objc_msgSend(*(id *)&v53[v1], "leadingAnchor");
  v43 = objc_msgSend(*(id *)(v1 + v12), "leadingAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v38 + 40) = v44;
  v45 = objc_msgSend(*(id *)&v53[v1], "trailingAnchor");
  v46 = objc_msgSend(*(id *)(v1 + v12), "trailingAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  *(_QWORD *)(v38 + 48) = v47;
  v48 = objc_msgSend(*(id *)&v53[v1], "bottomAnchor");
  v49 = objc_msgSend(*(id *)(v1 + v12), "bottomAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:", v49);

  *(_QWORD *)(v38 + 56) = v50;
  specialized Array._endMutation()(v51);
  v54 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v52, "activateConstraints:", v54, swift_bridgeObjectRelease(v38).n128_f64[0]);

}

void sub_100182074(uint64_t a1)
{
  char *v1;
  id v3;
  id v4;
  double v5;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for FMActionLandingView();
  objc_msgSendSuper2(&v6, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  LOBYTE(v3) = UIContentSizeCategory.isAccessibilityCategory.getter(v4);
  LODWORD(v5) = 0;
  if ((v3 & 1) != 0)
    *(float *)&v5 = 1.0;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel], "_setHyphenationFactor:", v5);
  sub_100182274();
}

void sub_100182190()
{
  char *v0;
  void *v1;
  id v2;
  double Height;
  double v4;
  double v5;
  double v6;
  objc_super v7;
  CGRect v8;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for FMActionLandingView();
  objc_msgSendSuper2(&v7, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy19FMActionLandingView_heightConstraint];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, "frame");
    Height = CGRectGetHeight(v8);
    objc_msgSend(v0, "safeAreaInsets");
    v5 = Height - v4;
    objc_msgSend(v0, "safeAreaInsets");
    objc_msgSend(v2, "setConstant:", v5 - v6);

  }
}

void sub_100182274()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  NSString v15;
  id v16;
  void (*v17)(char *, char *, uint64_t);
  id v18;
  NSURL *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;

  v1 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v27 - v9;
  if (v0[OBJC_IVAR____TtC6FindMy19FMActionLandingView_usesB389Adjustments] == 1)
  {
    v11 = objc_msgSend(v0, "traitCollection");
    v12 = objc_msgSend(v11, "userInterfaceStyle");

    if (v12 == (id)2)
      v13 = 1;
    else
      v13 = 2;
    v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v14, "URLForResource:withExtension:", v15, 0);

    if (v16)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v16);

      v17 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v17(v3, v8, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
      {
        v17(v10, v3, v4);
        v18 = *(id *)&v0[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImageView];
        URL._bridgeToObjectiveC()(v19);
        v21 = v20;
        objc_msgSend(v18, "updateViewForAssetType:adjustmentsURL:", v13, v20);

        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    }
    sub_10009ADFC((uint64_t)v3);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v22 = type metadata accessor for Logger(0);
    v23 = sub_100056D88(v22, (uint64_t)qword_1005F5748);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMActionLandingView: updateImageStyle no adjustment", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

  }
}

id sub_1001825B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMActionLandingView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMActionLandingView()
{
  return objc_opt_self(_TtC6FindMy19FMActionLandingView);
}

uint64_t sub_100182764(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(*v2 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollHandler);
  v4 = *v3;
  v5 = v3[1];
  *v3 = a1;
  v3[1] = a2;
  return sub_1000327F0(v4, v5);
}

uint64_t sub_100182788()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1001827AC()
{
  uint64_t v0;

  return sub_10017FE6C(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

void sub_1001827B8()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton;
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray5Color");
  v4 = objc_allocWithZone((Class)type metadata accessor for FMSingleLinePlatterButton());
  v5 = sub_1000472FC(v3, 1, 0, 1);

  *(_QWORD *)&v1[v2] = v5;
  v6 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView;
  *(_QWORD *)&v1[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMSymbolBulletedListView()), "init");
  v7 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollView;
  *(_QWORD *)&v1[v7] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v8 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollContentView;
  *(_QWORD *)&v1[v8] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v9 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel;
  *(_QWORD *)&v1[v9] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v10 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceContainerView;
  *(_QWORD *)&v1[v10] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v11 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImageView;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone((Class)SFAdjustedImageView), "init");
  v12 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceNameLabel;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v13 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceOwnerLabel;
  *(_QWORD *)&v1[v13] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v14 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_activityIndicator;
  *(_QWORD *)&v1[v14] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 101);
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_heightConstraint] = 0;
  v15 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnoteLabel;
  *(_QWORD *)&v1[v15] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v16 = &v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title];
  *v16 = 0;
  v16[1] = 0;
  v17 = &v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnote];
  *v17 = 0;
  v17[1] = 0;
  v18 = &v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_action];
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImage] = 0;
  v19 = &v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceName];
  *v19 = 0;
  v19[1] = 0;
  v20 = &v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceOwner];
  *v20 = 0;
  v20[1] = 0;
  v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_usesB389Adjustments] = 0;
  v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 0;
  v21 = &v1[OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollHandler];
  *v21 = 0;
  v21[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMActionLandingView.swift", 32, 2, 154, 0);
  __break(1u);
}

uint64_t sub_100182A4C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  id v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  id v41;
  double v42;
  double v43;
  char *v44;
  id v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v49 = a1;
  v50 = a5;
  v48 = a4;
  v7 = type metadata accessor for FMIPDeviceImageSize(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v55 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v46 - v11;
  v13 = type metadata accessor for FMIPDevice(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v53 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v46 - v17;
  v19 = type metadata accessor for FMIPDeviceImageCacheRequest(0);
  v58 = *(_QWORD *)(v19 - 8);
  v59 = v19;
  v20 = __chkstk_darwin(v19);
  v47 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v23 = (char *)&v46 - v22;
  v54 = v14;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v51 = a2;
  v24(v18, a2, v13);
  v57 = v8;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v52 = a3;
  v56 = v7;
  v26 = v7;
  v27 = v48;
  v25(v12, a3, v26);
  v28 = (void *)objc_opt_self(UIScreen);
  v29 = v49;
  swift_bridgeObjectRetain(v49);
  v46 = v28;
  v30 = objc_msgSend(v28, "mainScreen");
  objc_msgSend(v30, "scale");
  v32 = v31;

  v49 = v12;
  FMIPDeviceImageCacheRequest.init(itemParts:device:size:scale:)(v29, v18, v12, v32);
  if (v27)
  {
    v33 = swift_allocObject(&unk_10054AA00, 32, 7);
    v34 = v50;
    *(_QWORD *)(v33 + 16) = v27;
    *(_QWORD *)(v33 + 24) = v34;
    v35 = sub_10017F668;
  }
  else
  {
    v35 = 0;
    v33 = 0;
    v34 = v50;
  }
  sub_1000A190C(v27, v34);
  dispatch thunk of FMImageCache.cachedImage(for:completion:)(&v61, v23, v35, v33);
  sub_1000327F0((uint64_t)v35, v33);
  v36 = v61;
  v37 = v53;
  v24(v53, v51, v13);
  v39 = v55;
  v38 = v56;
  v25(v55, v52, v56);
  if (!v36)
  {
    v24(v18, (uint64_t)v37, v13);
    v40 = v49;
    v25(v49, (uint64_t)v39, v38);
    v41 = objc_msgSend(v46, "mainScreen");
    objc_msgSend(v41, "scale");
    v43 = v42;

    v44 = v47;
    FMIPDeviceImageCacheRequest.init(device:size:scale:)(v18, v40, v43);
    dispatch thunk of FMImageCache.cachedImage(for:completion:)(&v60, v44, 0, 0);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v44, v59);
    v36 = v60;
  }
  (*(void (**)(char *, uint64_t))(v57 + 8))(v39, v38);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v37, v13);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v23, v59);
  return v36;
}

uint64_t sub_100182DCC()
{
  uint64_t v0;

  return sub_10005E190(v0 + qword_1005D9018);
}

uint64_t sub_100182DDC()
{
  uint64_t v0;

  v0 = FMIPDeviceImageCache.deinit();
  sub_10005E190(v0 + qword_1005D9018);
  return swift_deallocClassInstance(v0, 32, 7);
}

void sub_100182E18(uint64_t a1, uint64_t a2)
{
  swift_release(a2);
  _swift_stdlib_reportUnimplementedInitializer("FindMy.FMDeviceImageCache", 25, "init(converter:)", 16, 0);
  __break(1u);
}

uint64_t sub_100182E4C()
{
  return type metadata accessor for FMDeviceImageCache(0);
}

uint64_t sub_100182E54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100182E78(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  void *v52;
  void (*v53)(char *, uint64_t);
  void *v54;
  id v55;
  Swift::String v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  Swift::String v64;
  Swift::String v65;
  uint64_t countAndFlagsBits;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  _BOOL4 v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  void (*v81)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v89)(uint64_t, uint64_t, uint64_t);
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int (*v109)(uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  void (*v111)(uint64_t, uint64_t);
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t);
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unsigned int (*v135)(uint64_t, uint64_t, uint64_t);
  uint64_t *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  Swift::String v142;
  Swift::String v143;
  Swift::String v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  Swift::String v152;
  Swift::String v153;
  Swift::String v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  void *v158;
  Swift::String v159;
  uint64_t v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  char *v176;
  uint64_t (*v177)(uint64_t, uint64_t, uint64_t);
  uint64_t v178;
  int v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  Swift::String v188;
  Swift::String v189;
  Swift::String v190;
  Swift::String v191;

  v179 = a2;
  v3 = sub_100053F2C(&qword_1005D3370);
  v4 = __chkstk_darwin(v3);
  v167 = (char *)&v158 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v168 = (char *)&v158 - v7;
  __chkstk_darwin(v6);
  v174 = (char *)&v158 - v8;
  v9 = sub_100053F2C(&qword_1005DC400);
  v10 = __chkstk_darwin(v9);
  v171 = (char *)&v158 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v176 = (char *)&v158 - v12;
  v183 = type metadata accessor for FMFLocationSource(0);
  v180 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v173 = (char *)&v158 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = sub_100053F2C((uint64_t *)&unk_1005E4280);
  __chkstk_darwin(v178);
  v182 = (uint64_t)&v158 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100053F2C(&qword_1005D47B8);
  v16 = __chkstk_darwin(v15);
  v175 = (uint64_t)&v158 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v181 = (uint64_t)&v158 - v19;
  __chkstk_darwin(v18);
  v185 = (uint64_t)&v158 - v20;
  v21 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v22 = __chkstk_darwin(v21);
  v170 = (uint64_t)&v158 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v169 = (uint64_t)&v158 - v25;
  v26 = __chkstk_darwin(v24);
  v172 = (uint64_t)&v158 - v27;
  v28 = __chkstk_darwin(v26);
  v30 = (char *)&v158 - v29;
  v31 = __chkstk_darwin(v28);
  v33 = (char *)&v158 - v32;
  v34 = __chkstk_darwin(v31);
  v36 = (char *)&v158 - v35;
  v37 = __chkstk_darwin(v34);
  v39 = (char *)&v158 - v38;
  v40 = __chkstk_darwin(v37);
  v42 = (char *)&v158 - v41;
  v43 = __chkstk_darwin(v40);
  v45 = (char *)&v158 - v44;
  __chkstk_darwin(v43);
  v47 = (char *)&v158 - v46;
  v184 = a1;
  sub_100007464(a1, (uint64_t)&v158 - v46, (uint64_t *)&unk_1005D3350);
  v48 = type metadata accessor for FMFLocation(0);
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
  if (v50(v47, 1, v48) == 1)
  {
    sub_1000051EC((uint64_t)v47, (uint64_t *)&unk_1005D3350);
LABEL_6:
    v186 = 0;
    v187 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v187);
    v63 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v64._countAndFlagsBits = 0xD00000000000001DLL;
    v189._countAndFlagsBits = 0xD00000000000002FLL;
    v189._object = (void *)0x80000001004A9540;
    v64._object = (void *)0x80000001004A9520;
    v65._countAndFlagsBits = 0;
    v65._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)v63, v65, v189)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  v165 = (uint64_t)v45;
  v163 = v42;
  v161 = v39;
  v164 = v36;
  v166 = v33;
  v51 = v183;
  v162 = v30;
  v177 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v50;
  v52 = (void *)FMFLocation.location.getter();
  v53 = *(void (**)(char *, uint64_t))(v49 + 8);
  v53(v47, v48);
  if (!v52)
    goto LABEL_6;

  v186 = 0;
  v187 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v187);
  v54 = (void *)objc_opt_self(NSBundle);
  v55 = objc_msgSend(v54, "mainBundle");
  v56._countAndFlagsBits = 0xD00000000000001ELL;
  v188._countAndFlagsBits = 0xD000000000000030;
  v188._object = (void *)0x80000001004A5400;
  v56._object = (void *)0x80000001004A53E0;
  v57._countAndFlagsBits = 0;
  v57._object = (void *)0xE000000000000000;
  v159 = NSLocalizedString(_:tableName:bundle:value:comment:)(v56, (Swift::String_optional)0, (NSBundle)v55, v57, v188);

  v58 = v184;
  v59 = v165;
  sub_100007464(v184, v165, (uint64_t *)&unk_1005D3350);
  v60 = v177(v59, 1, v48);
  v158 = v54;
  if (v60 == 1)
  {
    sub_1000051EC(v59, (uint64_t *)&unk_1005D3350);
    v61 = (uint64_t)v164;
    v62 = (uint64_t)v163;
LABEL_10:
    sub_100007464(v58, v62, (uint64_t *)&unk_1005D3350);
    v70 = v185;
    goto LABEL_11;
  }
  v67 = FMFLocation.motionActivityState.getter();
  v69 = v68;
  v53((char *)v59, v48);
  v61 = (uint64_t)v164;
  v62 = (uint64_t)v163;
  if ((v69 & 1) != 0)
    goto LABEL_10;
  sub_100007464(v58, (uint64_t)v163, (uint64_t *)&unk_1005D3350);
  v70 = v185;
  if (v67 == 1)
  {
    sub_1000051EC(v62, (uint64_t *)&unk_1005D3350);
    LODWORD(v165) = 1;
    v71 = v177;
    goto LABEL_16;
  }
LABEL_11:
  v72 = (uint64_t)v161;
  sub_100007464(v62, (uint64_t)v161, (uint64_t *)&unk_1005D3350);
  v71 = v177;
  if (v177(v72, 1, v48) == 1)
  {
    sub_1000051EC(v62, (uint64_t *)&unk_1005D3350);
    sub_1000051EC(v72, (uint64_t *)&unk_1005D3350);
    LODWORD(v165) = 0;
  }
  else
  {
    v73 = FMFLocation.motionActivityState.getter();
    v75 = v74;
    sub_1000051EC(v62, (uint64_t *)&unk_1005D3350);
    v53((char *)v72, v48);
    v76 = v73 == 2;
    v77 = (v75 & 1) == 0;
    v70 = v185;
    if (!v77)
      v76 = 0;
    LODWORD(v165) = v76;
  }
LABEL_16:
  v78 = v180;
  sub_100007464(v58, v61, (uint64_t *)&unk_1005D3350);
  v79 = v71(v61, 1, v48);
  v160 = v48;
  if ((_DWORD)v79 == 1)
  {
    v80 = (void (*)(uint64_t, uint64_t))v53;
    sub_1000051EC(v61, (uint64_t *)&unk_1005D3350);
    v81 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56);
    v81(v70, 1, 1, v51);
  }
  else
  {
    FMFLocation.locationSource.getter(v79);
    v80 = (void (*)(uint64_t, uint64_t))v53;
    v53((char *)v61, v48);
    v81 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56);
    v81(v70, 0, 1, v51);
  }
  v82 = v70;
  v83 = v181;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v78 + 104))(v181, enum case for FMFLocationSource.secureLive(_:), v51);
  v81(v83, 0, 1, v51);
  v84 = v78;
  v85 = v182;
  v86 = v182 + *(int *)(v178 + 48);
  sub_100007464(v82, v182, &qword_1005D47B8);
  v87 = v51;
  v88 = v85;
  sub_100007464(v83, v86, &qword_1005D47B8);
  v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
  if (v89(v88, 1, v87) != 1)
  {
    v93 = v175;
    sub_100007464(v88, v175, &qword_1005D47B8);
    if (v89(v86, 1, v87) != 1)
    {
      v94 = v180;
      v95 = v173;
      (*(void (**)(char *, uint64_t, uint64_t))(v180 + 32))(v173, v86, v87);
      v96 = sub_100008000((unint64_t *)&unk_1005E4290, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationSource, (uint64_t)&protocol conformance descriptor for FMFLocationSource);
      v97 = dispatch thunk of static Equatable.== infix(_:_:)(v93, v95, v87, v96);
      v98 = *(void (**)(char *, uint64_t))(v94 + 8);
      v98(v95, v87);
      sub_1000051EC(v181, &qword_1005D47B8);
      sub_1000051EC(v185, &qword_1005D47B8);
      v98((char *)v93, v87);
      v58 = v184;
      sub_1000051EC(v88, &qword_1005D47B8);
      v92 = (uint64_t)v166;
      v91 = v160;
      if ((v97 & 1) == 0)
        goto LABEL_27;
      goto LABEL_26;
    }
    sub_1000051EC(v181, &qword_1005D47B8);
    sub_1000051EC(v185, &qword_1005D47B8);
    (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v93, v87);
    v91 = v160;
LABEL_24:
    sub_1000051EC(v88, (uint64_t *)&unk_1005E4280);
    v92 = (uint64_t)v166;
    goto LABEL_27;
  }
  sub_1000051EC(v83, &qword_1005D47B8);
  v88 = v182;
  sub_1000051EC(v82, &qword_1005D47B8);
  v90 = v89(v86, 1, v87);
  v91 = v160;
  if (v90 != 1)
    goto LABEL_24;
  sub_1000051EC(v88, &qword_1005D47B8);
  v92 = (uint64_t)v166;
LABEL_26:
  v179 &= v165;
LABEL_27:
  sub_100007464(v58, v92, (uint64_t *)&unk_1005D3350);
  if (v71(v92, 1, v91) == 1)
  {
    sub_1000051EC(v92, (uint64_t *)&unk_1005D3350);
  }
  else
  {
    v99 = (uint64_t)v176;
    FMFLocation.label.getter();
    v80(v92, v91);
    v100 = type metadata accessor for FMFLabel(0);
    v101 = *(_QWORD *)(v100 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100) == 1)
    {
      sub_1000051EC(v99, &qword_1005DC400);
    }
    else
    {
      countAndFlagsBits = FMFLabel.localizedValue.getter();
      v103 = v102;
      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v99, v100);
      v104 = HIBYTE(v103) & 0xF;
      if ((v103 & 0x2000000000000000) == 0)
        v104 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
      if (v104 && (v179 & 1) == 0)
      {
        swift_bridgeObjectRelease(v159._object);
        return countAndFlagsBits;
      }
      swift_bridgeObjectRelease(v103);
    }
    v58 = v184;
  }
  v105 = (uint64_t)v162;
  sub_100007464(v58, (uint64_t)v162, (uint64_t *)&unk_1005D3350);
  if (v71(v105, 1, v91) == 1)
  {
    sub_1000051EC(v105, (uint64_t *)&unk_1005D3350);
    return v159._countAndFlagsBits;
  }
  v106 = (uint64_t)v174;
  FMFLocation.address.getter();
  v80(v105, v91);
  v107 = type metadata accessor for FMFAddress(0);
  v108 = *(_QWORD *)(v107 - 8);
  v109 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48);
  if (v109(v106, 1, v107) == 1)
  {
    sub_1000051EC(v106, &qword_1005D3370);
    return v159._countAndFlagsBits;
  }
  v110 = v106;
  v111 = v80;
  v112 = v158;
  v113 = FMFAddress.displayAddress.getter();
  v115 = v114;
  v116 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
  v116(v110, v107);
  if (!v115)
    return v159._countAndFlagsBits;
  swift_bridgeObjectRelease(v159._object);
  if ((v179 & 1) == 0)
    return v113;
  v117 = v172;
  sub_100007464(v184, v172, (uint64_t *)&unk_1005D3350);
  if (v177(v117, 1, v91) == 1)
  {
    v118 = (uint64_t *)&unk_1005D3350;
    v119 = v117;
LABEL_51:
    sub_1000051EC(v119, v118);
    goto LABEL_52;
  }
  v121 = v168;
  FMFLocation.address.getter();
  v111(v117, v91);
  if (v109((uint64_t)v121, 1, v107) == 1)
  {
    v118 = &qword_1005D3370;
    v119 = (uint64_t)v121;
    goto LABEL_51;
  }
  v124 = FMFAddress.mapFormattedAddress.getter();
  v125 = v121;
  v127 = v126;
  v116((uint64_t)v125, v107);
  if (v127)
  {
    swift_bridgeObjectRelease(v115);
    v113 = v124;
    goto LABEL_62;
  }
LABEL_52:
  v122 = v169;
  sub_100007464(v184, v169, (uint64_t *)&unk_1005D3350);
  if (v177(v122, 1, v91) == 1)
  {
    sub_1000051EC(v122, (uint64_t *)&unk_1005D3350);
LABEL_61:
    v127 = v115;
    goto LABEL_62;
  }
  v123 = (uint64_t)v167;
  FMFLocation.address.getter();
  v111(v122, v91);
  if (v109(v123, 1, v107) == 1)
  {
    sub_1000051EC(v123, &qword_1005D3370);
    goto LABEL_61;
  }
  v128 = (void *)FMFAddress.postalAddress.getter();
  v116(v123, v107);
  v129 = static FMFAddress.formattedAddressLines(for:)(v128);
  if (!v129)
  {

    goto LABEL_61;
  }
  v130 = v129;
  swift_bridgeObjectRelease(v115);
  v186 = v130;
  v131 = sub_100053F2C(&qword_1005D39B0);
  v132 = sub_10011A508();
  v113 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v131, v132);
  v127 = v133;
  swift_bridgeObjectRelease(v130);

LABEL_62:
  v134 = v170;
  v135 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v177;
  sub_100007464(v184, v170, (uint64_t *)&unk_1005D3350);
  if (v135(v134, 1, v91) == 1)
  {
    v136 = (uint64_t *)&unk_1005D3350;
    v137 = v134;
  }
  else
  {
    v138 = v171;
    FMFLocation.label.getter();
    v111(v134, v91);
    v139 = type metadata accessor for FMFLabel(0);
    v140 = *(_QWORD *)(v139 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(v138, 1, v139) != 1)
    {
      v147 = v171;
      v148 = FMFLabel.localizedValue.getter();
      v150 = v149;
      (*(void (**)(char *, uint64_t))(v140 + 8))(v147, v139);
      v186 = 0;
      v187 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      v151 = objc_msgSend(v112, "mainBundle", swift_bridgeObjectRelease(v187).n128_f64[0]);
      v152._countAndFlagsBits = 0xD000000000000027;
      v191._countAndFlagsBits = 0xD000000000000039;
      v191._object = (void *)0x80000001004B05E0;
      v152._object = (void *)0x80000001004B05B0;
      v153._countAndFlagsBits = 0;
      v153._object = (void *)0xE000000000000000;
      v154 = NSLocalizedString(_:tableName:bundle:value:comment:)(v152, (Swift::String_optional)0, (NSBundle)v151, v153, v191);

      v155 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
      v156 = swift_allocObject(v155, 112, 7);
      *(_OWORD *)(v156 + 16) = xmmword_100481730;
      *(_QWORD *)(v156 + 56) = &type metadata for String;
      v157 = sub_100071E88();
      *(_QWORD *)(v156 + 32) = v148;
      *(_QWORD *)(v156 + 40) = v150;
      *(_QWORD *)(v156 + 96) = &type metadata for String;
      *(_QWORD *)(v156 + 104) = v157;
      *(_QWORD *)(v156 + 64) = v157;
      *(_QWORD *)(v156 + 72) = v113;
      *(_QWORD *)(v156 + 80) = v127;
      countAndFlagsBits = String.init(format:_:)(v154._countAndFlagsBits, v154._object, v156);
      swift_bridgeObjectRelease(v154._object);
      return countAndFlagsBits;
    }
    v136 = &qword_1005DC400;
    v137 = (uint64_t)v171;
  }
  sub_1000051EC(v137, v136);
  v186 = 0;
  v187 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v141 = objc_msgSend(v112, "mainBundle", swift_bridgeObjectRelease(v187).n128_f64[0]);
  v190._countAndFlagsBits = 0xD00000000000002ELL;
  v190._object = (void *)0x80000001004B0640;
  v142._object = (void *)0x80000001004B0620;
  v142._countAndFlagsBits = 0xD00000000000001CLL;
  v143._countAndFlagsBits = 0;
  v143._object = (void *)0xE000000000000000;
  v144 = NSLocalizedString(_:tableName:bundle:value:comment:)(v142, (Swift::String_optional)0, (NSBundle)v141, v143, v190);

  v145 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v146 = swift_allocObject(v145, 72, 7);
  *(_OWORD *)(v146 + 16) = xmmword_100481740;
  *(_QWORD *)(v146 + 56) = &type metadata for String;
  *(_QWORD *)(v146 + 64) = sub_100071E88();
  *(_QWORD *)(v146 + 32) = v113;
  *(_QWORD *)(v146 + 40) = v127;
  countAndFlagsBits = String.init(format:_:)(v144._countAndFlagsBits, v144._object, v146);
  swift_bridgeObjectRelease(v144._object);
  return countAndFlagsBits;
}

uint64_t sub_100183EBC(uint64_t a1)
{
  return sub_100183ED4(a1, (uint64_t (*)(uint64_t))sub_1000BEDBC);
}

uint64_t sub_100183EC8(uint64_t a1)
{
  return sub_100183ED4(a1, (uint64_t (*)(uint64_t))sub_10009B43C);
}

uint64_t sub_100183ED4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v4 = type metadata accessor for Logger(0);
    sub_100056D88(v4, (uint64_t)qword_1005F5748);
    swift_errorRetain(a1);
    v5 = swift_errorRetain(a1);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      v15 = a1;
      v16 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_errorRetain(a1);
      v10 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
      v11 = String.init<A>(describing:)(&v15, v10);
      v13 = v12;
      v15 = sub_100056DA0(v11, v12, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
      swift_bridgeObjectRelease(v13);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error during donation - %s", v8, 0xCu);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  return a2(a1);
}

uint64_t sub_1001840C4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v4 = type metadata accessor for Logger(0);
    sub_100056D88(v4, (uint64_t)qword_1005F5748);
    swift_errorRetain(a1);
    v5 = swift_errorRetain(a1);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      v15 = a1;
      v16 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_errorRetain(a1);
      v10 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
      v11 = String.init<A>(describing:)(&v15, v10);
      v13 = v12;
      v15 = sub_100056DA0(v11, v12, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
      swift_bridgeObjectRelease(v13);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error during donation - %s", v8, 0xCu);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  return a2(a1);
}

void sub_100184374()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  NSString v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  char **v17;
  id v18;
  id v19;
  id v20;
  char **v21;
  id v22;
  void *v23;
  id v24;

  v1 = v0;
  sub_100049C44();
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMSingleLineIconPlatterButton_glyphAndLabelView];
  objc_msgSend(v0, "addSubview:", v2);
  v3 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:scale:", UIFontTextStyleBody, 2);
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMSingleLineIconPlatterButton_glyphName + 8];
  swift_bridgeObjectRetain(v4);
  v5 = v3;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v24 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v6, v5);

  v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMSingleLineIconPlatterButton_glyphView];
  objc_msgSend(v7, "setContentMode:", 4);
  v8 = (void *)objc_opt_self(UIColor);
  v9 = objc_msgSend(v8, "whiteColor");
  objc_msgSend(v7, "setTintColor:", v9);

  objc_msgSend(v7, "setImage:", v24);
  objc_msgSend(v2, "addSubview:", v7);
  v10 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMSingleLineIconPlatterButton_label];
  v11 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v10, "setFont:", v11);

  objc_msgSend(v10, "setNumberOfLines:", 0);
  objc_msgSend(v10, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v10, "setTextAlignment:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMSingleLineIconPlatterButton_textAlignment]);
  if (v1[OBJC_IVAR____TtC6FindMy29FMSingleLineIconPlatterButton_isBackgroundColor] == 1)
  {
    v12 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMSingleLineIconPlatterButton_color];
    v13 = *(void **)&v1[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background];
    *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background] = v12;
    v14 = v12;

    if (qword_1005D1E80 != -1)
      swift_once(&qword_1005D1E80, sub_100008974);
    v15 = objc_msgSend(v1, "traitCollection");
    v16 = objc_msgSend(v15, "userInterfaceStyle");
    v17 = &selRef_tertiarySystemFillColor;
    if (v16 != (id)2)
      v17 = &selRef_whiteColor;
    v18 = objc_msgSend(v8, *v17);

    objc_msgSend(v10, "setTextColor:", v18);
  }
  else
  {
    if (qword_1005D1E80 != -1)
      swift_once(&qword_1005D1E80, sub_100008974);
    v19 = objc_msgSend(v1, "traitCollection");
    v20 = objc_msgSend(v19, "userInterfaceStyle");
    v21 = &selRef_tertiarySystemFillColor;
    if (v20 != (id)2)
      v21 = &selRef_whiteColor;
    v22 = objc_msgSend(v8, *v21);

    v23 = *(void **)&v1[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background];
    *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background] = v22;

    objc_msgSend(v10, "setTextColor:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMSingleLineIconPlatterButton_color]);
  }
  objc_msgSend(v2, "addSubview:", v10);

}

void sub_100184738()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  Class isa;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  Class v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  double v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  Class v50;
  id v51;
  int v52;
  int v53;
  uint64_t v54;

  v1 = v0;
  sub_100049798();
  if (qword_1005D20B8 != -1)
    swift_once(&qword_1005D20B8, sub_10005E610);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v2 = *(double *)&qword_1005F5978;
  v3 = *(double *)&xmmword_1005F6180;
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMSingleLineIconPlatterButton_glyphView];
  v5 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMSingleLineIconPlatterButton_label];
  v6 = *(id *)&v1[OBJC_IVAR____TtC6FindMy29FMSingleLineIconPlatterButton_glyphAndLabelView];
  v7 = v4;
  v8 = v5;
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v51 = (id)objc_opt_self(NSLayoutConstraint);
  v9 = sub_100053F2C(&qword_1005D2F10);
  v10 = swift_allocObject(v9, 48, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1004820B0;
  v11 = objc_msgSend(v7, "leadingAnchor");
  v12 = objc_msgSend(v6, "leadingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:constant:", v12, v2);

  *(_QWORD *)(v10 + 32) = v13;
  v14 = objc_msgSend(v7, "centerYAnchor");
  v15 = objc_msgSend(v6, "centerYAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v10 + 40) = v16;
  specialized Array._endMutation()(v17);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v51, "activateConstraints:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v19 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100481720;
  v20 = objc_msgSend(v8, "leadingAnchor");
  v21 = objc_msgSend(v7, "trailingAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v21, v2 * 0.5);

  *(_QWORD *)(v19 + 32) = v22;
  v23 = objc_msgSend(v8, "trailingAnchor");
  v24 = objc_msgSend(v6, "trailingAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v24, -v2);

  *(_QWORD *)(v19 + 40) = v25;
  v26 = objc_msgSend(v8, "topAnchor");
  v27 = objc_msgSend(v6, "topAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v19 + 48) = v28;
  v29 = objc_msgSend(v8, "bottomAnchor");
  v30 = objc_msgSend(v6, "bottomAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v19 + 56) = v31;
  v54 = v19;
  specialized Array._endMutation()(v32);
  v33 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v51, "activateConstraints:", v33, swift_bridgeObjectRelease(v19).n128_f64[0]);

  v34 = swift_allocObject(v9, 56, 7);
  *(_OWORD *)(v34 + 16) = xmmword_1004820C0;
  v35 = objc_msgSend(v6, "topAnchor");
  v36 = objc_msgSend(v1, "topAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v36, v3);

  type metadata accessor for UILayoutPriority(0);
  v39 = v38;
  v52 = 1065353216;
  v53 = 1148846080;
  v40 = sub_10004E0AC();
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v54, &v53, &v52, v39, v40);
  LODWORD(v41) = v54;
  objc_msgSend(v37, "setPriority:", v41);
  *(_QWORD *)(v34 + 32) = v37;
  v42 = objc_msgSend(v6, "centerXAnchor");
  v43 = objc_msgSend(v1, "centerXAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v34 + 40) = v44;
  v45 = objc_msgSend(v6, "bottomAnchor");
  v46 = objc_msgSend(v1, "bottomAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v46, -v3);

  *(_QWORD *)(v34 + 48) = v47;
  v54 = v34;
  specialized Array._endMutation()(v48);
  v49 = v54;
  v50 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v51, "activateConstraints:", v50, swift_bridgeObjectRelease(v49).n128_f64[0]);

}

void sub_100184E50()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMSingleLineIconPlatterButton_glyphName + 8));
}

id sub_100184EB0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSingleLineIconPlatterButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMSingleLineIconPlatterButton()
{
  return objc_opt_self(_TtC6FindMy29FMSingleLineIconPlatterButton);
}

void sub_100184F6C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC6FindMy29FMSingleLineIconPlatterButton_label;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v2 = OBJC_IVAR____TtC6FindMy29FMSingleLineIconPlatterButton_glyphAndLabelView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v3 = OBJC_IVAR____TtC6FindMy29FMSingleLineIconPlatterButton_glyphView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMSingleLineIconPlatterButton.swift", 42, 2, 36, 0);
  __break(1u);
}

void sub_100185034()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(CNAvatarImageRendererSettings), "defaultSettings");
  v1 = objc_msgSend(objc_allocWithZone((Class)CNAvatarImageRenderer), "initWithSettings:", v0);

  qword_1005D90D0 = (uint64_t)v1;
}

uint64_t sub_10018513C(uint64_t a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  char *v12;
  _BYTE v13[24];
  uint64_t v14;

  ObjectType = swift_getObjectType(v1);
  sub_10014581C(a1, (uint64_t)v13);
  if (!v14)
  {
    sub_10005D03C((uint64_t)v13);
    goto LABEL_9;
  }
  if ((swift_dynamicCast(&v12, v13, (char *)&type metadata for Any + 8, ObjectType, 6) & 1) == 0)
  {
LABEL_9:
    v10 = 0;
    return v10 & 1;
  }
  v4 = v12;
  v5 = *(_QWORD *)&v12[OBJC_IVAR____TtC6FindMy11FMRecipient_handle];
  v6 = *(_QWORD *)&v12[OBJC_IVAR____TtC6FindMy11FMRecipient_handle + 8];
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy11FMRecipient_handle);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy11FMRecipient_handle + 8);
  if (v5 == v7 && v6 == v8)
  {

    v10 = 1;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v7, v8, 0);

  }
  return v10 & 1;
}

void sub_100185278(char *a1)
{
  sub_100197968(*a1);
}

void sub_100185284()
{
  char *v0;

  sub_10036674C(0, *v0);
}

void sub_100185290()
{
  __asm { BR              X10 }
}

uint64_t sub_1001852C8(uint64_t a1)
{
  String.hash(into:)(a1, 0x6C6562616CLL, 0xE500000000000000);
  return swift_bridgeObjectRelease(0xE500000000000000);
}

void sub_100185370(uint64_t a1)
{
  char *v1;

  sub_10036674C(a1, *v1);
}

unint64_t sub_100185378@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100188000(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001853A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1001853D0 + 4 * byte_100486387[*v0]))();
}

void sub_1001853D0(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6562616CLL;
  a1[1] = 0xE500000000000000;
}

void sub_1001853E8(_QWORD *a1@<X8>)
{
  *a1 = 0x6D614E6E65766967;
  a1[1] = 0xE900000000000065;
}

void sub_100185408(_QWORD *a1@<X8>)
{
  *a1 = 0x614E796C696D6166;
  a1[1] = 0xEA0000000000656DLL;
}

void sub_100185428(_QWORD *a1@<X8>)
{
  *a1 = 0x656D616E6B63696ELL;
  a1[1] = 0xE800000000000000;
}

void sub_100185458(_QWORD *a1@<X8>)
{
  *a1 = 0x666C6573794D7369;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_100185474()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001854A0 + 4 * byte_10048638E[*v0]))(0x656C646E6168, 0xE600000000000000);
}

uint64_t sub_1001854A0()
{
  return 0x6C6562616CLL;
}

uint64_t sub_1001854B4()
{
  return 0x6D614E6E65766967;
}

uint64_t sub_1001854D0()
{
  return 0x614E796C696D6166;
}

uint64_t sub_1001854EC()
{
  return 0x656D616E6B63696ELL;
}

uint64_t sub_100185504()
{
  return 0x656D614E6C6C7566;
}

uint64_t sub_10018551C()
{
  return 0x666C6573794D7369;
}

unint64_t sub_100185534@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100188000(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100185558()
{
  return 0;
}

void sub_100185564(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_100185570(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100186788();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100185598(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100186788();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001855C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int128 v22;

  v3 = v2;
  v4 = v1;
  v6 = sub_100053F2C(&qword_1005D9150);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  sub_100029550(a1, v10);
  v12 = sub_100186788();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for FMRecipient.FMRecipientCodingKeys, &type metadata for FMRecipient.FMRecipientCodingKeys, v12, v10, v11);
  v13 = *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy11FMRecipient_handle);
  v14 = *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy11FMRecipient_handle + 8);
  LOBYTE(v22) = 0;
  v15 = swift_bridgeObjectRetain(v14);
  KeyedEncodingContainer.encode(_:forKey:)(v13, v14, &v22, v6, v15);
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    swift_bridgeObjectRelease(v14);
    v22 = *(_OWORD *)(v4 + OBJC_IVAR____TtC6FindMy11FMRecipient_label);
    v21 = 1;
    v16 = sub_100053F2C(&qword_1005D2BD0);
    v17 = sub_1001867CC(&qword_1005D9158, &qword_1005D2BD0);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v21, v6, v16, v17);
    v22 = *(_OWORD *)(v4 + OBJC_IVAR____TtC6FindMy11FMRecipient_givenName);
    v21 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v21, v6, v16, v17);
    v22 = *(_OWORD *)(v4 + OBJC_IVAR____TtC6FindMy11FMRecipient_familyName);
    v21 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v21, v6, v16, v17);
    v22 = *(_OWORD *)(v4 + OBJC_IVAR____TtC6FindMy11FMRecipient_nickname);
    v21 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v21, v6, v16, v17);
    v22 = *(_OWORD *)(v4 + OBJC_IVAR____TtC6FindMy11FMRecipient_fullName);
    v21 = 5;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v21, v6, v16, v17);
    LOBYTE(v22) = *(_BYTE *)(v4 + OBJC_IVAR____TtC6FindMy11FMRecipient_isMyself);
    v21 = 6;
    v18 = sub_100053F2C((uint64_t *)&unk_1005E3AE0);
    v19 = sub_1001867CC(&qword_1005D9160, (uint64_t *)&unk_1005E3AE0);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v21, v6, v18, v19);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1001858C8(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  objc_class *v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  objc_super v50;
  _QWORD *v51;

  v4 = sub_100053F2C(&qword_1005D9140);
  v48 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &v1[OBJC_IVAR____TtC6FindMy11FMRecipient_label];
  *v7 = 0;
  v7[1] = 0;
  v8 = &v1[OBJC_IVAR____TtC6FindMy11FMRecipient_givenName];
  *v8 = 0;
  v8[1] = 0;
  v9 = &v1[OBJC_IVAR____TtC6FindMy11FMRecipient_familyName];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v1[OBJC_IVAR____TtC6FindMy11FMRecipient_nickname];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v1[OBJC_IVAR____TtC6FindMy11FMRecipient_fullName];
  *v11 = 0;
  v11[1] = 0;
  v1[OBJC_IVAR____TtC6FindMy11FMRecipient_isMyself] = 2;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy11FMRecipient_monogram] = 0;
  v12 = a1[3];
  v13 = a1[4];
  v51 = a1;
  sub_100029550(a1, v12);
  v14 = sub_100186788();
  v15 = v1;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for FMRecipient.FMRecipientCodingKeys, &type metadata for FMRecipient.FMRecipientCodingKeys, v14, v12, v13);
  if (v2)
  {
    swift_unexpectedError(v2, "FindMy/FMRecipient.swift", 24, 1, 67);
    __break(1u);
    swift_unexpectedError(v12, "FindMy/FMRecipient.swift", 24, 1, 68);
    __break(1u);
    swift_unexpectedError(v15, "FindMy/FMRecipient.swift", 24, 1, 73);
    __break(1u);
    result = swift_unexpectedError(v15, "FindMy/FMRecipient.swift", 24, 1, 74);
    __break(1u);
  }
  else
  {
    LOBYTE(v49) = 0;
    v16 = KeyedDecodingContainer.decode(_:forKey:)(&v49, v4);
    v17 = v4;
    v18 = (uint64_t *)&v15[OBJC_IVAR____TtC6FindMy11FMRecipient_handle];
    *v18 = v16;
    v18[1] = v19;

    v20 = (objc_class *)type metadata accessor for FMRecipient();
    v50.receiver = v15;
    v50.super_class = v20;
    v21 = objc_msgSendSuper2(&v50, "init");
    LOBYTE(v49) = 1;
    v22 = (char *)v21;
    v23 = KeyedDecodingContainer.decode(_:forKey:)(&v49, v4);
    v24 = (uint64_t *)&v22[OBJC_IVAR____TtC6FindMy11FMRecipient_label];
    v25 = *(_QWORD *)&v22[OBJC_IVAR____TtC6FindMy11FMRecipient_label + 8];
    *v24 = v23;
    v24[1] = v26;
    swift_bridgeObjectRelease(v25);
    LOBYTE(v49) = 2;
    v27 = KeyedDecodingContainer.decode(_:forKey:)(&v49, v4);
    v28 = (uint64_t *)&v22[OBJC_IVAR____TtC6FindMy11FMRecipient_givenName];
    v29 = *(_QWORD *)&v22[OBJC_IVAR____TtC6FindMy11FMRecipient_givenName + 8];
    *v28 = v27;
    v28[1] = v30;
    swift_bridgeObjectRelease(v29);
    LOBYTE(v49) = 3;
    v31 = KeyedDecodingContainer.decode(_:forKey:)(&v49, v4);
    v32 = (uint64_t *)&v22[OBJC_IVAR____TtC6FindMy11FMRecipient_familyName];
    v33 = *(_QWORD *)&v22[OBJC_IVAR____TtC6FindMy11FMRecipient_familyName + 8];
    *v32 = v31;
    v32[1] = v34;
    swift_bridgeObjectRelease(v33);
    LOBYTE(v49) = 4;
    v35 = KeyedDecodingContainer.decode(_:forKey:)(&v49, v17);
    v36 = (uint64_t *)&v22[OBJC_IVAR____TtC6FindMy11FMRecipient_nickname];
    v37 = *(_QWORD *)&v22[OBJC_IVAR____TtC6FindMy11FMRecipient_nickname + 8];
    *v36 = v35;
    v36[1] = v38;
    swift_bridgeObjectRelease(v37);
    LOBYTE(v49) = 5;
    v39 = KeyedDecodingContainer.decode(_:forKey:)(&v49, v17);
    v40 = (uint64_t *)&v22[OBJC_IVAR____TtC6FindMy11FMRecipient_fullName];
    v41 = *(_QWORD *)&v22[OBJC_IVAR____TtC6FindMy11FMRecipient_fullName + 8];
    *v40 = v39;
    v40[1] = v42;
    v43 = swift_bridgeObjectRelease(v41);
    LOBYTE(v49) = 6;
    v44 = KeyedDecodingContainer.decode(_:forKey:)(&v49, v17, v43);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v6, v17);

    v45 = v51;
    v22[OBJC_IVAR____TtC6FindMy11FMRecipient_isMyself] = v44 & 1;
    sub_100029574(v45);
    return (uint64_t)v22;
  }
  return result;
}

unint64_t sub_100185E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6, char a7)
{
  _BYTE *v7;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  Swift::String v48;
  Swift::String v49;
  Swift::String v50;
  uint64_t v51;
  unint64_t result;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  _BOOL8 v61;
  void *v62;
  id v63;
  double v64;
  double v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  Class isa;
  id v72;
  void *v78;
  uint64_t v79;
  objc_super v80;
  Swift::String v81;

  v10 = &v7[OBJC_IVAR____TtC6FindMy11FMRecipient_label];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v7[OBJC_IVAR____TtC6FindMy11FMRecipient_givenName];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v7[OBJC_IVAR____TtC6FindMy11FMRecipient_familyName];
  *v12 = 0;
  v12[1] = 0;
  v13 = &v7[OBJC_IVAR____TtC6FindMy11FMRecipient_nickname];
  *v13 = 0;
  v13[1] = 0;
  v14 = &v7[OBJC_IVAR____TtC6FindMy11FMRecipient_fullName];
  *v14 = 0;
  v14[1] = 0;
  v7[OBJC_IVAR____TtC6FindMy11FMRecipient_isMyself] = 2;
  v15 = OBJC_IVAR____TtC6FindMy11FMRecipient_monogram;
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy11FMRecipient_monogram] = 0;
  v16 = v7;
  if (objc_msgSend(a5, "contactType"))
  {
    swift_bridgeObjectRelease(a2);

    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(v10[1]);
    swift_bridgeObjectRelease(v11[1]);
    swift_bridgeObjectRelease(v12[1]);
    swift_bridgeObjectRelease(v13[1]);
    swift_bridgeObjectRelease(v14[1]);
    v17 = *(void **)&v7[v15];

    v18 = type metadata accessor for FMRecipient();
    swift_deallocPartialClassInstance(v16, v18, 120, 7);
    return 0;
  }
  v20 = &v16[OBJC_IVAR____TtC6FindMy11FMRecipient_handle];
  *(_QWORD *)v20 = a1;
  *((_QWORD *)v20 + 1) = a2;

  v80.receiver = v16;
  v80.super_class = (Class)type metadata accessor for FMRecipient();
  v21 = (char *)objc_msgSendSuper2(&v80, "init");
  v22 = &v21[OBJC_IVAR____TtC6FindMy11FMRecipient_label];
  v23 = *(_QWORD *)&v21[OBJC_IVAR____TtC6FindMy11FMRecipient_label + 8];
  *(_QWORD *)v22 = a3;
  *((_QWORD *)v22 + 1) = a4;
  v19 = v21;
  v24 = objc_msgSend(a5, "givenName", swift_bridgeObjectRelease(v23).n128_f64[0]);
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v28 = (uint64_t *)&v19[OBJC_IVAR____TtC6FindMy11FMRecipient_givenName];
  v29 = *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy11FMRecipient_givenName + 8];
  *v28 = v25;
  v28[1] = v27;
  v30 = objc_msgSend(a5, "familyName", swift_bridgeObjectRelease(v29).n128_f64[0]);
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v33 = v32;

  v34 = (uint64_t *)&v19[OBJC_IVAR____TtC6FindMy11FMRecipient_familyName];
  v35 = *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy11FMRecipient_familyName + 8];
  *v34 = v31;
  v34[1] = v33;
  v36 = objc_msgSend(a5, "nickname", swift_bridgeObjectRelease(v35).n128_f64[0]);
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v39 = v38;

  v40 = (uint64_t *)&v19[OBJC_IVAR____TtC6FindMy11FMRecipient_nickname];
  v41 = *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy11FMRecipient_nickname + 8];
  *v40 = v37;
  v40[1] = v39;
  swift_bridgeObjectRelease(v41);
  v42 = objc_msgSend((id)objc_opt_self(CNContactFormatter), "stringFromContact:style:", a5, 0);
  if (v42)
  {
    v43 = v42;
    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v46 = v45;

LABEL_8:
    v59 = (uint64_t *)&v19[OBJC_IVAR____TtC6FindMy11FMRecipient_fullName];
    v60 = *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy11FMRecipient_fullName + 8];
    *v59 = v44;
    v59[1] = v46;
    swift_bridgeObjectRelease(v60);
    v19[OBJC_IVAR____TtC6FindMy11FMRecipient_isMyself] = a7;
    if ((a6 & 1) != 0)
    {
      if (qword_1005D1E80 != -1)
        swift_once(&qword_1005D1E80, sub_100008974);
      v61 = qword_1005F5980 == 1;
      v62 = (void *)objc_opt_self(CNAvatarImageRenderingScope);
      v63 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v63, "scale");
      v65 = v64;

      v66 = objc_msgSend(v62, "scopeWithPointSize:scale:rightToLeft:style:", v61, 0, 128.0, 128.0, v65);
      if (qword_1005D1C60 != -1)
        swift_once(&qword_1005D1C60, sub_100185034);
      v67 = (void *)qword_1005D90D0;
      v68 = sub_100053F2C(&qword_1005D2F10);
      v69 = swift_allocObject(v68, 40, 7);
      *(_OWORD *)(v69 + 16) = xmmword_100481B00;
      *(_QWORD *)(v69 + 32) = a5;
      v79 = v69;
      specialized Array._endMutation()(v69);
      sub_100187E20();
      v70 = a5;
      isa = Array._bridgeToObjectiveC()().super.isa;
      v72 = objc_msgSend(v67, "avatarImageForContacts:scope:", isa, v66, swift_bridgeObjectRelease(v79).n128_f64[0]);

      swift_unknownObjectRelease(v66);
      a5 = *(void **)&v19[OBJC_IVAR____TtC6FindMy11FMRecipient_monogram];
      *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy11FMRecipient_monogram] = v72;
    }
    else
    {

    }
    return (unint64_t)v19;
  }
  v78 = a5;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v47 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v81._countAndFlagsBits = 0xD00000000000002FLL;
  v81._object = (void *)0x80000001004B08D0;
  v48._object = (void *)0x80000001004B08B0;
  v48._countAndFlagsBits = 0xD00000000000001DLL;
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v47, v49, v81);

  v51 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  result = swift_allocObject(v51, 112, 7);
  *(_OWORD *)(result + 16) = xmmword_100481730;
  v53 = v28[1];
  if (v53)
  {
    v54 = (_QWORD *)result;
    v55 = *v28;
    *(_QWORD *)(result + 56) = &type metadata for String;
    result = sub_100071E88();
    v54[8] = result;
    v54[4] = v55;
    v54[5] = v53;
    v56 = v34[1];
    if (v56)
    {
      v57 = *v34;
      v54[12] = &type metadata for String;
      v54[13] = result;
      v54[9] = v57;
      v54[10] = v56;
      swift_bridgeObjectRetain(v53);
      swift_bridgeObjectRetain(v56);
      v44 = String.init(format:_:)(v50._countAndFlagsBits, v50._object, v54);
      v46 = v58;
      swift_bridgeObjectRelease(v50._object);
      a5 = v78;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100186448()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  uint64_t v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  void *v13;
  uint64_t v14;
  Swift::String v15;
  Swift::String v16;
  unint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  unint64_t v20;

  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(0xE000000000000000);
  v19 = 60;
  v20 = 0xE100000000000000;
  ObjectType = swift_getObjectType(v0);
  v1 = sub_100053F2C(&qword_1005D9168);
  v2._countAndFlagsBits = String.init<A>(describing:)(&ObjectType, v1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 0x656C646E6168202CLL;
  v4._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v4);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy11FMRecipient_handle);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy11FMRecipient_handle + 8);
  swift_bridgeObjectRetain(v6);
  v7._countAndFlagsBits = v5;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v6);
  v8._countAndFlagsBits = 2564140;
  v8._object = (void *)0xE300000000000000;
  String.append(_:)(v8);
  v9 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy11FMRecipient_givenName + 8);
  if (v9)
  {
    v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy11FMRecipient_givenName);
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy11FMRecipient_givenName + 8));
    v11._countAndFlagsBits = v10;
    v11._object = v9;
    String.append(_:)(v11);
    swift_bridgeObjectRelease(v9);
    v12._countAndFlagsBits = 32;
    v12._object = (void *)0xE100000000000000;
    String.append(_:)(v12);
    v13 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy11FMRecipient_familyName + 8);
    if (v13)
    {
      v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy11FMRecipient_familyName);
      swift_bridgeObjectRetain(v13);
      v15._countAndFlagsBits = v14;
      v15._object = v13;
      String.append(_:)(v15);
      swift_bridgeObjectRelease(v13);
      v16._countAndFlagsBits = 15911;
      v16._object = (void *)0xE200000000000000;
      String.append(_:)(v16);
      v17 = v20;
      String.init(format:_:)(v19, v20, _swiftEmptyArrayStorage);
      swift_bridgeObjectRelease(v17);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_100186628()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMRecipient();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMRecipient()
{
  return objc_opt_self(_TtC6FindMy11FMRecipient);
}

uint64_t sub_100186718@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  id v5;
  uint64_t result;

  v5 = objc_allocWithZone((Class)type metadata accessor for FMRecipient());
  result = sub_1001858C8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_100186768(_QWORD *a1)
{
  sub_1001855C0(a1);
}

unint64_t sub_100186788()
{
  unint64_t result;

  result = qword_1005D9148;
  if (!qword_1005D9148)
  {
    result = swift_getWitnessTable(&unk_100486518, &type metadata for FMRecipient.FMRecipientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D9148);
  }
  return result;
}

uint64_t sub_1001867CC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10004058C(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100186820(unint64_t a1, uint64_t a2, _QWORD *a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t i;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  Swift::String v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  NSString v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSString v48;
  NSString v49;
  __n128 v50;
  CFAllocatorRef v51;
  uint64_t String;
  void *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  BOOL v58;
  void *v59;
  id v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  Swift::String v70;
  void *v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSString v78;
  id v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSString v87;
  NSString v88;
  __n128 v89;
  CFAllocatorRef v90;
  void *v91;
  id v92;
  uint64_t v93;
  void *v94;
  unint64_t v95;
  unint64_t v96;
  BOOL v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t *v103;
  id v104;
  uint64_t v105;
  unint64_t v106;
  __n128 v107;
  void *v108;
  NSString v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  unint64_t v116;
  __n128 v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t, __n128);
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  __n128 v124;
  unint64_t v125;
  uint64_t v126;
  id v127;
  void *v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  void *v132;
  NSString v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  void *v139;
  id v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  id v146;
  unint64_t v147;
  id v148;
  void *v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t *v155;
  uint64_t v156;
  __n128 v157;
  void *v158;
  NSString v159;
  unsigned int v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  unint64_t v167;
  __n128 v168;
  uint64_t (*v169)(uint64_t, uint64_t, __n128);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  __n128 v175;
  unint64_t v176;
  unint64_t v177;
  uint64_t v178;
  unint64_t v179;
  id v180;
  void *v181;
  unint64_t v182;
  unint64_t v183;
  void *v184;
  NSString v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void *v190;
  id v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  unint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  char *v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  CFAllocatorRef v209;
  uint64_t v210;
  uint64_t v211;
  int v212;
  unint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  id v217;
  unint64_t v218;
  char *v219;
  uint64_t v220;
  id v221;
  unint64_t v222;
  unint64_t v223;
  _QWORD *v224;
  void (*v225)(char *, uint64_t);
  uint64_t v226;
  id v227;
  char *v228;
  unint64_t v229;
  _QWORD *v230;
  uint64_t v231;
  uint64_t v232;
  _QWORD *v233;
  uint64_t v234;
  unint64_t v235;
  _QWORD *v236;
  unint64_t v237;
  unint64_t v238;
  uint64_t v239;
  _QWORD v240[5];

  v212 = a4;
  v204 = a2;
  v231 = type metadata accessor for CharacterSet(0);
  v226 = *(_QWORD *)(v231 - 8);
  v6 = __chkstk_darwin(v231);
  v228 = (char *)&v197 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v219 = (char *)&v197 - v9;
  __chkstk_darwin(v8);
  v205 = (char *)&v197 - v10;
  v238 = (unint64_t)_swiftEmptyArrayStorage;
  type metadata accessor for FMContactsUtilities();
  sub_1003BF95C(&v239);
  sub_100187DD8((uint64_t)&v239, (uint64_t)v240);
  v11 = (void *)v240[0];
  v201 = a1;
  if (v240[0])
  {
    v12 = v240[4];
    swift_bridgeObjectRelease(v240[2]);
    swift_bridgeObjectRelease(v12);
    v13 = sub_1003C0A54(v11);
    v14 = v13;
    v15 = v13[2];
    if (v15)
    {
      v233 = a3;
      v236 = _swiftEmptyArrayStorage;
      sub_100111E28(0, v15, 0);
      v16 = v236;
      v17 = v14 + 5;
      do
      {
        v19 = *(v17 - 1);
        v18 = *v17;
        v236 = v16;
        v20 = v16[2];
        v21 = v16[3];
        swift_bridgeObjectRetain(v18);
        if (v20 >= v21 >> 1)
        {
          sub_100111E28(v21 > 1, v20 + 1, 1);
          v16 = v236;
        }
        v17 += 6;
        v16[2] = v20 + 1;
        v22 = &v16[2 * v20];
        v22[4] = v19;
        v22[5] = v18;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease(v14);

      a1 = v201;
      a3 = v233;
    }
    else
    {
      swift_bridgeObjectRelease(v13);

      v16 = _swiftEmptyArrayStorage;
    }
    if (a3)
      v23 = a3;
    else
      v23 = _swiftEmptyArrayStorage;
  }
  else
  {
    if (a3)
      v23 = a3;
    else
      v23 = _swiftEmptyArrayStorage;
    v16 = _swiftEmptyArrayStorage;
  }
  v236 = v23;
  swift_bridgeObjectRetain(a3);
  sub_1003E55F0((uint64_t)v16);
  v224 = v236;
  if (a1 >> 62)
    goto LABEL_166;
  v24 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (i = v24; i; i = _CocoaArrayWrapper.endIndex.getter(a1))
  {
    a1 = 0;
    v233 = 0;
    v203 = v201 & 0xC000000000000001;
    v199 = v201 & 0xFFFFFFFFFFFFFF8;
    v198 = v201 + 32;
    v200 = v204 + 32;
    v209 = kCFAllocatorDefault;
    v213 = v224 + 5;
    v202 = i;
    while (1)
    {
      if (v203)
      {
        v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v201);
      }
      else
      {
        if (a1 >= *(_QWORD *)(v199 + 16))
          goto LABEL_164;
        v26 = *(id *)(v198 + 8 * a1);
      }
      v217 = v26;
      if (__OFADD__(a1, 1))
        goto LABEL_162;
      v206 = a1 + 1;
      v27 = v217;
      v28 = objc_msgSend(v217, "phoneNumbers");
      v29 = sub_100053F2C((uint64_t *)&unk_1005DF490);
      v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

      v31 = objc_msgSend(v27, "emailAddresses");
      v216 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v29);

      if (!v204)
      {
        v210 = 0;
        v44 = 0;
        v211 = 0;
        v34 = 0;
        goto LABEL_38;
      }
      if (a1 >= *(_QWORD *)(v204 + 16))
        goto LABEL_163;
      v32 = (uint64_t *)(v200 + 16 * a1);
      v33 = *v32;
      v34 = v32[1];
      swift_bridgeObjectRetain(v34);
      v35 = v205;
      static CharacterSet.decimalDigits.getter(v36);
      v37._countAndFlagsBits = 0x2D232A29282BLL;
      v37._object = (void *)0xE600000000000000;
      CharacterSet.insert(charactersIn:)(v37);
      v236 = (_QWORD *)v33;
      v237 = v34;
      a1 = sub_1000517B8();
      v38 = StringProtocol.rangeOfCharacter(from:options:range:)(v35, 0, 0, 0, 1, &type metadata for String, a1);
      v211 = v33;
      if ((v39 & 1) != 0)
      {
        swift_bridgeObjectRetain(v34);
        v44 = v34;
      }
      else
      {
        v236 = (_QWORD *)v33;
        v237 = v34;
        a1 = String.Index.utf16Offset<A>(in:)(&v236, v38, &type metadata for String, a1);
        v40 = String.count.getter(v33, v34);
        v41 = v40 - a1;
        if (__OFSUB__(v40, a1))
          goto LABEL_165;
        v42 = String._bridgeToObjectiveC()();
        a1 = (unint64_t)objc_msgSend(v42, "substringWithRange:", a1, v41);

        v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
        v44 = v43;

      }
      v45 = HIBYTE(v44) & 0xF;
      v210 = v33;
      if ((v44 & 0x2000000000000000) == 0)
        v45 = v33 & 0xFFFFFFFFFFFFLL;
      if (!v45)
        goto LABEL_37;
      sub_1000F2A78();
      v47 = v46;
      v48 = String._bridgeToObjectiveC()();
      v49 = String._bridgeToObjectiveC()();
      v50 = swift_bridgeObjectRelease(v47);
      v51 = v209;
      a1 = CFPhoneNumberCreate(v209, v48, v49, v50);

      if (!a1)
        goto LABEL_37;
      a1 = (unint64_t)(id)a1;
      String = CFPhoneNumberCreateString(v51, a1, 7);
      if (String)
      {
        v53 = (void *)String;
        swift_bridgeObjectRelease(v44);
        v210 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
        v44 = v54;

LABEL_37:
        (*(void (**)(char *, uint64_t))(v226 + 8))(v205, v231);
        goto LABEL_38;
      }
      (*(void (**)(char *, uint64_t))(v226 + 8))(v205, v231);

LABEL_38:
      v214 = v30;
      if ((unint64_t)v30 >> 62)
      {
        a1 = v30 < 0 ? v30 : v30 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v30);
        v55 = _CocoaArrayWrapper.endIndex.getter(a1);
        swift_bridgeObjectRelease(v30);
      }
      else
      {
        v55 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v222 = v34;
      if (v55)
        break;
      swift_bridgeObjectRelease(v214);
      v144 = v44;
LABEL_107:
      swift_bridgeObjectRelease(v144);
      v145 = v216;
      if ((unint64_t)v216 >> 62)
      {
        if (v216 < 0)
          a1 = v216;
        else
          a1 = v216 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v216);
        v146 = (id)_CocoaArrayWrapper.endIndex.getter(a1);
        swift_bridgeObjectRelease(v145);
        if (!v146)
          goto LABEL_154;
LABEL_109:
        v147 = 0;
        v225 = (void (*)(char *, uint64_t))(v216 & 0xC000000000000001);
        v220 = v216 & 0xFFFFFFFFFFFFFF8;
        v218 = v216 + 32;
        v221 = v146;
        while (2)
        {
          if (v225)
          {
            v148 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v147, v216);
          }
          else
          {
            if (v147 >= *(_QWORD *)(v220 + 16))
              goto LABEL_160;
            v148 = *(id *)(v218 + 8 * v147);
          }
          a1 = (unint64_t)v148;
          v58 = __OFADD__(v147++, 1);
          if (v58)
            goto LABEL_158;
          v149 = v148;
          a1 = (unint64_t)objc_msgSend(v148, "value");
          v150 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          v152 = v151;

          v153 = HIBYTE(v152) & 0xF;
          v232 = v150;
          if ((v152 & 0x2000000000000000) == 0)
            v153 = v150 & 0xFFFFFFFFFFFFLL;
          if (v153)
          {
            v227 = v149;
            v154 = v224[2];
            if (v154)
            {
              v223 = v147;
              swift_bridgeObjectRetain(v224);
              v155 = v213;
              do
              {
                v156 = *(v155 - 1);
                a1 = *v155;
                v157 = swift_bridgeObjectRetain(*v155);
                v158 = (void *)static String.emailPredicate.getter(v157);
                v159 = String._bridgeToObjectiveC()();
                v160 = objc_msgSend(v158, "evaluateWithObject:", v159);

                if (v160)
                {
                  v236 = (_QWORD *)v156;
                  v237 = a1;
                  v234 = v232;
                  v235 = v152;
                  v162 = sub_1000517B8();
                  v163 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v234, &type metadata for String, &type metadata for String, v162, v162);
                  swift_bridgeObjectRelease(a1);
                  if (!v163)
                    goto LABEL_110;
                }
                else
                {
                  v164 = (uint64_t)v228;
                  static CharacterSet.decimalDigits.getter(v161);
                  CharacterSet.insert(_:)(43);
                  swift_bridgeObjectRetain(a1);
                  v165 = v233;
                  v166 = sub_100373FE0(v156, a1, v164);
                  v229 = v167;
                  v230 = (_QWORD *)v166;
                  v168 = swift_bridgeObjectRelease(a1);
                  v169 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v226 + 8);
                  v170 = v231;
                  v171 = v169(v164, v231, v168);
                  static CharacterSet.decimalDigits.getter(v171);
                  CharacterSet.insert(_:)(43);
                  swift_bridgeObjectRetain(v152);
                  v172 = sub_100373FE0(v232, v152, v164);
                  v174 = v173;
                  v233 = v165;
                  v175 = swift_bridgeObjectRelease(v152);
                  v169(v164, v170, v175);
                  v176 = v229;
                  v236 = v230;
                  v237 = v229;
                  v234 = v172;
                  v235 = v174;
                  v177 = sub_1000517B8();
                  v178 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v234, &type metadata for String, &type metadata for String, v177, v177);
                  swift_bridgeObjectRelease(a1);
                  swift_bridgeObjectRelease(v176);
                  swift_bridgeObjectRelease(v174);
                  if (!v178)
                  {
LABEL_110:

                    swift_bridgeObjectRelease(v152);
                    swift_bridgeObjectRelease(v224);
                    v34 = v222;
                    v146 = v221;
                    v147 = v223;
                    goto LABEL_111;
                  }
                }
                v155 += 2;
                --v154;
              }
              while (v154);
              swift_bridgeObjectRelease(v224);
              v146 = v221;
              v147 = v223;
            }
            a1 = (unint64_t)v227;
            v34 = v222;
            if (!v222
              || v211 == v232 && v222 == v152
              || (_stringCompareWithSmolCheck(_:_:expecting:)(v211, v222, v232, v152, 0) & 1) != 0)
            {
              v179 = v147;
              v180 = objc_msgSend((id)a1, "label");
              if (v180)
              {
                v181 = v180;
                static String._unconditionallyBridgeFromObjectiveC(_:)(v180);
                v183 = v182;

              }
              else
              {
                v183 = 0xE000000000000000;
              }
              v184 = (void *)objc_opt_self(CNLabeledValue);
              v185 = String._bridgeToObjectiveC()();
              v186 = objc_msgSend(v184, "localizedStringForLabel:", v185, swift_bridgeObjectRelease(v183).n128_f64[0]);

              v187 = static String._unconditionallyBridgeFromObjectiveC(_:)(v186);
              v189 = v188;

              objc_allocWithZone((Class)type metadata accessor for FMRecipient());
              a1 = (unint64_t)v217;
              v190 = (void *)sub_100185E2C(v232, v152, v187, v189, (void *)a1, v212 & 1, 2);
              if (v190)
              {
                v191 = v190;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v191);
                v193 = *(_QWORD *)((v238 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v192 = *(_QWORD *)((v238 & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v193 >= v192 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v192 > 1, v193 + 1, 1);
                v194 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v193, v191);
                specialized Array._endMutation()(v194);

                if (v34)
                {

                  goto LABEL_155;
                }
                v147 = v179;
              }
              else
              {

                v147 = v179;
              }
              goto LABEL_111;
            }

          }
          else
          {

          }
          swift_bridgeObjectRelease(v152);
LABEL_111:
          if ((id)v147 == v146)
            goto LABEL_154;
          continue;
        }
      }
      v146 = *(id *)((v216 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v146)
        goto LABEL_109;
LABEL_154:

LABEL_155:
      swift_bridgeObjectRelease(v216);
      swift_bridgeObjectRelease(v34);
      a1 = v206;
      if (v206 == v202)
        goto LABEL_156;
    }
    a1 = 0;
    v218 = v214 & 0xC000000000000001;
    v208 = v214 & 0xFFFFFFFFFFFFFF8;
    v207 = v214 + 32;
    v215 = v55;
    v220 = v44;
    while (1)
    {
      if (v218)
      {
        v57 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v214);
        v58 = __OFADD__(a1++, 1);
        if (v58)
          break;
        goto LABEL_50;
      }
      if (a1 >= *(_QWORD *)(v208 + 16))
        goto LABEL_159;
      v57 = *(id *)(v207 + 8 * a1);
      v58 = __OFADD__(a1++, 1);
      if (v58)
        break;
LABEL_50:
      v223 = a1;
      v59 = v57;
      v60 = objc_msgSend(v57, "value");
      v61 = objc_msgSend(v60, "stringValue");

      v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
      v64 = v63;

      v66 = v64 & 0x2000000000000000;
      v67 = HIBYTE(v64) & 0xF;
      a1 = v62 & 0xFFFFFFFFFFFFLL;
      if ((v64 & 0x2000000000000000) != 0)
        v68 = HIBYTE(v64) & 0xF;
      else
        v68 = v62 & 0xFFFFFFFFFFFFLL;
      if (!v68)
      {

        swift_bridgeObjectRelease(v64);
        v34 = v222;
LABEL_103:
        v56 = v220;
        goto LABEL_43;
      }
      v221 = v59;
      v69 = v219;
      static CharacterSet.decimalDigits.getter(v65);
      v70._countAndFlagsBits = 0x2D232A29282BLL;
      v70._object = (void *)0xE600000000000000;
      CharacterSet.insert(charactersIn:)(v70);
      v236 = (_QWORD *)v62;
      v237 = v64;
      v71 = (void *)sub_1000517B8();
      v72 = StringProtocol.rangeOfCharacter(from:options:range:)(v69, 0, 0, 0, 1, &type metadata for String, v71);
      v227 = v71;
      if ((v73 & 1) != 0)
      {
        swift_bridgeObjectRetain(v64);
        v80 = v62;
        v82 = v64;
      }
      else
      {
        v236 = (_QWORD *)v62;
        v237 = v64;
        v74 = String.Index.utf16Offset<A>(in:)(&v236, v72, &type metadata for String, v71);
        v75 = String.count.getter(v62, v64);
        v76 = v75 - v74;
        if (__OFSUB__(v75, v74))
          goto LABEL_161;
        v77 = v62;
        v78 = String._bridgeToObjectiveC()();
        v79 = objc_msgSend(v78, "substringWithRange:", v74, v76);

        v62 = v77;
        v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
        v82 = v81;

        v66 = v82 & 0x2000000000000000;
        v67 = HIBYTE(v82) & 0xF;
        a1 = v80 & 0xFFFFFFFFFFFFLL;
      }
      if (v66)
        v83 = v67;
      else
        v83 = a1;
      if (v83)
      {
        v230 = (_QWORD *)v80;
        sub_1000F2A78();
        v84 = v62;
        v86 = v85;
        v232 = v84;
        v87 = String._bridgeToObjectiveC()();
        v88 = String._bridgeToObjectiveC()();
        v89 = swift_bridgeObjectRelease(v86);
        v90 = v209;
        v91 = (void *)CFPhoneNumberCreate(v209, v87, v88, v89);

        if (v91)
        {
          v92 = v91;
          v93 = CFPhoneNumberCreateString(v90, v92, 7);
          v80 = (uint64_t)v230;
          if (v93)
          {
            v94 = (void *)v93;
            swift_bridgeObjectRelease(v82);
            v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v94);
            v82 = v95;

            v225 = *(void (**)(char *, uint64_t))(v226 + 8);
            v225(v219, v231);
            v66 = v82 & 0x2000000000000000;
            v67 = HIBYTE(v82) & 0xF;
            a1 = v80 & 0xFFFFFFFFFFFFLL;
          }
          else
          {
            v225 = *(void (**)(char *, uint64_t))(v226 + 8);
            v225(v219, v231);

          }
          v55 = v215;
          v62 = v232;
        }
        else
        {
          v225 = *(void (**)(char *, uint64_t))(v226 + 8);
          v225(v219, v231);
          v55 = v215;
          v62 = v232;
          v80 = (uint64_t)v230;
        }
      }
      else
      {
        v225 = *(void (**)(char *, uint64_t))(v226 + 8);
        v225(v219, v231);
      }
      if (v66)
        v96 = v67;
      else
        v96 = a1;
      v97 = v96 == 0;
      if (v96)
        v98 = v64;
      else
        v98 = v82;
      if (v96)
        v99 = v80;
      else
        v99 = v62;
      v232 = v99;
      if (v97)
        v100 = v64;
      else
        v100 = v82;
      v101 = swift_bridgeObjectRelease(v98).n128_u64[0];
      v102 = v224[2];
      if (v102)
      {
        swift_bridgeObjectRetain(v224);
        v103 = v213;
        v104 = v227;
        while (1)
        {
          v105 = *(v103 - 1);
          v106 = *v103;
          swift_bridgeObjectRetain(*v103);
          v107 = swift_bridgeObjectRetain(v100);
          v108 = (void *)static String.emailPredicate.getter(v107);
          v109 = String._bridgeToObjectiveC()();
          v110 = objc_msgSend(v108, "evaluateWithObject:", v109);

          if (v110)
          {
            v236 = (_QWORD *)v105;
            v237 = v106;
            v234 = v232;
            v235 = v100;
            v112 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v234, &type metadata for String, &type metadata for String, v104, v104);
            swift_bridgeObjectRelease(v106);
            swift_bridgeObjectRelease(v100);
            if (!v112)
              goto LABEL_42;
          }
          else
          {
            v113 = (uint64_t)v228;
            static CharacterSet.decimalDigits.getter(v111);
            CharacterSet.insert(_:)(43);
            swift_bridgeObjectRetain(v106);
            v114 = v233;
            v115 = sub_100373FE0(v105, v106, v113);
            v229 = v116;
            v230 = (_QWORD *)v115;
            v117 = swift_bridgeObjectRelease(v106);
            v118 = v231;
            v119 = (void (*)(uint64_t, uint64_t, __n128))v225;
            v120 = ((uint64_t (*)(uint64_t, uint64_t, __n128))v225)(v113, v231, v117);
            static CharacterSet.decimalDigits.getter(v120);
            CharacterSet.insert(_:)(43);
            swift_bridgeObjectRetain(v100);
            v121 = sub_100373FE0(v232, v100, v113);
            v123 = v122;
            v233 = v114;
            v124 = swift_bridgeObjectRelease(v100);
            v119(v113, v118, v124);
            v125 = v229;
            v236 = v230;
            v237 = v229;
            v234 = v121;
            v235 = v123;
            v104 = v227;
            v126 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v234, &type metadata for String, &type metadata for String, v227, v227);
            swift_bridgeObjectRelease(v106);
            swift_bridgeObjectRelease(v100);
            swift_bridgeObjectRelease(v125);
            swift_bridgeObjectRelease(v123);
            if (!v126)
            {
LABEL_42:
              swift_bridgeObjectRelease(v100);

              swift_bridgeObjectRelease(v224);
              v34 = v222;
              v56 = v220;
              v55 = v215;
              goto LABEL_43;
            }
          }
          v103 += 2;
          if (!--v102)
          {
            v101 = swift_bridgeObjectRelease(v224).n128_u64[0];
            v55 = v215;
            break;
          }
        }
      }
      v34 = v222;
      v56 = v220;
      if (v220
        && (v210 != v232 || v220 != v100)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(v210, v220, v232, v100, 0) & 1) == 0)
      {
        swift_bridgeObjectRelease(v100);

        goto LABEL_43;
      }
      v127 = objc_msgSend(v221, "label", *(double *)&v101);
      if (v127)
      {
        v128 = v127;
        v129 = v100;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v127);
        v131 = v130;

      }
      else
      {
        v129 = v100;
        v131 = 0xE000000000000000;
      }
      v132 = (void *)objc_opt_self(CNLabeledValue);
      v133 = String._bridgeToObjectiveC()();
      v134 = objc_msgSend(v132, "localizedStringForLabel:", v133, swift_bridgeObjectRelease(v131).n128_f64[0]);

      v135 = static String._unconditionallyBridgeFromObjectiveC(_:)(v134);
      v137 = v136;

      a1 = (unint64_t)objc_allocWithZone((Class)type metadata accessor for FMRecipient());
      swift_bridgeObjectRetain(v129);
      v138 = v217;
      v139 = (void *)sub_100185E2C(v232, v129, v135, v137, v138, v212 & 1, 2);
      if (!v139)
      {
        swift_bridgeObjectRelease(v129);

        goto LABEL_103;
      }
      v140 = v139;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v140);
      v142 = *(_QWORD *)((v238 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v141 = *(_QWORD *)((v238 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v142 >= v141 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v141 > 1, v142 + 1, 1);
      v143 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v142, v140);
      specialized Array._endMutation()(v143);

      swift_bridgeObjectRelease(v129);
      v56 = v220;
      if (v220)
      {
LABEL_105:
        swift_bridgeObjectRelease(v56);
        v144 = v214;
        goto LABEL_107;
      }
LABEL_43:
      a1 = v223;
      if (v223 == v55)
        goto LABEL_105;
    }
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    v196 = a1;
    if ((a1 & 0x8000000000000000) == 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    swift_bridgeObjectRetain(v196);
  }
LABEL_156:
  swift_bridgeObjectRelease(v224);
  swift_bridgeObjectRelease(v201);
  return v238;
}

id sub_100187C18(uint64_t a1)
{
  _BYTE *v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  objc_super v23;

  v3 = &v1[OBJC_IVAR____TtC6FindMy11FMRecipient_label];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v1[OBJC_IVAR____TtC6FindMy11FMRecipient_givenName];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v1[OBJC_IVAR____TtC6FindMy11FMRecipient_familyName];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v1[OBJC_IVAR____TtC6FindMy11FMRecipient_nickname];
  *v6 = 0;
  v6[1] = 0;
  v7 = &v1[OBJC_IVAR____TtC6FindMy11FMRecipient_fullName];
  *v7 = 0;
  v7[1] = 0;
  v22 = OBJC_IVAR____TtC6FindMy11FMRecipient_isMyself;
  v1[OBJC_IVAR____TtC6FindMy11FMRecipient_isMyself] = 2;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy11FMRecipient_monogram] = 0;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy11FMRecipient_handle + 8);
  v9 = &v1[OBJC_IVAR____TtC6FindMy11FMRecipient_handle];
  *v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy11FMRecipient_handle);
  v9[1] = v8;
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy11FMRecipient_label + 8);
  v11 = v3[1];
  *v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy11FMRecipient_label);
  v3[1] = v10;
  v12 = v1;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy11FMRecipient_givenName + 8);
  v14 = v4[1];
  *v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy11FMRecipient_givenName);
  v4[1] = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy11FMRecipient_familyName + 8);
  v16 = v5[1];
  *v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy11FMRecipient_familyName);
  v5[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy11FMRecipient_nickname + 8);
  v18 = v6[1];
  *v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy11FMRecipient_nickname);
  v6[1] = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy11FMRecipient_fullName + 8);
  v20 = v7[1];
  *v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy11FMRecipient_fullName);
  v7[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v1[v22] = *(_BYTE *)(a1 + OBJC_IVAR____TtC6FindMy11FMRecipient_isMyself);

  v23.receiver = v12;
  v23.super_class = (Class)type metadata accessor for FMRecipient();
  return objc_msgSendSuper2(&v23, "init");
}

uint64_t sub_100187DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D9170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100187E20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D81D0;
  if (!qword_1005D81D0)
  {
    v1 = objc_opt_self(CNContact);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005D81D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMRecipient.FMRecipientCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_100187EA8 + 4 * byte_10048639A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_100187EDC + 4 * byte_100486395[v4]))();
}

uint64_t sub_100187EDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100187EE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100187EECLL);
  return result;
}

uint64_t sub_100187EF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100187F00);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_100187F04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100187F0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMRecipient.FMRecipientCodingKeys()
{
  return &type metadata for FMRecipient.FMRecipientCodingKeys;
}

unint64_t sub_100187F2C()
{
  unint64_t result;

  result = qword_1005D9178;
  if (!qword_1005D9178)
  {
    result = swift_getWitnessTable(&unk_1004864F0, &type metadata for FMRecipient.FMRecipientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D9178);
  }
  return result;
}

unint64_t sub_100187F74()
{
  unint64_t result;

  result = qword_1005D9180;
  if (!qword_1005D9180)
  {
    result = swift_getWitnessTable(&unk_100486428, &type metadata for FMRecipient.FMRecipientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D9180);
  }
  return result;
}

unint64_t sub_100187FBC()
{
  unint64_t result;

  result = qword_1005D9188;
  if (!qword_1005D9188)
  {
    result = swift_getWitnessTable(&unk_100486450, &type metadata for FMRecipient.FMRecipientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D9188);
  }
  return result;
}

unint64_t sub_100188000(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10053F900, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7)
    return 7;
  else
    return v3;
}

uint64_t sub_100188048()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  sysdir_search_path_enumeration_state started;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v0 = type metadata accessor for FMSystemDirectoryUtilities();
  v1 = swift_allocObject(v0, 32, 7);
  v2 = (char *)swift_slowAlloc(1024, -1);
  started = sysdir_start_search_path_enumeration_private(5, 16);
  sysdir_get_next_search_path_enumeration(started, v2);
  v4 = String.init(cString:)(v2);
  v6 = v5;
  result = swift_slowDealloc(v2, -1, -1);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v6;
  qword_1005F5058 = v1;
  return result;
}

uint64_t sub_1001880CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for FMSystemDirectoryUtilities()
{
  return objc_opt_self(_TtC6FindMy26FMSystemDirectoryUtilities);
}

uint64_t sub_100188110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  double v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  id v39;
  id v40;
  double v41;
  double v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  id v54;
  double v55;
  double v56;
  id v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t (*v61)(char *, uint64_t);
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  double v68;
  double v69;
  id v70;
  uint64_t result;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t);
  void (*v93)(char *);

  v80 = a3;
  v90 = a2;
  v4 = type metadata accessor for FMIPItemRole(0);
  v5 = *(_QWORD *)(v4 - 8);
  v83 = v4;
  __chkstk_darwin(v4);
  v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMIPItemImageSize(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v88 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v72 - v12;
  v14 = sub_100053F2C(&qword_1005D2C18);
  v15 = *(_QWORD *)(type metadata accessor for FMIPItemImageCacheRequest(0) - 8);
  v85 = *(_QWORD *)(v15 + 72);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = swift_allocObject(v14, v17 + 4 * v85, v16 | 7);
  v79 = v18;
  *(_OWORD *)(v18 + 16) = xmmword_1004865A0;
  v91 = v18 + v17;
  LODWORD(v78) = enum case for FMIPItemImageSize.list(_:);
  v19 = v9;
  v86 = v9;
  v93 = *(void (**)(char *))(v9 + 104);
  v81 = v8;
  v93(v13);
  v84 = (id)objc_opt_self(UIColor);
  v20 = objc_msgSend(v84, "systemBackgroundColor");
  v87 = a1;
  v21 = FMIPItem.role.getter(v20);
  v77 = FMIPItemRole.emoji.getter(v21);
  v75 = v22;
  v89 = *(void (**)(char *, uint64_t))(v5 + 8);
  v89(v7, v4);
  v92 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v23 = v88;
  v92(v88, v13, v8);
  v82 = (id)objc_opt_self(UIScreen);
  v24 = objc_msgSend(v82, "mainScreen");
  objc_msgSend(v24, "scale");
  v26 = v25;

  v27 = objc_msgSend(v20, "CGColor");
  v29 = *(_QWORD *)(v90 + qword_1005D9250 + 8);
  v90 = *(_QWORD *)(v90 + qword_1005D9250);
  v28 = v90;
  v76 = v29;
  swift_bridgeObjectRetain(v29);
  v30 = v91;
  FMIPItemImageCacheRequest.init(emoji:size:scale:backgroundColor:osVersion:)(v77, v75, v23, v27, v28, v29, v26);

  v86 = *(_QWORD *)(v86 + 8);
  v31 = v81;
  ((void (*)(char *, uint64_t))v86)(v13, v81);
  v32 = v85;
  v77 = v30 + v85;
  v74 = v13;
  ((void (*)(char *, _QWORD, uint64_t))v93)(v13, v78, v31);
  v33 = v84;
  v34 = objc_msgSend(v84, "systemGray3Color");
  v35 = FMIPItem.role.getter(v34);
  v78 = FMIPItemRole.emoji.getter(v35);
  v75 = v36;
  v37 = v83;
  v89(v7, v83);
  v38 = v88;
  v92(v88, v13, v31);
  v39 = v82;
  v40 = objc_msgSend(v82, "mainScreen");
  objc_msgSend(v40, "scale");
  v42 = v41;

  v43 = objc_msgSend(v34, "CGColor");
  v44 = v76;
  swift_bridgeObjectRetain(v76);
  v45 = v44;
  FMIPItemImageCacheRequest.init(emoji:size:scale:backgroundColor:osVersion:)(v78, v75, v38, v43, v90, v44, v42);

  v46 = v74;
  v47 = v81;
  ((void (*)(char *, uint64_t))v86)(v74, v81);
  v78 = 2 * v32;
  v75 = v91 + 2 * v32;
  LODWORD(v77) = enum case for FMIPItemImageSize.infobox(_:);
  v48 = v46;
  v93(v46);
  v49 = objc_msgSend(v33, "systemBackgroundColor");
  v50 = FMIPItem.role.getter(v49);
  v51 = FMIPItemRole.emoji.getter(v50);
  v73 = v52;
  v89(v7, v37);
  v53 = v88;
  v92(v88, v48, v47);
  v54 = objc_msgSend(v39, "mainScreen");
  objc_msgSend(v54, "scale");
  v56 = v55;

  v57 = objc_msgSend(v49, "CGColor");
  v58 = v45;
  swift_bridgeObjectRetain(v45);
  FMIPItemImageCacheRequest.init(emoji:size:scale:backgroundColor:osVersion:)(v51, v73, v53, v57, v90, v45, v56);

  v59 = v48;
  v60 = v48;
  v61 = (uint64_t (*)(char *, uint64_t))v86;
  ((void (*)(char *, uint64_t))v86)(v60, v47);
  v91 += v78 + v85;
  ((void (*)(char *, _QWORD, uint64_t))v93)(v59, v77, v47);
  v62 = objc_msgSend(v84, "systemGray3Color");
  v63 = FMIPItem.role.getter(v62);
  v64 = FMIPItemRole.emoji.getter(v63);
  v66 = v65;
  v89(v7, v83);
  v92(v53, v59, v47);
  v67 = objc_msgSend(v82, "mainScreen");
  objc_msgSend(v67, "scale");
  v69 = v68;

  v70 = objc_msgSend(v62, "CGColor");
  swift_bridgeObjectRetain(v58);
  FMIPItemImageCacheRequest.init(emoji:size:scale:backgroundColor:osVersion:)(v64, v66, v53, v70, v90, v58, v69);

  result = v61(v59, v47);
  *v80 = v79;
  return result;
}

void sub_100188734(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  char **v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  double v21;
  double v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];

  v26[1] = a3;
  v5 = type metadata accessor for FMIPItemImageSize(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPItemRole(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (void *)objc_opt_self(UIColor);
  v14 = &selRef_systemGray3Color;
  if ((a2 & 1) == 0)
    v14 = &selRef_systemBackgroundColor;
  v15 = objc_msgSend(v13, *v14);
  v16 = FMIPItem.role.getter();
  v17 = FMIPItemRole.emoji.getter(v16);
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v20 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v20, "scale");
  v22 = v21;

  v23 = objc_msgSend(v15, "CGColor");
  v24 = *(_QWORD *)(v26[0] + qword_1005D9250);
  v25 = *(_QWORD *)(v26[0] + qword_1005D9250 + 8);
  swift_bridgeObjectRetain(v25);
  FMIPItemImageCacheRequest.init(emoji:size:scale:backgroundColor:osVersion:)(v17, v19, v8, v23, v24, v25, v22);

}

uint64_t sub_100188908()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1005D9250 + 8));
  return sub_10005E190(v0 + qword_1005D9258);
}

uint64_t sub_100188938()
{
  uint64_t v0;

  v0 = FMIPItemImageCache.deinit();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1005D9250 + 8));
  sub_10005E190(v0 + qword_1005D9258);
  return swift_deallocClassInstance(v0, 48, 7);
}

void sub_100188988(uint64_t a1, uint64_t a2)
{
  swift_release(a2);
  _swift_stdlib_reportUnimplementedInitializer("FindMy.FMItemImageCache", 23, "init(converter:)", 16, 0);
  __break(1u);
}

void sub_1001889BC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t Strong;
  uint64_t v6;

  if ((*(_BYTE *)(a2 + 8) & 1) == 0)
  {
    v4 = *(void **)a2;
    Strong = swift_unknownObjectWeakLoadStrong(v2 + qword_1005D9258);
    if (Strong)
    {
      v6 = Strong;
      sub_1000A0C38(v4, 0);
      sub_1003503F8((uint64_t)v4, a1);
      swift_unknownObjectRelease(v6);
      sub_1000A0C44(v4, 0);
    }
  }
}

uint64_t sub_100188A40()
{
  return type metadata accessor for FMItemImageCache(0);
}

_QWORD *sub_100188A48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  char isUniquelyReferenced_nonNull_native;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *result;
  uint64_t v31;
  uint64_t v33;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return _swiftEmptyArrayStorage;
  v5 = *(_QWORD *)(type metadata accessor for FMIPItem(0) - 8);
  v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v7 = *(_QWORD *)(v5 + 72);
  v31 = a1;
  swift_bridgeObjectRetain(a1);
  v8 = _swiftEmptyArrayStorage;
  while (1)
  {
    sub_100188110(v6, a2, &v33);
    if (v2)
    {
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v31);
      return v8;
    }
    v9 = v33;
    v10 = *(_QWORD *)(v33 + 16);
    v11 = v8[2];
    v12 = v11 + v10;
    if (__OFADD__(v11, v10))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v8);
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v12 <= v8[3] >> 1)
    {
      if (*(_QWORD *)(v9 + 16))
        goto LABEL_15;
    }
    else
    {
      if (v11 <= v12)
        v14 = v11 + v10;
      else
        v14 = v11;
      v8 = (_QWORD *)sub_100070310(isUniquelyReferenced_nonNull_native, v14, 1, (unint64_t)v8);
      if (*(_QWORD *)(v9 + 16))
      {
LABEL_15:
        v15 = v8[2];
        v16 = (v8[3] >> 1) - v15;
        v17 = type metadata accessor for FMIPItemImageCacheRequest(0);
        if (v16 < v10)
          goto LABEL_30;
        v18 = *(_QWORD *)(v17 - 8);
        v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
        v20 = *(_QWORD *)(v18 + 72);
        v21 = (char *)v8 + v19 + v20 * v15;
        v22 = v9 + v19;
        v23 = v20 * v10;
        v24 = &v21[v23];
        v25 = v22 + v23;
        if (v22 < (unint64_t)v24 && (unint64_t)v21 < v25)
          goto LABEL_32;
        swift_arrayInitWithCopy(v21);
        if (v10)
        {
          v27 = v8[2];
          v28 = __OFADD__(v27, v10);
          v29 = v27 + v10;
          if (v28)
            goto LABEL_31;
          v8[2] = v29;
        }
        goto LABEL_4;
      }
    }
    if (v10)
      goto LABEL_29;
LABEL_4:
    swift_bridgeObjectRelease(v9);
    v6 += v7;
    if (!--v3)
    {
      swift_bridgeObjectRelease(v31);
      return v8;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  swift_release(a2);
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FMAlertPresenter()
{
  return objc_opt_self(_TtC6FindMy16FMAlertPresenter);
}

void sub_100188C84(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  unsigned __int8 v19;
  Swift::String v20;
  uint64_t v21;
  void *object;
  NSString v23;
  NSString v24;
  id v25;
  id v26;
  Swift::String_optional v27;
  Swift::String v28;
  Swift::String v29;
  void *v30;
  uint64_t v31;
  NSString v32;
  void *v33;
  id v34;
  uint64_t v35;
  Swift::String aBlock;
  void (*v37)(uint64_t, void *);
  void *v38;
  uint64_t (*v39)();
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;

  v15 = swift_allocObject(&unk_10054ACC0, 32, 7);
  *(_QWORD *)(v15 + 16) = a7;
  *(_QWORD *)(v15 + 24) = a8;
  if (a1)
  {
    v16 = (void *)objc_opt_self(FMSystemInfo);
    swift_errorRetain(a7);
    v17 = a8;
    swift_errorRetain(a1);
    v18 = objc_msgSend(v16, "sharedInstance");
    v19 = objc_msgSend(v18, "isInternalBuild");

    v41 = a5;
    v42 = a6;
    if ((v19 & 1) != 0)
    {
      aBlock._countAndFlagsBits = 0;
      aBlock._object = (void *)0xE000000000000000;
      swift_bridgeObjectRetain(a6);
      _StringGuts.grow(_:)(17);
      v20._countAndFlagsBits = 0x65746E492A2A200ALL;
      v20._object = (void *)0xEF202A2A6C616E72;
      String.append(_:)(v20);
      v35 = a1;
      v21 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
      _print_unlocked<A, B>(_:_:)(&v35, &aBlock, v21, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      object = aBlock._object;
      String.append(_:)(aBlock);
      swift_bridgeObjectRelease(object);
      a6 = v42;
    }
    else
    {
      swift_bridgeObjectRetain(a6);
    }
    swift_bridgeObjectRetain(a4);
    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a6);
    v25 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v23, v24, 1);

    v26 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v43._countAndFlagsBits = 0xD000000000000018;
    v43._object = (void *)0x80000001004A5660;
    v27.value._object = (void *)0x80000001004A5640;
    v28._countAndFlagsBits = 0x4B4F5F524F525245;
    v28._object = (void *)0xEF4E4F545455425FLL;
    v27.value._countAndFlagsBits = 0xD000000000000013;
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v27, (NSBundle)v26, v29, v43)._object;

    v31 = swift_allocObject(&unk_10054ACE8, 32, 7);
    *(_QWORD *)(v31 + 16) = sub_100189838;
    *(_QWORD *)(v31 + 24) = v15;
    swift_retain(v15);
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    v39 = sub_100189864;
    v40 = v31;
    aBlock._countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
    aBlock._object = (void *)1107296256;
    v37 = sub_100008B40;
    v38 = &unk_10054AD00;
    v33 = _Block_copy(&aBlock);
    swift_release(v40);
    v34 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v32, 0, v33);
    _Block_release(v33);

    objc_msgSend(v25, "addAction:", v34);
    objc_msgSend(a2, "presentViewController:animated:completion:", v25, 1, 0);
    swift_errorRelease(a1);
    swift_release(v15);

  }
  else
  {
    swift_errorRetain(a7);
    sub_100195894(a7, a8);
    swift_release(v15);
  }
}

void sub_10018905C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  Swift::String v19;
  uint64_t v20;
  void *object;
  NSString v22;
  NSString v23;
  id v24;
  id v25;
  Swift::String_optional v26;
  Swift::String v27;
  Swift::String v28;
  void *v29;
  uint64_t v30;
  NSString v31;
  void *v32;
  id v33;
  uint64_t v34;
  Swift::String aBlock;
  void (*v36)(uint64_t, void *);
  void *v37;
  uint64_t (*v38)();
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;

  v15 = swift_allocObject(&unk_10054AC48, 32, 7);
  *(_QWORD *)(v15 + 16) = a7;
  *(_QWORD *)(v15 + 24) = a8;
  if (a1)
  {
    v16 = objc_opt_self(FMSystemInfo);
    v17 = a8;
    swift_errorRetain(a1);
    v18 = objc_msgSend((id)v16, "sharedInstance");
    LOBYTE(v16) = objc_msgSend(v18, "isInternalBuild");

    v40 = a5;
    v41 = a6;
    if ((v16 & 1) != 0)
    {
      aBlock._countAndFlagsBits = 0;
      aBlock._object = (void *)0xE000000000000000;
      swift_bridgeObjectRetain(a6);
      _StringGuts.grow(_:)(17);
      v19._countAndFlagsBits = 0x65746E492A2A200ALL;
      v19._object = (void *)0xEF202A2A6C616E72;
      String.append(_:)(v19);
      v34 = a1;
      v20 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
      _print_unlocked<A, B>(_:_:)(&v34, &aBlock, v20, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      object = aBlock._object;
      String.append(_:)(aBlock);
      swift_bridgeObjectRelease(object);
      a6 = v41;
    }
    else
    {
      swift_bridgeObjectRetain(a6);
    }
    swift_bridgeObjectRetain(a4);
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a6);
    v24 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v22, v23, 1);

    v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v42._countAndFlagsBits = 0xD000000000000018;
    v42._object = (void *)0x80000001004A5660;
    v26.value._object = (void *)0x80000001004A5640;
    v27._countAndFlagsBits = 0x4B4F5F524F525245;
    v27._object = (void *)0xEF4E4F545455425FLL;
    v26.value._countAndFlagsBits = 0xD000000000000013;
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v26, (NSBundle)v25, v28, v42)._object;

    v30 = swift_allocObject(&unk_10054AC70, 32, 7);
    *(_QWORD *)(v30 + 16) = sub_10018982C;
    *(_QWORD *)(v30 + 24) = v15;
    swift_retain(v15);
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29);
    v38 = sub_100189864;
    v39 = v30;
    aBlock._countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
    aBlock._object = (void *)1107296256;
    v36 = sub_100008B40;
    v37 = &unk_10054AC88;
    v32 = _Block_copy(&aBlock);
    swift_release(v39);
    v33 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v31, 0, v32);
    _Block_release(v32);

    objc_msgSend(v24, "addAction:", v33);
    objc_msgSend(a2, "presentViewController:animated:completion:", v24, 1, 0);
    swift_errorRelease(a1);
    swift_release(v15);

  }
  else
  {
    sub_1002A1C50(a7, (char *)a8);
    swift_release(v15);
  }
}

void sub_100189424(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  unsigned __int8 v19;
  Swift::String v20;
  uint64_t v21;
  void *object;
  id v23;
  NSString v24;
  NSString v25;
  id v26;
  id v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  void *v31;
  uint64_t v32;
  NSString v33;
  void *v34;
  id v35;
  uint64_t v36;
  Swift::String aBlock;
  void (*v38)(uint64_t, void *);
  void *v39;
  uint64_t (*v40)();
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;

  v15 = swift_allocObject(&unk_10054ABD0, 32, 7);
  *(_QWORD *)(v15 + 16) = a7;
  *(_QWORD *)(v15 + 24) = a8;
  if (a1)
  {
    v16 = (void *)objc_opt_self(FMSystemInfo);
    swift_errorRetain(a7);
    v17 = a8;
    swift_errorRetain(a1);
    v18 = objc_msgSend(v16, "sharedInstance");
    v19 = objc_msgSend(v18, "isInternalBuild");

    v42 = a5;
    v43 = a6;
    if ((v19 & 1) != 0)
    {
      aBlock._countAndFlagsBits = 0;
      aBlock._object = (void *)0xE000000000000000;
      swift_bridgeObjectRetain(a6);
      _StringGuts.grow(_:)(17);
      v20._countAndFlagsBits = 0x65746E492A2A200ALL;
      v20._object = (void *)0xEF202A2A6C616E72;
      String.append(_:)(v20);
      v36 = a1;
      v21 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
      _print_unlocked<A, B>(_:_:)(&v36, &aBlock, v21, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      object = aBlock._object;
      String.append(_:)(aBlock);
      swift_bridgeObjectRelease(object);
      a6 = v43;
    }
    else
    {
      swift_bridgeObjectRetain(a6);
    }
    swift_bridgeObjectRetain(a4);
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
    v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a6);
    v26 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v24, v25, 1);

    v27 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v44._countAndFlagsBits = 0xD000000000000018;
    v44._object = (void *)0x80000001004A5660;
    v28.value._object = (void *)0x80000001004A5640;
    v29._countAndFlagsBits = 0x4B4F5F524F525245;
    v29._object = (void *)0xEF4E4F545455425FLL;
    v28.value._countAndFlagsBits = 0xD000000000000013;
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v28, (NSBundle)v27, v30, v44)._object;

    v32 = swift_allocObject(&unk_10054ABF8, 32, 7);
    *(_QWORD *)(v32 + 16) = sub_100189800;
    *(_QWORD *)(v32 + 24) = v15;
    swift_retain(v15);
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v31);
    v40 = sub_1000BB698;
    v41 = v32;
    aBlock._countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
    aBlock._object = (void *)1107296256;
    v38 = sub_100008B40;
    v39 = &unk_10054AC10;
    v34 = _Block_copy(&aBlock);
    swift_release(v41);
    v35 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v33, 0, v34);
    _Block_release(v34);

    objc_msgSend(v26, "addAction:", v35);
    objc_msgSend(a2, "presentViewController:animated:completion:", v26, 1, 0);
    swift_errorRelease(a1);
    swift_release(v15);

  }
  else
  {
    swift_errorRetain(a7);
    v23 = a8;
    sub_10044D6C0(a7);
    swift_release(v15);
  }
}

void sub_100189800(uint64_t a1)
{
  uint64_t v1;

  sub_10044CD9C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100189808()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10018982C(uint64_t a1)
{
  uint64_t v1;

  sub_10029DCC8(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24));
}

id sub_100189838(uint64_t a1)
{
  uint64_t v1;

  return sub_100194C70(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100189840()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100189878()
{
  void *v0;
  NSString *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  double result;

  v0 = (void *)objc_opt_self(UIColor);
  v1 = UIFontTextStyleBody;
  v2 = objc_msgSend(v0, "systemWhiteColor");
  v3 = objc_msgSend(v0, "clearColor");
  v4 = objc_msgSend(v0, "systemBlueColor");
  v5 = objc_msgSend(v0, "systemBlueColor");
  qword_1005F5070 = (uint64_t)v1;
  qword_1005F5078 = (uint64_t)v2;
  qword_1005F5080 = (uint64_t)v3;
  qword_1005F5088 = (uint64_t)v4;
  qword_1005F5090 = (uint64_t)v5;
  result = 5.0;
  *(_OWORD *)&qword_1005F5098 = xmmword_100486670;
  return result;
}

id sub_10018994C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v8;
  id v9;
  double v10;
  NSString v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  _QWORD v26[3];
  uint64_t v27;
  objc_super v28;

  v28.receiver = v4;
  v28.super_class = (Class)type metadata accessor for FMStickyRoundedButton();
  v8 = objc_msgSendSuper2(&v28, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v9 = v8;
  if (a2)
  {
    v11 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v10 = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v8, "setTitle:forState:", v11, 0, v10);

  sub_10014581C(a3, (uint64_t)v26);
  v12 = v27;
  if (v27)
  {
    v13 = sub_100029550(v26, v27);
    v14 = *(_QWORD *)(v12 - 8);
    __chkstk_darwin(v13);
    v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v14 + 16))(v16);
    v17 = v8;
    v18 = _bridgeAnythingToObjectiveC<A>(_:)(v16, v12);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
    sub_100029574(v26);
  }
  else
  {
    v19 = v8;
    v18 = 0;
  }
  objc_msgSend(v8, "addTarget:action:forControlEvents:", v18, a4, 64);

  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0, swift_unknownObjectRelease(v18).n128_f64[0]);
  if (qword_1005D1C70 != -1)
    swift_once(&qword_1005D1C70, sub_100189878);
  v20 = qword_1005F5070;
  objc_msgSend(v8, "setContentEdgeInsets:", unk_1005F50A0, *(double *)&qword_1005F5098, unk_1005F50A0, *(double *)&qword_1005F5098);
  v21 = objc_msgSend(v8, "titleLabel");
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", v20);
    objc_msgSend(v22, "setFont:", v23);

  }
  objc_msgSend(v8, "setTitleColor:forState:", qword_1005F5088, 0);
  v24 = qword_1005F5078;
  objc_msgSend(v8, "setTitleColor:forState:", qword_1005F5078, 1);
  objc_msgSend(v8, "setTitleColor:forState:", v24, 4);

  sub_10005D03C(a3);
  return v8;
}

void sub_100189D10(double a1, double a2, double a3, double a4)
{
  void *v4;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t *v10;
  id v11;

  objc_msgSend(v4, "bounds");
  v11 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v6, v7, v8, v9, a4 * 0.25);
  if ((objc_msgSend(v4, "isHighlighted") & 1) == 0 && !objc_msgSend(v4, "isSelected"))
  {
    v10 = &qword_1005F5080;
    if (qword_1005D1C70 == -1)
      goto LABEL_4;
LABEL_6:
    swift_once(&qword_1005D1C70, sub_100189878);
    goto LABEL_4;
  }
  v10 = &qword_1005F5090;
  if (qword_1005D1C70 != -1)
    goto LABEL_6;
LABEL_4:
  objc_msgSend((id)*v10, "set");
  objc_msgSend(v11, "fill");

}

id sub_100189F58()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMStickyRoundedButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMStickyRoundedButton()
{
  return objc_opt_self(_TtC6FindMy21FMStickyRoundedButton);
}

double sub_100189FA8()
{
  id v0;
  id v1;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v1 = objc_msgSend(v0, "CGColor");

  result = 0.0;
  xmmword_1005F50B0 = xmmword_1004866E0;
  unk_1005F50C0 = xmmword_1004866F0;
  qword_1005F50D0 = 0x4030000000000000;
  qword_1005F50D8 = (uint64_t)v1;
  dword_1005F50E0 = 1031127695;
  qword_1005F50F0 = 0;
  unk_1005F50F8 = 0;
  qword_1005F50E8 = 0x4030000000000000;
  return result;
}

void sub_10018A038()
{
  uint64_t v0;
  int v1;
  void *v2;
  uint64_t v3;
  Class isa;
  uint64_t v5;
  Class v6;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_isActionButtonHidden);
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_100048C64();
  if (v1 == 1)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButtonHiddenConstraints);
    swift_bridgeObjectRetain(v3);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "activateConstraints:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButton), "removeFromSuperview");
  }
  else
  {
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButtonShowingConstraints);
    swift_bridgeObjectRetain(v5);
    v6 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "activateConstraints:", v6, swift_bridgeObjectRelease(v5).n128_f64[0]);

  }
}

void sub_10018A138()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Class isa;
  uint64_t v4;
  Class v5;
  void *v6;
  uint64_t v7;
  Class v8;
  uint64_t v9;
  Class v10;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_isLockupViewHidden) == 1)
  {
    v1 = (void *)objc_opt_self(NSLayoutConstraint);
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupViewHiddenConstraints);
    sub_100048C64();
    swift_bridgeObjectRetain(v2);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v1, "activateConstraints:", isa, swift_bridgeObjectRelease(v2).n128_f64[0]);

    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupViewShowingContstraints);
    swift_bridgeObjectRetain(v4);
    v5 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v1, "deactivateConstraints:", v5, swift_bridgeObjectRelease(v4).n128_f64[0]);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupView), "setHidden:", 1);
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_topSeparator), "setHidden:", 1);
  }
  else
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupView), "setHidden:", 0);
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_topSeparator), "setHidden:", 0);
    v6 = (void *)objc_opt_self(NSLayoutConstraint);
    v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupViewHiddenConstraints);
    sub_100048C64();
    swift_bridgeObjectRetain(v7);
    v8 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "deactivateConstraints:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupViewShowingContstraints);
    swift_bridgeObjectRetain(v9);
    v10 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "activateConstraints:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

  }
}

char *sub_10018A330(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  id v5;
  char *v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  char *v17;
  id v18;
  NSString v19;
  objc_super v21;

  v4 = OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_sharedLockupViewGroup;
  v5 = objc_allocWithZone((Class)ASCLockupViewGroup);
  v6 = v2;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "initWithName:", v7);

  *(_QWORD *)&v2[v4] = v8;
  v9 = OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupView;
  *(_QWORD *)&v6[v9] = objc_msgSend(objc_allocWithZone((Class)ASCLockupView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_contentStackView;
  *(_QWORD *)&v6[v10] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v11 = OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_secondaryStackView;
  *(_QWORD *)&v6[v11] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v12 = OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButton;
  *(_QWORD *)&v6[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMActionAndInfoButton()), "init");
  v13 = OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_topSeparator;
  *(_QWORD *)&v6[v13] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButtonShowingConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButtonHiddenConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupViewShowingContstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupViewHiddenConstraints] = _swiftEmptyArrayStorage;
  v6[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_isActionEnabled] = 1;
  v6[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_isActionButtonHidden] = 1;
  v6[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_isLockupViewHidden] = 0;
  v14 = &v6[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_displayedAppBundleID];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;

  v21.receiver = v6;
  v21.super_class = (Class)type metadata accessor for FMPlatterAppStoreInfoAndButtonGroupView();
  v15 = (char *)objc_msgSendSuper2(&v21, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = *(void **)&v15[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButton];
  v17 = v15;
  v18 = v16;
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setTitle:forState:", v19, 0, swift_bridgeObjectRelease(a2).n128_f64[0]);

  (*(void (**)(void))((swift_isaMask & *(_QWORD *)v17) + 0x188))();
  sub_10018AAD0();
  (*(void (**)(void))((swift_isaMask & *(_QWORD *)v17) + 0x198))();

  return v17;
}

void sub_10018A5CC()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  char **v4;
  id v5;
  id v6;
  id v7;
  id v8;
  double v9;
  double v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  double v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;

  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceStyle");
  v3 = (void *)objc_opt_self(UIColor);
  v4 = &selRef_tertiarySystemFillColor;
  if (v2 != (id)2)
    v4 = &selRef_whiteColor;
  v5 = objc_msgSend(v3, *v4);

  objc_msgSend(v0, "setBackgroundColor:", v5);
  v6 = objc_msgSend(v0, "layer");
  objc_msgSend(v6, "setShouldRasterize:", 1);

  v7 = objc_msgSend(v0, "layer");
  v8 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v8, "scale");
  v10 = v9;

  objc_msgSend(v7, "setRasterizationScale:", v10);
  v11 = objc_msgSend(v0, "layer");
  objc_msgSend(v11, "setCornerRadius:", _UISheetCornerRadius);

  v12 = objc_msgSend(v0, "layer");
  objc_msgSend(v12, "setCornerCurve:", kCACornerCurveContinuous);

  v13 = objc_msgSend(v0, "layer");
  objc_msgSend(v13, "setMasksToBounds:", 0);

  v14 = objc_msgSend(v0, "layer");
  if (qword_1005D1C78 != -1)
    swift_once(&qword_1005D1C78, sub_100189FA8);
  objc_msgSend(v14, "setShadowColor:", qword_1005F50D8);

  v15 = objc_msgSend(v0, "layer");
  LODWORD(v16) = dword_1005F50E0;
  objc_msgSend(v15, "setShadowOpacity:", v16);

  v17 = objc_msgSend(v0, "layer");
  objc_msgSend(v17, "setShadowRadius:", *(double *)&qword_1005F50E8);

  v18 = objc_msgSend(v0, "layer");
  objc_msgSend(v18, "setShadowOffset:", *(double *)&qword_1005F50F0, unk_1005F50F8);

  v19 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_contentStackView];
  objc_msgSend(v19, "setAxis:", 1);
  v20 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButton];
  v21 = objc_msgSend(v20, "titleLabel");
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v22, "setFont:", v23);

  }
  v24 = objc_msgSend(v20, "titleLabel");
  objc_msgSend(v24, "setAdjustsFontForContentSizeCategory:", 1);

  objc_msgSend(v20, "setContentHorizontalAlignment:", 4);
  objc_msgSend(v20, "addTarget:action:forControlEvents:", v0, "handleAction", 64);
  v25 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_topSeparator];
  v26 = objc_msgSend((id)objc_opt_self(UIColor), "quaternaryLabelColor");
  objc_msgSend(v25, "setBackgroundColor:", v26);

  v27 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupView];
  objc_msgSend(v27, "setGroup:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_sharedLockupViewGroup]);
  objc_msgSend(v0, "addSubview:", v27);
  objc_msgSend(v0, "addSubview:", v25);
  objc_msgSend(v0, "addSubview:", v19);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_secondaryStackView]);
  v28 = objc_msgSend(v20, "titleLabel");
  if (v28)
  {
    v29 = v28;
    v30 = objc_msgSend(v28, "text");

    if (v30)
    {

      objc_msgSend(v0, "addSubview:", v20);
    }
  }
}

void sub_10018AAD0()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  double v29;
  double v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  Class isa;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  Class v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  void *v86;
  id v87;
  char v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;

  v1 = v0;
  if (qword_1005D1BC8 != -1)
    swift_once(&qword_1005D1BC8, sub_1000ABDB8);
  v2 = *(double *)&qword_1005F4D78;
  v3 = *(double *)&qword_1005F4D80;
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v4 = *(double *)&qword_1005F5978;
  v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_topSeparator];
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_topSeparator], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v91 = *(id *)&v1[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButton];
  objc_msgSend(v91, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = *(void **)&v1[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_contentStackView];
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupView];
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v90 = *(id *)&v1[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_secondaryStackView];
  objc_msgSend(v90, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  if (qword_1005D1C78 != -1)
    swift_once(&qword_1005D1C78, sub_100189FA8);
  objc_msgSend(v7, "setLayoutMargins:", *((double *)&xmmword_1005F50B0 + 1), unk_1005F50C0, *(double *)&qword_1005F50C8, *(double *)&qword_1005F50D0);
  v92 = sub_100053F2C(&qword_1005D2F10);
  v8 = swift_allocObject(v92, 96, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100486700;
  v9 = objc_msgSend(v7, "topAnchor");
  v10 = objc_msgSend(v1, "topAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(v7, "leadingAnchor");
  v13 = objc_msgSend(v1, "leadingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v8 + 40) = v14;
  v15 = objc_msgSend(v7, "trailingAnchor");
  v16 = objc_msgSend(v1, "trailingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v8 + 48) = v17;
  v18 = objc_msgSend(v5, "topAnchor");
  v19 = objc_msgSend(v7, "bottomAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, v4);

  *(_QWORD *)(v8 + 56) = v20;
  v21 = objc_msgSend(v5, "leadingAnchor");
  v22 = objc_msgSend(v1, "leadingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, v4);

  *(_QWORD *)(v8 + 64) = v23;
  v24 = objc_msgSend(v5, "trailingAnchor");
  v25 = objc_msgSend(v1, "trailingAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v8 + 72) = v26;
  v27 = objc_msgSend(v5, "heightAnchor");
  v28 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v28, "scale");
  v30 = v29;

  v31 = objc_msgSend(v27, "constraintEqualToConstant:", 1.0 / v30);
  *(_QWORD *)(v8 + 80) = v31;
  v32 = objc_msgSend(v6, "topAnchor");
  v33 = objc_msgSend(v5, "bottomAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v8 + 88) = v34;
  specialized Array._endMutation()(v35);
  v36 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupViewShowingContstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupViewShowingContstraints] = v8;
  swift_bridgeObjectRelease(v36);
  v37 = swift_allocObject(v92, 40, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100481B00;
  v38 = objc_msgSend(v6, "topAnchor");
  v39 = objc_msgSend(v1, "topAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  *(_QWORD *)(v37 + 32) = v40;
  specialized Array._endMutation()(v41);
  v42 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupViewHiddenConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupViewHiddenConstraints] = v37;
  swift_bridgeObjectRelease(v42);
  v89 = (id)objc_opt_self(NSLayoutConstraint);
  v43 = swift_allocObject(v92, 48, 7);
  *(_OWORD *)(v43 + 16) = xmmword_1004820B0;
  v44 = objc_msgSend(v6, "leadingAnchor");
  v45 = objc_msgSend(v1, "leadingAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:constant:", v45, v4);

  *(_QWORD *)(v43 + 32) = v46;
  v47 = objc_msgSend(v6, "trailingAnchor");
  v48 = objc_msgSend(v1, "trailingAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v48, -v4);

  *(_QWORD *)(v43 + 40) = v49;
  specialized Array._endMutation()(v50);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v89, "activateConstraints:", isa, swift_bridgeObjectRelease(v43).n128_f64[0]);

  v52 = swift_allocObject(v92, 56, 7);
  *(_OWORD *)(v52 + 16) = xmmword_1004820C0;
  v53 = objc_msgSend(v90, "topAnchor");
  v54 = objc_msgSend(v6, "bottomAnchor");
  v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

  *(_QWORD *)(v52 + 32) = v55;
  v56 = objc_msgSend(v90, "leadingAnchor");
  v57 = objc_msgSend(v1, "leadingAnchor");
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

  *(_QWORD *)(v52 + 40) = v58;
  v59 = objc_msgSend(v90, "trailingAnchor");
  v60 = objc_msgSend(v1, "trailingAnchor");
  v61 = objc_msgSend(v59, "constraintEqualToAnchor:", v60);

  *(_QWORD *)(v52 + 48) = v61;
  specialized Array._endMutation()(v62);
  v63 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v89, "activateConstraints:", v63, swift_bridgeObjectRelease(v52).n128_f64[0]);

  v64 = swift_allocObject(v92, 64, 7);
  *(_OWORD *)(v64 + 16) = xmmword_100481720;
  v65 = objc_msgSend(v91, "topAnchor");
  v66 = objc_msgSend(v90, "bottomAnchor");
  v67 = objc_msgSend(v65, "constraintEqualToAnchor:constant:", v66, v2);

  *(_QWORD *)(v64 + 32) = v67;
  v68 = objc_msgSend(v91, "leadingAnchor");
  v69 = objc_msgSend(v1, "leadingAnchor");
  v70 = objc_msgSend(v68, "constraintEqualToAnchor:constant:", v69, v4);

  *(_QWORD *)(v64 + 40) = v70;
  v71 = objc_msgSend(v91, "trailingAnchor");
  v72 = objc_msgSend(v1, "trailingAnchor");
  v73 = objc_msgSend(v71, "constraintEqualToAnchor:constant:", v72, -v4);

  *(_QWORD *)(v64 + 48) = v73;
  v74 = objc_msgSend(v91, "bottomAnchor");
  v75 = objc_msgSend(v1, "bottomAnchor");
  v76 = objc_msgSend(v74, "constraintEqualToAnchor:constant:", v75, -v3);

  *(_QWORD *)(v64 + 56) = v76;
  specialized Array._endMutation()(v77);
  v78 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButtonShowingConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButtonShowingConstraints] = v64;
  swift_bridgeObjectRelease(v78);
  v79 = swift_allocObject(v92, 40, 7);
  *(_OWORD *)(v79 + 16) = xmmword_100481B00;
  v80 = objc_msgSend(v90, "bottomAnchor");
  v81 = objc_msgSend(v1, "bottomAnchor");
  if (qword_1005D2018 != -1)
    swift_once(&qword_1005D2018, sub_1003A66B0);
  v82 = objc_msgSend(v80, "constraintEqualToAnchor:constant:", v81, -*(double *)&qword_1005F5ED8);

  *(_QWORD *)(v79 + 32) = v82;
  specialized Array._endMutation()(v83);
  v84 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButtonHiddenConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButtonHiddenConstraints] = v79;
  v85 = objc_msgSend(v91, "titleLabel", swift_bridgeObjectRelease(v84).n128_f64[0]);
  if (v85 && (v86 = v85, v87 = objc_msgSend(v85, "text"), v86, v87))
  {

    v88 = 0;
  }
  else
  {
    v88 = 1;
  }
  v1[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_isActionButtonHidden] = v88;
  sub_10018A038();
}

void sub_10018B638(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  char **v6;
  id v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for FMPlatterAppStoreInfoAndButtonGroupView();
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "userInterfaceStyle");
  v5 = (void *)objc_opt_self(UIColor);
  v6 = &selRef_tertiarySystemFillColor;
  if (v4 != (id)2)
    v6 = &selRef_whiteColor;
  v7 = objc_msgSend(v5, *v6);

  objc_msgSend(v1, "setBackgroundColor:", v7);
}

void sub_10018B780(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _BYTE *v5;
  _QWORD *v10;
  uint64_t v11;
  BOOL v13;
  uint64_t v14;
  id v15;
  void *v16;
  NSString v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  _BYTE *v22;
  _QWORD v23[5];
  _QWORD *v24;

  v10 = &v5[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_displayedAppBundleID];
  v11 = *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_displayedAppBundleID + 8];
  if (!v11
    || (*v10 == a1 ? (v13 = v11 == a2) : (v13 = 0),
        !v13 && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, *v10, v11, 0) & 1) == 0 || (a3 & 1) != 0))
  {
    v5[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_isLockupViewHidden] = 1;
    sub_10018A138();
    v14 = v10[1];
    *v10 = a1;
    v10[1] = a2;
    swift_bridgeObjectRetain(a2);
    v15 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupView], "group", swift_bridgeObjectRelease(v14).n128_f64[0]);
    if (v15)
    {
      v16 = v15;
      v17 = String._bridgeToObjectiveC()();
      v18 = ASCLockupContextStandard;
      v19 = (_QWORD *)swift_allocObject(&unk_10054AD38, 40, 7);
      v19[2] = v5;
      v19[3] = a4;
      v19[4] = a5;
      v23[4] = sub_10018BCE4;
      v24 = v19;
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 1107296256;
      v23[2] = sub_1000EFE00;
      v23[3] = &unk_10054AD50;
      v20 = _Block_copy(v23);
      v21 = v24;
      v22 = v5;
      swift_retain(a5);
      objc_msgSend(v16, "_lockupRequestForBundleID:withContext:completionBlock:", v17, v18, v20, swift_release(v21).n128_f64[0]);
      _Block_release(v20);

    }
  }
}

uint64_t sub_10018B91C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v16;
  id v17;
  uint64_t v19;
  _QWORD v20[3];
  _BYTE v21[8];
  uint64_t v22;

  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v6 = type metadata accessor for Logger(0);
    sub_100056D88(v6, (uint64_t)qword_1005F5748);
    swift_errorRetain(a2);
    v7 = swift_errorRetain(a2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v22 = v11;
      *(_DWORD *)v10 = 136315138;
      swift_getErrorValue(a2, v21, v20);
      v12 = Error.localizedDescription.getter(v20[1], v20[2]);
      v14 = v13;
      v19 = sub_100056DA0(v12, v13, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, v20);
      swift_bridgeObjectRelease(v14);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMPlatterAppStoreInfoGroupView: Error requesting lockup view %s", v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
  else if (a1)
  {
    v16 = *(void **)(a3 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupView);
    v17 = a1;
    objc_msgSend(v16, "setRequest:", v17);
    *(_BYTE *)(a3 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_isLockupViewHidden) = 0;
    sub_10018A138();

  }
  else
  {
    *(_BYTE *)(a3 + OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_isLockupViewHidden) = 1;
    sub_10018A138();
  }
  return a4(a2);
}

id sub_10018BB9C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPlatterAppStoreInfoAndButtonGroupView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMPlatterAppStoreInfoAndButtonGroupView()
{
  return objc_opt_self(_TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView);
}

uint64_t sub_10018BCB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10018BCE4(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10018B91C(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24));
}

void sub_10018BCF0()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_sharedLockupViewGroup;
  v2 = objc_allocWithZone((Class)ASCLockupViewGroup);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "initWithName:", v3);

  *(_QWORD *)&v0[v1] = v4;
  v5 = OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)ASCLockupView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_contentStackView;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v7 = OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_secondaryStackView;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v8 = OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButton;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMActionAndInfoButton()), "init");
  v9 = OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_topSeparator;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButtonShowingConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_actionButtonHiddenConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupViewShowingContstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_lockupViewHiddenConstraints] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_isActionEnabled] = 1;
  v0[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_isActionButtonHidden] = 1;
  v0[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_isLockupViewHidden] = 0;
  v10 = &v0[OBJC_IVAR____TtC6FindMy39FMPlatterAppStoreInfoAndButtonGroupView_displayedAppBundleID];
  *v10 = 0;
  v10[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMPlatterAppStoreInfoAndButtonGroupView.swift", 52, 2, 105, 0);
  __break(1u);
}

double sub_10018BED8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  double result;

  v0 = (void *)objc_opt_self(UIColor);
  v1 = objc_msgSend(v0, "quaternarySystemFillColor");
  v2 = objc_msgSend(v0, "systemFillColor");
  v3 = objc_msgSend(v2, "CGColor");

  v4 = objc_msgSend(v0, "quaternarySystemFillColor");
  qword_1005F5100 = (uint64_t)v1;
  result = 10.0;
  unk_1005F5108 = xmmword_100486750;
  qword_1005F5118 = 0x4022000000000000;
  unk_1005F5120 = v3;
  qword_1005F5128 = (uint64_t)v4;
  return result;
}

id sub_10018BF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  NSString v6;
  id v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  if (a3)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v6 = 0;
  }
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for FMPlatteredTableViewCell();
  v7 = objc_msgSendSuper2(&v11, "initWithStyle:reuseIdentifier:", a1, v6);

  v8 = qword_1005D1C80;
  v9 = v7;
  if (v8 != -1)
    swift_once(&qword_1005D1C80, sub_10018BED8);
  objc_msgSend(v9, "setBackgroundColor:", qword_1005F5100);
  objc_msgSend(v9, "setSelectionStyle:", 0);

  return v9;
}

void sub_10018C118()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  double v8;
  double v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for FMPlatteredTableViewCell();
  objc_msgSendSuper2(&v10, "layoutSubviews");
  v1 = (void *)objc_opt_self(UIColor);
  v2 = objc_msgSend(v1, "systemBackgroundColor");
  objc_msgSend(v0, "setBackgroundColor:", v2);

  v3 = objc_msgSend(v0, "layer");
  v4 = objc_msgSend(v1, "separatorColor");
  v5 = objc_msgSend(v4, "CGColor");

  objc_msgSend(v3, "setBorderColor:", v5);
  v6 = objc_msgSend(v0, "layer");
  v7 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v7, "scale");
  v9 = v8;

  objc_msgSend(v6, "setBorderWidth:", 1.0 / v9);
}

id sub_10018C360()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPlatteredTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMPlatteredTableViewCell()
{
  return objc_opt_self(_TtC6FindMy24FMPlatteredTableViewCell);
}

id sub_10018C3B4()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC6FindMyP33_06C68F60534B37E780B39268674B6CC031FMDiscoveredAccessoryAnnotation_itemImage));
}

void sub_10018C3C4()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC6FindMyP33_06C68F60534B37E780B39268674B6CC031FMDiscoveredAccessoryAnnotation_itemImage));
}

id sub_10018C3D4()
{
  return sub_100094C38((uint64_t (*)(_QWORD))type metadata accessor for FMDiscoveredAccessoryAnnotation);
}

uint64_t type metadata accessor for FMDiscoveredAccessoryAnnotation()
{
  return objc_opt_self(_TtC6FindMyP33_06C68F60534B37E780B39268674B6CC031FMDiscoveredAccessoryAnnotation);
}

uint64_t sub_10018C410()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  v3 = type metadata accessor for FMDiscoveredAccessoryAnnotationView();
  v0 = sub_100053F2C(&qword_1005D9638);
  result = String.init<A>(describing:)(&v3, v0);
  qword_1005D9430 = result;
  *(_QWORD *)algn_1005D9438 = v2;
  return result;
}

id sub_10018C54C()
{
  return sub_100094C38((uint64_t (*)(_QWORD))type metadata accessor for FMDiscoveredAccessoryAnnotationView);
}

uint64_t type metadata accessor for FMDiscoveredAccessoryAnnotationView()
{
  return objc_opt_self(_TtC6FindMyP33_06C68F60534B37E780B39268674B6CC035FMDiscoveredAccessoryAnnotationView);
}

void sub_10018C57C()
{
  qword_1005F5130 = 0x4030000000000000;
}

void sub_10018C58C()
{
  qword_1005F5138 = 0x4042000000000000;
}

void sub_10018C59C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  uint64_t v8;
  _BYTE v9[24];
  objc_super v10;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_subscription];
  if (!v1)
    goto LABEL_5;
  v2 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_viewModel] + 24);
  swift_beginAccess(v2 + 16, v9, 33, 0);
  swift_retain(v1);
  swift_retain(v2);
  v3 = sub_1001138E0((uint64_t *)(v2 + 16), v1);
  v4 = v3;
  v5 = *(_QWORD *)(v2 + 16);
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v8 = *(_QWORD *)(v2 + 16);
    else
      v8 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
    v6 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v5);
    if (v6 >= v4)
      goto LABEL_4;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6 >= v3)
    {
LABEL_4:
      sub_1002006EC(v4, v6);
      swift_endAccess(v9);
      swift_release(v1);
      swift_release(v2);
LABEL_5:
      v7 = (objc_class *)type metadata accessor for FMAccessoryPairingConfirmationCard(0);
      v10.receiver = v0;
      v10.super_class = v7;
      objc_msgSendSuper2(&v10, "dealloc");
      return;
    }
  }
  __break(1u);
}

uint64_t sub_10018C788()
{
  return type metadata accessor for FMAccessoryPairingConfirmationCard(0);
}

uint64_t type metadata accessor for FMAccessoryPairingConfirmationCard(uint64_t a1)
{
  return sub_10001DC04(a1, (uint64_t *)&unk_1005D9500, (uint64_t)&nominal type descriptor for FMAccessoryPairingConfirmationCard);
}

void sub_10018C83C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v1 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_viewModel] + 24);
  v2 = type metadata accessor for FMDevicesSubscription(0);
  v3 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v4 = v3 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v4 + 8) = 0;
  swift_unknownObjectWeakInit(v4);
  swift_retain(v1);
  v5 = v0;
  UUID.init()(v5);
  v6 = v3 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v6 + 8) = &off_10054AD78;
  swift_unknownObjectWeakAssign(v6, v5);

  swift_beginAccess(v1 + 16, v12, 33, 0);
  v7 = swift_retain(v3);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v9 = *(_QWORD *)((*(_QWORD *)(v1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v8 = *(_QWORD *)((*(_QWORD *)(v1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v9 >= v8 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
  v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v3);
  specialized Array._endMutation()(v10);
  swift_endAccess(v12);
  swift_release(v1);
  v11 = *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_subscription];
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_subscription] = v3;
  swift_release(v11);
  sub_10018CDB8();
  sub_10018C98C();
  sub_10018CF10();
}

void sub_10018C98C()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  id v9;
  id v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  void *object;
  uint64_t v15;
  NSString v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[5];
  uint64_t v29;
  Swift::String v30;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_viewModel];
  v3 = type metadata accessor for FMAccessoryPairingConfirmationCard.ViewModel(0);
  v4 = (uint64_t)&v2[*(int *)(v3 + 20)];
  FMIPItem.name.getter(v3);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v7, swift_bridgeObjectRelease(v6).n128_f64[0]);

  v8 = objc_msgSend(v1, "contentView");
  v9 = objc_msgSend(v8, "titleTextView");

  if (v9)
  {
    objc_msgSend(v9, "setTextAlignment:", 0);

  }
  objc_msgSend(v1, "setDismissalType:", 2);
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v30._countAndFlagsBits = 0xD000000000000018;
  v11._countAndFlagsBits = 0xD000000000000021;
  v30._object = (void *)0x80000001004A5660;
  v11._object = (void *)0x80000001004B1010;
  v12.value._object = (void *)0x80000001004A5640;
  v12.value._countAndFlagsBits = 0xD000000000000013;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v30)._object;

  v15 = swift_allocObject(&unk_10054AE28, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  swift_retain_n(v15, 2);
  swift_bridgeObjectRetain(object);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  aBlock[4] = sub_10018FB64;
  v29 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100008B40;
  aBlock[3] = &unk_10054AF58;
  v17 = _Block_copy(aBlock);
  v18 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v16, 0, v17);

  _Block_release(v17);
  v19 = objc_msgSend(v1, "addAction:", v18, swift_release(v29).n128_f64[0]);

  swift_bridgeObjectRelease(object);
  swift_release_n(v15, 2);

  v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 24) + 40);
  v21 = sub_100053F2C(&qword_1005D2C10);
  v22 = type metadata accessor for FMIPItem(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = (v24 + 32) & ~v24;
  v26 = swift_allocObject(v21, v25 + *(_QWORD *)(v23 + 72), v24 | 7);
  *(_OWORD *)(v26 + 16) = xmmword_100481740;
  v27 = v26 + v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v27, v4, v22);
  swift_retain(v20);
  sub_100022830(v26);
  swift_setDeallocating(v26);
  swift_arrayDestroy(v27, *(_QWORD *)(v26 + 16), v22);
  swift_deallocClassInstance(v26, 32, 7);
  swift_release(v20);
  sub_10018DF40(v4);
}

void sub_10018CCE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  void *v7;
  void *v8;
  _BYTE v10[24];

  v3 = type metadata accessor for FMAccessoryPairingCoordinator.Event(0);
  __chkstk_darwin(v3);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_coordinator);

    if (v8)
    {
      swift_storeEnumTagMultiPayload(v5, v3, 14);
      sub_1000F3128((uint64_t)v5);

      sub_10004FCB8((uint64_t)v5, type metadata accessor for FMAccessoryPairingCoordinator.Event);
    }
  }
}

uint64_t sub_10018CDB8()
{
  char *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_featuresView];
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy24FMSymbolBulletedListView_headerView), "setHidden:", 1);
  v2 = objc_msgSend(v0, "contentView");
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_verticalStackView];
  objc_msgSend(v2, "addSubview:", v3);

  objc_msgSend(v3, "setAxis:", 1);
  objc_msgSend(v3, "setBaselineRelativeArrangement:", 1);
  if (qword_1005D1C98 != -1)
    swift_once(&qword_1005D1C98, sub_10018C58C);
  objc_msgSend(v3, "setSpacing:", *(double *)&qword_1005F5138);
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_withYouView];
  objc_msgSend(v3, "addArrangedSubview:", v4);
  objc_msgSend(v3, "setCustomSpacing:afterView:", v4, 18.0);
  objc_msgSend(v3, "addArrangedSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_mapView]);
  objc_msgSend(v3, "addArrangedSubview:", v1);
  sub_10018DD50();
  return sub_10018D370();
}

void sub_10018CF10()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  Class v34;

  v1 = v0;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_withYouView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_verticalStackView];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = objc_msgSend(v0, "contentView");
  v4 = objc_msgSend(v3, "mainContentGuide");

  v5 = objc_msgSend(v1, "contentView");
  v6 = objc_msgSend(v5, "titleView");

  if (v6)
  {
    v7 = objc_msgSend(v6, "bottomAnchor");

  }
  else
  {
    v7 = objc_msgSend(v4, "topAnchor");
  }
  v32 = (id)objc_opt_self(NSLayoutConstraint);
  v33 = (id)sub_100053F2C(&qword_1005D2F10);
  v8 = swift_allocObject(v33, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100481720;
  v9 = objc_msgSend(v2, "topAnchor");
  v10 = objc_msgSend(v9, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v8 + 32) = v10;
  v11 = objc_msgSend(v2, "leadingAnchor");
  v12 = objc_msgSend(v4, "leadingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v8 + 40) = v13;
  v14 = objc_msgSend(v2, "trailingAnchor");
  v15 = objc_msgSend(v4, "trailingAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v8 + 48) = v16;
  v17 = objc_msgSend(v2, "bottomAnchor");
  v18 = v4;
  v19 = objc_msgSend(v4, "bottomAnchor");
  v20 = objc_msgSend(v17, "constraintLessThanOrEqualToAnchor:", v19);

  *(_QWORD *)(v8 + 56) = v20;
  specialized Array._endMutation()(v21);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v32, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  v23 = swift_allocObject(v33, 48, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1004820B0;
  v24 = *(void **)&v1[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_mapView];
  v25 = objc_msgSend(v24, "widthAnchor");
  v26 = objc_msgSend(v2, "widthAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v23 + 32) = v27;
  v28 = objc_msgSend(v24, "heightAnchor");
  v29 = objc_msgSend(v24, "widthAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:multiplier:", v29, 0.583333333);

  *(_QWORD *)(v23 + 40) = v30;
  specialized Array._endMutation()(v31);
  v34 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v32, "activateConstraints:", v34, swift_bridgeObjectRelease(v23).n128_f64[0]);

}

uint64_t sub_10018D370()
{
  const char *v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v6;
  id v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  Swift::String v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  Swift::String v28;
  Swift::String_optional v29;
  Swift::String v30;
  Swift::String v31;
  id v32;
  Swift::String v33;
  Swift::String_optional v34;
  Swift::String v35;
  Swift::String v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  char *v45;
  char *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  Swift::String v52;
  Swift::String_optional v53;
  Swift::String v54;
  Swift::String v55;
  id v56;
  Swift::String v57;
  Swift::String_optional v58;
  Swift::String v59;
  Swift::String v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  objc_class *v66;
  id v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t My;
  _QWORD *v74;
  id v75;
  Swift::String v76;
  Swift::String_optional v77;
  Swift::String v78;
  Swift::String v79;
  id v80;
  Swift::String v81;
  Swift::String_optional v82;
  Swift::String v83;
  Swift::String v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  id v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  id v99;
  void *v100;
  _QWORD *v101;
  id v103;
  uint64_t v104;
  _QWORD v105[5];
  _QWORD v106[5];
  _QWORD v107[5];
  _QWORD v108[3];
  uint64_t v109;
  uint64_t v110;
  Swift::String v111;
  Swift::String v112;
  Swift::String v113;
  Swift::String v114;
  Swift::String v115;
  Swift::String v116;
  Swift::String v117;
  Swift::String v118;

  if (qword_1005D1F68 != -1)
    swift_once(&qword_1005D1F68, sub_100006164);
  v0 = "FMLocalizedHawkeyeString";
  if (byte_1005F5E31 != 1)
    goto LABEL_6;
  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3._countAndFlagsBits = 0xD000000000000030;
  v111._object = (void *)0x80000001004A5660;
  v3._object = (void *)0x80000001004B0F60;
  v4.value._countAndFlagsBits = 0xD000000000000013;
  v4.value._object = (void *)0x80000001004A5640;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v111._countAndFlagsBits = 0xD000000000000018;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v111);

  v7 = objc_msgSend(v1, "mainBundle");
  v8._countAndFlagsBits = 0xD000000000000033;
  v112._object = (void *)0x80000001004A5660;
  v8._object = (void *)0x80000001004B0FA0;
  v9.value._countAndFlagsBits = 0xD000000000000013;
  v9.value._object = (void *)0x80000001004A5640;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v112._countAndFlagsBits = 0xD000000000000018;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v112);

  v12 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  swift_bridgeObjectRetain(v6._object);
  swift_bridgeObjectRetain(v11._object);
  v13 = v12;
  sub_10016CB0C(v6._countAndFlagsBits, (uint64_t)v6._object, v11._countAndFlagsBits, (uint64_t)v11._object, 0x80000001004B0FE0, v13, v105);
  v14 = v105[0];
  v15 = v105[1];
  v16 = v105[2];
  v17 = v105[3];
  v18 = (void *)v105[4];
  v19 = objc_allocWithZone((Class)type metadata accessor for FMSymbolBulletedListItemView());
  v20 = sub_10022D874(v14, v15, v16, v17, v18);
  swift_bridgeObjectRelease(v6._object);
  swift_bridgeObjectRelease(v11._object);

  v21 = v20;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
  v23 = *(char **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v22 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if ((unint64_t)v23 >= v22 >> 1)
    goto LABEL_30;
  while (1)
  {
    v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
    specialized Array._endMutation()(v24);

LABEL_6:
    v25 = v104 + OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_viewModel;
    if ((*(_BYTE *)(v25 + *(int *)(type metadata accessor for FMAccessoryPairingConfirmationCard.ViewModel(0) + 24)) & 1) != 0)
    {
      v26 = (void *)objc_opt_self(NSBundle);
      v27 = objc_msgSend(v26, "mainBundle");
      v28._countAndFlagsBits = 0xD00000000000002BLL;
      v113._object = (void *)((unint64_t)(v0 - 32) | 0x8000000000000000);
      v28._object = (void *)0x80000001004B0EE0;
      v29.value._countAndFlagsBits = 0xD000000000000013;
      v29.value._object = (void *)0x80000001004A5640;
      v30._countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      v113._countAndFlagsBits = 0xD000000000000018;
      v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v113);

      v32 = objc_msgSend(v26, "mainBundle");
      v33._countAndFlagsBits = 0xD00000000000002ELL;
      v114._object = (void *)((unint64_t)(v0 - 32) | 0x8000000000000000);
      v33._object = (void *)0x80000001004B0F10;
      v34.value._countAndFlagsBits = 0xD000000000000013;
      v34.value._object = (void *)0x80000001004A5640;
      v35._countAndFlagsBits = 0;
      v35._object = (void *)0xE000000000000000;
      v114._countAndFlagsBits = 0xD000000000000018;
      v36 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, v34, (NSBundle)v32, v35, v114);

      v37 = objc_msgSend((id)objc_opt_self(UIColor), "systemIndigoColor");
      swift_bridgeObjectRetain(v31._object);
      swift_bridgeObjectRetain(v36._object);
      v38 = v37;
      sub_10016CB0C(v31._countAndFlagsBits, (uint64_t)v31._object, v36._countAndFlagsBits, (uint64_t)v36._object, 0x80000001004B0F40, v38, v106);
      v39 = v106[0];
      v40 = v106[1];
      v41 = v106[2];
      v42 = v106[3];
      v43 = (void *)v106[4];
      v44 = objc_allocWithZone((Class)type metadata accessor for FMSymbolBulletedListItemView());
      v45 = sub_10022D874(v39, v40, v41, v42, v43);
      swift_bridgeObjectRelease(v31._object);
      swift_bridgeObjectRelease(v36._object);

      v46 = v45;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
      v48 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v47 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v48 >= v47 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
      v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v46);
      specialized Array._endMutation()(v49);

      v0 = "FMLocalizedHawkeyeString";
    }
    v50 = (void *)objc_opt_self(NSBundle);
    v51 = objc_msgSend(v50, "mainBundle");
    v52._countAndFlagsBits = 0xD00000000000002ALL;
    v115._object = (void *)((unint64_t)(v0 - 32) | 0x8000000000000000);
    v52._object = (void *)0x80000001004B0DD0;
    v53.value._countAndFlagsBits = 0xD000000000000013;
    v53.value._object = (void *)0x80000001004A5640;
    v54._countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    v115._countAndFlagsBits = 0xD000000000000018;
    v55 = NSLocalizedString(_:tableName:bundle:value:comment:)(v52, v53, (NSBundle)v51, v54, v115);

    v56 = objc_msgSend(v50, "mainBundle");
    v57._countAndFlagsBits = 0xD00000000000002DLL;
    v116._object = (void *)((unint64_t)(v0 - 32) | 0x8000000000000000);
    v57._object = (void *)0x80000001004B0E00;
    v58.value._countAndFlagsBits = 0xD000000000000013;
    v58.value._object = (void *)0x80000001004A5640;
    v59._countAndFlagsBits = 0;
    v59._object = (void *)0xE000000000000000;
    v116._countAndFlagsBits = 0xD000000000000018;
    v60 = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, v58, (NSBundle)v56, v59, v116);

    v103 = (id)objc_opt_self(UIColor);
    v61 = objc_msgSend(v103, "systemRedColor");
    swift_bridgeObjectRetain(v55._object);
    swift_bridgeObjectRetain(v60._object);
    v62 = v61;
    sub_10016CB0C(v55._countAndFlagsBits, (uint64_t)v55._object, v60._countAndFlagsBits, (uint64_t)v60._object, 0x80000001004B0E30, v62, v107);
    v63 = v107[0];
    v64 = v107[1];
    v0 = (const char *)v107[2];
    v65 = v107[3];
    v23 = (char *)v107[4];
    v66 = (objc_class *)type metadata accessor for FMSymbolBulletedListItemView();
    v67 = objc_allocWithZone(v66);
    v68 = sub_10022D874(v63, v64, (uint64_t)v0, v65, v23);
    swift_bridgeObjectRelease(v55._object);
    swift_bridgeObjectRelease(v60._object);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
    v71 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v70 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v71 >= v70 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v70 > 1, v71 + 1, 1);
    v72 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v71, v68);
    specialized Array._endMutation()(v72);
    My = type metadata accessor for Feature.FindMy(0);
    v109 = My;
    v110 = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
    v74 = sub_10003D370(v108);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v74, enum case for Feature.FindMy.itemSharing(_:), My);
    LOBYTE(My) = isFeatureEnabled(_:)(v108);
    sub_100029574(v108);
    if ((My & 1) != 0)
    {
      v0 = (const char *)&unk_1005AA000;
      v75 = objc_msgSend(v50, "mainBundle");
      v76._countAndFlagsBits = 0xD000000000000028;
      v117._object = (void *)0x80000001004A8F80;
      v76._object = (void *)0x80000001004B0E50;
      v77.value._countAndFlagsBits = 0xD000000000000013;
      v77.value._object = (void *)0x80000001004A8F60;
      v78._countAndFlagsBits = 0;
      v78._object = (void *)0xE000000000000000;
      v117._countAndFlagsBits = 0xD000000000000018;
      v79 = NSLocalizedString(_:tableName:bundle:value:comment:)(v76, v77, (NSBundle)v75, v78, v117);

      v80 = objc_msgSend(v50, "mainBundle");
      v81._countAndFlagsBits = 0xD00000000000002BLL;
      v118._object = (void *)0x80000001004A8F80;
      v81._object = (void *)0x80000001004B0E80;
      v82.value._countAndFlagsBits = 0xD000000000000013;
      v82.value._object = (void *)0x80000001004A8F60;
      v83._countAndFlagsBits = 0;
      v83._object = (void *)0xE000000000000000;
      v118._countAndFlagsBits = 0xD000000000000018;
      v84 = NSLocalizedString(_:tableName:bundle:value:comment:)(v81, v82, (NSBundle)v80, v83, v118);

      v85 = objc_msgSend(v103, "systemOrangeColor");
      swift_bridgeObjectRetain(v79._object);
      swift_bridgeObjectRetain(v84._object);
      v86 = v85;
      sub_10016CB0C(v79._countAndFlagsBits, (uint64_t)v79._object, v84._countAndFlagsBits, (uint64_t)v84._object, 0x80000001004B0EB0, v86, v108);
      v87 = v108[0];
      v88 = v108[1];
      v89 = v108[2];
      v90 = v109;
      v91 = (void *)v110;
      v92 = objc_allocWithZone(v66);
      v23 = sub_10022D874(v87, v88, v89, v90, v91);
      swift_bridgeObjectRelease(v79._object);
      swift_bridgeObjectRelease(v84._object);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v93);
      v95 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v94 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v95 >= v94 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v94 > 1, v95 + 1, 1);
      v96 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v95, v23);
      specialized Array._endMutation()(v96);
    }
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      if ((uint64_t)_swiftEmptyArrayStorage < 0)
        v101 = _swiftEmptyArrayStorage;
      else
        v101 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain_n(_swiftEmptyArrayStorage, 2);
      v21 = _CocoaArrayWrapper.endIndex.getter(v101);
      if (!v21)
        return swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 3);
    }
    else
    {
      v21 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(_swiftEmptyArrayStorage, 2);
      if (!v21)
        return swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 3);
    }
    if (v21 >= 1)
      break;
    __break(1u);
LABEL_30:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
  }
  v97 = 0;
  v98 = *(void **)(v104 + OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_featuresView);
  do
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      v99 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v97, _swiftEmptyArrayStorage);
    else
      v99 = (id)_swiftEmptyArrayStorage[v97 + 4];
    v100 = v99;
    ++v97;
    objc_msgSend(v98, "addArrangedSubview:", v99);

  }
  while (v21 != v97);
  return swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 3);
}

void sub_10018DD50()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  NSString v4;
  id v5;
  id v6;
  id v7;

  if (qword_1005D1F68 != -1)
    swift_once(&qword_1005D1F68, sub_100006164);
  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_mapView);
  if (byte_1005F5E31 == 1)
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_mapView), "setDelegate:", v0);
    v2 = type metadata accessor for FMDiscoveredAccessoryAnnotationView();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2);
    if (qword_1005D1C88 != -1)
      swift_once(&qword_1005D1C88, sub_10018C410);
    v4 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "registerClass:forAnnotationViewWithReuseIdentifier:", ObjCClassFromMetadata, v4);

    objc_msgSend(v1, "setHidden:", 0);
    objc_msgSend(v1, "setUserInteractionEnabled:", 0);
    objc_msgSend(v1, "setShowsUserLocation:", 1);
    objc_msgSend(v1, "setUserTrackingMode:", 1);
    v5 = objc_msgSend(v1, "layer");
    objc_msgSend(v5, "setCornerCurve:", kCACornerCurveContinuous);

    v6 = objc_msgSend(v1, "layer");
    v7 = v6;
    if (qword_1005D1C90 != -1)
    {
      swift_once(&qword_1005D1C90, sub_10018C57C);
      v6 = v7;
    }
    objc_msgSend(v6, "setCornerRadius:", *(double *)&qword_1005F5130);

  }
  else
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_mapView), "setHidden:", 1);
  }
}

void sub_10018DF40(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  char v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  id v63;
  id v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  id v87;
  uint64_t v88;

  v2 = v1;
  v85 = a1;
  v83 = type metadata accessor for FMIPItem(0);
  v81 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v78 = v3;
  v79 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C(&qword_1005D9640);
  __chkstk_darwin(v4);
  v77 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v75 = *(_QWORD *)(v6 - 8);
  v76 = v6;
  __chkstk_darwin(v6);
  v74 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100053F2C(&qword_1005D9648);
  v80 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v86 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for FMIPItemImageCacheRequest(0);
  v9 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPItemImageSize(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100056D88(v16, (uint64_t)qword_1005F5748);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMAccessoryPairingConfirmationCard: Attempting to update map view.", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

  v22 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_viewModel];
  v23 = *(void **)(*(_QWORD *)(v22 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  if (v23)
  {
    v24 = *(_QWORD *)(*(_QWORD *)(v22 + 24) + 40);
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for FMIPItemImageSize.infobox(_:), v12);
    swift_retain(v24);
    v25 = v23;
    v26 = objc_msgSend(v2, "traitCollection");
    v27 = objc_msgSend(v26, "userInterfaceStyle");
    v73 = v2;
    v28 = v27;

    v29 = v28 == (id)2;
    v30 = v85;
    sub_100188734((uint64_t)v15, v29, (uint64_t)v11);
    dispatch thunk of FMImageCache.cachedImage(for:completion:)(&v88, v11, 0, 0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v84);
    v31 = swift_release(v24);
    v32 = v88;
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v31);
    if (v32)
    {
      v33 = type metadata accessor for FMLocationShifter(0);
      swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
      v84 = v32;
      v34 = FMLocationShifter.init()();
      v35 = v74;
      v36 = UUID.init()(v34);
      v37 = UUID.uuidString.getter(v36);
      v39 = v38;
      (*(void (**)(char *, uint64_t))(v75 + 8))(v35, v76);
      v40 = type metadata accessor for FMLocationShiftingRequest(0);
      swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
      v41 = v25;
      v42 = FMLocationShiftingRequest.init(identifier:location:)(v37, v39, v41);
      v43 = swift_allocObject(&unk_10054AEA0, 32, 7);
      *(_QWORD *)(v43 + 16) = v34;
      *(_QWORD *)(v43 + 24) = v42;
      v44 = sub_100053F2C((uint64_t *)&unk_1005D9650);
      swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
      v88 = Future.init(_:)(sub_10018F9E0, v43);
      v87 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
      v45 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
      v46 = (uint64_t)v77;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v77, 1, 1, v45);
      v47 = sub_100006C5C(0, (unint64_t *)&qword_1005E5530, NSRunLoop_ptr);
      v48 = sub_10003F774((unint64_t *)&unk_1005D9660, (uint64_t *)&unk_1005D9650, (uint64_t)&protocol conformance descriptor for Future<A, B>);
      v49 = sub_100121168();
      Publisher.receive<A>(on:options:)(&v87, v46, v44, v47, v48, v49);
      sub_10018F9E8(v46);

      swift_release(v88);
      v50 = swift_allocObject(&unk_10054AEC8, 24, 7);
      *(_QWORD *)(v50 + 16) = v41;
      v51 = swift_allocObject(&unk_10054AE28, 24, 7);
      v52 = v73;
      swift_unknownObjectWeakInit(v51 + 16);
      v53 = v81;
      v54 = v30;
      v55 = v79;
      v56 = v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v79, v54, v83);
      v57 = *(unsigned __int8 *)(v53 + 80);
      v58 = (v57 + 24) & ~v57;
      v59 = (v78 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
      v60 = swift_allocObject(&unk_10054AEF0, v59 + 8, v57 | 7);
      *(_QWORD *)(v60 + 16) = v51;
      (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v60 + v58, v55, v56);
      v61 = (void *)v84;
      *(_QWORD *)(v60 + v59) = v84;
      v62 = sub_10003F774((unint64_t *)&unk_1005D9670, &qword_1005D9648, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v63 = v41;
      v64 = v61;
      v65 = v82;
      v66 = v86;
      v67 = Publisher.sink(receiveCompletion:receiveValue:)(sub_10018FA4C, v50, sub_10018FAE4, v60, v82, v62);
      swift_release(v50);
      v68 = swift_release(v60);
      (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v66, v65, v68);
      v69 = *(_QWORD *)&v52[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_mapUpdateCancellable];
      *(_QWORD *)&v52[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_mapUpdateCancellable] = v67;

      swift_release(v69);
      return;
    }

  }
  v70 = Logger.logObject.getter(v21);
  v71 = static os_log_type_t.default.getter(v70);
  if (os_log_type_enabled(v70, v71))
  {
    v72 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v72 = 0;
    _os_log_impl((void *)&_mh_execute_header, v70, v71, "FMAccessoryPairingConfirmationCard: failed to fetch current location current or item icon", v72, 2u);
    swift_slowDealloc(v72, -1, -1);
  }

}

void sub_10018E608(_BYTE *a1, void *a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;

  if ((*a1 & 1) == 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v3 = type metadata accessor for Logger(0);
    sub_100056D88(v3, (uint64_t)qword_1005F5748);
    v10 = a2;
    v4 = Logger.logObject.getter(v10);
    v5 = static os_log_type_t.default.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      v7 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v6 = 138412290;
      v11 = v10;
      v8 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12);
      *v7 = v10;

      _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMAccessoryPairingConfirmationCard: failed to shift location: %@", v6, 0xCu);
      v9 = sub_100053F2C((uint64_t *)&unk_1005D9680);
      swift_arrayDestroy(v7, 1, v9);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);

    }
    else
    {

    }
  }
}

void sub_10018E7C0(void **a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v5;
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  NSObject *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  Class isa;
  double v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  NSObject *v44;
  char v45[24];
  CLLocationCoordinate2D v46;
  MKCoordinateRegion v47;
  MKMapRect v48;
  MKMapRect v49;

  v5 = *a1;
  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v45, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (char *)Strong;
    v9 = v5;
    v10 = FMIPItem.name.getter(v9);
    v12 = v11;
    v13 = (char *)objc_allocWithZone((Class)type metadata accessor for FMDiscoveredAccessoryAnnotation());
    *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMyP33_06C68F60534B37E780B39268674B6CC031FMDiscoveredAccessoryAnnotation_itemImage] = a4;
    v14 = a4;
    objc_msgSend(v9, "coordinate");
    v16 = v15;
    v18 = v17;
    objc_msgSend(v9, "horizontalAccuracy");
    v20 = sub_100143FEC(0, 1, 0, 0, v16, v18, v19);
    v21 = (uint64_t *)((char *)v20 + OBJC_IVAR____TtC6FindMy12FMAnnotation_title);
    v22 = *(uint64_t *)((char *)&v20[1].isa + OBJC_IVAR____TtC6FindMy12FMAnnotation_title);
    *v21 = v10;
    v21[1] = v12;

    swift_bridgeObjectRelease(v22);
    v23 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_mapView;
    v24 = *(id *)&v8[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_mapView];
    isa = (Class)objc_msgSend(v24, "annotations");
    if (!isa)
    {
      v27 = sub_100053F2C(&qword_1005E1120);
      v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v27);
      isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v26 = swift_bridgeObjectRelease(v28).n128_u64[0];
    }
    objc_msgSend(v24, "removeAnnotations:", isa, v26);

    v29 = *(void **)&v8[v23];
    objc_msgSend(v29, "addAnnotation:", v20);
    objc_msgSend(v29, "selectAnnotation:animated:", v20, 0);
    objc_msgSend(v9, "coordinate");
    v47 = MKCoordinateRegionMakeWithDistance(v46, 600.0, 400.0);
    v30 = MKMapRectForCoordinateRegion(objc_msgSend(v29, "regionThatFits:", v47.center.latitude, v47.center.longitude, v47.span.latitudeDelta, v47.span.longitudeDelta));
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v37 = v35 / -5.0;
    v38 = v29;
    v48.origin.x = v30;
    v48.origin.y = v32;
    v48.size.width = v34;
    v48.size.height = v36;
    v49 = MKMapRectOffset(v48, 0.0, v37);
    objc_msgSend(v38, "setVisibleMapRect:", v49.origin.x, v49.origin.y, v49.size.width, v49.size.height);

    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v39 = type metadata accessor for Logger(0);
    v40 = sub_100056D88(v39, (uint64_t)qword_1005F5748);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "FMAccessoryPairingConfirmationCard: Updating map view with item annotation", v43, 2u);
      swift_slowDealloc(v43, -1, -1);
      v44 = v20;
    }
    else
    {
      v44 = v41;
      v41 = v20;
    }

  }
}

double sub_10018EAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  v7 = swift_allocObject(&unk_10054AF18, 32, 7);
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v8 = sub_100053F2C(&qword_1005D2F10);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100481B00;
  *(_QWORD *)(v9 + 32) = a4;
  v12 = v9;
  specialized Array._endMutation()(v9);
  v10 = swift_allocObject(&unk_10054AF40, 32, 7);
  *(_QWORD *)(v10 + 16) = sub_10017F60C;
  *(_QWORD *)(v10 + 24) = v7;
  swift_retain(a2);
  swift_retain(a4);
  dispatch thunk of FMLocationShifter.shift(requests:completion:)(v12, sub_10018FB5C, v10);
  swift_bridgeObjectRelease(v12);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

void sub_10018EBE4(uint64_t a1, void (*a2)(void *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v8))
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(a1);
    a2(0, 1);
    return;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v4)
    goto LABEL_11;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(_QWORD *)(a1 + 32);
    swift_retain(v5);
LABEL_6:
    v6 = swift_bridgeObjectRelease(a1);
    v7 = (void *)FMLocationShiftingRequest.location.getter(v6);
    swift_release(v5);
    v9 = v7;
    a2(v7, 0);

    return;
  }
  __break(1u);
}

uint64_t sub_10018ED2C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for FMAccessoryPairingConfirmationCard.ViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    v4[6] = &unk_100486850;
    v4[7] = &unk_100486850;
    result = swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for FMAccessoryPairingConfirmationCard.ViewModel(uint64_t a1)
{
  return sub_10001DC04(a1, qword_1005D95C8, (uint64_t)&nominal type descriptor for FMAccessoryPairingConfirmationCard.ViewModel);
}

void sub_10018EDD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10018DF40(a2);

  }
}

void sub_10018EE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10018F510(a3);
}

uint64_t *sub_10018EF1C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for FMIPItem(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain(v4);
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v7 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v7;
}

uint64_t sub_10018EFD0(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for FMIPItem(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *sub_10018F018(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for FMIPItem(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain(v6);
  v11(v8, v9, v10);
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *sub_10018F0A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for FMIPItem(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_10018F12C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for FMIPItem(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *sub_10018F1A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for FMIPItem(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10018F224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018F230);
}

uint64_t sub_10018F230(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FMIPItem(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_10018F2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10018F2B8);
}

char *sub_10018F2B8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for FMIPItem(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_10018F32C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for FMIPItem(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

id sub_10018F3B0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  objc_super v14;

  v5 = &v2[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_coordinator];
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_coordinator]);
  v6 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_verticalStackView;
  v7 = objc_allocWithZone((Class)UIStackView);
  v8 = v2;
  *(_QWORD *)&v2[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_featuresView;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMSymbolBulletedListView()), "init");
  v10 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_withYouView;
  *(_QWORD *)&v8[v10] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMAccessoryPairingWithYouLabel()), "init");
  v11 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_mapView;
  *(_QWORD *)&v8[v11] = objc_msgSend(objc_allocWithZone((Class)MKMapView), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_mapUpdateCancellable] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_subscription] = 0;
  swift_unknownObjectWeakAssign(v5, a1);
  sub_10018FB6C(a2, (uint64_t)&v8[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingConfirmationCard_viewModel]);

  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for FMAccessoryPairingConfirmationCard(0);
  v12 = objc_msgSendSuper2(&v14, "initWithContentView:", 0);
  sub_10004FCB8(a2, type metadata accessor for FMAccessoryPairingConfirmationCard.ViewModel);
  return v12;
}

void sub_10018F510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD aBlock[5];
  uint64_t v49;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v47 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v42 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  v44 = a1;
  v13 = FMIPItem.identifier.getter(v12);
  v15 = v14;
  v43 = v2;
  v16 = type metadata accessor for FMAccessoryPairingConfirmationCard.ViewModel(0);
  v17 = FMIPItem.identifier.getter(v16);
  if (v13 == v17 && v15 == v18)
  {
    swift_bridgeObjectRelease_n(v15, 2);
  }
  else
  {
    v20 = v18;
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v17, v18, 0);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v20);
    if ((v21 & 1) == 0)
      return;
  }
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v41 = v4;
  v22 = type metadata accessor for Logger(0);
  v23 = sub_100056D88(v22, (uint64_t)qword_1005F5748);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMAccessoryPairingConfirmationCard: Received item image.", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }

  v27 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v28 = (void *)static OS_dispatch_queue.main.getter(v27);
  v29 = swift_allocObject(&unk_10054AE28, 24, 7);
  swift_unknownObjectWeakInit(v29 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v44, v9);
  v30 = *(unsigned __int8 *)(v10 + 80);
  v31 = (v30 + 24) & ~v30;
  v32 = swift_allocObject(&unk_10054AE50, v31 + v11, v30 | 7);
  *(_QWORD *)(v32 + 16) = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v32 + v31, (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_10018F984;
  v49 = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10054AE68;
  v33 = _Block_copy(aBlock);
  swift_release(v49);
  static DispatchQoS.unspecified.getter(v34);
  aBlock[0] = _swiftEmptyArrayStorage;
  v35 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v36 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v37 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  v38 = v41;
  v39 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v36, v37, v41, v35);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v39, v33);
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v39, v38);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v46);
}

uint64_t sub_10018F8EC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018F910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMIPItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10018F984()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPItem(0) - 8) + 80);
  sub_10018EDD8(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_10018F9B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10018F9E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10018EAF0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10018F9E8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100053F2C(&qword_1005D9640);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10018FA28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10018FA4C(_BYTE *a1)
{
  uint64_t v1;

  sub_10018E608(a1, *(void **)(v1 + 16));
}

uint64_t sub_10018FA54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for FMIPItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10018FAE4(void **a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for FMIPItem(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_10018E7C0(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10018FB38()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10018FB5C(uint64_t a1)
{
  uint64_t v1;

  sub_10018EBE4(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

void sub_10018FB64(uint64_t a1)
{
  uint64_t v1;

  sub_10018CCE0(a1, v1);
}

uint64_t sub_10018FB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMAccessoryPairingConfirmationCard.ViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for FMAccessoryPairingConfirmationCard.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10018FBF0 + 4 * byte_1004867A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10018FC10 + 4 * byte_1004867A5[v4]))();
}

_BYTE *sub_10018FBF0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10018FC10(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10018FC18(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10018FC20(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10018FC28(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10018FC30(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FMAccessoryPairingConfirmationCard.Error()
{
  return &type metadata for FMAccessoryPairingConfirmationCard.Error;
}

unint64_t sub_10018FC50()
{
  unint64_t result;

  result = qword_1005D9698;
  if (!qword_1005D9698)
  {
    result = swift_getWitnessTable(&unk_100486928, &type metadata for FMAccessoryPairingConfirmationCard.Error);
    atomic_store(result, (unint64_t *)&qword_1005D9698);
  }
  return result;
}

void sub_10018FCC4()
{
  char *v0;
  id v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMRemoveItemViewController(0);
  objc_msgSendSuper2(&v2, "viewDidLoad");
  sub_1001900A4();
  sub_1001917C0();
  v1 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "removeItem");
  objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView]+ OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton), "addGestureRecognizer:", v1);

  sub_100194C7C();
}

double sub_10018FD9C(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  _BYTE v15[24];
  objc_super v16;

  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for FMRemoveItemViewController(0);
  objc_msgSendSuper2(&v16, "viewWillAppear:", a1 & 1);
  v3 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_mediator] + 56);
  v4 = type metadata accessor for FMSelectionSubscription(0);
  v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v6 = v5 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v6 + 8) = 0;
  swift_unknownObjectWeakInit(v6);
  swift_retain(v3);
  v7 = v1;
  UUID.init()(v7);
  v8 = v5 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v8 + 8) = &off_10054B158;
  swift_unknownObjectWeakAssign(v8, v7);

  swift_beginAccess(v3 + 16, v15, 33, 0);
  v9 = swift_retain(v5);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v11 = *(_QWORD *)((*(_QWORD *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v10 = *(_QWORD *)((*(_QWORD *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v11 >= v10 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
  v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v5);
  specialized Array._endMutation()(v12);
  swift_endAccess(v15);
  swift_release(v3);
  v13 = *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_selectionSubscription];
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_selectionSubscription] = v5;
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

void sub_10018FF40(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  objc_super v11;

  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for FMRemoveItemViewController(0);
  objc_msgSendSuper2(&v11, "viewWillDisappear:", a1 & 1);
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_selectionSubscription];
  if (v3)
  {
    v4 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_mediator] + 56);
    swift_beginAccess(v4 + 16, v10, 33, 0);
    swift_retain(v3);
    swift_retain(v4);
    v5 = sub_100334CE8((uint64_t *)(v4 + 16), v3);
    v6 = v5;
    v7 = *(_QWORD *)(v4 + 16);
    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0)
        v9 = *(_QWORD *)(v4 + 16);
      else
        v9 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v4 + 16));
      v8 = _CocoaArrayWrapper.endIndex.getter(v9);
      swift_bridgeObjectRelease(v7);
      if (v8 >= v6)
        goto LABEL_4;
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v8 >= v5)
      {
LABEL_4:
        sub_100200704(v6, v8);
        swift_endAccess(v10);
        swift_release(v3);
        swift_release(v4);
        return;
      }
    }
    __break(1u);
  }
}

void sub_1001900A4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  id v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  __n128 v49;
  void **p_cache;
  uint64_t v51;
  void *v52;
  char *v53;
  id v54;
  uint64_t v55;
  void *v56;
  id v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  void **v61;
  void *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char v67;
  void *v68;
  char *v69;
  id v70;
  Swift::String v71;
  Swift::String_optional v72;
  Swift::String v73;
  Swift::String v74;
  uint64_t countAndFlagsBits;
  void *object;
  void *v77;
  Swift::String_optional v78;
  Swift::String v79;
  Swift::String v80;
  Swift::String v81;
  uint64_t *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  id v86;
  double v87;
  NSString v88;
  id *v89;
  void *v90;
  void *v91;
  char *v92;
  id v93;
  Swift::String v94;
  Swift::String_optional v95;
  Swift::String v96;
  Swift::String v97;
  Swift::String *v98;
  uint64_t v99;
  void *v100;
  void *v101;
  id v102;
  double v103;
  NSString v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  __n128 v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  id v121;
  uint64_t *v122;
  uint64_t v123;
  char *v124;
  void *v125;
  uint64_t v126;
  id v127;
  double v128;
  NSString v129;
  id v130;
  void *v131;
  id v132;
  id v133;
  void *v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  id v146;
  char *v147;
  uint64_t (*v148)(char *, uint64_t, uint64_t);
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  id v154;
  uint64_t v155;
  char v156[32];
  Swift::String v157;
  Swift::String v158;
  Swift::String v159;

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D6DB8);
  __chkstk_darwin(v2);
  v150 = (char *)&v136 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FMIPPerson(0);
  v151 = *(_QWORD *)(v4 - 8);
  v152 = v4;
  __chkstk_darwin(v4);
  v147 = (char *)&v136 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D9640);
  __chkstk_darwin(v6);
  v138 = (char *)&v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D6DB0);
  v140 = *(_QWORD *)(v8 - 8);
  v141 = v8;
  __chkstk_darwin(v8);
  v139 = (char *)&v136 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMIPProductType(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v136 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v15 = __chkstk_darwin(v14);
  v149 = (uint64_t)&v136 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v136 - v17;
  v19 = type metadata accessor for FMIPItem(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v142 = (char *)&v136 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v24 = (char *)&v136 - v23;
  v25 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v1, "cancel");
  v26 = objc_msgSend(v1, "navigationItem");
  v146 = v25;
  objc_msgSend(v26, "setLeftBarButtonItem:", v25);

  v27 = (uint64_t)&v1[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove], v156, 0, 0);
  sub_1000E5B2C(v27, (uint64_t)v18);
  v148 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v28 = v148(v18, 1, v19);
  v153 = v1;
  v144 = v11;
  v145 = v10;
  v143 = v13;
  if (v28 == 1)
  {
    sub_1000051EC((uint64_t)v18, (uint64_t *)&unk_1005D3AA0);
  }
  else
  {
    v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))(v24, v18, v19);
    v30 = FMIPItem.productType.getter(v29);
    v31 = FMIPProductType.isAccessory.getter(v30);
    v32 = *(void (**)(char *, uint64_t))(v11 + 8);
    v32(v13, v10);
    if ((v31 & 1) != 0)
    {
      v33 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_mediator] + 64);
      v34 = swift_retain(v33);
      FMIPItem.productType.getter(v34);
      v35 = sub_10016E170((uint64_t)v13, 1);
      v32(v13, v10);
      swift_release(v33);
      v137 = v35;
      v155 = v35;
      v36 = (void *)objc_opt_self(NSRunLoop);
      swift_retain(v35);
      v154 = objc_msgSend(v36, "mainRunLoop");
      v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
      v38 = (uint64_t)v138;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v138, 1, 1, v37);
      v136 = sub_100053F2C(&qword_1005D6DC0);
      v39 = sub_100006C5C(0, (unint64_t *)&qword_1005E5530, NSRunLoop_ptr);
      v40 = sub_10003F774((unint64_t *)&unk_1005D7E70, &qword_1005D6DC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v41 = sub_100121168();
      v42 = v139;
      Publisher.receive<A>(on:options:)(&v154, v38, v136, v39, v40, v41);
      sub_1000051EC(v38, &qword_1005D9640);

      swift_release(v155);
      v43 = swift_allocObject(&unk_10054B3B0, 24, 7);
      swift_unknownObjectWeakInit(v43 + 16);
      v44 = sub_10003F774(&qword_1005D6DC8, &qword_1005D6DB0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v45 = v141;
      v46 = Publisher.sink(receiveCompletion:receiveValue:)(State.rawValue.getter, 0, sub_100195EE8, v43, v141, v44);
      v47 = swift_release(v43);
      (*(void (**)(char *, uint64_t, __n128))(v140 + 8))(v42, v45, v47);
      v48 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_imageFetchingCancellable];
      *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_imageFetchingCancellable] = v46;
      swift_release(v137);
      v49 = swift_release(v48);
      (*(void (**)(char *, uint64_t, __n128))(v20 + 8))(v24, v19, v49);
      p_cache = (void **)(&OBJC_METACLASS____TtC6FindMy19FMActionLandingView + 16);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v19);
  }
  p_cache = &OBJC_METACLASS____TtC6FindMy19FMActionLandingView.cache;
  v51 = OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView;
  v52 = *(void **)&v1[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView];
  sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  v53 = v52;
  v54 = sub_100342FA4(6775124, 0xE300000000000000, 6778480, 0xE300000000000000);
  v55 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImage;
  v56 = *(void **)&v53[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImage];
  *(_QWORD *)&v53[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImage] = v54;
  v57 = v54;

  v1 = v153;
  objc_msgSend(*(id *)&v53[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImageView], "setImage:", *(_QWORD *)&v53[v55]);

  v58 = *(_BYTE **)&v1[v51];
  v58[OBJC_IVAR____TtC6FindMy19FMActionLandingView_usesB389Adjustments] = 1;
  v59 = v58;
  sub_100182274();

LABEL_7:
  v60 = v149;
  sub_1000E5B2C(v27, v149);
  if (v148((char *)v60, 1, v19))
  {
    sub_1000051EC(v60, (uint64_t *)&unk_1005D3AA0);
    v61 = (void **)((char *)p_cache[216] + (_QWORD)v1);
    v62 = *v61;
  }
  else
  {
    v63 = v142;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v142, v60, v19);
    v64 = sub_1000051EC(v60, (uint64_t *)&unk_1005D3AA0);
    v65 = v143;
    FMIPItem.productType.getter(v64);
    v66 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v63, v19);
    v67 = FMIPProductType.isAccessory.getter(v66);
    (*(void (**)(char *, uint64_t))(v144 + 8))(v65, v145);
    v61 = (void **)((char *)p_cache[216] + (_QWORD)v1);
    v62 = *v61;
    if ((v67 & 1) != 0)
    {
      v68 = (void *)objc_opt_self(NSBundle);
      v69 = v62;
      v70 = objc_msgSend(v68, "mainBundle");
      v71._countAndFlagsBits = 0xD000000000000016;
      v157._countAndFlagsBits = 0xD000000000000018;
      v157._object = (void *)0x80000001004A5660;
      v71._object = (void *)0x80000001004B1140;
      v72.value._object = (void *)0x80000001004A5640;
      v72.value._countAndFlagsBits = 0xD000000000000013;
      v73._countAndFlagsBits = 0;
      v73._object = (void *)0xE000000000000000;
      v74 = NSLocalizedString(_:tableName:bundle:value:comment:)(v71, v72, (NSBundle)v70, v73, v157);
      countAndFlagsBits = v74._countAndFlagsBits;
      object = v74._object;
      goto LABEL_12;
    }
  }
  v77 = (void *)objc_opt_self(NSBundle);
  v69 = v62;
  v70 = objc_msgSend(v77, "mainBundle");
  v78.value._countAndFlagsBits = 0xD000000000000010;
  v79._countAndFlagsBits = 0xD000000000000011;
  v158._countAndFlagsBits = 0xD000000000000015;
  v158._object = (void *)0x80000001004ADC20;
  v79._object = (void *)0x80000001004B1160;
  v78.value._object = (void *)0x80000001004ADC00;
  v80._countAndFlagsBits = 0;
  v80._object = (void *)0xE000000000000000;
  v81 = NSLocalizedString(_:tableName:bundle:value:comment:)(v79, v78, (NSBundle)v70, v80, v158);
  countAndFlagsBits = v81._countAndFlagsBits;
  object = v81._object;
LABEL_12:

  v82 = (uint64_t *)&v69[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title];
  v83 = *(_QWORD *)&v69[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title + 8];
  *v82 = countAndFlagsBits;
  v82[1] = (uint64_t)object;
  swift_bridgeObjectRelease(v83);
  v84 = *(void **)&v69[OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel];
  v85 = v82[1];
  v86 = v84;
  if (v85)
  {
    swift_bridgeObjectRetain(v85);
    v88 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v87 = swift_bridgeObjectRelease(v85).n128_u64[0];
  }
  else
  {
    v88 = 0;
  }
  objc_msgSend(v84, "setText:", v88, v87);

  v89 = v61;
  v90 = *v61;
  v91 = (void *)objc_opt_self(NSBundle);
  v92 = v90;
  v93 = objc_msgSend(v91, "mainBundle");
  v94._countAndFlagsBits = 0xD000000000000017;
  v159._countAndFlagsBits = 0xD000000000000018;
  v159._object = (void *)0x80000001004A5660;
  v94._object = (void *)0x80000001004B14B0;
  v95.value._object = (void *)0x80000001004A5640;
  v95.value._countAndFlagsBits = 0xD000000000000013;
  v96._countAndFlagsBits = 0;
  v96._object = (void *)0xE000000000000000;
  v97 = NSLocalizedString(_:tableName:bundle:value:comment:)(v94, v95, (NSBundle)v93, v96, v159);

  v98 = (Swift::String *)&v92[OBJC_IVAR____TtC6FindMy19FMActionLandingView_action];
  v99 = *(_QWORD *)&v92[OBJC_IVAR____TtC6FindMy19FMActionLandingView_action + 8];
  *v98 = v97;
  swift_bridgeObjectRelease(v99);
  v100 = *(void **)(*(_QWORD *)&v92[OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton]
                  + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  v101 = v98->_object;
  v102 = v100;
  if (v101)
  {
    swift_bridgeObjectRetain(v101);
    v104 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v103 = swift_bridgeObjectRelease(v101).n128_u64[0];
  }
  else
  {
    v104 = 0;
  }
  v105 = v153;
  objc_msgSend(v100, "setText:", v104, v103);

  v106 = *(_QWORD *)(*(_QWORD *)&v105[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_mediator] + 24);
  v107 = swift_retain(v106);
  v108 = v150;
  FMIPManager.owner.getter(v107);
  v110 = v151;
  v109 = v152;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48))(v108, 1, v152) == 1)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v111 = v147;
  (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v147, v108, v109);
  v112 = swift_release(v106);
  v113 = FMIPPerson.username.getter(v112);
  v115 = v114;
  (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v109);
  swift_bridgeObjectRetain(v115);
  v116 = sub_1003C06A0(v113, v115, 0);
  v118 = v117;
  swift_bridgeObjectRelease(v115);
  swift_bridgeObjectRelease(v118);
  if ((v116 & 1) != 0)
  {
    v113 = sub_1000F2BA4(v113, v115);
    v120 = v119;
    swift_bridgeObjectRelease(v115);
    v115 = v120;
  }
  v121 = *v89;
  v122 = (uint64_t *)((char *)*v89 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceOwner);
  v123 = v122[1];
  *v122 = v113;
  v122[1] = v115;
  v124 = (char *)v121;
  swift_bridgeObjectRelease(v123);
  v125 = *(void **)&v124[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceOwnerLabel];
  v126 = v122[1];
  v127 = v125;
  if (v126)
  {
    swift_bridgeObjectRetain(v126);
    v129 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v128 = swift_bridgeObjectRelease(v126).n128_u64[0];
  }
  else
  {
    v129 = 0;
  }
  objc_msgSend(v125, "setText:", v129, v128);

  sub_100190D64();
  v130 = objc_msgSend(v105, "view");
  if (!v130)
    goto LABEL_28;
  v131 = v130;
  v132 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v131, "setBackgroundColor:", v132);

  v133 = objc_msgSend(v105, "view");
  if (v133)
  {
    v134 = v133;
    v135 = *v89;
    objc_msgSend(v134, "addSubview:", v135);

    return;
  }
LABEL_29:
  __break(1u);
}

void sub_100190CA8(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  _BYTE v10[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (char *)*(id *)(Strong + OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView);

    v7 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImage;
    v8 = *(void **)&v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImage];
    *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImage] = v2;
    v9 = v2;

    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImageView], "setImage:", *(_QWORD *)&v6[v7]);
  }
}

void sub_100190D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  Swift::String v23;
  Swift::String_optional v24;
  Swift::String v25;
  Swift::String v26;
  void *v27;
  id v28;
  Swift::String v29;
  Swift::String_optional v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  Swift::String v38;
  Swift::String_optional v39;
  Swift::String v40;
  uint64_t v41;
  Swift::String v42;
  void *v43;
  id v44;
  Swift::String v45;
  Swift::String_optional v46;
  Swift::String v47;
  Swift::String v48;
  id v49;
  id v50;
  Swift::String v51;
  Swift::String_optional v52;
  Swift::String v53;
  Swift::String v54;
  uint64_t v55;
  void *object;
  void *v57;
  uint64_t v58;
  char *v59;
  uint64_t *v60;
  uint64_t v61;
  char *v62;
  void *v63;
  uint64_t v64;
  id v65;
  double v66;
  NSString v67;
  uint64_t v68;
  const char *v69;
  char *v70;
  uint64_t v71;
  id v72;
  Swift::String v73;
  Swift::String_optional v74;
  Swift::String v75;
  void *v76;
  void *v77;
  NSString v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  void *v89;
  uint64_t v90;
  uint64_t inited;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  id v101;
  uint64_t v102;
  void *v103;
  void *v104;
  char *v105;
  uint64_t v106;
  const char *v107;
  uint64_t countAndFlagsBits;
  uint64_t v109;
  id v110;
  unint64_t v111;
  uint64_t (*v112)(char *, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  id v127;
  __int128 v128;
  __int128 v129;
  id v130;
  __int128 v131;
  _OWORD v132[2];
  Swift::String v133;
  Swift::String v134;
  Swift::String v135;
  Swift::String v136;
  Swift::String v137;
  Swift::String v138;

  v1 = type metadata accessor for FMIPProductType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v102 - v10;
  v12 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v13 = __chkstk_darwin(v12);
  v114 = (uint64_t)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v102 - v15;
  v117 = v0;
  v17 = v0 + OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove;
  swift_beginAccess(v17, &v120, 0, 0);
  sub_1000E5B2C(v17, (uint64_t)v16);
  v112 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v18 = v112(v16, 1, v5);
  v115 = v5;
  v105 = v9;
  v106 = v6;
  v113 = v17;
  if (v18)
  {
    sub_1000051EC((uint64_t)v16, (uint64_t *)&unk_1005D3AA0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v16, v5);
    v19 = sub_1000051EC((uint64_t)v16, (uint64_t *)&unk_1005D3AA0);
    FMIPItem.productType.getter(v19);
    v20 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    v21 = FMIPProductType.isAccessory.getter(v20);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if ((v21 & 1) != 0)
    {
      v116 = 1;
      goto LABEL_6;
    }
  }
  v116 = 0;
LABEL_6:
  v22 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v23._countAndFlagsBits = 0xD00000000000001CLL;
  v107 = "Localizable-HAWKEYE";
  v138._object = (void *)0x80000001004A5660;
  v23._object = (void *)0x80000001004B1320;
  v111 = (unint64_t)"CLEAR_TAGS_BUTTON";
  v24.value._countAndFlagsBits = 0xD000000000000013;
  v24.value._object = (void *)0x80000001004A5640;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v133._countAndFlagsBits = 0xD000000000000018;
  v109 = 0xD000000000000018;
  v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v133);

  v27 = (void *)objc_opt_self(NSBundle);
  v28 = objc_msgSend(v27, "mainBundle");
  v29._countAndFlagsBits = 0xD00000000000001FLL;
  v103 = (void *)0x80000001004A5660;
  v138._object = (void *)0x80000001004A5660;
  v29._object = (void *)0x80000001004B1340;
  v30.value._countAndFlagsBits = 0xD000000000000013;
  v104 = (void *)0x80000001004A5640;
  v30.value._object = (void *)0x80000001004A5640;
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v134._countAndFlagsBits = 0xD000000000000018;
  v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v134);

  v110 = (id)objc_opt_self(UIColor);
  sub_10016CB0C(v32._countAndFlagsBits, (uint64_t)v32._object, v26._countAndFlagsBits, (uint64_t)v26._object, 0xEC000000656C6372, objc_msgSend(v110, "systemPinkColor"), &v121);
  if (v116)
    v33 = 0xD000000000000023;
  else
    v33 = 0xD000000000000025;
  if (v116)
    v34 = 0xD000000000000029;
  else
    v34 = 0xD00000000000002BLL;
  if (v116)
    v35 = (void *)0x80000001004B1480;
  else
    v35 = (void *)0x80000001004B1390;
  if (v116)
    v36 = (void *)0x80000001004B1450;
  else
    v36 = (void *)0x80000001004B1360;
  v37 = objc_msgSend(v27, "mainBundle");
  v138._object = (void *)0x80000001004A8F80;
  v38._countAndFlagsBits = v33;
  v38._object = v36;
  v39.value._countAndFlagsBits = 0xD000000000000013;
  v39.value._object = (void *)0x80000001004A8F60;
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  v41 = v109;
  v135._countAndFlagsBits = v109;
  v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, v39, (NSBundle)v37, v40, v135);
  countAndFlagsBits = v42._countAndFlagsBits;
  swift_bridgeObjectRelease(v36);

  v43 = v27;
  v44 = objc_msgSend(v27, "mainBundle");
  v138._object = (void *)0x80000001004A8F80;
  v45._countAndFlagsBits = v34;
  v45._object = v35;
  v46.value._countAndFlagsBits = 0xD000000000000013;
  v46.value._object = (void *)0x80000001004A8F60;
  v47._countAndFlagsBits = 0;
  v47._object = (void *)0xE000000000000000;
  v136._countAndFlagsBits = v41;
  v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, v46, (NSBundle)v44, v47, v136);
  swift_bridgeObjectRelease(v35);

  v49 = objc_msgSend(v110, "systemGreenColor");
  sub_10016CB0C(countAndFlagsBits, (uint64_t)v42._object, v48._countAndFlagsBits, (uint64_t)v48._object, 0x80000001004B13C0, v49, &v124);
  if (v116)
  {
    v50 = objc_msgSend(v27, "mainBundle");
    v51._countAndFlagsBits = 0xD000000000000021;
    v138._object = v103;
    v51._object = (void *)0x80000001004B1420;
    v52.value._countAndFlagsBits = 0xD000000000000013;
    v52.value._object = v104;
    v53._countAndFlagsBits = 0;
    v53._object = (void *)0xE000000000000000;
    v137._countAndFlagsBits = v41;
    v54 = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, v52, (NSBundle)v50, v53, v137);
    v55 = v54._countAndFlagsBits;
    object = v54._object;

  }
  else
  {
    v55 = sub_1001DE23C(0xD000000000000014, (void *)0x80000001004B13E0);
    object = v57;
  }
  v58 = OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView;
  v59 = *(char **)(v117 + OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView);
  v60 = (uint64_t *)&v59[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnote];
  v61 = *(_QWORD *)&v59[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnote + 8];
  *v60 = v55;
  v60[1] = (uint64_t)object;
  v62 = v59;
  swift_bridgeObjectRelease(v61);
  v63 = *(void **)&v62[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnoteLabel];
  v64 = v60[1];
  v65 = v63;
  if (v64)
  {
    swift_bridgeObjectRetain(v64);
    v67 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v66 = swift_bridgeObjectRelease(v64).n128_u64[0];
  }
  else
  {
    v67 = 0;
  }
  v68 = v117;
  v69 = v107;
  objc_msgSend(v63, "setText:", v67, v66);

  v70 = (char *)objc_retain(*(id *)(*(_QWORD *)(v68 + v58)
                                  + OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView));
  v71 = v68;
  v72 = objc_msgSend(v43, "mainBundle");
  v138._countAndFlagsBits = 0xD000000000000018;
  v73._countAndFlagsBits = 0xD00000000000001ELL;
  v138._object = (void *)((unint64_t)v69 | 0x8000000000000000);
  v73._object = (void *)0x80000001004B1400;
  v74.value._object = (void *)(v111 | 0x8000000000000000);
  v74.value._countAndFlagsBits = 0xD000000000000013;
  v75._countAndFlagsBits = 0;
  v75._object = (void *)0xE000000000000000;
  v76 = NSLocalizedString(_:tableName:bundle:value:comment:)(v73, v74, (NSBundle)v72, v75, v138)._object;

  v77 = *(void **)(*(_QWORD *)&v70[OBJC_IVAR____TtC6FindMy24FMSymbolBulletedListView_headerView]
                 + OBJC_IVAR____TtC6FindMy30FMSymbolBulletedListHeaderView_titleLabel);
  v78 = String._bridgeToObjectiveC()();
  objc_msgSend(v77, "setText:", v78, swift_bridgeObjectRelease(v76).n128_f64[0]);

  v79 = v114;
  sub_1000E5B2C(v113, v114);
  v80 = v115;
  if (v112((char *)v79, 1, v115) == 1)
  {
    sub_1000051EC(v79, (uint64_t *)&unk_1005D3AA0);
  }
  else
  {
    v81 = v105;
    v82 = v106;
    v83 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v106 + 32))(v105, v79, v80);
    v84 = *(_QWORD *)(*(_QWORD *)(v71 + OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_mediator) + 24);
    v85 = *(_QWORD *)(v84 + 64);
    __chkstk_darwin(v83);
    v138._object = v81;
    swift_retain(v84);
    swift_bridgeObjectRetain(v85);
    v86 = sub_1003DBDB4((uint64_t (*)(_QWORD))sub_100195EA8, (uint64_t)(&v102 - 4), v85);
    swift_release(v84);
    v87 = *(_QWORD *)(v86 + 16);
    v88 = swift_bridgeObjectRelease(v86);
    if (v87)
    {
      v89 = *(void **)(*(_QWORD *)(v71 + v58) + OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView);
      v90 = sub_100053F2C((uint64_t *)&unk_1005D67E8);
      inited = swift_initStackObject(v90, &v118);
      *(_OWORD *)(inited + 16) = xmmword_100481730;
      v131 = v122;
      v132[0] = v121;
      sub_100195DC0((uint64_t)&v123, (uint64_t)&v130);
      v92 = v123;
      v93 = v122;
      *(_OWORD *)(inited + 32) = v121;
      *(_OWORD *)(inited + 48) = v93;
      *(_QWORD *)(inited + 64) = v92;
      v128 = v125;
      v129 = v124;
      sub_100195DC0((uint64_t)&v126, (uint64_t)&v127);
      v94 = v125;
      *(_OWORD *)(inited + 72) = v124;
      *(_OWORD *)(inited + 88) = v94;
      *(_QWORD *)(inited + 104) = v126;
      v95 = v89;
      sub_100195E08((uint64_t)v132);
      sub_100195E08((uint64_t)&v131);
      sub_100195E30(&v130);
      sub_100195E08((uint64_t)&v129);
      sub_100195E08((uint64_t)&v128);
      sub_100195E30(&v127);
      sub_1002FC5CC(inited);
      swift_setDeallocating(inited);
      swift_arrayDestroy(inited + 32, 2, &type metadata for FMSymbolBulletedListItem);

      sub_100195E58((uint64_t)&v129);
      sub_100195E58((uint64_t)&v128);
      sub_100195E80(&v127);
      sub_100195E58((uint64_t)v132);
      sub_100195E58((uint64_t)&v131);
      sub_100195E80(&v130);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v80);
      return;
    }
    (*(void (**)(char *, uint64_t, __n128))(v82 + 8))(v81, v80, v88);
  }
  v96 = *(void **)(*(_QWORD *)(v117 + v58) + OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView);
  v97 = sub_100053F2C((uint64_t *)&unk_1005D67E8);
  v98 = swift_initStackObject(v97, &v119);
  *(_OWORD *)(v98 + 16) = xmmword_100481740;
  v131 = v122;
  v132[0] = v121;
  sub_100195DC0((uint64_t)&v123, (uint64_t)&v130);
  v99 = v123;
  v100 = v122;
  *(_OWORD *)(v98 + 32) = v121;
  *(_OWORD *)(v98 + 48) = v100;
  *(_QWORD *)(v98 + 64) = v99;
  v101 = v96;
  sub_100195E08((uint64_t)v132);
  sub_100195E08((uint64_t)&v131);
  sub_100195E30(&v130);
  sub_1002FC5CC(v98);
  sub_100195E58((uint64_t)v132);
  sub_100195E58((uint64_t)&v131);
  sub_100195E80(&v130);
  v129 = v124;
  sub_100195E58((uint64_t)&v129);
  v128 = v125;
  sub_100195E58((uint64_t)&v128);
  sub_100195DC0((uint64_t)&v126, (uint64_t)&v127);
  sub_100195E80(&v127);
  swift_setDeallocating(v98);
  swift_arrayDestroy(v98 + 32, 1, &type metadata for FMSymbolBulletedListItem);

}

void sub_1001917C0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  Class isa;

  v1 = OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = sub_100053F2C(&qword_1005D2F10);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100481720;
  v4 = objc_msgSend(*(id *)&v0[v1], "topAnchor");
  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "topAnchor");

  v8 = objc_msgSend(v4, "constraintEqualToAnchor:", v7);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = objc_msgSend(*(id *)&v0[v1], "bottomAnchor");
  v10 = objc_msgSend(v0, "view");
  if (!v10)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, "bottomAnchor");

  v13 = objc_msgSend(v9, "constraintEqualToAnchor:", v12);
  *(_QWORD *)(v3 + 40) = v13;
  v14 = objc_msgSend(*(id *)&v0[v1], "leadingAnchor");
  v15 = objc_msgSend(v0, "view");
  if (!v15)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, "leadingAnchor");

  v18 = objc_msgSend(v14, "constraintEqualToAnchor:", v17);
  *(_QWORD *)(v3 + 48) = v18;
  v19 = objc_msgSend(*(id *)&v0[v1], "trailingAnchor");
  v20 = objc_msgSend(v0, "view");
  if (v20)
  {
    v21 = v20;
    v22 = (void *)objc_opt_self(NSLayoutConstraint);
    v23 = objc_msgSend(v21, "trailingAnchor");

    v24 = objc_msgSend(v19, "constraintEqualToAnchor:", v23);
    *(_QWORD *)(v3 + 56) = v24;
    specialized Array._endMutation()(v25);
    sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v22, "activateConstraints:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100191AA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  char *v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  id v33;
  char *v34;
  uint64_t v35;
  char v36;
  id v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  const char *v41;
  unint64_t v42;
  unint64_t v43;
  Swift::String v44;
  Swift::String v45;
  uint64_t v46;
  id v47;
  void *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  __n128 v57;
  unint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t countAndFlagsBits;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  _BYTE v68[24];
  char v69[24];
  char v70[24];

  v0 = type metadata accessor for FMIPProductType(0);
  v61 = *(_QWORD *)(v0 - 8);
  countAndFlagsBits = v0;
  __chkstk_darwin(v0);
  v60 = (char *)&v59 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for FMIPItem(0);
  v66 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v65 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = v4;
  __chkstk_darwin(v3);
  v64 = (char *)&v59 - v5;
  v6 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v59 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v59 - v16;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v18 = type metadata accessor for Logger(0);
  v19 = sub_100056D88(v18, (uint64_t)qword_1005F5748);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "FMRemoveItemViewController: Remove item button pressed", v22, 2u);
    swift_slowDealloc(v22, -1, -1);
  }

  v23 = &v67[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove];
  swift_beginAccess(&v67[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove], v70, 0, 0);
  sub_1000E5B2C((uint64_t)v23, (uint64_t)v17);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
  v25 = v24(v17, 1, v2);
  sub_1000051EC((uint64_t)v17, (uint64_t *)&unk_1005D3AA0);
  if (v25 == 1)
  {
    v26 = *(_QWORD *)(*(_QWORD *)&v67[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_mediator] + 56)
        + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v26, v69, 0, 0);
    sub_100024F3C(v26, (uint64_t)v8);
    if (swift_getEnumCaseMultiPayload(v8, v6) == 3)
    {
      v27 = v66;
      v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v64, v8, v2);
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v15, v28, v2);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v15, 0, 1, v2);
      swift_beginAccess(v23, v68, 33, 0);
      sub_1000BB4FC((uint64_t)v15, (uint64_t)v23);
      swift_endAccess(v68);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v2);
    }
    else
    {
      sub_100024F00((uint64_t)v8);
    }
  }
  sub_1000E5B2C((uint64_t)v23, (uint64_t)v12);
  if (v24(v12, 1, v2) == 1)
  {
    v29 = sub_1000051EC((uint64_t)v12, (uint64_t *)&unk_1005D3AA0);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "FMRemoveItemViewController: Can't remove an unkown item", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }

  }
  else
  {
    v59 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
    v59(v65, v12, v2);
    v33 = objc_msgSend(v67, "setModalInPresentation:", 1);
    v34 = v60;
    v35 = FMIPItem.productType.getter(v33);
    v36 = FMIPProductType.isAccessory.getter(v35);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v34, countAndFlagsBits);
    v37 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    if ((v36 & 1) != 0)
    {
      v38 = 0xD000000000000013;
      v39 = 0xD000000000000018;
      v58 = 0x80000001004A5660;
      v40 = 0x80000001004B1200;
      v41 = "Localizable-HAWKEYE";
    }
    else
    {
      v38 = 0xD000000000000010;
      v39 = 0xD000000000000015;
      v58 = 0x80000001004ADC20;
      v40 = 0x80000001004B1200;
      v41 = "Localizable-B389";
    }
    v42 = (unint64_t)(v41 - 32) | 0x8000000000000000;
    v43 = 0xD000000000000020;
    v44._countAndFlagsBits = 0;
    v44._object = (void *)0xE000000000000000;
    v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)(&v40 - 1), *(Swift::String_optional *)&v38, (NSBundle)v37, v44, *(Swift::String *)&v39);
    countAndFlagsBits = v45._countAndFlagsBits;

    v46 = v66;
    v47 = v67;
    v48 = *(void **)(*(_QWORD *)&v67[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_mediator] + 16);
    v50 = v64;
    v49 = v65;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v64, v65, v2);
    v51 = *(unsigned __int8 *)(v46 + 80);
    v52 = (v51 + 16) & ~v51;
    v53 = (v63 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    v54 = swift_allocObject(&unk_10054B2C0, v53 + 8, v51 | 7);
    v59((char *)(v54 + v52), v50, v2);
    *(_QWORD *)(v54 + v53) = v47;
    v55 = v48;
    v56 = v47;
    sub_100341D08((uint64_t)v55, countAndFlagsBits, (uint64_t)v45._object, v56, (void (*)(uint64_t))sub_100195BDC, v54);
    swift_bridgeObjectRelease(v45._object);

    v57 = swift_release(v54);
    (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v49, v2, v57);
  }
}

void sub_1001920B0(char a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  Swift::String v31;
  NSObject *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  Swift::String v37;
  Swift::String_optional v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;
  uint64_t v42;
  void *v43;
  id v44;
  Swift::String v45;
  Swift::String_optional v46;
  Swift::String v47;
  Swift::String v48;
  void *v49;
  Swift::String v50;
  uint64_t v51;
  void *v52;
  id v53;
  Swift::String v54;
  Swift::String_optional v55;
  Swift::String v56;
  Swift::String v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  Swift::String v64;
  NSObject *v65;
  uint64_t v66;
  void *v67;
  id v68;
  id v69;
  Swift::String_optional v70;
  Swift::String v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;
  uint64_t v75;
  void *v76;
  id v77;
  void *v78;
  Swift::String v79;
  uint64_t v80;
  Swift::String_optional v81;
  void *v82;
  Swift::String v83;
  Swift::String v84;
  Swift::String v85;
  double v86;
  uint64_t v87;
  void *v88;
  void *v89;
  id v90;
  Swift::String v91;
  Swift::String_optional v92;
  Swift::String v93;
  Swift::String v94;
  void *v95;
  NSString v96;
  id v97;
  NSString v98;
  void *v99;
  id v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  char *v108;
  NSString v109;
  void *v110;
  id v111;
  id v112;
  void *v113;
  id v114;
  void *v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  void *v121;
  id v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  uint64_t countAndFlagsBits;
  uint64_t v136;
  void *object;
  NSObject *v138;
  void **aBlock;
  unint64_t v140;
  void (*v141)(uint64_t, void *);
  void *v142;
  double (*v143)(uint64_t);
  uint64_t v144;
  Swift::String v145;
  Swift::String v146;
  Swift::String v147;
  Swift::String v148;
  Swift::String v149;
  Swift::String v150;

  v6 = type metadata accessor for FMIPItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMIPProductType(0);
  v11 = __chkstk_darwin(v10);
  v14 = (char *)&v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v126 = v14;
    v127 = v12;
    v128 = v11;
    v129 = v8;
    v131 = v7;
    v132 = v6;
    v133 = a3;
    v15 = FMIPItem.owner.getter(v11);
    v17 = v16;
    v18 = objc_msgSend((id)objc_opt_self(SPBeacon), "SPOwner");
    v19 = objc_msgSend(v18, "destination");

    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

    v23 = v15 == v20 && v17 == v22;
    v130 = v9;
    v136 = a2;
    if (v23)
    {
      swift_bridgeObjectRelease_n(v17, 2);
      v25 = 0;
      v26 = 0xE000000000000000;
    }
    else
    {
      v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v20, v22, 0);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v22);
      if ((v24 & 1) != 0)
        v25 = 0;
      else
        v25 = 0x4445524148535FLL;
      v26 = 0xE700000000000000;
      if ((v24 & 1) != 0)
        v26 = 0xE000000000000000;
    }
    v138 = v26;
    aBlock = 0;
    v140 = 0xE000000000000000;
    _StringGuts.grow(_:)(26);
    swift_bridgeObjectRelease(v140);
    aBlock = (void **)0xD000000000000018;
    v140 = 0x80000001004B1230;
    v120 = 0x80000001004B1230;
    v31._countAndFlagsBits = v25;
    v32 = v138;
    v31._object = v138;
    String.append(_:)(v31);
    v33 = (uint64_t)aBlock;
    v34 = (void *)v140;
    v35 = (void *)objc_opt_self(NSBundle);
    v36 = objc_msgSend(v35, "mainBundle");
    v145._object = (void *)0x80000001004A5660;
    v37._countAndFlagsBits = v33;
    v37._object = v34;
    v38.value._countAndFlagsBits = 0xD000000000000013;
    v38.value._object = (void *)0x80000001004A5640;
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    v145._countAndFlagsBits = 0xD000000000000018;
    v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v145);
    countAndFlagsBits = v40._countAndFlagsBits;
    object = v40._object;
    swift_bridgeObjectRelease(v34);

    aBlock = 0;
    v140 = 0xE000000000000000;
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease(v140);
    aBlock = (void **)0xD00000000000001FLL;
    v140 = 0x80000001004B1250;
    v119 = 0x80000001004B1250;
    v41._countAndFlagsBits = v25;
    v41._object = v32;
    String.append(_:)(v41);
    v42 = (uint64_t)aBlock;
    v43 = (void *)v140;
    v44 = objc_msgSend(v35, "mainBundle");
    v146._object = (void *)0x80000001004A5660;
    v45._countAndFlagsBits = v42;
    v45._object = v43;
    v46.value._countAndFlagsBits = 0xD000000000000013;
    v46.value._object = (void *)0x80000001004A5640;
    v47._countAndFlagsBits = 0;
    v47._object = (void *)0xE000000000000000;
    v146._countAndFlagsBits = 0xD000000000000018;
    v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, v46, (NSBundle)v44, v47, v146);
    v134 = v48._countAndFlagsBits;
    v49 = v48._object;
    swift_bridgeObjectRelease(v43);

    aBlock = 0;
    v140 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease(v140);
    v118 = 0xD000000000000020;
    aBlock = (void **)0xD000000000000020;
    v140 = 0x80000001004B1270;
    v117 = 0x80000001004B1270;
    v125 = v25;
    v50._countAndFlagsBits = v25;
    v50._object = v32;
    String.append(_:)(v50);
    v51 = (uint64_t)aBlock;
    v52 = (void *)v140;
    v122 = v35;
    v53 = objc_msgSend(v35, "mainBundle");
    v123 = (void *)0x80000001004A5660;
    v147._object = (void *)0x80000001004A5660;
    v54._countAndFlagsBits = v51;
    v54._object = v52;
    v124 = 0xD000000000000013;
    v55.value._countAndFlagsBits = 0xD000000000000013;
    v121 = (void *)0x80000001004A5640;
    v55.value._object = (void *)0x80000001004A5640;
    v56._countAndFlagsBits = 0;
    v56._object = (void *)0xE000000000000000;
    v147._countAndFlagsBits = 0xD000000000000018;
    v57 = NSLocalizedString(_:tableName:bundle:value:comment:)(v54, v55, (NSBundle)v53, v56, v147);
    v58 = v57._object;
    swift_bridgeObjectRelease(v52);

    v59 = v126;
    v60 = v136;
    v62 = FMIPItem.productType.getter(v61);
    LOBYTE(v51) = FMIPProductType.isAccessory.getter(v62);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v59, v128);
    if ((v51 & 1) != 0)
    {
      swift_bridgeObjectRelease(v138);
      v138 = v57._countAndFlagsBits;
    }
    else
    {
      swift_bridgeObjectRelease(object);
      swift_bridgeObjectRelease(v48._object);
      swift_bridgeObjectRelease(v57._object);
      aBlock = 0;
      v140 = 0xE000000000000000;
      _StringGuts.grow(_:)(26);
      swift_bridgeObjectRelease(v140);
      aBlock = (void **)0xD000000000000018;
      v140 = v120;
      v63 = v125;
      v64._countAndFlagsBits = v125;
      v65 = v138;
      v64._object = v138;
      String.append(_:)(v64);
      v66 = (uint64_t)aBlock;
      v67 = (void *)v140;
      v68 = v122;
      v69 = objc_msgSend(v122, "mainBundle");
      v70.value._countAndFlagsBits = 0xD000000000000010;
      v148._countAndFlagsBits = 0xD000000000000015;
      v148._object = (void *)0x80000001004ADC20;
      v70.value._object = (void *)0x80000001004ADC00;
      v71._countAndFlagsBits = v66;
      v71._object = v67;
      v72._countAndFlagsBits = 0;
      v72._object = (void *)0xE000000000000000;
      v73 = NSLocalizedString(_:tableName:bundle:value:comment:)(v71, v70, (NSBundle)v69, v72, v148);
      countAndFlagsBits = v73._countAndFlagsBits;
      object = v73._object;
      swift_bridgeObjectRelease(v67);

      aBlock = 0;
      v140 = 0xE000000000000000;
      _StringGuts.grow(_:)(33);
      swift_bridgeObjectRelease(v140);
      aBlock = (void **)0xD00000000000001FLL;
      v140 = v119;
      v74._countAndFlagsBits = v63;
      v74._object = v65;
      String.append(_:)(v74);
      v75 = (uint64_t)aBlock;
      v76 = (void *)v140;
      v77 = objc_msgSend(v68, "mainBundle");
      v78 = v123;
      v149._object = v123;
      v79._countAndFlagsBits = v75;
      v79._object = v76;
      v80 = v124;
      v81.value._countAndFlagsBits = v124;
      v82 = v121;
      v81.value._object = v121;
      v83._countAndFlagsBits = 0;
      v83._object = (void *)0xE000000000000000;
      v149._countAndFlagsBits = 0xD000000000000018;
      v84 = NSLocalizedString(_:tableName:bundle:value:comment:)(v79, v81, (NSBundle)v77, v83, v149);
      v134 = v84._countAndFlagsBits;
      v49 = v84._object;
      swift_bridgeObjectRelease(v76);

      aBlock = 0;
      v140 = 0xE000000000000000;
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease(v140);
      aBlock = (void **)v118;
      v140 = v117;
      v85._countAndFlagsBits = v63;
      v85._object = v65;
      String.append(_:)(v85);
      *(_QWORD *)&v86 = swift_bridgeObjectRelease(v65).n128_u64[0];
      v87 = (uint64_t)aBlock;
      v88 = (void *)v140;
      v89 = v68;
      v60 = v136;
      v90 = objc_msgSend(v89, "mainBundle", v86);
      v150._object = v78;
      v91._countAndFlagsBits = v87;
      v91._object = v88;
      v92.value._countAndFlagsBits = v80;
      v92.value._object = v82;
      v93._countAndFlagsBits = 0;
      v93._object = (void *)0xE000000000000000;
      v150._countAndFlagsBits = 0xD000000000000018;
      v94 = NSLocalizedString(_:tableName:bundle:value:comment:)(v91, v92, (NSBundle)v90, v93, v150);
      v138 = v94._countAndFlagsBits;
      v58 = v94._object;
      swift_bridgeObjectRelease(v88);

    }
    v95 = object;
    v96 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v95);
    v97 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v96, 0);

    v98 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v49);
    v99 = (void *)objc_opt_self(UIAlertAction);
    v100 = objc_msgSend(v99, "actionWithTitle:style:handler:", v98, 1, 0);

    v101 = v130;
    v102 = v131;
    v103 = v132;
    (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v130, v60, v132);
    v104 = *(unsigned __int8 *)(v102 + 80);
    v105 = (v104 + 24) & ~v104;
    v106 = swift_allocObject(&unk_10054B2E8, v105 + v129, v104 | 7);
    v107 = v133;
    *(_QWORD *)(v106 + 16) = v133;
    (*(void (**)(uint64_t, char *, uint64_t))(v102 + 32))(v106 + v105, v101, v103);
    v108 = v107;
    v109 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v58);
    v143 = sub_100195CA0;
    v144 = v106;
    aBlock = _NSConcreteStackBlock;
    v140 = 1107296256;
    v141 = sub_100008B40;
    v142 = &unk_10054B300;
    v110 = _Block_copy(&aBlock);
    v111 = objc_msgSend(v99, "actionWithTitle:style:handler:", v109, 2, v110, swift_release(v144).n128_f64[0]);
    _Block_release(v110);

    objc_msgSend(v97, "addAction:", v111);
    objc_msgSend(v97, "addAction:", v100);
    v112 = objc_msgSend(v97, "popoverPresentationController");
    if (v112)
    {
      v113 = v112;
      objc_msgSend(v112, "setSourceView:", *(_QWORD *)(*(_QWORD *)&v108[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView]+ OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton));

    }
    v114 = objc_msgSend(v97, "popoverPresentationController");
    if (v114)
    {
      v115 = v114;
      objc_msgSend(*(id *)(*(_QWORD *)&v108[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView]+ OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton), "bounds");
      objc_msgSend(v115, "setSourceRect:");

    }
    objc_msgSend(v108, "presentViewController:animated:completion:", v97, 1, 0);

  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100056D88(v27, (uint64_t)qword_1005F5748);
    v138 = Logger.logObject.getter(v28);
    v29 = static os_log_type_t.default.getter(v138);
    if (os_log_type_enabled(v138, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v138, v29, "FMRemoveItemViewController: Couldn't remove item, BT is off", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

  }
}

double sub_100192AA8(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  void *v13;
  void *v14;
  char *v15;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String *v21;
  uint64_t v22;
  void *v23;
  void *object;
  id v25;
  double v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  id v33;
  Swift::String_optional v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  double v43;
  NSString v44;
  id v45;
  id v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  double result;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  Swift::String v66;
  Swift::String v67;

  v62 = a3;
  v4 = type metadata accessor for FMIPItem(0);
  v64 = *(_QWORD *)(v4 - 8);
  v65 = v4;
  __chkstk_darwin(v4);
  v61 = v5;
  v63 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMIPProductType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView;
  v11 = *(_BYTE **)&a2[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView];
  v11[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 1;
  v12 = v11;
  sub_10017FD28();

  v13 = *(void **)&a2[v10];
  v14 = (void *)objc_opt_self(NSBundle);
  v15 = v13;
  v60 = v14;
  v16 = objc_msgSend(v14, "mainBundle");
  v66._countAndFlagsBits = 0xD000000000000018;
  v66._object = (void *)0x80000001004A5660;
  v17._object = (void *)0x80000001004B12A0;
  v18.value._object = (void *)0x80000001004A5640;
  v17._countAndFlagsBits = 0xD000000000000013;
  v18.value._countAndFlagsBits = 0xD000000000000013;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v66);

  v21 = (Swift::String *)&v15[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title];
  v22 = *(_QWORD *)&v15[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title + 8];
  *v21 = v20;
  swift_bridgeObjectRelease(v22);
  v23 = *(void **)&v15[OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel];
  object = v21->_object;
  v25 = v23;
  if (object)
  {
    swift_bridgeObjectRetain(object);
    v27 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v26 = swift_bridgeObjectRelease(object).n128_u64[0];
  }
  else
  {
    v27 = 0;
  }
  objc_msgSend(v23, "setText:", v27, v26);

  v28 = v62;
  v30 = FMIPItem.productType.getter(v29);
  v31 = FMIPProductType.isAccessory.getter(v30);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v31 & 1) == 0)
  {
    v32 = (char *)*(id *)&a2[v10];
    v33 = objc_msgSend(v60, "mainBundle");
    v34.value._countAndFlagsBits = 0xD000000000000010;
    v67._countAndFlagsBits = 0xD000000000000015;
    v67._object = (void *)0x80000001004ADC20;
    v35._object = (void *)0x80000001004B12A0;
    v34.value._object = (void *)0x80000001004ADC00;
    v35._countAndFlagsBits = 0xD000000000000013;
    v36._countAndFlagsBits = 0;
    v36._object = (void *)0xE000000000000000;
    v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v34, (NSBundle)v33, v36, v67);

    v38 = (Swift::String *)&v32[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title];
    v39 = *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title + 8];
    *v38 = v37;
    swift_bridgeObjectRelease(v39);
    v40 = *(void **)&v32[OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel];
    v41 = v38->_object;
    v42 = v40;
    if (v41)
    {
      swift_bridgeObjectRetain(v41);
      v44 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v43 = swift_bridgeObjectRelease(v41).n128_u64[0];
    }
    else
    {
      v44 = 0;
    }
    objc_msgSend(v40, "setText:", v44, v43);

  }
  v45 = objc_msgSend(a2, "navigationItem");
  v46 = objc_msgSend(v45, "leftBarButtonItem");

  if (v46)
  {
    objc_msgSend(v46, "setEnabled:", 0);

  }
  v48 = v63;
  v47 = v64;
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
  v50 = v65;
  v49(v63, v28, v65);
  v51 = type metadata accessor for FMIPRemoveItemAction(0);
  swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
  v52 = FMIPRemoveItemAction.init(item:forced:)(v48, 0);
  v53 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&a2[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_mediator] + 24)
                  + 32);
  v49(v48, v28, v50);
  v54 = *(unsigned __int8 *)(v47 + 80);
  v55 = (v54 + 16) & ~v54;
  v56 = (v61 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
  v57 = swift_allocObject(&unk_10054B338, v56 + 8, v54 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v57 + v55, v48, v50);
  *(_QWORD *)(v57 + v56) = a2;
  swift_retain(v53);
  v58 = a2;
  sub_1000B18E4(v52, (uint64_t)sub_100195D58, v57);
  swift_release(v57);
  swift_release(v52);
  *(_QWORD *)&result = swift_release(v53).n128_u64[0];
  return result;
}

void sub_100192F44(uint64_t a1, uint64_t a2, void **a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  void **v28;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void **v34;
  uint8_t *v35;
  char *v36;
  uint64_t v37;
  int v38;
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  id v42;
  Swift::String v43;
  Swift::String_optional v44;
  Swift::String v45;
  Swift::String v46;
  void *object;
  id v48;
  Swift::String v49;
  Swift::String_optional v50;
  Swift::String v51;
  void *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  double v58;
  char *v59;
  id v60;
  Swift::String v61;
  Swift::String_optional v62;
  Swift::String v63;
  id v64;
  Swift::String v65;
  Swift::String_optional v66;
  Swift::String v67;
  NSString v68;
  NSString v69;
  char *v70;
  double v71;
  id v72;
  Swift::String v73;
  Swift::String v74;
  void *v75;
  uint64_t v76;
  id v77;
  NSString v78;
  void *v79;
  id v80;
  uint64_t (*v81)(char *, char *, uint64_t);
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint64_t v88;
  char *v89;
  uint8_t *v90;
  void **v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  __n128 v95;
  void (*v96)(char *, uint64_t);
  void (*v97)(char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t countAndFlagsBits;
  uint64_t v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  void *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  void **aBlock;
  unint64_t v116;
  void (*v117)(uint64_t, void *);
  void *v118;
  uint64_t (*v119)();
  uint64_t v120;
  Swift::String v121;
  Swift::String v122;
  Swift::String v123;
  Swift::String v124;
  Swift::String v125;

  v8 = type metadata accessor for FMIPProductType(0);
  v107 = *(_QWORD *)(v8 - 8);
  v108 = v8;
  __chkstk_darwin(v8);
  v106 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C(&qword_1005D9708);
  __chkstk_darwin(v10);
  v113 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPItemActionControllerError(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v109 = (char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v98 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v98 - v19;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v21 = type metadata accessor for Logger(0);
  v22 = sub_100056D88(v21, (uint64_t)qword_1005F5748);
  swift_errorRetain(a3);
  v23 = swift_errorRetain(a3);
  v105 = v22;
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(12, -1);
    v104 = a4;
    v27 = (uint8_t *)v26;
    v28 = (void **)swift_slowAlloc(32, -1);
    v112 = v20;
    v29 = v28;
    v114 = (uint64_t)a3;
    aBlock = v28;
    v110 = a5;
    v111 = v13;
    *(_DWORD *)v27 = 136315138;
    v30 = sub_100053F2C(&qword_1005D7E40);
    v31 = Optional.debugDescription.getter(v30);
    v33 = v32;
    v114 = sub_100056DA0(v31, v32, (uint64_t *)&aBlock);
    a5 = v110;
    v13 = v111;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &aBlock);
    swift_bridgeObjectRelease(v33);
    swift_errorRelease(a3);
    swift_errorRelease(a3);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMRemoveItemViewController: Performed action successfuly? %s", v27, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    v34 = v29;
    v20 = v112;
    swift_slowDealloc(v34, -1, -1);
    v35 = v27;
    a4 = v104;
    swift_slowDealloc(v35, -1, -1);
  }
  else
  {
    swift_errorRelease(a3);
    swift_errorRelease(a3);
  }

  v36 = v113;
  if (!a3)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v113, 1, 1, v12);
    sub_1000051EC((uint64_t)v36, &qword_1005D9708);
    objc_msgSend(a5, "dismissViewControllerAnimated:completion:", 1, 0);
    return;
  }
  aBlock = a3;
  swift_errorRetain(a3);
  v37 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
  v38 = swift_dynamicCast(v36, &aBlock, v37, v12, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v36, v38 ^ 1u, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v36, 1, v12) == 1)
  {
    sub_1000051EC((uint64_t)v36, &qword_1005D9708);
LABEL_14:
    sub_100193960(a4);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v20, v36, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v18, enum case for FMIPItemActionControllerError.tagInUseRemoveFailed(_:), v12);
  v39 = static FMIPItemActionControllerError.== infix(_:_:)(v20, v18);
  v40 = *(void (**)(char *, uint64_t))(v13 + 8);
  v40(v18, v12);
  if ((v39 & 1) == 0)
  {
    v40(v20, v12);
    goto LABEL_14;
  }
  v103 = v40;
  v104 = v12;
  v110 = a5;
  v111 = v13;
  v112 = v20;
  v41 = objc_opt_self(NSBundle);
  v42 = objc_msgSend((id)v41, "mainBundle");
  v43._countAndFlagsBits = 0xD000000000000020;
  v121._object = (void *)0x80000001004A5660;
  v43._object = (void *)0x80000001004B12C0;
  v102 = 0xD000000000000020;
  v100 = (void *)0x80000001004B12C0;
  v44.value._countAndFlagsBits = 0xD000000000000013;
  v44.value._object = (void *)0x80000001004A5640;
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  v121._countAndFlagsBits = 0xD000000000000018;
  v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v42, v45, v121);
  countAndFlagsBits = v46._countAndFlagsBits;
  object = v46._object;

  v113 = (char *)v41;
  v48 = objc_msgSend((id)v41, "mainBundle");
  v49._countAndFlagsBits = 0xD000000000000023;
  v122._object = (void *)0x80000001004A5660;
  v99 = 0xD000000000000023;
  v49._object = (void *)0x80000001004B12F0;
  v50.value._countAndFlagsBits = 0xD000000000000013;
  v50.value._object = (void *)0x80000001004A5640;
  v51._countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  v122._countAndFlagsBits = 0xD000000000000018;
  v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, v50, (NSBundle)v48, v51, v122)._object;

  v53 = v106;
  v55 = FMIPItem.productType.getter(v54);
  LOBYTE(v41) = FMIPProductType.isAccessory.getter(v55);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v53, v108);
  if ((v41 & 1) == 0)
  {
    swift_bridgeObjectRelease(v46._object);
    *(_QWORD *)&v58 = swift_bridgeObjectRelease(v52).n128_u64[0];
    v59 = v113;
    v60 = objc_msgSend(v113, "mainBundle", v58);
    v123._object = (void *)0x80000001004ADC20;
    v61._countAndFlagsBits = v102;
    v61._object = v100;
    v62.value._countAndFlagsBits = 0xD000000000000010;
    v62.value._object = (void *)0x80000001004ADC00;
    v63._countAndFlagsBits = 0;
    v63._object = (void *)0xE000000000000000;
    v123._countAndFlagsBits = 0xD000000000000015;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v61, v62, (NSBundle)v60, v63, v123)._object;

    v64 = objc_msgSend(v59, "mainBundle");
    v124._object = (void *)0x80000001004ADC20;
    v65._countAndFlagsBits = v99;
    v65._object = (void *)0x80000001004B12F0;
    v66.value._countAndFlagsBits = 0xD000000000000010;
    v66.value._object = (void *)0x80000001004ADC00;
    v67._countAndFlagsBits = 0;
    v67._object = (void *)0xE000000000000000;
    v124._countAndFlagsBits = 0xD000000000000015;
    v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v65, v66, (NSBundle)v64, v67, v124)._object;

  }
  v57 = v110;
  v56 = v111;
  v68 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v69 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v52);
  v70 = (char *)objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v68, v69, 1);

  aBlock = 0;
  v116 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v71 = swift_bridgeObjectRelease(v116).n128_u64[0];
  v72 = objc_msgSend(v113, "mainBundle", v71);
  v125._countAndFlagsBits = 0xD000000000000021;
  v125._object = (void *)0x80000001004A5EE0;
  v73._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v73._object = (void *)0xEF454C5449545F4ELL;
  v74._countAndFlagsBits = 0;
  v74._object = (void *)0xE000000000000000;
  v75 = NSLocalizedString(_:tableName:bundle:value:comment:)(v73, (Swift::String_optional)0, (NSBundle)v72, v74, v125)._object;

  v76 = swift_allocObject(&unk_10054B360, 24, 7);
  *(_QWORD *)(v76 + 16) = v57;
  v77 = v57;
  v78 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v75);
  v119 = sub_100195FD0;
  v120 = v76;
  aBlock = _NSConcreteStackBlock;
  v116 = 1107296256;
  v117 = sub_100008B40;
  v118 = &unk_10054B378;
  v79 = _Block_copy(&aBlock);
  swift_release(v120);
  v80 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v78, 1, v79);
  _Block_release(v79);

  objc_msgSend(v70, "addAction:", v80);
  objc_msgSend(v77, "presentViewController:animated:completion:", v70, 1, 0);
  v81 = *(uint64_t (**)(char *, char *, uint64_t))(v56 + 16);
  v82 = v109;
  v83 = v112;
  v84 = v104;
  v85 = v81(v109, v112, v104);
  v86 = Logger.logObject.getter(v85);
  v87 = static os_log_type_t.default.getter(v86);
  if (os_log_type_enabled(v86, v87))
  {
    v88 = swift_slowAlloc(12, -1);
    v113 = v70;
    v89 = v82;
    v90 = (uint8_t *)v88;
    v91 = (void **)swift_slowAlloc(32, -1);
    aBlock = v91;
    *(_DWORD *)v90 = 136315138;
    v81(v18, v89, v84);
    v92 = String.init<A>(describing:)(v18, v84);
    v94 = v93;
    v114 = sub_100056DA0(v92, v93, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &aBlock);
    v95 = swift_bridgeObjectRelease(v94);
    v96 = v103;
    ((void (*)(char *, uint64_t, __n128))v103)(v89, v84, v95);
    _os_log_impl((void *)&_mh_execute_header, v86, v87, "FMRemoveItemViewController: error: %s", v90, 0xCu);
    swift_arrayDestroy(v91, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v91, -1, -1);
    swift_slowDealloc(v90, -1, -1);

    v96(v112, v84);
  }
  else
  {

    v97 = v103;
    v103(v82, v84);
    v97(v83, v84);
  }
}

void sub_100193960(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  void *object;
  id v22;
  Swift::String v23;
  Swift::String_optional v24;
  Swift::String v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  id v36;
  Swift::String v37;
  Swift::String_optional v38;
  Swift::String v39;
  id v40;
  Swift::String v41;
  Swift::String_optional v42;
  Swift::String v43;
  NSString v44;
  NSString v45;
  id v46;
  Swift::String v47;
  void *v48;
  void *v49;
  uint64_t v50;
  Swift::String_optional v51;
  Swift::String v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  NSString v57;
  void *v58;
  void *v59;
  id v60;
  Swift::String v61;
  Swift::String_optional v62;
  Swift::String v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  NSString v73;
  void *v74;
  id v75;
  id v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t countAndFlagsBits;
  id v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void **aBlock;
  uint64_t v93;
  void (*v94)(uint64_t, void *);
  void *v95;
  void *v96;
  uint64_t v97;
  char v98[32];
  Swift::String v99;
  Swift::String v100;
  Swift::String v101;
  Swift::String v102;
  Swift::String v103;
  Swift::String v104;

  v88 = a1;
  v80 = type metadata accessor for FMIPProductType(0);
  v79 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v78 = (char *)&v78 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for FMIPItem(0);
  v5 = *(_QWORD *)(v91 - 8);
  v6 = __chkstk_darwin(v91);
  v86 = v7;
  v87 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v78 - v8;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v82 = v9;
  v90 = v5;
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100056D88(v10, (uint64_t)qword_1005F5748);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMRemoveItemViewController: Presenting force unpair", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = (void *)objc_opt_self(NSBundle);
  v16 = objc_msgSend(v15, "mainBundle");
  v84 = (unint64_t)"Localizable-HAWKEYE";
  v99._object = (void *)0x80000001004A5660;
  v17._object = (void *)0x80000001004B1180;
  v83 = (unint64_t)"CLEAR_TAGS_BUTTON";
  v17._countAndFlagsBits = 0xD000000000000018;
  v18.value._countAndFlagsBits = 0xD000000000000013;
  v18.value._object = (void *)0x80000001004A5640;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v99._countAndFlagsBits = 0xD000000000000018;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v99);
  countAndFlagsBits = v20._countAndFlagsBits;
  object = v20._object;

  v22 = objc_msgSend(v15, "mainBundle");
  v23._countAndFlagsBits = 0xD00000000000001ALL;
  v100._object = (void *)0x80000001004A5660;
  v23._object = (void *)0x80000001004B11A0;
  v85 = 0xD000000000000013;
  v24.value._countAndFlagsBits = 0xD000000000000013;
  v24.value._object = (void *)0x80000001004A5640;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v100._countAndFlagsBits = 0xD000000000000018;
  v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v100)._object;

  v27 = (uint64_t)&v89[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove];
  swift_beginAccess(&v89[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove], v98, 0, 0);
  sub_1000E5B2C(v27, (uint64_t)v4);
  v28 = v90;
  v29 = v91;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v4, 1, v91) == 1)
  {
    sub_1000051EC((uint64_t)v4, (uint64_t *)&unk_1005D3AA0);
  }
  else
  {
    v30 = v82;
    v31 = (*(uint64_t (**)(id, char *, uint64_t))(v28 + 32))(v82, v4, v29);
    v32 = v78;
    v33 = FMIPItem.productType.getter(v31);
    v34 = FMIPProductType.isAccessory.getter(v33);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v32, v80);
    if ((v34 & 1) != 0)
    {
      (*(void (**)(id, uint64_t))(v28 + 8))(v30, v91);
    }
    else
    {
      swift_bridgeObjectRelease(v20._object);
      v35 = v28;
      v36 = objc_msgSend(v15, "mainBundle", swift_bridgeObjectRelease(v26).n128_f64[0]);
      v101._object = (void *)0x80000001004ADC20;
      v37._object = (void *)0x80000001004B1180;
      v37._countAndFlagsBits = 0xD000000000000018;
      v38.value._countAndFlagsBits = 0xD000000000000010;
      v38.value._object = (void *)0x80000001004ADC00;
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      v101._countAndFlagsBits = 0xD000000000000015;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v101)._object;

      v40 = objc_msgSend(v15, "mainBundle");
      v41._countAndFlagsBits = 0xD00000000000001ALL;
      v102._object = (void *)0x80000001004ADC20;
      v41._object = (void *)0x80000001004B11A0;
      v42.value._countAndFlagsBits = 0xD000000000000010;
      v42.value._object = (void *)0x80000001004ADC00;
      v43._countAndFlagsBits = 0;
      v43._object = (void *)0xE000000000000000;
      v102._countAndFlagsBits = 0xD000000000000015;
      v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v41, v42, (NSBundle)v40, v43, v102)._object;

      (*(void (**)(id, uint64_t))(v35 + 8))(v82, v91);
    }
  }
  v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v82 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v44, v45, 1);

  v46 = objc_msgSend(v15, "mainBundle");
  v47._countAndFlagsBits = 0xD000000000000019;
  v48 = (void *)(v84 | 0x8000000000000000);
  v103._object = (void *)(v84 | 0x8000000000000000);
  v47._object = (void *)0x80000001004B11C0;
  v49 = (void *)(v83 | 0x8000000000000000);
  v50 = v85;
  v51.value._countAndFlagsBits = v85;
  v51.value._object = (void *)(v83 | 0x8000000000000000);
  v52._countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  v103._countAndFlagsBits = 0xD000000000000018;
  v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, v51, (NSBundle)v46, v52, v103)._object;

  v54 = swift_allocObject(&unk_10054B1F8, 24, 7);
  v55 = v89;
  *(_QWORD *)(v54 + 16) = v89;
  v56 = v55;
  v57 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v53);
  v96 = sub_100195B40;
  v97 = v54;
  aBlock = _NSConcreteStackBlock;
  v93 = 1107296256;
  v94 = sub_100008B40;
  v95 = &unk_10054B210;
  v58 = _Block_copy(&aBlock);
  swift_release(v97);
  v59 = (void *)objc_opt_self(UIAlertAction);
  v89 = (char *)objc_msgSend(v59, "actionWithTitle:style:handler:", v57, 1, v58);
  _Block_release(v58);

  v60 = objc_msgSend(v15, "mainBundle");
  v61._countAndFlagsBits = 0xD00000000000001ALL;
  v104._object = v48;
  v61._object = (void *)0x80000001004B11E0;
  v62.value._countAndFlagsBits = v50;
  v62.value._object = v49;
  v63._countAndFlagsBits = 0;
  v63._object = (void *)0xE000000000000000;
  v104._countAndFlagsBits = 0xD000000000000018;
  v64 = NSLocalizedString(_:tableName:bundle:value:comment:)(v61, v62, (NSBundle)v60, v63, v104)._object;

  v66 = v90;
  v65 = v91;
  v67 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v87, v88, v91);
  v68 = *(unsigned __int8 *)(v66 + 80);
  v69 = (v68 + 16) & ~v68;
  v70 = (v86 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
  v71 = swift_allocObject(&unk_10054B248, v70 + 8, v68 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(v71 + v69, v67, v65);
  *(_QWORD *)(v71 + v70) = v56;
  v72 = v56;
  v73 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v64);
  v96 = sub_100195B64;
  v97 = v71;
  aBlock = _NSConcreteStackBlock;
  v93 = 1107296256;
  v94 = sub_100008B40;
  v95 = &unk_10054B260;
  v74 = _Block_copy(&aBlock);
  v75 = objc_msgSend(v59, "actionWithTitle:style:handler:", v73, 2, v74, swift_release(v97).n128_f64[0]);
  _Block_release(v74);

  v76 = v82;
  objc_msgSend(v82, "addAction:", v75);
  v77 = v89;
  objc_msgSend(v76, "addAction:", v89);
  objc_msgSend(v72, "presentViewController:animated:completion:", v76, 1, 0);

}

double sub_100194194(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double result;
  uint64_t v20;

  v5 = type metadata accessor for FMIPItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100056D88(v9, (uint64_t)qword_1005F5748);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMRemoveItemViewController: User agreed to force unpair", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  v14 = type metadata accessor for FMIPRemoveItemAction(0);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v15 = FMIPRemoveItemAction.init(item:forced:)(v8, 1);
  v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&a3[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_mediator] + 24)
                  + 32);
  v17 = swift_allocObject(&unk_10054B298, 24, 7);
  *(_QWORD *)(v17 + 16) = a3;
  swift_retain(v16);
  v18 = a3;
  sub_1000B18E4(v15, (uint64_t)sub_100195BB4, v17);
  swift_release(v15);
  swift_release(v16);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_100194358()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  char *v18;
  id v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String *v24;
  uint64_t v25;
  void *v26;
  void *object;
  id v28;
  double v29;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char *v39;
  id v40;
  Swift::String v41;
  Swift::String_optional v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String *v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  double v50;
  NSString v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char v57[24];
  Swift::String v58;
  Swift::String v59;

  v1 = v0;
  v2 = type metadata accessor for FMIPProductType(0);
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v5);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMIPItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  v55 = v8;
  v56 = v9;
  __chkstk_darwin(v8);
  v54 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, "setModalInPresentation:", 0);
  v11 = OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView;
  v12 = *(_BYTE **)&v0[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView];
  v12[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 0;
  v13 = v12;
  sub_10017FD28();

  v14 = objc_msgSend(v1, "navigationItem");
  v15 = objc_msgSend(v14, "leftBarButtonItem");

  if (v15)
  {
    objc_msgSend(v15, "setEnabled:", 1);

  }
  v16 = *(void **)&v1[v11];
  v17 = (void *)objc_opt_self(NSBundle);
  v18 = v16;
  v19 = objc_msgSend(v17, "mainBundle");
  v20.value._countAndFlagsBits = 0xD000000000000013;
  v21._countAndFlagsBits = 0xD000000000000016;
  v58._countAndFlagsBits = 0xD000000000000018;
  v58._object = (void *)0x80000001004A5660;
  v21._object = (void *)0x80000001004B1140;
  v20.value._object = (void *)0x80000001004A5640;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v20, (NSBundle)v19, v22, v58);

  v24 = (Swift::String *)&v18[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title];
  v25 = *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title + 8];
  *v24 = v23;
  swift_bridgeObjectRelease(v25);
  v26 = *(void **)&v18[OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel];
  object = v24->_object;
  v28 = v26;
  if (object)
  {
    swift_bridgeObjectRetain(object);
    v30 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v29 = swift_bridgeObjectRelease(object).n128_u64[0];
  }
  else
  {
    v30 = 0;
  }
  v31 = v55;
  objc_msgSend(v26, "setText:", v30, v29, v52, v53);

  v32 = (uint64_t)&v1[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove], v57, 0, 0);
  sub_1000E5B2C(v32, (uint64_t)v7);
  v33 = v56;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v7, 1, v31) == 1)
    return sub_1000051EC((uint64_t)v7, (uint64_t *)&unk_1005D3AA0);
  v35 = v54;
  v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v33 + 32))(v54, v7, v31);
  v37 = FMIPItem.productType.getter(v36);
  v38 = FMIPProductType.isAccessory.getter(v37);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v4, v53);
  if ((v38 & 1) == 0)
  {
    v39 = (char *)*(id *)&v1[v11];
    v40 = objc_msgSend(v17, "mainBundle");
    v41._countAndFlagsBits = 0xD000000000000011;
    v59._countAndFlagsBits = 0xD000000000000015;
    v59._object = (void *)0x80000001004ADC20;
    v41._object = (void *)0x80000001004B1160;
    v42.value._object = (void *)0x80000001004ADC00;
    v42.value._countAndFlagsBits = 0xD000000000000010;
    v43._countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v41, v42, (NSBundle)v40, v43, v59);

    v45 = (Swift::String *)&v39[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title];
    v46 = *(_QWORD *)&v39[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title + 8];
    *v45 = v44;
    swift_bridgeObjectRelease(v46);
    v47 = *(void **)&v39[OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel];
    v48 = v45->_object;
    v49 = v47;
    if (v48)
    {
      swift_bridgeObjectRetain(v48);
      v51 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v50 = swift_bridgeObjectRelease(v48).n128_u64[0];
    }
    else
    {
      v51 = 0;
    }
    objc_msgSend(v47, "setText:", v51, v50);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v35, v31);
}

double sub_1001947D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint8_t *v15;
  void *v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  Swift::String v21;
  void *object;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  SEL *v30;
  id v31;
  Swift::String_optional v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  id v36;
  Swift::String v37;
  Swift::String_optional v38;
  Swift::String v39;
  Swift::String v40;
  char *v41;
  double result;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t countAndFlagsBits;
  uint64_t v48;
  char *v49;
  _BOOL4 v50;
  int v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;

  v2 = type metadata accessor for FMIPProductType(0);
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  __chkstk_darwin(v2);
  v43 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for FMIPItem(0);
  v7 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  sub_100056D88(v10, (uint64_t)qword_1005F5748);
  v11 = swift_errorRetain(a1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  v14 = os_log_type_enabled(v12, v13);
  v46 = v9;
  if (v14)
  {
    v15 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v15 = 67109120;
    v50 = a1 != 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMRemoveItemViewController: Show remove failed if needed %{BOOL}d", v15, 8u);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
  }

  v16 = (void *)objc_opt_self(NSBundle);
  v17 = objc_msgSend(v16, "mainBundle");
  v52._countAndFlagsBits = 0xD000000000000018;
  v18._countAndFlagsBits = 0xD000000000000019;
  v52._object = (void *)0x80000001004A5660;
  v18._object = (void *)0x80000001004B1100;
  v19.value._object = (void *)0x80000001004A5640;
  v19.value._countAndFlagsBits = 0xD000000000000013;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v52);
  countAndFlagsBits = v21._countAndFlagsBits;
  object = v21._object;

  v23 = &v49[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove];
  swift_beginAccess(&v49[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove], &v50, 0, 0);
  sub_1000E5B2C((uint64_t)v23, (uint64_t)v6);
  v24 = v48;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v48) == 1)
  {
    sub_1000051EC((uint64_t)v6, (uint64_t *)&unk_1005D3AA0);
  }
  else
  {
    v25 = v46;
    v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v46, v6, v24);
    v27 = v43;
    v28 = FMIPItem.productType.getter(v26);
    v29 = FMIPProductType.isAccessory.getter(v28);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v45);
    if ((v29 & 1) == 0)
    {
      v30 = (SEL *)&unk_1005AA000;
      v31 = objc_msgSend(v16, "mainBundle", swift_bridgeObjectRelease(v21._object).n128_f64[0]);
      v32.value._countAndFlagsBits = 0xD000000000000010;
      v53._countAndFlagsBits = 0xD000000000000015;
      v33._countAndFlagsBits = 0xD000000000000019;
      v53._object = (void *)0x80000001004ADC20;
      v33._object = (void *)0x80000001004B1100;
      v32.value._object = (void *)0x80000001004ADC00;
      v34._countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, v32, (NSBundle)v31, v34, v53);
      countAndFlagsBits = v35._countAndFlagsBits;
      object = v35._object;

      (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v48);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v48);
  }
  v30 = (SEL *)&unk_1005AA000;
LABEL_12:
  v36 = objc_msgSend(v16, v30[208]);
  v37._countAndFlagsBits = 0xD000000000000017;
  v54._countAndFlagsBits = 0xD000000000000018;
  v54._object = (void *)0x80000001004A5660;
  v37._object = (void *)0x80000001004B1120;
  v38.value._object = (void *)0x80000001004A5640;
  v38.value._countAndFlagsBits = 0xD000000000000013;
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v54);

  swift_errorRetain(a1);
  v41 = v49;
  sub_100188C84(a1, v41, v40._countAndFlagsBits, (uint64_t)v40._object, countAndFlagsBits, (uint64_t)object, a1, v41);

  swift_errorRelease(a1);
  swift_bridgeObjectRelease(v40._object);
  *(_QWORD *)&result = swift_bridgeObjectRelease(object).n128_u64[0];
  return result;
}

id sub_100194C70(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100195894(a2, a3);
}

void sub_100194C7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  double v38;
  NSString v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[24];
  char v46[24];
  char v47[24];

  v1 = type metadata accessor for FMIPItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v42 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v41 = (char *)&v40 - v5;
  v6 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v40 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v40 - v16;
  v44 = v0;
  v18 = v0 + OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove;
  swift_beginAccess(v0 + OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove, v47, 0, 0);
  sub_1000E5B2C(v18, (uint64_t)v17);
  v43 = v2;
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48);
  LODWORD(v2) = v19(v17, 1, v1);
  sub_1000051EC((uint64_t)v17, (uint64_t *)&unk_1005D3AA0);
  if ((_DWORD)v2 == 1)
  {
    v20 = *(_QWORD *)(*(_QWORD *)(v44 + OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_mediator) + 56)
        + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v20, v46, 0, 0);
    sub_100024F3C(v20, (uint64_t)v8);
    if (swift_getEnumCaseMultiPayload(v8, v6) == 3)
    {
      v21 = v43;
      v22 = v41;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v41, v8, v1);
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v15, v22, v1);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v15, 0, 1, v1);
      swift_beginAccess(v18, v45, 33, 0);
      sub_1000BB4FC((uint64_t)v15, v18);
      swift_endAccess(v45);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v1);
    }
    else
    {
      sub_100024F00((uint64_t)v8);
    }
  }
  sub_1000E5B2C(v18, (uint64_t)v12);
  if (v19(v12, 1, v1) == 1)
  {
    sub_1000051EC((uint64_t)v12, (uint64_t *)&unk_1005D3AA0);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100056D88(v23, (uint64_t)qword_1005F5748);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.default.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "FMRemoveItemViewController: Can't update because there is no selected item", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }

  }
  else
  {
    v29 = v42;
    v28 = v43;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v42, v12, v1);
    v30 = (char *)*(id *)(v44 + OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView);
    v31 = FMIPItem.name.getter(v30);
    v32 = (uint64_t *)&v30[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceName];
    v33 = *(_QWORD *)&v30[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceName + 8];
    *v32 = v31;
    v32[1] = v34;
    swift_bridgeObjectRelease(v33);
    v35 = *(void **)&v30[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceNameLabel];
    v36 = v32[1];
    v37 = v35;
    if (v36)
    {
      swift_bridgeObjectRetain(v36);
      v39 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v38 = swift_bridgeObjectRelease(v36).n128_u64[0];
    }
    else
    {
      v39 = 0;
    }
    objc_msgSend(v35, "setText:", v39, v38);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v1);
  }
}

id sub_100195100()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMRemoveItemViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001951B4()
{
  return type metadata accessor for FMRemoveItemViewController(0);
}

uint64_t type metadata accessor for FMRemoveItemViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D96F8;
  if (!qword_1005D96F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMRemoveItemViewController);
  return result;
}

void sub_1001951F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1000058E0(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = "\b";
    v4[3] = "\b";
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = "\b";
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

double sub_100195290(uint64_t a1, uint64_t a2)
{
  double result;

  *(_QWORD *)&result = sub_1001952D0(a2).n128_u64[0];
  return result;
}

uint64_t sub_10019529C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(*(_QWORD *)(*v2 + OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView)
                 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollHandler);
  v4 = *v3;
  v5 = v3[1];
  *v3 = a1;
  v3[1] = a2;
  return sub_1000327F0(v4, v5);
}

__n128 sub_1001952D0(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  __n128 v28;
  char v29;
  __n128 v30;
  char v32[24];

  v2 = v1;
  v4 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v4);
  v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v7);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for FMIPItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v12);
  v16 = &v32[-v15 - 8];
  sub_100024F3C(a1, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload(v9, v7) != 3)
  {
    sub_100024F00((uint64_t)v9);
    goto LABEL_5;
  }
  v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
  v18 = FMIPItem.identifier.getter(v17);
  v20 = v19;
  v21 = (uint64_t)&v2[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove];
  swift_beginAccess(&v2[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove], v32, 0, 0);
  sub_1000E5B2C(v21, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10))
  {
    sub_1000051EC((uint64_t)v6, (uint64_t *)&unk_1005D3AA0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    result.n128_u64[0] = swift_bridgeObjectRelease(v20).n128_u64[0];
LABEL_5:
    objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, 0, result.n128_f64[0]);
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v6, v10);
  v23 = sub_1000051EC((uint64_t)v6, (uint64_t *)&unk_1005D3AA0);
  v24 = FMIPItem.identifier.getter(v23);
  v26 = v25;
  v27 = *(void (**)(char *, uint64_t))(v11 + 8);
  v27(v14, v10);
  if (v18 == v24 && v20 == v26)
  {
    v28 = swift_bridgeObjectRelease(v20);
    ((void (*)(char *, uint64_t, __n128))v27)(v16, v10, v28);
    result.n128_u64[0] = swift_bridgeObjectRelease(v20).n128_u64[0];
  }
  else
  {
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v24, v26, 0);
    v30 = swift_bridgeObjectRelease(v26);
    ((void (*)(char *, uint64_t, __n128))v27)(v16, v10, v30);
    result = swift_bridgeObjectRelease(v20);
    if ((v29 & 1) == 0)
      goto LABEL_5;
  }
  return result;
}

id sub_100195564(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  objc_super v10;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove];
  v5 = type metadata accessor for FMIPItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_selectionSubscription] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_devicesSubscription] = 0;
  v6 = OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView;
  v7 = objc_allocWithZone((Class)type metadata accessor for FMActionLandingView());
  v8 = v2;
  *(_QWORD *)&v2[v6] = sub_10017FF08(1);
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_imageFetchingCancellable] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_mediator] = a1;
  swift_retain(a1);

  v10.receiver = v8;
  v10.super_class = (Class)type metadata accessor for FMRemoveItemViewController(0);
  return objc_msgSendSuper2(&v10, "initWithNibName:bundle:", 0, 0);
}

uint64_t sub_100195658()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_10054B1A8, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  aBlock[4] = sub_100195874;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10054B1C0;
  v12 = _Block_copy(aBlock);
  v13 = v23;
  v14 = v1;
  swift_release(v13);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_100056580();
  v17 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v18 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100195850()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100195874()
{
  sub_100194C7C();
}

id sub_100195894(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;
  uint64_t v21;

  if (a1)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v4 = type metadata accessor for Logger(0);
    sub_100056D88(v4, (uint64_t)qword_1005F5748);
    swift_errorRetain(a1);
    v5 = swift_errorRetain(a1);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      v20 = a1;
      v21 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_errorRetain(a1);
      v10 = sub_100053F2C(&qword_1005D7E40);
      v11 = String.init<A>(describing:)(&v20, v10);
      v13 = v12;
      v20 = sub_100056DA0(v11, v12, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
      swift_bridgeObjectRelease(v13);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMRemoveItemViewController: error forcing unpairing %s", v8, 0xCu);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }

    return (id)sub_100194358();
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100056D88(v14, (uint64_t)qword_1005F5748);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMRemoveItemViewController: succesfully forced unpairing", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    return objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, 0);
  }
}

uint64_t sub_100195B40()
{
  return sub_100194358();
}

double sub_100195B64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for FMIPItem(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_100194194(a1, v1 + v4, *(char **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

double sub_100195BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001947D0(a3);
}

void sub_100195BDC(char a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for FMIPItem(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1001920B0(a1, v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100195C2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMIPItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_100195CA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPItem(0) - 8) + 80);
  return sub_100192AA8(a1, *(char **)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_100195CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for FMIPItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_100195D58(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(type metadata accessor for FMIPItem(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  sub_100192F44(a1, a2, a3, v3 + v8, *(void **)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100195DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D39E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100195E08(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

id *sub_100195E30(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

uint64_t sub_100195E58(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return a1;
}

id *sub_100195E80(id *a1)
{

  return a1;
}

uint64_t sub_100195EA8()
{
  return sub_1000BD7B0() & 1;
}

uint64_t sub_100195EC4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100195EE8(void **a1)
{
  uint64_t v1;

  sub_100190CA8(a1, v1);
}

void sub_100195EF0()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_itemToRemove];
  v3 = type metadata accessor for FMIPItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_selectionSubscription] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_devicesSubscription] = 0;
  v4 = OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_landingView;
  v5 = objc_allocWithZone((Class)type metadata accessor for FMActionLandingView());
  *(_QWORD *)&v1[v4] = sub_10017FF08(1);
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMRemoveItemViewController_imageFetchingCancellable] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMRemoveItemViewController.swift", 39, 2, 41, 0);
  __break(1u);
}

void LocateIntent.__allocating_init(friendName:friendId:handles:contactId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_class *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  id v16;
  NSString v17;
  id v18;
  id v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  Class v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a3;
  v40 = a6;
  v36 = a4;
  v37 = a1;
  v38 = a2;
  v10 = sub_100053F2C(&qword_1005D9710);
  __chkstk_darwin(v10);
  v41 = (uint64_t)_swiftEmptyArrayStorage;
  v12 = *(_QWORD *)(a5 + 16);
  if (v12)
  {
    v33 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    v34 = a7;
    v35 = v7;
    v13 = 0;
    v14 = (uint64_t *)(a5 + 40);
    do
    {
      v15 = *v14;
      v16 = objc_allocWithZone((Class)INPersonHandle);
      swift_bridgeObjectRetain(v15);
      v17 = String._bridgeToObjectiveC()();
      v18 = objc_msgSend(v16, "initWithValue:type:", v17, 1, swift_bridgeObjectRelease(v15).n128_f64[0]);

      if (!v13)
      {
        v19 = v18;
        v13 = v18;
      }
      v20 = v18;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
      v22 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v21 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v22 >= v21 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
      v14 += 2;
      v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
      specialized Array._endMutation()(v23);

      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease(a5);
    v24 = type metadata accessor for PersonNameComponents(0);
    v25 = (uint64_t)v33;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v33, 1, 1, v24);
    v26 = v41;
    v27 = objc_allocWithZone((Class)INPerson);
    v28 = v13;
    v29 = sub_100196248(v28, v25, v37, v38, 0, v40, v34, v39, v36, v26, 2);
    v30 = objc_msgSend(objc_allocWithZone(v35), "init");
    v31 = v29;
    objc_msgSend(v30, "setPerson:", v31);

  }
  else
  {
    swift_bridgeObjectRelease(a5);
    __break(1u);
  }
}

id sub_100196248(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  Class isa;
  NSString v20;
  uint64_t v21;
  NSString v22;
  uint64_t v23;
  NSString v24;
  uint64_t v25;
  NSArray v26;
  id v27;
  id v29;

  v16 = type metadata accessor for PersonNameComponents(0);
  v17 = *(_QWORD *)(v16 - 8);
  isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16) != 1)
  {
    isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a2, v16);
  }
  if (a4)
  {
    v20 = String._bridgeToObjectiveC()();
    v18 = swift_bridgeObjectRelease(a4).n128_u64[0];
    v21 = a9;
    if (a7)
      goto LABEL_5;
  }
  else
  {
    v20 = 0;
    v21 = a9;
    if (a7)
    {
LABEL_5:
      v22 = String._bridgeToObjectiveC()();
      v18 = swift_bridgeObjectRelease(a7).n128_u64[0];
      v23 = a10;
      if (v21)
        goto LABEL_6;
LABEL_10:
      v24 = 0;
      v25 = a11;
      if (v23)
        goto LABEL_7;
LABEL_11:
      v26.super.isa = 0;
      goto LABEL_12;
    }
  }
  v22 = 0;
  v23 = a10;
  if (!v21)
    goto LABEL_10;
LABEL_6:
  v24 = String._bridgeToObjectiveC()();
  v18 = swift_bridgeObjectRelease(v21).n128_u64[0];
  v25 = a11;
  if (!v23)
    goto LABEL_11;
LABEL_7:
  sub_1001963F4();
  v26.super.isa = Array._bridgeToObjectiveC()().super.isa;
  v18 = swift_bridgeObjectRelease(v23).n128_u64[0];
LABEL_12:
  v27 = objc_msgSend(v29, "initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:aliases:suggestionType:", a1, isa, v20, a5, v22, v24, *(double *)&v18, v26.super.isa, v25);

  return v27;
}

unint64_t sub_1001963F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D9718;
  if (!qword_1005D9718)
  {
    v1 = objc_opt_self(INPersonHandle);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005D9718);
  }
  return result;
}

void sub_100196430(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100196470(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1001964F8 + 4 * byte_1004869E5[a2]))(0x79656B2D636F6CLL);
}

uint64_t sub_1001964F8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x79656B2D636F6CLL && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x79656B2D636F6CLL, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t sub_1001965C8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x74696C6C65746173;
  else
    v3 = 0x65726F6C707865;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE900000000000065;
  if ((a2 & 1) != 0)
    v5 = 0x74696C6C65746173;
  else
    v5 = 0x65726F6C707865;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000065;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_100196670(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1835365481;
  else
    v3 = 0x656369766564;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1835365481;
  else
    v5 = 0x656369766564;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_100196708(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7070416E65706FLL;
  else
    v3 = 0x6163696669746F6ELL;
  if (v2)
    v4 = 0xEF7061546E6F6974;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x7070416E65706FLL;
  else
    v5 = 0x6163696669746F6ELL;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xEF7061546E6F6974;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_1001967B8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100196814(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100196880 + 4 * byte_1004869EE[a2]))(0x744965766F6D6572);
}

uint64_t sub_100196880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x744965766F6D6572 && v2 == v1)
  {
    v3 = 1;
    v1 = v2;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, 0x744965766F6D6572, v1, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  return v3 & 1;
}

uint64_t sub_100196934(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x77656976657270;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x6465646E61707865;
    else
      v4 = 0x6E6F707365726E75;
    if (v3 == 1)
      v5 = 0xE800000000000000;
    else
      v5 = 0xEC00000065766973;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x6465646E61707865;
      else
        v2 = 0x6E6F707365726E75;
      if (v6 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0xEC00000065766973;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE700000000000000;
    v4 = 0x77656976657270;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v4 != 0x77656976657270)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

void sub_100196A5C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100196AA4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100196B38 + 4 * byte_1004869F9[a2]))(0x6C616D726F6ELL);
}

uint64_t sub_100196B38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x6C616D726F6ELL && v1 == v2)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6C616D726F6ELL, v2, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

uint64_t sub_100196C28(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x656E696C6E6FLL;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x656E696C66666FLL;
    else
      v4 = 0x64656B636F6CLL;
    if (v3 == 1)
      v5 = 0xE700000000000000;
    else
      v5 = 0xE600000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x656E696C66666FLL;
      else
        v2 = 0x64656B636F6CLL;
      if (v6 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE600000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE600000000000000;
    v4 = 0x656E696C6E6FLL;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v4 != 0x656E696C6E6FLL)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

void sub_100196D30(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100196D80(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100196E28 + 4 * byte_100486A07[a2]))(0x6873657266);
}

uint64_t sub_100196E28(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6873657266 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6873657266, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

uint64_t sub_100196F28(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000013;
  else
    v3 = 0xD000000000000010;
  if (v2)
    v4 = 0x80000001004A4AD0;
  else
    v4 = 0x80000001004A4AF0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000013;
  else
    v5 = 0xD000000000000010;
  if ((a2 & 1) != 0)
    v6 = 0x80000001004A4AF0;
  else
    v6 = 0x80000001004A4AD0;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_100196FD0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x786F626F666E69;
  else
    v3 = 0x696C656372756F73;
  if (v2)
    v4 = 0xEA00000000007473;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x786F626F666E69;
  else
    v5 = 0x696C656372756F73;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xEA00000000007473;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_100197078(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1001970C8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100197198 + 4 * byte_100486A15[a2]))(0x41646567616E616DLL);
}

uint64_t sub_100197198(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x41646567616E616DLL && v1 == 0xEE00746E756F6363)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x41646567616E616DLL, 0xEE00746E756F6363, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEE00746E756F6363);
  return v2 & 1;
}

uint64_t sub_1001972C0(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000015;
  else
    v3 = 0x746C7561666564;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0x80000001004A4B10;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000015;
  else
    v5 = 0x746C7561666564;
  if ((a2 & 1) != 0)
    v6 = 0x80000001004A4B10;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_100197368(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1001973B4(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_100197450 + 4 * byte_100486A23[a2]))(v2 + 8);
}

uint64_t sub_100197450(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v3 = 0x80000001004A4950;
  if (a1 == v1 + 8 && v2 == 0x80000001004A4950)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, v1 + 8, 0x80000001004A4950, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

void sub_10019752C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10019757C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1001975E8 + 4 * byte_100486A2F[a2]))(0x656C706F6570);
}

uint64_t sub_1001975E8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C706F6570 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x656C706F6570, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE600000000000000);
  return v2 & 1;
}

void sub_10019769C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1001976DC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100197764 + 4 * byte_100486A39[a2]))(0x6F4C796150666D66);
}

uint64_t sub_100197764(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F4C796150666D66 && v1 == 0xEA00000000006461)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6F4C796150666D66, 0xEA00000000006461, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEA00000000006461);
  return v2 & 1;
}

void sub_100197834(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10019787C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1001978D0 + 4 * byte_100486A42[a2]))(0x6567646162);
}

uint64_t sub_1001978D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x6567646162 && v1 == v2)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6567646162, v2, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

void sub_100197968(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1001979B0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100197A60 + 4 * byte_100486A4D[a2]))(0x6C6562616CLL);
}

uint64_t sub_100197A60(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C6562616CLL && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6C6562616CLL, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

BOOL sub_100197B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v0 = type metadata accessor for FMIPActionStatus(0);
  v1 = sub_100008000(&qword_1005D9928, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter(&v4, v0, v1);
  dispatch thunk of RawRepresentable.rawValue.getter(&v3, v0, v1);
  return v4 == v3;
}

uint64_t sub_100197BF4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10005CFFC(v0, qword_1005F5140);
  sub_100056D88(v0, (uint64_t)qword_1005F5140);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001004AB8B0, 0x6E756F5379616C70, 0xEF6E6F6974634164);
}

uint64_t sub_100197C74()
{
  uint64_t v0;

  if (qword_1005D1CA0 != -1)
    swift_once(&qword_1005D1CA0, sub_100197BF4);
  v0 = type metadata accessor for Logger(0);
  return sub_100056D88(v0, (uint64_t)qword_1005F5140);
}

void *sub_100197CBC(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingPlaySoundAnalytics, a1, 33, 0);
  return &j_j__swift_endAccess;
}

void *sub_100197D00(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation, a1, 33, 0);
  return &j_j__swift_endAccess;
}

void *sub_100197D44(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationEvent, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t sub_100197D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  unsigned __int16 v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v0 = 0x454843415454415FLL;
  v1 = sub_100053F2C(&qword_1005D6710);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v22 - v6;
  __chkstk_darwin(v5);
  v9 = (char *)&v22 - v8;
  v10 = sub_100197F90((uint64_t)&v22 - v8);
  if ((v10 & 1) == 0)
  {
    v11 = v10;
    sub_100007464((uint64_t)v9, (uint64_t)v7, &qword_1005D6710);
    if (v11 < 0x100
      || (v12 = type metadata accessor for FMIPDevice(0),
          (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12) == 1))
    {
      v0 = 0;
    }
    sub_1000051EC((uint64_t)v7, &qword_1005D6710);
  }
  sub_100007464((uint64_t)v9, (uint64_t)v4, &qword_1005D6710);
  v13 = type metadata accessor for FMIPDevice(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13);
  if ((_DWORD)v15 == 1)
  {
    sub_1000051EC((uint64_t)v4, &qword_1005D6710);
    v16 = 0;
    v17 = 0;
  }
  else
  {
    v16 = FMIPDevice.name.getter(v15);
    v17 = v18;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  v19 = sub_100053F2C(&qword_1005D99C8);
  v20 = swift_allocObject(v19, 48, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100481740;
  *(_QWORD *)(v20 + 32) = v16;
  *(_QWORD *)(v20 + 40) = v17;
  sub_1000051EC((uint64_t)v9, &qword_1005D6710);
  return v0;
}

uint64_t sub_100197F90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t, __n128);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  int v40;
  void (*v42)(char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[32];
  char v50[24];

  v2 = v1;
  v4 = type metadata accessor for FMIPDeviceState(0);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  v5 = __chkstk_darwin(v4);
  v44 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v43 = (char *)&v42 - v7;
  v8 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMIPDevice(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource;
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  v16 = swift_beginAccess(v15, v50, 0, 0);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v18 = v17(v14, v15, v11, v16);
  v19 = FMIPDevice.deviceConnectedWithBeacon.getter(v18);
  v21 = v20;
  v42 = *(void (**)(char *, uint64_t))(v12 + 8);
  v42(v14, v11);
  v48 = v2;
  v22 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 24);
  if (!v21)
  {
    v19 = 0;
    v21 = 0xE000000000000000;
  }
  v23 = swift_retain(v22);
  v24 = FMIPManager.devices.getter(v23);
  swift_bridgeObjectRetain(v21);
  v25 = sub_1003F26FC(v24, v19, v21);
  swift_bridgeObjectRelease(v24);
  v26 = swift_bridgeObjectRelease(v21);
  if (v25[2])
  {
    v17((char *)a1, (uint64_t)v25 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v11, v26);
    v27 = 0;
  }
  else
  {
    v27 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a1, v27, 1, v11);
  swift_release(v22);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v21);
  sub_100007464(a1, (uint64_t)v10, &qword_1005D6710);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  if ((_DWORD)v28 == 1)
  {
    sub_1000051EC((uint64_t)v10, &qword_1005D6710);
    v29 = 0;
  }
  else
  {
    v30 = v43;
    FMIPDevice.state.getter(v28);
    v31 = ((uint64_t (*)(char *, uint64_t))v42)(v10, v11);
    v32 = v44;
    static FMIPDeviceState.isThisDevice.getter(v31);
    v33 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
    v34 = v46;
    v29 = dispatch thunk of SetAlgebra.isSuperset(of:)(v32, v46, v33);
    v35 = *(void (**)(char *, uint64_t))(v45 + 8);
    v35(v32, v34);
    v35(v30, v34);
  }
  v36 = *(_QWORD *)(v48 + v47) + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v36, v49, 0, 0);
  v37 = *(_BYTE *)(v36 + *(int *)(type metadata accessor for FMDeviceDetailViewModel(0) + 160));
  v38 = v37 & ~v29;
  v39 = v37 & v29;
  if ((v38 & 1) != 0)
    v40 = 256;
  else
    v40 = 0;
  return v40 & 0xFFFFFFFE | v39 & 1;
}

uint64_t sub_1001982F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10019832C + 4 * byte_100486A54[a1]))(0x434952454E4547, 0xE700000000000000);
}

uint64_t sub_10019832C()
{
  return 0x5241455F4E49;
}

uint64_t sub_100198340()
{
  return 0x444145485F4E4FLL;
}

uint64_t sub_100198354()
{
  return 0x4B43454E5F4E4FLL;
}

uint64_t sub_100198368()
{
  return 0x454C4241545F4E4FLL;
}

unint64_t sub_100198388()
{
  return 0xD000000000000014;
}

uint64_t sub_1001983A4()
{
  return 0x535F524556524553;
}

char *sub_1001983C8(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  id v19;
  objc_class *v20;
  id v21;
  char *v22;
  uint64_t v23;
  id v24;
  id v25;
  char *v26;
  uint64_t v27;
  id v28;
  id v29;
  char *v30;
  uint64_t v31;
  id v32;
  id v33;
  char *v34;
  uint64_t v35;
  id v36;
  id v37;
  char *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  objc_class *v61;
  id v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  objc_class *v66;
  id v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  objc_class *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  id v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unsigned int v141;
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  objc_super v154;
  _OWORD v155[7];
  uint64_t v156;
  __int128 v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  __int128 v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  __int128 v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  __int128 v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  __int128 v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  __int128 v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char v186;

  v2 = v1;
  v146 = a1;
  v3 = type metadata accessor for FMIPDevice(0);
  v148 = *(_QWORD *)(v3 - 8);
  v149 = v3;
  __chkstk_darwin(v3);
  v147 = (char *)&v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D33B0);
  __chkstk_darwin(v5);
  v145 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v151);
  v144 = (char *)&v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v150 = (char *)&v138 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v143 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v142 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMPlatterIcon(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_delegate];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14);
  v15 = &v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundDelegate];
  *((_QWORD *)v15 + 1) = 0;
  swift_unknownObjectWeakInit(v15);
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_conditionsSubscription] = 0;
  v16 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton;
  v17 = (void *)objc_opt_self(UIColor);
  v18 = v1;
  v19 = objc_msgSend(v17, "systemIndigoColor");
  swift_storeEnumTagMultiPayload(v13, v11, 4);
  *(_QWORD *)&v182 = 0xD00000000000001ELL;
  *((_QWORD *)&v182 + 1) = 0x80000001004B1AA0;
  v20 = (objc_class *)type metadata accessor for FMIconPlatterButton(0);
  v184 = 0;
  v185 = 0;
  v183 = 0;
  v186 = 0;
  v21 = objc_allocWithZone(v20);
  v22 = sub_1000B0244(v19, (uint64_t)v13, &v182, 1, 1);

  *(_QWORD *)&v2[v16] = v22;
  v23 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton;
  v24 = objc_msgSend(v17, "systemIndigoColor");
  swift_storeEnumTagMultiPayload(v13, v11, 7);
  *(_QWORD *)&v177 = 0xD000000000000028;
  *((_QWORD *)&v177 + 1) = 0x80000001004B1AC0;
  v179 = 0;
  v180 = 0;
  v178 = 0;
  v181 = 0;
  v25 = objc_allocWithZone(v20);
  v26 = sub_1000B0244(v24, (uint64_t)v13, &v177, 0, 0);

  *(_QWORD *)&v18[v23] = v26;
  v27 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteRightButton;
  v28 = objc_msgSend(v17, "systemIndigoColor");
  swift_storeEnumTagMultiPayload(v13, v11, 8);
  *(_QWORD *)&v172 = 0xD000000000000029;
  *((_QWORD *)&v172 + 1) = 0x80000001004B1AF0;
  v174 = 0;
  v175 = 0;
  v173 = 0;
  v176 = 0;
  v29 = objc_allocWithZone(v20);
  v30 = sub_1000B0244(v28, (uint64_t)v13, &v172, 0, 0);

  *(_QWORD *)&v18[v27] = v30;
  v31 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_stopSoundButton;
  v32 = objc_msgSend(v17, "systemIndigoColor");
  swift_storeEnumTagMultiPayload(v13, v11, 5);
  *(_QWORD *)&v167 = 0xD00000000000001ELL;
  *((_QWORD *)&v167 + 1) = 0x80000001004B1B20;
  v169 = 0;
  v170 = 0;
  v168 = 0;
  v171 = 0;
  v33 = objc_allocWithZone(v20);
  v34 = sub_1000B0244(v32, (uint64_t)v13, &v167, 0, 0);

  *(_QWORD *)&v18[v31] = v34;
  v35 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton;
  v36 = objc_msgSend(v17, "systemBlueColor");
  swift_storeEnumTagMultiPayload(v13, v11, 3);
  *(_QWORD *)&v162 = 0xD00000000000001FLL;
  *((_QWORD *)&v162 + 1) = 0x80000001004AB420;
  v164 = 0;
  v165 = 0;
  v163 = 0;
  v166 = 0;
  v37 = objc_allocWithZone(v20);
  v38 = sub_1000B0244(v36, (uint64_t)v13, &v162, 0, 0);

  *(_QWORD *)&v18[v35] = v38;
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_itemConnectionManager] = 0;
  v39 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findButton;
  v40 = objc_msgSend(v17, "systemBlueColor");
  v41 = *(int *)(sub_100053F2C(&qword_1005D9938) + 48);
  v42 = enum case for FMFindingType.owner(_:);
  v43 = type metadata accessor for FMFindingType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v13, v42, v43);
  v13[v41] = 0;
  v44 = enum case for FMFindingTechnology.proximity(_:);
  v45 = type metadata accessor for FMFindingTechnology(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v13, v44, v45);
  swift_storeEnumTagMultiPayload(v13, v11, 1);
  *(_QWORD *)&v157 = 0xD000000000000019;
  *((_QWORD *)&v157 + 1) = 0x80000001004B1B40;
  v159 = 0;
  v160 = 0;
  v158 = 0;
  v161 = 0;
  v46 = objc_allocWithZone(v20);
  v47 = sub_1000B0244(v40, (uint64_t)v13, &v157, 0, 0);

  *(_QWORD *)&v18[v39] = v47;
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_btDeviceDiscoveryToken] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController____lazy_storage___ownerSession] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialTask] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession] = 0;
  v48 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialUpdateQueue;
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v141 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  v49 = v142;
  v143 = *(_QWORD *)(v143 + 104);
  v50 = ((uint64_t (*)(char *))v143)(v142);
  v51 = v150;
  static DispatchQoS.unspecified.getter(v50);
  *(_QWORD *)&v155[0] = _swiftEmptyArrayStorage;
  v52 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v139 = v52;
  v53 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v138 = v53;
  v140 = sub_10003F734((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0);
  v54 = v144;
  dispatch thunk of SetAlgebra.init<A>(_:)(v155, v53, v140, v151, v52);
  *(_QWORD *)&v18[v48] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000004DLL, 0x80000001004B1B60, v51, v54, v49, 0);
  v55 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView;
  v56 = objc_allocWithZone((Class)type metadata accessor for FMDeviceNotificationsView());
  *(_QWORD *)&v18[v55] = sub_1001F0FA4();
  v57 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsView;
  v58 = objc_allocWithZone((Class)type metadata accessor for FMDeviceShowContactDetailsView());
  *(_QWORD *)&v18[v57] = sub_10039BBC0();
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsWelcomeScreenViewController] = 0;
  v59 = &v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsPhoneNumber];
  *(_QWORD *)v59 = 0;
  *((_QWORD *)v59 + 1) = 0xE000000000000000;
  v60 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAttention;
  v61 = (objc_class *)type metadata accessor for FMExtendedPlatterInfoView(0);
  v62 = objc_allocWithZone(v61);
  *(_QWORD *)&v18[v60] = sub_1002C114C(1, 0);
  v63 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_markAsLostView;
  v64 = objc_allocWithZone((Class)type metadata accessor for FMDeviceMarkAsLostView());
  *(_QWORD *)&v18[v63] = sub_100223250();
  v65 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelEraseDeviceButton;
  v66 = (objc_class *)type metadata accessor for FMSingleLinePlatterButton();
  v67 = objc_allocWithZone(v66);
  *(_QWORD *)&v18[v65] = sub_1000472FC(0, 0, 0, 1);
  v68 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_eraseDeviceButton;
  v69 = objc_allocWithZone(v66);
  *(_QWORD *)&v18[v68] = sub_1000472FC(0, 0, 0, 1);
  v70 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_removeDeviceButton;
  v71 = objc_allocWithZone(v66);
  *(_QWORD *)&v18[v70] = sub_1000472FC(0, 0, 0, 1);
  v72 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_inaccurateAttention;
  v73 = objc_allocWithZone(v61);
  *(_QWORD *)&v18[v72] = sub_1002C114C(1, 0);
  v74 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingAttention;
  v75 = objc_allocWithZone((Class)type metadata accessor for FMFailablePlatterInfoView(0));
  v76 = OBJC_IVAR____TtC6FindMy25FMFailablePlatterInfoView_isActionable;
  v75[OBJC_IVAR____TtC6FindMy25FMFailablePlatterInfoView_isActionable] = 0;
  v75[OBJC_IVAR____TtC6FindMy25FMFailablePlatterInfoView_playSoundFailureCode] = 0;
  v75[OBJC_IVAR____TtC6FindMy25FMFailablePlatterInfoView_localizableType] = 1;
  v75[v76] = 1;
  v77 = sub_10025638C(1);
  sub_1003509B4();

  *(_QWORD *)&v18[v74] = v77;
  v78 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_mismatchAttention;
  v79 = objc_allocWithZone(v61);
  *(_QWORD *)&v18[v78] = sub_1002C114C(1, 0);
  v80 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pairingIncompleteAttention;
  v81 = objc_allocWithZone(v61);
  *(_QWORD *)&v18[v80] = sub_1002C114C(1, 0);
  v82 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pairingStatusDebugView;
  v83 = objc_allocWithZone(v61);
  *(_QWORD *)&v18[v82] = sub_1002C114C(0, 0);
  v84 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsOffAttention;
  v85 = objc_allocWithZone(v61);
  *(_QWORD *)&v18[v84] = sub_1002C114C(1, 1);
  v86 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_repairModeAttention;
  v87 = objc_allocWithZone(v61);
  *(_QWORD *)&v18[v86] = sub_1002C114C(0, 0);
  v88 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView;
  *(_QWORD *)&v18[v88] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v89 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_actionButtonsStackView;
  *(_QWORD *)&v18[v89] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v90 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackView;
  *(_QWORD *)&v18[v90] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackBottomConstraint] = 0;
  v91 = &v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundInFlight];
  v92 = type metadata accessor for Date(0);
  v93 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56);
  v93(v91, 1, 1, v92);
  v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isNotifyWhenFoundOnOverride] = 2;
  v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isNotifyWhenLeftBehindOnOverride] = 2;
  v93(&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_canShowQueueAlert], 1, 1, v92);
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_lastPlayAction] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelOnlinePlaySoundWorkItem] = 0;
  v94 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_actionQueue;
  v95 = ((uint64_t (*)(char *, _QWORD, uint64_t))v143)(v49, v141, v152);
  v96 = v150;
  static DispatchQoS.unspecified.getter(v95);
  *(_QWORD *)&v155[0] = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(v155, v138, v140, v151, v139);
  *(_QWORD *)&v18[v94] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000034, 0x80000001004B1BB0, v96, v54, v49, 0);
  v97 = &v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingPlaySoundAnalytics];
  v98 = type metadata accessor for FMIPAirPodsPlaySoundEvent(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v97, 1, 1, v98);
  v99 = &v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation];
  v100 = type metadata accessor for FMIPSafeLocation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v99, 1, 1, v100);
  v101 = &v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAddress];
  *(_QWORD *)v101 = 0;
  *((_QWORD *)v101 + 1) = 0;
  v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocationAdded] = 0;
  v102 = &v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationEvent];
  v103 = type metadata accessor for FMIPSeparationEvent(0);
  v104 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v102, 1, 1, v103);
  v105 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_geocodingCache;
  v106 = v145;
  static Locale.autoupdatingCurrent.getter(v104);
  v107 = type metadata accessor for Locale(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v106, 0, 1, v107);
  v108 = type metadata accessor for FMIPReverseGeocodingCache(0);
  swift_allocObject(v108, *(unsigned int *)(v108 + 48), *(unsigned __int16 *)(v108 + 52));
  *(_QWORD *)&v18[v105] = FMIPReverseGeocodingCache.init(preferredLocale:)(v106);
  v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showSeparationAttention] = 0;
  v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPlayingOrPending] = 0;
  v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isRangingAvailable] = 1;
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingTimer] = 0;
  v109 = type metadata accessor for FMDeviceDetailDataSource(0);
  swift_allocObject(v109, *(unsigned int *)(v109 + 48), *(unsigned __int16 *)(v109 + 52));
  v110 = swift_retain(v146);
  v111 = sub_100423C34(v110);
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource] = v111;
  v112 = objc_allocWithZone((Class)type metadata accessor for FMFindingExperiencePresenter(0));
  swift_retain(v110);
  swift_retain(v111);
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findingExperiencePresenter] = sub_10012ABB8(v110);
  v113 = (objc_class *)type metadata accessor for FMFindingExperienceCoordinator(0);
  v114 = (char *)objc_allocWithZone(v113);
  *(_QWORD *)&v114[OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_spFindingSession] = 0;
  v115 = &v114[OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_mode];
  v116 = type metadata accessor for FindingMode(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(v115, 1, 1, v116);
  *(_QWORD *)&v114[OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_mediator] = v110;
  v154.receiver = v114;
  v154.super_class = v113;
  swift_retain(v110);
  v117 = objc_msgSendSuper2(&v154, "init");
  sub_1003A80B0();

  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findingExperienceCoordinator] = v117;
  v118 = objc_allocWithZone((Class)type metadata accessor for FMErrorConditionsAttentionModule());
  v119 = swift_retain(v110);
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_errorConditionsAttentionModule] = sub_100435700(v119);
  v120 = v111 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  swift_beginAccess(v111 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice, &v153, 0, 0);
  v122 = v147;
  v121 = v148;
  v123 = v149;
  (*(void (**)(char *, uint64_t, uint64_t))(v148 + 16))(v147, v120, v149);
  v124 = swift_retain(v110);
  v125 = FMIPDevice.baIdentifier.getter(v124);
  v127 = v126;
  (*(void (**)(char *, uint64_t))(v121 + 8))(v122, v123);
  v128 = objc_allocWithZone((Class)type metadata accessor for FMTrustedLocationDetailViewController());
  v129 = sub_1003FCCA4(v110, v125, v127);
  swift_release(v110);
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_trustedLocationsDetailViewController] = v129;

  v130 = qword_1005D1D20;
  swift_retain(v110);
  if (v130 != -1)
    swift_once(&qword_1005D1D20, sub_100228680);
  v155[4] = xmmword_1005F5380;
  v155[5] = *(_OWORD *)&qword_1005F5390;
  v155[6] = xmmword_1005F53A0;
  v156 = qword_1005F53B0;
  v155[0] = xmmword_1005F5340;
  v155[1] = *(_OWORD *)algn_1005F5350;
  v155[2] = unk_1005F5360;
  v155[3] = unk_1005F5370;
  v131 = sub_100225878(v110, (uint64_t)v155);
  *(_QWORD *)(v111 + 32) = &off_10054B518;
  swift_unknownObjectWeakAssign(v111 + 24, v131);
  v132 = *(_QWORD *)&v131[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView]
       + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_delegate;
  *(_QWORD *)(v132 + 8) = &off_10054B4F0;
  swift_unknownObjectWeakAssign(v132, v131);
  v133 = *(_QWORD *)&v131[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_trustedLocationsDetailViewController]
       + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_delegate;
  *(_QWORD *)(v133 + 8) = &off_10054B4C8;
  swift_unknownObjectWeakAssign(v133, v131);
  v134 = *(_QWORD *)&v131[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_markAsLostView]
       + OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_delegate;
  *(_QWORD *)(v134 + 8) = &off_10054B4D8;
  swift_unknownObjectWeakAssign(v134, v131);
  v135 = *(_QWORD *)&v131[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findingExperiencePresenter]
       + OBJC_IVAR____TtC6FindMy28FMFindingExperiencePresenter_delegate;
  *(_QWORD *)(v135 + 8) = &off_10054B3E8;
  swift_unknownObjectWeakAssign(v135, v131);
  v136 = *(_QWORD *)&v131[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsView]
       + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_delegate;
  *(_QWORD *)(v136 + 8) = &off_10054B4A8;
  swift_unknownObjectWeakAssign(v136, v131);
  swift_release(v111);
  swift_release(v110);
  return v131;
}

void sub_10019941C(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  _QWORD v21[6];
  objc_super v22;

  v2 = v1;
  v22.receiver = v1;
  v22.super_class = (Class)type metadata accessor for FMDeviceDetailContentViewController(0);
  objc_msgSendSuper2(&v22, "viewWillAppear:", a1 & 1);
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource];
  *(_BYTE *)(v4 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updatesEnabled) = 1;
  swift_retain(v4);
  sub_100423124();
  swift_release(v4);
  v5 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 16);
  v6 = type metadata accessor for FMConditionSubscription(0);
  v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v8 = v7 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v8 + 8) = 0;
  swift_unknownObjectWeakInit(v8);
  v9 = v5;
  v10 = v2;
  UUID.init()(v10);
  v11 = v7 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v11 + 8) = &off_10054B408;
  swift_unknownObjectWeakAssign(v11, v10);

  v12 = &v9[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess(&v9[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], v21, 33, 0);
  v13 = swift_retain(v7);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
  v15 = *(_QWORD *)((*(_QWORD *)v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v14 = *(_QWORD *)((*(_QWORD *)v12 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v15 >= v14 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
  v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v7);
  specialized Array._endMutation()(v16);
  swift_endAccess(v21);

  v17 = *(_QWORD *)&v10[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_conditionsSubscription];
  *(_QWORD *)&v10[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_conditionsSubscription] = v7;
  swift_release(v17);
  sub_100199648();
  sub_100199CE4();
  v18 = *(void **)&v10[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession];
  if (v18)
  {
    v21[4] = sub_1001C97B0;
    v21[5] = 0;
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 1107296256;
    v21[2] = sub_1000063D8;
    v21[3] = &unk_10054F0E8;
    v19 = _Block_copy(v21);
    v20 = v18;
    objc_msgSend(v20, "startLocalFindableConnectionMaterialMonitoringWithCompletion:", v19);
    _Block_release(v19);

  }
}

uint64_t sub_100199648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  const char *v36;
  uint64_t v37;
  unint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  void (*v55)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68[24];
  char v69[24];

  v1 = v0;
  v61 = type metadata accessor for FindingMode(0);
  __chkstk_darwin(v61);
  v62 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v63 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPDevice(0);
  v65 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v64);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100056D88(v14, (uint64_t)qword_1005F5748);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    v60 = v9;
    v19 = v5;
    v20 = v1;
    v21 = v13;
    v22 = v7;
    v23 = v6;
    v24 = v18;
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMDeviceDetailContentViewController: Finding action START function called", v18, 2u);
    v25 = v24;
    v6 = v23;
    v7 = v22;
    v13 = v21;
    v1 = v20;
    v5 = v19;
    v9 = v60;
    swift_slowDealloc(v25, -1, -1);
  }

  v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource);
  v27 = v26 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v26 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel, v69, 0, 0);
  sub_10004FC74(v27, (uint64_t)v13, type metadata accessor for FMDeviceDetailViewModel);
  v28 = v26 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  v29 = swift_beginAccess(v26 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice, v68, 0, 0);
  v30 = v65;
  v31.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, __n128))(v65 + 16))(v11, v28, v9, v29);
  LOBYTE(v28) = FMIPDevice.isLocalFindable.getter(v31);
  v32 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v11, v9);
  if ((v28 & 1) == 0 || (v13[*(int *)(v64 + 148)] & 1) != 0)
  {
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.default.getter(v33);
    if (!os_log_type_enabled(v33, v34))
    {
LABEL_10:

LABEL_11:
      v37 = (uint64_t)v13;
      return sub_10004FCB8(v37, type metadata accessor for FMDeviceDetailViewModel);
    }
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    v36 = "FMDeviceDetailContentViewController: Finding action START Selected device is not local findable, returning";
LABEL_9:
    _os_log_impl((void *)&_mh_execute_header, v33, v34, v36, v35, 2u);
    swift_slowDealloc(v35, -1, -1);
    goto LABEL_10;
  }
  if (v13[*(int *)(v64 + 156)] != 1)
  {
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.default.getter(v33);
    if (!os_log_type_enabled(v33, v34))
      goto LABEL_10;
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    v36 = "FMDeviceDetailContentViewController: Finding action START ranging not allowed, returning";
    goto LABEL_9;
  }
  v39 = *((_QWORD *)v13 + 3);
  if (!v39)
    goto LABEL_11;
  v40 = *((_QWORD *)v13 + 2);
  v41 = swift_bridgeObjectRetain(*((_QWORD *)v13 + 3));
  v42 = v40;
  UUID.init(uuidString:)(v40, v39, v41);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    v64 = v1;
    v65 = v6;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v63, v5, v6);
    v43 = swift_bridgeObjectRetain_n(v39, 2);
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.default.getter(v44);
    v46 = os_log_type_enabled(v44, v45);
    v59 = v13;
    if (v46)
    {
      v47 = (uint8_t *)swift_slowAlloc(12, -1);
      v48 = swift_slowAlloc(32, -1);
      v67 = v48;
      *(_DWORD *)v47 = 136315138;
      swift_bridgeObjectRetain(v39);
      v49 = v42;
      v66 = sub_100056DA0(v42, v39, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);
      swift_bridgeObjectRelease_n(v39, 3);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "FMDeviceDetailContentViewController: Finding action START for identifier: %s", v47, 0xCu);
      swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v47, -1, -1);

      v51 = v61;
      v50 = (uint64_t)v62;
    }
    else
    {

      swift_bridgeObjectRelease_n(v39, 2);
      v51 = v61;
      v50 = (uint64_t)v62;
      v49 = v42;
    }
    v52 = swift_allocObject(&unk_10054B580, 32, 7);
    *(_QWORD *)(v52 + 16) = v49;
    *(_QWORD *)(v52 + 24) = v39;
    v53 = v63;
    sub_100163660(v63, (uint64_t)sub_1001CD204, v52);
    v54 = swift_release(v52);
    v55 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 16);
    v56 = v7;
    v57 = v65;
    v55(v50, v53, v65, v54);
    swift_storeEnumTagMultiPayload(v50, v51, 0);
    sub_10012DDE8(v50);
    sub_10004FCB8(v50, type metadata accessor for FindingMode);
    ((void (*)(uint64_t, uint64_t, uint64_t))v55)(v50, v53, v57);
    swift_storeEnumTagMultiPayload(v50, v51, 0);
    sub_1003A7E0C(v50);
    sub_10004FCB8(v50, type metadata accessor for FindingMode);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v53, v57);
    v37 = (uint64_t)v59;
    return sub_10004FCB8(v37, type metadata accessor for FMDeviceDetailViewModel);
  }
  sub_10004FCB8((uint64_t)v13, type metadata accessor for FMDeviceDetailViewModel);
  swift_bridgeObjectRelease(v39);
  return sub_1000051EC((uint64_t)v5, (uint64_t *)&unk_1005D53A0);
}

void sub_100199CE4()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void **v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v1 = objc_msgSend(objc_allocWithZone((Class)SPLocalFindableConnectionMaterialMonitoringSession), "init");
  v2 = swift_allocObject(&unk_10054B5D0, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v11 = sub_1001D5FD4;
  v12 = v2;
  v7 = _NSConcreteStackBlock;
  v8 = 1107296256;
  v9 = sub_1001C960C;
  v10 = &unk_10054F110;
  v3 = _Block_copy(&v7);
  objc_msgSend(v1, "setPeripheralConnectionMaterialCallback:", v3, swift_release(v12).n128_f64[0]);
  _Block_release(v3);
  v4 = swift_allocObject(&unk_10054B5D0, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16);
  v11 = sub_1001D5FDC;
  v12 = v4;
  v7 = _NSConcreteStackBlock;
  v8 = 1107296256;
  v9 = sub_100037DF8;
  v10 = &unk_10054F138;
  v5 = _Block_copy(&v7);
  objc_msgSend(v1, "setSessionInvalidatedCallback:", v5, swift_release(v12).n128_f64[0]);
  _Block_release(v5);
  v6 = *(void **)(v0
                + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession) = v1;

}

void sub_100199EF8(char a1)
{
  char *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  char v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  void *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void *v55;
  void *v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  void **aBlock;
  uint64_t v73;
  void *v74;
  void *v75;
  double (*v76)();
  uint64_t v77;
  char v78[24];
  char v79[24];
  objc_super v80;

  v2 = v1;
  v65 = type metadata accessor for DispatchWorkItemFlags(0);
  v70 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v69 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for DispatchQoS(0);
  v67 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v66 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005E4440);
  __chkstk_darwin(v9);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPSeparationEvent(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (objc_class *)type metadata accessor for FMDeviceDetailContentViewController(0);
  v80.receiver = v1;
  v80.super_class = v16;
  objc_msgSendSuper2(&v80, "viewWillDisappear:", a1 & 1);
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource];
  *(_BYTE *)(v17 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updatesEnabled) = 0;
  swift_retain(v17);
  sub_100423124();
  swift_release(v17);
  v18 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_conditionsSubscription;
  v19 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_conditionsSubscription];
  if (v19)
  {
    v62 = v15;
    v64 = v6;
    v63 = v8;
    v20 = *(char **)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 16);
    v21 = (uint64_t *)&v20[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
    swift_beginAccess(&v20[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], &aBlock, 33, 0);
    swift_retain(v19);
    v61 = v20;
    v22 = sub_10005D558(v21, v19);
    v23 = *v21;
    if ((unint64_t)*v21 >> 62)
    {
      if (v23 < 0)
        v59 = *v21;
      else
        v59 = v23 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v21);
      v24 = _CocoaArrayWrapper.endIndex.getter(v59);
      swift_bridgeObjectRelease(v23);
    }
    else
    {
      v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v6 = v64;
    if (v24 < v22)
    {
      __break(1u);
LABEL_30:
      swift_once(&qword_1005D1DE8, sub_100005ADC);
      goto LABEL_18;
    }
    sub_10005D32C(v22, v24);
    swift_endAccess(&aBlock);

    v25 = *(_QWORD *)&v2[v18];
    *(_QWORD *)&v2[v18] = 0;
    swift_release(v19);
    swift_release(v25);
    v8 = v63;
    v15 = v62;
  }
  sub_1001B91C0();
  v26 = (uint64_t)&v2[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationEvent];
  swift_beginAccess(&v2[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationEvent], v79, 0, 0);
  sub_100007464(v26, (uint64_t)v11, &qword_1005E4440);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1000051EC((uint64_t)v11, &qword_1005E4440);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v27 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
    swift_retain(v27);
    FMIPManager.enqueue(separationEvent:)(v15);
    v28 = swift_release(v27);
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v28);
  }
  v11 = (char *)v65;
  v29 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v30 = *(_BYTE **)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 16);
  v30[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areServerAlertsPostponed] = 0;
  v31 = v30;
  sub_100377310();

  v32 = v2[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPlayingOrPending];
  v2[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPlayingOrPending] = 0;
  if ((v32 & 1) != 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundDelegate]);
    if (Strong)
    {
      v34 = Strong;
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v35 = type metadata accessor for Logger(0);
      v36 = sub_100056D88(v35, (uint64_t)qword_1005F5748);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.default.getter(v37);
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "FMMediator: Device did stop playing sound", v39, 2u);
        swift_slowDealloc(v39, -1, -1);
      }

      FMIPManager.pauseThrottleOfflineLocationRefreshing(pause:)(0);
      swift_unknownObjectRelease(v34);
    }
  }
  v40 = *(_QWORD *)(*(_QWORD *)&v2[v29] + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v40, v78, 0, 0);
  sub_10004FC74(v40, (uint64_t)v8, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v8, v6) != 18)
  {
    sub_10019A6BC();
    sub_10004FCB8((uint64_t)v8, type metadata accessor for FMSelectedSection);
    goto LABEL_22;
  }
  if (qword_1005D1DE8 != -1)
    goto LABEL_30;
LABEL_18:
  v41 = type metadata accessor for Logger(0);
  v42 = sub_100056D88(v41, (uint64_t)qword_1005F5748);
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.default.getter(v43);
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v45 = 0;
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "FMDeviceDetailContentViewController: Not stopping nearby discovery cuz current selection is ranging", v45, 2u);
    swift_slowDealloc(v45, -1, -1);
  }

LABEL_22:
  v46 = swift_allocObject(&unk_10054F080, 24, 7);
  *(_QWORD *)(v46 + 16) = v2;
  v76 = sub_1001D5FCC;
  v77 = v46;
  aBlock = _NSConcreteStackBlock;
  v73 = 1107296256;
  v74 = sub_100037DF8;
  v75 = &unk_10054F098;
  v47 = _Block_copy(&aBlock);
  v48 = v2;
  v49 = v66;
  static DispatchQoS.unspecified.getter(v48);
  v71 = _swiftEmptyArrayStorage;
  v50 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v51 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v52 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  v53 = v69;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v71, v51, v52, v11, v50);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v49, v53, v47);
  _Block_release(v47);
  (*(void (**)(char *, char *))(v70 + 8))(v53, v11);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v49, v68);
  swift_release(v77);
  v54 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession;
  v55 = *(void **)&v48[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession];
  if (v55)
  {
    v76 = (double (*)())State.rawValue.getter;
    v77 = 0;
    aBlock = _NSConcreteStackBlock;
    v73 = 1107296256;
    v74 = sub_1000063D8;
    v75 = &unk_10054F0C0;
    v56 = _Block_copy(&aBlock);
    v57 = v55;
    objc_msgSend(v57, "stopLocalFindableConnectionMaterialMonitoringWithCompletion:", v56);
    _Block_release(v56);
    v58 = *(void **)&v48[v54];
    *(_QWORD *)&v48[v54] = 0;

  }
}

uint64_t sub_10019A6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  unint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[24];
  char v56[24];

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v50 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMIPDevice(0);
  v52 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v51);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_100056D88(v13, (uint64_t)qword_1005F5748);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    v49 = v8;
    v18 = v4;
    v19 = v1;
    v20 = v12;
    v21 = v6;
    v22 = v5;
    v23 = v17;
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMDeviceDetailContentViewController: Finding action STOP function called", v17, 2u);
    v24 = v23;
    v5 = v22;
    v6 = v21;
    v12 = v20;
    v1 = v19;
    v4 = v18;
    v8 = v49;
    swift_slowDealloc(v24, -1, -1);
  }

  v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource);
  v26 = v25 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v25 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel, v56, 0, 0);
  sub_10004FC74(v26, (uint64_t)v12, type metadata accessor for FMDeviceDetailViewModel);
  v27 = v25 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  v28 = swift_beginAccess(v25 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice, v55, 0, 0);
  v29 = v52;
  v30.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, __n128))(v52 + 16))(v10, v27, v8, v28);
  LOBYTE(v27) = FMIPDevice.isLocalFindable.getter(v30);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v10, v8);
  if ((v27 & 1) == 0 || (v12[*(int *)(v51 + 148)] & 1) != 0)
  {
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.default.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "FMDeviceDetailContentViewController: Finding action STOP Selected device is not local findable, returning", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

    return sub_10004FCB8((uint64_t)v12, type metadata accessor for FMDeviceDetailViewModel);
  }
  v36 = *((_QWORD *)v12 + 3);
  if (!v36)
    return sub_10004FCB8((uint64_t)v12, type metadata accessor for FMDeviceDetailViewModel);
  v52 = v1;
  v37 = *((_QWORD *)v12 + 2);
  v38 = swift_bridgeObjectRetain(v36);
  UUID.init(uuidString:)(v37, v36, v38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v50, v4, v5);
    v39 = swift_bridgeObjectRetain_n(v36, 2);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.default.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc(12, -1);
      v51 = v6;
      v43 = (uint8_t *)v42;
      v44 = swift_slowAlloc(32, -1);
      v54 = v44;
      *(_DWORD *)v43 = 136315138;
      swift_bridgeObjectRetain(v36);
      v53 = sub_100056DA0(v37, v36, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      swift_bridgeObjectRelease_n(v36, 3);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "FMDeviceDetailContentViewController: Finding action STOP for identifier: %s", v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      v45 = v43;
      v6 = v51;
      swift_slowDealloc(v45, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v36, 2);
    }
    v46 = swift_allocObject(&unk_10054B558, 32, 7);
    *(_QWORD *)(v46 + 16) = v37;
    *(_QWORD *)(v46 + 24) = v36;
    v47 = v50;
    sub_1001639AC(v50, (uint64_t)sub_1001CD1DC, v46);
    v48 = swift_release(v46);
    (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v47, v5, v48);
    return sub_10004FCB8((uint64_t)v12, type metadata accessor for FMDeviceDetailViewModel);
  }
  sub_10004FCB8((uint64_t)v12, type metadata accessor for FMDeviceDetailViewModel);
  swift_bridgeObjectRelease(v36);
  return sub_1000051EC((uint64_t)v4, (uint64_t *)&unk_1005D53A0);
}

double sub_10019AC14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v2 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialTask;
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialTask);
  if (v3)
  {
    swift_retain(*(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialTask));
    sub_100053F2C((uint64_t *)&unk_1005D2AC0);
    Task.cancel()();
    swift_release(v3);
    v4 = *(_QWORD *)(a1 + v2);
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)(a1 + v2) = 0;
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

void sub_10019ACD4()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  id v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  objc_super v17;

  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for FMDeviceDetailContentViewController(0);
  objc_msgSendSuper2(&v17, "viewDidLayoutSubviews");
  v1 = *(id *)&v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackView];
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v2;
  objc_msgSend(v2, "layoutMargins");
  v5 = v4;

  objc_msgSend(v1, "setSpacing:", v5);
  v6 = *(id *)&v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView];
  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v8 = v7;
  objc_msgSend(v7, "layoutMargins");
  v10 = v9;

  objc_msgSend(v6, "setSpacing:", v10);
  v11 = *(void **)&v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackBottomConstraint];
  if (!v11)
    return;
  v12 = v11;
  v13 = objc_msgSend(v0, "view");
  if (!v13)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v14 = v13;
  objc_msgSend(v13, "layoutMargins");
  v16 = v15;

  objc_msgSend(v12, "setConstant:", -v16);
}

id sub_10019AE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  void *object;
  NSString v13;
  void *v14;
  id v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  void *v19;
  NSString v20;
  void *v21;
  id v22;
  id v23;
  Swift::String v24;
  Swift::String v25;
  void *v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  Swift::String v33;
  Swift::String v34;
  void *v35;
  NSString v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  id v42;
  id v43;
  unint64_t v44;
  unint64_t v45;
  const char *v46;
  id v47;
  unint64_t v48;
  Swift::String v49;
  void *v50;
  NSString v51;
  double v52;
  id v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;
  uint64_t v57;
  Swift::String *v58;
  uint64_t v59;
  unint64_t v60;
  void *v61;
  void *v62;
  uint64_t v63;
  NSString v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  double v69;
  id v70;
  id v71;
  Swift::String v72;
  Swift::String v73;
  void *v74;
  NSString v75;
  void *v76;
  uint64_t v77;
  void (*v78)(uint64_t, _QWORD, uint64_t, uint64_t);
  id v79;
  _BYTE *v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  id v84;
  Swift::String v85;
  Swift::String v86;
  Swift::String v87;
  Swift::String *v88;
  uint64_t v89;
  unint64_t v90;
  void *v91;
  void *v92;
  NSString v93;
  double v94;
  id v95;
  Swift::String v96;
  Swift::String v97;
  Swift::String v98;
  Swift::String *v99;
  uint64_t v100;
  unint64_t v101;
  void *v102;
  void *v103;
  NSString v104;
  id v105;
  Swift::String_optional v106;
  Swift::String v107;
  Swift::String v108;
  Swift::String v109;
  Swift::String *v110;
  uint64_t v111;
  unint64_t v112;
  void *v113;
  void *v114;
  NSString v115;
  char *v116;
  uint64_t v117;
  double v118;
  id v119;
  Swift::String v120;
  Swift::String v121;
  Swift::String v122;
  Swift::String *v123;
  uint64_t v124;
  unint64_t v125;
  void *v126;
  void *v127;
  NSString v128;
  double v129;
  id v130;
  Swift::String v131;
  Swift::String v132;
  Swift::String v133;
  char *v134;
  Swift::String *v135;
  uint64_t v136;
  unint64_t v137;
  void *v138;
  void *v139;
  NSString v140;
  double v141;
  id v142;
  Swift::String v143;
  Swift::String v144;
  Swift::String v145;
  char *v146;
  Swift::String *v147;
  uint64_t v148;
  unint64_t v149;
  void *v150;
  void *v151;
  NSString v152;
  char *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  unint64_t v157;
  void *v158;
  uint64_t v159;
  NSString v160;
  char *v161;
  uint64_t v162;
  unint64_t v163;
  void *v164;
  uint64_t v165;
  NSString v166;
  char *v167;
  uint64_t v168;
  unint64_t v169;
  void *v170;
  uint64_t v171;
  NSString v172;
  uint64_t v173;
  uint64_t v174;
  double v175;
  id v176;
  Swift::String v177;
  Swift::String v178;
  Swift::String v179;
  Swift::String *v180;
  uint64_t v181;
  unint64_t v182;
  void *v183;
  void *v184;
  NSString v185;
  double v186;
  id v187;
  Swift::String v188;
  Swift::String v189;
  Swift::String v190;
  Swift::String *v191;
  uint64_t v192;
  unint64_t v193;
  void *v194;
  void *v195;
  NSString v196;
  double v197;
  id v198;
  Swift::String v199;
  Swift::String v200;
  Swift::String v201;
  Swift::String *v202;
  uint64_t v203;
  unint64_t v204;
  void *v205;
  void *v206;
  NSString v207;
  uint64_t v208;
  uint64_t v209;
  void *v210;
  uint64_t v211;
  id v212;
  char *v213;
  id v214;
  Swift::String v215;
  Swift::String_optional v216;
  Swift::String v217;
  Swift::String v218;
  Swift::String *v219;
  uint64_t v220;
  unint64_t v221;
  void *v222;
  void *v223;
  NSString v224;
  char *v225;
  id v226;
  Swift::String v227;
  Swift::String_optional v228;
  Swift::String v229;
  Swift::String v230;
  Swift::String *v231;
  uint64_t v232;
  unint64_t v233;
  void *v234;
  void *v235;
  NSString v236;
  _BYTE *v237;
  _BYTE *v238;
  uint64_t v239;
  uint64_t v240;
  double v241;
  id v242;
  Swift::String v243;
  Swift::String v244;
  Swift::String v245;
  Swift::String *v246;
  uint64_t v247;
  unint64_t v248;
  void *v249;
  void *v250;
  NSString v251;
  double v252;
  id v253;
  Swift::String v254;
  Swift::String v255;
  Swift::String v256;
  Swift::String *v257;
  uint64_t v258;
  unint64_t v259;
  void *v260;
  void *v261;
  NSString v262;
  uint64_t v263;
  unint64_t v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  void (*v276)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v277;
  id v278;
  uint64_t v279;
  unint64_t v280;
  uint64_t v281;
  unint64_t v282;
  uint64_t v283;
  unint64_t v284;
  Swift::String v285;
  Swift::String v286;
  Swift::String v287;
  Swift::String v288;
  Swift::String v289;
  Swift::String v290;
  Swift::String v291;
  Swift::String v292;
  Swift::String v293;
  Swift::String v294;
  Swift::String v295;
  Swift::String v296;
  Swift::String v297;
  Swift::String v298;
  Swift::String v299;
  Swift::String v300;
  Swift::String v301;
  Swift::String v302;
  Swift::String v303;

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v2);
  v4 = (char *)&v266 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100225BE4();
  v272 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackView), "setAxis:", 1);
  v271 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_actionButtonsStackView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_actionButtonsStackView), "setAxis:", 1);
  v5 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView), "setAxis:", 0);
  v270 = v5;
  objc_msgSend(*(id *)(v0 + v5), "setDistribution:", 1);
  v6 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_eraseDeviceButton)
                + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  v283 = 0;
  v284 = 0xE000000000000000;
  v7 = v6;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v284);
  v8 = (void *)objc_opt_self(NSBundle);
  v9 = objc_msgSend(v8, "mainBundle");
  v10._countAndFlagsBits = 0xD00000000000001ALL;
  v285._countAndFlagsBits = 0xD00000000000002CLL;
  v285._object = (void *)0x80000001004B1C10;
  v10._object = (void *)0x80000001004B1BF0;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v285)._object;

  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setText:", v13, swift_bridgeObjectRelease(object).n128_f64[0]);

  v14 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_removeDeviceButton)
                 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  v283 = 0;
  v284 = 0xE000000000000000;
  v15 = v14;
  _StringGuts.grow(_:)(20);
  v16 = objc_msgSend(v8, "mainBundle", swift_bridgeObjectRelease(v284).n128_f64[0]);
  v17._countAndFlagsBits = 0xD00000000000001BLL;
  v286._countAndFlagsBits = 0xD00000000000002DLL;
  v286._object = (void *)0x80000001004B1C60;
  v17._object = (void *)0x80000001004B1C40;
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v286)._object;

  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setText:", v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

  v21 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelEraseDeviceButton)
                 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  v283 = 0;
  v284 = 0xE000000000000000;
  v22 = v21;
  _StringGuts.grow(_:)(20);
  v23 = objc_msgSend(v8, "mainBundle", swift_bridgeObjectRelease(v284).n128_f64[0]);
  v287._object = (void *)0x80000001004B1CC0;
  v24._object = (void *)0x80000001004B1C90;
  v24._countAndFlagsBits = 0xD000000000000021;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v287._countAndFlagsBits = 0xD000000000000033;
  v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v287)._object;

  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setText:", v27, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v28 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingAttention);
  v29 = type metadata accessor for FMPlatterIcon(0);
  swift_storeEnumTagMultiPayload(v4, v29, 16);
  v276 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v277 = v29;
  v276(v4, 0, 1, v29);
  v275 = v4;
  sub_1002565D8((uint64_t)v4);
  v30 = *(void **)(v28 + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_label);
  v283 = 0;
  v284 = 0xE000000000000000;
  v31 = v30;
  _StringGuts.grow(_:)(20);
  v32 = objc_msgSend(v8, "mainBundle", swift_bridgeObjectRelease(v284).n128_f64[0]);
  v288._object = (void *)0x80000001004B1D30;
  v33._object = (void *)0x80000001004B1D00;
  v33._countAndFlagsBits = 0xD000000000000021;
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v288._countAndFlagsBits = 0xD000000000000033;
  v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v288)._object;

  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v31, "setText:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

  v274 = v28;
  v37 = *(void **)(v28 + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_subtitle);
  v38 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource;
  v39 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v39, &v283, 0, 0);
  v40 = type metadata accessor for FMDeviceDetailViewModel(0);
  v41 = *(unsigned __int8 *)(v39 + *(int *)(v40 + 52));
  v269 = v38;
  v281 = 0;
  v282 = 0xE000000000000000;
  if (v41 == 1)
  {
    v42 = v37;
    _StringGuts.grow(_:)(20);
    v43 = objc_msgSend(v8, "mainBundle", swift_bridgeObjectRelease(v282).n128_f64[0]);
    v44 = 0xD00000000000003FLL;
    v45 = 0xD000000000000051;
    v265 = 0x80000001004B2070;
    v46 = "DEVICE_DETAIL_SOUND_PENDING_SUBTITLE_ADDITIONAL_CONNECTION_TIME";
  }
  else
  {
    v47 = v37;
    _StringGuts.grow(_:)(20);
    v43 = objc_msgSend(v8, "mainBundle", swift_bridgeObjectRelease(v282).n128_f64[0]);
    v44 = 0xD000000000000024;
    v45 = 0xD000000000000036;
    v265 = 0x80000001004B1DA0;
    v46 = "DEVICE_DETAIL_SOUND_PENDING_SUBTITLE";
  }
  v48 = (unint64_t)(v46 - 32) | 0x8000000000000000;
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v44, (Swift::String_optional)0, (NSBundle)v43, v49, *(Swift::String *)&v45)._object;

  v51 = String._bridgeToObjectiveC()();
  objc_msgSend(v37, "setText:", v51, swift_bridgeObjectRelease(v50).n128_f64[0]);

  v281 = 0;
  v282 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v52 = swift_bridgeObjectRelease(v282).n128_u64[0];
  v278 = v8;
  v53 = objc_msgSend(v8, "mainBundle", v52);
  v54._countAndFlagsBits = 0xD000000000000017;
  v289._countAndFlagsBits = 0xD000000000000029;
  v273 = (uint64_t)"LEARN_MORE_BUTTON_TITLE";
  v289._object = (void *)0x80000001004A7410;
  v267 = "g CANCEL_BUTTON_TITLE";
  v54._object = (void *)0x80000001004A73F0;
  v55._countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  v56 = NSLocalizedString(_:tableName:bundle:value:comment:)(v54, (Swift::String_optional)0, (NSBundle)v53, v55, v289);

  v57 = v274;
  v58 = (Swift::String *)(v274 + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_actionTitle);
  v59 = *(_QWORD *)(v274 + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_actionTitle + 8);
  *v58 = v56;
  v60 = swift_bridgeObjectRelease(v59).n128_u64[0];
  v61 = *(void **)(v57 + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_actionLabel);
  v62 = v58->_object;
  v63 = (uint64_t)v275;
  if (v62)
  {
    swift_bridgeObjectRetain(v58->_object);
    v64 = String._bridgeToObjectiveC()();
    v60 = swift_bridgeObjectRelease(v62).n128_u64[0];
  }
  else
  {
    v64 = 0;
  }
  objc_msgSend(v61, "setText:", v64, *(double *)&v60);

  v65 = *(_QWORD *)(v1 + v269) + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v65, &v281, 0, 0);
  *(_BYTE *)(v274 + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_hasAction) = *(_BYTE *)(v65 + *(int *)(v40 + 52));
  sub_100257010();
  sub_1001B6FD8();
  v66 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_inaccurateAttention;
  v67 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_inaccurateAttention)
                 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label);
  v279 = 0;
  v280 = 0xE000000000000000;
  v68 = v67;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v69 = swift_bridgeObjectRelease(v280).n128_u64[0];
  v70 = v278;
  v71 = objc_msgSend(v278, "mainBundle", v69);
  v72._countAndFlagsBits = 0xD000000000000023;
  v290._countAndFlagsBits = 0xD000000000000035;
  v290._object = (void *)0x80000001004AB730;
  v72._object = (void *)0x80000001004AB700;
  v73._countAndFlagsBits = 0;
  v73._object = (void *)0xE000000000000000;
  v74 = NSLocalizedString(_:tableName:bundle:value:comment:)(v72, (Swift::String_optional)0, (NSBundle)v71, v73, v290)._object;

  v75 = String._bridgeToObjectiveC()();
  objc_msgSend(v68, "setText:", v75, swift_bridgeObjectRelease(v74).n128_f64[0]);

  v76 = *(void **)(v1 + v66);
  v77 = v277;
  swift_storeEnumTagMultiPayload(v63, v277, 18);
  v78 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v276;
  v276((char *)v63, 0, 1, v77);
  v79 = v76;
  sub_1002C0C88(v63);

  v269 = v66;
  v80 = *(_BYTE **)(v1 + v66);
  v81 = v63;
  v80[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed] = 1;
  v82 = v80;
  sub_1002C0DEC();

  v83 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_mismatchAttention);
  swift_storeEnumTagMultiPayload(v81, v77, 26);
  v78(v81, 0, 1, v77);
  sub_1002C0C88(v81);
  v279 = 0;
  v280 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v84 = objc_msgSend(v70, "mainBundle", swift_bridgeObjectRelease(v280).n128_f64[0]);
  v291._countAndFlagsBits = 0xD000000000000028;
  v291._object = (void *)0x80000001004B1E00;
  v85._object = (void *)0x80000001004B1DE0;
  v85._countAndFlagsBits = 0xD000000000000016;
  v86._countAndFlagsBits = 0;
  v86._object = (void *)0xE000000000000000;
  v87 = NSLocalizedString(_:tableName:bundle:value:comment:)(v85, (Swift::String_optional)0, (NSBundle)v84, v86, v291);

  v88 = (Swift::String *)(v83 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title);
  v89 = *(_QWORD *)(v83 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title + 8);
  *v88 = v87;
  v90 = swift_bridgeObjectRelease(v89).n128_u64[0];
  v91 = *(void **)(v83 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label);
  v92 = v88->_object;
  if (v92)
  {
    swift_bridgeObjectRetain(v88->_object);
    v93 = String._bridgeToObjectiveC()();
    v90 = swift_bridgeObjectRelease(v92).n128_u64[0];
  }
  else
  {
    v93 = 0;
  }
  objc_msgSend(v91, "setText:", v93, *(double *)&v90);

  v279 = 0;
  v280 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v94 = swift_bridgeObjectRelease(v280).n128_u64[0];
  v95 = objc_msgSend(v278, "mainBundle", v94);
  v96._countAndFlagsBits = 0xD000000000000017;
  v292._countAndFlagsBits = 0xD000000000000029;
  v292._object = (void *)(v273 | 0x8000000000000000);
  v96._object = (void *)((unint64_t)v267 | 0x8000000000000000);
  v97._countAndFlagsBits = 0;
  v97._object = (void *)0xE000000000000000;
  v98 = NSLocalizedString(_:tableName:bundle:value:comment:)(v96, (Swift::String_optional)0, (NSBundle)v95, v97, v292);

  v99 = (Swift::String *)(v83 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle);
  v100 = *(_QWORD *)(v83 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle + 8);
  *v99 = v98;
  v101 = swift_bridgeObjectRelease(v100).n128_u64[0];
  v102 = *(void **)(v83 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionLabel);
  v103 = v99->_object;
  if (v103)
  {
    swift_bridgeObjectRetain(v99->_object);
    v104 = String._bridgeToObjectiveC()();
    v101 = swift_bridgeObjectRelease(v103).n128_u64[0];
  }
  else
  {
    v104 = 0;
  }
  objc_msgSend(v102, "setText:", v104, *(double *)&v101);

  v105 = objc_msgSend(v278, "mainBundle");
  v106.value._countAndFlagsBits = 0xD000000000000010;
  v107._countAndFlagsBits = 0xD000000000000019;
  v293._object = (void *)0x80000001004ADC80;
  v107._object = (void *)0x80000001004B1E30;
  v106.value._object = (void *)0x80000001004ADC60;
  v108._countAndFlagsBits = 0;
  v108._object = (void *)0xE000000000000000;
  v293._countAndFlagsBits = 0xD000000000000015;
  v109 = NSLocalizedString(_:tableName:bundle:value:comment:)(v107, v106, (NSBundle)v105, v108, v293);

  v110 = (Swift::String *)(v83 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle);
  v111 = *(_QWORD *)(v83 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle + 8);
  *v110 = v109;
  v112 = swift_bridgeObjectRelease(v111).n128_u64[0];
  v113 = *(void **)(v83 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel);
  v114 = v110->_object;
  if (v114)
  {
    swift_bridgeObjectRetain(v110->_object);
    v115 = String._bridgeToObjectiveC()();
    v112 = swift_bridgeObjectRelease(v114).n128_u64[0];
  }
  else
  {
    v115 = 0;
  }
  objc_msgSend(v113, "setText:", v115, *(double *)&v112);

  *(_BYTE *)(v83 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed) = 1;
  sub_1002C0DEC();
  v116 = *(char **)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pairingIncompleteAttention);
  v117 = v277;
  swift_storeEnumTagMultiPayload(v81, v277, 27);
  v276((char *)v81, 0, 1, v117);
  sub_1002C0C88(v81);
  v279 = 0;
  v280 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v118 = swift_bridgeObjectRelease(v280).n128_u64[0];
  v119 = objc_msgSend(v278, "mainBundle", v118);
  v120._countAndFlagsBits = 0xD00000000000001ELL;
  v294._countAndFlagsBits = 0xD000000000000030;
  v294._object = (void *)0x80000001004B1E70;
  v120._object = (void *)0x80000001004B1E50;
  v121._countAndFlagsBits = 0;
  v121._object = (void *)0xE000000000000000;
  v122 = NSLocalizedString(_:tableName:bundle:value:comment:)(v120, (Swift::String_optional)0, (NSBundle)v119, v121, v294);

  v123 = (Swift::String *)&v116[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title];
  v124 = *(_QWORD *)&v116[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title + 8];
  *v123 = v122;
  v125 = swift_bridgeObjectRelease(v124).n128_u64[0];
  v275 = v116;
  v126 = *(void **)&v116[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label];
  v127 = v123->_object;
  if (v127)
  {
    swift_bridgeObjectRetain(v123->_object);
    v128 = String._bridgeToObjectiveC()();
    v125 = swift_bridgeObjectRelease(v127).n128_u64[0];
  }
  else
  {
    v128 = 0;
  }
  objc_msgSend(v126, "setText:", v128, *(double *)&v125);

  v279 = 0;
  v280 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v129 = swift_bridgeObjectRelease(v280).n128_u64[0];
  v130 = objc_msgSend(v278, "mainBundle", v129);
  v131._countAndFlagsBits = 0xD00000000000001FLL;
  v295._countAndFlagsBits = 0xD000000000000031;
  v295._object = (void *)0x80000001004B1ED0;
  v131._object = (void *)0x80000001004B1EB0;
  v132._countAndFlagsBits = 0;
  v132._object = (void *)0xE000000000000000;
  v133 = NSLocalizedString(_:tableName:bundle:value:comment:)(v131, (Swift::String_optional)0, (NSBundle)v130, v132, v295);

  v134 = v275;
  v135 = (Swift::String *)&v275[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle];
  v136 = *(_QWORD *)&v275[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle + 8];
  *v135 = v133;
  v137 = swift_bridgeObjectRelease(v136).n128_u64[0];
  v138 = *(void **)&v134[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionLabel];
  v139 = v135->_object;
  v268 = v83;
  if (v139)
  {
    swift_bridgeObjectRetain(v139);
    v140 = String._bridgeToObjectiveC()();
    v137 = swift_bridgeObjectRelease(v139).n128_u64[0];
  }
  else
  {
    v140 = 0;
  }
  objc_msgSend(v138, "setText:", v140, *(double *)&v137);

  v279 = 0;
  v280 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v141 = swift_bridgeObjectRelease(v280).n128_u64[0];
  v142 = objc_msgSend(v278, "mainBundle", v141);
  v143._countAndFlagsBits = 0xD000000000000030;
  v296._countAndFlagsBits = 0xD000000000000042;
  v296._object = (void *)0x80000001004AB860;
  v143._object = (void *)0x80000001004AB820;
  v144._countAndFlagsBits = 0;
  v144._object = (void *)0xE000000000000000;
  v145 = NSLocalizedString(_:tableName:bundle:value:comment:)(v143, (Swift::String_optional)0, (NSBundle)v142, v144, v296);

  v146 = v275;
  v147 = (Swift::String *)&v275[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle];
  v148 = *(_QWORD *)&v275[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle + 8];
  *v147 = v145;
  v149 = swift_bridgeObjectRelease(v148).n128_u64[0];
  v150 = *(void **)&v146[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel];
  v151 = v147->_object;
  if (v151)
  {
    swift_bridgeObjectRetain(v147->_object);
    v152 = String._bridgeToObjectiveC()();
    v149 = swift_bridgeObjectRelease(v151).n128_u64[0];
  }
  else
  {
    v152 = 0;
  }
  objc_msgSend(v150, "setText:", v152, *(double *)&v149);

  v275[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed] = 1;
  sub_1002C0DEC();
  v153 = *(char **)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pairingStatusDebugView);
  v154 = v277;
  swift_storeEnumTagMultiPayload(v81, v277, 28);
  v276((char *)v81, 0, 1, v154);
  sub_1002C0C88(v81);
  v155 = &v153[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title];
  v156 = *(_QWORD *)&v153[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title + 8];
  *(_OWORD *)&v153[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title] = xmmword_100486C60;
  v157 = swift_bridgeObjectRelease(v156).n128_u64[0];
  v158 = *(void **)&v153[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label];
  v159 = *((_QWORD *)v155 + 1);
  if (v159)
  {
    swift_bridgeObjectRetain(v159);
    v160 = String._bridgeToObjectiveC()();
    v157 = swift_bridgeObjectRelease(v159).n128_u64[0];
  }
  else
  {
    v160 = 0;
  }
  objc_msgSend(v158, "setText:", v160, *(double *)&v157);

  v161 = &v153[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle];
  v162 = *(_QWORD *)&v153[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle + 8];
  *(_QWORD *)v161 = 0;
  *((_QWORD *)v161 + 1) = 0;
  v163 = swift_bridgeObjectRelease(v162).n128_u64[0];
  v164 = *(void **)&v153[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionLabel];
  v165 = *((_QWORD *)v161 + 1);
  if (v165)
  {
    swift_bridgeObjectRetain(v165);
    v166 = String._bridgeToObjectiveC()();
    v163 = swift_bridgeObjectRelease(v165).n128_u64[0];
  }
  else
  {
    v166 = 0;
  }
  objc_msgSend(v164, "setText:", v166, *(double *)&v163);

  v167 = &v153[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle];
  v168 = *(_QWORD *)&v153[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle + 8];
  *(_OWORD *)&v153[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle] = xmmword_100486C70;
  v169 = swift_bridgeObjectRelease(v168).n128_u64[0];
  v170 = *(void **)&v153[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel];
  v171 = *((_QWORD *)v167 + 1);
  if (v171)
  {
    swift_bridgeObjectRetain(v171);
    v172 = String._bridgeToObjectiveC()();
    v169 = swift_bridgeObjectRelease(v171).n128_u64[0];
  }
  else
  {
    v172 = 0;
  }
  objc_msgSend(v170, "setText:", v172, *(double *)&v169);

  v153[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed] = 1;
  v267 = v153;
  sub_1002C0DEC();
  v173 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsOffAttention);
  v174 = v277;
  swift_storeEnumTagMultiPayload(v81, v277, 20);
  v276((char *)v81, 0, 1, v174);
  sub_1002C0C88(v81);
  v279 = 0;
  v280 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v175 = swift_bridgeObjectRelease(v280).n128_u64[0];
  v176 = objc_msgSend(v278, "mainBundle", v175);
  v297._countAndFlagsBits = 0xD000000000000027;
  v297._object = (void *)0x80000001004A79B0;
  v177._object = (void *)0x80000001004A7990;
  v177._countAndFlagsBits = 0xD000000000000015;
  v178._countAndFlagsBits = 0;
  v178._object = (void *)0xE000000000000000;
  v179 = NSLocalizedString(_:tableName:bundle:value:comment:)(v177, (Swift::String_optional)0, (NSBundle)v176, v178, v297);

  v180 = (Swift::String *)(v173 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title);
  v181 = *(_QWORD *)(v173 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title + 8);
  *v180 = v179;
  v182 = swift_bridgeObjectRelease(v181).n128_u64[0];
  v183 = *(void **)(v173 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label);
  v184 = v180->_object;
  if (v184)
  {
    swift_bridgeObjectRetain(v180->_object);
    v185 = String._bridgeToObjectiveC()();
    v182 = swift_bridgeObjectRelease(v184).n128_u64[0];
  }
  else
  {
    v185 = 0;
  }
  objc_msgSend(v183, "setText:", v185, *(double *)&v182);

  v279 = 0;
  v280 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v186 = swift_bridgeObjectRelease(v280).n128_u64[0];
  v187 = objc_msgSend(v278, "mainBundle", v186);
  v188._countAndFlagsBits = 0xD000000000000030;
  v298._countAndFlagsBits = 0xD000000000000042;
  v298._object = (void *)0x80000001004AB860;
  v188._object = (void *)0x80000001004AB820;
  v189._countAndFlagsBits = 0;
  v189._object = (void *)0xE000000000000000;
  v190 = NSLocalizedString(_:tableName:bundle:value:comment:)(v188, (Swift::String_optional)0, (NSBundle)v187, v189, v298);

  v191 = (Swift::String *)(v173 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle);
  v192 = *(_QWORD *)(v173 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle + 8);
  *v191 = v190;
  v193 = swift_bridgeObjectRelease(v192).n128_u64[0];
  v194 = *(void **)(v173 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel);
  v195 = v191->_object;
  if (v195)
  {
    swift_bridgeObjectRetain(v191->_object);
    v196 = String._bridgeToObjectiveC()();
    v193 = swift_bridgeObjectRelease(v195).n128_u64[0];
  }
  else
  {
    v196 = 0;
  }
  objc_msgSend(v194, "setText:", v196, *(double *)&v193);

  v279 = 0;
  v280 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v197 = swift_bridgeObjectRelease(v280).n128_u64[0];
  v198 = objc_msgSend(v278, "mainBundle", v197);
  v299._countAndFlagsBits = 0xD000000000000020;
  v299._object = (void *)0x80000001004A7A70;
  v199._countAndFlagsBits = 0x45535F4F545F4F47;
  v199._object = (void *)0xEE0053474E495454;
  v200._countAndFlagsBits = 0;
  v200._object = (void *)0xE000000000000000;
  v201 = NSLocalizedString(_:tableName:bundle:value:comment:)(v199, (Swift::String_optional)0, (NSBundle)v198, v200, v299);

  v202 = (Swift::String *)(v173 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle);
  v203 = *(_QWORD *)(v173 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle + 8);
  *v202 = v201;
  v204 = swift_bridgeObjectRelease(v203).n128_u64[0];
  v205 = *(void **)(v173 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionLabel);
  v206 = v202->_object;
  if (v206)
  {
    swift_bridgeObjectRetain(v202->_object);
    v207 = String._bridgeToObjectiveC()();
    v204 = swift_bridgeObjectRelease(v206).n128_u64[0];
  }
  else
  {
    v207 = 0;
  }
  objc_msgSend(v205, "setText:", v207, *(double *)&v204);

  v208 = v173 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_delegate;
  *(_QWORD *)(v208 + 8) = &off_10054B4B8;
  swift_unknownObjectWeakAssign(v208, v1);
  *(_BYTE *)(v173 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed) = 1;
  sub_1002C0DEC();
  v209 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAttention;
  v210 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAttention);
  v211 = v277;
  swift_storeEnumTagMultiPayload(v81, v277, 13);
  v276((char *)v81, 0, 1, v211);
  v212 = v210;
  sub_1002C0C88(v81);

  v273 = v209;
  v213 = (char *)*(id *)(v1 + v209);
  v214 = objc_msgSend(v278, "mainBundle");
  v215._countAndFlagsBits = 0xD000000000000024;
  v300._object = (void *)0x80000001004A91F0;
  v215._object = (void *)0x80000001004B1F10;
  v216.value._countAndFlagsBits = 0xD000000000000016;
  v216.value._object = (void *)0x80000001004A91D0;
  v217._countAndFlagsBits = 0;
  v217._object = (void *)0xE000000000000000;
  v300._countAndFlagsBits = 0xD00000000000001BLL;
  v218 = NSLocalizedString(_:tableName:bundle:value:comment:)(v215, v216, (NSBundle)v214, v217, v300);

  v219 = (Swift::String *)&v213[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle];
  v220 = *(_QWORD *)&v213[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle + 8];
  *v219 = v218;
  v221 = swift_bridgeObjectRelease(v220).n128_u64[0];
  v222 = *(void **)&v213[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionLabel];
  v223 = v219->_object;
  if (v223)
  {
    swift_bridgeObjectRetain(v223);
    v224 = String._bridgeToObjectiveC()();
    v221 = swift_bridgeObjectRelease(v223).n128_u64[0];
  }
  else
  {
    v224 = 0;
  }
  objc_msgSend(v222, "setText:", v224, *(double *)&v221);

  v225 = (char *)*(id *)(v1 + v273);
  v226 = objc_msgSend(v278, "mainBundle");
  v227._countAndFlagsBits = 0xD000000000000020;
  v301._object = (void *)0x80000001004A91F0;
  v227._object = (void *)0x80000001004B1F40;
  v228.value._countAndFlagsBits = 0xD000000000000016;
  v228.value._object = (void *)0x80000001004A91D0;
  v229._countAndFlagsBits = 0;
  v229._object = (void *)0xE000000000000000;
  v301._countAndFlagsBits = 0xD00000000000001BLL;
  v230 = NSLocalizedString(_:tableName:bundle:value:comment:)(v227, v228, (NSBundle)v226, v229, v301);

  v231 = (Swift::String *)&v225[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle];
  v232 = *(_QWORD *)&v225[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle + 8];
  *v231 = v230;
  v233 = swift_bridgeObjectRelease(v232).n128_u64[0];
  v234 = *(void **)&v225[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel];
  v235 = v231->_object;
  if (v235)
  {
    swift_bridgeObjectRetain(v235);
    v236 = String._bridgeToObjectiveC()();
    v233 = swift_bridgeObjectRelease(v235).n128_u64[0];
  }
  else
  {
    v236 = 0;
  }
  objc_msgSend(v234, "setText:", v236, *(double *)&v233);

  v237 = *(_BYTE **)(v1 + v273);
  v237[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed] = 1;
  v238 = v237;
  sub_1002C0DEC();

  v239 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_repairModeAttention);
  v240 = v277;
  swift_storeEnumTagMultiPayload(v81, v277, 31);
  v276((char *)v81, 0, 1, v240);
  sub_1002C0C88(v81);
  v279 = 0;
  v280 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v241 = swift_bridgeObjectRelease(v280).n128_u64[0];
  v242 = objc_msgSend(v278, "mainBundle", v241);
  v243._countAndFlagsBits = 0xD00000000000001DLL;
  v302._countAndFlagsBits = 0xD00000000000002FLL;
  v302._object = (void *)0x80000001004B1F90;
  v243._object = (void *)0x80000001004B1F70;
  v244._countAndFlagsBits = 0;
  v244._object = (void *)0xE000000000000000;
  v245 = NSLocalizedString(_:tableName:bundle:value:comment:)(v243, (Swift::String_optional)0, (NSBundle)v242, v244, v302);

  v246 = (Swift::String *)(v239 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title);
  v247 = *(_QWORD *)(v239 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title + 8);
  *v246 = v245;
  v248 = swift_bridgeObjectRelease(v247).n128_u64[0];
  v249 = *(void **)(v239 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label);
  v250 = v246->_object;
  if (v250)
  {
    swift_bridgeObjectRetain(v246->_object);
    v251 = String._bridgeToObjectiveC()();
    v248 = swift_bridgeObjectRelease(v250).n128_u64[0];
  }
  else
  {
    v251 = 0;
  }
  objc_msgSend(v249, "setText:", v251, *(double *)&v248);

  v279 = 0;
  v280 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v252 = swift_bridgeObjectRelease(v280).n128_u64[0];
  v253 = objc_msgSend(v278, "mainBundle", v252);
  v254._countAndFlagsBits = 0xD000000000000020;
  v303._countAndFlagsBits = 0xD000000000000032;
  v303._object = (void *)0x80000001004B1FF0;
  v254._object = (void *)0x80000001004B1FC0;
  v255._countAndFlagsBits = 0;
  v255._object = (void *)0xE000000000000000;
  v256 = NSLocalizedString(_:tableName:bundle:value:comment:)(v254, (Swift::String_optional)0, (NSBundle)v253, v255, v303);

  v257 = (Swift::String *)(v239 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle);
  v258 = *(_QWORD *)(v239 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle + 8);
  *v257 = v256;
  v259 = swift_bridgeObjectRelease(v258).n128_u64[0];
  v260 = *(void **)(v239 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel);
  v261 = v257->_object;
  if (v261)
  {
    swift_bridgeObjectRetain(v257->_object);
    v262 = String._bridgeToObjectiveC()();
    v259 = swift_bridgeObjectRelease(v261).n128_u64[0];
  }
  else
  {
    v262 = 0;
  }
  objc_msgSend(v260, "setText:", v262, *(double *)&v259);

  *(_BYTE *)(v239 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed) = 1;
  sub_1002C0DEC();
  v263 = v272;
  objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView)+ OBJC_IVAR____TtC6FindMy12FMScrollView_content), "addSubview:", *(_QWORD *)(v1 + v272));
  objc_msgSend(*(id *)(v1 + v263), "addArrangedSubview:", v173);
  objc_msgSend(*(id *)(v1 + v263), "addArrangedSubview:", *(_QWORD *)(v1 + v269));
  objc_msgSend(*(id *)(v1 + v263), "addArrangedSubview:", v274);
  objc_msgSend(*(id *)(v1 + v263), "addArrangedSubview:", v268);
  objc_msgSend(*(id *)(v1 + v263), "insertArrangedSubview:atIndex:", *(_QWORD *)(v1 + v273), 0);
  objc_msgSend(*(id *)(v1 + v263), "insertArrangedSubview:atIndex:", v267, 0);
  objc_msgSend(*(id *)(v1 + v263), "insertArrangedSubview:atIndex:", v275, 0);
  objc_msgSend(*(id *)(v1 + v263), "insertArrangedSubview:atIndex:", v239, 0);
  objc_msgSend(*(id *)(v1 + v263), "addArrangedSubview:", *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_errorConditionsAttentionModule));
  objc_msgSend(*(id *)(v1 + v263), "addArrangedSubview:", *(_QWORD *)(v1 + v270));
  return objc_msgSend(*(id *)(v1 + v263), "addArrangedSubview:", *(_QWORD *)(v1 + v271));
}

void sub_10019C9E8()
{
  char *v0;
  char *v1;
  double v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  Class isa;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  Class v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;

  v1 = v0;
  sub_10022659C();
  if (qword_1005D1D20 != -1)
    swift_once(&qword_1005D1D20, sub_100228680);
  v2 = *(double *)&qword_1005F5368;
  v3 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_actionBackground];
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(*(id *)&v0[v3], "bottomAnchor");
  v6 = objc_msgSend(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView]+ OBJC_IVAR____TtC6FindMy12FMScrollView_content), "bottomAnchor");
  v43 = objc_msgSend(v5, "constraintLessThanOrEqualToAnchor:", v6);

  v45 = sub_100053F2C(&qword_1005D2F10);
  v7 = swift_allocObject(v45, 64, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100481720;
  v8 = objc_msgSend(*(id *)&v1[v3], "topAnchor");
  v9 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryRowStackView], "bottomAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v9, v2);

  *(_QWORD *)(v7 + 32) = v10;
  v11 = objc_msgSend(*(id *)&v1[v3], "leadingAnchor");
  v12 = objc_msgSend(v1, "view");
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v12, "layoutMarginsGuide");

    v15 = objc_msgSend(v14, "leadingAnchor");
    v16 = objc_msgSend(v11, "constraintEqualToAnchor:", v15);

    *(_QWORD *)(v7 + 40) = v16;
    v17 = objc_msgSend(*(id *)&v1[v3], "trailingAnchor");
    v18 = objc_msgSend(v1, "view");
    if (v18)
    {
      v19 = v18;
      v42 = (id)objc_opt_self(NSLayoutConstraint);
      v20 = objc_msgSend(v19, "layoutMarginsGuide");

      v21 = objc_msgSend(v20, "trailingAnchor");
      v22 = objc_msgSend(v17, "constraintEqualToAnchor:", v21);

      *(_QWORD *)(v7 + 48) = v22;
      *(_QWORD *)(v7 + 56) = v43;
      specialized Array._endMutation()(v23);
      sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
      v44 = v43;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v42, "activateConstraints:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

      v25 = swift_allocObject(v45, 64, 7);
      *(_OWORD *)(v25 + 16) = xmmword_100481720;
      v26 = objc_msgSend(v4, "widthAnchor");
      v27 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_actionButtonsStackView;
      v28 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_actionButtonsStackView], "widthAnchor");
      v29 = objc_msgSend(v26, "constraintEqualToAnchor:", v28);

      *(_QWORD *)(v25 + 32) = v29;
      v30 = objc_msgSend(v4, "heightAnchor");
      v31 = objc_msgSend(*(id *)&v1[v27], "heightAnchor");
      v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

      *(_QWORD *)(v25 + 40) = v32;
      v33 = objc_msgSend(v4, "centerYAnchor");
      v34 = objc_msgSend(*(id *)&v1[v27], "centerYAnchor");
      v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

      *(_QWORD *)(v25 + 48) = v35;
      v36 = objc_msgSend(v4, "centerXAnchor");
      v37 = objc_msgSend(*(id *)&v1[v27], "centerXAnchor");
      v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

      *(_QWORD *)(v25 + 56) = v38;
      specialized Array._endMutation()(v39);
      v40 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v42, "activateConstraints:", v40, swift_bridgeObjectRelease(v25).n128_f64[0]);

      v41 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackBottomConstraint];
      *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackBottomConstraint] = v44;

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10019CF60()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;

  v1 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handlePlaySound");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton), "addGestureRecognizer:", v1);
  v20 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleStopSound");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_stopSoundButton), "addGestureRecognizer:");
  v19 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleMuteLeft");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton), "addGestureRecognizer:");
  v18 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleMuteRight");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteRightButton), "addGestureRecognizer:");
  v17 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleDirections");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton), "addGestureRecognizer:");
  v16 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleErase");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_eraseDeviceButton), "addGestureRecognizer:");
  v15 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "removeOrRepairDevice");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_removeDeviceButton), "addGestureRecognizer:");
  v14 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleCancelErase");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelEraseDeviceButton), "addGestureRecognizer:");
  v13 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleFind");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findButton), "addGestureRecognizer:");
  v2 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleSeparation");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAttention), "addGestureRecognizer:", v2);
  v3 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleInnaccurateLocationAttentionTap");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_inaccurateAttention), "addGestureRecognizer:", v3);
  v4 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "showMismatchLearnMore");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_mismatchAttention), "addGestureRecognizer:", v4);
  v5 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "showPairingIncompleteLearnMore");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pairingIncompleteAttention), "addGestureRecognizer:", v5);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingAttention);
  if (*((_BYTE *)v6 + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_hasAction) == 1)
  {
    v7 = v4;
    v8 = v3;
    v9 = v2;
    v10 = v1;
    v11 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "showSoundPendingLearnMore");
    objc_msgSend(v6, "addGestureRecognizer:", v11);

    v1 = v10;
    v2 = v9;
    v3 = v8;
    v4 = v7;
  }
  v12 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleNotificationsOffAttentionTap");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsOffAttention), "addGestureRecognizer:", v12);

}

void sub_10019D3D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t My;
  _QWORD *v36;
  int *v37;
  double v38;
  double v39;
  void *v40;
  NSString v41;
  void *v42;
  NSString v43;
  void *v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  NSString v48;
  uint64_t v49;
  BOOL v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  char *v59;
  char v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  char *v70;
  id v71;
  NSString v72;
  int v73;
  void *v74;
  id v75;
  id v76;
  Swift::String v77;
  Swift::String v78;
  void *object;
  NSString v80;
  char **v81;
  uint64_t v82;
  int v83;
  void *v84;
  SEL *v85;
  id v86;
  id v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  char v94;
  __n128 v95;
  uint64_t v96;
  int *v97;
  uint64_t v98;
  int *v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  __n128 v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  void *v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char v151;
  char *v152;
  char *v153;
  uint64_t v154;
  char *v155;
  unint64_t v156;
  void *v157;
  uint64_t v158;
  NSString v159;
  void *v160;
  char *v161;
  id v162;
  Swift::String v163;
  Swift::String v164;
  Swift::String v165;
  Swift::String *v166;
  uint64_t v167;
  unint64_t v168;
  void *v169;
  void *v170;
  NSString v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  id v179;
  void *v180;
  uint64_t v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  unsigned int v186;
  id v187;
  NSString v188;
  unsigned int v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _BOOL4 v197;
  char *v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  int *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  _QWORD *v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t countAndFlagsBits;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  Swift::String v224;
  Swift::String v225;
  uint64_t v226;
  char *v227;
  Swift::String v228;
  void *v229;
  void *v230;
  __n128 v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t *v235;
  uint64_t v236;
  uint64_t v237;
  void *v238;
  uint64_t v239;
  uint64_t v240;
  Swift::String v241;
  char *v242;
  int v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  __n128 v249;
  uint64_t v250;
  uint64_t (*v251)(char *, unint64_t, uint64_t, __n128);
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char v260;
  __n128 v261;
  uint64_t v262;
  uint64_t v263;
  __n128 v264;
  __n128 v265;
  uint64_t v266;
  uint64_t v267;
  void *v268;
  void *v269;
  Swift::String v270;
  uint64_t v271;
  char *v272;
  Swift::String v273;
  void *v274;
  void *v275;
  __n128 v276;
  __n128 v277;
  unint64_t v278;
  char *v279;
  char *v280;
  uint64_t v281;
  unint64_t v282;
  void *v283;
  uint64_t v284;
  NSString v285;
  char *v286;
  uint64_t v287;
  id v288;
  uint64_t v289;
  char *v290;
  char *v291;
  id v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  char *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  char *v306;
  int *v307;
  char *v308;
  _QWORD *v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t *v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  char *v324;
  void **aBlock;
  unint64_t v326;
  uint64_t (*v327)(uint64_t);
  void *v328;
  uint64_t (*v329)();
  uint64_t v330;
  Swift::String v331;
  void **v332;
  unint64_t v333;
  Swift::String v334;
  Swift::String v335;

  v2 = v1;
  v4 = type metadata accessor for FMIPItem(0);
  v321 = *(_QWORD *)(v4 - 8);
  v322 = v4;
  __chkstk_darwin(v4);
  v323 = (char *)&v287 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v6);
  v302 = (char *)&v287 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v314 = type metadata accessor for UUID(0);
  v313 = *(_QWORD *)(v314 - 8);
  __chkstk_darwin(v314);
  v324 = (char *)&v287 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v305 = type metadata accessor for FMIPItemPairingState(0);
  v317 = *(_QWORD *)(v305 - 8);
  v9 = __chkstk_darwin(v305);
  v312 = (char *)&v287 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v320 = (char *)&v287 - v11;
  v12 = sub_100053F2C(&qword_1005D99A0);
  v13 = __chkstk_darwin(v12);
  v316 = (char *)&v287 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v315 = (uint64_t *)((char *)&v287 - v15);
  v299 = type metadata accessor for FMIPItemGroup(0);
  v300 = *(_QWORD *)(v299 - 8);
  __chkstk_darwin(v299);
  v308 = (char *)&v287 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100053F2C(&qword_1005D72D0);
  v18 = __chkstk_darwin(v17);
  v298 = (char *)&v287 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v290 = (char *)&v287 - v20;
  v311 = type metadata accessor for FMIPDevice(0);
  v310 = *(_QWORD *)(v311 - 8);
  __chkstk_darwin(v311);
  v295 = (char *)&v287 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100053F2C(&qword_1005D6710);
  v23 = __chkstk_darwin(v22);
  v297 = (uint64_t)&v287 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v289 = (uint64_t)&v287 - v26;
  v27 = __chkstk_darwin(v25);
  v296 = (uint64_t)&v287 - v28;
  v29 = __chkstk_darwin(v27);
  v291 = (char *)&v287 - v30;
  v31 = __chkstk_darwin(v29);
  v294 = (uint64_t)&v287 - v32;
  __chkstk_darwin(v31);
  v306 = (char *)&v287 - v33;
  v309 = (_QWORD *)type metadata accessor for FMIPBatteryStatus(0);
  v304 = *(v309 - 1);
  __chkstk_darwin(v309);
  v303 = (char *)&v287 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  My = type metadata accessor for Feature.FindMy(0);
  v328 = (void *)My;
  v329 = (uint64_t (*)())sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v36 = sub_10003D370(&aBlock);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v36, enum case for Feature.FindMy.baAirpodsMultipartUI(_:), My);
  LODWORD(v301) = isFeatureEnabled(_:)(&aBlock);
  sub_100029574(&aBlock);
  v37 = (int *)type metadata accessor for FMDeviceDetailViewModel(0);
  v293 = v37[20];
  v38 = *(double *)(a1 + v293);
  if (*(_BYTE *)(a1 + v37[30]))
    v39 = 0.1;
  else
    v39 = 0.2;
  v40 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel);
  v41 = String._bridgeToObjectiveC()();
  objc_msgSend(v40, "setText:", v41);

  v42 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabel);
  v43 = String._bridgeToObjectiveC()();
  v288 = v42;
  objc_msgSend(v42, "setText:", v43);

  v44 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel);
  v45 = (uint64_t *)(a1 + v37[17]);
  v46 = *v45;
  v47 = v45[1];
  v48 = String._bridgeToObjectiveC()();
  objc_msgSend(v44, "setText:", v48);

  v49 = HIBYTE(v47) & 0xF;
  if ((v47 & 0x2000000000000000) == 0)
    v49 = v46 & 0xFFFFFFFFFFFFLL;
  v292 = v44;
  objc_msgSend(v44, "setHidden:", v49 == 0);
  v50 = *(_BYTE *)(a1 + v37[37]) == 1;
  v319 = a1;
  v307 = v37;
  if (v50)
  {
    v51 = *(char **)(v2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton);
    v52 = &v51[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_localizationContext];
    v53 = *(_QWORD *)&v51[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_localizationContext];
    v54 = *(_QWORD *)&v51[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_localizationContext + 8];
    v55 = *(_QWORD *)&v51[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_localizationContext + 16];
    v56 = *(_QWORD *)&v51[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_localizationContext + 24];
    v57 = *(_QWORD *)&v51[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_localizationContext + 32];
    *(_QWORD *)v52 = 0xD000000000000028;
    *((_QWORD *)v52 + 1) = 0x80000001004B2A80;
    *((_QWORD *)v52 + 2) = 0;
    *((_QWORD *)v52 + 3) = 0;
    *((_QWORD *)v52 + 4) = 0;
    v58 = v52[40];
    v52[40] = 0;
    v59 = v51;
    sub_1000AFE30(v53, v54, v55, v56, v57, v58);
    if ((v59[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled] & 1) != 0)
      v60 = 2;
    else
      v60 = v59[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_active] == 1
         || (v59[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_queued] & 1) != 0
         || v59[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] == 1
         && (v59[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_activeWhenPending] & 1) != 0;
    v61 = (void *)objc_opt_self(UIView);
    v62 = *(_QWORD *)&v59[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_iconView];
    v63 = swift_allocObject(&unk_10054EEB0, 25, 7);
    *(_QWORD *)(v63 + 16) = v59;
    *(_BYTE *)(v63 + 24) = v60;
    v329 = (uint64_t (*)())sub_1000B098C;
    v330 = v63;
    aBlock = _NSConcreteStackBlock;
    v326 = 1107296256;
    v327 = sub_100037DF8;
    v328 = &unk_10054EEC8;
    v64 = _Block_copy(&aBlock);
    v65 = v330;
    v66 = v59;
    swift_release(v65);
    objc_msgSend(v61, "transitionWithView:duration:options:animations:completion:", v62, 5242884, v64, 0, 0.25);
    _Block_release(v64);
    v67 = swift_allocObject(&unk_10054EF00, 25, 7);
    *(_QWORD *)(v67 + 16) = v66;
    *(_BYTE *)(v67 + 24) = 1;
    v329 = sub_10010C220;
    v330 = v67;
    aBlock = _NSConcreteStackBlock;
    v326 = 1107296256;
    v327 = sub_100037DF8;
    v328 = &unk_10054EF18;
    v68 = _Block_copy(&aBlock);
    v69 = v330;
    v70 = v66;
    swift_release(v69);
    objc_msgSend(v61, "animateWithDuration:animations:", v68, 0.35);
    _Block_release(v68);

    v37 = v307;
  }
  v71 = objc_retain(*(id *)(*(_QWORD *)(v2
                                      + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton)
                          + OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_subtitleLabel));
  v72 = String._bridgeToObjectiveC()();
  objc_msgSend(v71, "setText:", v72);

  v73 = *(unsigned __int8 *)(v319 + v37[36]);
  if (!(v301 & 1 | ((v73 & 1) == 0)))
  {
    v74 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton)
                   + OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_subtitleLabel);
    aBlock = 0;
    v326 = 0xE000000000000000;
    v75 = v74;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v326);
    v76 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v77._countAndFlagsBits = 0xD00000000000001FLL;
    v334._countAndFlagsBits = 0xD000000000000031;
    v334._object = (void *)0x80000001004B2A40;
    v77._object = (void *)0x80000001004B2A20;
    v78._countAndFlagsBits = 0;
    v78._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v77, (Swift::String_optional)0, (NSBundle)v76, v78, v334)._object;

    v80 = String._bridgeToObjectiveC()();
    objc_msgSend(v75, "setText:", v80, swift_bridgeObjectRelease(object).n128_f64[0]);

  }
  v318 = v2;
  v81 = &selRef_systemRedColor;
  if ((*(_BYTE *)(v319 + v37[25]) & 1) == 0)
  {
    v81 = &selRef_secondaryLabelColor;
    if ((v73 & v301) == 1)
    {
      v82 = v319;
      v83 = *(unsigned __int8 *)(v319 + v37[26]);
      v84 = (void *)objc_opt_self(UIColor);
      v85 = (SEL *)(v83 ? &selRef_systemRedColor : &selRef_secondaryLabelColor);
      v86 = objc_msgSend(v84, *v85);
      objc_msgSend(v288, "setTextColor:", v86);

      if (*(_BYTE *)(v82 + v37[27]))
        v81 = &selRef_systemRedColor;
    }
  }
  v87 = objc_msgSend((id)objc_opt_self(UIColor), *v81);
  objc_msgSend(v292, "setTextColor:", v87);

  v88 = *(char **)(v318 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView);
  v89 = OBJC_IVAR____TtC6FindMy20FMBatteryWrapperView_batteryView;
  *(_QWORD *)(*(_QWORD *)&v88[OBJC_IVAR____TtC6FindMy20FMBatteryWrapperView_batteryView]
            + OBJC_IVAR____TtC6FindMy13FMBatteryView_level) = *(_QWORD *)(v319 + v293);
  sub_10004F220();
  v90 = v309;
  (*(void (**)(char *, _QWORD, _QWORD *))(v304 + 104))(v303, enum case for FMIPBatteryStatus.charging(_:), v309);
  v91 = sub_100008000((unint64_t *)&unk_1005E3B70, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPBatteryStatus, (uint64_t)&protocol conformance descriptor for FMIPBatteryStatus);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v90, v91);
  dispatch thunk of RawRepresentable.rawValue.getter(&v332, v90, v91);
  v92 = v326;
  v93 = v333;
  if (aBlock == v332 && v326 == v333)
  {
    v94 = 1;
    v93 = v326;
  }
  else
  {
    v94 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v326, v332, v333, 0);
  }
  swift_bridgeObjectRelease(v92);
  v95 = swift_bridgeObjectRelease(v93);
  (*(void (**)(char *, _QWORD *, __n128))(v304 + 8))(v303, v309, v95);
  v96 = *(_QWORD *)&v88[v89];
  *(_BYTE *)(v96 + OBJC_IVAR____TtC6FindMy13FMBatteryView_isCharging) = v94 & 1;
  objc_msgSend(*(id *)(v96 + OBJC_IVAR____TtC6FindMy13FMBatteryView_chargingView), "setHidden:", (v94 & 1) == 0);
  v97 = v307;
  v98 = v319;
  *(_BYTE *)(v96 + OBJC_IVAR____TtC6FindMy13FMBatteryView_isLowPowerEnabled) = *(_BYTE *)(v319 + v307[31]);
  sub_10004ED74();
  *(_BYTE *)(v96 + OBJC_IVAR____TtC6FindMy13FMBatteryView_shouldShowLowPowerWarning) = v38 < v39;
  v99 = v97;
  sub_10004ED74();
  objc_msgSend(v88, "setHidden:", (*(_BYTE *)(v98 + v97[29]) & 1) == 0);
  v100 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_inaccurateAttention;
  v101 = v318;
  v102 = *(_BYTE **)(v318 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_inaccurateAttention);
  v102[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed] = (*(_BYTE *)(v98 + v99[34]) & 1) == 0;
  v103 = v102;
  sub_1002C0DEC();

  v104 = *(_QWORD *)(*(_QWORD *)(v101 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 24);
  v105 = (uint64_t *)(*(_QWORD *)(v101 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
                   + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v105, &aBlock, 0, 0);
  v106 = *v105;
  v107 = v105[1];
  swift_retain(v104);
  swift_bridgeObjectRetain(v107);
  v109 = FMIPManager.devices.getter(v108);
  swift_bridgeObjectRetain(v107);
  v110 = sub_100414D38(v109, v106, v107);
  v304 = 0;
  swift_bridgeObjectRelease(v109);
  v111 = swift_bridgeObjectRelease(v107);
  v112 = v310;
  if (v110[2])
  {
    v113 = v306;
    v114 = v311;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v310 + 16))(v306, (unint64_t)v110+ ((*(unsigned __int8 *)(v310 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v310 + 80)), v311, v111);
    v115 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v112 + 56);
    v115(v113, 0, 1, v114);
  }
  else
  {
    v115 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v310 + 56);
    v113 = v306;
    v114 = v311;
    v115(v306, 1, 1, v311);
  }
  swift_release(v104);
  swift_bridgeObjectRelease(v110);
  swift_bridgeObjectRelease(v107);
  v116 = (uint64_t)v113;
  v117 = v294;
  sub_100007464(v116, v294, &qword_1005D6710);
  v309 = *(_QWORD **)(v112 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v309)(v117, 1, v114) == 1)
  {
    sub_1000051EC(v117, &qword_1005D6710);
    v118 = v322;
    v119 = (uint64_t)v306;
  }
  else
  {
    v120 = v295;
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 32))(v295, v117, v114);
    v121 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
    v122 = (uint64_t)v291;
    v121(v291, v120, v114);
    v115((char *)v122, 0, 1, v114);
    v123 = sub_1001DE71C(0xD00000000000002DLL, 0x80000001004B29B0, v122);
    v125 = v124;
    v127 = v126;
    v129 = v128;
    swift_bridgeObjectRetain(v128);
    v303 = (char *)sub_1001DDC8C(v123, v125, v127, v129, 0, 0);
    v301 = v130;
    swift_bridgeObjectRelease_n(v129, 2);
    swift_bridgeObjectRelease(v125);
    sub_1000051EC(v122, &qword_1005D6710);
    v121((char *)v122, v120, v114);
    v115((char *)v122, 0, 1, v114);
    v131 = sub_1001DE71C(0xD000000000000034, 0x80000001004B29E0, v122);
    v133 = v132;
    v135 = v134;
    v137 = v136;
    swift_bridgeObjectRetain(v136);
    v138 = sub_1001DDC8C(v131, v133, v135, v137, 0, 0);
    v140 = v139;
    swift_bridgeObjectRelease_n(v137, 2);
    swift_bridgeObjectRelease(v133);
    v141 = sub_1000051EC(v122, &qword_1005D6710);
    v142 = FMIPDevice.ownerIdentifier.getter(v141);
    v144 = v143;
    v147 = FMIPDefaultOwnerIdentifier.getter(v145);
    v148 = v146;
    if (v142 == v147 && v144 == v146)
    {
      swift_bridgeObjectRelease(v140);
      swift_bridgeObjectRelease(v144);
      v149 = v303;
      v150 = v301;
    }
    else
    {
      v151 = _stringCompareWithSmolCheck(_:_:expecting:)(v142, v144, v147, v146, 0);
      swift_bridgeObjectRelease(v144);
      swift_bridgeObjectRelease(v148);
      v150 = v301;
      if ((v151 & 1) != 0)
        v144 = v140;
      else
        v144 = v301;
      v149 = v303;
      if ((v151 & 1) == 0)
      {
        v149 = (char *)v138;
        v150 = v140;
      }
    }
    swift_bridgeObjectRelease(v144);
    v152 = *(char **)(v318 + v100);
    v153 = &v152[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle];
    v154 = *(_QWORD *)&v152[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle + 8];
    *(_QWORD *)v153 = v149;
    *((_QWORD *)v153 + 1) = v150;
    v155 = v152;
    v156 = swift_bridgeObjectRelease(v154).n128_u64[0];
    v157 = *(void **)&v155[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel];
    v158 = *((_QWORD *)v153 + 1);
    v118 = v322;
    v99 = v307;
    if (v158)
    {
      swift_bridgeObjectRetain(v158);
      v159 = String._bridgeToObjectiveC()();
      v156 = swift_bridgeObjectRelease(v158).n128_u64[0];
    }
    else
    {
      v159 = 0;
    }
    objc_msgSend(v157, "setText:", v159, *(double *)&v156);

    v160 = *(void **)(v318 + v100);
    v332 = 0;
    v333 = 0xE000000000000000;
    v161 = v160;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v333);
    v162 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v335._countAndFlagsBits = 0xD000000000000029;
    v335._object = (void *)0x80000001004A7410;
    v163._object = (void *)0x80000001004A73F0;
    v163._countAndFlagsBits = 0xD000000000000017;
    v164._countAndFlagsBits = 0;
    v164._object = (void *)0xE000000000000000;
    v165 = NSLocalizedString(_:tableName:bundle:value:comment:)(v163, (Swift::String_optional)0, (NSBundle)v162, v164, v335);

    v166 = (Swift::String *)&v161[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle];
    v167 = *(_QWORD *)&v161[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle + 8];
    *v166 = v165;
    v168 = swift_bridgeObjectRelease(v167).n128_u64[0];
    v169 = *(void **)&v161[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionLabel];
    v170 = v166->_object;
    if (v170)
    {
      swift_bridgeObjectRetain(v166->_object);
      v171 = String._bridgeToObjectiveC()();
      v168 = swift_bridgeObjectRelease(v170).n128_u64[0];
    }
    else
    {
      v171 = 0;
    }
    v119 = (uint64_t)v306;
    objc_msgSend(v169, "setText:", v171, *(double *)&v168);

    (*(void (**)(char *, uint64_t))(v310 + 8))(v295, v311);
  }
  v172 = v99[22];
  v173 = (uint64_t)v316;
  if ((*(_BYTE *)(v319 + v172 + 2) & 2) != 0)
  {
    v174 = v119;
    v175 = v99[22];
    v176 = v318;
    v177 = *(_QWORD *)(v319 + v99[23]);
    v178 = (v177 >> 16) & 1;
    v179 = *(id *)(v318 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsView);
    sub_10039C410(BYTE2(v177) & 1);

    v180 = *(void **)(v176
                    + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsWelcomeScreenViewController);
    v172 = v175;
    v119 = v174;
    if (v180)
    {
      v181 = (v177 >> 17) & 1;
      v182 = v180;
      sub_1001D9C24(v181, v178);

    }
  }
  v183 = v318;
  v184 = *(_QWORD *)(v319 + v99[23]);
  *(_BYTE *)(*(_QWORD *)(v318 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pairingIncompleteAttention)
           + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed) = (v184 & 0x40000) == 0;
  sub_1002C0DEC();
  *(_BYTE *)(*(_QWORD *)(v183 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_mismatchAttention)
           + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed) = (v184 & 0x80000) == 0;
  sub_1002C0DEC();
  *(_BYTE *)(*(_QWORD *)(v183 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_repairModeAttention)
           + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed) = (v184 & 0x100000) == 0;
  sub_1002C0DEC();
  v185 = objc_msgSend((id)objc_opt_self(FMSystemInfo), "sharedInstance");
  v186 = objc_msgSend(v185, "isInternalBuild");

  if (v186)
  {
    v187 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v188 = String._bridgeToObjectiveC()();
    v189 = objc_msgSend(v187, "BOOLForKey:", v188);

    v190 = v296;
    sub_100007464(v119, v296, &qword_1005D6710);
    if (v189)
    {
      v301 = v172;
      v191 = v289;
      sub_100007464(v190, v289, &qword_1005D6710);
      v192 = v190;
      v193 = v311;
      v194 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v309)(v191, 1, v311);
      if ((_DWORD)v194 == 1)
      {
        sub_1000051EC(v192, &qword_1005D6710);
        sub_1000051EC(v191, &qword_1005D6710);
        v195 = (uint64_t)v290;
        v196 = v299;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v300 + 56))(v290, 1, 1, v299);
        v197 = 0;
      }
      else
      {
        v198 = v290;
        v199 = v191;
        FMIPDevice.itemGroup.getter(v194);
        sub_1000051EC(v192, &qword_1005D6710);
        v195 = (uint64_t)v198;
        (*(void (**)(uint64_t, uint64_t))(v310 + 8))(v199, v193);
        v200 = v198;
        v196 = v299;
        v197 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v300 + 48))(v200, 1, v299) != 1;
      }
      sub_1000051EC(v195, &qword_1005D72D0);
      v172 = v301;
      goto LABEL_58;
    }
  }
  else
  {
    v190 = v296;
    sub_100007464(v119, v296, &qword_1005D6710);
  }
  sub_1000051EC(v190, &qword_1005D6710);
  v197 = 0;
  v196 = v299;
LABEL_58:
  v201 = *(char **)(v318 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pairingStatusDebugView);
  v201[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed] = !v197;
  v303 = v201;
  sub_1002C0DEC();
  v202 = v297;
  sub_100007464(v119, v297, &qword_1005D6710);
  v203 = v311;
  v204 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v309)(v202, 1, v311);
  if ((_DWORD)v204 == 1)
  {
    sub_1000051EC(v202, &qword_1005D6710);
    v205 = (uint64_t)v298;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v300 + 56))(v298, 1, 1, v196);
LABEL_61:
    sub_1000051EC(v205, &qword_1005D72D0);
    goto LABEL_62;
  }
  v206 = v99;
  v207 = v119;
  v208 = v172;
  v209 = v298;
  FMIPDevice.itemGroup.getter(v204);
  v210 = v203;
  v205 = (uint64_t)v209;
  v172 = v208;
  v119 = v207;
  v99 = v206;
  (*(void (**)(uint64_t, uint64_t))(v310 + 8))(v202, v210);
  v211 = v300;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v300 + 48))(v205, 1, v196) == 1)
    goto LABEL_61;
  v213 = v308;
  v214 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v211 + 32))(v308, v205, v196);
  if (!v197)
  {
    (*(void (**)(char *, uint64_t))(v211 + 8))(v213, v196);
    v99 = v307;
    goto LABEL_62;
  }
  v301 = v172;
  v332 = 0;
  v333 = 0xE000000000000000;
  v215 = FMIPItemGroup.itemPairingStateMap.getter(v214);
  swift_bridgeObjectRetain(v215);
  v217 = sub_1003EF948(v216);
  swift_bridgeObjectRelease(v215);
  v331._countAndFlagsBits = (uint64_t)v217;
  v218 = v304;
  sub_1001C9E6C(&v331);
  if (v218)
  {
LABEL_105:
    swift_release(v331._countAndFlagsBits);
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease(v215);
  v219 = 0;
  countAndFlagsBits = v331._countAndFlagsBits;
  v221 = *(_QWORD *)(v331._countAndFlagsBits + 16);
  LODWORD(v309) = enum case for FMIPItemPairingState.paired(_:);
  v222 = v321;
  v223 = v305;
  v310 = v221;
  v311 = v331._countAndFlagsBits;
  while (1)
  {
    if (v219 == v221)
    {
      v232 = sub_100053F2C((uint64_t *)&unk_1005D6840);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v232 - 8) + 56))(v173, 1, 1, v232);
      v219 = v221;
    }
    else
    {
      if ((v219 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_104:
        __break(1u);
        goto LABEL_105;
      }
      if (v219 >= *(_QWORD *)(countAndFlagsBits + 16))
        goto LABEL_104;
      v233 = sub_100053F2C((uint64_t *)&unk_1005D6840);
      v234 = *(_QWORD *)(v233 - 8);
      sub_100007464(countAndFlagsBits+ ((*(unsigned __int8 *)(v234 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v234 + 80))+ *(_QWORD *)(v234 + 72) * v219++, v173, (uint64_t *)&unk_1005D6840);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v234 + 56))(v173, 0, 1, v233);
    }
    v235 = v315;
    sub_10005DAA0(v173, (uint64_t)v315, &qword_1005D99A0);
    v236 = sub_100053F2C((uint64_t *)&unk_1005D6840);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v236 - 8) + 48))(v235, 1, v236) == 1)
      break;
    v237 = *v235;
    v238 = (void *)v235[1];
    v239 = v317;
    (*(void (**)(char *, char *, uint64_t))(v317 + 32))(v320, (char *)v235 + *(int *)(v236 + 48), v223);
    v240 = (unint64_t)v332 & 0xFFFFFFFFFFFFLL;
    if ((v333 & 0x2000000000000000) != 0)
      v240 = HIBYTE(v333) & 0xF;
    if (v240)
    {
      v241._countAndFlagsBits = 10;
      v241._object = (void *)0xE100000000000000;
      String.append(_:)(v241);
    }
    v242 = v312;
    (*(void (**)(char *, char *, uint64_t))(v239 + 16))(v312, v320, v223);
    v243 = (*(uint64_t (**)(char *, uint64_t))(v239 + 88))(v242, v223);
    if (v243 != (_DWORD)v309)
    {
      (*(void (**)(char *, uint64_t))(v239 + 8))(v242, v223);
LABEL_67:
      v331._countAndFlagsBits = 0;
      v331._object = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease(v331._object);
      v331._countAndFlagsBits = 0x23206C6169726553;
      v331._object = (void *)0xEA0000000000203ALL;
      v224._countAndFlagsBits = v237;
      v224._object = v238;
      String.append(_:)(v224);
      swift_bridgeObjectRelease(v238);
      v225._countAndFlagsBits = 8250;
      v225._object = (void *)0xE200000000000000;
      String.append(_:)(v225);
      v226 = sub_100008000(&qword_1005D99A8, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemPairingState, (uint64_t)&protocol conformance descriptor for FMIPItemPairingState);
      v227 = v320;
      v228._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v223, v226);
      v229 = v228._object;
      String.append(_:)(v228);
      swift_bridgeObjectRelease(v229);
      v230 = v331._object;
      String.append(_:)(v331);
      v231 = swift_bridgeObjectRelease(v230);
      (*(void (**)(char *, uint64_t, __n128))(v239 + 8))(v227, v223, v231);
      goto LABEL_68;
    }
    (*(void (**)(char *, uint64_t))(v239 + 96))(v242, v223);
    v244 = (*(uint64_t (**)(char *, char *, uint64_t))(v313 + 32))(v324, v242, v314);
    v245 = FMIPItemGroup.items.getter(v244);
    v246 = v245;
    v247 = *(_QWORD *)(v245 + 16);
    if (v247)
    {
      v304 = v237;
      v248 = v245 + ((*(unsigned __int8 *)(v222 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v222 + 80));
      v249 = swift_bridgeObjectRetain(v245);
      v250 = *(_QWORD *)(v222 + 72);
      v251 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v222 + 16);
      v252 = v323;
      while (1)
      {
        v253 = v251(v252, v248, v118, v249);
        v254 = FMIPItem.identifier.getter(v253);
        v256 = v255;
        v258 = UUID.uuidString.getter(v254);
        v259 = v257;
        if (v254 == v258 && v256 == v257)
        {
          swift_bridgeObjectRelease(v246);
          swift_bridgeObjectRelease(v256);
          goto LABEL_90;
        }
        v260 = _stringCompareWithSmolCheck(_:_:expecting:)(v254, v256, v258, v257, 0);
        swift_bridgeObjectRelease(v256);
        v261 = swift_bridgeObjectRelease(v259);
        if ((v260 & 1) != 0)
          break;
        v118 = v322;
        v252 = v323;
        (*(void (**)(char *, uint64_t, __n128))(v321 + 8))(v323, v322, v261);
        v248 += v250;
        if (!--v247)
        {
          swift_bridgeObjectRelease(v246);
          v262 = 1;
          v222 = v321;
          v263 = (uint64_t)v302;
          v223 = v305;
          goto LABEL_91;
        }
      }
      v256 = v246;
LABEL_90:
      v223 = v305;
      v264 = swift_bridgeObjectRelease(v256);
      v222 = v321;
      v118 = v322;
      v263 = (uint64_t)v302;
      (*(void (**)(char *, char *, uint64_t, __n128))(v321 + 32))(v302, v323, v322, v264);
      v262 = 0;
LABEL_91:
      v237 = v304;
    }
    else
    {
      v262 = 1;
      v223 = v305;
      v263 = (uint64_t)v302;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v222 + 56))(v263, v262, 1, v118);
    v265 = swift_bridgeObjectRelease(v246);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v222 + 48))(v263, 1, v118, v265) == 1)
    {
      sub_1000051EC(v263, (uint64_t *)&unk_1005D3AA0);
      (*(void (**)(char *, uint64_t))(v313 + 8))(v324, v314);
      v239 = v317;
      goto LABEL_67;
    }
    swift_bridgeObjectRelease(v238);
    v267 = FMIPItem.name.getter(v266);
    v269 = v268;
    (*(void (**)(uint64_t, uint64_t))(v222 + 8))(v263, v118);
    v331._countAndFlagsBits = v267;
    v331._object = v269;
    v270._countAndFlagsBits = 8250;
    v270._object = (void *)0xE200000000000000;
    String.append(_:)(v270);
    v271 = sub_100008000(&qword_1005D99A8, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemPairingState, (uint64_t)&protocol conformance descriptor for FMIPItemPairingState);
    v272 = v320;
    v273._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v223, v271);
    v274 = v273._object;
    String.append(_:)(v273);
    swift_bridgeObjectRelease(v274);
    v275 = v331._object;
    String.append(_:)(v331);
    v276 = swift_bridgeObjectRelease(v275);
    (*(void (**)(char *, uint64_t, __n128))(v317 + 8))(v272, v223, v276);
    (*(void (**)(char *, uint64_t, __n128))(v313 + 8))(v324, v314, v277);
LABEL_68:
    v173 = (uint64_t)v316;
    countAndFlagsBits = v311;
    v221 = v310;
  }
  swift_release(countAndFlagsBits);
  v278 = v333;
  v279 = v303;
  v280 = &v303[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle];
  v281 = *(_QWORD *)&v303[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle + 8];
  *(_QWORD *)v280 = v332;
  *((_QWORD *)v280 + 1) = v278;
  v282 = swift_bridgeObjectRelease(v281).n128_u64[0];
  v283 = *(void **)&v279[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel];
  v284 = *((_QWORD *)v280 + 1);
  if (v284)
  {
    swift_bridgeObjectRetain(v284);
    v285 = String._bridgeToObjectiveC()();
    v282 = swift_bridgeObjectRelease(v284).n128_u64[0];
  }
  else
  {
    v285 = 0;
  }
  v119 = (uint64_t)v306;
  v286 = v308;
  v99 = v307;
  v172 = v301;
  objc_msgSend(v283, "setText:", v285, *(double *)&v282);

  (*(void (**)(char *, uint64_t))(v300 + 8))(v286, v299);
LABEL_62:
  v212 = v319;
  sub_100227C14((id)*(unsigned __int8 *)(v319 + v99[28]));
  sub_10019F20C(v212);
  sub_1001BEEB4(v212);
  sub_1001A5910(*(unsigned __int8 *)(v212 + v99[24]), *(_QWORD *)v212, *(_QWORD *)(v212 + 8));
  sub_1001BBDE0(v212);
  sub_1001B7378();
  sub_10019FDF8(v212, (*(_QWORD *)(v212 + v172) & 0x1400) != 0);
  sub_1001A3414();
  sub_1001ADEEC(v212);
  sub_1000051EC(v119, &qword_1005D6710);
}

void sub_10019F20C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  void *v50;
  id v51;
  char v52;
  char *v53;
  char v54;
  uint64_t v55;
  unsigned int *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char v61;
  void (*v62)(char *, uint64_t);
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  _BOOL4 v68;
  uint8_t *v69;
  void *v70;
  id v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  id v98;
  void *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD aBlock[5];
  uint64_t v123;
  char v124[32];

  v2 = v1;
  v110 = type metadata accessor for DispatchWorkItemFlags(0);
  v109 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v108 = (uint64_t)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for DispatchQoS(0);
  v106 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v105 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for FMDeviceDetailViewModel(0);
  v103 = *((_QWORD *)v6 - 1);
  v7 = *(_QWORD *)(v103 + 64);
  __chkstk_darwin(v6);
  v104 = (uint64_t)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMIPDevice(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMFindingType(0);
  v115 = *(_QWORD *)(v12 - 8);
  v116 = v12;
  __chkstk_darwin(v12);
  v114 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMExperienceType(0);
  v112 = *(_QWORD *)(v14 - 8);
  v113 = v14;
  v15 = __chkstk_darwin(v14);
  v111 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v117 = (char *)&v101 - v17;
  v18 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v18);
  v20 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for FMIPItem(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v119 = (char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = a1;
  LODWORD(v23) = *(unsigned __int8 *)(a1 + 40);
  v24 = v6;
  v118 = v2;
  if ((_DWORD)v23 != 1)
  {
LABEL_4:
    v25 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
        + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
    v26 = swift_beginAccess(v25, v124, 0, 0);
    v27.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, v25, v8, v26);
    LOBYTE(v25) = FMIPDevice.isLocalFindable.getter(v27);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if ((v25 & 1) != 0 && (*(_BYTE *)(v120 + v6[37]) & 1) == 0 && *(_BYTE *)(v120 + v6[39]) == 1)
    {
      v28 = v118;
      v29 = v104;
      sub_10004FC74(v120, v104, type metadata accessor for FMDeviceDetailViewModel);
      v30 = *(unsigned __int8 *)(v103 + 80);
      v31 = (v30 + 24) & ~v30;
      v32 = swift_allocObject(&unk_10054EF50, v31 + v7, v30 | 7);
      *(_QWORD *)(v32 + 16) = v28;
      sub_100051774(v29, v32 + v31, type metadata accessor for FMDeviceDetailViewModel);
      aBlock[4] = sub_1001D5CC0;
      v123 = v32;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100037DF8;
      aBlock[3] = &unk_10054EF68;
      v33 = _Block_copy(aBlock);
      v34 = v28;
      v35 = v105;
      static DispatchQoS.unspecified.getter(v34);
      v121 = _swiftEmptyArrayStorage;
      v36 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v37 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
      v38 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
      v39 = v108;
      v40 = v37;
      v41 = v110;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v121, v40, v38, v110, v36);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v35, v39, v33);
      _Block_release(v33);
      (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v39, v41);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v35, v107);
      swift_release(v123);
    }
    return;
  }
  sub_100007464(v120 + v6[9], (uint64_t)v20, (uint64_t *)&unk_1005D3AA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_1000051EC((uint64_t)v20, (uint64_t *)&unk_1005D3AA0);
    v2 = v118;
    goto LABEL_4;
  }
  v42 = (*(uint64_t (**)(char *, char *, uint64_t))(v22 + 32))(v119, v20, v21);
  v43 = v118;
  v110 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_itemConnectionManager;
  v44 = *(void **)&v118[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_itemConnectionManager];
  v102 = v22;
  if (v44)
  {
    v109 = v21;
    v45 = v44;
    v108 = FMIPItem.identifier.getter(v45);
    v47 = v46;
    v48 = (_QWORD *)FMConnectionManager.identifiers.getter(v108);
    v49 = dispatch thunk of FMConnectionManager.type.getter();
    if (v43[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isRangingAvailable] == 1)
    {
      __chkstk_darwin(v49);
      *(&v101 - 2) = (uint64_t)v50;
      v51 = v50;
      OS_dispatch_queue.sync<A>(execute:)(aBlock, sub_10010C20C, &v101 - 4, &type metadata for Bool);

      v52 = aBlock[0];
    }
    else
    {
      v52 = 1;
    }
    type metadata accessor for FMConnectionManager(0);
    v54 = static FMConnectionManager.hostSupportsRanging.getter();
    v55 = v120 + v6[10];
    v56 = (unsigned int *)&enum case for FMExperienceType.bt(_:);
    if ((*(_BYTE *)(v55 + 8) & 1) == 0 && !(((*(_BYTE *)(v55 + 1) & 4) == 0 || (v54 & 1) == 0) | v52 & 1))
      v56 = (unsigned int *)&enum case for FMExperienceType.r1(_:);
    v58 = v111;
    v57 = v112;
    v59 = v113;
    (*(void (**)(char *, _QWORD, uint64_t))(v112 + 104))(v111, *v56, v113);
    v60 = v117;
    v61 = static FMExperienceType.== infix(_:_:)(v117, v58);
    v62 = *(void (**)(char *, uint64_t))(v57 + 8);
    v62(v58, v59);
    v62(v60, v59);
    LOBYTE(v59) = sub_10006BA18(v108, v47, v48);
    swift_bridgeObjectRelease(v48);
    v63 = swift_bridgeObjectRelease(v47);
    if ((v59 & 1) != 0 && (v61 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, __n128))(v102 + 8))(v119, v109, v63);

      return;
    }
    dispatch thunk of FMConnectionManager.disconnect()(v63);
    v22 = v102;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v64 = type metadata accessor for Logger(0);
    v65 = sub_100056D88(v64, (uint64_t)qword_1005F5748);
    v66 = Logger.logObject.getter(v65);
    v67 = static os_log_type_t.default.getter(v66);
    v68 = os_log_type_enabled(v66, v67);
    v43 = v118;
    v53 = v114;
    if (v68)
    {
      v69 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v69 = 0;
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "FMDeviceDetailContentViewController: Existing item connection manager was discarded due to item or state change", v69, 2u);
      swift_slowDealloc(v69, -1, -1);
    }

    v21 = v109;
  }
  else
  {
    v53 = v114;
  }
  if (v43[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isRangingAvailable] == 1)
  {
    __chkstk_darwin(v42);
    *(&v101 - 2) = (uint64_t)v70;
    v71 = v70;
    OS_dispatch_queue.sync<A>(execute:)(aBlock, sub_10010C20C, &v101 - 4, &type metadata for Bool);

    v22 = v102;
    v72 = aBlock[0];
  }
  else
  {
    v72 = 1;
  }
  v73 = v110;
  type metadata accessor for FMConnectionManager(0);
  v74 = static FMConnectionManager.hostSupportsRanging.getter();
  v75 = v120 + v24[10];
  if ((*(_BYTE *)(v75 + 8) & 1) != 0 || ((*(_BYTE *)(v75 + 1) & 4) == 0 || (v74 & 1) == 0) | v72 & 1)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v76 = type metadata accessor for Logger(0);
    v77 = sub_100056D88(v76, (uint64_t)qword_1005F5748);
    v78 = Logger.logObject.getter(v77);
    v79 = static os_log_type_t.default.getter(v78);
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v80 = 0;
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "FMDeviceDetailContentViewController: Creating new instance of item connection manager for BT connections.", v80, 2u);
      swift_slowDealloc(v80, -1, -1);
    }

    v81 = sub_100053F2C(&qword_1005D6418);
    v82 = swift_allocObject(v81, 72, 7);
    *(_OWORD *)(v82 + 16) = xmmword_100481740;
    *(_QWORD *)(v82 + 56) = v21;
    *(_QWORD *)(v82 + 64) = sub_100008000(&qword_1005D9948, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItem, (uint64_t)&protocol conformance descriptor for FMIPItem);
    v83 = sub_10003D370((_QWORD *)(v82 + 32));
    (*(void (**)(_QWORD *, char *, uint64_t))(v22 + 16))(v83, v119, v21);
    (*(void (**)(char *, _QWORD, uint64_t))(v115 + 104))(v53, enum case for FMFindingType.owner(_:), v116);
    v84 = objc_allocWithZone((Class)type metadata accessor for FMItemBTConnectionManager(0));
    v85 = (void *)FMItemBTConnectionManager.init(findables:connectionContext:)(v82, v53);
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v86 = type metadata accessor for Logger(0);
    v87 = sub_100056D88(v86, (uint64_t)qword_1005F5748);
    v88 = Logger.logObject.getter(v87);
    v89 = static os_log_type_t.default.getter(v88);
    if (os_log_type_enabled(v88, v89))
    {
      v90 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v90 = 0;
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "FMDeviceDetailContentViewController: Creating new instance of item connection manager for R1 connections.", v90, 2u);
      swift_slowDealloc(v90, -1, -1);
    }

    v91 = sub_100053F2C(&qword_1005D6418);
    v92 = swift_allocObject(v91, 72, 7);
    *(_OWORD *)(v92 + 16) = xmmword_100481740;
    *(_QWORD *)(v92 + 56) = v21;
    *(_QWORD *)(v92 + 64) = sub_100008000(&qword_1005D9948, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItem, (uint64_t)&protocol conformance descriptor for FMIPItem);
    v93 = sub_10003D370((_QWORD *)(v92 + 32));
    (*(void (**)(_QWORD *, char *, uint64_t))(v22 + 16))(v93, v119, v21);
    (*(void (**)(char *, _QWORD, uint64_t))(v115 + 104))(v53, enum case for FMFindingType.owner(_:), v116);
    v94 = objc_allocWithZone((Class)type metadata accessor for FMItemR1ConnectionManager(0));
    v85 = (void *)FMItemR1ConnectionManager.init(findables:connectionContext:)(v92, v53);
    v95 = sub_100008000(&qword_1005D99B0, type metadata accessor for FMDeviceDetailContentViewController, (uint64_t)&unk_100486B78);
    v96 = swift_unknownObjectRetain(v43);
    dispatch thunk of FMItemR1ConnectionManager.delegate.setter(v96, v95);
  }
  v97 = *(void **)&v43[v73];
  *(_QWORD *)&v43[v73] = v85;
  v98 = v85;

  if (*(_BYTE *)(*(_QWORD *)&v43[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
                + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updatesEnabled) == 1)
  {
    v99 = *(void **)&v43[v73];
    if (v99)
    {
      v100 = v99;
      dispatch thunk of FMConnectionManager.connect()();

      v98 = v100;
    }
  }

  (*(void (**)(char *, uint64_t))(v22 + 8))(v119, v21);
}

void sub_10019FDF8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  void **p_cache;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  SEL *v50;
  char **v51;
  void **v52;
  uint64_t v53;
  int v54;
  char *v55;
  void **v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  NSObject *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  id *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  NSObject *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  __n128 v91;
  id v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  __n128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  char v120;
  id v121;
  uint64_t v122;
  _BYTE *v123;
  char v124;
  _BYTE *v125;
  uint64_t v126;
  _BYTE *v127;
  uint64_t v128;
  char v129;
  _BYTE *v130;
  uint64_t v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  double v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(char *, unint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  void **v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;

  v3 = v2;
  LODWORD(v145) = a2;
  v5 = sub_100053F2C(&qword_1005D6DB8);
  __chkstk_darwin(v5);
  v146 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMIPPerson(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v138 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = type metadata accessor for FMIPPlaySoundChannels(0);
  v142 = *(_QWORD *)(v148 - 8);
  v11 = __chkstk_darwin(v148);
  v149 = (char *)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v147 = (void **)((char *)&v138 - v13);
  v14 = type metadata accessor for FMDeviceDetailViewModel(0);
  v15 = __chkstk_darwin(v14);
  v150 = (char *)&v138 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v19 = (uint64_t *)((char *)&v138 - v18);
  v20 = __chkstk_darwin(v17);
  v22 = (uint64_t *)((char *)&v138 - v21);
  v23 = __chkstk_darwin(v20);
  v25 = (uint64_t *)((char *)&v138 - v24);
  v26 = __chkstk_darwin(v23);
  v28 = (uint64_t *)((char *)&v138 - v27);
  v29 = *(int *)(v26 + 88);
  v153 = a1;
  v30 = *(_QWORD *)(a1 + v29);
  p_cache = &OBJC_METACLASS____TtC6FindMy19FMActionLandingView.cache;
  v151 = v26;
  v152 = v30;
  v143 = v10;
  v144 = v8;
  if ((v30 & 0x20) == 0)
  {
    if (qword_1005D1DE8 == -1)
      goto LABEL_3;
    goto LABEL_97;
  }
  v40 = *(unsigned __int8 *)(v153 + *(int *)(v26 + 96));
  if (v40 - 4 >= 7)
  {
    v56 = &OBJC_METACLASS____TtC6FindMy19FMActionLandingView.cache;
    v141 = v7;
    if (v40 >= 3)
    {
      v57 = v149;
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v71 = type metadata accessor for Logger(0);
      sub_100056D88(v71, (uint64_t)qword_1005F5748);
      v72 = sub_10004FC74(v153, (uint64_t)v25, type metadata accessor for FMDeviceDetailViewModel);
      v73 = Logger.logObject.getter(v72);
      v74 = static os_log_type_t.default.getter(v73);
      v75 = v73;
      if (os_log_type_enabled(v73, v74))
      {
        v76 = swift_slowAlloc(22, -1);
        v77 = swift_slowAlloc(32, -1);
        v140 = v77;
        *(_DWORD *)v76 = 141558275;
        v154 = 1752392040;
        v155 = v77;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, &v155);
        *(_WORD *)(v76 + 12) = 2081;
        v139 = (void (*)(char *, unint64_t, uint64_t))(v76 + 14);
        v78 = *v25;
        v79 = v25[1];
        swift_bridgeObjectRetain(v79);
        v154 = sub_100056DA0(v78, v79, &v155);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, &v155);
        swift_bridgeObjectRelease(v79);
        sub_10004FCB8((uint64_t)v25, type metadata accessor for FMDeviceDetailViewModel);
        _os_log_impl((void *)&_mh_execute_header, v75, v74, "FMDeviceDetailContentViewController: updateViews: showing single stop sound id: %{private,mask.hash}s.", (uint8_t *)v76, 0x16u);
        v80 = v140;
        swift_arrayDestroy(v140, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v80, -1, -1);
        swift_slowDealloc(v76, -1, -1);

      }
      else
      {
        sub_10004FCB8((uint64_t)v25, type metadata accessor for FMDeviceDetailViewModel);

      }
      v50 = (SEL *)&unk_1005AA000;
      v51 = &selRef_viewWillAppear_;
      v81 = v145;
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton), "removeFromSuperview");
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteRightButton), "removeFromSuperview");
      if ((v81 & 1) != 0)
        v82 = &OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton;
      else
        v82 = &OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_stopSoundButton;
      if ((v81 & 1) != 0)
        v83 = &OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_stopSoundButton;
      else
        v83 = &OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton;
      objc_msgSend(*(id *)(v3 + *v82), "removeFromSuperview");
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView), "addArrangedSubview:", *(_QWORD *)(v3 + *v83));
      v70 = 0;
      LODWORD(v145) = 0;
      v68 = (id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView);
    }
    else
    {
      v57 = v149;
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v58 = type metadata accessor for Logger(0);
      sub_100056D88(v58, (uint64_t)qword_1005F5748);
      v59 = sub_10004FC74(v153, (uint64_t)v28, type metadata accessor for FMDeviceDetailViewModel);
      v60 = Logger.logObject.getter(v59);
      v61 = static os_log_type_t.default.getter(v60);
      v62 = v60;
      if (os_log_type_enabled(v60, v61))
      {
        v63 = swift_slowAlloc(22, -1);
        v64 = swift_slowAlloc(32, -1);
        *(_DWORD *)v63 = 141558275;
        v154 = 1752392040;
        v155 = v64;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, &v155);
        *(_WORD *)(v63 + 12) = 2081;
        v145 = v63 + 14;
        v65 = *v28;
        v66 = v28[1];
        swift_bridgeObjectRetain(v66);
        v154 = sub_100056DA0(v65, v66, &v155);
        v56 = (void **)(&OBJC_METACLASS____TtC6FindMy19FMActionLandingView + 16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, &v155);
        swift_bridgeObjectRelease(v66);
        sub_10004FCB8((uint64_t)v28, type metadata accessor for FMDeviceDetailViewModel);
        _os_log_impl((void *)&_mh_execute_header, v62, v61, "FMDeviceDetailContentViewController: updateViews: showing play sound id: %{private,mask.hash}s.", (uint8_t *)v63, 0x16u);
        swift_arrayDestroy(v64, 1, (char *)&type metadata for Any + 8);
        v67 = v64;
        v57 = v149;
        swift_slowDealloc(v67, -1, -1);
        swift_slowDealloc(v63, -1, -1);

      }
      else
      {
        sub_10004FCB8((uint64_t)v28, type metadata accessor for FMDeviceDetailViewModel);

      }
      v50 = (SEL *)&unk_1005AA000;
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton), "removeFromSuperview");
      objc_msgSend(*(id *)((char *)v56[234] + v3), "removeFromSuperview");
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_stopSoundButton), "removeFromSuperview");
      v68 = (id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView);
      v51 = &selRef_viewWillAppear_;
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView), "addArrangedSubview:", *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton));
      v70 = 0;
      LODWORD(v145) = 0;
    }
    v69 = &OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton;
    v7 = v141;
    v55 = v146;
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v41 = type metadata accessor for Logger(0);
    sub_100056D88(v41, (uint64_t)qword_1005F5748);
    v42 = sub_10004FC74(v153, (uint64_t)v22, type metadata accessor for FMDeviceDetailViewModel);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.default.getter(v43);
    if (os_log_type_enabled(v43, v44))
    {
      v45 = swift_slowAlloc(22, -1);
      v46 = swift_slowAlloc(32, -1);
      v145 = v46;
      *(_DWORD *)v45 = 141558275;
      v154 = 1752392040;
      v155 = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, &v155);
      *(_WORD *)(v45 + 12) = 2081;
      v30 = *v22;
      v47 = v22[1];
      swift_bridgeObjectRetain(v47);
      v48 = v30;
      LODWORD(v30) = v152;
      v154 = sub_100056DA0(v48, v47, &v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, &v155);
      swift_bridgeObjectRelease(v47);
      sub_10004FCB8((uint64_t)v22, type metadata accessor for FMDeviceDetailViewModel);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "FMDeviceDetailContentViewController: updateViews: showing multi channel audio id: %{private,mask.hash}s.", (uint8_t *)v45, 0x16u);
      v49 = v145;
      swift_arrayDestroy(v145, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v45, -1, -1);
    }
    else
    {
      sub_10004FCB8((uint64_t)v22, type metadata accessor for FMDeviceDetailViewModel);
    }

    v51 = &selRef_viewWillAppear_;
    v50 = (SEL *)&unk_1005AA000;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton), "removeFromSuperview");
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton), "removeFromSuperview");
    v68 = (id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView);
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView), "addArrangedSubview:", *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton));
    objc_msgSend(*v68, "addArrangedSubview:", *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_stopSoundButton));
    LODWORD(v145) = 1;
    v69 = &OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteRightButton;
    v70 = 3;
    v55 = v146;
    v57 = v149;
  }
  objc_msgSend(*v68, "addArrangedSubview:", *(_QWORD *)(v3 + *v69));
  objc_msgSend(*v68, "setSemanticContentAttribute:", v70);
  v84 = *(_QWORD *)(v153 + *(int *)(v151 + 48));
  if (v84)
  {
    v85 = v142;
    p_cache = v147;
    v86 = v148;
    (*(void (**)(void **, _QWORD, uint64_t))(v142 + 104))(v147, enum case for FMIPPlaySoundChannels.case(_:), v148);
    v140 = *(_QWORD *)(v84 + 16);
    if (v140)
    {
      v141 = v7;
      v87 = (*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
      v139 = *(void (**)(char *, unint64_t, uint64_t))(v85 + 16);
      v139(v57, v84 + v87, v86);
      v88 = sub_100008000(&qword_1005D7308, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
      swift_bridgeObjectRetain(v84);
      v89 = v86;
      v138 = v88;
      v90 = dispatch thunk of static Equatable.== infix(_:_:)(v57, p_cache, v86, v88);
      v30 = *(_QWORD *)(v85 + 8);
      ((void (*)(char *, uint64_t))v30)(v57, v89);
      if ((v90 & 1) != 0)
      {
LABEL_38:
        ((void (*)(void **, uint64_t))v30)(v147, v148);
        swift_bridgeObjectRelease(v84);
        v92 = *(id *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 16);
        v93 = sub_100377510();

        v50 = (SEL *)&unk_1005AA000;
        v51 = &selRef_viewWillAppear_;
        LODWORD(v30) = v152;
        v7 = v141;
        v55 = v146;
        if ((v93 & 1) != 0)
        {
          objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_errorConditionsAttentionModule), "setHidden:", 0);
          sub_1004365C8();
        }
        goto LABEL_49;
      }
      if (v140 != 1)
      {
        v94 = *(_QWORD *)(v142 + 72);
        v19 = (uint64_t *)(v84 + v94 + v87);
        v95 = 1;
        p_cache = v147;
        v86 = v148;
        v96 = v149;
        while (1)
        {
          v139(v96, (unint64_t)v19, v86);
          v7 = v95 + 1;
          if (__OFADD__(v95, 1))
            break;
          v97 = dispatch thunk of static Equatable.== infix(_:_:)(v96, p_cache, v86, v138);
          ((void (*)(char *, uint64_t))v30)(v96, v86);
          if ((v97 & 1) != 0)
            goto LABEL_38;
          ++v95;
          v19 = (uint64_t *)((char *)v19 + v94);
          p_cache = v147;
          v86 = v148;
          if (v7 == v140)
          {
            v50 = (SEL *)&unk_1005AA000;
            v51 = &selRef_viewWillAppear_;
            v7 = v141;
            v55 = v146;
            goto LABEL_48;
          }
        }
        __break(1u);
LABEL_97:
        swift_once(&qword_1005D1DE8, sub_100005ADC);
LABEL_3:
        v32 = type metadata accessor for Logger(0);
        sub_100056D88(v32, (uint64_t)qword_1005F5748);
        v33 = sub_10004FC74(v153, (uint64_t)v19, type metadata accessor for FMDeviceDetailViewModel);
        v34 = Logger.logObject.getter(v33);
        v35 = static os_log_type_t.default.getter(v34);
        if (os_log_type_enabled(v34, v35))
        {
          v36 = swift_slowAlloc(22, -1);
          v37 = swift_slowAlloc(32, -1);
          *(_DWORD *)v36 = 141558275;
          v154 = 1752392040;
          v155 = v37;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, &v155);
          *(_WORD *)(v36 + 12) = 2081;
          v141 = v7;
          v38 = *v19;
          v39 = v19[1];
          swift_bridgeObjectRetain(v39);
          v154 = sub_100056DA0(v38, v39, &v155);
          p_cache = (void **)(&OBJC_METACLASS____TtC6FindMy19FMActionLandingView + 16);
          v7 = v141;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, &v155);
          swift_bridgeObjectRelease(v39);
          sub_10004FCB8((uint64_t)v19, type metadata accessor for FMDeviceDetailViewModel);
          _os_log_impl((void *)&_mh_execute_header, v34, v35, "FMDeviceDetailContentViewController: updateViews: showing no sound support for id: %{private,mask.hash}s.", (uint8_t *)v36, 0x16u);
          swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v37, -1, -1);
          swift_slowDealloc(v36, -1, -1);
        }
        else
        {
          sub_10004FCB8((uint64_t)v19, type metadata accessor for FMDeviceDetailViewModel);
        }

        v50 = (SEL *)&unk_1005AA000;
        v51 = &selRef_viewWillAppear_;
        v52 = (void **)(&OBJC_METACLASS____TtC6FindMy19FMActionLandingView + 16);
        v53 = (uint64_t)v150;
        objc_msgSend(*(id *)((char *)p_cache[233] + v3), "removeFromSuperview");
        objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteRightButton), "removeFromSuperview");
        objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_stopSoundButton), "removeFromSuperview");
        objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton), "removeFromSuperview");
        objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView), "addArrangedSubview:", *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton));
        v54 = 0;
        LODWORD(v30) = v152;
        v55 = v146;
        if ((v152 & 0x8000) != 0)
          goto LABEL_51;
        goto LABEL_50;
      }
      v50 = (SEL *)&unk_1005AA000;
      v7 = v141;
      v55 = v146;
      p_cache = v147;
      v86 = v148;
    }
    else
    {
      v30 = *(_QWORD *)(v85 + 8);
      v91 = swift_bridgeObjectRetain(v84);
    }
LABEL_48:
    ((void (*)(void **, uint64_t, __n128))v30)(p_cache, v86, v91);
    swift_bridgeObjectRelease(v84);
    LODWORD(v30) = v152;
  }
LABEL_49:
  v52 = &OBJC_METACLASS____TtC6FindMy19FMActionLandingView.cache;
  v53 = (uint64_t)v150;
  v54 = v145;
  if ((v30 & 0x8000) != 0)
    goto LABEL_51;
LABEL_50:
  if ((v30 & 0x14000) == 0)
  {
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView), v50[231]);
    v98 = v151;
    if ((v30 & 0x20000) == 0)
      goto LABEL_52;
    goto LABEL_54;
  }
LABEL_51:
  objc_msgSend(*(id *)((char *)v52[266] + v3), v51[4], *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView));
  v98 = v151;
  if ((v30 & 0x20000) == 0)
  {
LABEL_52:
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsView), v50[231]);
    goto LABEL_59;
  }
LABEL_54:
  LODWORD(v145) = v54;
  v99 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 24);
  v100 = swift_retain(v99);
  FMIPManager.owner.getter(v100);
  v101 = v144;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v144 + 48))(v55, 1, v7) == 1)
  {
    __break(1u);
    return;
  }
  v102 = v143;
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v143, v55, v7);
  v103 = swift_release(v99);
  v104 = v101;
  v105 = FMIPPerson.phoneNumber.getter(v103);
  v107 = v106;
  (*(void (**)(char *, uint64_t))(v104 + 8))(v102, v7);
  if (v107)
  {
    v108 = (uint64_t *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsPhoneNumber);
    v109 = *(_QWORD *)(v3
                     + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsPhoneNumber
                     + 8);
    *v108 = v105;
    v108[1] = v107;
    swift_bridgeObjectRelease(v109);
    v110 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsView;
    v111 = *v108;
    v112 = v108[1];
    v113 = *(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsView);
    swift_bridgeObjectRetain(v112);
    sub_10039C0E4(v111, v112);

    v114 = v112;
    v98 = v151;
    v52 = &OBJC_METACLASS____TtC6FindMy19FMActionLandingView.cache;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackView), v51[4], *(_QWORD *)(v3 + v110), swift_bridgeObjectRelease(v114).n128_f64[0]);
  }
  else
  {
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsView), v50[231]);
    v52 = &OBJC_METACLASS____TtC6FindMy19FMActionLandingView.cache;
  }
  v53 = (uint64_t)v150;
  v54 = v145;
LABEL_59:
  v115 = *(_QWORD *)(v153 + *(int *)(v98 + 92));
  sub_10004FC74(v153, v53, type metadata accessor for FMDeviceDetailViewModel);
  if ((v30 & 0x200000) != 0)
  {
    sub_10004FCB8(v53, type metadata accessor for FMDeviceDetailViewModel);
    LODWORD(v116) = 1;
    if ((v30 & 4) == 0 && (v30 & 8) == 0)
      goto LABEL_66;
  }
  else
  {
    v116 = (*(_QWORD *)(v53 + *(int *)(v98 + 92)) >> 20) & 1;
    sub_10004FCB8(v53, type metadata accessor for FMDeviceDetailViewModel);
    if ((v30 & 0xC) == 0)
    {
LABEL_66:
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_markAsLostView), v50[231]);
      goto LABEL_67;
    }
  }
  if ((v115 & 0x100) != 0)
    goto LABEL_66;
  objc_msgSend(*(id *)((char *)v52[266] + v3), v51[4], *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_markAsLostView));
LABEL_67:
  v117 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_actionButtonsStackView;
  objc_msgSend(*(id *)((char *)v52[266] + v3), v51[4], *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_actionButtonsStackView));
  v118 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_eraseDeviceButton;
  v119 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_eraseDeviceButton);
  if ((v152 & 2) == 0 || (v115 & 0x100) != 0)
  {
    objc_msgSend(v119, v50[231]);
    if ((v115 & 0x100) != 0)
    {
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView), v50[231]);
      v122 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelEraseDeviceButton;
      v123 = *(_BYTE **)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelEraseDeviceButton);
      if ((_DWORD)v116)
        v124 = 2;
      else
        v124 = 3;
      v123[OBJC_IVAR____TtC6FindMy15FMPlatterButton_alignment] = v124;
      v125 = v123;
      sub_10043710C();

      objc_msgSend(*(id *)(v3 + v117), v51[4], *(_QWORD *)(v3 + v122));
      goto LABEL_79;
    }
  }
  else
  {
    if ((_DWORD)v116)
      v120 = 2;
    else
      v120 = 3;
    *((_BYTE *)v119 + OBJC_IVAR____TtC6FindMy15FMPlatterButton_alignment) = v120;
    v121 = v119;
    sub_10043710C();

    objc_msgSend(*(id *)(v3 + v117), v51[4], *(_QWORD *)(v3 + v118));
  }
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelEraseDeviceButton), v50[231]);
LABEL_79:
  v126 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_removeDeviceButton;
  v127 = *(_BYTE **)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_removeDeviceButton);
  if ((_DWORD)v116)
  {
    v128 = (v152 >> 21) & 1;
    if ((v152 & 2) != 0)
      v129 = 0;
    else
      v129 = 3;
    if ((v115 & 0x100) != 0)
      v129 = 0;
    v127[OBJC_IVAR____TtC6FindMy15FMPlatterButton_alignment] = v129;
    v130 = v127;
    sub_10043710C();

    objc_msgSend(*(id *)(v3 + v126), "setUserInteractionEnabled:", v128);
    objc_msgSend(*(id *)(v3 + v117), v51[4], *(_QWORD *)(v3 + v126));
  }
  else
  {
    objc_msgSend(v127, v50[231]);
  }
  v131 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView;
  v132 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView), "arrangedSubviews");
  v133 = sub_100006C5C(0, (unint64_t *)&qword_1005DB470, UIView_ptr);
  v134 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v132, v133);

  if ((unint64_t)v134 >> 62)
  {
    if (v134 < 0)
      v137 = v134;
    else
      v137 = v134 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v134);
    v135 = _CocoaArrayWrapper.endIndex.getter(v137);
    swift_bridgeObjectRelease(v134);
  }
  else
  {
    v135 = *(_QWORD *)((v134 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v136 = swift_bridgeObjectRelease(v134).n128_u64[0];
  if (!v135)
    objc_msgSend(*(id *)(v3 + v131), v50[231], v136);
  sub_1001A0F5C(v153, v54);
}

void sub_1001A0F5C(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t My;
  _QWORD *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  __n128 v51;
  char v52;
  unsigned int v53;
  char v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  id v61;
  uint64_t i;
  void *v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  id v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  id v89;
  _BYTE *v90;
  char v91;
  unint64_t v92;
  uint64_t v93;
  int *v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  _BYTE *v100;
  char v101;
  uint64_t v102;
  int v103;
  id *v104;
  id v105;
  _BYTE *v106;
  _BYTE *v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  int v111;
  id v112;
  uint64_t v113;
  _BYTE *v114;
  _BYTE *v115;
  uint64_t v116;
  char v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  _BYTE *v123;
  uint64_t v124;
  void *v125;
  void *v126;
  uint64_t v127;
  _BYTE *v128;
  char **v129;
  char v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  int v135;
  void *v136;
  id v137;
  _BYTE *v138;
  char v139;
  uint64_t v140;
  __int16 v141;
  char v142;
  uint64_t v143;
  void *v144;
  id v145;
  char v146;
  uint64_t v147;
  int v148;
  _BYTE *v149;
  uint64_t v150;
  char *v151;
  char v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  char *v162;
  void *v163;
  _BYTE *v164;
  int v165;
  _BYTE *v166;
  uint64_t v167;
  char v168;
  _BOOL4 v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;
  uint64_t v173;
  _BYTE *v174;
  uint64_t v175;
  void *v176;
  uint64_t v177;
  _BYTE *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  _BYTE *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char v201;
  uint64_t v202;
  uint64_t v203;
  void *v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  void *v208;
  uint64_t v209;
  char *v210;
  uint64_t *v211;
  void *v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  void *v216;
  uint64_t v217;
  _BYTE *v218;
  uint64_t v219;
  void *v220;
  uint64_t v221;
  _BYTE *v222;
  uint64_t v223;
  uint64_t v224;
  __n128 v225;
  uint64_t v226;
  uint64_t v227;
  _BYTE *v228;
  __n128 v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unsigned __int8 v240;
  char *v241;
  char v242;
  _BYTE *v243;
  char v244;
  uint64_t v245;
  uint64_t v246;
  void *v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  void *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  void *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  void *v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  void *v264;
  uint64_t v265;
  char *v266;
  _BYTE *v267;
  uint64_t v268;
  char *v269;
  char v270;
  uint64_t v271;
  uint64_t v272;
  void *v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  void *v277;
  uint64_t v278;
  char *v279;
  void *v280;
  uint64_t v281;
  uint64_t v282;
  void *v283;
  uint64_t v284;
  _BYTE *v285;
  uint64_t v286;
  void *v287;
  uint64_t v288;
  _BYTE *v289;
  _BYTE *v290;
  uint64_t v291;
  char *v292;
  char v293;
  uint64_t *v294;
  char **v295;
  uint64_t v296;
  uint64_t v297;
  void *v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  void *v302;
  uint64_t v303;
  char *v304;
  _BYTE v305[4];
  int v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  _BYTE *v310;
  _BYTE *v311;
  uint64_t v312;
  _BYTE *v313;
  _BYTE *v314;
  _BYTE *v315;
  _BYTE *v316;
  int *v317;
  unint64_t v318;
  unint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  char v324[24];
  char v325[24];
  void **aBlock;
  uint64_t v327;
  uint64_t (*v328)(uint64_t);
  void *v329;
  uint64_t (*v330)();
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;

  LODWORD(v323) = a2;
  v3 = type metadata accessor for FMIPDevice(0);
  v320 = *(_QWORD *)(v3 - 8);
  v321 = v3;
  __chkstk_darwin(v3);
  v316 = &v305[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v312 = type metadata accessor for FMPlatterIcon(0);
  v5 = __chkstk_darwin(v312);
  v310 = &v305[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v314 = &v305[-v7];
  v8 = type metadata accessor for FMDeviceDetailViewModel(0);
  v9 = __chkstk_darwin(v8);
  v315 = &v305[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __chkstk_darwin(v9);
  v311 = &v305[-v12];
  v13 = __chkstk_darwin(v11);
  v313 = &v305[-v14];
  v15 = __chkstk_darwin(v13);
  v17 = &v305[-v16];
  v18 = __chkstk_darwin(v15);
  v20 = &v305[-v19];
  v21 = __chkstk_darwin(v18);
  v23 = &v305[-v22];
  v24 = a1 + *(int *)(v21 + 40);
  v25 = *(_QWORD *)v24;
  v26 = *(_BYTE *)(v24 + 8);
  v27 = a1 + *(int *)(v21 + 44);
  v318 = *(_QWORD *)v27;
  v319 = v25;
  v28 = *(_BYTE *)(v27 + 8);
  My = type metadata accessor for Feature.FindMy(0);
  v329 = (void *)My;
  v330 = (uint64_t (*)())sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v30 = sub_10003D370(&aBlock);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v30, enum case for Feature.FindMy.baAirpodsMultipartUI(_:), My);
  v31 = isFeatureEnabled(_:)(&aBlock);
  sub_100029574(&aBlock);
  LODWORD(My) = *(unsigned __int8 *)(a1 + *(int *)(v8 + 128));
  sub_10004FC74(a1, (uint64_t)v23, type metadata accessor for FMDeviceDetailViewModel);
  v317 = (int *)v8;
  if ((_DWORD)My != 1)
  {
    sub_10004FCB8((uint64_t)v23, type metadata accessor for FMDeviceDetailViewModel);
    sub_10004FC74(a1, (uint64_t)v20, type metadata accessor for FMDeviceDetailViewModel);
    v33 = a1;
    goto LABEL_5;
  }
  v32 = *(_QWORD *)&v23[*(int *)(v8 + 88)];
  sub_10004FCB8((uint64_t)v23, type metadata accessor for FMDeviceDetailViewModel);
  sub_10004FC74(a1, (uint64_t)v20, type metadata accessor for FMDeviceDetailViewModel);
  v33 = a1;
  if ((v32 & 0x80) == 0)
  {
LABEL_5:
    sub_100051774((uint64_t)v20, (uint64_t)v17, type metadata accessor for FMDeviceDetailViewModel);
    if ((v31 & 1) != 0)
      v34 = v17[v317[36]];
    else
      v34 = 0;
    v20 = v17;
    goto LABEL_9;
  }
  v34 = 1;
LABEL_9:
  v35 = sub_10004FCB8((uint64_t)v20, type metadata accessor for FMDeviceDetailViewModel);
  if (v26 & 1 | ((*(_BYTE *)(v33 + 40) & 1) == 0) | v28 & 1)
  {
    v36 = *(id *)(*(_QWORD *)(v322 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 16);
    v37 = sub_100377510();

    if ((v37 & 1) != 0)
    {
      v38 = 1;
    }
    else
    {
      v44 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
      v45 = objc_msgSend(v44, "userInterfaceIdiom");

      if (v45 == (id)1)
      {
        v46 = *(_QWORD *)(v322 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
            + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
        v47 = swift_beginAccess(v46, v324, 0, 0);
        v49 = v320;
        v48 = v321;
        v50 = v316;
        v51.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t, uint64_t, __n128))(v320 + 16))(v316, v46, v321, v47);
        LOBYTE(v46) = FMIPDevice.isLocalFindable.getter(v51);
        (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v50, v48);
        v38 = v46 ^ 1;
      }
      else
      {
        v38 = 0;
      }
    }
    v94 = v317;
    if (*(_BYTE *)(v33 + v317[39]) == 1 && (v38 & 1) == 0)
    {
      v95 = *(unsigned __int8 *)(v33 + v317[40]);
      v96 = v33;
      v97 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findButton;
      v98 = v322;
      v99 = *(void **)(v322 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findButton);
      if (v95 == 1)
      {
        objc_msgSend(v99, "setHidden:", 0);
        v100 = *(_BYTE **)(v98 + v97);
        v100[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_showUnavailableWhenDisabled] = 1;
        if ((v100[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled] & 1) != 0)
          v101 = 2;
        else
          v101 = v100[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_active] == 1
              || (v100[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_queued] & 1) != 0
              || v100[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] == 1
              && (v100[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_activeWhenPending] & 1) != 0;
        v212 = (void *)objc_opt_self(UIView);
        v213 = &qword_1005D3000;
        v214 = *(_QWORD *)&v100[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_iconView];
        v215 = swift_allocObject(&unk_10054EA50, 25, 7);
        *(_QWORD *)(v215 + 16) = v100;
        *(_BYTE *)(v215 + 24) = v101;
        v330 = (uint64_t (*)())sub_1000B098C;
        v331 = v215;
        aBlock = _NSConcreteStackBlock;
        v327 = 1107296256;
        v328 = sub_100037DF8;
        v329 = &unk_10054EA68;
        v216 = _Block_copy(&aBlock);
        v217 = v331;
        v218 = v100;
        swift_release(v217);
        objc_msgSend(v212, "transitionWithView:duration:options:animations:completion:", v214, 5242884, v216, 0, 0.25);
        _Block_release(v216);
        v219 = swift_allocObject(&unk_10054EAA0, 25, 7);
        *(_QWORD *)(v219 + 16) = v218;
        *(_BYTE *)(v219 + 24) = 0;
        v330 = sub_10010C220;
        v331 = v219;
        aBlock = _NSConcreteStackBlock;
        v327 = 1107296256;
        v328 = sub_100037DF8;
        v329 = &unk_10054EAB8;
        v220 = _Block_copy(&aBlock);
        v221 = v331;
        v222 = v218;
        swift_release(v221);
        objc_msgSend(v212, "animateWithDuration:animations:", v220, 0.35);
        _Block_release(v220);

        v223 = v322;
        v224 = *(_QWORD *)(v322 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
             + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
        v225 = swift_beginAccess(v224, v325, 0, 0);
        v227 = v320;
        v226 = v321;
        v228 = v316;
        v229.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t, uint64_t, __n128))(v320 + 16))(v316, v224, v321, v225);
        LOBYTE(v224) = FMIPDevice.isLocalFindable.getter(v229);
        (*(void (**)(_BYTE *, uint64_t))(v227 + 8))(v228, v226);
        if ((v224 & 1) == 0)
          goto LABEL_152;
        v230 = sub_100197D88();
        v231 = *(char **)(v223 + v97);
        v232 = &v231[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_localizationContext];
        v233 = *(_QWORD *)&v231[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_localizationContext];
        v234 = *(_QWORD *)&v231[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_localizationContext + 8];
        v235 = *(_QWORD *)&v231[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_localizationContext + 16];
        v236 = *(_QWORD *)&v231[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_localizationContext + 24];
        v237 = *(_QWORD *)&v231[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_localizationContext + 32];
        *(_QWORD *)v232 = 0xD000000000000028;
        *((_QWORD *)v232 + 1) = 0x80000001004B2960;
        *((_QWORD *)v232 + 2) = v230;
        *((_QWORD *)v232 + 3) = v238;
        *((_QWORD *)v232 + 4) = v239;
        v240 = v232[40];
        v232[40] = 4;
        v241 = v231;
        sub_1000AFE30(v233, v234, v235, v236, v237, v240);
        if ((v241[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled] & 1) != 0)
        {
          v242 = 2;
        }
        else
        {
          if (v241[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_active] != 1
            && (v241[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_queued] & 1) == 0)
          {
            v213 = &qword_1005D3000;
            v242 = v241[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] == 1
                && (v241[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_activeWhenPending] & 1) != 0;
            goto LABEL_151;
          }
          v242 = 1;
        }
        v213 = &qword_1005D3000;
LABEL_151:
        v258 = *(_QWORD *)&v241[v213[458]];
        v259 = swift_allocObject(&unk_10054EB90, 25, 7);
        *(_QWORD *)(v259 + 16) = v241;
        *(_BYTE *)(v259 + 24) = v242;
        v330 = (uint64_t (*)())sub_1000B098C;
        v331 = v259;
        aBlock = _NSConcreteStackBlock;
        v327 = 1107296256;
        v328 = sub_100037DF8;
        v329 = &unk_10054EBA8;
        v260 = _Block_copy(&aBlock);
        v261 = v331;
        v262 = v241;
        swift_release(v261);
        objc_msgSend(v212, "transitionWithView:duration:options:animations:completion:", v258, 5242884, v260, 0, 0.25);
        _Block_release(v260);
        v263 = swift_allocObject(&unk_10054EBE0, 25, 7);
        *(_QWORD *)(v263 + 16) = v262;
        *(_BYTE *)(v263 + 24) = 1;
        v330 = sub_10010C220;
        v331 = v263;
        aBlock = _NSConcreteStackBlock;
        v327 = 1107296256;
        v328 = sub_100037DF8;
        v329 = &unk_10054EBF8;
        v264 = _Block_copy(&aBlock);
        v265 = v331;
        v266 = v262;
        swift_release(v265);
        objc_msgSend(v212, "animateWithDuration:animations:", v264, 0.35);
        _Block_release(v264);

        v223 = v322;
LABEL_152:
        v267 = *(_BYTE **)(v223 + v97);
        v268 = OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled;
        v267[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled] = 1;
        v269 = v267;
        objc_msgSend(v269, "setUserInteractionEnabled:", 0);
        if ((v267[v268] & 1) != 0)
          v270 = 2;
        else
          v270 = v269[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_active] == 1
              || (v269[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_queued] & 1) != 0
              || v269[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] == 1
              && (v269[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_activeWhenPending] & 1) != 0;
        v271 = *(_QWORD *)&v269[v213[458]];
        v272 = swift_allocObject(&unk_10054EAF0, 25, 7);
        *(_QWORD *)(v272 + 16) = v269;
        *(_BYTE *)(v272 + 24) = v270;
        v330 = (uint64_t (*)())sub_1000B098C;
        v331 = v272;
        aBlock = _NSConcreteStackBlock;
        v327 = 1107296256;
        v328 = sub_100037DF8;
        v329 = &unk_10054EB08;
        v273 = _Block_copy(&aBlock);
        v274 = v331;
        v275 = v269;
        swift_release(v274);
        objc_msgSend(v212, "transitionWithView:duration:options:animations:completion:", v271, 5242884, v273, 0, 0.25);
        _Block_release(v273);
        v276 = swift_allocObject(&unk_10054EB40, 25, 7);
        *(_QWORD *)(v276 + 16) = v275;
        *(_BYTE *)(v276 + 24) = 0;
        v330 = sub_10010C220;
        v331 = v276;
        aBlock = _NSConcreteStackBlock;
        v327 = 1107296256;
        v328 = sub_100037DF8;
        v329 = &unk_10054EB58;
        v277 = _Block_copy(&aBlock);
        v278 = v331;
        v279 = v275;
        swift_release(v278);
        objc_msgSend(v212, "animateWithDuration:animations:", v277, 0.35);
        _Block_release(v277);

        goto LABEL_172;
      }
      if ((*(_QWORD *)(v96 + v317[22]) & 0x80000) == 0)
      {
        v111 = 1;
        objc_msgSend(v99, "setHidden:", 1);
        v104 = (id *)(v322 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton);
        objc_msgSend(*(id *)(v322 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton), "setHidden:", (*(_QWORD *)(v96 + v94[23]) >> 18) & 1);
        v112 = *v104;
        v113 = v96;
        v114 = v311;
        sub_10004FC74(v113, (uint64_t)v311, type metadata accessor for FMDeviceDetailViewModel);
        if ((_DWORD)v34)
          v111 = v114[v94[34]];
        v115 = v112;
        sub_10004FCB8((uint64_t)v114, type metadata accessor for FMDeviceDetailViewModel);
        v116 = OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled;
        v115[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled] = v111;
        objc_msgSend(v115, "setUserInteractionEnabled:", v111 ^ 1u);
        if ((v115[v116] & 1) != 0)
        {
          v109 = v34;
          v117 = 2;
        }
        else
        {
          if (v115[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_active] != 1
            && (v115[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_queued] & 1) == 0)
          {
            v109 = v34;
            v102 = v322;
            v117 = v115[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] == 1
                && (v115[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_activeWhenPending] & 1) != 0;
            goto LABEL_143;
          }
          v109 = v34;
          v117 = 1;
        }
        v102 = v322;
LABEL_143:
        v118 = (void *)objc_opt_self(UIView);
        v253 = *(_QWORD *)&v115[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_iconView];
        v254 = swift_allocObject(&unk_10054E870, 25, 7);
        *(_QWORD *)(v254 + 16) = v115;
        *(_BYTE *)(v254 + 24) = v117;
        v330 = (uint64_t (*)())sub_1000B098C;
        v331 = v254;
        aBlock = _NSConcreteStackBlock;
        v327 = 1107296256;
        v328 = sub_100037DF8;
        v329 = &unk_10054E888;
        v255 = _Block_copy(&aBlock);
        v256 = v331;
        v123 = v115;
        swift_release(v256);
        objc_msgSend(v118, "transitionWithView:duration:options:animations:completion:", v253, 5242884, v255, 0, 0.25);
        _Block_release(v255);
        v257 = swift_allocObject(&unk_10054E8C0, 25, 7);
        *(_QWORD *)(v257 + 16) = v123;
        *(_BYTE *)(v257 + 24) = 0;
        v330 = sub_10010C220;
        v331 = v257;
        aBlock = _NSConcreteStackBlock;
        v327 = 1107296256;
        v125 = &unk_10054E8D8;
        goto LABEL_80;
      }
      objc_msgSend(v99, "setHidden:", 0);
      v243 = *(_BYTE **)(v322 + v97);
      v243[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_showUnavailableWhenDisabled] = 1;
      if ((v243[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled] & 1) != 0)
        v244 = 2;
      else
        v244 = v243[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_active] == 1
            || (v243[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_queued] & 1) != 0
            || v243[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] == 1
            && (v243[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_activeWhenPending] & 1) != 0;
      v280 = (void *)objc_opt_self(UIView);
      v281 = *(_QWORD *)&v243[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_iconView];
      v282 = swift_allocObject(&unk_10054E910, 25, 7);
      *(_QWORD *)(v282 + 16) = v243;
      *(_BYTE *)(v282 + 24) = v244;
      v330 = (uint64_t (*)())sub_1000B098C;
      v331 = v282;
      aBlock = _NSConcreteStackBlock;
      v327 = 1107296256;
      v328 = sub_100037DF8;
      v329 = &unk_10054E928;
      v283 = _Block_copy(&aBlock);
      v284 = v331;
      v285 = v243;
      swift_release(v284);
      objc_msgSend(v280, "transitionWithView:duration:options:animations:completion:", v281, 5242884, v283, 0, 0.25);
      _Block_release(v283);
      v286 = swift_allocObject(&unk_10054E960, 25, 7);
      *(_QWORD *)(v286 + 16) = v285;
      *(_BYTE *)(v286 + 24) = 0;
      v330 = sub_10010C220;
      v331 = v286;
      aBlock = _NSConcreteStackBlock;
      v327 = 1107296256;
      v328 = sub_100037DF8;
      v329 = &unk_10054E978;
      v287 = _Block_copy(&aBlock);
      v288 = v331;
      v289 = v285;
      swift_release(v288);
      objc_msgSend(v280, "animateWithDuration:animations:", v287, 0.35);
      _Block_release(v287);

      v290 = *(_BYTE **)(v322 + v97);
      v291 = OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled;
      v290[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled] = 0;
      v292 = v290;
      objc_msgSend(v292, "setUserInteractionEnabled:", 1);
      if ((v290[v291] & 1) != 0)
      {
        v293 = 2;
      }
      else
      {
        if (v292[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_active] != 1
          && (v292[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_queued] & 1) == 0)
        {
          v295 = &selRef_viewWillAppear_;
          if (v292[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] == 1
            && (v292[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_activeWhenPending] & 1) != 0)
          {
            v293 = 1;
            v294 = &qword_1005D3000;
          }
          else
          {
            v293 = 0;
            v294 = &qword_1005D3000;
          }
          goto LABEL_171;
        }
        v293 = 1;
      }
      v294 = &qword_1005D3000;
      v295 = &selRef_viewWillAppear_;
LABEL_171:
      v296 = *(_QWORD *)&v292[v294[458]];
      v297 = swift_allocObject(&unk_10054E9B0, 25, 7);
      *(_QWORD *)(v297 + 16) = v292;
      *(_BYTE *)(v297 + 24) = v293;
      v330 = (uint64_t (*)())sub_1000B098C;
      v331 = v297;
      aBlock = _NSConcreteStackBlock;
      v327 = 1107296256;
      v328 = sub_100037DF8;
      v329 = &unk_10054E9C8;
      v298 = _Block_copy(&aBlock);
      v299 = v331;
      v300 = v292;
      swift_release(v299);
      objc_msgSend(v280, v295[168], v296, 5242884, v298, 0, 0.25);
      _Block_release(v298);
      v301 = swift_allocObject(&unk_10054EA00, 25, 7);
      *(_QWORD *)(v301 + 16) = v300;
      *(_BYTE *)(v301 + 24) = 0;
      v330 = sub_10010C220;
      v331 = v301;
      aBlock = _NSConcreteStackBlock;
      v327 = 1107296256;
      v328 = sub_100037DF8;
      v329 = &unk_10054EA18;
      v302 = _Block_copy(&aBlock);
      v303 = v331;
      v304 = v300;
      swift_release(v303);
      objc_msgSend(v280, "animateWithDuration:animations:", v302, 0.35);
      _Block_release(v302);

LABEL_172:
      v102 = v322;
      v104 = (id *)(v322 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton);
      v131 = 1;
      v129 = &selRef_setHidden_;
      v130 = v323;
      goto LABEL_173;
    }
    v102 = v322;
    v103 = 1;
    objc_msgSend(*(id *)(v322 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findButton), "setHidden:", 1);
    v104 = (id *)(v102 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton);
    objc_msgSend(*(id *)(v102 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton), "setHidden:", (*(_QWORD *)(v33 + v94[23]) >> 18) & 1);
    v105 = *v104;
    v106 = v315;
    sub_10004FC74(v33, (uint64_t)v315, type metadata accessor for FMDeviceDetailViewModel);
    if ((_DWORD)v34)
      v103 = v106[v94[34]];
    v107 = v105;
    sub_10004FCB8((uint64_t)v106, type metadata accessor for FMDeviceDetailViewModel);
    v108 = OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled;
    v107[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled] = v103;
    objc_msgSend(v107, "setUserInteractionEnabled:", v103 ^ 1u);
    if ((v107[v108] & 1) != 0)
    {
      v109 = v34;
      v110 = 2;
    }
    else
    {
      if (v107[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_active] == 1
        || (v107[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_queued] & 1) != 0)
      {
        v109 = v34;
      }
      else
      {
        v109 = v34;
        if (v107[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] != 1
          || (v107[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_activeWhenPending] & 1) == 0)
        {
          v110 = 0;
          goto LABEL_79;
        }
      }
      v110 = 1;
    }
LABEL_79:
    v118 = (void *)objc_opt_self(UIView);
    v119 = *(_QWORD *)&v107[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_iconView];
    v120 = swift_allocObject(&unk_10054E7D0, 25, 7);
    *(_QWORD *)(v120 + 16) = v107;
    *(_BYTE *)(v120 + 24) = v110;
    v330 = (uint64_t (*)())sub_1000B098C;
    v331 = v120;
    aBlock = _NSConcreteStackBlock;
    v327 = 1107296256;
    v328 = sub_100037DF8;
    v329 = &unk_10054E7E8;
    v121 = _Block_copy(&aBlock);
    v122 = v331;
    v123 = v107;
    swift_release(v122);
    objc_msgSend(v118, "transitionWithView:duration:options:animations:completion:", v119, 5242884, v121, 0, 0.25);
    _Block_release(v121);
    v124 = swift_allocObject(&unk_10054E820, 25, 7);
    *(_QWORD *)(v124 + 16) = v123;
    *(_BYTE *)(v124 + 24) = 0;
    v330 = sub_10010C220;
    v331 = v124;
    aBlock = _NSConcreteStackBlock;
    v327 = 1107296256;
    v125 = &unk_10054E838;
LABEL_80:
    v328 = sub_100037DF8;
    v329 = v125;
    v126 = _Block_copy(&aBlock);
    v127 = v331;
    v128 = v123;
    swift_release(v127);
    objc_msgSend(v118, "animateWithDuration:animations:", v126, 0.35);
    _Block_release(v126);

    v129 = &selRef_setUserInteractionEnabled_;
    v130 = v323;
    v131 = v109;
LABEL_173:
    objc_msgSend(*v104, *v129, v131);
    if ((v130 & 1) != 0)
      objc_msgSend(*(id *)(v102 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findButton), "removeFromSuperview");
    else
      objc_msgSend(*(id *)(v102 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView), "addArrangedSubview:", *(_QWORD *)(v102 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findButton));
    *(_BYTE *)(*(_QWORD *)(v102
                         + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_errorConditionsAttentionModule)
             + OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_shouldShowAirplaneModeAttention) = 0;
    sub_1004365C8();
    sub_1004365C8();
    return;
  }
  v39 = v322;
  v40 = *(_QWORD *)(v322 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findingExperiencePresenter);
  v316 = (_BYTE *)OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isRangingAvailable;
  v41 = *(_BYTE *)(v322 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isRangingAvailable) == 1;
  v309 = v33;
  v307 = v40;
  if (v41)
  {
    __chkstk_darwin(v35);
    *(_QWORD *)&v305[-16] = v42;
    v43 = v42;
    OS_dispatch_queue.sync<A>(execute:)(&aBlock, sub_10010C20C, &v305[-32], &type metadata for Bool);
    v315 = 0;

    v52 = aBlock ^ 1;
  }
  else
  {
    v52 = 0;
    v315 = 0;
  }
  v53 = sub_100133F78(v319, v318, v52 & 1);
  v54 = BYTE2(v53);
  v306 = v53 & 0x100;
  v55 = (v53 >> 8) & 1;
  v56 = sub_100053F2C(&qword_1005D9998);
  v57 = swift_allocObject(v56, 64, 7);
  *(_OWORD *)(v57 + 16) = xmmword_100481730;
  *(_BYTE *)(v57 + 32) = v55;
  v321 = v57 + 32;
  v311 = (_BYTE *)OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findButton;
  v58 = *(void **)(v39 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findButton);
  *(_QWORD *)(v57 + 40) = v58;
  *(_BYTE *)(v57 + 48) = v54 & 1;
  v308 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton;
  v59 = *(void **)(v39 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton);
  v320 = v57;
  *(_QWORD *)(v57 + 56) = v59;
  v323 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView;
  v60 = v58;
  v61 = v59;
  for (i = 0; ; i = 1)
  {
    v63 = *(void **)(v39 + v323);
    v64 = *(id *)(v321 + 16 * i + 8);
    v65 = objc_msgSend(v63, "arrangedSubviews");
    v66 = sub_100006C5C(0, (unint64_t *)&qword_1005DB470, UIView_ptr);
    v67 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v65, v66);

    if ((unint64_t)v67 >> 62)
    {
      if (v67 < 0)
        v86 = v67;
      else
        v86 = v67 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v67);
      v68 = _CocoaArrayWrapper.endIndex.getter(v86);
      v69 = i + 1;
      if (!v68)
        goto LABEL_28;
    }
    else
    {
      v68 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v67);
      v69 = i + 1;
      if (!v68)
        goto LABEL_28;
    }
    v70 = (v67 & 0xC000000000000001) != 0
        ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v67)
        : *(id *)(v67 + 32);
    v71 = v70;
    v72 = static NSObject.== infix(_:_:)(v70, v64);

    if ((v72 & 1) != 0)
      break;
    if (v68 != 1)
    {
      if ((v67 & 0xC000000000000001) != 0)
      {
        v73 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v67);
        v74 = static NSObject.== infix(_:_:)(v73, v64);
        swift_unknownObjectRelease(v73);
        v39 = v322;
        if ((v74 & 1) != 0)
          break;
        if (v68 != 2)
        {
          v75 = 2;
          while (1)
          {
            v76 = specialized _ArrayBuffer._getElementSlowPath(_:)(v75, v67);
            v77 = v75 + 1;
            if (__OFADD__(v75, 1))
              break;
            v78 = v76;
            v79 = static NSObject.== infix(_:_:)(v76, v64);
            swift_unknownObjectRelease(v78);
            if ((v79 & 1) != 0)
              goto LABEL_48;
            ++v75;
            if (v77 == v68)
              goto LABEL_28;
          }
          __break(1u);
LABEL_196:
          __break(1u);
          return;
        }
      }
      else
      {
        v80 = *(id *)(v67 + 40);
        v81 = static NSObject.== infix(_:_:)(v80, v64);

        v39 = v322;
        if ((v81 & 1) != 0)
          break;
        if (v68 != 2)
        {
          v82 = 6;
          do
          {
            v83 = v82 - 3;
            if (__OFADD__(v82 - 4, 1))
              goto LABEL_196;
            v84 = *(id *)(v67 + 8 * v82);
            v85 = static NSObject.== infix(_:_:)(v84, v64);

            if ((v85 & 1) != 0)
            {
LABEL_48:
              v39 = v322;
              goto LABEL_25;
            }
            ++v82;
          }
          while (v83 != v68);
        }
      }
    }
LABEL_28:
    swift_bridgeObjectRelease_n(v67, 2);
    if ((v55 & 1) != 0)
    {
      v39 = v322;
      goto LABEL_30;
    }

    v39 = v322;
    if (v69 == 2)
      goto LABEL_55;
LABEL_19:
    LOBYTE(v55) = *(_BYTE *)(v320 + 48);
  }
LABEL_25:
  swift_bridgeObjectRelease_n(v67, 2);
  if ((v55 & 1) == 0)
  {
    objc_msgSend(v64, "removeFromSuperview");
    goto LABEL_31;
  }
LABEL_30:
  objc_msgSend(*(id *)(v39 + v323), "addArrangedSubview:", v64);
LABEL_31:

  if (v69 != 2)
    goto LABEL_19;
LABEL_55:
  swift_bridgeObjectRelease(v320);
  if ((v316[v39] & 1) != 0)
  {
    __chkstk_darwin(v87);
    *(_QWORD *)&v305[-16] = v88;
    v89 = v88;
    v90 = v315;
    OS_dispatch_queue.sync<A>(execute:)(&aBlock, sub_10010C20C, &v305[-32], &type metadata for Bool);
    v315 = v90;

    v91 = aBlock ^ 1;
    v92 = v318;
    if ((v318 & 0x20) != 0)
      LODWORD(v93) = 1;
    else
LABEL_59:
      v93 = (v92 >> 6) & 1;
  }
  else
  {
    v91 = 0;
    v92 = v318;
    if ((v318 & 0x20) == 0)
      goto LABEL_59;
    LODWORD(v93) = 1;
  }
  v132 = (v319 >> 11) & 1;
  v133 = (v319 >> 10) & 1;
  v134 = sub_1001343A8((v319 & 0x800) != 0, (v319 >> 10) & 1, v93, v91 & 1);
  v135 = v316[v39];
  LODWORD(v323) = v134;
  if (v135 == 1)
  {
    __chkstk_darwin(v134);
    *(_QWORD *)&v305[-16] = v136;
    v137 = v136;
    v138 = v315;
    OS_dispatch_queue.sync<A>(execute:)(&aBlock, sub_10010C20C, &v305[-32], &type metadata for Bool);
    v315 = v138;

    v139 = aBlock ^ 1;
  }
  else
  {
    v139 = 0;
  }
  v140 = *(_QWORD *)(v39 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator);
  swift_retain(v140);
  v141 = sub_1001343A8(v132, v133, (v92 & 0x60) != 0, v139 & 1);
  v142 = sub_1001344A0(v141 & 1, HIBYTE(v141) & 1, BYTE1(v92) & 1, 1, v140);
  swift_release(v140);
  if (v316[v39] == 1)
  {
    __chkstk_darwin(v143);
    *(_QWORD *)&v305[-16] = v144;
    v145 = v144;
    OS_dispatch_queue.sync<A>(execute:)(&aBlock, sub_10010C20C, &v305[-32], &type metadata for Bool);

    v146 = aBlock ^ 1;
  }
  else
  {
    v146 = 0;
  }
  v147 = v142 & 1;
  v148 = sub_1001305F8(v319, v92, v146 & 1);
  v149 = *(_BYTE **)&v311[v39];
  v150 = OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled;
  v149[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled] = (v142 & 1) == 0;
  v151 = v149;
  objc_msgSend(v151, "setUserInteractionEnabled:", v147);
  if ((v149[v150] & 1) != 0)
    v152 = 2;
  else
    v152 = v151[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_active] == 1
        || (v151[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_queued] & 1) != 0
        || v151[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] == 1
        && (v151[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_activeWhenPending] & 1) != 0;
  v153 = (void *)objc_opt_self(UIView);
  v154 = *(_QWORD *)&v151[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_iconView];
  v155 = swift_allocObject(&unk_10054EC30, 25, 7);
  *(_QWORD *)(v155 + 16) = v151;
  *(_BYTE *)(v155 + 24) = v152;
  v330 = (uint64_t (*)())sub_1000B098C;
  v331 = v155;
  aBlock = _NSConcreteStackBlock;
  v327 = 1107296256;
  v328 = sub_100037DF8;
  v329 = &unk_10054EC48;
  v156 = _Block_copy(&aBlock);
  v157 = v331;
  v158 = v151;
  swift_release(v157);
  objc_msgSend(v153, "transitionWithView:duration:options:animations:completion:", v154, 5242884, v156, 0, 0.25);
  _Block_release(v156);
  v159 = swift_allocObject(&unk_10054EC80, 25, 7);
  *(_QWORD *)(v159 + 16) = v158;
  *(_BYTE *)(v159 + 24) = 0;
  v330 = sub_10010C220;
  v331 = v159;
  aBlock = _NSConcreteStackBlock;
  v327 = 1107296256;
  v328 = sub_100037DF8;
  v329 = &unk_10054EC98;
  v160 = _Block_copy(&aBlock);
  v161 = v331;
  v162 = v158;
  swift_release(v161);
  objc_msgSend(v153, "animateWithDuration:animations:", v160, 0.35);
  _Block_release(v160);

  v163 = *(void **)(v322 + v308);
  v164 = v313;
  sub_10004FC74(v309, (uint64_t)v313, type metadata accessor for FMDeviceDetailViewModel);
  if ((v318 & 0x100) != 0)
    v165 = 1;
  else
    v165 = v164[v317[34]];
  v166 = v163;
  sub_10004FCB8((uint64_t)v164, type metadata accessor for FMDeviceDetailViewModel);
  v167 = OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled;
  v166[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled] = v165;
  objc_msgSend(v166, "setUserInteractionEnabled:", v165 ^ 1u);
  if ((v166[v167] & 1) != 0)
    v168 = 2;
  else
    v168 = v166[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_active] == 1
        || (v166[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_queued] & 1) != 0
        || v166[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] == 1
        && (v166[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_activeWhenPending] & 1) != 0;
  v169 = v306 != 0;
  v170 = *(_QWORD *)&v166[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_iconView];
  v171 = swift_allocObject(&unk_10054ECD0, 25, 7);
  *(_QWORD *)(v171 + 16) = v166;
  *(_BYTE *)(v171 + 24) = v168;
  v330 = (uint64_t (*)())sub_1000B098C;
  v331 = v171;
  aBlock = _NSConcreteStackBlock;
  v327 = 1107296256;
  v328 = sub_100037DF8;
  v329 = &unk_10054ECE8;
  v172 = _Block_copy(&aBlock);
  v173 = v331;
  v174 = v166;
  swift_release(v173);
  objc_msgSend(v153, "transitionWithView:duration:options:animations:completion:", v170, 5242884, v172, 0, 0.25);
  _Block_release(v172);
  v175 = swift_allocObject(&unk_10054ED20, 25, 7);
  *(_QWORD *)(v175 + 16) = v174;
  *(_BYTE *)(v175 + 24) = 0;
  v330 = sub_10010C220;
  v331 = v175;
  aBlock = _NSConcreteStackBlock;
  v327 = 1107296256;
  v328 = sub_100037DF8;
  v329 = &unk_10054ED38;
  v176 = _Block_copy(&aBlock);
  v177 = v331;
  v178 = v174;
  swift_release(v177);
  objc_msgSend(v153, "animateWithDuration:animations:", v176, 0.35);
  _Block_release(v176);

  if ((v148 & v169 & 1) != 0)
  {
    objc_msgSend(*(id *)(v322 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_errorConditionsAttentionModule), "setHidden:", 0);
    sub_1004365C8();
  }
  if ((v323 & 1) != 0)
  {
    v190 = v322;
    *(_BYTE *)(*(_QWORD *)(v322
                         + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_errorConditionsAttentionModule)
             + OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_shouldShowAirplaneModeAttention) = 1;
    sub_1004365C8();
    v191 = *(char **)&v311[v190];
    v192 = sub_100053F2C(&qword_1005D63E8);
    v193 = (uint64_t)v314;
    v194 = &v314[*(int *)(v192 + 48)];
    *v314 = 1;
    v195 = enum case for FMFindingType.owner(_:);
    v196 = type metadata accessor for FMFindingType(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v196 - 8) + 104))(v194, v195, v196);
    v197 = enum case for FMFindingTechnology.precision(_:);
    v198 = type metadata accessor for FMFindingTechnology(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v198 - 8) + 104))(v193, v197, v198);
    swift_storeEnumTagMultiPayload(v193, v312, 1);
    v199 = (uint64_t)&v191[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_platterIcon];
    swift_beginAccess(&v191[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_platterIcon], &aBlock, 33, 0);
    v200 = v191;
    sub_1001D5AD4(v193, v199);
    swift_endAccess(&aBlock);
    if ((v200[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled] & 1) != 0)
      v201 = 2;
    else
      v201 = v200[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_active] == 1
          || (v200[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_queued] & 1) != 0
          || v200[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] == 1
          && (v200[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_activeWhenPending] & 1) != 0;
    v202 = *(_QWORD *)&v200[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_iconView];
    v203 = swift_allocObject(&unk_10054EE10, 25, 7);
    *(_QWORD *)(v203 + 16) = v200;
    *(_BYTE *)(v203 + 24) = v201;
    v330 = (uint64_t (*)())sub_1000B098C;
    v331 = v203;
    aBlock = _NSConcreteStackBlock;
    v327 = 1107296256;
    v328 = sub_100037DF8;
    v329 = &unk_10054EE28;
    v204 = _Block_copy(&aBlock);
    v205 = v331;
    v206 = v200;
    swift_release(v205);
    objc_msgSend(v153, "transitionWithView:duration:options:animations:completion:", v202, 5242884, v204, 0, 0.25);
    _Block_release(v204);
    v207 = swift_allocObject(&unk_10054EE60, 25, 7);
    *(_QWORD *)(v207 + 16) = v206;
    *(_BYTE *)(v207 + 24) = 0;
    v330 = sub_10010C220;
    v331 = v207;
    aBlock = _NSConcreteStackBlock;
    v327 = 1107296256;
    v328 = sub_100037DF8;
    v329 = &unk_10054EE78;
    v208 = _Block_copy(&aBlock);
    v209 = v331;
    v210 = v206;
    swift_release(v209);
    objc_msgSend(v153, "animateWithDuration:animations:", v208, 0.35);
    _Block_release(v208);
    v211 = &v333;
  }
  else
  {
    if ((v323 & 0x100) == 0)
      return;
    v179 = v322;
    *(_BYTE *)(*(_QWORD *)(v322
                         + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_errorConditionsAttentionModule)
             + OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_shouldShowAirplaneModeAttention) = 1;
    sub_1004365C8();
    v180 = *(char **)&v311[v179];
    v181 = *(int *)(sub_100053F2C(&qword_1005D9938) + 48);
    v182 = enum case for FMFindingType.owner(_:);
    v183 = type metadata accessor for FMFindingType(0);
    v184 = (uint64_t)v310;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v183 - 8) + 104))(v310, v182, v183);
    *(_BYTE *)(v184 + v181) = 0;
    v185 = enum case for FMFindingTechnology.proximity(_:);
    v186 = type metadata accessor for FMFindingTechnology(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v186 - 8) + 104))(v184, v185, v186);
    swift_storeEnumTagMultiPayload(v184, v312, 1);
    v187 = (uint64_t)&v180[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_platterIcon];
    swift_beginAccess(&v180[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_platterIcon], &aBlock, 33, 0);
    v188 = v180;
    sub_1001D5AD4(v184, v187);
    swift_endAccess(&aBlock);
    if ((v188[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled] & 1) != 0)
      v189 = 2;
    else
      v189 = v188[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_active] == 1
          || (v188[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_queued] & 1) != 0
          || v188[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] == 1
          && (v188[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_activeWhenPending] & 1) != 0;
    v245 = *(_QWORD *)&v188[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_iconView];
    v246 = swift_allocObject(&unk_10054ED70, 25, 7);
    *(_QWORD *)(v246 + 16) = v188;
    *(_BYTE *)(v246 + 24) = v189;
    v330 = (uint64_t (*)())sub_1000B098C;
    v331 = v246;
    aBlock = _NSConcreteStackBlock;
    v327 = 1107296256;
    v328 = sub_100037DF8;
    v329 = &unk_10054ED88;
    v247 = _Block_copy(&aBlock);
    v248 = v331;
    v249 = v188;
    swift_release(v248);
    objc_msgSend(v153, "transitionWithView:duration:options:animations:completion:", v245, 5242884, v247, 0, 0.25);
    _Block_release(v247);
    v250 = swift_allocObject(&unk_10054EDC0, 25, 7);
    *(_QWORD *)(v250 + 16) = v249;
    *(_BYTE *)(v250 + 24) = 0;
    v330 = sub_10010C220;
    v331 = v250;
    aBlock = _NSConcreteStackBlock;
    v327 = 1107296256;
    v328 = sub_100037DF8;
    v329 = &unk_10054EDD8;
    v251 = _Block_copy(&aBlock);
    v252 = v331;
    v210 = v249;
    swift_release(v252);
    objc_msgSend(v153, "animateWithDuration:animations:", v251, 0.35);
    _Block_release(v251);
    v211 = &v332;
  }
  sub_10004FCB8(*(v211 - 32), type metadata accessor for FMPlatterIcon);

}

uint64_t sub_1001A3414()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (**v51)();
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t (**v82)(uint64_t, uint64_t, uint64_t);
  char *v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  __n128 v88;
  char *v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112[3];
  uint64_t v113;
  unint64_t v114;
  char v115[32];

  v1 = sub_100053F2C(&qword_1005D9990);
  __chkstk_darwin(v1);
  v3 = (char *)&v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C(&qword_1005DDFA0);
  __chkstk_darwin(v4);
  v99 = (uint64_t)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMIPSeparationLocation(0);
  v100 = *(_QWORD *)(v6 - 8);
  v101 = v6;
  __chkstk_darwin(v6);
  v95 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  __chkstk_darwin(v8);
  v104 = (uint64_t)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for FMPendingActionInfo(0);
  v10 = __chkstk_darwin(v105);
  v98 = (uint64_t)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v103 = (uint64_t)&v92 - v12;
  v108 = type metadata accessor for UUID(0);
  v110 = *(_QWORD *)(v108 - 8);
  v13 = __chkstk_darwin(v108);
  v97 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = v14;
  __chkstk_darwin(v13);
  v107 = (char *)&v92 - v15;
  v16 = sub_100053F2C(&qword_1005D2C70);
  __chkstk_darwin(v16);
  v18 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FMSelectionPendingAction(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  v22 = __chkstk_darwin(v19);
  v111 = (uint64_t)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v22);
  v102 = (uint64_t)&v92 - v24;
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v92 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v92 - v28;
  v106 = v0;
  v30 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator];
  v31 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v32 = *(_QWORD *)(v30 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingAction;
  swift_beginAccess(v32, v115, 0, 0);
  sub_100007464(v32, (uint64_t)v18, &qword_1005D2C70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    return sub_1000051EC((uint64_t)v18, &qword_1005D2C70);
  v93 = v31;
  v94 = v3;
  sub_100051774((uint64_t)v18, (uint64_t)v29, type metadata accessor for FMSelectionPendingAction);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v34 = type metadata accessor for Logger(0);
  v35 = sub_100056D88(v34, (uint64_t)qword_1005F5748);
  v109 = v29;
  v36 = sub_10004FC74((uint64_t)v29, (uint64_t)v27, type metadata accessor for FMSelectionPendingAction);
  v92 = v35;
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.default.getter(v37);
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(12, -1);
    v40 = swift_slowAlloc(32, -1);
    *(_DWORD *)v39 = 136315138;
    v112[0] = v40;
    v113 = 0;
    v114 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v27, &v113, v19, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v41 = v114;
    v113 = sub_100056DA0(v113, v114, v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114);
    swift_bridgeObjectRelease(v41);
    sub_10004FCB8((uint64_t)v27, type metadata accessor for FMSelectionPendingAction);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "FMDeviceDetailContentViewController: performPendingActions %s", v39, 0xCu);
    swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v39, -1, -1);
  }
  else
  {
    sub_10004FCB8((uint64_t)v27, type metadata accessor for FMSelectionPendingAction);
  }

  v42 = v111;
  v43 = swift_allocObject(&unk_10054E640, 24, 7);
  v44 = v106;
  *(_QWORD *)(v43 + 16) = v106;
  v45 = v102;
  sub_10004FC74((uint64_t)v109, v102, type metadata accessor for FMSelectionPendingAction);
  sub_10004FC74(v45, v42, type metadata accessor for FMSelectionPendingAction);
  v46 = *(unsigned __int8 *)(v20 + 80);
  v47 = v44;
  v48 = (v46 + 24) & ~v46;
  v49 = (v21 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
  v50 = swift_allocObject(&unk_10054E668, v49 + 16, v46 | 7);
  *(_QWORD *)(v50 + 16) = v44;
  sub_100051774(v45, v50 + v48, type metadata accessor for FMSelectionPendingAction);
  v51 = (void (**)())(v50 + v49);
  v52 = v93;
  v53 = *(_QWORD *)&v44[v93];
  *v51 = sub_1001D5688;
  v51[1] = (void (*)())v43;
  v54 = *(_QWORD *)(v53 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingActionInfo;
  swift_beginAccess(v54, &v113, 0, 0);
  v55 = v103;
  sub_10004FC74(v54, v103, type metadata accessor for FMPendingActionInfo);
  v57 = v104;
  v56 = v105;
  sub_100007464(v55 + *(int *)(v105 + 24), v104, (uint64_t *)&unk_1005D53A0);
  v58 = v47;
  v102 = v43;
  swift_retain(v43);
  v59 = v57;
  sub_10004FCB8(v55, type metadata accessor for FMPendingActionInfo);
  v60 = v110;
  v61 = v108;
  v62 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v57, 1, v108);
  v63 = (uint64_t)v94;
  if (v62 == 1)
  {
    sub_1000051EC(v59, (uint64_t *)&unk_1005D53A0);
    v64 = *(_QWORD *)(*(_QWORD *)&v47[v52] + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingActionInfo;
    swift_beginAccess(v64, v112, 0, 0);
    v65 = v98;
    sub_10004FC74(v64, v98, type metadata accessor for FMPendingActionInfo);
    v66 = v99;
    sub_100007464(v65 + *(int *)(v56 + 20), v99, &qword_1005DDFA0);
    sub_10004FCB8(v65, type metadata accessor for FMPendingActionInfo);
    v68 = v100;
    v67 = v101;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v66, 1, v101) == 1)
    {
      sub_1000051EC(v66, &qword_1005DDFA0);
      v69 = type metadata accessor for FMIPAddress(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v63, 1, 1, v69);
      v70 = v111;
      v71 = v102;
      sub_1001A3F54(v63, 0, 0, v58, v111, (uint64_t)sub_1001D5688, v102);
      swift_release(v71);
      swift_release(v50);
      sub_1000051EC(v63, &qword_1005D9990);
      sub_10004FCB8(v70, type metadata accessor for FMSelectionPendingAction);
    }
    else
    {
      sub_10004FCB8(v111, type metadata accessor for FMSelectionPendingAction);
      v89 = v95;
      (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v95, v66, v67);
      v90 = swift_allocObject(&unk_10054E690, 32, 7);
      *(_QWORD *)(v90 + 16) = sub_1001D5750;
      *(_QWORD *)(v90 + 24) = v50;
      swift_retain(v50);
      dispatch thunk of FMIPReverseGeocodingCache.address(for:completion:)(v89, sub_1001D57C0, v90);
      swift_release(v102);
      swift_release(v50);
      v91 = swift_release(v90);
      (*(void (**)(char *, uint64_t, __n128))(v68 + 8))(v89, v67, v91);
    }
    v72 = (uint64_t)v109;
  }
  else
  {
    sub_10004FCB8(v111, type metadata accessor for FMSelectionPendingAction);
    v73 = v59;
    v74 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 32);
    v75 = v107;
    v74(v107, v73, v61);
    v76 = *(_QWORD *)(*(_QWORD *)&v47[v52] + 24);
    v77 = v97;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v97, v75, v61);
    v78 = *(unsigned __int8 *)(v60 + 80);
    v79 = (v78 + 24) & ~v78;
    v80 = (v96 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
    v81 = swift_allocObject(&unk_10054E6B8, v80 + 16, v78 | 7);
    *(_QWORD *)(v81 + 16) = v58;
    v74((char *)(v81 + v79), (uint64_t)v77, v61);
    v82 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + v80);
    *v82 = sub_1001D5750;
    v82[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v50;
    v83 = v58;
    swift_retain(v76);
    v84 = swift_retain(v50);
    v85 = Logger.logObject.getter(v84);
    v86 = static os_log_type_t.default.getter(v85);
    if (os_log_type_enabled(v85, v86))
    {
      v87 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v87 = 67109120;
      LODWORD(v112[0]) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v112, (char *)v112 + 4);
      _os_log_impl((void *)&_mh_execute_header, v85, v86, "FMDeviceProvider: refreshSafeLocations, isCompletionNil? %{BOOL}d", v87, 8u);
      swift_slowDealloc(v87, -1, -1);
    }

    FMIPManager.refreshSafeLocations(completion:)(sub_1001D585C, v81);
    swift_release(v102);
    swift_release(v50);
    swift_release(v76);
    v88 = swift_release(v81);
    (*(void (**)(char *, uint64_t, __n128))(v110 + 8))(v107, v61, v88);
    v72 = (uint64_t)v109;
  }
  return sub_10004FCB8(v72, type metadata accessor for FMSelectionPendingAction);
}

void sub_1001A3E2C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  _BYTE v11[24];

  v2 = sub_100053F2C(&qword_1005D2C70);
  __chkstk_darwin(v2);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *(_QWORD *)(*(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 56);
  v6 = type metadata accessor for FMSelectionPendingAction(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v7 = v5 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingAction;
  swift_beginAccess(v5 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingAction, v11, 33, 0);
  swift_retain(v5);
  sub_100099CDC((uint64_t)v4, v7, &qword_1005D2C70);
  swift_endAccess(v11);
  v8 = objc_msgSend(a1, "view", swift_release(v5).n128_f64[0]);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "layoutIfNeeded");

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001A3F54(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD aBlock[5];
  uint64_t v89;

  v80 = a6;
  v81 = a7;
  v73 = a2;
  v74 = a5;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v86 = *(_QWORD *)(v10 - 8);
  v87 = v10;
  __chkstk_darwin(v10);
  v85 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v83 = *(_QWORD *)(v12 - 8);
  v84 = v12;
  __chkstk_darwin(v12);
  v82 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMSelectionPendingAction(0);
  v77 = *(_QWORD *)(v14 - 8);
  v15 = *(_QWORD *)(v77 + 64);
  __chkstk_darwin(v14);
  v79 = (uint64_t)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100053F2C(&qword_1005D9990);
  v76 = *(_QWORD *)(v16 - 8);
  v17 = *(_QWORD *)(v76 + 64);
  v18 = __chkstk_darwin(v16);
  v78 = (uint64_t)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v71 - v20;
  v22 = __chkstk_darwin(v19);
  v24 = (char *)&v71 - v23;
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v71 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v71 - v28;
  v75 = a1;
  sub_100007464(a1, (uint64_t)&v71 - v28, &qword_1005D9990);
  if (a3)
  {
    swift_bridgeObjectRetain(a3);
    v31 = v74;
    v30 = v75;
    v32 = (_QWORD *)v73;
    goto LABEL_16;
  }
  v72 = a4;
  sub_100007464((uint64_t)v29, (uint64_t)v27, &qword_1005D9990);
  v33 = type metadata accessor for FMIPAddress(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v27, 1, v33);
  v71 = v34;
  if (v36 == 1)
  {
    sub_1000051EC((uint64_t)v27, &qword_1005D9990);
    sub_100007464((uint64_t)v29, (uint64_t)v24, &qword_1005D9990);
    v31 = v74;
  }
  else
  {
    v73 = FMIPAddress.label.getter(v37);
    a3 = v38;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v33);
    sub_100007464((uint64_t)v29, (uint64_t)v24, &qword_1005D9990);
    v31 = v74;
    if (a3)
    {
      sub_1000051EC((uint64_t)v24, &qword_1005D9990);
      a4 = v72;
      v30 = v75;
      v32 = (_QWORD *)v73;
      goto LABEL_16;
    }
  }
  sub_100007464((uint64_t)v24, (uint64_t)v21, &qword_1005D9990);
  v39 = v35(v21, 1, v33);
  if ((_DWORD)v39 == 1)
  {
    sub_1000051EC((uint64_t)v24, &qword_1005D9990);
    sub_1000051EC((uint64_t)v29, &qword_1005D9990);
    v32 = 0;
    a3 = 0;
    v29 = v21;
    a4 = v72;
LABEL_13:
    v30 = v75;
    goto LABEL_16;
  }
  v32 = (_QWORD *)FMIPAddress.formattedAddressLines.getter(v39);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v21, v33);
  a4 = v72;
  if (!v32)
  {
    sub_1000051EC((uint64_t)v24, &qword_1005D9990);
    a3 = 0;
    goto LABEL_13;
  }
  if (v32[2])
  {
    v40 = (_QWORD *)v32[4];
    a3 = v32[5];
    swift_bridgeObjectRetain(a3);
    v41 = v32;
    v32 = v40;
    swift_bridgeObjectRelease(v41);
  }
  else
  {
    swift_bridgeObjectRelease(v32);
    v32 = 0;
    a3 = 0;
  }
  v30 = v75;
  sub_1000051EC((uint64_t)v24, &qword_1005D9990);
LABEL_16:
  sub_1000051EC((uint64_t)v29, &qword_1005D9990);
  v42 = &a4[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAddress];
  v43 = *(_QWORD *)&a4[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAddress + 8];
  *(_QWORD *)v42 = v32;
  *((_QWORD *)v42 + 1) = a3;
  swift_bridgeObjectRelease(v43);
  v44 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v75 = static OS_dispatch_queue.main.getter(v44);
  v45 = v31;
  v46 = v79;
  sub_10004FC74(v45, v79, type metadata accessor for FMSelectionPendingAction);
  v47 = v78;
  sub_100007464(v30, v78, &qword_1005D9990);
  v48 = *(unsigned __int8 *)(v77 + 80);
  v49 = (v48 + 16) & ~v48;
  v50 = (v15 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  v51 = *(unsigned __int8 *)(v76 + 80);
  v52 = a4;
  v53 = (v51 + v50 + 8) & ~v51;
  v54 = (v17 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  v55 = swift_allocObject(&unk_10054E708, v54 + 16, v48 | v51 | 7);
  sub_100051774(v46, v55 + v49, type metadata accessor for FMSelectionPendingAction);
  *(_QWORD *)(v55 + v50) = v52;
  sub_10005DAA0(v47, v55 + v53, &qword_1005D9990);
  v56 = (_QWORD *)(v55 + v54);
  v57 = v81;
  *v56 = v80;
  v56[1] = v57;
  aBlock[4] = sub_1001D5A14;
  v89 = v55;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10054E720;
  v58 = _Block_copy(aBlock);
  v59 = v89;
  v60 = v52;
  swift_retain(v57);
  swift_release(v59);
  v61 = v82;
  static DispatchQoS.unspecified.getter(v62);
  aBlock[0] = _swiftEmptyArrayStorage;
  v63 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v64 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v65 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  v66 = v85;
  v67 = v64;
  v68 = v87;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v67, v65, v87, v63);
  v69 = (void *)v75;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v61, v66, v58);
  _Block_release(v58);

  (*(void (**)(char *, uint64_t))(v86 + 8))(v66, v68);
  return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v61, v84);
}

void sub_1001A4540(uint64_t a1, _BYTE *a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t My;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  _BYTE *v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t);
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  id v84;
  Swift::String v85;
  unint64_t v86;
  id v87;
  NSString v88;
  _BYTE *v89;
  _BYTE *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t);
  _QWORD aBlock[3];
  void *v106;
  uint64_t v107;
  uint64_t v108;
  char v109[24];
  unint64_t v110;
  unint64_t v111;
  char v112[24];
  _BYTE v113[32];

  v103 = a5;
  v104 = a4;
  v93 = a3;
  v101 = a2;
  v102 = a1;
  v96 = type metadata accessor for FMPendingActionInfo(0);
  __chkstk_darwin(v96);
  v97 = (uint64_t)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for FMIPSeparationLocation(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v91 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C(&qword_1005DDFA0);
  v8 = __chkstk_darwin(v7);
  v92 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v95 = (uint64_t)&v91 - v11;
  __chkstk_darwin(v10);
  v100 = (char *)&v91 - v12;
  v13 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v13);
  v15 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100053F2C(&qword_1005E4440);
  __chkstk_darwin(v16);
  v18 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DispatchWorkItemFlags(0);
  v94 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v26);
  v28 = (char *)&v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for FMSelectionPendingAction(0);
  __chkstk_darwin(v29);
  v31 = (char *)&v91 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  My = type metadata accessor for Feature.FindMy(0);
  v106 = (void *)My;
  v107 = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v33 = sub_10003D370(aBlock);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v33, enum case for Feature.FindMy.separationAlerts(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(aBlock);
  sub_100029574(aBlock);
  if ((My & 1) != 0)
  {
    sub_10004FC74(v102, (uint64_t)v31, type metadata accessor for FMSelectionPendingAction);
    v34 = sub_100053F2C(&qword_1005D2C78);
    v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v31, 10, v34);
    switch((_DWORD)v35)
    {
      case 4:
        v54 = v101;
        v55 = v101[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showSeparationAttention];
        v101[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showSeparationAttention] = 0;
        if (v55 != 1)
        {
LABEL_29:
          v104(v35);
          return;
        }
        v56 = *(_QWORD *)&v54[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
            + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
        swift_beginAccess(v56, aBlock, 0, 0);
        sub_10004FC74(v56, (uint64_t)v28, type metadata accessor for FMDeviceDetailViewModel);
        sub_10019D3D0(v28);
        v57 = (uint64_t)v28;
        v58 = type metadata accessor for FMDeviceDetailViewModel;
        break;
      case 3:
        FMIPSeparationEvent.init(itemOrDeviceCount:addSafeLocationTapped:addToAllTapped:homeRemoved:)(1, 0, 0, 0);
        v59 = type metadata accessor for FMIPSeparationEvent(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v18, 0, 1, v59);
        v60 = v101;
        v61 = (uint64_t)&v101[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationEvent];
        swift_beginAccess(&v101[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationEvent], aBlock, 33, 0);
        v62 = (uint64_t)v18;
        v63 = v60;
        sub_100099CDC(v62, v61, &qword_1005E4440);
        swift_endAccess(aBlock);
        v64 = (uint64_t)&v60[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation];
        swift_beginAccess(&v60[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation], aBlock, 0, 0);
        sub_100007464(v64, (uint64_t)v15, (uint64_t *)&unk_1005E2270);
        v65 = type metadata accessor for FMIPSafeLocation(0);
        LODWORD(v64) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v15, 1, v65);
        sub_1000051EC((uint64_t)v15, (uint64_t *)&unk_1005E2270);
        if ((_DWORD)v64 != 1)
        {
          v66 = v60[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showSeparationAttention];
          v60[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showSeparationAttention] = 1;
          if ((v66 & 1) == 0)
          {
            v67 = *(_QWORD *)&v60[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
                + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
            swift_beginAccess(v67, v109, 0, 0);
            sub_10004FC74(v67, (uint64_t)v28, type metadata accessor for FMDeviceDetailViewModel);
            sub_10019D3D0(v28);
            sub_10004FCB8((uint64_t)v28, type metadata accessor for FMDeviceDetailViewModel);
          }
        }
        v68 = v98;
        v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56);
        v70 = (uint64_t)v100;
        v71 = v99;
        v69(v100, 1, 1, v99);
        v72 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
        v73 = *(_QWORD *)(*(_QWORD *)&v63[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 56)
            + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingActionInfo;
        swift_beginAccess(v73, v113, 0, 0);
        v74 = v73;
        v75 = v97;
        sub_10004FC74(v74, v97, type metadata accessor for FMPendingActionInfo);
        v76 = v95;
        sub_100007464(v75 + *(int *)(v96 + 20), v95, &qword_1005DDFA0);
        sub_10004FCB8(v75, type metadata accessor for FMPendingActionInfo);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v76, 1, v71) == 1)
        {
          sub_1000051EC(v76, &qword_1005DDFA0);
        }
        else
        {
          v77 = v91;
          (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v91, v76, v71);
          v78 = (uint64_t)v92;
          FMIPSeparationLocation.with(address:)(v93);
          (*(void (**)(char *, uint64_t))(v68 + 8))(v77, v71);
          sub_1000051EC(v70, &qword_1005DDFA0);
          v69((char *)v78, 0, 1, v71);
          sub_10005DAA0(v78, v70, &qword_1005DDFA0);
        }
        v79 = *(void **)(*(_QWORD *)&v63[v72] + 16);
        v80 = *(_QWORD *)&v63[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
            + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
        swift_beginAccess(v80, v112, 0, 0);
        v81 = *(_QWORD *)(v80 + 24);
        if (v81)
        {
          v82 = *(_QWORD *)(v80 + 16);
          v83 = *(void **)(v80 + 24);
        }
        else
        {
          v82 = 0;
          v83 = (void *)0xE000000000000000;
        }
        v110 = 0xD00000000000001ELL;
        v111 = 0x80000001004B2370;
        v84 = v79;
        swift_bridgeObjectRetain(v81);
        v85._countAndFlagsBits = v82;
        v85._object = v83;
        String.append(_:)(v85);
        v86 = v111;
        swift_bridgeObjectRetain(v81);
        swift_bridgeObjectRelease(v83);
        v87 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        v88 = String._bridgeToObjectiveC()();
        LOBYTE(v86) = objc_msgSend(v87, "BOOLForKey:", v88, swift_bridgeObjectRelease(v86).n128_f64[0]);
        swift_bridgeObjectRelease(v81);

        if ((v86 & 1) == 0)
          sub_1001C277C(v70);
        v89 = *(_BYTE **)(*(_QWORD *)&v63[v72] + 16);
        v89[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areServerAlertsPostponed] = 0;
        v90 = v89;
        sub_100377310();

        v35 = sub_1000051EC(v70, &qword_1005DDFA0);
        goto LABEL_29;
      case 2:
        v36 = v101;
        v37 = v101[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showSeparationAttention];
        v101[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showSeparationAttention] = 1;
        if ((v37 & 1) == 0)
        {
          v38 = *(_QWORD *)&v36[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
              + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
          swift_beginAccess(v38, v113, 0, 0);
          sub_10004FC74(v38, (uint64_t)v28, type metadata accessor for FMDeviceDetailViewModel);
          sub_10019D3D0(v28);
          sub_10004FCB8((uint64_t)v28, type metadata accessor for FMDeviceDetailViewModel);
        }
        v39 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
        v40 = (void *)static OS_dispatch_queue.main.getter(v39);
        v41 = swift_allocObject(&unk_10054E758, 24, 7);
        *(_QWORD *)(v41 + 16) = v36;
        v107 = (uint64_t)sub_1001D5AA0;
        v108 = v41;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100037DF8;
        v106 = &unk_10054E770;
        v42 = _Block_copy(aBlock);
        v43 = v108;
        v44 = v36;
        swift_release(v43);
        static DispatchQoS.unspecified.getter(v45);
        aBlock[0] = _swiftEmptyArrayStorage;
        v46 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v47 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
        v48 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v47, v48, v19, v46);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v25, v21, v42);
        _Block_release(v42);

        (*(void (**)(char *, uint64_t))(v94 + 8))(v21, v19);
        v35 = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v22);
        goto LABEL_29;
      default:
        v58 = type metadata accessor for FMSelectionPendingAction;
        v57 = (uint64_t)v31;
        break;
    }
    v35 = sub_10004FCB8(v57, v58);
    goto LABEL_29;
  }
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v49 = type metadata accessor for Logger(0);
  v50 = sub_100056D88(v49, (uint64_t)qword_1005F5748);
  v51 = Logger.logObject.getter(v50);
  v52 = static os_log_type_t.default.getter(v51);
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v53 = 0;
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "FMDeviceDetailContentViewController: Separation Feature Not Enabled.", v53, 2u);
    swift_slowDealloc(v53, -1, -1);
  }

}

uint64_t sub_1001A4FF0(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char *v12;
  __n128 v13;
  char v15[24];

  v2 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v2);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for FMIPSafeLocation(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (uint64_t)&a1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation];
  swift_beginAccess(&a1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation], v15, 0, 0);
  sub_100007464(v9, (uint64_t)v4, (uint64_t *)&unk_1005E2270);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_1000051EC((uint64_t)v4, (uint64_t *)&unk_1005E2270);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v11 = swift_allocObject(&unk_10054E7A8, 24, 7);
  *(_QWORD *)(v11 + 16) = a1;
  v12 = a1;
  sub_1001C2E14((uint64_t)v8, 0, (uint64_t)sub_1001D5AA8, v11);
  v13 = swift_release(v11);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v13);
}

double sub_1001A5168(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  double result;
  _BYTE v12[24];

  v3 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for FMIPSafeLocation(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = a2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation;
  swift_beginAccess(a2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation, v12, 33, 0);
  sub_100099CDC((uint64_t)v5, v7, (uint64_t *)&unk_1005E2270);
  swift_endAccess(v12);
  v8 = (_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAddress);
  v9 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAddress + 8);
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

uint64_t sub_1001A5244(char *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, void *), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __n128 v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  Swift::String v50;
  Swift::String v51;
  Swift::String v52;
  char *v53;
  _QWORD *v54;
  void (*v55)(uint64_t, uint64_t, void *);
  uint64_t v56;
  id v57;
  __n128 v58;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void (*v66)(uint64_t, uint64_t, void *);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  Swift::String v72;

  v66 = a3;
  v67 = a4;
  v5 = type metadata accessor for FMIPSafeLocationType(0);
  v63 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v62 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v61 = (char *)&v60 - v8;
  v9 = sub_100053F2C(&qword_1005D9990);
  v10 = __chkstk_darwin(v9);
  v60 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v68 = (char *)&v60 - v12;
  v13 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v60 - v17;
  v19 = type metadata accessor for FMIPSafeLocation(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v65 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = a1;
  v22 = *(_QWORD *)(*(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
  v23 = swift_retain(v22);
  v24 = UUID.uuidString.getter(v23);
  v26 = v25;
  v27 = FMIPManager.safeLocations.getter(v24);
  swift_bridgeObjectRetain(v26);
  v28 = sub_10041E75C(v27, v24, v26);
  swift_bridgeObjectRelease(v27);
  v29 = swift_bridgeObjectRelease(v26);
  if (v28[2])
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v20 + 16))(v18, (unint64_t)v28+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80)), v19, v29);
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v30(v18, 0, 1, v19);
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v30(v18, 1, 1, v19);
  }
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v28);
  v31 = swift_release(v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v20 + 48))(v18, 1, v19, v31) == 1)
  {
    v32 = (uint64_t *)&unk_1005E2270;
    v33 = (uint64_t)v18;
  }
  else
  {
    v34 = v65;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v65, v18, v19);
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v16, v34, v19);
    v30(v16, 0, 1, v19);
    v35 = v64;
    v36 = (uint64_t)&v64[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation];
    swift_beginAccess(&v64[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation], &v70, 33, 0);
    sub_100099CDC((uint64_t)v16, v36, (uint64_t *)&unk_1005E2270);
    v37 = swift_endAccess(&v70);
    v38 = FMIPSafeLocation.address.getter(v37);
    v39 = v61;
    FMIPSafeLocation.type.getter(v38);
    v41 = v62;
    v40 = v63;
    (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v62, enum case for FMIPSafeLocationType.home(_:), v5);
    v42 = sub_100008000((unint64_t *)&unk_1005D45E0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPSafeLocationType, (uint64_t)&protocol conformance descriptor for FMIPSafeLocationType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v70, v5, v42);
    dispatch thunk of RawRepresentable.rawValue.getter(&v69, v5, v42);
    v44 = v69;
    v43 = v70;
    v45 = *(void (**)(char *, uint64_t))(v40 + 8);
    v45(v41, v5);
    v45(v39, v5);
    v46 = type metadata accessor for FMIPAddress(0);
    v47 = *(_QWORD *)(v46 - 8);
    if (v43 == v44)
    {
      v48 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v60, 1, 1, v46);
      v70 = 0;
      v71 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v71);
      v49 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v72._countAndFlagsBits = 0xD000000000000025;
      v72._object = (void *)0x80000001004B2930;
      v50._object = (void *)0x80000001004B2910;
      v50._countAndFlagsBits = 0xD000000000000013;
      v51._countAndFlagsBits = 0;
      v51._object = (void *)0xE000000000000000;
      v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v50, (Swift::String_optional)0, (NSBundle)v49, v51, v72);

      v66(v48, v52._countAndFlagsBits, v52._object);
      swift_bridgeObjectRelease(v52._object);
      sub_1000051EC(v48, &qword_1005D9990);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v34, v19);
      v33 = (uint64_t)v68;
      v32 = &qword_1005D9990;
    }
    else
    {
      v53 = v68;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v68, 1, v46) == 1)
      {
        v54 = (_QWORD *)swift_allocObject(&unk_10054E6E0, 40, 7);
        v55 = v66;
        v56 = v67;
        v54[2] = v35;
        v54[3] = v55;
        v54[4] = v56;
        v57 = v35;
        swift_retain(v56);
        dispatch thunk of FMIPReverseGeocodingCache.address(for:completion:)(v34, sub_1001D58D0, v54);
        v58 = swift_release(v54);
      }
      else
      {
        v66((uint64_t)v53, 0, 0);
      }
      (*(void (**)(char *, uint64_t, __n128))(v20 + 8))(v34, v19, v58);
      v32 = &qword_1005D9990;
      v33 = (uint64_t)v53;
    }
  }
  return sub_1000051EC(v33, v32);
}

uint64_t sub_1001A57C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[32];

  v5 = sub_100053F2C(&qword_1005D9990);
  __chkstk_darwin(v5);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100197D00((uint64_t)v13);
  v10 = v9;
  v11 = type metadata accessor for FMIPSafeLocation(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    sub_100007464(a1, (uint64_t)v7, &qword_1005D9990);
    FMIPSafeLocation.address.setter(v7);
  }
  ((void (*)(_BYTE *, _QWORD))v8)(v13, 0);
  return a3(a1, 0, 0);
}

uint64_t sub_1001A58AC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for FMIPAddress(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4);
  if ((_DWORD)result != 1)
    return a2(a1, 0, 0);
  return result;
}

void sub_1001A5910(_BOOL8 a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  __objc2_prot_list **p_base_prots;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  double v37;
  double v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  unsigned __int8 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  NSObject *v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  NSObject *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t aBlock;
  char v131[8];

  v124 = a3;
  v126 = a2;
  v125 = type metadata accessor for Logger(0);
  v121 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v6 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v104 - v11;
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v104 - v19;
  v128 = v3;
  v21 = v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundInFlight;
  v22 = v18;
  swift_beginAccess(v21, v131, 0, 0);
  sub_100007464(v21, (uint64_t)v12, (uint64_t *)&unk_1005D3320);
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v22);
  p_base_prots = &LocateIntent__classData.base_prots;
  v127 = a1;
  if (v23 == 1)
  {
    sub_1000051EC((uint64_t)v12, (uint64_t *)&unk_1005D3320);
    if (qword_1005D1CA0 != -1)
      swift_once(&qword_1005D1CA0, sub_100197BF4);
    v25 = v125;
    sub_100056D88(v125, (uint64_t)qword_1005F5140);
    v26 = v124;
    v27 = swift_bridgeObjectRetain_n(v124, 2);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.default.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc(32, -1);
      v31 = swift_slowAlloc(64, -1);
      aBlock = v31;
      *(_DWORD *)v30 = 136446723;
      v32 = FMSoundPlatterViewLayout.description.getter(v127);
      v34 = v33;
      v129 = sub_100056DA0(v32, v33, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &aBlock);
      swift_bridgeObjectRelease(v34);
      *(_WORD *)(v30 + 12) = 2160;
      v129 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &aBlock);
      *(_WORD *)(v30 + 22) = 2081;
      swift_bridgeObjectRetain(v26);
      v129 = sub_100056DA0(v126, v26, &aBlock);
      p_base_prots = &LocateIntent__classData.base_prots;
      v25 = v125;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &aBlock);
      swift_bridgeObjectRelease_n(v26, 3);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "No sound in-flight. Not overriding FMSoundPlatterViewLayout: %{public}s, id: %{private,mask.hash}s.", (uint8_t *)v30, 0x20u);
      swift_arrayDestroy(v31, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v26, 2);
    }
    goto LABEL_19;
  }
  v122 = v14;
  v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v20, v12, v22);
  v25 = v125;
  v120 = v20;
  v123 = v22;
  if (a1 == 3)
    goto LABEL_11;
  v36 = v6;
  if (!a1)
  {
    Date.init()(v35);
    v37 = Date.timeIntervalSince(_:)(v20);
    v22 = v123;
    v38 = v37;
    v39 = *(void (**)(char *, uint64_t))(v122 + 8);
    v39(v17, v123);
    if (v38 <= 180.0)
    {
      if (qword_1005D1CA0 != -1)
        swift_once(&qword_1005D1CA0, sub_100197BF4);
      sub_100056D88(v25, (uint64_t)qword_1005F5140);
      v26 = v124;
      v60 = swift_bridgeObjectRetain_n(v124, 2);
      v61 = Logger.logObject.getter(v60);
      v62 = static os_log_type_t.default.getter(v61);
      if (os_log_type_enabled(v61, v62))
      {
        v63 = swift_slowAlloc(32, -1);
        v64 = swift_slowAlloc(64, -1);
        aBlock = v64;
        *(_DWORD *)v63 = 136446723;
        v65 = FMSoundPlatterViewLayout.description.getter(0);
        v67 = v66;
        v129 = sub_100056DA0(v65, v66, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &aBlock);
        swift_bridgeObjectRelease(v67);
        *(_WORD *)(v63 + 12) = 2160;
        v129 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &aBlock);
        *(_WORD *)(v63 + 22) = 2081;
        swift_bridgeObjectRetain(v26);
        v129 = sub_100056DA0(v126, v26, &aBlock);
        v25 = v125;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &aBlock);
        swift_bridgeObjectRelease_n(v26, 3);
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "Overriding FMSoundPlatterViewLayout: %{public}s to .pendingSound for id: %{private,mask.hash}s.", (uint8_t *)v63, 0x20u);
        swift_arrayDestroy(v64, 2, (char *)&type metadata for Any + 8);
        v68 = v64;
        p_base_prots = (__objc2_prot_list **)(&LocateIntent__classData + 40);
        swift_slowDealloc(v68, -1, -1);
        swift_slowDealloc(v63, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(v26, 2);
      }

      v39(v120, v123);
      v127 = 1;
LABEL_19:
      if (p_base_prots[404] != (__objc2_prot_list *)-1)
        swift_once(&qword_1005D1CA0, sub_100197BF4);
      sub_100056D88(v25, (uint64_t)qword_1005F5140);
      v49 = swift_bridgeObjectRetain_n(v26, 2);
      v50 = Logger.logObject.getter(v49);
      v51 = static os_log_type_t.default.getter(v50);
      v52 = os_log_type_enabled(v50, v51);
      v54 = v126;
      v53 = v127;
      if (v52)
      {
        v55 = swift_slowAlloc(32, -1);
        v56 = swift_slowAlloc(64, -1);
        aBlock = v56;
        *(_DWORD *)v55 = 136446723;
        v57 = FMSoundPlatterViewLayout.description.getter(v53);
        v59 = v58;
        v129 = sub_100056DA0(v57, v58, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &aBlock);
        swift_bridgeObjectRelease(v59);
        *(_WORD *)(v55 + 12) = 2160;
        v129 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &aBlock);
        *(_WORD *)(v55 + 22) = 2081;
        swift_bridgeObjectRetain(v26);
        v129 = sub_100056DA0(v54, v26, &aBlock);
        v53 = v127;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &aBlock);
        swift_bridgeObjectRelease_n(v26, 3);
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "updateSoundStatus: %{public}s, id: %{private,mask.hash}s.", (uint8_t *)v55, 0x20u);
        swift_arrayDestroy(v56, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v56, -1, -1);
        swift_slowDealloc(v55, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v26, 2);
      }
      __asm { BR              X10 }
    }
  }
  if (sub_10006BADC(a1, (uint64_t)&off_10053F9C8) || sub_10006BADC(a1, (uint64_t)&off_10053F9F0))
  {
LABEL_11:
    v40 = v122;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v122 + 56))(v10, 1, 1, v22);
    swift_beginAccess(v21, &aBlock, 33, 0);
    sub_100099CDC((uint64_t)v10, v21, (uint64_t *)&unk_1005D3320);
    swift_endAccess(&aBlock);
    objc_msgSend(*(id *)(v128 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton), "setUserInteractionEnabled:", 1);
    if (qword_1005D1CA0 != -1)
      swift_once(&qword_1005D1CA0, sub_100197BF4);
    sub_100056D88(v25, (uint64_t)qword_1005F5140);
    v26 = v124;
    v41 = swift_bridgeObjectRetain_n(v124, 2);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.default.getter(v42);
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc(32, -1);
      v45 = swift_slowAlloc(64, -1);
      aBlock = v45;
      *(_DWORD *)v44 = 136446723;
      v46 = FMSoundPlatterViewLayout.description.getter(a1);
      v48 = v47;
      v129 = sub_100056DA0(v46, v47, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &aBlock);
      swift_bridgeObjectRelease(v48);
      *(_WORD *)(v44 + 12) = 2160;
      v129 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &aBlock);
      *(_WORD *)(v44 + 22) = 2081;
      swift_bridgeObjectRetain(v26);
      v129 = sub_100056DA0(v126, v26, &aBlock);
      v25 = v125;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &aBlock);
      swift_bridgeObjectRelease_n(v26, 3);
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Succeeding play sound. Not overriding FMSoundPlatterViewLayout: %{public}s for id: %{private,mask.hash}s.", (uint8_t *)v44, 0x20u);
      swift_arrayDestroy(v45, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1, -1);
      swift_slowDealloc(v44, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v26, 2);
    }

    (*(void (**)(char *, uint64_t))(v40 + 8))(v120, v123);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v122 + 56))(v10, 1, 1, v22);
    swift_beginAccess(v21, &aBlock, 33, 0);
    sub_100099CDC((uint64_t)v10, v21, (uint64_t *)&unk_1005D3320);
    swift_endAccess(&aBlock);
    objc_msgSend(*(id *)(v128 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton), "setUserInteractionEnabled:", 1);
    if (qword_1005D1CA0 != -1)
      swift_once(&qword_1005D1CA0, sub_100197BF4);
    v69 = sub_100056D88(v25, (uint64_t)qword_1005F5140);
    (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v6, v69, v25);
    v70 = swift_allocObject(&unk_10054E3E8, 17, 7);
    *(_BYTE *)(v70 + 16) = v127;
    v71 = swift_allocObject(&unk_10054E410, 32, 7);
    *(_QWORD *)(v71 + 16) = sub_1001D5570;
    *(_QWORD *)(v71 + 24) = v70;
    v72 = v71;
    v117 = v71;
    v73 = swift_allocObject(&unk_10054E438, 32, 7);
    v119 = v73;
    v26 = v124;
    *(_QWORD *)(v73 + 16) = v126;
    *(_QWORD *)(v73 + 24) = v26;
    swift_bridgeObjectRetain_n(v26, 2);
    v111 = v70;
    v74 = swift_retain(v70);
    v116 = Logger.logObject.getter(v74);
    LODWORD(v105) = static os_log_type_t.default.getter(v116);
    v75 = swift_allocObject(&unk_10054E460, 17, 7);
    *(_BYTE *)(v75 + 16) = 34;
    v76 = swift_allocObject(&unk_10054E488, 17, 7);
    *(_BYTE *)(v76 + 16) = 8;
    v77 = swift_allocObject(&unk_10054E4B0, 32, 7);
    v109 = v36;
    *(_QWORD *)(v77 + 16) = sub_1001D55A0;
    *(_QWORD *)(v77 + 24) = v72;
    v78 = v77;
    v115 = v77;
    v79 = swift_allocObject(&unk_10054E4D8, 32, 7);
    *(_QWORD *)(v79 + 16) = sub_100021E78;
    *(_QWORD *)(v79 + 24) = v78;
    v80 = v79;
    v112 = v79;
    v81 = swift_allocObject(&unk_10054E500, 17, 7);
    *(_BYTE *)(v81 + 16) = 112;
    v82 = v81;
    v113 = swift_allocObject(&unk_10054E528, 17, 7);
    *(_BYTE *)(v113 + 16) = 8;
    v83 = swift_allocObject(&unk_10054E550, 24, 7);
    *(_QWORD *)(v83 + 16) = 1752392040;
    v84 = v83;
    v118 = v83;
    v85 = swift_allocObject(&unk_10054E578, 32, 7);
    *(_QWORD *)(v85 + 16) = sub_1001D5634;
    *(_QWORD *)(v85 + 24) = v84;
    v86 = swift_allocObject(&unk_10054E5A0, 17, 7);
    *(_BYTE *)(v86 + 16) = 33;
    v114 = swift_allocObject(&unk_10054E5C8, 17, 7);
    *(_BYTE *)(v114 + 16) = 8;
    v87 = swift_allocObject(&unk_10054E5F0, 32, 7);
    v88 = v119;
    *(_QWORD *)(v87 + 16) = PushAlert.locKey.getter;
    *(_QWORD *)(v87 + 24) = v88;
    v89 = swift_allocObject(&unk_10054E618, 32, 7);
    *(_QWORD *)(v89 + 16) = sub_1001D60BC;
    *(_QWORD *)(v89 + 24) = v87;
    v90 = sub_100053F2C((uint64_t *)&unk_1005E3B20);
    v91 = swift_allocObject(v90, 176, 7);
    v104 = sub_1003EF288(v91, 9);
    *v92 = sub_1001D55E4;
    v92[1] = v75;
    v92[2] = sub_1001D60C4;
    v92[3] = v76;
    v92[4] = sub_1001D55FC;
    v92[5] = v80;
    v92[6] = sub_1001D60C4;
    v92[7] = v82;
    v93 = v82;
    v94 = v113;
    v92[8] = sub_1001D60C4;
    v92[9] = v94;
    v92[10] = sub_1001D563C;
    v92[11] = v85;
    v92[12] = sub_1001D60C4;
    v92[13] = v86;
    v95 = v114;
    v92[14] = sub_1001D60C4;
    v92[15] = v95;
    v92[16] = sub_1001D60C0;
    v92[17] = v89;
    swift_retain(v117);
    swift_retain(v115);
    swift_retain(v118);
    swift_retain(v119);
    v108 = v87;
    swift_retain(v87);
    swift_retain(v75);
    swift_retain(v76);
    swift_retain(v112);
    v106 = v93;
    swift_retain(v93);
    swift_retain(v94);
    v107 = v85;
    swift_retain(v85);
    swift_retain(v86);
    swift_retain(v95);
    v110 = v89;
    swift_retain(v89);
    swift_bridgeObjectRelease(v104);
    v96 = v105;
    if (os_log_type_enabled(v116, (os_log_type_t)v105))
    {
      v97 = (uint8_t *)swift_slowAlloc(32, -1);
      v105 = swift_slowAlloc(64, -1);
      aBlock = v105;
      *(_WORD *)v97 = 771;
      v97[2] = 34;
      swift_release(v75);
      v97[3] = 8;
      swift_release(v76);
      v98 = FMSoundPlatterViewLayout.description.getter(v127);
      v100 = v99;
      v129 = sub_100056DA0(v98, v99, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &aBlock);
      swift_release(v111);
      swift_release(v117);
      swift_release(v115);
      swift_release(v112);
      swift_bridgeObjectRelease(v100);
      v97[12] = 112;
      swift_release(v106);
      v97[13] = 8;
      swift_release(v113);
      v129 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &aBlock);
      swift_release(v107);
      swift_release(v118);
      v97[22] = 33;
      swift_release(v86);
      v97[23] = 8;
      swift_release(v114);
      swift_bridgeObjectRetain(v26);
      v129 = sub_100056DA0(v126, v26, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &aBlock);
      swift_release(v119);
      swift_release(v108);
      swift_release(v110);
      swift_bridgeObjectRelease_n(v26, 2);
      v101 = v116;
      _os_log_impl((void *)&_mh_execute_header, v116, v96, "Completing \"in-flight\" play sound (playSoundInFlight set to nil). Not overriding FMSoundPlatterViewLayout: %{public}s, id: %{private,mask.hash}s.", v97, 0x20u);
      v102 = v105;
      swift_arrayDestroy(v105, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v102, -1, -1);
      swift_slowDealloc(v97, -1, -1);

    }
    else
    {
      swift_release(v75);
      swift_release(v76);
      swift_release(v111);
      swift_release(v117);
      swift_release(v115);
      swift_release(v112);
      swift_release(v106);
      swift_release(v113);
      swift_release(v107);
      swift_release(v86);
      swift_release(v114);
      swift_bridgeObjectRelease(v26);
      swift_release(v119);
      swift_release(v108);
      swift_release(v110);

      v103 = swift_release(v118);
    }
    v25 = v125;
    (*(void (**)(char *, uint64_t, __n128))(v121 + 8))(v109, v125, v103);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v120, v123);
  }
  p_base_prots = &LocateIntent__classData.base_prots;
  goto LABEL_19;
}

uint64_t sub_1001ABB58()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t Strong;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57[24];
  char v58[24];
  Swift::String v59;

  v1 = v0;
  v2 = type metadata accessor for FMIPPlaySoundMethod(0);
  v48 = *(_QWORD *)(v2 - 8);
  v49 = v2;
  __chkstk_darwin(v2);
  v47 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for FMDeviceDetailViewModel(0);
  v50 = *(_QWORD *)(v53 - 8);
  v4 = __chkstk_darwin(v53);
  v51 = v5;
  v52 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v54 = (uint64_t)&v45 - v6;
  v7 = type metadata accessor for FMIPAnalyticsActionType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMIPDevice(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v15 = type metadata accessor for Logger(0);
  v46 = sub_100056D88(v15, (uint64_t)qword_1005F5748);
  v16 = Logger.logObject.getter(v46);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMDeviceDetailContentViewController: Play Sound button pressed", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  sub_1001B91C0();
  v19 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource;
  v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  v21 = swift_beginAccess(v20, v58, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v14, v20, v11, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for FMIPAnalyticsActionType.playSound(_:), v7);
  sub_1001C5D1C((uint64_t)v14, (uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v22 = *(_QWORD *)&v1[v19] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v22, v57, 0, 0);
  v23 = v54;
  sub_10004FC74(v22, v54, type metadata accessor for FMDeviceDetailViewModel);
  sub_1001B6FD8();
  v24 = v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPlayingOrPending];
  v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPlayingOrPending] = 1;
  if (v24 != 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundDelegate]);
    if (Strong)
    {
      v26 = Strong;
      v27 = Logger.logObject.getter(Strong);
      v28 = static os_log_type_t.default.getter(v27);
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "FMMediator: Device did start playing sound, keep refreshing", v29, 2u);
        swift_slowDealloc(v29, -1, -1);
      }

      FMIPManager.pauseThrottleOfflineLocationRefreshing(pause:)(1);
      swift_unknownObjectRelease(v26);
    }
  }
  if ((*(_BYTE *)(v23 + *(int *)(v53 + 88) + 1) & 8) != 0)
  {
    v33 = *(void **)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 16);
    v55 = 0;
    v56 = 0xE000000000000000;
    v34 = v33;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v56);
    v35 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v59._countAndFlagsBits = 0xD000000000000035;
    v59._object = (void *)0x80000001004B2890;
    v36._object = (void *)0x80000001004B2860;
    v36._countAndFlagsBits = 0xD000000000000023;
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)v35, v37, v59);

    v39 = v52;
    sub_10004FC74(v23, v52, type metadata accessor for FMDeviceDetailViewModel);
    v40 = *(unsigned __int8 *)(v50 + 80);
    v41 = (v40 + 16) & ~v40;
    v42 = (v51 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
    v43 = swift_allocObject(&unk_10054C638, v42 + 8, v40 | 7);
    sub_100051774(v39, v43 + v41, type metadata accessor for FMDeviceDetailViewModel);
    *(_QWORD *)(v43 + v42) = v1;
    sub_100341D08((uint64_t)v34, v38._countAndFlagsBits, (uint64_t)v38._object, v1, (void (*)(uint64_t))sub_1001D54AC, v43);

    swift_bridgeObjectRelease(v38._object);
    swift_release(v43);
  }
  else
  {
    v31 = (uint64_t)v47;
    v30 = v48;
    v32 = v49;
    (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v47, enum case for FMIPPlaySoundMethod.classic(_:), v49);
    sub_1001B08BC(v31, 0, 0);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v32);
  }
  return sub_10004FCB8(v23, type metadata accessor for FMDeviceDetailViewModel);
}

double sub_1001AC0C0(char a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, char *, char *);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  double result;
  uint64_t My;
  _QWORD *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, _QWORD, uint64_t);
  unint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, __n128);
  __n128 v50;
  void (*v51)(char *, _QWORD, uint64_t);
  char *v52;
  unint64_t v53;
  uint64_t v54;
  char v55;
  void (*v56)(uint64_t, uint64_t);
  __n128 v57;
  unsigned int *v58;
  char *v59;
  void (*v60)(char *, char *, char *);
  char v61;
  char *v62;
  uint64_t (*v63)(uint64_t, uint64_t, char *);
  uint64_t v64;
  unint64_t v65;
  unsigned __int8 *v66;
  unsigned int *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, char *, char *);
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  __n128 v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  uint64_t v89;
  void *v90;
  NSObject *v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  void (*v97)(char *, char *, char *);
  uint64_t v98;
  uint64_t v99;
  char *v100;
  void (*v101)(char *, char *, char *);
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  NSObject *v106;
  uint64_t v107;
  uint64_t aBlock[3];
  void *v109;
  uint64_t v110;
  uint64_t v111;

  v106 = a3;
  v5 = type metadata accessor for FMIPPlaySoundChannels(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v93 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v93 - v14;
  __chkstk_darwin(v13);
  v17 = (uint64_t)&v93 - v16;
  v18 = type metadata accessor for FMIPPlaySoundMethod(0);
  v19 = *(_QWORD *)(v18 - 8);
  v104 = (char *)v18;
  v105 = v19;
  v20 = *(_QWORD *)(v19 + 64);
  v21 = __chkstk_darwin(v18);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v93 - v23;
  v25 = __chkstk_darwin(v22);
  v26 = __chkstk_darwin(v25);
  __chkstk_darwin(v26);
  if ((a1 & 1) == 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v37 = type metadata accessor for Logger(0);
    v38 = sub_100056D88(v37, (uint64_t)qword_1005F5748);
    v106 = Logger.logObject.getter(v38);
    v34 = static os_log_type_t.default.getter(v106);
    if (!os_log_type_enabled(v106, v34))
      goto LABEL_12;
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    v36 = "FMDeviceDetailContentViewController: Couldn't play sound, BT is off";
    goto LABEL_11;
  }
  v100 = (char *)v30;
  v101 = v29;
  v102 = v28;
  v103 = (char *)&v93 - v27;
  v31 = type metadata accessor for FMDeviceDetailViewModel(0);
  if (*(_BYTE *)(a2 + *(int *)(v31 + 96)))
  {
    if (qword_1005D1CA0 != -1)
      swift_once(&qword_1005D1CA0, sub_100197BF4);
    v32 = type metadata accessor for Logger(0);
    v33 = sub_100056D88(v32, (uint64_t)qword_1005F5140);
    v106 = Logger.logObject.getter(v33);
    v34 = static os_log_type_t.error.getter(v106);
    if (!os_log_type_enabled(v106, v34))
      goto LABEL_12;
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    v36 = "Play sound action triggered while sound is already playing. This button should not be shown.";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v106, v34, v36, v35, 2u);
    swift_slowDealloc(v35, -1, -1);
LABEL_12:

    return result;
  }
  v98 = a2;
  v99 = v31;
  sub_1001B6FD8();
  My = type metadata accessor for Feature.FindMy(0);
  v109 = (void *)My;
  v110 = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v41 = sub_10003D370(aBlock);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v41, enum case for Feature.FindMy.spPlaySoundAll(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(aBlock);
  sub_100029574(aBlock);
  v43 = v98;
  v44 = v99;
  v45 = *(_QWORD *)(v98 + *(int *)(v99 + 48));
  if ((My & 1) != 0)
  {
    if (!v45)
    {
      LOBYTE(v12) = 0;
      v15 = v104;
      goto LABEL_44;
    }
    v46 = *(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104);
    v96 = *(char **)(v98 + *(int *)(v99 + 48));
    v46(v17, enum case for FMIPPlaySoundChannels.case(_:), v5);
    v12 = v96;
    v97 = (void (*)(char *, char *, char *))*((_QWORD *)v96 + 2);
    if (!v97)
    {
      v49 = *(void (**)(uint64_t, uint64_t, __n128))(v6 + 8);
      v59 = v96;
      v50 = swift_bridgeObjectRetain(v96);
      LOBYTE(v12) = 0;
LABEL_43:
      v49(v17, v5, v50);
      swift_bridgeObjectRelease(v59);
      v15 = v104;
      v43 = v98;
      v44 = v99;
LABEL_44:
      v66 = (unsigned __int8 *)(v43 + *(int *)(v44 + 44));
      v5 = v105;
      if ((v66[8] & 1) != 0)
        LODWORD(v17) = 0;
      else
        LODWORD(v17) = (*v66 >> 5) & 1;
      if (((v12 | v17) & 1) != 0)
        v67 = (unsigned int *)&enum case for FMIPPlaySoundMethod.ble(_:);
      else
        v67 = (unsigned int *)&enum case for FMIPPlaySoundMethod.classic(_:);
      v68 = v100;
      (*(void (**)(char *, _QWORD, char *))(v105 + 104))(v100, *v67, v15);
      v60 = *(void (**)(char *, char *, char *))(v5 + 32);
      v9 = (uint64_t)v103;
      v60(v103, v68, v15);
      if (qword_1005D1DE8 == -1)
        goto LABEL_51;
      goto LABEL_59;
    }
    v47 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v95 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v95(v15, &v96[v47], v5);
    v48 = sub_100008000(&qword_1005D7308, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
    swift_bridgeObjectRetain(v12);
    v94 = v48;
    LOBYTE(v12) = dispatch thunk of static Equatable.== infix(_:_:)(v15, v17, v5, v48);
    v49 = *(void (**)(uint64_t, uint64_t, __n128))(v6 + 8);
    ((void (*)(char *, uint64_t))v49)(v15, v5);
    if ((v12 & 1) != 0)
    {
      LOBYTE(v12) = 1;
LABEL_28:
      v59 = v96;
      goto LABEL_43;
    }
    if (v97 == (void (*)(char *, char *, char *))1)
    {
      LOBYTE(v12) = 0;
      goto LABEL_28;
    }
    v93 = (void (*)(char *, uint64_t))v49;
    v64 = *(_QWORD *)(v6 + 72);
    v65 = (unint64_t)&v96[v64 + v47];
    v9 = 1;
    while (1)
    {
      v95(v15, (char *)v65, v5);
      v60 = (void (*)(char *, char *, char *))(v9 + 1);
      if (__OFADD__(v9, 1))
        break;
      LOBYTE(v12) = dispatch thunk of static Equatable.== infix(_:_:)(v15, v17, v5, v94);
      v93(v15, v5);
      if ((v12 & 1) == 0)
      {
        ++v9;
        v65 += v64;
        if (v60 != v97)
          continue;
      }
      v59 = v96;
      v49 = (void (*)(uint64_t, uint64_t, __n128))v93;
      goto LABEL_43;
    }
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_once(&qword_1005D1DE8, sub_100005ADC);
LABEL_51:
    v69 = type metadata accessor for Logger(0);
    sub_100056D88(v69, (uint64_t)qword_1005F5748);
    v63 = *(uint64_t (**)(uint64_t, uint64_t, char *))(v5 + 16);
    v70 = v101;
    v71 = v63((uint64_t)v101, v9, v15);
    v72 = Logger.logObject.getter(v71);
    v73 = static os_log_type_t.default.getter(v72);
    v74 = v73;
    if (os_log_type_enabled(v72, v73))
    {
      v75 = swift_slowAlloc(24, -1);
      LODWORD(v100) = v17;
      v76 = v75;
      v77 = swift_slowAlloc(32, -1);
      aBlock[0] = v77;
      *(_DWORD *)v76 = 136315650;
      v78 = sub_100008000(&qword_1005D9958, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundMethod, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundMethod);
      LODWORD(v99) = v74;
      v79 = dispatch thunk of CustomStringConvertible.description.getter(v104, v78);
      v81 = v80;
      v107 = sub_100056DA0(v79, v80, aBlock);
      v15 = v104;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, aBlock);
      v82 = swift_bridgeObjectRelease(v81);
      (*(void (**)(void (*)(char *, char *, char *), char *, __n128))(v105 + 8))(v70, v15, v82);
      *(_WORD *)(v76 + 12) = 1024;
      LODWORD(v107) = v12 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, (char *)&v107 + 4);
      *(_WORD *)(v76 + 18) = 1024;
      LODWORD(v107) = (_DWORD)v100;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, (char *)&v107 + 4);
      _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v99, "FMDeviceDetailContentViewController: Determined sound method: %s, contains case: %{BOOL}d, primary part connected: %{BOOL}d", (uint8_t *)v76, 0x18u);
      swift_arrayDestroy(v77, 1, (char *)&type metadata for Any + 8);
      v83 = v77;
      v5 = v105;
      swift_slowDealloc(v83, -1, -1);
      swift_slowDealloc(v76, -1, -1);
    }
    else
    {
      (*(void (**)(void (*)(char *, char *, char *), char *))(v5 + 8))(v70, v15);
    }

    v62 = v103;
    goto LABEL_55;
  }
  if (v45)
  {
    v51 = *(void (**)(char *, _QWORD, uint64_t))(v6 + 104);
    v96 = *(char **)(v98 + *(int *)(v99 + 48));
    v51(v12, enum case for FMIPPlaySoundChannels.case(_:), v5);
    v52 = v96;
    v101 = (void (*)(char *, char *, char *))*((_QWORD *)v96 + 2);
    if (v101)
    {
      v53 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v100 = *(char **)(v6 + 16);
      ((void (*)(uint64_t, char *, uint64_t))v100)(v9, &v96[v53], v5);
      v54 = sub_100008000(&qword_1005D7308, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
      swift_bridgeObjectRetain(v52);
      v99 = v54;
      v55 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v12, v5, v54);
      v56 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v56(v9, v5);
      if ((v55 & 1) != 0)
      {
        v58 = (unsigned int *)&enum case for FMIPPlaySoundMethod.ble(_:);
      }
      else
      {
        if (v101 != (void (*)(char *, char *, char *))1)
        {
          v98 = *(_QWORD *)(v6 + 72);
          v15 = &v96[v98 + v53];
          v17 = 1;
          do
          {
            ((void (*)(uint64_t, char *, uint64_t))v100)(v9, v15, v5);
            v60 = (void (*)(char *, char *, char *))(v17 + 1);
            if (__OFADD__(v17, 1))
              goto LABEL_58;
            v61 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v12, v5, v99);
            v56(v9, v5);
            if ((v61 & 1) != 0)
            {
              v52 = v96;
              v58 = (unsigned int *)&enum case for FMIPPlaySoundMethod.ble(_:);
              goto LABEL_36;
            }
            ++v17;
            v15 += v98;
          }
          while (v60 != v101);
        }
        v58 = (unsigned int *)&enum case for FMIPPlaySoundMethod.classic(_:);
      }
      v52 = v96;
    }
    else
    {
      v56 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v57 = swift_bridgeObjectRetain(v96);
      v58 = (unsigned int *)&enum case for FMIPPlaySoundMethod.classic(_:);
    }
LABEL_36:
    ((void (*)(char *, uint64_t, __n128))v56)(v12, v5, v57);
    v42 = swift_bridgeObjectRelease(v52);
  }
  else
  {
    v58 = (unsigned int *)&enum case for FMIPPlaySoundMethod.classic(_:);
  }
  v15 = v104;
  v5 = v105;
  (*(void (**)(char *, _QWORD, char *, __n128))(v105 + 104))(v24, *v58, v104, v42);
  v60 = *(void (**)(char *, char *, char *))(v5 + 32);
  v62 = v103;
  v60(v103, v24, v15);
  v63 = *(uint64_t (**)(uint64_t, uint64_t, char *))(v5 + 16);
LABEL_55:
  v84 = v102;
  v63((uint64_t)v102, (uint64_t)v62, v15);
  v85 = *(unsigned __int8 *)(v5 + 80);
  v86 = (v85 + 24) & ~v85;
  v87 = swift_allocObject(&unk_10054C660, v86 + v20, v85 | 7);
  v88 = v106;
  *(_QWORD *)(v87 + 16) = v106;
  v60((char *)(v87 + v86), v84, v15);
  v89 = swift_allocObject(&unk_10054C688, 32, 7);
  *(_QWORD *)(v89 + 16) = sub_1001D5508;
  *(_QWORD *)(v89 + 24) = v87;
  v110 = (uint64_t)sub_100021E78;
  v111 = v89;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100021E38;
  v109 = &unk_10054C6A0;
  v90 = _Block_copy(aBlock);
  v91 = v88;
  static FMOSActivity.start(_:execute:)("FMDeviceDetailContentViewController.handlePlaySound", 51, 2, v90);
  _Block_release(v90);
  (*(void (**)(char *, char *))(v5 + 8))(v62, v15);
  v92 = v111;
  swift_release(v87);
  *(_QWORD *)&result = swift_release(v92).n128_u64[0];
  return result;
}

double sub_1001ACB38(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  Swift::String v41;
  double v42;
  char v43;
  char v44;
  double v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  double result;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t aBlock[5];
  _QWORD *v69;
  Swift::Double_optional v70;

  v3 = v2;
  v65 = type metadata accessor for FMUserDefaults(0);
  v63 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v61 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for DispatchWallTime(0);
  v62 = *(_QWORD *)(v66 - 8);
  v7 = __chkstk_darwin(v66);
  v60 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v64 = (char *)&v56 - v9;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v10);
  v57 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelOnlinePlaySoundWorkItem;
  v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelOnlinePlaySoundWorkItem);
  if (v13)
  {
    v14 = swift_retain(v13);
    dispatch thunk of DispatchWorkItem.cancel()(v14);
    v15 = *(_QWORD *)(v3 + v12);
    *(_QWORD *)(v3 + v12) = 0;
    swift_release(v13);
    swift_release(v15);
  }
  v59 = v12;
  if (qword_1005D1CA0 != -1)
    swift_once(&qword_1005D1CA0, sub_100197BF4);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100056D88(v16, (uint64_t)qword_1005F5140);
  v18 = swift_bridgeObjectRetain_n(a2, 2);
  v58 = v17;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(22, -1);
    v22 = a1;
    v23 = swift_slowAlloc(32, -1);
    v67 = 1752392040;
    aBlock[0] = v23;
    *(_DWORD *)v21 = 141558275;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, aBlock);
    *(_WORD *)(v21 + 12) = 2081;
    swift_bridgeObjectRetain(a2);
    v67 = sub_100056DA0(v22, a2, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, aBlock);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "prepareOfflineSoundAttempt %{private,mask.hash}s.", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    v24 = v23;
    a1 = v22;
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v25 = swift_allocObject(&unk_10054B5D0, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16);
  v26 = (_QWORD *)swift_allocObject(&unk_10054C598, 40, 7);
  v26[2] = v25;
  v26[3] = a1;
  v26[4] = a2;
  aBlock[4] = (uint64_t)sub_1001D52A0;
  v69 = v26;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_10054C5B0;
  v27 = _Block_copy(aBlock);
  v67 = (uint64_t)_swiftEmptyArrayStorage;
  v28 = a1;
  v29 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  swift_bridgeObjectRetain(a2);
  swift_retain(v25);
  v30 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v31 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  v32 = v57;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v67, v30, v31, v10, v29);
  v33 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  v34 = DispatchWorkItem.init(flags:block:)(v32, v27);
  v35 = v69;
  swift_release(v25);
  swift_release(v35);
  v36 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v37 = (void *)static OS_dispatch_queue.main.getter(v36);
  v38 = v60;
  v39 = static DispatchWallTime.now()();
  v40 = v61;
  static FMUserDefaults.shared.getter(v39);
  v41._object = (void *)0x80000001004B2840;
  v41._countAndFlagsBits = 0xD000000000000017;
  v70 = FMUserDefaults.double(for:)(v41);
  v42 = *(double *)&v70.is_nil;
  v44 = v43;
  (*(void (**)(char *, uint64_t, __n128))(v63 + 8))(v40, v65, *(__n128 *)&v70.value);
  v45 = v42;
  if ((v44 & 1) != 0)
    v45 = 15.0;
  v46 = v64;
  + infix(_:_:)(v38, v45);
  v47 = *(void (**)(char *, uint64_t))(v62 + 8);
  v48 = v66;
  v47(v38, v66);
  OS_dispatch_queue.asyncAfter(wallDeadline:execute:)(v46, v34);

  v47(v46, v48);
  v49 = *(_QWORD *)(v3 + v59);
  *(_QWORD *)(v3 + v59) = v34;
  swift_retain(v34);
  swift_release(v49);
  v50 = swift_bridgeObjectRetain_n(a2, 2);
  v51 = Logger.logObject.getter(v50);
  v52 = static os_log_type_t.default.getter(v51);
  if (os_log_type_enabled(v51, v52))
  {
    v53 = swift_slowAlloc(22, -1);
    v54 = swift_slowAlloc(32, -1);
    *(_DWORD *)v53 = 141558275;
    v67 = 1752392040;
    aBlock[0] = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, aBlock);
    *(_WORD *)(v53 + 12) = 2081;
    swift_bridgeObjectRetain(a2);
    v67 = sub_100056DA0(v28, a2, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, aBlock);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "Cancellation block for online sound attempt set for %{private,mask.hash}s.", (uint8_t *)v53, 0x16u);
    swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1, -1);
    swift_slowDealloc(v53, -1, -1);
    swift_release(v34);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    *(_QWORD *)&result = swift_release(v34).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001AD1A4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[3];
  char v36[24];

  v33 = a2;
  v5 = type metadata accessor for FMIPPlaySoundMethod(0);
  v31 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  __chkstk_darwin(v5);
  v29 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a1;
  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v36, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    v9 = *(_QWORD *)&Strong[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelOnlinePlaySoundWorkItem];
    *(_QWORD *)&Strong[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelOnlinePlaySoundWorkItem] = 0;

    swift_release(v9);
  }
  if (qword_1005D1CA0 != -1)
    swift_once(&qword_1005D1CA0, sub_100197BF4);
  v10 = type metadata accessor for Logger(0);
  sub_100056D88(v10, (uint64_t)qword_1005F5140);
  v11 = swift_bridgeObjectRetain_n(a3, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(32, -1);
    v34 = 1752392040;
    v35[0] = v15;
    *(_DWORD *)v14 = 141558275;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35);
    *(_WORD *)(v14 + 12) = 2081;
    swift_bridgeObjectRetain(a3);
    v34 = sub_100056DA0(v33, a3, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Executing cancellation block for initial play sound. %{private,mask.hash}s.", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
  }
  v16 = swift_bridgeObjectRetain_n(a3, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(22, -1);
    v20 = swift_slowAlloc(32, -1);
    *(_DWORD *)v19 = 141558275;
    v34 = 1752392040;
    v35[0] = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35);
    *(_WORD *)(v19 + 12) = 2081;
    swift_bridgeObjectRetain(a3);
    v34 = sub_100056DA0(v33, a3, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Cancelling initial play sound classic attempt for %{private,mask.hash}s.", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
  }
  swift_beginAccess(v7, v35, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v7);
  if (result)
  {
    v22 = (void *)result;
    v24 = v31;
    v23 = v32;
    v25 = (uint64_t)v29;
    (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v29, enum case for FMIPPlaySoundMethod.classic(_:), v32);
    v26 = (_QWORD *)swift_allocObject(&unk_10054C5E8, 40, 7);
    v26[2] = v33;
    v26[3] = a3;
    v27 = v30;
    v26[4] = v30;
    swift_bridgeObjectRetain(a3);
    swift_retain(v27);
    sub_1001B20A0(v25, 1, 1, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_1001D52B0, (uint64_t)v26);

    v28 = swift_release(v26);
    return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v24 + 8))(v25, v23, v28);
  }
  return result;
}

double sub_1001AD5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t Strong;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, _QWORD, uint64_t);
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  __n128 v40;
  double result;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47[24];
  uint64_t v48;
  _BYTE v49[16];
  uint64_t v50[3];

  v46 = a4;
  v8 = type metadata accessor for FMIPPlaySoundMethod(0);
  v45 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v44 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a6;
  v13 = a6 + 16;
  if (qword_1005D1CA0 != -1)
    swift_once(&qword_1005D1CA0, sub_100197BF4);
  v14 = type metadata accessor for Logger(0);
  sub_100056D88(v14, (uint64_t)qword_1005F5140);
  v15 = swift_bridgeObjectRetain_n(a5, 2);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(22, -1);
    v42 = v8;
    v19 = v18;
    v20 = swift_slowAlloc(32, -1);
    v50[0] = v20;
    *(_DWORD *)v19 = 141558275;
    v48 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49);
    *(_WORD *)(v19 + 12) = 2081;
    swift_bridgeObjectRetain(a5);
    v48 = sub_100056DA0(v46, a5, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49);
    swift_bridgeObjectRelease_n(a5, 3);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Completed stopping classic sound. Issuing offline sound attempt for %{private,mask.hash}s.", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    v21 = v19;
    v8 = v42;
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a5, 2);
  }
  swift_beginAccess(v13, v50, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v13);
  if (!Strong)
    goto LABEL_8;
  v23 = (void *)Strong;
  v24 = *(_QWORD *)(Strong + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource);
  swift_retain(v24);

  v25 = v24 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v24 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel, &v48, 0, 0);
  sub_10004FC74(v25, (uint64_t)v12, type metadata accessor for FMDeviceDetailViewModel);
  swift_release(v24);
  v26 = *(_QWORD *)&v12[*(int *)(v10 + 48)];
  swift_bridgeObjectRetain(v26);
  sub_10004FCB8((uint64_t)v12, type metadata accessor for FMDeviceDetailViewModel);
  if (!v26)
  {
LABEL_8:
    v27 = sub_100053F2C(&qword_1005D2AA8);
    v28 = type metadata accessor for FMIPPlaySoundChannels(0);
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(_QWORD *)(v29 + 72);
    v31 = *(unsigned __int8 *)(v29 + 80);
    v32 = (v31 + 32) & ~v31;
    v26 = swift_allocObject(v27, v32 + 2 * v30, v31 | 7);
    *(_OWORD *)(v26 + 16) = xmmword_100481730;
    v33 = *(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104);
    v33(v26 + v32, enum case for FMIPPlaySoundChannels.left(_:), v28);
    v33(v26 + v32 + v30, enum case for FMIPPlaySoundChannels.right(_:), v28);
    swift_bridgeObjectRelease(0);
  }
  swift_beginAccess(v13, v47, 0, 0);
  v34 = swift_unknownObjectWeakLoadStrong(v13);
  if (v34)
  {
    v35 = (void *)v34;
    v37 = (uint64_t)v44;
    v36 = v45;
    (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v44, enum case for FMIPPlaySoundMethod.ble(_:), v8);
    v38 = (_QWORD *)swift_allocObject(&unk_10054C610, 40, 7);
    v38[2] = v46;
    v38[3] = a5;
    v39 = v43;
    v38[4] = v43;
    swift_bridgeObjectRetain(a5);
    swift_retain(v39);
    sub_1001B20A0(v37, 1, 0, v26, (uint64_t)sub_1001D52EC, (uint64_t)v38);
    swift_bridgeObjectRelease(v26);

    v40 = swift_release(v38);
    (*(void (**)(uint64_t, uint64_t, __n128))(v36 + 8))(v37, v8, v40);
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v26).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001ADA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  void (*v31)(char *, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[3];
  uint64_t v54;
  uint64_t v55;

  v49 = a4;
  v50 = a6;
  v9 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPActionStatus(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v47 - v17;
  if (qword_1005D1CA0 != -1)
    swift_once(&qword_1005D1CA0, sub_100197BF4);
  v19 = type metadata accessor for Logger(0);
  sub_100056D88(v19, (uint64_t)qword_1005F5140);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v51 = a1;
  v20(v18, a1, v12);
  swift_retain_n(a3, 2);
  v21 = swift_bridgeObjectRetain_n(a5, 2);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc(42, -1);
    v52 = a3;
    v25 = v24;
    v47 = swift_slowAlloc(96, -1);
    v53[0] = v47;
    *(_DWORD *)v25 = 141558787;
    v54 = 1752392040;
    v48 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
    *(_WORD *)(v25 + 12) = 2081;
    swift_bridgeObjectRetain(a5);
    v54 = sub_100056DA0(v49, a5, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
    swift_bridgeObjectRelease_n(a5, 3);
    *(_WORD *)(v25 + 22) = 2082;
    v26 = sub_100008000(&qword_1005D38D8, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
    v27 = dispatch thunk of CustomStringConvertible.description.getter(v12, v26);
    v29 = v28;
    v54 = sub_100056DA0(v27, v28, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
    v30 = swift_bridgeObjectRelease(v29);
    v31 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
    v31(v18, v12, v30);
    *(_WORD *)(v25 + 32) = 2082;
    v54 = v52;
    swift_retain(v52);
    v32 = sub_100053F2C(&qword_1005D9970);
    v33 = String.init<A>(describing:)(&v54, v32);
    v35 = v34;
    v54 = sub_100056DA0(v33, v34, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
    swift_release_n(v52, 2);
    v36 = v35;
    v11 = v48;
    swift_bridgeObjectRelease(v36);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Completed offline sound attempt for %{private,mask.hash}s, status: %{public}s, action: %{public}s.", (uint8_t *)v25, 0x2Au);
    v37 = v47;
    swift_arrayDestroy(v47, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    v38 = v25;
    a3 = v52;
    swift_slowDealloc(v38, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n(a5, 2);
    v31 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
    ((void (*)(char *, uint64_t))v31)(v18, v12);

    swift_release_n(a3, 2);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, enum case for FMIPActionStatus.queueingSound(_:), v12);
  v39 = sub_100008000(&qword_1005D9928, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter(v53, v12, v39);
  dispatch thunk of RawRepresentable.rawValue.getter(&v54, v12, v39);
  v40 = v53[0];
  v41 = v54;
  result = ((uint64_t (*)(char *, uint64_t))v31)(v16, v12);
  if (v40 == v41)
  {
    v43 = v50 + 16;
    swift_beginAccess(v50 + 16, v53, 0, 0);
    result = swift_unknownObjectWeakLoadStrong(v43);
    if (result)
    {
      v44 = (void *)result;
      if (a3)
      {
        FMIPPlaySoundDeviceAction.issueDate.getter();
        v45 = type metadata accessor for Date(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v11, 0, 1, v45);
      }
      else
      {
        v46 = type metadata accessor for Date(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v11, 1, 1, v46);
      }
      sub_1001B5E18((uint64_t)v11);

      return sub_1000051EC((uint64_t)v11, (uint64_t *)&unk_1005D3320);
    }
  }
  return result;
}

void sub_1001ADEEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL4 v22;
  _BOOL4 v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v3 = type metadata accessor for FMIPPlaySoundMethod(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v83 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMDeviceDetailViewModel(0);
  v7 = __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __chkstk_darwin(v7);
  v11 = __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v79 - v12);
  v14 = __chkstk_darwin(v11);
  v16 = (uint64_t *)((char *)&v79 - v15);
  __chkstk_darwin(v14);
  v19 = (char *)&v79 - v18;
  v20 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelOnlinePlaySoundWorkItem;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelOnlinePlaySoundWorkItem))
  {
    v80 = (uint64_t *)v17;
    v81 = v4;
    v82 = v3;
    v84 = v1;
    v21 = *(unsigned __int8 *)(a1 + *(int *)(v6 + 96));
    v22 = sub_10006BADC(v21, (uint64_t)&off_10053FA18);
    v23 = sub_10006BADC(v21, (uint64_t)&off_10053FA40);
    sub_10004FC74(a1, (uint64_t)v19, type metadata accessor for FMDeviceDetailViewModel);
    if (v22 && v23)
    {
      sub_10004FCB8((uint64_t)v19, type metadata accessor for FMDeviceDetailViewModel);
LABEL_6:
      v25 = v84;
      v26 = *(_QWORD *)(v84 + v20);
      if (v26)
      {
        v27 = swift_retain(*(_QWORD *)(v84 + v20));
        dispatch thunk of DispatchWorkItem.cancel()(v27);
        v28 = *(_QWORD *)(v25 + v20);
        *(_QWORD *)(v25 + v20) = 0;
        swift_release(v26);
        swift_release(v28);
      }
      if (qword_1005D1CA0 != -1)
        swift_once(&qword_1005D1CA0, sub_100197BF4);
      v29 = type metadata accessor for Logger(0);
      sub_100056D88(v29, (uint64_t)qword_1005F5140);
      v30 = sub_10004FC74(a1, (uint64_t)v16, type metadata accessor for FMDeviceDetailViewModel);
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.default.getter(v31);
      if (os_log_type_enabled(v31, v32))
      {
        v33 = swift_slowAlloc(22, -1);
        v34 = swift_slowAlloc(32, -1);
        *(_DWORD *)v33 = 141558275;
        v85 = 1752392040;
        v86 = v34;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86);
        *(_WORD *)(v33 + 12) = 2081;
        v35 = *v16;
        v36 = v16[1];
        swift_bridgeObjectRetain(v36);
        v85 = sub_100056DA0(v35, v36, &v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86);
        swift_bridgeObjectRelease(v36);
        sub_10004FCB8((uint64_t)v16, type metadata accessor for FMDeviceDetailViewModel);
        v37 = "Pending Online Cancellation - All channels playing, canceled offline attempt for %{private,mask.hash}s.";
LABEL_12:
        _os_log_impl((void *)&_mh_execute_header, v31, v32, v37, (uint8_t *)v33, 0x16u);
        swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v34, -1, -1);
        swift_slowDealloc(v33, -1, -1);
LABEL_15:

        return;
      }
      v38 = (uint64_t)v16;
      goto LABEL_14;
    }
    v24 = v19[*(int *)(v6 + 96)];
    sub_10004FCB8((uint64_t)v19, type metadata accessor for FMDeviceDetailViewModel);
    if (v24 == 3)
      goto LABEL_6;
    if (!v22 && !v23)
    {
      if (qword_1005D1CA0 != -1)
        swift_once(&qword_1005D1CA0, sub_100197BF4);
      v51 = type metadata accessor for Logger(0);
      sub_100056D88(v51, (uint64_t)qword_1005F5140);
      v52 = sub_10004FC74(a1, (uint64_t)v9, type metadata accessor for FMDeviceDetailViewModel);
      v31 = Logger.logObject.getter(v52);
      v32 = static os_log_type_t.default.getter(v31);
      if (os_log_type_enabled(v31, v32))
      {
        v33 = swift_slowAlloc(22, -1);
        v34 = swift_slowAlloc(32, -1);
        *(_DWORD *)v33 = 141558275;
        v85 = 1752392040;
        v86 = v34;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86);
        *(_WORD *)(v33 + 12) = 2081;
        v53 = *v9;
        v54 = v9[1];
        swift_bridgeObjectRetain(v54);
        v85 = sub_100056DA0(v53, v54, &v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86);
        swift_bridgeObjectRelease(v54);
        sub_10004FCB8((uint64_t)v9, type metadata accessor for FMDeviceDetailViewModel);
        v37 = "Pending Online Cancellation - No playing channels for %{private,mask.hash}s.";
        goto LABEL_12;
      }
      v38 = (uint64_t)v9;
LABEL_14:
      sub_10004FCB8(v38, type metadata accessor for FMDeviceDetailViewModel);
      goto LABEL_15;
    }
    v39 = v84;
    v40 = *(_QWORD *)(v84 + v20);
    if (v40)
    {
      v41 = swift_retain(*(_QWORD *)(v84 + v20));
      dispatch thunk of DispatchWorkItem.cancel()(v41);
      v42 = *(_QWORD *)(v39 + v20);
      *(_QWORD *)(v39 + v20) = 0;
      swift_release(v40);
      swift_release(v42);
    }
    if (v22)
    {
      if (qword_1005D1CA0 != -1)
        swift_once(&qword_1005D1CA0, sub_100197BF4);
      v43 = type metadata accessor for Logger(0);
      sub_100056D88(v43, (uint64_t)qword_1005F5140);
      v44 = sub_10004FC74(a1, (uint64_t)v13, type metadata accessor for FMDeviceDetailViewModel);
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.default.getter(v45);
      if (os_log_type_enabled(v45, v46))
      {
        v47 = swift_slowAlloc(22, -1);
        v48 = swift_slowAlloc(32, -1);
        *(_DWORD *)v47 = 141558275;
        v85 = 1752392040;
        v86 = v48;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86);
        *(_WORD *)(v47 + 12) = 2081;
        v49 = *v13;
        v50 = v13[1];
        swift_bridgeObjectRetain(v50);
        v85 = sub_100056DA0(v49, v50, &v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86);
        swift_bridgeObjectRelease(v50);
        sub_10004FCB8((uint64_t)v13, type metadata accessor for FMDeviceDetailViewModel);
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "Issuing offline play sound for right channel for %{private,mask.hash}s.", (uint8_t *)v47, 0x16u);
        swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v48, -1, -1);
        swift_slowDealloc(v47, -1, -1);
      }
      else
      {
        sub_10004FCB8((uint64_t)v13, type metadata accessor for FMDeviceDetailViewModel);
      }

      v65 = v81;
      v64 = v82;
      v66 = (uint64_t)v83;
      (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v83, enum case for FMIPPlaySoundMethod.ble(_:), v82);
      v67 = sub_100053F2C(&qword_1005D2AA8);
      v68 = type metadata accessor for FMIPPlaySoundChannels(0);
      v69 = *(_QWORD *)(v68 - 8);
      v70 = *(unsigned __int8 *)(v69 + 80);
      v71 = (v70 + 32) & ~v70;
      v72 = swift_allocObject(v67, v71 + *(_QWORD *)(v69 + 72), v70 | 7);
      *(_OWORD *)(v72 + 16) = xmmword_100481740;
      v73 = v72 + v71;
      v74 = (unsigned int *)&enum case for FMIPPlaySoundChannels.right(_:);
    }
    else
    {
      if (qword_1005D1CA0 != -1)
        swift_once(&qword_1005D1CA0, sub_100197BF4);
      v55 = type metadata accessor for Logger(0);
      sub_100056D88(v55, (uint64_t)qword_1005F5140);
      v56 = v80;
      v57 = sub_10004FC74(a1, (uint64_t)v80, type metadata accessor for FMDeviceDetailViewModel);
      v58 = Logger.logObject.getter(v57);
      v59 = static os_log_type_t.default.getter(v58);
      if (os_log_type_enabled(v58, v59))
      {
        v60 = swift_slowAlloc(22, -1);
        v61 = swift_slowAlloc(32, -1);
        *(_DWORD *)v60 = 141558275;
        v85 = 1752392040;
        v86 = v61;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86);
        *(_WORD *)(v60 + 12) = 2081;
        v62 = *v56;
        v63 = v56[1];
        swift_bridgeObjectRetain(v63);
        v85 = sub_100056DA0(v62, v63, &v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86);
        swift_bridgeObjectRelease(v63);
        sub_10004FCB8((uint64_t)v56, type metadata accessor for FMDeviceDetailViewModel);
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "Issuing offline play sound for left channel for %{private,mask.hash}s.", (uint8_t *)v60, 0x16u);
        swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v61, -1, -1);
        swift_slowDealloc(v60, -1, -1);
      }
      else
      {
        sub_10004FCB8((uint64_t)v56, type metadata accessor for FMDeviceDetailViewModel);
      }

      v65 = v81;
      v64 = v82;
      v66 = (uint64_t)v83;
      (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v83, enum case for FMIPPlaySoundMethod.ble(_:), v82);
      v75 = sub_100053F2C(&qword_1005D2AA8);
      v68 = type metadata accessor for FMIPPlaySoundChannels(0);
      v69 = *(_QWORD *)(v68 - 8);
      v76 = *(unsigned __int8 *)(v69 + 80);
      v77 = (v76 + 32) & ~v76;
      v72 = swift_allocObject(v75, v77 + *(_QWORD *)(v69 + 72), v76 | 7);
      *(_OWORD *)(v72 + 16) = xmmword_100481740;
      v73 = v72 + v77;
      v74 = (unsigned int *)&enum case for FMIPPlaySoundChannels.left(_:);
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v69 + 104))(v73, *v74, v68);
    sub_1001B20A0(v66, 1, 1, v72, 0, 0);
    v78 = swift_bridgeObjectRelease(v72);
    (*(void (**)(uint64_t, uint64_t, __n128))(v65 + 8))(v66, v64, v78);
  }
}

void sub_1001AE864()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t);
  void (*v39)(uint64_t, uint64_t);
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  __n128 v56;
  unint64_t v57;
  __n128 v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t aBlock[5];
  uint64_t v84;
  char v85[32];

  v1 = v0;
  v2 = type metadata accessor for FMIPPlaySoundMethod(0);
  v79 = *(_QWORD *)(v2 - 8);
  v80 = v2;
  __chkstk_darwin(v2);
  v78 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FMIPPlaySoundChannels(0);
  v72 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMIPDevice(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  v12 = swift_beginAccess(v11, v85, 0, 0);
  v74 = v8;
  v75 = v7;
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, v11, v7, v12);
  v14 = FMIPDevice.identifier.getter(v13);
  v16 = v15;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v73 = v6;
  v17 = type metadata accessor for Logger(0);
  sub_100056D88(v17, (uint64_t)qword_1005F5748);
  v18 = swift_bridgeObjectRetain_n(v16, 2);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  v21 = os_log_type_enabled(v19, v20);
  v76 = v10;
  v77 = v14;
  v71 = v17;
  if (v21)
  {
    v22 = swift_slowAlloc(22, -1);
    v23 = swift_slowAlloc(32, -1);
    v82 = 1752392040;
    aBlock[0] = v23;
    *(_DWORD *)v22 = 141558275;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, aBlock);
    *(_WORD *)(v22 + 12) = 2081;
    swift_bridgeObjectRetain(v16);
    v82 = sub_100056DA0(v14, v16, aBlock);
    v10 = v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, aBlock);
    swift_bridgeObjectRelease_n(v16, 3);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMDeviceDetailContentViewController: Stop Sound button pressed for %{private,mask.hash}s.", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    v24 = v23;
    v17 = v71;
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v16, 2);
  }
  v25 = *(_BYTE **)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_stopSoundButton];
  v25[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_showActivityIndicator] = 1;
  v26 = (void *)objc_opt_self(UIView);
  v27 = swift_allocObject(&unk_10054C458, 24, 7);
  *(_QWORD *)(v27 + 16) = v25;
  aBlock[4] = (uint64_t)sub_10010C2B0;
  v84 = v27;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_10054C470;
  v28 = _Block_copy(aBlock);
  v29 = v84;
  v30 = v25;
  swift_release(v29);
  objc_msgSend(v26, "animateWithDuration:delay:options:animations:completion:", 4, v28, 0, 0.3, 0.0);
  _Block_release(v28);

  v31 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelOnlinePlaySoundWorkItem;
  v32 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelOnlinePlaySoundWorkItem];
  if (v32)
  {
    v33 = swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelOnlinePlaySoundWorkItem]);
    dispatch thunk of DispatchWorkItem.cancel()(v33);
    v34 = *(_QWORD *)&v1[v31];
    *(_QWORD *)&v1[v31] = 0;
    swift_release(v32);
    swift_release(v34);
  }
  v35 = (uint64_t)sub_1001CD650();
  v36 = v72;
  v37 = (uint64_t)v73;
  v38 = *(void (**)(char *, _QWORD, uint64_t))(v72 + 104);
  v38(v73, enum case for FMIPPlaySoundChannels.left(_:), v4);
  v81 = v35;
  LOBYTE(v35) = sub_10012A830(v37, v35);
  v39 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  v39(v37, v4);
  if ((v35 & 1) != 0)
    goto LABEL_12;
  v38((char *)v37, enum case for FMIPPlaySoundChannels.right(_:), v4);
  v40 = sub_10012A830(v37, v81);
  v39(v37, v4);
  if ((v40 & 1) != 0
    || (v38((char *)v37, enum case for FMIPPlaySoundChannels.standalone(_:), v4),
        v41 = sub_10012A830(v37, v81),
        v39(v37, v4),
        (v41 & 1) != 0)
    || (v38((char *)v37, enum case for FMIPPlaySoundChannels.case(_:), v4),
        v42 = sub_10012A830(v37, v81),
        v39(v37, v4),
        (v42 & 1) != 0))
  {
LABEL_12:
    if (qword_1005D1CA0 != -1)
      swift_once(&qword_1005D1CA0, sub_100197BF4);
    sub_100056D88(v17, (uint64_t)qword_1005F5140);
    v43 = swift_bridgeObjectRetain_n(v16, 2);
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.default.getter(v44);
    if (os_log_type_enabled(v44, v45))
    {
      v46 = v16;
      v47 = swift_slowAlloc(22, -1);
      v48 = swift_slowAlloc(32, -1);
      v82 = 1752392040;
      aBlock[0] = v48;
      *(_DWORD *)v47 = 141558275;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, aBlock);
      *(_WORD *)(v47 + 12) = 2081;
      swift_bridgeObjectRetain(v46);
      v49 = v77;
      v82 = sub_100056DA0(v77, v46, aBlock);
      v10 = v76;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, aBlock);
      swift_bridgeObjectRelease_n(v46, 3);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "FMDeviceDetailContentViewController: Stopping LE sound for %{private,mask.hash}s.", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1, -1);
      v50 = v47;
      v16 = v46;
      v17 = v71;
      swift_slowDealloc(v50, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v16, 2);
      v49 = v77;
    }
    v51 = (uint64_t)v78;
    v52 = v79;
    v53 = v80;
    (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v78, enum case for FMIPPlaySoundMethod.ble(_:), v80);
    v54 = (_QWORD *)swift_allocObject(&unk_10054C4D0, 40, 7);
    v54[2] = v49;
    v54[3] = v16;
    v54[4] = v1;
    swift_bridgeObjectRetain(v16);
    v55 = v1;
    sub_1001B20A0(v51, 1, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_1001D522C, (uint64_t)v54);
    v56 = swift_release(v54);
    (*(void (**)(uint64_t, uint64_t, __n128))(v52 + 8))(v51, v53, v56);
  }
  v57 = *(_QWORD *)(v81 + 16);
  v58 = swift_bridgeObjectRelease(v81);
  if (v57 > 2)
  {
    (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v10, v75, v58);
    swift_bridgeObjectRelease(v16);
  }
  else
  {
    if (qword_1005D1CA0 != -1)
      swift_once(&qword_1005D1CA0, sub_100197BF4);
    sub_100056D88(v17, (uint64_t)qword_1005F5140);
    v59 = swift_bridgeObjectRetain_n(v16, 2);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.default.getter(v60);
    if (os_log_type_enabled(v60, v61))
    {
      v62 = swift_slowAlloc(22, -1);
      v63 = swift_slowAlloc(32, -1);
      v82 = 1752392040;
      aBlock[0] = v63;
      *(_DWORD *)v62 = 141558275;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, aBlock);
      *(_WORD *)(v62 + 12) = 2081;
      swift_bridgeObjectRetain(v16);
      v64 = v77;
      v82 = sub_100056DA0(v77, v16, aBlock);
      v10 = v76;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, aBlock);
      swift_bridgeObjectRelease_n(v16, 3);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "FMDeviceDetailContentViewController: Stopping classic sound for %{private,mask.hash}s.", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1, -1);
      swift_slowDealloc(v62, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v16, 2);
      v64 = v77;
    }
    v65 = (uint64_t)v78;
    v66 = v79;
    v67 = v80;
    (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v78, enum case for FMIPPlaySoundMethod.classic(_:), v80);
    v68 = (_QWORD *)swift_allocObject(&unk_10054C4A8, 40, 7);
    v68[2] = v64;
    v68[3] = v16;
    v68[4] = v1;
    v69 = v1;
    sub_1001B20A0(v65, 1, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_1001D51B4, (uint64_t)v68);
    v70 = swift_release(v68);
    (*(void (**)(uint64_t, uint64_t, __n128))(v66 + 8))(v65, v67, v70);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v10, v75);
  }
}

void sub_1001AF1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, const char *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t aBlock[5];
  uint64_t v33;

  if (qword_1005D1CA0 != -1)
    swift_once(&qword_1005D1CA0, sub_100197BF4);
  v15 = a10;
  v16 = type metadata accessor for Logger(0);
  sub_100056D88(v16, (uint64_t)qword_1005F5140);
  v17 = swift_bridgeObjectRetain_n(a5, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v30 = a8;
    v20 = swift_slowAlloc(22, -1);
    v21 = swift_slowAlloc(32, -1);
    *(_DWORD *)v20 = 141558275;
    v31 = 1752392040;
    aBlock[0] = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, aBlock);
    *(_WORD *)(v20 + 12) = 2081;
    swift_bridgeObjectRetain(a5);
    v31 = sub_100056DA0(a4, a5, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, aBlock);
    swift_bridgeObjectRelease_n(a5, 3);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, a7, (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    v22 = v21;
    v15 = a10;
    swift_slowDealloc(v22, -1, -1);
    v23 = v20;
    a8 = v30;
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a5, 2);
  }
  v24 = *(_BYTE **)(a6 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_stopSoundButton);
  v24[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_showActivityIndicator] = 0;
  v25 = (void *)objc_opt_self(UIView);
  v26 = swift_allocObject(a8, 24, 7);
  *(_QWORD *)(v26 + 16) = v24;
  aBlock[4] = a9;
  v33 = v26;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = v15;
  v27 = _Block_copy(aBlock);
  v28 = v33;
  v29 = v24;
  swift_release(v28);
  objc_msgSend(v25, "animateWithDuration:delay:options:animations:completion:", 4, v27, 0, 0.3, 0.0);
  _Block_release(v27);

}

void *sub_1001AF4A0(_BOOL8 a1)
{
  BOOL v2;
  BOOL v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, _QWORD, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = sub_10006BADC(a1, (uint64_t)&off_10053FA68);
  v3 = sub_10006BADC(a1, (uint64_t)&off_10053FA90);
  v4 = v3;
  if (!v2)
  {
    if (!v3)
      return &_swiftEmptySetSingleton;
    v17 = sub_100053F2C(&qword_1005D2AA8);
    v6 = type metadata accessor for FMIPPlaySoundChannels(0);
    v18 = *(_QWORD *)(v6 - 8);
    v19 = *(unsigned __int8 *)(v18 + 80);
    v20 = (v19 + 32) & ~v19;
    v11 = swift_allocObject(v17, v20 + *(_QWORD *)(v18 + 72), v19 | 7);
    *(_OWORD *)(v11 + 16) = xmmword_100481740;
    v21 = v11 + v20;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v21, enum case for FMIPPlaySoundChannels.right(_:), v6);
    goto LABEL_7;
  }
  v5 = sub_100053F2C(&qword_1005D2AA8);
  v6 = type metadata accessor for FMIPPlaySoundChannels(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = (v9 + 32) & ~v9;
  if (!v4)
  {
    v11 = swift_allocObject(v5, v10 + v8, v9 | 7);
    *(_OWORD *)(v11 + 16) = xmmword_100481740;
    v21 = v11 + v10;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v21, enum case for FMIPPlaySoundChannels.left(_:), v6);
LABEL_7:
    v14 = sub_1000CEE3C(v11);
    swift_setDeallocating(v11);
    v15 = v21;
    v16 = 1;
    goto LABEL_8;
  }
  v11 = swift_allocObject(v5, v10 + 2 * v8, v9 | 7);
  *(_OWORD *)(v11 + 16) = xmmword_100481730;
  v12 = v11 + v10;
  v13 = *(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104);
  v13(v12, enum case for FMIPPlaySoundChannels.left(_:), v6);
  v13(v12 + v8, enum case for FMIPPlaySoundChannels.right(_:), v6);
  v14 = sub_1000CEE3C(v11);
  swift_setDeallocating(v11);
  v15 = v12;
  v16 = 2;
LABEL_8:
  swift_arrayDestroy(v15, v16, v6);
  swift_deallocClassInstance(v11, 32, 7);
  return (void *)v14;
}

uint64_t sub_1001AF690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t (*a7)(_QWORD), uint64_t a8, const char *a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v13 = qword_1005D1CA0;
  swift_bridgeObjectRetain(a4);
  if (v13 != -1)
    swift_once(&qword_1005D1CA0, sub_100197BF4);
  v14 = type metadata accessor for Logger(0);
  sub_100056D88(v14, (uint64_t)qword_1005F5140);
  swift_bridgeObjectRetain_n(a6, 2);
  swift_bridgeObjectRetain(a4);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v29 = a5;
    v18 = swift_slowAlloc(32, -1);
    v19 = swift_slowAlloc(64, -1);
    v31 = v19;
    *(_DWORD *)v18 = 136446723;
    v20 = type metadata accessor for FMIPPlaySoundChannels(0);
    v21 = a7;
    v22 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
    swift_bridgeObjectRetain(a4);
    v24 = Set.description.getter(v23, v20, v22);
    v26 = v25;
    swift_bridgeObjectRelease(a4);
    v30 = sub_100056DA0(v24, v26, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease(v26);
    *(_WORD *)(v18 + 12) = 2160;
    v30 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    *(_WORD *)(v18 + 22) = 2081;
    swift_bridgeObjectRetain(a6);
    v30 = sub_100056DA0(v29, a6, &v31);
    a7 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    swift_bridgeObjectRelease_n(a6, 3);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, a9, (uint8_t *)v18, 0x20u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a6, 2);
    v27 = swift_bridgeObjectRelease_n(a4, 2);
  }
  return a7(v27);
}

uint64_t sub_1001AF938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  __n128 v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;

  v8 = type metadata accessor for FMIPDevice(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMIPPlaySoundMethod(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v44 - v17;
  FMIPPlaySoundDeviceAction.soundMethod.getter(v16);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v18, v11);
  if (v19 == enum case for FMIPPlaySoundMethod.classic(_:))
  {
    FMIPDeviceAction.device.getter();
    v20 = sub_100053F2C(&qword_1005D2AA8);
    v21 = type metadata accessor for FMIPPlaySoundChannels(0);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(unsigned __int8 *)(v22 + 80);
    v24 = (v23 + 32) & ~v23;
    v25 = swift_allocObject(v20, v24 + *(_QWORD *)(v22 + 72), v23 | 7);
    *(_OWORD *)(v25 + 16) = xmmword_100481740;
    v26 = v25 + v24;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, a3, v21);
    swift_bridgeObjectRetain(a4);
    v27 = sub_1001D06FC(v25, a4);
    swift_setDeallocating(v25);
    swift_arrayDestroy(v26, 1, v21);
    v28 = v25;
  }
  else
  {
    if (v19 != enum case for FMIPPlaySoundMethod.ble(_:))
    {
      v42 = *(void (**)(char *, uint64_t))(v12 + 8);
      swift_retain(a1);
      v42(v18, v11);
      return a1;
    }
    FMIPDeviceAction.device.getter();
    v29 = sub_100053F2C(&qword_1005D2AA8);
    v30 = type metadata accessor for FMIPPlaySoundChannels(0);
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(unsigned __int8 *)(v31 + 80);
    v33 = (v32 + 32) & ~v32;
    v34 = swift_allocObject(v29, v33 + *(_QWORD *)(v31 + 72), v32 | 7);
    *(_OWORD *)(v34 + 16) = xmmword_100481740;
    v35 = v34 + v33;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v35, a3, v30);
    swift_bridgeObjectRetain(a2);
    v27 = sub_1001D06FC(v34, a2);
    swift_setDeallocating(v34);
    swift_arrayDestroy(v35, 1, v30);
    v28 = v34;
  }
  swift_deallocClassInstance(v28, 32, 7);
  v36 = sub_1003EFA80(v27);
  v37 = swift_bridgeObjectRelease(v27);
  v38 = FMIPPlaySoundDeviceAction.safetyWarningConfirmed.getter(v37);
  v39 = FMIPPlaySoundDeviceAction.soundQueueingConfirmed.getter();
  v40 = v39;
  FMIPPlaySoundDeviceAction.soundMethod.getter(v39);
  v41 = type metadata accessor for FMIPPlaySoundDeviceAction(0);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  return FMIPPlaySoundDeviceAction.init(device:channels:safetyWarningConfirmed:soundQueueingConfirmed:soundMethod:)(v10, v36, v38 & 1, v40 & 1, v15);
}

uint64_t sub_1001AFC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t), uint64_t a12)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v58 = a6;
  v59 = a9;
  v15 = type metadata accessor for FMIPPlaySoundChannels(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1CA0 != -1)
    swift_once(&qword_1005D1CA0, sub_100197BF4);
  v19 = a11;
  v20 = type metadata accessor for Logger(0);
  sub_100056D88(v20, (uint64_t)qword_1005F5140);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a5, v15);
  swift_bridgeObjectRetain_n(a7, 2);
  swift_bridgeObjectRetain_n(a8, 2);
  swift_bridgeObjectRetain_n(v59, 2);
  v21 = swift_retain_n(a10, 2);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    v25 = swift_slowAlloc(62, -1);
    v56 = a11;
    v26 = v25;
    v55 = swift_slowAlloc(160, -1);
    v61 = v55;
    *(_DWORD *)v26 = 136447491;
    v53 = a10;
    v27 = sub_100008000(&qword_1005D9978, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
    v54 = v24;
    v28 = dispatch thunk of CustomStringConvertible.description.getter(v15, v27);
    v57 = a12;
    v30 = v29;
    v60 = sub_100056DA0(v28, v29, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    v31 = swift_bridgeObjectRelease(v30);
    (*(void (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v15, v31);
    *(_WORD *)(v26 + 12) = 2160;
    v60 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    *(_WORD *)(v26 + 22) = 2081;
    swift_bridgeObjectRetain(a7);
    v60 = sub_100056DA0(v58, a7, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    swift_bridgeObjectRelease_n(a7, 3);
    *(_WORD *)(v26 + 32) = 2082;
    v32 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
    swift_bridgeObjectRetain(a8);
    v34 = Set.description.getter(v33, v15, v32);
    v36 = v35;
    swift_bridgeObjectRelease(a8);
    v60 = sub_100056DA0(v34, v36, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    swift_bridgeObjectRelease_n(a8, 2);
    swift_bridgeObjectRelease(v36);
    *(_WORD *)(v26 + 42) = 2082;
    v37 = v59;
    swift_bridgeObjectRetain(v59);
    v39 = Set.description.getter(v38, v15, v32);
    v41 = v40;
    swift_bridgeObjectRelease(v37);
    v60 = sub_100056DA0(v39, v41, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    swift_bridgeObjectRelease_n(v37, 2);
    swift_bridgeObjectRelease(v41);
    *(_WORD *)(v26 + 52) = 2082;
    v42 = v53;
    v60 = v53;
    v43 = type metadata accessor for FMIPPlaySoundDeviceAction(0);
    v44 = sub_100008000(&qword_1005D9980, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundDeviceAction, (uint64_t)&protocol conformance descriptor for FMIPDeviceAction);
    v45 = dispatch thunk of CustomStringConvertible.description.getter(v43, v44);
    v47 = v46;
    v60 = sub_100056DA0(v45, v46, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    swift_release_n(v42, 2);
    swift_bridgeObjectRelease(v47);
    _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v54, "FMDeviceDetailContentViewController: Finished Mute %{public}s sound button pressed for %{private,mask.hash}s. onlineActiveChannels: %{public}s, offlineActiveChannels: %{public}s - Reissuing action %{public}s.", (uint8_t *)v26, 0x3Eu);
    v48 = v55;
    swift_arrayDestroy(v55, 5, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v48, -1, -1);
    v49 = v26;
    v19 = v56;
    swift_slowDealloc(v49, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);

    swift_release_n(a10, 2);
    swift_bridgeObjectRelease_n(v59, 2);
    swift_bridgeObjectRelease_n(a8, 2);
    v50 = swift_bridgeObjectRelease_n(a7, 2);
  }
  return v19(v50);
}

uint64_t sub_1001B00BC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _BYTE *v19;
  char *v20;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for FMIPPlaySoundChannels(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1CA0 != -1)
    swift_once(&qword_1005D1CA0, sub_100197BF4);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100056D88(v6, (uint64_t)qword_1005F5140);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMDeviceDetailContentViewController: Mute left button pressed", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton;
  v12 = *(_BYTE **)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton];
  v12[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] = 1;
  v13 = v12;
  sub_1000AC5DC();

  v14 = *(_BYTE **)&v1[v11];
  v14[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_showActivityIndicator] = 1;
  v15 = (void *)objc_opt_self(UIView);
  v16 = swift_allocObject(&unk_10054C2C8, 24, 7);
  *(_QWORD *)(v16 + 16) = v14;
  aBlock[4] = sub_10010C2B0;
  v23 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10054C2E0;
  v17 = _Block_copy(aBlock);
  v18 = v23;
  v19 = v14;
  swift_release(v18);
  objc_msgSend(v15, "animateWithDuration:delay:options:animations:completion:", 4, v17, 0, 0.3, 0.0);
  _Block_release(v17);

  objc_msgSend(*(id *)&v1[v11], "setUserInteractionEnabled:", 0);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for FMIPPlaySoundChannels.left(_:), v2);
  v20 = v1;
  sub_1001D0800((uint64_t)v5, (uint64_t)v20, v20);

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_1001B0340(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  _BYTE *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _BYTE *v10;
  _QWORD v12[5];
  uint64_t v13;

  v2 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton;
  v3 = *(_BYTE **)(a1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton);
  v3[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] = 0;
  v4 = v3;
  sub_1000AC5DC();

  v5 = *(_BYTE **)(a1 + v2);
  v5[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_showActivityIndicator] = 0;
  v6 = (void *)objc_opt_self(UIView);
  v7 = swift_allocObject(&unk_10054C408, 24, 7);
  *(_QWORD *)(v7 + 16) = v5;
  v12[4] = sub_10010C2B0;
  v13 = v7;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100037DF8;
  v12[3] = &unk_10054C420;
  v8 = _Block_copy(v12);
  v9 = v13;
  v10 = v5;
  swift_release(v9);
  objc_msgSend(v6, "animateWithDuration:delay:options:animations:completion:", 4, v8, 0, 0.3, 0.0);
  _Block_release(v8);

  return objc_msgSend(*(id *)(a1 + v2), "setUserInteractionEnabled:", 1);
}

uint64_t sub_1001B04B8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _BYTE *v19;
  char *v20;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for FMIPPlaySoundChannels(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1CA0 != -1)
    swift_once(&qword_1005D1CA0, sub_100197BF4);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100056D88(v6, (uint64_t)qword_1005F5140);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMDeviceDetailContentViewController: Mute right button pressed", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteRightButton;
  v12 = *(_BYTE **)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteRightButton];
  v12[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] = 1;
  v13 = v12;
  sub_1000AC5DC();

  v14 = *(_BYTE **)&v1[v11];
  v14[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_showActivityIndicator] = 1;
  v15 = (void *)objc_opt_self(UIView);
  v16 = swift_allocObject(&unk_10054C138, 24, 7);
  *(_QWORD *)(v16 + 16) = v14;
  aBlock[4] = sub_10010C2B0;
  v23 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10054C150;
  v17 = _Block_copy(aBlock);
  v18 = v23;
  v19 = v14;
  swift_release(v18);
  objc_msgSend(v15, "animateWithDuration:delay:options:animations:completion:", 4, v17, 0, 0.3, 0.0);
  _Block_release(v17);

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton], "setUserInteractionEnabled:", 0);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for FMIPPlaySoundChannels.right(_:), v2);
  v20 = v1;
  sub_1001D1F34((uint64_t)v5, v20, v20);

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_1001B073C(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  _BYTE *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _BYTE *v10;
  _QWORD v12[5];
  uint64_t v13;

  v2 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteRightButton;
  v3 = *(_BYTE **)(a1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteRightButton);
  v3[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] = 0;
  v4 = v3;
  sub_1000AC5DC();

  v5 = *(_BYTE **)(a1 + v2);
  v5[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_showActivityIndicator] = 0;
  v6 = (void *)objc_opt_self(UIView);
  v7 = swift_allocObject(&unk_10054C278, 24, 7);
  *(_QWORD *)(v7 + 16) = v5;
  v12[4] = sub_10010C2B0;
  v13 = v7;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100037DF8;
  v12[3] = &unk_10054C290;
  v8 = _Block_copy(v12);
  v9 = v13;
  v10 = v5;
  swift_release(v9);
  objc_msgSend(v6, "animateWithDuration:delay:options:animations:completion:", 4, v8, 0, 0.3, 0.0);
  _Block_release(v8);

  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton), "setUserInteractionEnabled:", 1);
}

uint64_t sub_1001B08BC(uint64_t a1, int a2, int a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t, __n128);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  _BOOL4 v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t (*v60)(_QWORD, _QWORD, _QWORD);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  int v88;
  uint64_t v89;
  void **v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  char v107;
  unsigned int (*v108)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v109;
  uint64_t v110;
  NSObject *v111;
  unint64_t v112;
  os_log_type_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  NSObject *v118;
  unint64_t v119;
  os_log_type_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _BYTE *v129;
  _BYTE *v130;
  _BYTE *v131;
  void *v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  _BYTE *v136;
  uint64_t v137;
  __n128 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(uint64_t, _QWORD, uint64_t);
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  __n128 v159;
  uint64_t v160;
  void *v161;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void **v181;
  void **v182;
  int v183;
  uint64_t v184;
  char *v185;
  int v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t aBlock[5];
  uint64_t v197;
  uint64_t v198;
  char v199[8];
  char v200[8];

  v4 = v3;
  v183 = a3;
  v186 = a2;
  v180 = a1;
  v5 = sub_100053F2C(&qword_1005D9968);
  __chkstk_darwin(v5);
  v166 = (char *)&v163 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = type metadata accessor for FMIPPlaySoundMethod(0);
  v173 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v171 = v7;
  v172 = (char *)&v163 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v8);
  v169 = (char *)&v163 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C(&qword_1005D72D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v163 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = type metadata accessor for FMIPProductType(0);
  v192 = *(_QWORD *)(v189 - 8);
  v13 = __chkstk_darwin(v189);
  v193 = (char *)&v163 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v163 - v15;
  v17 = sub_100053F2C(&qword_1005D7320);
  v18 = __chkstk_darwin(v17);
  v188 = (uint64_t)&v163 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v163 - v21;
  v23 = __chkstk_darwin(v20);
  v165 = (uint64_t)&v163 - v24;
  __chkstk_darwin(v23);
  v164 = (uint64_t)&v163 - v25;
  v26 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v27 = __chkstk_darwin(v26);
  v167 = (char *)&v163 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v182 = (void **)((char *)&v163 - v29);
  v184 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v184);
  v181 = (void **)((char *)&v163 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v191 = type metadata accessor for FMIPItem(0);
  v194 = *(_QWORD *)(v191 - 8);
  v31 = __chkstk_darwin(v191);
  v190 = (char *)&v163 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v175 = (char *)&v163 - v33;
  v34 = type metadata accessor for FMIPDevice(0);
  v35 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v37 = (char *)&v163 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource;
  v39 = *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  v40 = swift_beginAccess(v39, v200, 0, 0);
  v179 = v35;
  v41 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v35 + 16);
  v177 = v34;
  v42 = v41(v37, v39, v34, v40);
  v185 = v37;
  v178 = FMIPDevice.identifier.getter(v42);
  v44 = v43;
  if (qword_1005D1CA0 != -1)
    swift_once(&qword_1005D1CA0, sub_100197BF4);
  v45 = type metadata accessor for Logger(0);
  v46 = sub_100056D88(v45, (uint64_t)qword_1005F5140);
  v47 = swift_bridgeObjectRetain_n(v44, 2);
  v176 = v46;
  v48 = Logger.logObject.getter(v47);
  v49 = static os_log_type_t.default.getter(v48);
  v50 = os_log_type_enabled(v48, v49);
  v187 = v22;
  v168 = v12;
  if (v50)
  {
    v51 = v44;
    v52 = swift_slowAlloc(34, -1);
    v53 = v16;
    v54 = swift_slowAlloc(32, -1);
    aBlock[0] = v54;
    *(_DWORD *)v52 = 67109891;
    LODWORD(v198) = v186 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v198, (char *)&v198 + 4);
    *(_WORD *)(v52 + 8) = 1024;
    LODWORD(v198) = v183 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v198, (char *)&v198 + 4);
    *(_WORD *)(v52 + 14) = 2160;
    v198 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v198, v199);
    *(_WORD *)(v52 + 24) = 2081;
    swift_bridgeObjectRetain(v51);
    v198 = sub_100056DA0(v178, v51, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v198, v199);
    swift_bridgeObjectRelease_n(v51, 3);
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "FMDeviceDetailContentViewController: playSound swc: %{BOOL}d -  sqc %{BOOL}d for %{private,mask.hash}s.", (uint8_t *)v52, 0x22u);
    swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
    v55 = v54;
    v16 = v53;
    swift_slowDealloc(v55, -1, -1);
    v56 = v52;
    v44 = v51;
    swift_slowDealloc(v56, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v44, 2);
  }
  v58 = v190;
  v57 = v191;
  v170 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton], "setUserInteractionEnabled:", 0);
  v59 = *(_QWORD *)&v4[v38] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v59, &v198, 0, 0);
  v60 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v181;
  sub_10004FC74(v59, (uint64_t)v181, type metadata accessor for FMDeviceDetailViewModel);
  v61 = (uint64_t)v182;
  sub_100007464((uint64_t)v60 + *(int *)(v184 + 36), (uint64_t)v182, (uint64_t *)&unk_1005D3AA0);
  v62 = v61;
  sub_10004FCB8((uint64_t)v60, type metadata accessor for FMDeviceDetailViewModel);
  v63 = v194;
  v181 = *(void ***)(v194 + 48);
  v64 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v181)(v62, 1, v57);
  v65 = (uint64_t)v185;
  if (v64 == 1)
  {
    v175 = (char *)v38;
    v66 = sub_1000051EC(v62, (uint64_t *)&unk_1005D3AA0);
    v67 = (uint64_t)v168;
    FMIPDevice.itemGroup.getter(v66);
    v68 = type metadata accessor for FMIPItemGroup(0);
    v69 = *(_QWORD *)(v68 - 8);
    v70 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68);
    if ((_DWORD)v70 == 1)
    {
      sub_1000051EC(v67, &qword_1005D72D0);
      v71 = (uint64_t)v167;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v194 + 56))(v167, 1, 1, v57);
      v72 = 0;
      v38 = (uint64_t)v175;
    }
    else
    {
      v165 = v44;
      v85 = FMIPItemGroup.items.getter(v70);
      (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v67, v68);
      v86 = *(_QWORD *)(v85 + 16);
      v163 = v4;
      if (v86)
      {
        v87 = v85 + ((*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80));
        v88 = enum case for FMIPProductType.hawkeye(_:);
        v89 = *(_QWORD *)(v194 + 72);
        v90 = *(void ***)(v194 + 16);
        v168 = (char *)v85;
        v91 = swift_bridgeObjectRetain(v85);
        v92 = v189;
        v182 = v90;
        do
        {
          v94 = ((uint64_t (*)(char *, unint64_t, uint64_t, __n128))v90)(v58, v87, v57, v91);
          FMIPItem.productType.getter(v94);
          v95 = v192;
          v96 = (uint64_t)v193;
          if ((*(unsigned int (**)(char *, uint64_t))(v192 + 88))(v193, v92) == v88)
          {
            (*(void (**)(uint64_t, uint64_t))(v95 + 96))(v96, v92);
            v97 = (uint64_t)v187;
            sub_10005DAA0(v96, (uint64_t)v187, &qword_1005D7320);
            v98 = v188;
            sub_100007464(v97, v188, &qword_1005D7320);
            v99 = type metadata accessor for FMIPHawkeyeProductInformation(0);
            v100 = *(_QWORD *)(v99 - 8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99) == 1)
            {
              sub_1000051EC(v98, &qword_1005D7320);
              sub_1000051EC(v97, &qword_1005D7320);
              v58 = v190;
              v57 = v191;
              v92 = v189;
              v90 = v182;
            }
            else
            {
              v101 = FMIPHawkeyeProductInformation.requiresAudioSafetyAlert.getter();
              v102 = v98;
              v103 = v101;
              (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v102, v99);
              sub_1000051EC(v97, &qword_1005D7320);
              v58 = v190;
              v57 = v191;
              v92 = v189;
              v90 = v182;
              if ((v103 & 1) != 0)
              {
                v104 = (uint64_t)v168;
                v105 = swift_bridgeObjectRelease(v168);
                v93 = v194;
                v71 = (uint64_t)v167;
                (*(void (**)(__n128))(v194 + 32))(v105);
                v106 = 0;
                v65 = (uint64_t)v185;
                v38 = (uint64_t)v175;
                v44 = v165;
                goto LABEL_27;
              }
            }
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v96, v92);
          }
          v93 = v194;
          (*(void (**)(char *, uint64_t))(v194 + 8))(v58, v57);
          v87 += v89;
          --v86;
        }
        while (v86);
        v104 = (uint64_t)v168;
        swift_bridgeObjectRelease(v168);
        v106 = 1;
        v65 = (uint64_t)v185;
        v38 = (uint64_t)v175;
        v44 = v165;
      }
      else
      {
        v106 = 1;
        v38 = (uint64_t)v175;
        v44 = v165;
        v104 = v85;
        v93 = v194;
      }
      v71 = (uint64_t)v167;
LABEL_27:
      v108 = (unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v181;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56))(v71, v106, 1, v57);
      v109 = swift_bridgeObjectRelease(v104);
      v72 = v108(v71, 1, v57, v109) != 1;
      v4 = v163;
    }
    sub_1000051EC(v71, (uint64_t *)&unk_1005D3AA0);
    if (!v72)
      goto LABEL_32;
  }
  else
  {
    v73 = v62;
    v74 = v175;
    v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 32))(v175, v73, v57);
    FMIPItem.productType.getter(v75);
    v76 = v192;
    v77 = v63;
    v78 = v189;
    if ((*(unsigned int (**)(char *, uint64_t))(v192 + 88))(v16, v189) != enum case for FMIPProductType.hawkeye(_:))
    {
      (*(void (**)(char *, uint64_t))(v77 + 8))(v74, v57);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v16, v78);
      goto LABEL_32;
    }
    v79 = v44;
    (*(void (**)(char *, uint64_t))(v76 + 96))(v16, v78);
    v80 = (uint64_t)v16;
    v81 = v164;
    sub_10005DAA0(v80, v164, &qword_1005D7320);
    v82 = v165;
    sub_100007464(v81, v165, &qword_1005D7320);
    v83 = type metadata accessor for FMIPHawkeyeProductInformation(0);
    v84 = *(_QWORD *)(v83 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83) == 1)
    {
      sub_1000051EC(v81, &qword_1005D7320);
      (*(void (**)(char *, uint64_t))(v194 + 8))(v175, v191);
      sub_1000051EC(v82, &qword_1005D7320);
      v44 = v79;
      goto LABEL_32;
    }
    v107 = FMIPHawkeyeProductInformation.requiresAudioSafetyAlert.getter();
    sub_1000051EC(v81, &qword_1005D7320);
    (*(void (**)(char *, uint64_t))(v194 + 8))(v175, v191);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v82, v83);
    v44 = v79;
    if ((v107 & 1) == 0)
      goto LABEL_32;
  }
  if ((v186 & 1) == 0)
  {
    swift_bridgeObjectRetain(v44);
    v111 = Logger.logObject.getter(v110);
    v112 = v44;
    v113 = static os_log_type_t.default.getter(v111);
    if (os_log_type_enabled(v111, v113))
    {
      v114 = swift_slowAlloc(22, -1);
      v115 = swift_slowAlloc(32, -1);
      *(_DWORD *)v114 = 141558275;
      v195 = 1752392040;
      aBlock[0] = v115;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v195, aBlock);
      *(_WORD *)(v114 + 12) = 2081;
      swift_bridgeObjectRetain(v112);
      v195 = sub_100056DA0(v178, v112, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v195, aBlock);
      swift_bridgeObjectRelease_n(v112, 3);
      _os_log_impl((void *)&_mh_execute_header, v111, v113, "Safety warning mandatory for %{private,mask.hash}s.", (uint8_t *)v114, 0x16u);
      swift_arrayDestroy(v115, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v115, -1, -1);
      swift_slowDealloc(v114, -1, -1);

    }
    else
    {

      v116 = swift_bridgeObjectRelease_n(v112, 2);
    }
    v124 = v177;
    v161 = v166;
    FMIPDevice.soundMetadata.getter(v116);
    sub_1001B4364(v65, 0, v161, v180);
    sub_1000051EC((uint64_t)v161, &qword_1005D9968);
    v160 = v179;
    return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v160 + 8))(v65, v124, v159);
  }
LABEL_32:
  swift_bridgeObjectRetain(v44);
  v118 = Logger.logObject.getter(v117);
  v119 = v44;
  v120 = static os_log_type_t.default.getter(v118);
  if (os_log_type_enabled(v118, v120))
  {
    v121 = swift_slowAlloc(28, -1);
    v122 = swift_slowAlloc(32, -1);
    aBlock[0] = v122;
    *(_DWORD *)v121 = 67109635;
    LODWORD(v195) = v186 & 1;
    v163 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v195, (char *)&v195 + 4);
    *(_WORD *)(v121 + 8) = 2160;
    v195 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v195, aBlock);
    *(_WORD *)(v121 + 18) = 2081;
    swift_bridgeObjectRetain(v119);
    v195 = sub_100056DA0(v178, v119, aBlock);
    v4 = v163;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v195, aBlock);
    swift_bridgeObjectRelease_n(v119, 3);
    _os_log_impl((void *)&_mh_execute_header, v118, v120, "Safety warning accepted:%{BOOL}d, for %{private,mask.hash}s.", (uint8_t *)v121, 0x1Cu);
    swift_arrayDestroy(v122, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v122, -1, -1);
    swift_slowDealloc(v121, -1, -1);

  }
  else
  {

    v123 = swift_bridgeObjectRelease_n(v119, 2);
  }
  v124 = v177;
  v125 = (uint64_t)v169;
  Date.init()(v123);
  v126 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56))(v125, 0, 1, v126);
  v127 = (uint64_t)&v4[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundInFlight];
  swift_beginAccess(&v4[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundInFlight], aBlock, 33, 0);
  sub_100099CDC(v125, v127, (uint64_t *)&unk_1005D3320);
  swift_endAccess(aBlock);
  v128 = v170;
  v129 = *(_BYTE **)&v4[v170];
  v129[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] = 1;
  v130 = v129;
  sub_1000AC5DC();

  v131 = *(_BYTE **)&v4[v128];
  v131[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_showActivityIndicator] = 1;
  v132 = (void *)objc_opt_self(UIView);
  v133 = swift_allocObject(&unk_10054C0C0, 24, 7);
  *(_QWORD *)(v133 + 16) = v131;
  aBlock[4] = (uint64_t)sub_10010C170;
  v197 = v133;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_10054C0D8;
  v134 = _Block_copy(aBlock);
  v135 = v197;
  v136 = v131;
  swift_release(v135);
  objc_msgSend(v132, "animateWithDuration:delay:options:animations:completion:", 4, v134, 0, 0.3, 0.0);
  _Block_release(v134);

  v137 = *(_QWORD *)&v4[v38] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  v138 = swift_beginAccess(v137, aBlock, 0, 0);
  v139 = *(_QWORD *)(v137 + *(int *)(v184 + 48));
  v140 = v180;
  if (v139)
  {
    v141 = *(_QWORD *)(v137 + *(int *)(v184 + 48));
  }
  else
  {
    v142 = sub_100053F2C(&qword_1005D2AA8);
    v143 = type metadata accessor for FMIPPlaySoundChannels(0);
    v144 = *(_QWORD *)(v143 - 8);
    v145 = v4;
    v146 = *(_QWORD *)(v144 + 72);
    v147 = *(unsigned __int8 *)(v144 + 80);
    v148 = (v147 + 32) & ~v147;
    v141 = swift_allocObject(v142, v148 + 2 * v146, v147 | 7);
    *(_OWORD *)(v141 + 16) = xmmword_100481730;
    v149 = v141 + v148;
    v150 = *(void (**)(uint64_t, _QWORD, uint64_t))(v144 + 104);
    v150(v149, enum case for FMIPPlaySoundChannels.left(_:), v143);
    v151 = v149 + v146;
    v4 = v145;
    v150(v151, enum case for FMIPPlaySoundChannels.right(_:), v143);
    v139 = 0;
  }
  v152 = v173;
  v153 = v172;
  v154 = v174;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v173 + 16))(v172, v140, v174, v138);
  v155 = *(unsigned __int8 *)(v152 + 80);
  v156 = (v155 + 24) & ~v155;
  v157 = swift_allocObject(&unk_10054C110, v156 + v171, v155 | 7);
  *(_QWORD *)(v157 + 16) = v4;
  (*(void (**)(uint64_t, char *, uint64_t))(v152 + 32))(v157 + v156, v153, v154);
  swift_bridgeObjectRetain(v139);
  v158 = v4;
  sub_1001B20A0(v140, v186 & 1, v183 & 1, v141, (uint64_t)sub_1001D4F20, v157);
  swift_bridgeObjectRelease(v141);
  v159 = swift_release(v157);
  v160 = v179;
  v65 = (uint64_t)v185;
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v160 + 8))(v65, v124, v159);
}

uint64_t sub_1001B1B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t (*v33)(char *, uint64_t, __n128);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  os_log_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v62 = a5;
  v63 = a4;
  v68 = a2;
  v7 = sub_100053F2C(&qword_1005D9968);
  __chkstk_darwin(v7);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMIPDevice(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMIPActionStatus(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v67 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v57 - v18;
  if (qword_1005D1CA0 != -1)
    swift_once(&qword_1005D1CA0, sub_100197BF4);
  v20 = type metadata accessor for Logger(0);
  sub_100056D88(v20, (uint64_t)qword_1005F5140);
  v65 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v66 = a1;
  v65(v19, a1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v68, v10);
  v21 = swift_retain_n(a3, 2);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  v64 = v23;
  v24 = v15;
  v25 = a3;
  if (os_log_type_enabled(v22, v23))
  {
    v26 = swift_slowAlloc(32, -1);
    v61 = v9;
    v27 = v26;
    v60 = swift_slowAlloc(96, -1);
    v70 = v60;
    *(_DWORD *)v27 = 136315650;
    v28 = sub_100008000(&qword_1005D38D8, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
    v59 = v22;
    v29 = dispatch thunk of CustomStringConvertible.description.getter(v14, v28);
    v31 = v30;
    v69 = sub_100056DA0(v29, v30, &v70);
    v57 = v24;
    v58 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);
    v32 = swift_bridgeObjectRelease(v31);
    v33 = *(uint64_t (**)(char *, uint64_t, __n128))(v24 + 8);
    v34 = v33(v19, v14, v32);
    *(_WORD *)(v27 + 12) = 2080;
    v36 = FMIPDevice.debugDescription.getter(v34, v35);
    v38 = v37;
    v69 = sub_100056DA0(v36, v37, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);
    v39 = swift_bridgeObjectRelease(v38);
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v58, v39);
    *(_WORD *)(v27 + 22) = 2080;
    v69 = v25;
    swift_retain(v25);
    v40 = sub_100053F2C(&qword_1005D9970);
    v41 = String.init<A>(describing:)(&v69, v40);
    v43 = v42;
    v69 = sub_100056DA0(v41, v42, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);
    swift_release_n(v25, 2);
    swift_bridgeObjectRelease(v43);
    v44 = v59;
    _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v64, "FMDeviceDetailContentViewController: playSound completed status: %s -  device %s - action %s", (uint8_t *)v27, 0x20u);
    v45 = v60;
    swift_arrayDestroy(v60, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    v46 = v27;
    v9 = v61;
    swift_slowDealloc(v46, -1, -1);

    v24 = v57;
  }
  else
  {
    v33 = *(uint64_t (**)(char *, uint64_t, __n128))(v24 + 8);
    ((void (*)(char *, uint64_t))v33)(v19, v14);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

    swift_release_n(v25, 2);
  }
  v47 = v67;
  v65(v67, v66, v14);
  result = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v47, v14);
  if ((_DWORD)result != enum case for FMIPActionStatus.success(_:))
  {
    if ((_DWORD)result == enum case for FMIPActionStatus.inEarSafetyWarning(_:))
    {
      v49 = v68;
      FMIPDevice.soundMetadata.getter(result);
      v50 = v49;
      v51 = 1;
LABEL_9:
      sub_1001B4364(v50, v51, v9, v62);
      return sub_1000051EC((uint64_t)v9, &qword_1005D9968);
    }
    if ((_DWORD)result != enum case for FMIPActionStatus.pending(_:))
    {
      if ((_DWORD)result == enum case for FMIPActionStatus.onNeckSafetyWarning(_:))
      {
        v52 = v68;
        FMIPDevice.soundMetadata.getter(result);
        v50 = v52;
        v51 = 3;
        goto LABEL_9;
      }
      if ((_DWORD)result == enum case for FMIPActionStatus.onHeadSafetyWarning(_:))
      {
        v53 = v68;
        FMIPDevice.soundMetadata.getter(result);
        v50 = v53;
        v51 = 2;
        goto LABEL_9;
      }
      if ((_DWORD)result == enum case for FMIPActionStatus.onTableTopSafetyWarning(_:))
      {
        v54 = v68;
        FMIPDevice.soundMetadata.getter(result);
        v50 = v54;
        v51 = 4;
        goto LABEL_9;
      }
      if ((_DWORD)result == enum case for FMIPActionStatus.carryingCaseClosedWarning(_:))
      {
        v55 = v68;
        FMIPDevice.soundMetadata.getter(result);
        v50 = v55;
        v51 = 5;
        goto LABEL_9;
      }
      if ((_DWORD)result != enum case for FMIPActionStatus.queueingSound(_:))
      {
        if ((_DWORD)result == enum case for FMIPActionStatus.serverSafetyWarning(_:))
        {
          v56 = v68;
          FMIPDevice.soundMetadata.getter(result);
          v50 = v56;
          v51 = 6;
          goto LABEL_9;
        }
        return ((uint64_t (*)(char *, uint64_t))v33)(v47, v14);
      }
    }
  }
  return result;
}

void sub_1001B20A0(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  uint64_t v51;
  uint8_t *v52;
  uint8_t *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  __n128 v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v92;
  char v93;
  unint64_t v94;
  uint64_t v95;
  _BOOL8 v96;
  uint64_t v97;
  char v98;
  unint64_t v99;
  char v100;
  _QWORD *v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  uint64_t v124;
  __n128 v125;
  uint64_t v126;
  void (*v127)(char *, uint64_t, uint64_t);
  void (*v128)(char *, char *, uint64_t);
  void (*v129)(uint64_t, char *, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(char *, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  _BYTE v152[32];
  char v153[16];

  v134 = a6;
  v133 = a5;
  v143 = a4;
  LODWORD(v149) = a3;
  LODWORD(v148) = a2;
  v139 = a1;
  v147 = type metadata accessor for FMIPPlaySoundChannels(0);
  v135 = *(_QWORD *)(v147 - 8);
  v7 = __chkstk_darwin(v147);
  v150 = (uint64_t)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v126 - v10;
  __chkstk_darwin(v9);
  v145 = (char *)&v126 - v12;
  v140 = type metadata accessor for FMIPPlaySoundMethod(0);
  v138 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v132 = v13;
  v137 = (char *)&v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v14);
  v16 = (char *)&v126 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FMIPDevice(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v144 = (char *)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = v20;
  __chkstk_darwin(v19);
  v142 = (char *)&v126 - v21;
  v130 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v22 = *(_QWORD *)(*(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
  v141 = v6;
  v23 = (uint64_t *)(*(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v23, v153, 0, 0);
  v24 = *v23;
  v25 = v23[1];
  swift_retain(v22);
  swift_bridgeObjectRetain(v25);
  v27 = FMIPManager.devices.getter(v26);
  swift_bridgeObjectRetain(v25);
  v28 = sub_100414D38(v27, v24, v25);
  swift_bridgeObjectRelease(v27);
  v29 = swift_bridgeObjectRelease(v25);
  if (v28[2])
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v18 + 16))(v16, (unint64_t)v28+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), v17, v29);
    v30 = 0;
  }
  else
  {
    v30 = 1;
  }
  v31 = v17;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, v30, 1, v17);
  swift_release(v22);
  swift_bridgeObjectRelease(v28);
  v32 = swift_bridgeObjectRelease(v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48))(v16, 1, v17, v32) == 1)
  {
    sub_1000051EC((uint64_t)v16, &qword_1005D6710);
    if (qword_1005D1DE8 == -1)
    {
LABEL_6:
      v33 = type metadata accessor for Logger(0);
      v34 = sub_100056D88(v33, (uint64_t)qword_1005F5748);
      v35 = Logger.logObject.getter(v34);
      v36 = static os_log_type_t.error.getter(v35);
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "FMDeviceDetailContentViewController: cannot play sound for unknown device", v37, 2u);
        swift_slowDealloc(v37, -1, -1);
      }

      return;
    }
LABEL_49:
    swift_once(&qword_1005D1DE8, sub_100005ADC);
    goto LABEL_6;
  }
  v136 = v18;
  v38 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v39 = v142;
  v38(v142, v16, v31);
  v40 = objc_msgSend(v141, "view");
  if (v40)
  {
    v41 = v40;
    v42 = objc_msgSend(v40, "window");

    v43 = v143;
    v44 = v139;
    v45 = v135;
    if (v42 && (v46 = objc_msgSend(v42, "windowScene"), v42, v46))
    {
      v47 = String._bridgeToObjectiveC()();
      objc_msgSend(v46, "_setSystemVolumeHUDEnabled:forAudioCategory:", 0, v47);

    }
    else
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v48 = type metadata accessor for Logger(0);
      v49 = sub_100056D88(v48, (uint64_t)qword_1005F5748);
      v47 = Logger.logObject.getter(v49);
      v50 = static os_log_type_t.error.getter(v47);
      if (os_log_type_enabled(v47, v50))
      {
        v51 = v31;
        v52 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v52 = 0;
        _os_log_impl((void *)&_mh_execute_header, v47, v50, "FMDeviceDetailContentViewController: cannot hide volume HUD without window / windowScene", v52, 2u);
        v53 = v52;
        v31 = v51;
        swift_slowDealloc(v53, -1, -1);
      }
    }

    v54 = v144;
    v128 = *(void (**)(char *, char *, uint64_t))(v136 + 16);
    v128(v144, v39, v31);
    v55 = v137;
    v127 = *(void (**)(char *, uint64_t, uint64_t))(v138 + 16);
    v127(v137, v44, v140);
    v56 = type metadata accessor for FMIPPlaySoundDeviceAction(0);
    swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
    swift_bridgeObjectRetain(v43);
    v149 = FMIPPlaySoundDeviceAction.init(device:channels:safetyWarningConfirmed:soundQueueingConfirmed:soundMethod:)(v54, v43, v148 & 1, v149 & 1, v55);
    v57 = v145;
    v58 = v147;
    (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v145, enum case for FMIPPlaySoundChannels.mute(_:), v147);
    v146 = *(_QWORD *)(v43 + 16);
    v129 = (void (*)(uint64_t, char *, uint64_t))v38;
    if (v146)
    {
      v126 = v31;
      v60 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
      v61 = v43;
      v62 = v43 + v60;
      v148 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
      v148(v11, v62, v58);
      v63 = sub_100008000(&qword_1005D7308, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
      swift_bridgeObjectRetain(v61);
      v64 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v57, v58, v63);
      v65 = *(void (**)(char *, uint64_t))(v45 + 8);
      v65(v11, v58);
      if ((v64 & 1) == 0)
      {
        if (v146 == 1)
        {
          v69 = v143;
          v70 = swift_bridgeObjectRelease(v143);
          v71 = v135;
LABEL_29:
          v79 = v147;
          ((void (*)(char *, uint64_t, __n128))v65)(v145, v147, v70);
          v80 = &v141[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_lastPlayAction];
          v81 = *(_QWORD *)(v71 + 72);
          v82 = swift_bridgeObjectRetain(v69);
          v83 = 0;
          while (1)
          {
            v88 = v83 + 1;
            if (__OFADD__(v83, 1))
              break;
            v89 = v65;
            v90 = v150;
            ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v148)(v150, v62, v79, v82);
            swift_beginAccess(v80, v152, 33, 0);
            swift_retain(v149);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v80);
            v151 = *(_QWORD **)v80;
            v92 = v151;
            *(_QWORD *)v80 = 0x8000000000000000;
            v94 = sub_100171C38(v90);
            v95 = v92[2];
            v96 = (v93 & 1) == 0;
            v97 = v95 + v96;
            if (__OFADD__(v95, v96))
              goto LABEL_46;
            v98 = v93;
            if (v92[3] >= v97)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                sub_10017C048();
            }
            else
            {
              sub_100174CCC(v97, isUniquelyReferenced_nonNull_native);
              v99 = sub_100171C38(v150);
              if ((v98 & 1) != (v100 & 1))
                goto LABEL_51;
              v94 = v99;
            }
            v65 = v89;
            v101 = v151;
            if ((v98 & 1) != 0)
            {
              v84 = v151[7];
              v85 = 8 * v94;
              swift_release(*(_QWORD *)(v84 + v85));
              *(_QWORD *)(v84 + v85) = v149;
              v79 = v147;
            }
            else
            {
              v151[(v94 >> 6) + 8] |= 1 << v94;
              v79 = v147;
              v148((char *)(v101[6] + v94 * v81), v150, v147);
              *(_QWORD *)(v101[7] + 8 * v94) = v149;
              v102 = v101[2];
              v103 = __OFADD__(v102, 1);
              v104 = v102 + 1;
              if (v103)
                goto LABEL_47;
              v101[2] = v104;
            }
            v86 = *(_QWORD *)v80;
            *(_QWORD *)v80 = v101;
            v87 = swift_bridgeObjectRelease(v86);
            ((void (*)(uint64_t, uint64_t, __n128))v89)(v150, v79, v87);
            swift_endAccess(v152);
            ++v83;
            v62 += v81;
            if (v88 == v146)
            {
              swift_bridgeObjectRelease(v143);
              v31 = v126;
              v67 = v142;
              v68 = v139;
              v66 = v130;
              goto LABEL_43;
            }
          }
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
        else
        {
          v72 = v65;
          v73 = *(_QWORD *)(v135 + 72);
          v74 = v143 + v73 + v60;
          v75 = 1;
          v76 = v147;
          while (1)
          {
            v148(v11, v74, v76);
            v77 = v75 + 1;
            if (__OFADD__(v75, 1))
              break;
            v78 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v145, v76, v63);
            v72(v11, v76);
            if ((v78 & 1) != 0)
            {
              v59 = swift_bridgeObjectRelease(v143);
              v31 = v126;
              v39 = v142;
              v66 = v130;
              v65 = v72;
              goto LABEL_21;
            }
            ++v75;
            v74 += v73;
            if (v77 == v146)
            {
              v69 = v143;
              v70 = swift_bridgeObjectRelease(v143);
              v71 = v135;
              v65 = v72;
              goto LABEL_29;
            }
          }
        }
        __break(1u);
        goto LABEL_49;
      }
      v59 = swift_bridgeObjectRelease(v61);
      v31 = v126;
      v66 = v130;
      v39 = v142;
    }
    else
    {
      v65 = *(void (**)(char *, uint64_t))(v45 + 8);
      v66 = v130;
    }
LABEL_21:
    v67 = v39;
    ((void (*)(char *, uint64_t, __n128))v65)(v145, v147, v59);
    v68 = v139;
LABEL_43:
    v106 = v140;
    v105 = v141;
    v150 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v141[v66] + 24) + 32);
    v107 = v137;
    v127(v137, v68, v140);
    v128(v144, v67, v31);
    v108 = v138;
    v109 = *(unsigned __int8 *)(v138 + 80);
    v110 = (v109 + 24) & ~v109;
    v111 = (v132 + v110 + 7) & 0xFFFFFFFFFFFFFFF8;
    v112 = (v111 + 15) & 0xFFFFFFFFFFFFFFF8;
    v113 = *(unsigned __int8 *)(v136 + 80);
    v114 = (v113 + v112 + 16) & ~v113;
    v115 = v31;
    v116 = swift_allocObject(&unk_10054BF58, v114 + v131, v109 | v113 | 7);
    *(_QWORD *)(v116 + 16) = v105;
    (*(void (**)(uint64_t, char *, uint64_t))(v108 + 32))(v116 + v110, v107, v106);
    v118 = v143;
    v117 = v144;
    *(_QWORD *)(v116 + v111) = v143;
    v119 = (uint64_t *)(v116 + v112);
    v120 = v133;
    v121 = v134;
    *v119 = v133;
    v119[1] = v121;
    v129(v116 + v114, v117, v115);
    swift_bridgeObjectRetain(v118);
    v122 = v150;
    swift_retain(v150);
    v123 = v105;
    sub_1000A190C(v120, v121);
    v124 = v149;
    sub_1000B47BC(v149, (uint64_t)sub_1001D4C50, v116);
    swift_release(v124);
    swift_release(v122);
    v125 = swift_release(v116);
    (*(void (**)(char *, uint64_t, __n128))(v136 + 8))(v142, v115, v125);
  }
  else
  {
    __break(1u);
LABEL_51:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v147);
    __break(1u);
  }
}

uint64_t sub_1001B2BA4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, void *a5, unint64_t a6, NSObject *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD, _QWORD);
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  void (*v39)(char *, uint64_t, __n128);
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  void (*v45)(char *, _QWORD, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _BOOL4 v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(_QWORD, _QWORD);
  void *v71;
  void *v72;
  uint64_t v73;
  id v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  NSObject *v82;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  NSObject *v90;
  void (*v91)(_QWORD, _QWORD);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t, uint64_t);
  char *v102;
  _QWORD *v103;
  char *v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t aBlock[5];
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v93 = a8;
  v90 = a7;
  v89 = a6;
  v106 = a5;
  v107 = a2;
  v94 = a4;
  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v99 = *(_QWORD *)(v12 - 8);
  v100 = v12;
  __chkstk_darwin(v12);
  v98 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  v96 = *(_QWORD *)(v14 - 8);
  v97 = v14;
  __chkstk_darwin(v14);
  v95 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for FMIPDevice(0);
  v92 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v91 = v16;
  v104 = (char *)&v84 - (((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FMIPActionStatus(0);
  v18 = *(_QWORD **)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v86 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v102 = (char *)&v84 - v22;
  v88 = v23;
  __chkstk_darwin(v21);
  v25 = (char *)&v84 - v24;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v87 = a10;
  v26 = type metadata accessor for Logger(0);
  sub_100056D88(v26, (uint64_t)qword_1005F5748);
  v27 = (void (*)(char *, uint64_t, uint64_t))v18[2];
  v84 = a1;
  v101 = v27;
  v27(v25, a1, v17);
  swift_errorRetain(a3);
  v28 = swift_errorRetain(a3);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.default.getter(v29);
  v31 = os_log_type_enabled(v29, v30);
  v103 = v18;
  if (v31)
  {
    v32 = swift_slowAlloc(22, -1);
    v33 = swift_slowAlloc(64, -1);
    aBlock[0] = v33;
    *(_DWORD *)v32 = 136315394;
    v34 = sub_100008000(&qword_1005D38D8, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
    v35 = dispatch thunk of CustomStringConvertible.description.getter(v17, v34);
    v37 = v36;
    v110 = sub_100056DA0(v35, v36, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, &v111);
    v38 = swift_bridgeObjectRelease(v37);
    v39 = (void (*)(char *, uint64_t, __n128))v103[1];
    v39(v25, v17, v38);
    *(_WORD *)(v32 + 12) = 2080;
    v110 = (uint64_t)a3;
    swift_errorRetain(a3);
    v40 = sub_100053F2C(&qword_1005D7E40);
    v41 = String.init<A>(describing:)(&v110, v40);
    v43 = v42;
    v110 = sub_100056DA0(v41, v42, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, &v111);
    v44 = v43;
    v18 = v103;
    swift_bridgeObjectRelease(v44);
    swift_errorRelease(a3);
    swift_errorRelease(a3);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMDeviceDetailContentViewController: Play sound command finished with status: %s, error: %s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy(v33, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v32, -1, -1);
  }
  else
  {
    v39 = (void (*)(char *, uint64_t, __n128))v18[1];
    ((void (*)(char *, uint64_t))v39)(v25, v17);
    swift_errorRelease(a3);
    swift_errorRelease(a3);
  }

  v85 = a9;
  v45 = (void (*)(char *, _QWORD, uint64_t))v18[13];
  v46 = v102;
  v45(v102, enum case for FMIPActionStatus.success(_:), v17);
  v47 = sub_100008000(&qword_1005D9928, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
  v48 = v84;
  dispatch thunk of RawRepresentable.rawValue.getter(aBlock, v17, v47);
  dispatch thunk of RawRepresentable.rawValue.getter(&v110, v17, v47);
  v49 = aBlock[0];
  v50 = v110;
  ((void (*)(char *, uint64_t))v39)(v46, v17);
  v51 = v86;
  v101(v86, v48, v17);
  if (v49 == v50)
  {
    v52 = 1;
  }
  else
  {
    v45(v46, enum case for FMIPActionStatus.pending(_:), v17);
    dispatch thunk of RawRepresentable.rawValue.getter(aBlock, v17, v47);
    dispatch thunk of RawRepresentable.rawValue.getter(&v110, v17, v47);
    v52 = aBlock[0] == v110;
    ((void (*)(char *, uint64_t))v39)(v46, v17);
  }
  ((void (*)(char *, uint64_t))v39)(v51, v17);
  sub_1001B820C(v89, v90, v52, a3);
  v53 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v90 = static OS_dispatch_queue.main.getter(v53);
  v101(v46, v48, v17);
  v54 = v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v104, v87, v105);
  v101 = (void (*)(char *, uint64_t, uint64_t))v17;
  v55 = v103;
  v56 = *((unsigned __int8 *)v103 + 80);
  v57 = (v56 + 16) & ~v56;
  v58 = (v88 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
  v59 = (v58 + 23) & 0xFFFFFFFFFFFFFFF8;
  v60 = *(unsigned __int8 *)(v54 + 80);
  v61 = (v60 + v59 + 8) & ~v60;
  v62 = ((unint64_t)v91 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  v91 = a3;
  v63 = (v62 + 15) & 0xFFFFFFFFFFFFFFF8;
  v64 = (v63 + 15) & 0xFFFFFFFFFFFFFFF8;
  v65 = swift_allocObject(&unk_10054BF80, v64 + 8, v56 | v60 | 7);
  ((void (*)(uint64_t, char *, _QWORD))v55[4])(v65 + v57, v102, v101);
  v66 = (uint64_t *)(v65 + v58);
  v67 = v93;
  v68 = v85;
  *v66 = v93;
  v66[1] = v68;
  *(_QWORD *)(v65 + v59) = v107;
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v65 + v61, v104, v105);
  v69 = v94;
  *(_QWORD *)(v65 + v62) = v94;
  v70 = v91;
  *(_QWORD *)(v65 + v63) = v91;
  v71 = v106;
  *(_QWORD *)(v65 + v64) = v106;
  aBlock[4] = (uint64_t)sub_1001D4E2C;
  v109 = v65;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_10054BF98;
  v72 = _Block_copy(aBlock);
  v73 = v109;
  swift_errorRetain(v70);
  sub_1000A190C(v67, v68);
  swift_retain(v69);
  v74 = v71;
  swift_bridgeObjectRetain(v107);
  swift_release(v73);
  v75 = v95;
  static DispatchQoS.unspecified.getter(v76);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v77 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v78 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v79 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  v80 = v98;
  v81 = v100;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v78, v79, v100, v77);
  v82 = v90;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v75, v80, v72);
  _Block_release(v72);

  (*(void (**)(char *, uint64_t))(v99 + 8))(v80, v81);
  return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v75, v97);
}

uint64_t sub_1001B3358(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, char *a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD, _QWORD, _QWORD);
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  char v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t result;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, unint64_t, uint64_t);
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(_QWORD, _QWORD, _QWORD);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[3];
  char v82[8];
  _QWORD v83[3];
  char v84[16];

  v74 = a8;
  v79 = a6;
  v80 = a4;
  v78 = a3;
  v76 = a2;
  v11 = type metadata accessor for FMIPPlaySoundChannels(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v72 = (char *)&v64 - v16;
  v17 = type metadata accessor for FMIPDevice(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for FMIPActionStatus(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = v24;
  v25 = *(void (**)(char *, uint64_t))(v24 + 16);
  v77 = v26;
  v25(v23, a1);
  v73 = v18;
  v27 = a5;
  v28 = a7;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v27, v17);
  if (!a7)
  {
    sub_1001B3814(0, (uint64_t)v23, v76, v78, v80, (uint64_t)v20, v79, 0, v74);
    v43 = v73;
LABEL_24:
    v61 = v77;
    v62 = v75;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v23, v61);
  }
  v30 = v79;
  v29 = v80;
  v70 = v23;
  v71 = v20;
  if (!v79)
  {
    swift_errorRetain(v28);
    v43 = v73;
    v42 = v74;
    v44 = v78;
    v45 = v76;
    v41 = v29;
    goto LABEL_22;
  }
  v67 = v17;
  v31 = swift_errorRetain(v28);
  v32 = FMIPPlaySoundDeviceAction.channels.getter(v31);
  v33 = v72;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v72, enum case for FMIPPlaySoundChannels.case(_:), v11);
  v34 = *(_QWORD *)(v32 + 16);
  if (!v34)
  {
    v17 = v67;
    v43 = v73;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v72, v11);
LABEL_21:
    swift_bridgeObjectRelease(v32);
    v41 = v80;
    v44 = v78;
    v45 = v76;
    v42 = v74;
    goto LABEL_22;
  }
  v65 = v28;
  v35 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v66 = v32;
  v69 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
  v69(v15, v32 + v35, v11);
  v36 = sub_100008000(&qword_1005D7308, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
  v37 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v33, v11, v36);
  v38 = *(void (**)(char *, uint64_t))(v12 + 8);
  v38(v15, v11);
  v39 = v33;
  if ((v37 & 1) != 0)
  {
LABEL_5:
    v38(v39, v11);
    swift_bridgeObjectRelease(v66);
    v28 = v65;
    swift_getErrorValue(v65, v84, v83);
    v40 = sub_10021EE24(v83[1], v83[2]);
    v30 = v79;
    v41 = v80;
    v17 = v67;
    v43 = v73;
    v42 = v74;
    v44 = v78;
    v45 = v76;
    if (v40 != (id)1)
    {
LABEL_11:
      v63 = v42;
      v55 = 1;
LABEL_23:
      v23 = v70;
      v20 = v71;
      sub_1001B3814(v55, (uint64_t)v70, v45, v44, v41, (uint64_t)v71, v30, v28, v63);
      swift_errorRelease(v28);
      goto LABEL_24;
    }
    v46 = v28;
    swift_getErrorValue(v28, v82, v81);
    v47 = sub_10021EF24(v81[1], v81[2]);
    v49 = v48;
    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(SPCommandErrorDomain);
    if (v47 == v50 && v49 == v51)
    {
      swift_bridgeObjectRelease_n(v49, 2);
      v28 = v46;
      v41 = v80;
    }
    else
    {
      v53 = v51;
      v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v49, v50, v51, 0);
      swift_bridgeObjectRelease(v49);
      swift_bridgeObjectRelease(v53);
      v28 = v46;
      v41 = v80;
      if ((v54 & 1) == 0)
        goto LABEL_11;
    }
LABEL_22:
    v63 = v42;
    v55 = 0;
    goto LABEL_23;
  }
  if (v34 == 1)
  {
LABEL_20:
    v30 = v79;
    v28 = v65;
    v17 = v67;
    v43 = v73;
    v32 = v66;
    v38(v72, v11);
    goto LABEL_21;
  }
  v68 = *(_QWORD *)(v12 + 72);
  v56 = v66 + v68 + v35;
  v57 = 1;
  while (1)
  {
    result = ((uint64_t (*)(char *, unint64_t, uint64_t))v69)(v15, v56, v11);
    v59 = v57 + 1;
    if (__OFADD__(v57, 1))
      break;
    v60 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v39, v11, v36);
    v38(v15, v11);
    if ((v60 & 1) != 0)
      goto LABEL_5;
    ++v57;
    v56 += v68;
    if (v59 == v34)
      goto LABEL_20;
  }
  __break(1u);
  return result;
}

void sub_1001B3814(int a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, _QWORD), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, char *a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t (*v32)(char *, uint64_t);
  int v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint64_t v39;
  uint8_t *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  _BOOL4 v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  int v57;
  _BOOL4 v58;
  uint8_t *v59;
  uint64_t v60;
  uint8_t *v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  os_log_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  void *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  _BYTE *v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  _BYTE *v102;
  uint8_t *v103;
  int v104;
  uint8_t *v105;
  uint64_t v106;
  os_log_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(_QWORD, _QWORD, _QWORD);
  uint64_t v111;
  void *v112;
  int v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD v126[3];
  char v127[8];
  uint64_t aBlock;
  unint64_t v129;
  uint64_t (*v130)(uint64_t);
  void *v131;
  uint64_t (*v132)();
  uint64_t v133;

  v112 = a8;
  v122 = a5;
  v123 = a7;
  v119 = a6;
  v113 = a1;
  v12 = sub_100053F2C(&qword_1005D6710);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v114 = (char *)&v103 - v16;
  v17 = type metadata accessor for FMIPDevice(0);
  v124 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v117 = (char *)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v120 = (char *)&v103 - v21;
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v103 - v23;
  __chkstk_darwin(v22);
  v26 = (char *)&v103 - v25;
  v27 = type metadata accessor for FMIPActionStatus(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v103 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v118 = a2;
  v31(v30, a2, v27);
  v116 = v28;
  v32 = *(uint64_t (**)(char *, uint64_t))(v28 + 88);
  v115 = v30;
  v33 = v32(v30, v27);
  v121 = v15;
  if (v33 == enum case for FMIPActionStatus.success(_:))
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_100056D88(v34, (uint64_t)qword_1005F5748);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter(v36);
    v38 = os_log_type_enabled(v36, v37);
    v39 = v122;
    if (v38)
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      v41 = "FMDeviceDetailContentViewController: status is success";
LABEL_11:
      _os_log_impl((void *)&_mh_execute_header, v36, v37, v41, v40, 2u);
      swift_slowDealloc(v40, -1, -1);
      goto LABEL_12;
    }
    goto LABEL_12;
  }
  if (v33 == enum case for FMIPActionStatus.pending(_:))
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v42 = type metadata accessor for Logger(0);
    v43 = sub_100056D88(v42, (uint64_t)qword_1005F5748);
    v36 = Logger.logObject.getter(v43);
    v37 = static os_log_type_t.default.getter(v36);
    v44 = os_log_type_enabled(v36, v37);
    v39 = v122;
    if (v44)
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      v41 = "FMDeviceDetailContentViewController: status is pending";
      goto LABEL_11;
    }
LABEL_12:

    v45 = v120;
    v46 = v123;
    v47 = (uint64_t)v121;
    if (!a3)
      return;
    goto LABEL_13;
  }
  v111 = v27;
  v52 = v123;
  v53 = a4;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v54 = type metadata accessor for Logger(0);
  v109 = sub_100056D88(v54, (uint64_t)qword_1005F5748);
  v55 = Logger.logObject.getter(v109);
  v56 = static os_log_type_t.default.getter(v55);
  v57 = v56;
  v58 = os_log_type_enabled(v55, v56);
  v110 = a3;
  if (v58)
  {
    v107 = v55;
    v59 = (uint8_t *)swift_slowAlloc(12, -1);
    v60 = swift_slowAlloc(32, -1);
    v106 = v60;
    v61 = v59;
    v105 = v59;
    *(_DWORD *)v59 = 136315138;
    v125 = v60;
    aBlock = 0;
    v129 = 0xE000000000000000;
    v62 = v113;
    if ((v113 & 1) != 0)
      v63 = 1702195828;
    else
      v63 = 0x65736C6166;
    v104 = v57;
    if ((v113 & 1) != 0)
      v64 = 0xE400000000000000;
    else
      v64 = 0xE500000000000000;
    v103 = v61 + 4;
    v65 = v64;
    String.append(_:)(*(Swift::String *)&v63);
    swift_bridgeObjectRelease(v64);
    v66 = v129;
    aBlock = sub_100056DA0(aBlock, v129, &v125);
    a3 = v110;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v129);
    swift_bridgeObjectRelease(v66);
    v67 = v107;
    v68 = v105;
    _os_log_impl((void *)&_mh_execute_header, v107, (os_log_type_t)v104, "FMDeviceDetailContentViewController: Show failure attention, should show it? %s", v105, 0xCu);
    v69 = v106;
    swift_arrayDestroy(v106, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v69, -1, -1);
    swift_slowDealloc(v68, -1, -1);

    v70 = v111;
    v71 = (uint64_t)v114;
    if ((v62 & 1) == 0)
      goto LABEL_32;
  }
  else
  {

    v70 = v111;
    v71 = (uint64_t)v114;
    if ((v113 & 1) == 0)
    {
LABEL_32:
      if (a3)
      {
        if (v122 && *(_QWORD *)(v122 + 16))
        {
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v124 + 16))(v71, v122 + ((*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80)), v17);
          v72 = 0;
        }
        else
        {
          v72 = 1;
        }
        v91 = v124;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v124 + 56))(v71, v72, 1, v17);
        (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v24, v119, v17);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v71, 1, v17) == 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v26, v24, v17);
          sub_1000051EC(v71, &qword_1005D6710);
        }
        else
        {
          v92 = v124;
          (*(void (**)(char *, uint64_t))(v124 + 8))(v24, v17);
          (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v26, v71, v17);
        }
        a3(v118, v26, v52);
        (*(void (**)(char *, uint64_t))(v124 + 8))(v26, v17);
        v70 = v111;
      }
      (*(void (**)(char *, uint64_t))(v116 + 8))(v115, v70);
      return;
    }
  }
  v73 = v112;
  v108 = v53;
  if (v112)
  {
    swift_getErrorValue(v112, v127, v126);
    v73 = sub_10021EE24(v126[1], v126[2]);
  }
  v74 = sub_100351AD8((uint64_t)v73);
  v75 = *(_QWORD *)&a9[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingAttention];
  if (v74 == 4)
    v76 = 3;
  else
    v76 = v74;
  *(_BYTE *)(v75 + OBJC_IVAR____TtC6FindMy25FMFailablePlatterInfoView_playSoundFailureCode) = v76;
  sub_1003509B4();
  if (*(_BYTE *)(v75 + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_collapsed) == 1)
  {
    v78 = Logger.logObject.getter(v77);
    v79 = static os_log_type_t.default.getter(v78);
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v80 = 0;
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "FMDeviceDetailContentViewController: Show sound pending", v80, 2u);
      swift_slowDealloc(v80, -1, -1);
    }

    v81 = (void *)objc_opt_self(UIView);
    v82 = swift_allocObject(&unk_10054C070, 24, 7);
    *(_QWORD *)(v82 + 16) = a9;
    v132 = sub_1001D4A5C;
    v133 = v82;
    aBlock = (uint64_t)_NSConcreteStackBlock;
    v129 = 1107296256;
    v130 = sub_100037DF8;
    v131 = &unk_10054C088;
    v83 = _Block_copy(&aBlock);
    v84 = v133;
    v85 = a9;
    swift_release(v84);
    objc_msgSend(v81, "animateWithDuration:delay:options:animations:completion:", 4, v83, 0, 0.3, 0.0);
    _Block_release(v83);
  }
  v86 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton;
  v87 = *(_BYTE **)&a9[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton];
  v87[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] = 0;
  v88 = v87;
  sub_1000AC5DC();

  v89 = *(_BYTE **)&a9[v86];
  v89[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_active] = 0;
  if (v89[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_disabled] == 1)
    v90 = 2;
  else
    v90 = (v89[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_queued] & 1) != 0
       || v89[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] == 1
       && (v89[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_activeWhenPending] & 1) != 0;
  v93 = (void *)objc_opt_self(UIView);
  v94 = *(_QWORD *)&v89[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_iconView];
  v95 = swift_allocObject(&unk_10054BFD0, 25, 7);
  *(_QWORD *)(v95 + 16) = v89;
  *(_BYTE *)(v95 + 24) = v90;
  v132 = (uint64_t (*)())sub_1000B0650;
  v133 = v95;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v129 = 1107296256;
  v130 = sub_100037DF8;
  v131 = &unk_10054BFE8;
  v96 = _Block_copy(&aBlock);
  v97 = v133;
  v98 = v89;
  swift_release(v97);
  objc_msgSend(v93, "transitionWithView:duration:options:animations:completion:", v94, 5242884, v96, 0, 0.25);
  _Block_release(v96);
  v99 = swift_allocObject(&unk_10054C020, 25, 7);
  *(_QWORD *)(v99 + 16) = v98;
  *(_BYTE *)(v99 + 24) = 0;
  v132 = (uint64_t (*)())sub_10010C14C;
  v133 = v99;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v129 = 1107296256;
  v130 = sub_100037DF8;
  v131 = &unk_10054C038;
  v100 = _Block_copy(&aBlock);
  v101 = v133;
  v102 = v98;
  swift_release(v101);
  objc_msgSend(v93, "animateWithDuration:animations:", v100, 0.35);
  _Block_release(v100);

  (*(void (**)(char *, uint64_t))(v116 + 8))(v115, v111);
  a3 = v110;
  v39 = v122;
  v46 = v123;
  v45 = v120;
  v47 = (uint64_t)v121;
  if (v110)
  {
LABEL_13:
    if (v39 && *(_QWORD *)(v39 + 16))
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v124 + 16))(v47, v39 + ((*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80)), v17);
      v48 = 0;
    }
    else
    {
      v48 = 1;
    }
    v49 = v124;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v124 + 56))(v47, v48, 1, v17);
    v50 = v117;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v117, v119, v17);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v17) == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v45, v50, v17);
      sub_1000051EC(v47, &qword_1005D6710);
    }
    else
    {
      v51 = v124;
      (*(void (**)(char *, uint64_t))(v124 + 8))(v50, v17);
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v45, v47, v17);
    }
    a3(v118, v45, v46);
    (*(void (**)(char *, uint64_t))(v124 + 8))(v45, v17);
  }
}

void sub_1001B4364(uint64_t a1, int a2, void *a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  void **v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  __n128 v42;
  void **v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  BOOL v68;
  uint64_t v69;
  uint8_t *v70;
  void **v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  void *v77;
  id v78;
  Swift::String v79;
  Swift::String v80;
  void *object;
  id v82;
  Swift::String v83;
  Swift::String v84;
  Swift::String v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  void *v90;
  void *v91;
  uint64_t v92;
  void *v93;
  void *v94;
  uint64_t v95;
  NSString v96;
  uint64_t v97;
  NSString v98;
  id v99;
  NSString v100;
  void *v101;
  void *v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  void *v112;
  NSString v113;
  void *v114;
  id v115;
  _QWORD v116[2];
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint8_t *v128;
  uint64_t v129;
  uint64_t v130;
  char *countAndFlagsBits;
  uint64_t v132;
  void *v133;
  char *v134;
  uint64_t v135;
  void **aBlock;
  unint64_t v137;
  void (*v138)(uint64_t, void *);
  void *v139;
  void *v140;
  uint64_t v141;
  Swift::String v142;
  Swift::String v143;

  v5 = v4;
  v133 = a3;
  LODWORD(v130) = a2;
  v118 = sub_100053F2C(&qword_1005D9968);
  v8 = __chkstk_darwin(v118);
  v119 = (char *)v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v122 = (uint64_t)v116 - v11;
  v12 = __chkstk_darwin(v10);
  v117 = (uint64_t)v116 - v13;
  v14 = __chkstk_darwin(v12);
  v121 = (uint64_t)v116 - v15;
  v16 = __chkstk_darwin(v14);
  v128 = (uint8_t *)v116 - v17;
  __chkstk_darwin(v16);
  v132 = (uint64_t)v116 - v18;
  v19 = type metadata accessor for FMIPPlaySoundMethod(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v123 = v21;
  v134 = (char *)v116 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v22);
  countAndFlagsBits = (char *)v116 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for FMIPDevice(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)v116 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v28 = type metadata accessor for Logger(0);
  v29 = sub_100056D88(v28, (uint64_t)qword_1005F5748);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v129 = a1;
  v31 = v30(v27, a1, v24);
  v120 = v29;
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter(v32);
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc(12, -1);
    v125 = v19;
    v35 = (uint8_t *)v34;
    v36 = (void **)swift_slowAlloc(32, -1);
    v126 = a4;
    v37 = v36;
    aBlock = v36;
    v127 = v5;
    *(_DWORD *)v35 = 136315138;
    v124 = v20;
    v39 = FMIPDevice.debugDescription.getter(v36, v38);
    v41 = v40;
    v135 = sub_100056DA0(v39, v40, (uint64_t *)&aBlock);
    v20 = v124;
    v5 = v127;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, &aBlock);
    v42 = swift_bridgeObjectRelease(v41);
    (*(void (**)(char *, uint64_t, __n128))(v25 + 8))(v27, v24, v42);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "FMDeviceDetailContentViewController: showSafetyWarning for device %s", v35, 0xCu);
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    v43 = v37;
    a4 = v126;
    swift_slowDealloc(v43, -1, -1);
    v44 = v35;
    v19 = v125;
    swift_slowDealloc(v44, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  }

  v45 = type metadata accessor for Date(0);
  v46 = (uint64_t)countAndFlagsBits;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(countAndFlagsBits, 1, 1, v45);
  v47 = (uint64_t)&v5[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundInFlight];
  swift_beginAccess(&v5[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundInFlight], &aBlock, 33, 0);
  sub_100099CDC(v46, v47, (uint64_t *)&unk_1005D3320);
  swift_endAccess(&aBlock);
  objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton], "setUserInteractionEnabled:", 1);
  v48 = (uint64_t)v134;
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v134, enum case for FMIPPlaySoundMethod.classic(_:), v19);
  sub_1001B20A0(v48, 1, 1, (uint64_t)_swiftEmptyArrayStorage, 0, 0);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v48, v19);
  v49 = v132;
  v50 = (uint64_t)v133;
  sub_100007464((uint64_t)v133, v132, &qword_1005D9968);
  v51 = type metadata accessor for FMIPPlaySoundMetadata(0);
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  if (v53(v49, 1, v51) == 1)
  {
    v54 = v49;
LABEL_11:
    sub_1000051EC(v54, &qword_1005D9968);
    goto LABEL_12;
  }
  countAndFlagsBits = (char *)v53;
  v116[1] = FMIPPlaySoundMetadata.alertTitle.getter();
  v56 = v55;
  v57 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
  v57(v49, v51);
  if (!v56)
  {
LABEL_12:
    sub_1001B4FC0(v129, v130, a4);
    return;
  }
  v58 = (uint64_t)v128;
  sub_100007464(v50, (uint64_t)v128, &qword_1005D9968);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))countAndFlagsBits)(v58, 1, v51) == 1)
  {
    swift_bridgeObjectRelease(v56);
    v54 = v58;
    goto LABEL_11;
  }
  v132 = v56;
  v59 = FMIPPlaySoundMetadata.alertText.getter();
  v60 = v58;
  v62 = v61;
  v63 = v57;
  v57(v60, v51);
  if (!v62)
  {
    swift_bridgeObjectRelease(v132);
    goto LABEL_12;
  }
  v129 = v59;
  v130 = v62;
  v124 = v20;
  v64 = v121;
  v65 = sub_100007464(v50, v121, &qword_1005D9968);
  v66 = Logger.logObject.getter(v65);
  v67 = static os_log_type_t.default.getter(v66);
  v68 = os_log_type_enabled(v66, v67);
  v126 = a4;
  v127 = v5;
  v125 = v19;
  if (v68)
  {
    v69 = v64;
    v70 = (uint8_t *)swift_slowAlloc(12, -1);
    v71 = (void **)swift_slowAlloc(32, -1);
    aBlock = v71;
    *(_DWORD *)v70 = 136315138;
    v128 = v70 + 4;
    v72 = v117;
    sub_100007464(v69, v117, &qword_1005D9968);
    v73 = String.init<A>(describing:)(v72, v118);
    v75 = v74;
    v135 = sub_100056DA0(v73, v74, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, &aBlock);
    swift_bridgeObjectRelease(v75);
    sub_1000051EC(v69, &qword_1005D9968);
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "FMDeviceDetailContentViewController: showSafetyWarning - using server driven content %s", v70, 0xCu);
    swift_arrayDestroy(v71, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v71, -1, -1);
    swift_slowDealloc(v70, -1, -1);
  }
  else
  {
    sub_1000051EC(v64, &qword_1005D9968);
  }

  v76 = countAndFlagsBits;
  aBlock = 0;
  v137 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v137);
  v77 = (void *)objc_opt_self(NSBundle);
  v78 = objc_msgSend(v77, "mainBundle");
  v142._countAndFlagsBits = 0xD000000000000031;
  v142._object = (void *)0x80000001004ADE40;
  v79._object = (void *)0x80000001004ADE20;
  v79._countAndFlagsBits = 0xD00000000000001FLL;
  v80._countAndFlagsBits = 0;
  v80._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v79, (Swift::String_optional)0, (NSBundle)v78, v80, v142)._object;

  aBlock = 0;
  v137 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v82 = objc_msgSend(v77, "mainBundle", swift_bridgeObjectRelease(v137).n128_f64[0]);
  v83._countAndFlagsBits = 0xD000000000000021;
  v143._countAndFlagsBits = 0xD000000000000033;
  v143._object = (void *)0x80000001004ADEB0;
  v83._object = (void *)0x80000001004ADE80;
  v84._countAndFlagsBits = 0;
  v84._object = (void *)0xE000000000000000;
  v85 = NSLocalizedString(_:tableName:bundle:value:comment:)(v83, (Swift::String_optional)0, (NSBundle)v82, v84, v143);

  v86 = (uint64_t)v133;
  v87 = v122;
  sub_100007464((uint64_t)v133, v122, &qword_1005D9968);
  v88 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v76)(v87, 1, v51);
  countAndFlagsBits = (char *)v85._countAndFlagsBits;
  if (v88 == 1)
  {
    sub_1000051EC(v87, &qword_1005D9968);
    v89 = (uint64_t)v119;
  }
  else
  {
    FMIPPlaySoundMetadata.cancelButtonTitle.getter();
    v91 = v90;
    v63(v87, v51);
    v89 = (uint64_t)v119;
    if (v91)
    {
      swift_bridgeObjectRelease(object);
      object = v91;
    }
  }
  sub_100007464(v86, v89, &qword_1005D9968);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v76)(v89, 1, v51) == 1)
  {
    v133 = v85._object;
    sub_1000051EC(v89, &qword_1005D9968);
  }
  else
  {
    v92 = FMIPPlaySoundMetadata.continueButtonTitle.getter();
    v94 = v93;
    v63(v89, v51);
    if (v94)
    {
      swift_bridgeObjectRelease(v85._object);
      countAndFlagsBits = (char *)v92;
      v133 = v94;
    }
    else
    {
      v133 = v85._object;
    }
  }
  v95 = v132;
  v96 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v95);
  v97 = v130;
  v98 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v97);
  v99 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v96, v98, 1);

  v100 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v140 = sub_1001B4EF4;
  v141 = 0;
  aBlock = _NSConcreteStackBlock;
  v137 = 1107296256;
  v138 = sub_100008B40;
  v139 = &unk_10054BED0;
  v101 = _Block_copy(&aBlock);
  swift_release(v141);
  v102 = (void *)objc_opt_self(UIAlertAction);
  v103 = objc_msgSend(v102, "actionWithTitle:style:handler:", v100, 0, v101);
  _Block_release(v101);

  objc_msgSend(v99, "addAction:", v103);
  v105 = v124;
  v104 = v125;
  v106 = v134;
  (*(void (**)(char *, uint64_t, uint64_t))(v124 + 16))(v134, v126, v125);
  v107 = *(unsigned __int8 *)(v105 + 80);
  v108 = (v107 + 24) & ~v107;
  v109 = swift_allocObject(&unk_10054BF08, v108 + v123, v107 | 7);
  v110 = v127;
  *(_QWORD *)(v109 + 16) = v127;
  (*(void (**)(uint64_t, char *, uint64_t))(v105 + 32))(v109 + v108, v106, v104);
  v111 = v110;
  v112 = v133;
  v113 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v112);
  v140 = sub_1001D4AF4;
  v141 = v109;
  aBlock = _NSConcreteStackBlock;
  v137 = 1107296256;
  v138 = sub_100008B40;
  v139 = &unk_10054BF20;
  v114 = _Block_copy(&aBlock);
  v115 = objc_msgSend(v102, "actionWithTitle:style:handler:", v113, 0, v114, swift_release(v141).n128_f64[0]);
  _Block_release(v114);

  objc_msgSend(v99, "addAction:", v115);
  objc_msgSend(v111, "presentViewController:animated:completion:", v99, 1, 0);

}

void sub_1001B4EF4()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100056D88(v0, (uint64_t)qword_1005F5748);
  oslog = Logger.logObject.getter(v1);
  v2 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "FMDeviceDetailContentViewController: User canceled server safety warning", v3, 2u);
    swift_slowDealloc(v3, -1, -1);
  }

}

void sub_1001B4FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __n128 v24;
  _QWORD v25[8];
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t aBlock;
  unint64_t v30;

  v25[4] = a3;
  v26 = a2;
  v4 = type metadata accessor for FMIPPlaySoundMethod(0);
  v25[6] = *(_QWORD *)(v4 - 8);
  v25[7] = v4;
  __chkstk_darwin(v4);
  v25[3] = v5;
  v25[5] = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v6);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPDevice(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v13 = type metadata accessor for Logger(0);
  sub_100056D88(v13, (uint64_t)qword_1005F5748);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14 = v27(v12, a1, v9);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v25[1] = a1;
    v19 = v18;
    aBlock = v18;
    *(_DWORD *)v17 = 136315138;
    v25[0] = v8;
    v21 = FMIPDevice.debugDescription.getter(v18, v20);
    v23 = v22;
    v28 = sub_100056DA0(v21, v22, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &aBlock);
    v24 = swift_bridgeObjectRelease(v23);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v24);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMDeviceDetailContentViewController: showLegacySafetyWarning for device %s", v17, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  aBlock = 0;
  v30 = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(v30);
  aBlock = 0x524F535345434341;
  v30 = 0xEA00000000005F59;
  __asm { BR              X10 }
}

id sub_1001B59B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  v3 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100056D88(v6, (uint64_t)qword_1005F5748);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMDeviceDetailContentViewController: User canceled safety warning", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
  v12 = a2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundInFlight;
  swift_beginAccess(a2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundInFlight, v15, 33, 0);
  sub_100099CDC((uint64_t)v5, v12, (uint64_t *)&unk_1005D3320);
  swift_endAccess(v15);
  return objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton), "setUserInteractionEnabled:", 1);
}

uint64_t sub_1001B5B48(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  const char *v35;
  char v36[24];

  v35 = a4;
  v6 = type metadata accessor for FMIPPlaySoundMethod(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v33 - v11;
  v13 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100056D88(v16, (uint64_t)qword_1005F5748);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    v34 = v12;
    v21 = v7;
    v22 = v13;
    v23 = v10;
    v24 = a3;
    v25 = a2;
    v26 = v20;
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, v35, v20, 2u);
    v27 = v26;
    a2 = v25;
    a3 = v24;
    v10 = v23;
    v13 = v22;
    v7 = v21;
    v12 = v34;
    swift_slowDealloc(v27, -1, -1);
  }

  sub_1001B08BC(a3, 1, 0);
  v28 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v28, v36, 0, 0);
  sub_10004FC74(v28, (uint64_t)v15, type metadata accessor for FMDeviceDetailViewModel);
  LODWORD(v28) = v15[*(int *)(v13 + 148)];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, a3, v6);
  if ((_DWORD)v28 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for FMIPPlaySoundMethod.ble(_:), v6);
    v29 = sub_100008000(&qword_1005D9960, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundMethod, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundMethod);
    v30 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v10, v6, v29);
    v31 = *(void (**)(char *, uint64_t))(v7 + 8);
    v31(v10, v6);
    v31(v12, v6);
    if ((v30 & 1) == 0)
      sub_1001ACB38(*(_QWORD *)v15, *((_QWORD *)v15 + 1));
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  return sub_10004FCB8((uint64_t)v15, type metadata accessor for FMDeviceDetailViewModel);
}

void sub_1001B5E18(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  Swift::String v30;
  Swift::String v31;
  void *object;
  id v33;
  Swift::String v34;
  Swift::String v35;
  void *v36;
  NSString v37;
  NSString v38;
  id v39;
  uint64_t v40;
  char *v41;
  NSString v42;
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  char *v47;
  NSString v48;
  void *v49;
  id v50;
  _QWORD v51[2];
  char v52[16];
  uint64_t v53;
  char *v54;
  void **aBlock;
  unint64_t v56;
  void (*v57)(uint64_t, void *);
  void *v58;
  void *v59;
  uint64_t v60;
  char v61[39];
  uint64_t v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;

  v2 = v1;
  v4 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v4);
  v6 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = a1;
  v54 = v1;
  OS_dispatch_queue.sync<A>(execute:)(&v62, sub_1001D4AA0, v52, &type metadata for Bool);
  if (v62 == 1)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100056D88(v7, (uint64_t)qword_1005F5748);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMDeviceDetailContentViewController: Showing Queued Alert", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    aBlock = 0;
    v56 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v56);
    v12 = (void *)objc_opt_self(NSBundle);
    v13 = objc_msgSend(v12, "mainBundle");
    v14._countAndFlagsBits = 0xD00000000000001BLL;
    v63._countAndFlagsBits = 0xD00000000000002DLL;
    v63._object = (void *)0x80000001004B26D0;
    v14._object = (void *)0x80000001004B26B0;
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v63);
    v51[1] = v16._countAndFlagsBits;

    v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
        + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
    swift_beginAccess(v17, v61, 0, 0);
    v18 = type metadata accessor for FMIPDevice(0);
    v19 = *(_QWORD *)(v18 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v6, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v6, 0, 1, v18);
    v20 = sub_1001DE71C(0xD00000000000001DLL, 0x80000001004B2700, (uint64_t)v6);
    v22 = v21;
    v24 = v23;
    v26 = v25;
    swift_bridgeObjectRetain(v25);
    v51[0] = sub_1001DDC8C(v20, v22, v24, v26, 0, 0);
    v28 = v27;
    swift_bridgeObjectRelease_n(v26, 2);
    swift_bridgeObjectRelease(v22);
    sub_1000051EC((uint64_t)v6, &qword_1005D6710);
    aBlock = 0;
    v56 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v29 = objc_msgSend(v12, "mainBundle", swift_bridgeObjectRelease(v56).n128_f64[0]);
    v30._countAndFlagsBits = 0xD00000000000001CLL;
    v64._countAndFlagsBits = 0xD00000000000002ELL;
    v64._object = (void *)0x80000001004B2740;
    v30._object = (void *)0x80000001004B2720;
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v64)._object;

    aBlock = 0;
    v56 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v33 = objc_msgSend(v12, "mainBundle", swift_bridgeObjectRelease(v56).n128_f64[0]);
    v65._countAndFlagsBits = 0xD00000000000002ALL;
    v65._object = (void *)0x80000001004B2790;
    v34._object = (void *)0x80000001004B2770;
    v34._countAndFlagsBits = 0xD000000000000018;
    v35._countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    v36 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v33, v35, v65)._object;

    v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16._object);
    v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
    v39 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v37, v38, 1);

    v40 = swift_allocObject(&unk_10054BDA0, 24, 7);
    *(_QWORD *)(v40 + 16) = v2;
    v41 = v2;
    v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v59 = sub_1001D4AB8;
    v60 = v40;
    aBlock = _NSConcreteStackBlock;
    v56 = 1107296256;
    v57 = sub_100008B40;
    v58 = &unk_10054BDB8;
    v43 = _Block_copy(&aBlock);
    swift_release(v60);
    v44 = (void *)objc_opt_self(UIAlertAction);
    v45 = objc_msgSend(v44, "actionWithTitle:style:handler:", v42, 1, v43);
    _Block_release(v43);

    objc_msgSend(v39, "addAction:", v45);
    v46 = swift_allocObject(&unk_10054BDF0, 24, 7);
    *(_QWORD *)(v46 + 16) = v41;
    v47 = v41;
    v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v36);
    v59 = sub_1001D4AC0;
    v60 = v46;
    aBlock = _NSConcreteStackBlock;
    v56 = 1107296256;
    v57 = sub_100008B40;
    v58 = &unk_10054BE08;
    v49 = _Block_copy(&aBlock);
    v50 = objc_msgSend(v44, "actionWithTitle:style:handler:", v48, 0, v49, swift_release(v60).n128_f64[0]);
    _Block_release(v49);

    objc_msgSend(v39, "addAction:", v50);
    objc_msgSend(v47, "presentViewController:animated:completion:", v39, 1, 0);

  }
}

uint64_t sub_1001B6448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t result;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  char *v47;
  _BYTE v48[24];
  char v49[24];

  v47 = a3;
  v5 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v6 = __chkstk_darwin(v5);
  v46 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v46 - v9;
  __chkstk_darwin(v8);
  v12 = (char *)&v46 - v11;
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v46 - v18;
  sub_100007464(a1, (uint64_t)v12, (uint64_t *)&unk_1005D3320);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v20(v12, 1, v13) == 1)
  {
    result = sub_1000051EC((uint64_t)v12, (uint64_t *)&unk_1005D3320);
LABEL_20:
    v31 = 0;
    goto LABEL_21;
  }
  v22 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v22(v19, v12, v13);
  v23 = a2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_canShowQueueAlert;
  swift_beginAccess(v23, v49, 0, 0);
  sub_100007464(v23, (uint64_t)v10, (uint64_t *)&unk_1005D3320);
  if (v20(v10, 1, v13) == 1)
  {
    sub_1000051EC((uint64_t)v10, (uint64_t *)&unk_1005D3320);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v24 = type metadata accessor for Logger(0);
    v25 = sub_100056D88(v24, (uint64_t)qword_1005F5748);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "FMDeviceDetailContentViewController: Alert has never been shown - Show alert.", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

    v29 = (uint64_t)v46;
    Date.init()(v30);
    v31 = 1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v29, 0, 1, v13);
    swift_beginAccess(v23, v48, 33, 0);
    sub_100099CDC(v29, v23, (uint64_t *)&unk_1005D3320);
    swift_endAccess(v48);
    result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }
  else
  {
    v22(v17, v10, v13);
    if ((static Date.< infix(_:_:)(v17, v19) & 1) == 0)
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v40 = type metadata accessor for Logger(0);
      v41 = sub_100056D88(v40, (uint64_t)qword_1005F5748);
      v42 = Logger.logObject.getter(v41);
      v43 = static os_log_type_t.default.getter(v42);
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v44 = 0;
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "FMDeviceDetailContentViewController: Same command has been processed. Do not show alert.", v44, 2u);
        swift_slowDealloc(v44, -1, -1);
      }

      v45 = *(void (**)(char *, uint64_t))(v14 + 8);
      v45(v17, v13);
      result = ((uint64_t (*)(char *, uint64_t))v45)(v19, v13);
      goto LABEL_20;
    }
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v32 = type metadata accessor for Logger(0);
    v33 = sub_100056D88(v32, (uint64_t)qword_1005F5748);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.default.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "FMDeviceDetailContentViewController: New command has been issued. Show alert.", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }

    v37 = (uint64_t)v46;
    Date.init()(v38);
    v31 = 1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v37, 0, 1, v13);
    swift_beginAccess(v23, v48, 33, 0);
    sub_100099CDC(v37, v23, (uint64_t *)&unk_1005D3320);
    swift_endAccess(v48);
    v39 = *(void (**)(char *, uint64_t))(v14 + 8);
    v39(v17, v13);
    result = ((uint64_t (*)(char *, uint64_t))v39)(v19, v13);
  }
LABEL_21:
  *v47 = v31;
  return result;
}

void sub_1001B693C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  char v8;
  uint64_t Strong;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100056D88(v3, (uint64_t)qword_1005F5748);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMDeviceDetailContentViewController: User canceled queuing sound", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  v8 = *(_BYTE *)(a2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPlayingOrPending);
  *(_BYTE *)(a2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPlayingOrPending) = 0;
  if ((v8 & 1) != 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundDelegate);
    if (Strong)
    {
      v10 = Strong;
      v11 = Logger.logObject.getter(Strong);
      v12 = static os_log_type_t.default.getter(v11);
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMMediator: Device did stop playing sound", v13, 2u);
        swift_slowDealloc(v13, -1, -1);
      }

      FMIPManager.pauseThrottleOfflineLocationRefreshing(pause:)(0);
      swift_unknownObjectRelease(v10);
    }
  }
}

uint64_t sub_1001B6AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v10;

  v0 = type metadata accessor for FMIPPlaySoundMethod(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "DeviceDetailContentViewController: User confirmed safety warning", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for FMIPPlaySoundMethod.ble(_:), v0);
  sub_1001B08BC(v3, 1, 1);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_1001B6C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  __n128 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  uint64_t v35;
  _BYTE v36[24];

  v1 = v0;
  v2 = type metadata accessor for FMIPPlaySoundChannels(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v29 - v7;
  v9 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingTimer;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingTimer))
    return;
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v13, v36, 0, 0);
  sub_10004FC74(v13, (uint64_t)v11, type metadata accessor for FMDeviceDetailViewModel);
  v14 = *(_QWORD *)&v11[*(int *)(v9 + 48)];
  if (v14)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v8, enum case for FMIPPlaySoundChannels.case(_:), v2);
    v35 = *(_QWORD *)(v14 + 16);
    if (v35)
    {
      v30 = v12;
      v31 = v1;
      v15 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v34 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
      v34(v6, v14 + v15, v2);
      v16 = sub_100008000(&qword_1005D7308, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
      swift_bridgeObjectRetain(v14);
      v33 = v16;
      v17 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v16);
      v18 = *(void (**)(char *, uint64_t))(v3 + 8);
      v18(v6, v2);
      if ((v17 & 1) != 0)
      {
LABEL_5:
        v18(v8, v2);
        swift_bridgeObjectRelease(v14);
        sub_10004FCB8((uint64_t)v11, type metadata accessor for FMDeviceDetailViewModel);
        return;
      }
      if (v35 != 1)
      {
        v32 = *(_QWORD *)(v3 + 72);
        v12 = v14 + v32 + v15;
        v1 = 1;
        while (1)
        {
          v34(v6, v12, v2);
          v20 = v1 + 1;
          if (__OFADD__(v1, 1))
            break;
          v21 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v33);
          v18(v6, v2);
          if ((v21 & 1) != 0)
            goto LABEL_5;
          ++v1;
          v12 += v32;
          if (v20 == v35)
            goto LABEL_12;
        }
        __break(1u);
        goto LABEL_20;
      }
LABEL_12:
      v12 = v30;
      v1 = v31;
    }
    else
    {
      v18 = *(void (**)(char *, uint64_t))(v3 + 8);
      v19 = swift_bridgeObjectRetain(v14);
    }
    ((void (*)(char *, uint64_t, __n128))v18)(v8, v2, v19);
    swift_bridgeObjectRelease(v14);
  }
  sub_10004FCB8((uint64_t)v11, type metadata accessor for FMDeviceDetailViewModel);
  if (qword_1005D1DE8 != -1)
LABEL_20:
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v22 = type metadata accessor for Logger(0);
  v23 = sub_100056D88(v22, (uint64_t)qword_1005F5748);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMDeviceDetailContentViewController: Queue sound pending", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }

  v27 = objc_msgSend((id)objc_opt_self(NSTimer), "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:", v1, "showSoundPending", 0, 0, 5.0);
  v28 = *(void **)(v1 + v12);
  *(_QWORD *)(v1 + v12) = v27;

}

void sub_1001B6FD8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  _QWORD v14[5];
  uint64_t v15;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingTimer;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingTimer], "invalidate");
  v3 = *(void **)&v1[v2];
  *(_QWORD *)&v1[v2] = 0;

  if ((*(_BYTE *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingAttention]
                 + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_collapsed) & 1) == 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100056D88(v4, (uint64_t)qword_1005F5748);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMDeviceDetailContentViewController: Hide sound pending", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_10054BD50, 24, 7);
    *(_QWORD *)(v10 + 16) = v1;
    v14[4] = sub_1001D4A60;
    v15 = v10;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_100037DF8;
    v14[3] = &unk_10054BD68;
    v11 = _Block_copy(v14);
    v12 = v15;
    v13 = v1;
    swift_release(v12);
    objc_msgSend(v9, "animateWithDuration:animations:", v11, 0.3);
    _Block_release(v11);
  }
}

void sub_1001B7198()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;

  if (*(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingAttention]
                + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_collapsed) == 1)
  {
    v1 = v0;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMDeviceDetailContentViewController: Show sound pending", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

    v7 = (void *)objc_opt_self(UIView);
    v8 = swift_allocObject(&unk_10054BD00, 24, 7);
    *(_QWORD *)(v8 + 16) = v1;
    v12[4] = sub_1001D4A5C;
    v13 = v8;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100037DF8;
    v12[3] = &unk_10054BD18;
    v9 = _Block_copy(v12);
    v10 = v13;
    v11 = v1;
    swift_release(v10);
    objc_msgSend(v7, "animateWithDuration:delay:options:animations:completion:", 4, v9, 0, 0.3, 0.0);
    _Block_release(v9);
  }
}

uint64_t sub_1001B7378()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  Swift::String v28;
  Swift::String_optional v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  void *v40;
  uint64_t v41;
  id v42;
  char *v43;
  id v44;
  void *v45;
  id v46;
  Swift::String v47;
  Swift::String_optional v48;
  Swift::String v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  NSString v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  void *v69;
  void *v70;
  id v71;
  id v72;
  Swift::String v73;
  Swift::String_optional v74;
  Swift::String v75;
  Swift::String v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSString v87;
  char *v88;
  id v89;
  Swift::String v90;
  Swift::String_optional v91;
  Swift::String v92;
  Swift::String v93;
  Swift::String *v94;
  uint64_t v95;
  unint64_t v96;
  void *v97;
  void *object;
  NSString v99;
  _BYTE *v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  __n128 v106;
  uint64_t v107;
  char *v108;
  uint64_t (*v109)(char *, char *, uint64_t, __n128);
  __n128 v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  void (*v120)(char *, uint64_t);
  uint64_t v121;
  uint64_t v122;
  __n128 v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  BOOL v127;
  char v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t *v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  void *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD aBlock[5];
  uint64_t v174;
  Swift::String v175;
  Swift::String v176;
  Swift::String v177;
  Swift::String v178;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v146 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMIPDeviceState(0);
  v170 = *(_QWORD *)(v10 - 8);
  v171 = v10;
  v11 = __chkstk_darwin(v10);
  v169 = (char *)&v146 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v168 = (char *)&v146 - v13;
  v167 = type metadata accessor for FMIPDevice(0);
  v172 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v155 = (char *)&v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100053F2C(&qword_1005D6710);
  v157 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v159 = v17;
  v160 = (uint64_t)&v146 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v166 = (uint64_t)&v146 - v18;
  v19 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v19);
  v21 = (char *)&v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v20) = v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showSeparationAttention];
  v164 = v5;
  v165 = v3;
  v162 = v7;
  v163 = v6;
  v161 = v9;
  if ((_DWORD)v20 == 1)
  {
    v22 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAttention;
    v23 = *(char **)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAttention];
    if (v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocationAdded] == 1)
    {
      v156 = v2;
      v24 = *(void **)&v23[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label];
      v25 = (void *)objc_opt_self(NSBundle);
      v153 = v25;
      v26 = v24;
      v27 = objc_msgSend(v25, "mainBundle");
      v175._countAndFlagsBits = 0xD00000000000001BLL;
      v152 = 0xD00000000000001BLL;
      v28._countAndFlagsBits = 0xD000000000000023;
      v175._object = (void *)0x80000001004A91F0;
      v28._object = (void *)0x80000001004B2620;
      v29.value._object = (void *)0x80000001004A91D0;
      v147 = 0x80000001004A91D0;
      v29.value._countAndFlagsBits = 0xD000000000000016;
      v30._countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v175);

      v151 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
      v32 = swift_allocObject(v151, 72, 7);
      v150 = xmmword_100481740;
      *(_OWORD *)(v32 + 16) = xmmword_100481740;
      v149 = (uint64_t *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAddress];
      v33 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAddress];
      v34 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAddress + 8];
      *(_QWORD *)(v32 + 56) = &type metadata for String;
      v148 = sub_100071E88();
      *(_QWORD *)(v32 + 64) = v148;
      if (v34)
        v35 = v33;
      else
        v35 = 0;
      v36 = 0xE000000000000000;
      if (v34)
        v36 = v34;
      *(_QWORD *)(v32 + 32) = v35;
      *(_QWORD *)(v32 + 40) = v36;
      swift_bridgeObjectRetain(v34);
      String.init(format:_:)(v31._countAndFlagsBits, v31._object, v32);
      v38 = v37;
      swift_bridgeObjectRelease(v31._object);
      v39 = String._bridgeToObjectiveC()();
      objc_msgSend(v26, "setText:", v39, swift_bridgeObjectRelease(v38).n128_f64[0]);

      v40 = *(void **)&v1[v22];
      v41 = type metadata accessor for FMPlatterIcon(0);
      swift_storeEnumTagMultiPayload(v21, v41, 23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v21, 0, 1, v41);
      v42 = v40;
      sub_1002C0C88((uint64_t)v21);

      v158 = v1;
      v43 = (char *)*(id *)&v1[v22];
      v44 = v153;
      v45 = (void *)v147;
      v46 = objc_msgSend(v153, "mainBundle");
      v47._countAndFlagsBits = 0xD000000000000026;
      v154 = (void *)0x80000001004A91F0;
      v176._object = (void *)0x80000001004A91F0;
      v47._object = (void *)0x80000001004B2650;
      v48.value._countAndFlagsBits = 0xD000000000000016;
      v48.value._object = v45;
      v49._countAndFlagsBits = 0;
      v49._object = (void *)0xE000000000000000;
      v176._countAndFlagsBits = v152;
      v50 = v152;
      v51 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, v48, (NSBundle)v46, v49, v176);

      v52 = swift_allocObject(v151, 72, 7);
      *(_OWORD *)(v52 + 16) = v150;
      v54 = *v149;
      v53 = v149[1];
      v55 = v148;
      *(_QWORD *)(v52 + 56) = &type metadata for String;
      *(_QWORD *)(v52 + 64) = v55;
      if (!v53)
        v54 = 0;
      v56 = 0xE000000000000000;
      if (v53)
        v56 = v53;
      *(_QWORD *)(v52 + 32) = v54;
      *(_QWORD *)(v52 + 40) = v56;
      swift_bridgeObjectRetain(v53);
      v57 = String.init(format:_:)(v51._countAndFlagsBits, v51._object, v52);
      v59 = v58;
      swift_bridgeObjectRelease(v51._object);
      v60 = (uint64_t *)&v43[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle];
      v61 = *(_QWORD *)&v43[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle + 8];
      *v60 = v57;
      v60[1] = v59;
      v62 = swift_bridgeObjectRelease(v61).n128_u64[0];
      v63 = *(void **)&v43[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel];
      v64 = v60[1];
      if (v64)
      {
        swift_bridgeObjectRetain(v60[1]);
        v65 = String._bridgeToObjectiveC()();
        v62 = swift_bridgeObjectRelease(v64).n128_u64[0];
      }
      else
      {
        v65 = 0;
      }
      v68 = v167;
      objc_msgSend(v63, "setText:", v65, *(double *)&v62);

      v88 = (char *)*(id *)&v158[v22];
      v89 = objc_msgSend(v44, "mainBundle");
      v90._countAndFlagsBits = 0xD00000000000002ALL;
      v178._object = v154;
      v90._object = (void *)0x80000001004B2680;
      v91.value._countAndFlagsBits = 0xD000000000000016;
      v91.value._object = v45;
      v92._countAndFlagsBits = 0;
      v92._object = (void *)0xE000000000000000;
      v178._countAndFlagsBits = v50;
      v93 = NSLocalizedString(_:tableName:bundle:value:comment:)(v90, v91, (NSBundle)v89, v92, v178);

      v94 = (Swift::String *)&v88[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle];
      v95 = *(_QWORD *)&v88[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle + 8];
      *v94 = v93;
      v96 = swift_bridgeObjectRelease(v95).n128_u64[0];
      v97 = *(void **)&v88[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionLabel];
      object = v94->_object;
      v2 = v156;
      if (object)
      {
        swift_bridgeObjectRetain(v94->_object);
        v99 = String._bridgeToObjectiveC()();
        v96 = swift_bridgeObjectRelease(object).n128_u64[0];
      }
      else
      {
        v99 = 0;
      }
      objc_msgSend(v97, "setText:", v99, *(double *)&v96);

      v80 = v158;
    }
    else
    {
      objc_msgSend(v23, "setUserInteractionEnabled:", 1);
      v69 = *(void **)(*(_QWORD *)&v1[v22] + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label);
      v70 = (void *)objc_opt_self(NSBundle);
      v71 = v69;
      v72 = objc_msgSend(v70, "mainBundle");
      v177._countAndFlagsBits = 0xD00000000000001BLL;
      v73._countAndFlagsBits = 0xD00000000000001DLL;
      v177._object = (void *)0x80000001004A91F0;
      v73._object = (void *)0x80000001004B2600;
      v74.value._object = (void *)0x80000001004A91D0;
      v74.value._countAndFlagsBits = 0xD000000000000016;
      v75._countAndFlagsBits = 0;
      v75._object = (void *)0xE000000000000000;
      v76 = NSLocalizedString(_:tableName:bundle:value:comment:)(v73, v74, (NSBundle)v72, v75, v177);

      v77 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
      v78 = swift_allocObject(v77, 72, 7);
      *(_OWORD *)(v78 + 16) = xmmword_100481740;
      v79 = v2;
      v80 = v1;
      v81 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAddress];
      v82 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAddress + 8];
      *(_QWORD *)(v78 + 56) = &type metadata for String;
      *(_QWORD *)(v78 + 64) = sub_100071E88();
      if (v82)
        v83 = v81;
      else
        v83 = 0;
      v2 = v79;
      v84 = 0xE000000000000000;
      if (v82)
        v84 = v82;
      *(_QWORD *)(v78 + 32) = v83;
      *(_QWORD *)(v78 + 40) = v84;
      swift_bridgeObjectRetain(v82);
      String.init(format:_:)(v76._countAndFlagsBits, v76._object, v78);
      v86 = v85;
      swift_bridgeObjectRelease(v76._object);
      v87 = String._bridgeToObjectiveC()();
      objc_msgSend(v71, "setText:", v87, swift_bridgeObjectRelease(v86).n128_f64[0]);

      v68 = v167;
    }
    v100 = *(_BYTE **)&v80[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAttention];
    v100[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed] = 0;
    v101 = v100;
    sub_1002C0DEC();

    v1 = v80;
  }
  else
  {
    v66 = *(_BYTE **)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAttention];
    v66[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed] = 1;
    v67 = v66;
    sub_1002C0DEC();

    v68 = v167;
  }
  v102 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v103 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
  v104 = swift_retain(v103);
  v105 = (_QWORD *)FMIPManager.devices.getter(v104);
  v106 = swift_release(v103);
  v107 = v105[2];
  if (v107)
  {
    v154 = (void *)v102;
    v158 = v1;
    v156 = v2;
    v108 = (char *)v105
         + ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80));
    v167 = *(_QWORD *)(v172 + 72);
    v109 = *(uint64_t (**)(char *, char *, uint64_t, __n128))(v172 + 16);
    v153 = v105;
    v110 = swift_bridgeObjectRetain(v105);
    v111 = v155;
    v113 = v168;
    v112 = v169;
    v114 = v171;
    while (1)
    {
      v115 = v109(v111, v108, v68, v110);
      v116 = FMIPDevice.state.getter(v115);
      static FMIPDeviceState.isThisDevice.getter(v116);
      v117 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
      v118 = dispatch thunk of SetAlgebra.isSuperset(of:)(v112, v114, v117);
      v119 = v68;
      v120 = *(void (**)(char *, uint64_t))(v170 + 8);
      v120(v112, v114);
      v120(v113, v114);
      if ((v118 & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t))(v172 + 8))(v111, v119);
      v108 += v167;
      --v107;
      v68 = v119;
      if (!v107)
      {
        v105 = v153;
        v106 = swift_bridgeObjectRelease(v153);
        v121 = 1;
        v2 = v156;
        v1 = v158;
        v122 = v157;
        goto LABEL_34;
      }
    }
    v105 = v153;
    v123 = swift_bridgeObjectRelease(v153);
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v172 + 32))(v166, v111, v119, v123);
    v121 = 0;
    v2 = v156;
    v1 = v158;
    v122 = v157;
    v68 = v119;
LABEL_34:
    v102 = (uint64_t)v154;
  }
  else
  {
    v121 = 1;
    v122 = v157;
  }
  v124 = v166;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v172 + 56))(v166, v121, 1, v68, v106);
  swift_bridgeObjectRelease(v105);
  v125 = *(id *)(*(_QWORD *)&v1[v102] + 16);
  v126 = sub_100377758();

  v127 = (v126 & 0xFFFFFFFFFFFFFFFDLL) == 1;
  v128 = sub_10037A9B0();
  v129 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v130 = (void *)static OS_dispatch_queue.main.getter(v129);
  v131 = v160;
  sub_100007464(v124, v160, &qword_1005D6710);
  v132 = *(unsigned __int8 *)(v122 + 80);
  v133 = (v132 + 25) & ~v132;
  v134 = v133 + v159;
  v135 = swift_allocObject(&unk_10054BCB0, v133 + v159 + 1, v132 | 7);
  *(_QWORD *)(v135 + 16) = v1;
  *(_BYTE *)(v135 + 24) = v127;
  sub_10005DAA0(v131, v135 + v133, &qword_1005D6710);
  *(_BYTE *)(v135 + v134) = v128 & 1;
  aBlock[4] = sub_1001D4A18;
  v174 = v135;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10054BCC8;
  v136 = _Block_copy(aBlock);
  v137 = v174;
  v138 = v1;
  swift_release(v137);
  v139 = v161;
  static DispatchQoS.unspecified.getter(v140);
  aBlock[0] = _swiftEmptyArrayStorage;
  v141 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v142 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v143 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  v144 = v164;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v142, v143, v2, v141);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v139, v144, v136);
  _Block_release(v136);

  (*(void (**)(char *, uint64_t))(v165 + 8))(v144, v2);
  (*(void (**)(char *, uint64_t))(v162 + 8))(v139, v163);
  return sub_1000051EC(v166, &qword_1005D6710);
}

void sub_1001B801C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v8;
  _BYTE *v9;
  void *v10;
  void *v11;
  _BYTE *v12;
  id v13;
  char *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v8 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView;
  v9 = *(_BYTE **)(a1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView);
  v9[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_disabled] = a2;
  v10 = *(void **)&v9[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel];
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v9;
  v13 = objc_msgSend(v11, "labelColor");
  objc_msgSend(v10, "setTextColor:", v13);

  if ((a2 & 1) != 0)
  {
    objc_msgSend(v10, "setAlpha:", 0.35);

    v14 = (char *)*(id *)(a1 + v8);
    v15 = sub_1001DE71C(0xD000000000000026, 0x80000001004AC030, a3);
    v17 = v16;
    v19 = v18;
    v21 = v20;
    swift_bridgeObjectRetain(v20);
    v22 = sub_1001DDC8C(v15, v17, v19, v21, 0, 0);
    v24 = v23;
    swift_bridgeObjectRelease_n(v21, 2);
    swift_bridgeObjectRelease(v17);
    v25 = String.init(format:_:)(v22, v24, _swiftEmptyArrayStorage);
    v27 = v26;
    swift_bridgeObjectRelease(v24);
  }
  else
  {
    objc_msgSend(v10, "setAlpha:", 1.0);

    v14 = (char *)*(id *)(a1 + v8);
    v25 = 0;
    v27 = 0xE000000000000000;
  }
  v28 = (uint64_t *)&v14[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitle];
  v29 = *(_QWORD *)&v14[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitle + 8];
  *v28 = v25;
  v28[1] = v27;
  swift_bridgeObjectRelease(v29);
  sub_1003A6BB4();

  *(_BYTE *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsOffAttention)
           + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed) = a4 & 1 | ((a2 & 1) == 0);
  sub_1002C0DEC();
}

void sub_1001B820C(unint64_t a1, NSObject *a2, int a3, void (*a4)(_QWORD, _QWORD))
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void (*v46)(_QWORD, _QWORD);
  uint64_t v47;
  uint64_t v48;
  os_log_type_t v49;
  uint8_t *v50;
  NSObject *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  void (*v59)(char *, _QWORD, uint64_t);
  NSObject *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  __n128 v65;
  void (*v66)(char *, _QWORD, uint64_t);
  int v67;
  char *v68;
  void (*v69)(char *, _QWORD, uint64_t);
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  __n128 v73;
  char *v74;
  char *v75;
  char v76;
  char *v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  void (*v83)(_QWORD, _QWORD);
  uint64_t v84;
  NSObject *v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  __n128 v96;
  void (*v97)(char *, uint64_t, __n128);
  void (*v98)(_QWORD, _QWORD);
  char *v99;
  uint64_t *v100;
  NSObject *v101;
  uint64_t v102;
  void (*v103)(char *, _QWORD, uint64_t);
  char v104;
  void (*v105)(uint64_t *, _QWORD);
  unsigned int (*v106)(uint64_t, uint64_t, uint64_t);
  char *v107;
  void (*v108)(uint64_t *, _QWORD);
  uint64_t v109;
  char v110;
  void (*v111)(uint64_t *, _QWORD);
  char *v112;
  uint64_t v113;
  void (*v114)(uint64_t *, _QWORD);
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unsigned int (*v121)(char *, uint64_t, uint64_t);
  int v122;
  uint8_t *v123;
  unint64_t v124;
  char *v125;
  void (*v126)(_QWORD, _QWORD);
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  NSObject *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t *v142;
  NSObject *isa;
  uint64_t v144;
  uint64_t v145[4];
  uint64_t v146;
  char v147[8];

  LODWORD(v5) = a3;
  v8 = type metadata accessor for FMIPPlaySoundMethod(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v132 = (char *)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v133 = (char *)&v116 - v12;
  v13 = type metadata accessor for FMIPPlaySoundChannels(0);
  v128 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v140 = (char *)&v116 - v18;
  v19 = __chkstk_darwin(v17);
  v139 = (char *)&v116 - v20;
  v21 = __chkstk_darwin(v19);
  v141 = (char *)&v116 - v22;
  v23 = __chkstk_darwin(v21);
  v135 = (char *)&v116 - v24;
  __chkstk_darwin(v23);
  v136 = (char *)&v116 - v25;
  v142 = (uint64_t *)type metadata accessor for FMIPAirPodsPlaySoundType(0);
  v127 = (char *)*(v142 - 1);
  __chkstk_darwin(v142);
  v27 = (char *)&v116 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100053F2C(&qword_1005D9940);
  v29 = __chkstk_darwin(v28);
  __chkstk_darwin(v29);
  v32 = (char *)&v116 - v31;
  isa = a2[2].isa;
  if (!isa)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v47 = type metadata accessor for Logger(0);
    v48 = sub_100056D88(v47, (uint64_t)qword_1005F5748);
    isa = Logger.logObject.getter(v48);
    v49 = static os_log_type_t.default.getter(isa);
    if (os_log_type_enabled(isa, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, isa, v49, "FMDeviceDetailContentViewController: updatePlaySoundAnalytics. empty channels, skipping", v50, 2u);
      swift_slowDealloc(v50, -1, -1);
    }

    return;
  }
  v125 = v27;
  v138 = v16;
  v120 = v30;
  if (qword_1005D1DE8 != -1)
    goto LABEL_65;
  while (1)
  {
    v33 = type metadata accessor for Logger(0);
    v34 = sub_100056D88(v33, (uint64_t)qword_1005F5748);
    v35 = swift_bridgeObjectRetain_n(a2, 2);
    v131 = v34;
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter(v36);
    v38 = os_log_type_enabled(v36, v37);
    v130 = v8;
    v129 = v9;
    v137 = a2;
    v126 = a4;
    v122 = (int)v5;
    if (v38)
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = swift_slowAlloc(32, -1);
      v145[0] = v40;
      v41 = a1;
      *(_DWORD *)v39 = 136315138;
      v123 = v39 + 4;
      swift_bridgeObjectRetain(v137);
      v42 = Array.description.getter(v137, v13);
      v44 = v43;
      swift_bridgeObjectRelease(v137);
      v45 = v42;
      v9 = v129;
      v146 = sub_100056DA0(v45, v44, v145);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v146, v147);
      swift_bridgeObjectRelease_n(v137, 2);
      swift_bridgeObjectRelease(v44);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "FMDeviceDetailContentViewController: updatePlaySoundAnalytics. Channels: %s", v39, 0xCu);
      swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      v46 = v126;
      v8 = v130;
      swift_slowDealloc(v39, -1, -1);

    }
    else
    {
      v51 = a2;
      v41 = a1;
      v46 = a4;

      swift_bridgeObjectRelease_n(v51, 2);
    }
    v52 = v134 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingPlaySoundAnalytics;
    swift_beginAccess(v134 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingPlaySoundAnalytics, &v146, 0, 0);
    v119 = v52;
    sub_100007464(v52, (uint64_t)v32, &qword_1005D9940);
    v53 = type metadata accessor for FMIPAirPodsPlaySoundEvent(0);
    v118 = *(_QWORD *)(v53 - 8);
    v121 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48);
    LODWORD(v52) = v121(v32, 1, v53);
    v54 = sub_1000051EC((uint64_t)v32, &qword_1005D9940);
    v124 = v41;
    v123 = (uint8_t *)v53;
    if ((_DWORD)v52 != 1)
      break;
    v55 = Logger.logObject.getter(v54);
    v56 = static os_log_type_t.default.getter(v55);
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v57 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "FMDeviceDetailContentViewController: updatePlaySoundAnalytics: creating new event", v57, 2u);
      swift_slowDealloc(v57, -1, -1);
    }

    (*((void (**)(char *, _QWORD, uint64_t *))v127 + 13))(v125, enum case for FMIPAirPodsPlaySoundType.owner(_:), v142);
    v58 = v128;
    v59 = *(void (**)(char *, _QWORD, uint64_t))(v128 + 104);
    v5 = v136;
    v59(v136, enum case for FMIPPlaySoundChannels.case(_:), v13);
    v60 = v137;
    v117 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    v61 = (char *)v137 + v117;
    v62 = v135;
    v142 = *(uint64_t **)(v58 + 16);
    ((void (*)(char *, char *, uint64_t))v142)(v135, (char *)v137 + v117, v13);
    v32 = (char *)sub_100008000(&qword_1005D7308, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
    swift_bridgeObjectRetain(v60);
    v63 = v62;
    LODWORD(v5) = dispatch thunk of static Equatable.== infix(_:_:)(v62, v5, v13, v32);
    a4 = *(void (**)(_QWORD, _QWORD))(v58 + 8);
    a4(v62, v13);
    v64 = v139;
    v127 = v61;
    if ((v5 & 1) != 0)
    {
      v65 = swift_bridgeObjectRelease(v60);
      LODWORD(v135) = 1;
    }
    else
    {
      if (isa != 1)
      {
        v66 = v59;
        v9 = *(_QWORD *)(v128 + 72);
        a1 = (unint64_t)v60 + v9 + v117;
        v8 = 1;
        while (1)
        {
          ((void (*)(char *, unint64_t, uint64_t))v142)(v63, a1, v13);
          a2 = (v8 + 1);
          if (__OFADD__(v8, 1))
            goto LABEL_64;
          v67 = dispatch thunk of static Equatable.== infix(_:_:)(v63, v136, v13, v32);
          v63 = v135;
          LODWORD(v5) = v67;
          a4(v135, v13);
          if ((v5 & 1) != 0)
            break;
          ++v8;
          a1 += v9;
          if (a2 == isa)
          {
            v60 = v137;
            v65 = swift_bridgeObjectRelease(v137);
            LODWORD(v135) = 0;
LABEL_24:
            v64 = v139;
            v59 = v66;
            v61 = v127;
            goto LABEL_25;
          }
        }
        v60 = v137;
        v65 = swift_bridgeObjectRelease(v137);
        LODWORD(v135) = 1;
        goto LABEL_24;
      }
      v65 = swift_bridgeObjectRelease(v60);
      LODWORD(v135) = 0;
    }
LABEL_25:
    ((void (*)(char *, uint64_t, __n128))a4)(v136, v13, v65);
    v68 = v141;
    v59(v141, enum case for FMIPPlaySoundChannels.left(_:), v13);
    ((void (*)(char *, char *, uint64_t))v142)(v64, v61, v13);
    swift_bridgeObjectRetain(v60);
    LOBYTE(v68) = dispatch thunk of static Equatable.== infix(_:_:)(v64, v68, v13, v32);
    a4(v64, v13);
    v69 = v59;
    if ((v68 & 1) != 0)
    {
      v9 = 1;
    }
    else
    {
      if (isa != 1)
      {
        v5 = *(char **)(v128 + 72);
        a1 = (unint64_t)&v5[v117 + (_QWORD)v60];
        v8 = 1;
        while (1)
        {
          v9 = (uint64_t)v139;
          ((void (*)(char *, unint64_t, uint64_t))v142)(v139, a1, v13);
          a2 = (v8 + 1);
          if (__OFADD__(v8, 1))
            break;
          v70 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v141, v13, v32);
          v71 = v9;
          v9 = v70;
          a4(v71, v13);
          if ((v9 & 1) == 0)
          {
            ++v8;
            a1 += (unint64_t)v5;
            if (a2 != isa)
              continue;
          }
          goto LABEL_33;
        }
        __break(1u);
        goto LABEL_63;
      }
      v9 = 0;
    }
LABEL_33:
    v72 = v137;
    v73 = swift_bridgeObjectRelease(v137);
    ((void (*)(char *, uint64_t, __n128))a4)(v141, v13, v73);
    v74 = v140;
    v69(v140, enum case for FMIPPlaySoundChannels.right(_:), v13);
    v75 = v138;
    ((void (*)(char *, char *, uint64_t))v142)(v138, v127, v13);
    swift_bridgeObjectRetain(v72);
    LOBYTE(v74) = dispatch thunk of static Equatable.== infix(_:_:)(v75, v74, v13, v32);
    a4(v75, v13);
    if ((v74 & 1) != 0)
    {
      v76 = 1;
LABEL_41:
      v78 = swift_bridgeObjectRelease(v137);
      ((void (*)(char *, uint64_t, __n128))a4)(v140, v13, v78);
      v79 = v120;
      FMIPAirPodsPlaySoundEvent.init(soundEventType:includedCase:includedLeftBud:includedRightBud:onlinePlaySoundAttempted:onlinePlaySoundSuccess:onlinePlaySoundError:offlinePlaySoundAttempted:offlinePlaySoundSuccess:offlinePlaySoundError:userShownPlayingState:userShownFinishedPlayingState:)(v125, v135, v9 & 1, v76 & 1, 0, 2, 0, 0, 2, 0, 0);
      v53 = (uint64_t)v123;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint8_t *))(v118 + 56))(v79, 0, 1, v123);
      v80 = v119;
      swift_beginAccess(v119, v145, 33, 0);
      sub_100099CDC(v79, v80, &qword_1005D9940);
      swift_endAccess(v145);
      v46 = v126;
      v41 = v124;
      v8 = v130;
      v9 = v129;
      break;
    }
    if (isa == 1)
    {
      v76 = 0;
      goto LABEL_41;
    }
    v5 = *(char **)(v128 + 72);
    a1 = (unint64_t)&v5[v117 + (_QWORD)v72];
    v8 = 1;
    v77 = v138;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v142)(v77, a1, v13);
      a2 = (v8 + 1);
      if (__OFADD__(v8, 1))
        break;
      v76 = dispatch thunk of static Equatable.== infix(_:_:)(v77, v140, v13, v32);
      a4(v77, v13);
      if ((v76 & 1) == 0)
      {
        ++v8;
        a1 += (unint64_t)v5;
        if (a2 != isa)
          continue;
      }
      goto LABEL_41;
    }
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  }
  v81 = v133;
  v82 = v41;
  (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v133, v41, v8);
  v83 = v46;
  swift_errorRetain(v46);
  v84 = swift_errorRetain(v46);
  v85 = Logger.logObject.getter(v84);
  v86 = static os_log_type_t.default.getter(v85);
  if (os_log_type_enabled(v85, (os_log_type_t)v86))
  {
    LODWORD(v141) = v86;
    isa = v85;
    v87 = v8;
    v88 = swift_slowAlloc(28, -1);
    v142 = (uint64_t *)swift_slowAlloc(8, -1);
    v89 = swift_slowAlloc(32, -1);
    v145[0] = v89;
    *(_DWORD *)v88 = 136315650;
    v90 = sub_100008000(&qword_1005D9958, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundMethod, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundMethod);
    v91 = dispatch thunk of CustomStringConvertible.description.getter(v87, v90);
    v93 = v92;
    v144 = sub_100056DA0(v91, v92, v145);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, v145);
    v94 = v93;
    v95 = (uint64_t)v46;
    v96 = swift_bridgeObjectRelease(v94);
    v97 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
    v97(v81, v87, v96);
    *(_WORD *)(v88 + 12) = 1024;
    LODWORD(v144) = v122 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, (char *)&v144 + 4);
    *(_WORD *)(v88 + 18) = 2112;
    if (v46)
    {
      swift_errorRetain(v46);
      v98 = v46;
      v95 = _swift_stdlib_bridgeErrorToNSError(v46);
      v144 = v95;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, v145);
    }
    else
    {
      v144 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, v145);
      v98 = 0;
    }
    v99 = v132;
    v100 = v142;
    *v142 = v95;
    swift_errorRelease(v98);
    swift_errorRelease(v98);
    v101 = isa;
    _os_log_impl((void *)&_mh_execute_header, isa, (os_log_type_t)v141, "FMDeviceDetailContentViewController: updatePlaySoundAnalytics: Updating event. Method: %s, success:%{BOOL}d, error:%@", (uint8_t *)v88, 0x1Cu);
    v102 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v100, 1, v102);
    swift_slowDealloc(v100, -1, -1);
    swift_arrayDestroy(v89, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v89, -1, -1);
    swift_slowDealloc(v88, -1, -1);

    v83 = v98;
    v82 = v124;
    v8 = v130;
    v9 = v129;
    v53 = (uint64_t)v123;
  }
  else
  {
    v97 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
    ((void (*)(char *, uint64_t))v97)(v81, v8);
    swift_errorRelease(v46);
    swift_errorRelease(v46);

    v99 = v132;
  }
  v103 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
  v103(v99, enum case for FMIPPlaySoundMethod.classic(_:), v8);
  v104 = static FMIPPlaySoundMethod.== infix(_:_:)(v82, v99);
  ((void (*)(char *, uint64_t))v97)(v99, v8);
  if ((v104 & 1) != 0)
  {
    v105 = (void (*)(uint64_t *, _QWORD))sub_100197CBC((uint64_t)v145);
    v106 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v121;
    if (!v121(v107, 1, v53))
      FMIPAirPodsPlaySoundEvent.onlinePlaySoundAttempted.setter(1);
    v105(v145, 0);
    v108 = (void (*)(uint64_t *, _QWORD))sub_100197CBC((uint64_t)v145);
    if (!v106(v109, 1, v53))
      FMIPAirPodsPlaySoundEvent.onlinePlaySoundSuccess.setter(v122 & 1);
    goto LABEL_58;
  }
  v103(v99, enum case for FMIPPlaySoundMethod.ble(_:), v8);
  v110 = static FMIPPlaySoundMethod.== infix(_:_:)(v82, v99);
  ((void (*)(char *, uint64_t))v97)(v99, v8);
  if ((v110 & 1) != 0)
  {
    v111 = (void (*)(uint64_t *, _QWORD))sub_100197CBC((uint64_t)v145);
    v106 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v121;
    if (!v121(v112, 1, v53))
      FMIPAirPodsPlaySoundEvent.offlinePlaySoundAttempted.setter(1);
    v111(v145, 0);
    v108 = (void (*)(uint64_t *, _QWORD))sub_100197CBC((uint64_t)v145);
    if (!v106(v113, 1, v53))
      FMIPAirPodsPlaySoundEvent.offlinePlaySoundSuccess.setter(v122 & 1);
LABEL_58:
    v108(v145, 0);
    v114 = (void (*)(uint64_t *, _QWORD))sub_100197CBC((uint64_t)v145);
    if (!v106(v115, 1, v53))
    {
      swift_errorRetain(v83);
      FMIPAirPodsPlaySoundEvent.onlinePlaySoundError.setter(v83);
    }
    v114(v145, 0);
  }
}

uint64_t sub_1001B91C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __n128 v29;
  void (*v30)(char *, uint64_t, __n128);
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint8_t *v35;
  os_log_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[3];
  char v42[24];

  v1 = sub_100053F2C(&qword_1005D9940);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v35 - v5;
  v7 = type metadata accessor for FMIPAirPodsPlaySoundEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v35 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v35 - v15;
  v17 = v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingPlaySoundAnalytics;
  swift_beginAccess(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingPlaySoundAnalytics, v42, 0, 0);
  sub_100007464(v17, (uint64_t)v6, &qword_1005D9940);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_1000051EC((uint64_t)v6, &qword_1005D9940);
  v39 = v0;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v6, v7);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v19 = type metadata accessor for Logger(0);
  sub_100056D88(v19, (uint64_t)qword_1005F5748);
  v20 = *(uint64_t (**)(char *, char *, uint64_t))(v8 + 16);
  v21 = v20(v14, v16, v7);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc(12, -1);
    v36 = v22;
    v25 = (uint8_t *)v24;
    v37 = swift_slowAlloc(32, -1);
    v41[0] = v37;
    v38 = v4;
    *(_DWORD *)v25 = 136315138;
    v35 = v25 + 4;
    v20(v11, v14, v7);
    v26 = String.init<A>(describing:)(v11, v7);
    v28 = v27;
    v40 = sub_100056DA0(v26, v27, v41);
    v4 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, v41);
    v29 = swift_bridgeObjectRelease(v28);
    v30 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
    v30(v14, v7, v29);
    v31 = v36;
    _os_log_impl((void *)&_mh_execute_header, v36, v23, "FMDeviceDetailContentViewController: sendPlaySoundAnalytics: %s", v25, 0xCu);
    v32 = v37;
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
    ((void (*)(char *, uint64_t))v30)(v14, v7);

  }
  v33 = *(_QWORD *)(*(_QWORD *)(v39 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 24);
  swift_retain(v33);
  FMIPManager.enqueue(airpodsPlaySoundEvent:)(v16);
  v34 = swift_release(v33);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56))(v4, 1, 1, v7, v34);
  swift_beginAccess(v17, v41, 33, 0);
  sub_100099CDC((uint64_t)v4, v17, &qword_1005D9940);
  swift_endAccess(v41);
  return ((uint64_t (*)(char *, uint64_t))v30)(v16, v7);
}

void sub_1001B9564()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50[24];
  char v51[32];
  char v52[24];

  v1 = v0;
  v2 = type metadata accessor for FMIPAnalyticsActionType(0);
  v48 = *(_QWORD *)(v2 - 8);
  v49 = v2;
  __chkstk_darwin(v2);
  v47 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v4);
  v46 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPDevice(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v44 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v45 = (char *)&v42 - v13;
  v43 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v14 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
  v15 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource;
  v16 = (uint64_t *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v16, v52, 0, 0);
  v17 = *v16;
  v18 = v16[1];
  swift_retain(v14);
  swift_bridgeObjectRetain(v18);
  v20 = FMIPManager.devices.getter(v19);
  swift_bridgeObjectRetain(v18);
  v21 = sub_100414D38(v20, v17, v18);
  swift_bridgeObjectRelease(v20);
  v22 = swift_bridgeObjectRelease(v18);
  if (v21[2])
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16))(v8, (unint64_t)v21+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v9, v22);
    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v23, 1, v9);
  swift_release(v14);
  swift_bridgeObjectRelease(v21);
  v24 = swift_bridgeObjectRelease(v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v24) == 1)
  {
    sub_1000051EC((uint64_t)v8, &qword_1005D6710);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_100056D88(v25, (uint64_t)qword_1005F5748);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "FMDeviceDetailContentViewController: cannot get direction for unknown device", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

  }
  else
  {
    v30 = (uint64_t)v45;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v45, v8, v9);
    v31 = *(_QWORD *)&v1[v15] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
    swift_beginAccess(v31, v51, 0, 0);
    v32 = type metadata accessor for FMDeviceDetailViewModel(0);
    v33 = v46;
    sub_100007464(v31 + *(int *)(v32 + 36), v46, (uint64_t *)&unk_1005D3AA0);
    v34 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v1[v43] + 24) + 32);
    swift_retain(v34);
    sub_1000B57A0(v30, v33, v1);
    swift_release(v34);
    v35 = *(_QWORD *)&v1[v15] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
    v36 = swift_beginAccess(v35, v50, 0, 0);
    v37 = (uint64_t)v44;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v44, v35, v9, v36);
    v39 = (uint64_t)v47;
    v38 = v48;
    v40 = v49;
    (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v47, enum case for FMIPAnalyticsActionType.directions(_:), v49);
    sub_1001C5D1C(v37, v39);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v40);
    v41 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v41(v37, v9);
    sub_1000051EC(v33, (uint64_t *)&unk_1005D3AA0);
    v41(v30, v9);
  }
}

void sub_1001B9A00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD *v59;
  __n128 v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char *v77;
  unsigned int *v78;
  void (*v79)(char *, _QWORD, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint8_t *v109;
  void *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  __n128 v115;
  uint64_t v116;
  uint64_t v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, int64_t);
  char *v122;
  int64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int64_t v127;
  char *v128;
  _QWORD *v129;
  int64_t v130;
  char *v131;
  char *v132;
  char v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  size_t v143;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  int64_t v148;
  uint64_t v149;
  char v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  char v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  size_t v168;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  _QWORD *v173;
  int64_t v174;
  char v175;
  char *v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  NSObject *v180;
  os_log_type_t v181;
  uint8_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  __n128 v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  _QWORD *v195;
  int64_t v196;
  uint64_t v197;
  _QWORD *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  id v212;
  _QWORD *v213;
  _QWORD *v214;
  char *v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _BYTE *v222;
  _BYTE *v223;
  uint64_t v224;
  uint64_t v225;
  id v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  void *v230;
  char *v231;
  uint64_t v232;
  __n128 v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  id v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  void (*v243)(char *, char *, uint64_t);
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  char *v258;
  char *v259;
  char *v260;
  uint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  __n128 v269;
  uint64_t v270;
  uint64_t (*v271)(char *, uint64_t);
  unsigned int (*v272)(uint64_t, uint64_t, _QWORD *);
  char *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  char *v280;
  char *v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  _BYTE *v290;
  uint64_t v291;
  uint64_t *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  char *v297;
  char *v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  char *v307;
  char *v308;
  char *v309;
  char *v310;
  uint64_t v311;
  char *v312;
  int *v313;
  char *v314;
  uint64_t v315;
  _QWORD *v316;
  uint64_t v317;
  void (*v318)(char *, uint64_t, __n128);
  char *v319;
  char *v320;
  _QWORD *v321;
  char v322[8];
  __int128 v323;
  __int128 v324;
  void *v325;
  char *v326;
  char v327[8];
  char v328[8];
  char v329[8];

  v1 = sub_100053F2C(&qword_1005D63F8);
  __chkstk_darwin(v1);
  v286 = (char *)&v270 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v284 = type metadata accessor for FMFindingProductType(0);
  v283 = *(_QWORD *)(v284 - 8);
  __chkstk_darwin(v284);
  v285 = (char *)&v270 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v289 = type metadata accessor for FMFindableObject(0);
  v288 = *(_QWORD *)(v289 - 8);
  __chkstk_darwin(v289);
  v287 = (char *)&v270 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  __chkstk_darwin(v5);
  v293 = (char *)&v270 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v305 = type metadata accessor for UUID(0);
  v294 = *(_QWORD *)(v305 - 8);
  v7 = __chkstk_darwin(v305);
  v282 = (char *)&v270 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v278 = (char *)&v270 - v10;
  v279 = v11;
  __chkstk_darwin(v9);
  v297 = (char *)&v270 - v12;
  v275 = type metadata accessor for FMIPAnalyticsActionType(0);
  v277 = *(_QWORD *)(v275 - 8);
  __chkstk_darwin(v275);
  v274 = (char *)&v270 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v302 = type metadata accessor for FMFindingTechnology(0);
  v301 = *(_QWORD *)(v302 - 8);
  v14 = __chkstk_darwin(v302);
  v281 = (char *)&v270 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v280 = (char *)&v270 - v17;
  v18 = __chkstk_darwin(v16);
  v296 = (char *)&v270 - v19;
  __chkstk_darwin(v18);
  v290 = (char *)&v270 - v20;
  v21 = sub_100053F2C(&qword_1005D72D0);
  v22 = __chkstk_darwin(v21);
  v318 = (void (*)(char *, uint64_t, __n128))((char *)&v270 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  v308 = (char *)&v270 - v24;
  v304 = type metadata accessor for FMIPItemGroup(0);
  v303 = *(_QWORD *)(v304 - 8);
  v25 = __chkstk_darwin(v304);
  v300 = (char *)&v270 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v298 = (char *)&v270 - v27;
  v28 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v29 = __chkstk_darwin(v28);
  v295 = (uint64_t)&v270 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v299 = (uint64_t)&v270 - v32;
  __chkstk_darwin(v31);
  v320 = (char *)&v270 - v33;
  v316 = (_QWORD *)type metadata accessor for FMIPItem(0);
  v317 = *(v316 - 1);
  __chkstk_darwin(v316);
  v307 = (char *)&v270 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v313 = (int *)type metadata accessor for FMDeviceDetailViewModel(0);
  v35 = __chkstk_darwin(v313);
  v319 = (char *)&v270 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v38 = (char *)&v270 - v37;
  v311 = type metadata accessor for FMExperienceType(0);
  v306 = *(_QWORD *)(v311 - 8);
  v39 = __chkstk_darwin(v311);
  v309 = (char *)&v270 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v310 = (char *)&v270 - v41;
  v291 = type metadata accessor for FindingMode(0);
  __chkstk_darwin(v291);
  v292 = (uint64_t *)((char *)&v270 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v43);
  v45 = (char *)&v270 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for FMIPDevice(0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = __chkstk_darwin(v46);
  v273 = (char *)&v270 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v312 = (char *)&v270 - v50;
  v51 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 24);
  v315 = v0;
  v314 = (char *)OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource;
  v52 = (uint64_t *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v52, v329, 0, 0);
  v53 = *v52;
  v54 = v52[1];
  swift_retain(v51);
  swift_bridgeObjectRetain(v54);
  v56 = FMIPManager.devices.getter(v55);
  swift_bridgeObjectRetain(v54);
  v57 = v53;
  v58 = 0;
  v59 = sub_100414D38(v56, v57, v54);
  swift_bridgeObjectRelease(v56);
  v60 = swift_bridgeObjectRelease(v54);
  if (v59[2])
  {
    (*(void (**)(char *, unint64_t, int64_t, __n128))(v47 + 16))(v45, (unint64_t)v59+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80)), v46, v60);
    v61 = 0;
  }
  else
  {
    v61 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, int64_t))(v47 + 56))(v45, v61, 1, v46);
  swift_release(v51);
  swift_bridgeObjectRelease(v59);
  v62 = swift_bridgeObjectRelease(v54);
  if ((*(unsigned int (**)(char *, uint64_t, int64_t, __n128))(v47 + 48))(v45, 1, v46, v62) != 1)
  {
    v276 = v47;
    (*(void (**)(char *, char *, int64_t))(v47 + 32))(v312, v45, v46);
    v68 = v315;
    v69 = *(_QWORD *)&v314[v315] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
    swift_beginAccess(v69, v328, 0, 0);
    v70 = sub_10004FC74(v69, (uint64_t)v38, type metadata accessor for FMDeviceDetailViewModel);
    if (*(_BYTE *)(v68 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isRangingAvailable) == 1)
    {
      __chkstk_darwin(v70);
      *(&v270 - 2) = (uint64_t)v71;
      v72 = v71;
      OS_dispatch_queue.sync<A>(execute:)(&v323, sub_10010C158, &v270 - 4, &type metadata for Bool);

      v73 = v323;
    }
    else
    {
      v73 = 1;
    }
    v74 = v317;
    v75 = (uint64_t)v320;
    type metadata accessor for FMConnectionManager(0);
    v76 = static FMConnectionManager.hostSupportsRanging.getter();
    v77 = &v38[v313[10]];
    if ((v77[8] & 1) != 0 || ((v77[1] & 4) == 0 || (v76 & 1) == 0) | v73 & 1)
      v78 = (unsigned int *)&enum case for FMExperienceType.bt(_:);
    else
      v78 = (unsigned int *)&enum case for FMExperienceType.r1(_:);
    v79 = *(void (**)(char *, _QWORD, uint64_t))(v306 + 104);
    v79(v310, *v78, v311);
    sub_10004FCB8((uint64_t)v38, type metadata accessor for FMDeviceDetailViewModel);
    v80 = *(_QWORD *)&v314[v315] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
    swift_beginAccess(v80, v327, 0, 0);
    v81 = v80;
    v82 = (uint64_t)v319;
    sub_10004FC74(v81, (uint64_t)v319, type metadata accessor for FMDeviceDetailViewModel);
    sub_100007464(v82 + v313[9], v75, (uint64_t *)&unk_1005D3AA0);
    sub_10004FCB8(v82, type metadata accessor for FMDeviceDetailViewModel);
    v83 = v316;
    v272 = *(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v74 + 48);
    if (v272(v75, 1, v316) == 1)
    {
      sub_1000051EC(v75, (uint64_t *)&unk_1005D3AA0);
    }
    else
    {
      v84 = v307;
      (*(void (**)(char *, uint64_t, _QWORD *))(v74 + 32))(v307, v75, v83);
      v85 = v309;
      v86 = v311;
      v79(v309, enum case for FMExperienceType.r1(_:), v311);
      v87 = v83;
      v88 = static FMExperienceType.== infix(_:_:)(v310, v85);
      v271 = *(uint64_t (**)(char *, uint64_t))(v306 + 8);
      v89 = v271(v85, v86);
      if ((v88 & 1) != 0)
      {
        v90 = (uint64_t)v308;
        FMIPDevice.itemGroup.getter(v89);
        v91 = v303;
        v92 = v304;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v90, 1, v304) == 1)
        {
          sub_1000051EC(v90, &qword_1005D72D0);
          v93 = v307;
          if (qword_1005D1DE8 != -1)
            swift_once(&qword_1005D1DE8, sub_100005ADC);
          v94 = type metadata accessor for Logger(0);
          v95 = sub_100056D88(v94, (uint64_t)qword_1005F5748);
          v96 = Logger.logObject.getter(v95);
          v97 = static os_log_type_t.error.getter(v96);
          if (os_log_type_enabled(v96, v97))
          {
            v98 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v98 = 0;
            _os_log_impl((void *)&_mh_execute_header, v96, v97, "FMDeviceDetailContentViewController: cannot start finding without item group", v98, 2u);
            swift_slowDealloc(v98, -1, -1);
          }

          (*(void (**)(char *, _QWORD *))(v74 + 8))(v93, v316);
          v271(v310, v311);
          goto LABEL_37;
        }
        v151 = 0;
        v293 = (char *)v46;
        v152 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v91 + 32))(v298, v90, v92);
        v153 = FMIPItemGroup.groupedItems.getter(v152);
        v154 = v153;
        v155 = *(char **)(v153 + 16);
        if (v155)
        {
          v326 = (char *)_swiftEmptyArrayStorage;
          sub_100112024(0, (int64_t)v155, 0);
          v156 = v326;
          v46 = sub_1000CBBF8(v154);
          v159 = v158 & 1;
          v305 = v154 + 56;
          v300 = (char *)v154;
          while ((v46 & 0x8000000000000000) == 0 && v46 < 1 << *(_BYTE *)(v154 + 32))
          {
            if (((*(_QWORD *)(v305 + (((unint64_t)v46 >> 3) & 0xFFFFFFFFFFFFF8)) >> v46) & 1) == 0)
              goto LABEL_108;
            if (*(_DWORD *)(v154 + 36) != (_DWORD)v157)
              goto LABEL_109;
            LODWORD(v313) = v159;
            v318 = (void (*)(char *, uint64_t, __n128))v157;
            v160 = *(_QWORD *)(*(_QWORD *)(v154 + 48) + 8 * v46);
            swift_bridgeObjectRetain_n(v160, 2);
            v161 = sub_1001CCC70(v160);
            v162 = *(_QWORD *)(v161 + 16);
            v319 = v155;
            if (v162)
            {
              v320 = v151;
              v163 = sub_100053F2C(&qword_1005D2C10);
              v164 = *(_QWORD *)(v74 + 72);
              v165 = *(unsigned __int8 *)(v74 + 80);
              v166 = (v165 + 32) & ~v165;
              v167 = (_QWORD *)swift_allocObject(v163, v166 + v164 * v162, v165 | 7);
              v168 = j__malloc_size(v167);
              if (!v164)
                goto LABEL_112;
              if (v168 - v166 == 0x8000000000000000 && v164 == -1)
              {
                __break(1u);
                goto LABEL_117;
              }
              v308 = v156;
              v167[2] = v162;
              v167[3] = 2 * ((uint64_t)(v168 - v166) / v164);
              v309 = (char *)sub_1003F07E0(&v323, (uint64_t)v167 + v166, v162, v161);
              v170 = v323;
              swift_bridgeObjectRetain(v161);
              sub_100073BB4(v170);
              if (v309 != (char *)v162)
                goto LABEL_113;
              swift_bridgeObjectRelease(v160);
              swift_release(v161);
              v151 = v320;
              v74 = v317;
              v156 = v308;
              v154 = (uint64_t)v300;
            }
            else
            {
              swift_bridgeObjectRelease(v160);
              swift_release(v161);
              v167 = _swiftEmptyArrayStorage;
            }
            v326 = v156;
            v172 = *((_QWORD *)v156 + 2);
            v171 = *((_QWORD *)v156 + 3);
            v173 = v316;
            if (v172 >= v171 >> 1)
            {
              sub_100112024(v171 > 1, v172 + 1, 1);
              v173 = v316;
              v156 = v326;
            }
            *((_QWORD *)v156 + 2) = v172 + 1;
            *(_QWORD *)&v156[8 * v172 + 32] = v167;
            v174 = sub_1001CD0D4(v46, (int)v318, v313 & 1, v154);
            v46 = v174;
            v159 = v175 & 1;
            v155 = v319 - 1;
            if (v319 == (char *)1)
            {
              sub_1000D04B4(v174, v157, v159);
              swift_bridgeObjectRelease(v154);
              goto LABEL_90;
            }
          }
          goto LABEL_107;
        }
        swift_bridgeObjectRelease(v153);
        v156 = (char *)_swiftEmptyArrayStorage;
        v173 = v316;
LABEL_90:
        v212 = objc_msgSend(objc_allocWithZone((Class)ARSession), "init");
        v320 = (char *)type metadata accessor for FMFindingSession(0);
        v213 = sub_1004626D0((uint64_t)v156);
        swift_bridgeObjectRelease(v156);
        *((_QWORD *)&v324 + 1) = v173;
        v325 = (void *)sub_100008000(&qword_1005D9948, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItem, (uint64_t)&protocol conformance descriptor for FMIPItem);
        v214 = sub_10003D370(&v323);
        v215 = v307;
        v216 = (*(uint64_t (**)(_QWORD *, char *, _QWORD *))(v74 + 16))(v214, v307, v173);
        v217 = v298;
        v218 = FMIPItemGroup.name.getter(v216);
        v220 = v219;
        v221 = sub_100053F2C(&qword_1005D63E8);
        v222 = v290;
        v223 = &v290[*(int *)(v221 + 48)];
        *v290 = 1;
        v224 = enum case for FMFindingType.owner(_:);
        v225 = type metadata accessor for FMFindingType(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v225 - 8) + 104))(v223, v224, v225);
        (*(void (**)(_BYTE *, _QWORD, uint64_t))(v301 + 104))(v222, enum case for FMFindingTechnology.precision(_:), v302);
        v226 = v212;
        v227 = FMFindingSession.__allocating_init(itemGroupFindables:primaryPart:groupName:findingTechnology:arSession:)(v213, &v323, v218, v220, v222, v212);
        if (!v151)
        {
          v228 = v227;
          v229 = v315;
          v230 = *(void **)(v315 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_itemConnectionManager);
          v211 = v293;
          v231 = v312;
          if (!v230)
          {

            v269 = swift_release(v228);
            (*(void (**)(char *, uint64_t, __n128))(v303 + 8))(v298, v304, v269);
            (*(void (**)(char *, _QWORD *))(v317 + 8))(v307, v316);
            v271(v310, v311);
            goto LABEL_101;
          }
          v210 = (uint64_t)v292;
          *v292 = v227;
          *(_QWORD *)(v210 + 8) = v230;
          swift_storeEnumTagMultiPayload(v210, v291, 3);
          v232 = *(_QWORD *)&v314[v229] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
          v233 = swift_beginAccess(v232, &v323, 0, 0);
          v234 = (uint64_t)v273;
          (*(void (**)(char *, uint64_t, char *, __n128))(v276 + 16))(v273, v232, v211, v233);
          v235 = (uint64_t)v274;
          v236 = v275;
          (*(void (**)(char *, _QWORD, uint64_t))(v277 + 104))(v274, enum case for FMIPAnalyticsActionType.precisionFind(_:), v275);
          v237 = v230;
          swift_retain(v228);
          sub_1001C5D1C(v234, v235);

          swift_release(v228);
          (*(void (**)(uint64_t, uint64_t))(v277 + 8))(v235, v236);
          (*(void (**)(uint64_t, char *))(v276 + 8))(v234, v211);
          (*(void (**)(char *, uint64_t))(v303 + 8))(v298, v304);
          (*(void (**)(char *, _QWORD *))(v317 + 8))(v307, v316);
LABEL_100:
          sub_10012D228(v210, v315);
          sub_1003A7E0C(v210);
          (*(void (**)(char *, uint64_t))(v306 + 8))(v310, v311);
          sub_10004FCB8(v210, type metadata accessor for FindingMode);
LABEL_101:
          v121 = *(void (**)(char *, int64_t))(v276 + 8);
          v122 = v231;
          v123 = (int64_t)v211;
          goto LABEL_102;
        }

        swift_errorRelease(v151);
        (*(void (**)(char *, uint64_t))(v303 + 8))(v217, v304);
        (*(void (**)(char *, _QWORD *))(v317 + 8))(v215, v316);
        v271(v310, v311);
        goto LABEL_97;
      }
      (*(void (**)(char *, _QWORD *))(v74 + 8))(v84, v87);
      v58 = 0;
    }
    v99 = v315;
    v100 = *(_QWORD *)&v314[v315] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
    swift_beginAccess(v100, &v326, 0, 0);
    v102 = (uint64_t)v318;
    if (*(_BYTE *)(v100 + v313[37]) == 1)
    {
      FMIPDevice.itemGroup.getter(v101);
      v103 = v303;
      v104 = v304;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v102, 1, v304) == 1)
      {
        sub_1000051EC(v102, &qword_1005D72D0);
        if (qword_1005D1DE8 != -1)
LABEL_117:
          swift_once(&qword_1005D1DE8, sub_100005ADC);
        v105 = type metadata accessor for Logger(0);
        v106 = sub_100056D88(v105, (uint64_t)qword_1005F5748);
        v107 = Logger.logObject.getter(v106);
        v108 = static os_log_type_t.error.getter(v107);
        if (os_log_type_enabled(v107, v108))
        {
          v109 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v109 = 0;
          _os_log_impl((void *)&_mh_execute_header, v107, v108, "FMDeviceDetailContentViewController: cannot start finding without item group", v109, 2u);
          swift_slowDealloc(v109, -1, -1);
        }

        goto LABEL_36;
      }
      v124 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v103 + 32))(v300, v102, v104);
      v125 = FMIPItemGroup.groupedItems.getter(v124);
      v126 = v125;
      v127 = *(_QWORD *)(v125 + 16);
      if (v127)
      {
        v293 = (char *)v46;
        v321 = _swiftEmptyArrayStorage;
        sub_100112024(0, v127, 0);
        v128 = (char *)v127;
        v129 = v321;
        v130 = sub_1000CBBF8(v126);
        v132 = v131;
        v134 = v133 & 1;
        v305 = v126 + 56;
        v298 = (char *)v126;
        while ((v130 & 0x8000000000000000) == 0 && v130 < 1 << *(_BYTE *)(v126 + 32))
        {
          if (((*(_QWORD *)(v305 + (((unint64_t)v130 >> 3) & 0xFFFFFFFFFFFFF8)) >> v130) & 1) == 0)
            goto LABEL_105;
          if (*(_DWORD *)(v126 + 36) != (_DWORD)v132)
            goto LABEL_106;
          LODWORD(v318) = v134;
          v135 = *(_QWORD *)(*(_QWORD *)(v126 + 48) + 8 * v130);
          swift_bridgeObjectRetain_n(v135, 2);
          v136 = sub_1001CCC70(v135);
          v137 = *(_QWORD *)(v136 + 16);
          v319 = v132;
          if (v137)
          {
            v309 = (char *)v135;
            v320 = v58;
            v138 = sub_100053F2C(&qword_1005D2C10);
            v139 = *(_QWORD *)(v74 + 72);
            v140 = *(unsigned __int8 *)(v74 + 80);
            v141 = (v140 + 32) & ~v140;
            v142 = (_QWORD *)swift_allocObject(v138, v141 + v139 * v137, v140 | 7);
            v143 = j__malloc_size(v142);
            if (!v139)
              goto LABEL_110;
            if (v143 - v141 == 0x8000000000000000 && v139 == -1)
              goto LABEL_114;
            v307 = v128;
            v142[2] = v137;
            v142[3] = 2 * ((uint64_t)(v143 - v141) / v139);
            v308 = (char *)sub_1003F07E0(&v323, (uint64_t)v142 + v141, v137, v136);
            v145 = v323;
            swift_bridgeObjectRetain(v136);
            sub_100073BB4(v145);
            if (v308 != (char *)v137)
              goto LABEL_111;
            swift_bridgeObjectRelease(v309);
            swift_release(v136);
            v58 = v320;
            v74 = v317;
            v126 = (uint64_t)v298;
            v128 = v307;
          }
          else
          {
            swift_bridgeObjectRelease(v135);
            swift_release(v136);
            v142 = _swiftEmptyArrayStorage;
          }
          v321 = v129;
          v147 = v129[2];
          v146 = v129[3];
          if (v147 >= v146 >> 1)
          {
            sub_100112024(v146 > 1, v147 + 1, 1);
            v129 = v321;
          }
          v129[2] = v147 + 1;
          v129[v147 + 4] = v142;
          v148 = sub_1001CD0D4(v130, (int)v319, v318 & 1, v126);
          v130 = v148;
          v132 = (char *)v149;
          v134 = v150 & 1;
          if (!--v128)
          {
            sub_1000D04B4(v148, v149, v134);
            swift_bridgeObjectRelease(v126);
            v46 = (int64_t)v293;
            goto LABEL_83;
          }
        }
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
        goto LABEL_115;
      }
      swift_bridgeObjectRelease(v125);
      v129 = _swiftEmptyArrayStorage;
LABEL_83:
      v191 = *(_QWORD *)&v314[v315] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
      swift_beginAccess(v191, &v321, 0, 0);
      v192 = v299;
      sub_100007464(v191 + v313[9], v299, (uint64_t *)&unk_1005D3AA0);
      v193 = sub_1004626D0((uint64_t)v129);
      swift_bridgeObjectRelease(v129);
      v194 = v295;
      sub_100007464(v192, v295, (uint64_t *)&unk_1005D3AA0);
      v195 = v316;
      if (v272(v194, 1, v316) == 1)
      {
        v196 = v46;
        sub_1000051EC(v194, (uint64_t *)&unk_1005D3AA0);
        v323 = 0u;
        v324 = 0u;
        v325 = 0;
      }
      else
      {
        v197 = v74;
        v196 = v46;
        *((_QWORD *)&v324 + 1) = v195;
        v325 = (void *)sub_100008000(&qword_1005D9948, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItem, (uint64_t)&protocol conformance descriptor for FMIPItem);
        v198 = sub_10003D370(&v323);
        (*(void (**)(_QWORD *, uint64_t, _QWORD *))(v197 + 32))(v198, v194, v195);
      }
      v199 = v300;
      v200 = type metadata accessor for FMFindingSession(0);
      v201 = FMIPItemGroup.name.getter(v200);
      v203 = v202;
      v204 = *(int *)(sub_100053F2C(&qword_1005D9938) + 48);
      v205 = enum case for FMFindingType.owner(_:);
      v206 = type metadata accessor for FMFindingType(0);
      v207 = v296;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v206 - 8) + 104))(v296, v205, v206);
      v207[v204] = 0;
      (*(void (**)(char *, _QWORD, uint64_t))(v301 + 104))(v207, enum case for FMFindingTechnology.proximity(_:), v302);
      v208 = FMFindingSession.__allocating_init(itemGroupFindables:primaryPart:groupName:findingTechnology:arSession:)(v193, &v323, v201, v203, v207, 0);
      if (v58)
      {
        swift_errorRelease(v58);
        sub_1000051EC(v299, (uint64_t *)&unk_1005D3AA0);
        (*(void (**)(char *, uint64_t))(v303 + 8))(v199, v304);
        (*(void (**)(char *, uint64_t))(v306 + 8))(v310, v311);
        (*(void (**)(char *, int64_t))(v276 + 8))(v312, v196);
        return;
      }
      v209 = v208;
      sub_1000051EC(v299, (uint64_t *)&unk_1005D3AA0);
      (*(void (**)(char *, uint64_t))(v303 + 8))(v199, v304);
      v210 = (uint64_t)v292;
      *v292 = v209;
      swift_storeEnumTagMultiPayload(v210, v291, 1);
      v211 = (char *)v196;
      goto LABEL_99;
    }
    v110 = *(void **)(v99 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_btDeviceDiscoveryToken);
    if (!v110)
    {
LABEL_36:
      (*(void (**)(char *, uint64_t))(v306 + 8))(v310, v311);
LABEL_37:
      v121 = *(void (**)(char *, int64_t))(v276 + 8);
      v122 = v312;
LABEL_38:
      v123 = v46;
LABEL_102:
      v121(v122, v123);
      return;
    }
    v320 = 0;
    v111 = v110;
    v112 = v312;
    v113 = FMIPDevice.baIdentifier.getter(v111);
    if (!v114)
    {

      (*(void (**)(char *, uint64_t))(v306 + 8))(v310, v311);
      v121 = *(void (**)(char *, int64_t))(v276 + 8);
      v122 = v112;
      goto LABEL_38;
    }
    v116 = v114;
    v117 = (uint64_t)v293;
    UUID.init(uuidString:)(v113, v114, v115);
    v118 = swift_bridgeObjectRelease(v116);
    v119 = v294;
    v120 = v305;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v294 + 48))(v117, 1, v305, v118) == 1)
    {

      (*(void (**)(char *, uint64_t))(v306 + 8))(v310, v311);
      (*(void (**)(char *, int64_t))(v276 + 8))(v312, v46);
      sub_1000051EC(v117, (uint64_t *)&unk_1005D53A0);
      return;
    }
    v319 = v111;
    v176 = v297;
    v317 = *(_QWORD *)(v119 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v317)(v297, v117, v120);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v293 = (char *)v46;
    v177 = type metadata accessor for Logger(0);
    sub_100056D88(v177, (uint64_t)qword_1005F5748);
    v178 = v278;
    v316 = *(_QWORD **)(v119 + 16);
    v179 = ((uint64_t (*)(char *, char *, uint64_t))v316)(v278, v176, v120);
    v180 = Logger.logObject.getter(v179);
    v181 = static os_log_type_t.default.getter(v180);
    if (os_log_type_enabled(v180, v181))
    {
      v182 = (uint8_t *)swift_slowAlloc(12, -1);
      v183 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v323 = v183;
      v184 = v120;
      *(_DWORD *)v182 = 136315138;
      v185 = sub_100008000((unint64_t *)&qword_1005DA7C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v186 = dispatch thunk of CustomStringConvertible.description.getter(v120, v185);
      v188 = v187;
      v321 = (_QWORD *)sub_100056DA0(v186, v187, (uint64_t *)&v323);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v321, v322);
      v189 = swift_bridgeObjectRelease(v188);
      v318 = *(void (**)(char *, uint64_t, __n128))(v119 + 8);
      v318(v178, v120, v189);
      _os_log_impl((void *)&_mh_execute_header, v180, v181, "FMDeviceDetailContentViewController: Find Button pressed, starting fast advertisement for device: %s.", v182, 0xCu);
      swift_arrayDestroy(v183, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v183, -1, -1);
      swift_slowDealloc(v182, -1, -1);

    }
    else
    {
      v318 = *(void (**)(char *, uint64_t, __n128))(v119 + 8);
      ((void (*)(char *, uint64_t))v318)(v178, v120);

      v184 = v120;
    }
    v314 = *(char **)(v315 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findingExperienceCoordinator);
    v238 = FMIPDevice.baIdentifier.getter(v190);
    v240 = v239;
    v241 = v282;
    v242 = v297;
    v243 = (void (*)(char *, char *, uint64_t))v316;
    ((void (*)(char *, char *, uint64_t))v316)(v282, v297, v184);
    v244 = *(unsigned __int8 *)(v119 + 80);
    v245 = (v244 + 16) & ~v244;
    v246 = swift_allocObject(&unk_10054BC88, v245 + v279, v244 | 7);
    ((void (*)(uint64_t, char *, uint64_t))v317)(v246 + v245, v241, v184);
    sub_100162F78(v238, v240, 1, (void (*)(char *, uint64_t))sub_1001D4928, v246);
    swift_release(v246);
    swift_bridgeObjectRelease(v240);
    v313 = (int *)FMIPDevice.name.getter(v247);
    v309 = v248;
    v243(v241, v242, v184);
    v249 = sub_100053F2C(&qword_1005D9938);
    v250 = *(int *)(v249 + 48);
    v251 = enum case for FMFindingType.device(_:);
    LODWORD(v317) = enum case for FMFindingType.device(_:);
    v252 = type metadata accessor for FMFindingType(0);
    v316 = *(_QWORD **)(*(_QWORD *)(v252 - 8) + 104);
    v253 = v280;
    ((void (*)(char *, uint64_t, uint64_t))v316)(v280, v251, v252);
    v253[v250] = 1;
    v254 = enum case for FMFindingTechnology.proximity(_:);
    v314 = *(char **)(v301 + 104);
    v255 = v302;
    ((void (*)(char *, _QWORD, uint64_t))v314)(v253, enum case for FMFindingTechnology.proximity(_:), v302);
    v256 = v285;
    (*(void (**)(char *, _QWORD, uint64_t))(v283 + 104))(v285, enum case for FMFindingProductType.device(_:), v284);
    v257 = type metadata accessor for FMFindingUIAVPlayerVideoInfo(0);
    v258 = v286;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v257 - 8) + 56))(v286, 1, 1, v257);
    v259 = v319;
    v260 = v287;
    FMFindableObject.init(name:findingIdentifier:findingTechnology:findingProductType:videoInfo:discoveryToken:)(v313, v309, v241, v253, v256, v258, v259);
    type metadata accessor for FMFindingSession(0);
    v261 = v289;
    *((_QWORD *)&v324 + 1) = v289;
    v325 = &protocol witness table for FMFindableObject;
    v262 = sub_10003D370(&v323);
    v263 = v288;
    (*(void (**)(_QWORD *, char *, uint64_t))(v288 + 16))(v262, v260, v261);
    v264 = *(int *)(v249 + 48);
    v265 = v281;
    ((void (*)(char *, _QWORD, uint64_t))v316)(v281, v317, v252);
    v265[v264] = 1;
    ((void (*)(char *, uint64_t, uint64_t))v314)(v265, v254, v255);
    v266 = v320;
    v267 = FMFindingSession.__allocating_init(findable:findingTechnology:arSession:)(&v323, v265, 0);
    if (!v266)
    {
      v268 = v267;

      (*(void (**)(char *, uint64_t))(v263 + 8))(v260, v261);
      ((void (*)(char *, uint64_t))v318)(v297, v305);
      v210 = (uint64_t)v292;
      *v292 = v268;
      swift_storeEnumTagMultiPayload(v210, v291, 1);
      v211 = v293;
LABEL_99:
      v231 = v312;
      goto LABEL_100;
    }

    swift_errorRelease(v266);
    (*(void (**)(char *, uint64_t))(v263 + 8))(v260, v261);
    ((void (*)(char *, uint64_t))v318)(v297, v305);
    (*(void (**)(char *, uint64_t))(v306 + 8))(v310, v311);
LABEL_97:
    (*(void (**)(char *, char *))(v276 + 8))(v312, v293);
    return;
  }
  sub_1000051EC((uint64_t)v45, &qword_1005D6710);
  if (qword_1005D1DE8 != -1)
LABEL_115:
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v63 = type metadata accessor for Logger(0);
  v64 = sub_100056D88(v63, (uint64_t)qword_1005F5748);
  v65 = Logger.logObject.getter(v64);
  v66 = static os_log_type_t.error.getter(v65);
  if (os_log_type_enabled(v65, v66))
  {
    v67 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v67 = 0;
    _os_log_impl((void *)&_mh_execute_header, v65, v66, "FMDeviceDetailContentViewController: cannot get direction for unknown device", v67, 2u);
    swift_slowDealloc(v67, -1, -1);
  }

}

void sub_1001BBB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v9 = type metadata accessor for Logger(0);
  sub_100056D88(v9, (uint64_t)qword_1005F5748);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
  swift_errorRetain(a2);
  v10 = swift_errorRetain(a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(64, -1);
    v25 = v14;
    *(_DWORD *)v13 = 136315394;
    v15 = sub_100008000((unint64_t *)&qword_1005DA7C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v16 = dispatch thunk of CustomStringConvertible.description.getter(v5, v15);
    v18 = v17;
    v24 = sub_100056DA0(v16, v17, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    v19 = swift_bridgeObjectRelease(v18);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v19);
    *(_WORD *)(v13 + 12) = 2080;
    v24 = a2;
    swift_errorRetain(a2);
    v20 = sub_100053F2C(&qword_1005D7E40);
    v21 = String.init<A>(describing:)(&v24, v20);
    v23 = v22;
    v24 = sub_100056DA0(v21, v22, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    swift_bridgeObjectRelease(v23);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMDeviceDetailContentViewController: Fast advertisement stated for device: %s. With error?: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

}

uint64_t sub_1001BBDE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  __n128 v11;
  __n128 v12;
  char v13;
  uint64_t v14;
  _BYTE v17[24];

  v2 = v1;
  v4 = type metadata accessor for FMIPDevice(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_markAsLostView;
  v9 = *(id *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_markAsLostView);
  sub_1002235AC(a1);

  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  v11 = swift_beginAccess(v10, v17, 0, 0);
  v12.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v10, v4, v11);
  if ((FMIPDevice.isLocalFindable.getter(v12) & 1) != 0)
    v13 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for FMDeviceDetailViewModel(0) + 160)) ^ 1;
  else
    v13 = 1;
  v14 = *(_QWORD *)(v2 + v8);
  *(_BYTE *)(v14 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionEnabled) = v13 & 1;
  objc_msgSend(*(id *)(v14 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton), "setEnabled:");
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1001BBF2C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char v42[32];
  char v43[24];

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v2);
  v40 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMIPDevice(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v39 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  v38 = sub_100056D88(v10, (uint64_t)qword_1005F5748);
  v11 = Logger.logObject.getter(v38);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMDeviceDetailContentViewController: Lost mode button toggled", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v14 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v15 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
  v16 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource;
  v41 = v1;
  v17 = (uint64_t *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v17, v43, 0, 0);
  v18 = *v17;
  v19 = v17[1];
  swift_retain(v15);
  swift_bridgeObjectRetain(v19);
  v21 = FMIPManager.devices.getter(v20);
  swift_bridgeObjectRetain(v19);
  v22 = sub_100414D38(v21, v18, v19);
  swift_bridgeObjectRelease(v21);
  v23 = swift_bridgeObjectRelease(v19);
  if (v22[2])
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16))(v6, (unint64_t)v22+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v7, v23);
    v24 = 0;
  }
  else
  {
    v24 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v24, 1, v7);
  swift_release(v15);
  swift_bridgeObjectRelease(v22);
  v25 = swift_bridgeObjectRelease(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v25) == 1)
  {
    v26 = sub_1000051EC((uint64_t)v6, &qword_1005D6710);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "FMDeviceDetailContentViewController: cannot enable lost mode on unknown device", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

  }
  else
  {
    v30 = (uint64_t)v39;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v39, v6, v7);
    v31 = v41;
    v32 = *(_QWORD *)&v41[v16] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
    swift_beginAccess(v32, v42, 0, 0);
    v33 = type metadata accessor for FMDeviceDetailViewModel(0);
    v34 = v40;
    sub_100007464(v32 + *(int *)(v33 + 36), v40, (uint64_t *)&unk_1005D3AA0);
    v35 = *(_QWORD *)&v31[v14];
    v36 = *(_QWORD *)(*(_QWORD *)(v35 + 24) + 32);
    swift_retain(v36);
    swift_retain(v35);
    sub_1000BAA00(v30, v34, v35, v31);
    swift_release(v36);
    swift_release(v35);
    sub_1000051EC(v34, (uint64_t *)&unk_1005D3AA0);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v30, v7);
  }
}

void sub_1001BC364()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  char *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  id v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char v42[24];

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPDevice(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v39 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v40 = (char *)&v38 - v9;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100056D88(v10, (uint64_t)qword_1005F5748);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMDeviceDetailContentViewController: Lock button toggled", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v16 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
  v41 = v1;
  v17 = (uint64_t *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v17, v42, 0, 0);
  v18 = *v17;
  v19 = v17[1];
  swift_retain(v16);
  swift_bridgeObjectRetain(v19);
  v21 = FMIPManager.devices.getter(v20);
  swift_bridgeObjectRetain(v19);
  v22 = sub_100414D38(v21, v18, v19);
  swift_bridgeObjectRelease(v21);
  v23 = swift_bridgeObjectRelease(v19);
  if (v22[2])
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16))(v4, (unint64_t)v22+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5, v23);
    v24 = 0;
  }
  else
  {
    v24 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v24, 1, v5);
  swift_release(v16);
  swift_bridgeObjectRelease(v22);
  v25 = swift_bridgeObjectRelease(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v4, 1, v5, v25) == 1)
  {
    v26 = sub_1000051EC((uint64_t)v4, &qword_1005D6710);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "FMDeviceDetailContentViewController: cannot lock unknown device", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

  }
  else
  {
    v30 = v40;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v40, v4, v5);
    v31 = v41;
    v32 = *(_QWORD *)&v41[v15];
    v33 = *(_QWORD *)(*(_QWORD *)(v32 + 24) + 32);
    type metadata accessor for FMDeviceLockViewController(0);
    v34 = (uint64_t)v39;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v39, v30, v5);
    swift_retain_n(v32, 2);
    swift_retain(v33);
    v35 = sub_100152400(v32, v34);
    objc_allocWithZone((Class)type metadata accessor for FMActivityIndicatingNavigationController());
    v36 = v35;
    v37 = sub_1000A750C(v36, 2);
    objc_msgSend(v31, "presentViewController:animated:completion:", v37, 1, 0);
    swift_release(v33);
    swift_release(v32);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v30, v5);
  }
}

void sub_1001BC794()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  void *object;
  NSString v31;
  NSString v32;
  id v33;
  uint64_t v34;
  char *v35;
  NSString v36;
  void *v37;
  id v38;
  uint64_t countAndFlagsBits;
  void **aBlock;
  unint64_t v41;
  void (*v42)(uint64_t, void *);
  void *v43;
  uint64_t (*v44)();
  uint64_t v45;
  char v46[24];
  Swift::String v47;
  Swift::String v48;

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v2);
  v4 = (char *)&countAndFlagsBits - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100056D88(v5, (uint64_t)qword_1005F5748);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMDeviceDetailContentViewController: Showing sound pending learn more", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  aBlock = 0;
  v41 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v41);
  v10 = (void *)objc_opt_self(NSBundle);
  v11 = objc_msgSend(v10, "mainBundle");
  v47._countAndFlagsBits = 0xD000000000000032;
  v47._object = (void *)0x80000001004B2590;
  v12._object = (void *)0x80000001004B2560;
  v12._countAndFlagsBits = 0xD000000000000020;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v47);
  countAndFlagsBits = v14._countAndFlagsBits;

  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  swift_beginAccess(v15, v46, 0, 0);
  v16 = type metadata accessor for FMIPDevice(0);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v4, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v4, 0, 1, v16);
  v18 = sub_1001DE71C(0xD000000000000022, 0x80000001004B25D0, (uint64_t)v4);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  swift_bridgeObjectRetain(v23);
  sub_1001DDC8C(v18, v20, v22, v24, 0, 0);
  v26 = v25;
  swift_bridgeObjectRelease_n(v24, 2);
  swift_bridgeObjectRelease(v20);
  sub_1000051EC((uint64_t)v4, &qword_1005D6710);
  aBlock = 0;
  v41 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v27 = objc_msgSend(v10, "mainBundle", swift_bridgeObjectRelease(v41).n128_f64[0]);
  v48._countAndFlagsBits = 0xD000000000000021;
  v48._object = (void *)0x80000001004A5EE0;
  v28._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v28._object = (void *)0xEF454C5449545F4ELL;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v48)._object;

  v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14._object);
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v33 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v31, v32, 1);

  v34 = swift_allocObject(&unk_10054BC38, 24, 7);
  *(_QWORD *)(v34 + 16) = v1;
  v35 = v1;
  v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v44 = State.rawValue.getter;
  v45 = v34;
  aBlock = _NSConcreteStackBlock;
  v41 = 1107296256;
  v42 = sub_100008B40;
  v43 = &unk_10054BC50;
  v37 = _Block_copy(&aBlock);
  swift_release(v45);
  v38 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v36, 0, v37);
  _Block_release(v37);

  objc_msgSend(v33, "addAction:", v38);
  objc_msgSend(v35, "presentViewController:animated:completion:", v33, 1, 0);

}

void sub_1001BCC7C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  id v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  void *v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  void *v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  NSString v23;
  NSString v24;
  id v25;
  uint64_t v26;
  id v27;
  NSString v28;
  void *v29;
  void *v30;
  id v31;
  NSString v32;
  void *v33;
  id v34;
  void *v35;
  void **aBlock;
  uint64_t v37;
  void (*v38)(uint64_t, void *);
  void *v39;
  uint64_t (*v40)();
  uint64_t v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100056D88(v0, (uint64_t)qword_1005F5748);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FMDeviceDetailContentViewController: Showing mismatch learn more", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v5 = (void *)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v5, "mainBundle");
  v7._countAndFlagsBits = 0xD000000000000016;
  v42._countAndFlagsBits = 0xD000000000000028;
  v42._object = (void *)0x80000001004B1E00;
  v7._object = (void *)0x80000001004B1DE0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v42)._object;

  v10 = objc_msgSend(v5, "mainBundle");
  v43._countAndFlagsBits = 0xD000000000000015;
  v11._countAndFlagsBits = 0xD00000000000001ELL;
  v43._object = (void *)0x80000001004ADC80;
  v11._object = (void *)0x80000001004B2510;
  v12.value._object = (void *)0x80000001004ADC60;
  v12.value._countAndFlagsBits = 0xD000000000000010;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v43)._object;

  _StringGuts.grow(_:)(20);
  v15 = objc_msgSend(v5, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v44._countAndFlagsBits = 0xD000000000000021;
  v44._object = (void *)0x80000001004A5EE0;
  v16._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v16._object = (void *)0xEF454C5449545F4ELL;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v44)._object;

  _StringGuts.grow(_:)(20);
  v19 = objc_msgSend(v5, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v20._countAndFlagsBits = 0xD000000000000017;
  v45._countAndFlagsBits = 0xD000000000000029;
  v45._object = (void *)0x80000001004A7410;
  v20._object = (void *)0x80000001004A73F0;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v45)._object;

  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  v25 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v23, v24, 1);

  v26 = swift_allocObject(&unk_10054BBC0, 24, 7);
  *(_QWORD *)(v26 + 16) = v35;
  v27 = v35;
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);
  v40 = State.rawValue.getter;
  v41 = v26;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_100008B40;
  v39 = &unk_10054BBD8;
  v29 = _Block_copy(&aBlock);
  swift_release(v41);
  v30 = (void *)objc_opt_self(UIAlertAction);
  v31 = objc_msgSend(v30, "actionWithTitle:style:handler:", v28, 1, v29);
  _Block_release(v29);

  objc_msgSend(v25, "addAction:", v31);
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  v40 = sub_1001BD19C;
  v41 = 0;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_100008B40;
  v39 = &unk_10054BC00;
  v33 = _Block_copy(&aBlock);
  v34 = objc_msgSend(v30, "actionWithTitle:style:handler:", v32, 0, v33, swift_release(v41).n128_f64[0]);
  _Block_release(v33);

  objc_msgSend(v25, "addAction:", v34);
  objc_msgSend(v27, "presentViewController:animated:completion:", v25, 1, 0);

}

uint64_t sub_1001BD19C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  id v8;
  NSURL *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  Class isa;
  uint64_t v14;

  v0 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD000000000000025, 0x80000001004B2530);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    URL._bridgeToObjectiveC()(v9);
    v11 = v10;
    v12 = sub_10011D84C((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for OpenExternalURLOptionsKey(0);
    sub_100008000((unint64_t *)&qword_1005D2610, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1004814BC);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "openURL:options:completionHandler:", v11, isa, 0, swift_bridgeObjectRelease(v12).n128_f64[0]);

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

void sub_1001BD390()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29[24];

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPDevice(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v9 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
  v10 = (uint64_t *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v10, v29, 0, 0);
  v11 = *v10;
  v12 = v10[1];
  swift_retain(v9);
  swift_bridgeObjectRetain(v12);
  v14 = FMIPManager.devices.getter(v13);
  swift_bridgeObjectRetain(v12);
  v15 = sub_100414D38(v14, v11, v12);
  swift_bridgeObjectRelease(v14);
  v16 = swift_bridgeObjectRelease(v12);
  if (v15[2])
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16))(v4, (unint64_t)v15+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5, v16);
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v17, 1, v5);
  swift_release(v9);
  swift_bridgeObjectRelease(v15);
  v18 = swift_bridgeObjectRelease(v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v4, 1, v5, v18) == 1)
  {
    sub_1000051EC((uint64_t)v4, &qword_1005D6710);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v19 = type metadata accessor for Logger(0);
    v20 = sub_100056D88(v19, (uint64_t)qword_1005F5748);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "FMDeviceDetailContentViewController: erase unknown device", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v24 = *(_QWORD *)&v1[v28];
    v25 = *(_QWORD *)(*(_QWORD *)(v24 + 24) + 32);
    swift_retain(v25);
    swift_retain(v24);
    sub_1000BB06C((uint64_t)v8, v24, v1);
    swift_release(v25);
    v26 = swift_release(v24);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v26);
  }
}

void sub_1001BD6B0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  void *object;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39[24];
  Swift::String v40;

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPDevice(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v9 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
  v10 = (uint64_t *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v10, v39, 0, 0);
  v11 = *v10;
  v12 = v10[1];
  swift_retain(v9);
  swift_bridgeObjectRetain(v12);
  v14 = FMIPManager.devices.getter(v13);
  swift_bridgeObjectRetain(v12);
  v15 = sub_100414D38(v14, v11, v12);
  swift_bridgeObjectRelease(v14);
  v16 = swift_bridgeObjectRelease(v12);
  if (v15[2])
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16))(v4, (unint64_t)v15+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5, v16);
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v17, 1, v5);
  swift_release(v9);
  swift_bridgeObjectRelease(v15);
  v18 = swift_bridgeObjectRelease(v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v4, 1, v5, v18) == 1)
  {
    sub_1000051EC((uint64_t)v4, &qword_1005D6710);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v19 = type metadata accessor for Logger(0);
    v20 = sub_100056D88(v19, (uint64_t)qword_1005F5748);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "FMDeviceDetailContentViewController: cancel erase unknown device", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v24 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelEraseDeviceButton;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelEraseDeviceButton], "setUserInteractionEnabled:", 0);
    v25 = *(void **)(*(_QWORD *)&v1[v24] + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
    v37 = 0;
    v38 = 0xE000000000000000;
    v26 = v25;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v38);
    v27 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v40._countAndFlagsBits = 0xD00000000000003BLL;
    v40._object = (void *)0x80000001004B24D0;
    v28._object = (void *)0x80000001004B24A0;
    v28._countAndFlagsBits = 0xD000000000000029;
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v40)._object;

    v31 = String._bridgeToObjectiveC()();
    objc_msgSend(v26, "setText:", v31, swift_bridgeObjectRelease(object).n128_f64[0]);

    v32 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v1[v36] + 24) + 32);
    v33 = swift_allocObject(&unk_10054BB98, 24, 7);
    *(_QWORD *)(v33 + 16) = v1;
    swift_retain(v32);
    sub_1000B6BF8((uint64_t)v8, (uint64_t)v1, (uint64_t)sub_1001D48C0, v33);
    swift_release(v32);
    v34 = swift_release(v33);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v34);
  }
}

double sub_1001BDACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  void *object;
  NSString v11;
  double result;
  uint64_t v13;
  Swift::String v14;

  v5 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelEraseDeviceButton;
  v6 = objc_retain(*(id *)(*(_QWORD *)(a3
                                     + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelEraseDeviceButton)
                         + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label));
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v14._countAndFlagsBits = 0xD000000000000033;
  v14._object = (void *)0x80000001004B1CC0;
  v8._object = (void *)0x80000001004B1C90;
  v8._countAndFlagsBits = 0xD000000000000021;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v14)._object;

  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setText:", v11, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(*(id *)(a3 + v5), "setUserInteractionEnabled:", 1);
  if (a2)
  {
    v13 = *(_QWORD *)(a3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource);
    swift_retain(v13);
    sub_1004244A4(a2);
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

void sub_1001BDC8C()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  void *object;
  id v7;
  Swift::String v8;
  Swift::String v9;
  void *v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  void *v14;
  NSString v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;

  v1 = v0;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4._countAndFlagsBits = 0xD000000000000023;
  v20._countAndFlagsBits = 0xD000000000000035;
  v20._object = (void *)0x80000001004AB730;
  v4._object = (void *)0x80000001004AB700;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v20)._object;

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v7 = objc_msgSend(v2, "mainBundle");
  v8._countAndFlagsBits = 0xD000000000000029;
  v21._countAndFlagsBits = 0xD00000000000003BLL;
  v21._object = (void *)0x80000001004B2460;
  v8._object = (void *)0x80000001004B2430;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v21)._object;

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v11 = objc_msgSend(v2, "mainBundle");
  v22._object = (void *)0x80000001004A5EE0;
  v12._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v12._object = (void *)0xEF454C5449545F4ELL;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0xD000000000000021;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v22)._object;

  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  v16 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v15, 0, 0);

  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v19 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v17, v18, 1);

  objc_msgSend(v19, "addAction:", v16);
  objc_msgSend(v1, "presentViewController:animated:completion:", v19, 1, 0);

}

void sub_1001BDFA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t Strong;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __n128 v47;
  _BYTE v48[12];
  int v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  char v61[24];
  char v62[24];
  char v63[24];
  char v64[32];

  v60 = a4;
  v6 = type metadata accessor for FMIPNotifyItemActionType(0);
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  __chkstk_darwin(v6);
  v54 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v8);
  v58 = &v48[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v56 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v56);
  v57 = &v48[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for FMIPItem(0);
  v59 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v51 = &v48[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v55 = &v48[-v14];
  v15 = type metadata accessor for FMIPAnalyticsActionType(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v48[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for FMIPDevice(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = &v48[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v64, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v24 = (char *)Strong;
    v50 = v11;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isNotifyWhenFoundOnOverride) = a3 & 1;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView), "setUserInteractionEnabled:", 0);
    v49 = a3;
    if ((a3 & 1) != 0)
    {
      v25 = *(_QWORD *)&v24[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
          + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
      v26 = swift_beginAccess(v25, v61, 0, 0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v20 + 16))(v22, v25, v19, v26);
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for FMIPAnalyticsActionType.enableNotifyWhenFound(_:), v15);
      sub_1001C5D1C((uint64_t)v22, (uint64_t)v18);
      (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v18, v15);
      (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v22, v19);
    }
    v27 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource;
    v28 = *(_QWORD *)&v24[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
        + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
    swift_beginAccess(v28, v63, 0, 0);
    v30 = v60;
    if (*(_BYTE *)(v28 + 40) == 1 && (FMIPDevice.shouldDisplaySeparatedLocation.getter(v29) & 1) != 0)
    {
      v31 = *(_QWORD *)&v24[v27] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
      swift_beginAccess(v31, v62, 0, 0);
      v32 = v57;
      sub_10004FC74(v31, (uint64_t)v57, type metadata accessor for FMDeviceDetailViewModel);
      v33 = v58;
      sub_100007464((uint64_t)&v32[*(int *)(v56 + 36)], (uint64_t)v58, (uint64_t *)&unk_1005D3AA0);
      sub_10004FCB8((uint64_t)v32, type metadata accessor for FMDeviceDetailViewModel);
      v34 = v59;
      v35 = v50;
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v59 + 48))(v33, 1, v50) != 1)
      {
        v39 = v55;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v34 + 32))(v55, v33, v35);
        v40 = v51;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v34 + 16))(v51, v39, v35);
        v41 = v54;
        (*(void (**)(_BYTE *, _QWORD, uint64_t))(v52 + 104))(v54, enum case for FMIPNotifyItemActionType.whenFound(_:), v53);
        v42 = type metadata accessor for FMIPNotifyItemAction(0);
        swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
        v43 = FMIPNotifyItemAction.init(item:type:state:)(v40, v41, v49 & 1);
        v44 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v24[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator]
                                    + 24)
                        + 32);
        v45 = swift_allocObject(&unk_10054B648, 24, 7);
        *(_QWORD *)(v45 + 16) = v24;
        swift_retain(v44);
        v46 = v24;
        sub_1000B18E4(v43, (uint64_t)sub_1001D40C4, v45);

        swift_release(v43);
        swift_release(v44);
        v47 = swift_release(v45);
        (*(void (**)(_BYTE *, uint64_t, __n128))(v34 + 8))(v39, v35, v47);
        return;
      }
      sub_1000051EC((uint64_t)v33, (uint64_t *)&unk_1005D3AA0);
    }
    v36 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v24[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24)
                    + 32);
    v37 = swift_allocObject(&unk_10054B620, 24, 7);
    *(_QWORD *)(v37 + 16) = v24;
    v38 = v24;
    swift_retain(v36);
    sub_1000B6D50(v30, (uint64_t)sub_1001D40BC, v37);
    swift_release(v36);
    swift_release(v37);

  }
}

void sub_1001BE4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];

  v7 = type metadata accessor for FMIPItemActionStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(a4 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView), "setUserInteractionEnabled:", 1);
  v14 = *(_QWORD *)(a4 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v14, v33, 0, 0);
  sub_10004FC74(v14, (uint64_t)v13, type metadata accessor for FMDeviceDetailViewModel);
  sub_1001BEEB4((uint64_t)v13);
  sub_10004FCB8((uint64_t)v13, type metadata accessor for FMDeviceDetailViewModel);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v15 = type metadata accessor for Logger(0);
  sub_100056D88(v15, (uint64_t)qword_1005F5748);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  swift_errorRetain(a3);
  v16 = swift_errorRetain(a3);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(22, -1);
    v30 = swift_slowAlloc(64, -1);
    v32 = v30;
    *(_DWORD *)v19 = 136315394;
    v20 = sub_100008000((unint64_t *)&unk_1005D2C50, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemActionStatus, (uint64_t)&protocol conformance descriptor for FMIPItemActionStatus);
    v21 = dispatch thunk of CustomStringConvertible.description.getter(v7, v20);
    v23 = v22;
    v31 = sub_100056DA0(v21, v22, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
    v24 = swift_bridgeObjectRelease(v23);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v24);
    *(_WORD *)(v19 + 12) = 2080;
    v31 = a3;
    swift_errorRetain(a3);
    v25 = sub_100053F2C(&qword_1005D7E40);
    v26 = String.init<A>(describing:)(&v31, v25);
    v28 = v27;
    v31 = sub_100056DA0(v26, v27, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
    swift_bridgeObjectRelease(v28);
    swift_errorRelease(a3);
    swift_errorRelease(a3);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "FMItemDetailContentViewController: Toggling notify when found completed with status: %s, error: %s", (uint8_t *)v19, 0x16u);
    v29 = v30;
    swift_arrayDestroy(v30, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v19, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_errorRelease(a3);
    swift_errorRelease(a3);
  }

  *(_BYTE *)(a4 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isNotifyWhenFoundOnOverride) = 2;
}

uint64_t sub_1001BE834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v10[24];

  v4 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v4);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView), "setUserInteractionEnabled:", 1);
  v7 = *(_QWORD *)(a3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
     + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v7, v10, 0, 0);
  sub_10004FC74(v7, (uint64_t)v6, type metadata accessor for FMDeviceDetailViewModel);
  sub_1001BEEB4((uint64_t)v6);
  result = sub_10004FCB8((uint64_t)v6, type metadata accessor for FMDeviceDetailViewModel);
  *(_BYTE *)(a3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isNotifyWhenFoundOnOverride) = 2;
  return result;
}

uint64_t sub_1001BE91C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39[24];
  char v40[24];
  char v41[24];
  char v42[24];

  v3 = type metadata accessor for FMIPDevice(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v42, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v8 = (char *)result;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100056D88(v9, (uint64_t)qword_1005F5748);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMDeviceDetailContentViewController: present NWLB Detail Screen", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    v14 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource;
    v15 = *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource];
    v16 = v15 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
    swift_beginAccess(v15 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel, v41, 0, 0);
    v17 = type metadata accessor for FMDeviceDetailViewModel(0);
    v18 = (*(_QWORD *)(v16 + *(int *)(v17 + 92)) >> 12) & 1;
    v19 = (*(_QWORD *)(v16 + *(int *)(v17 + 88)) >> 14) & 1;
    v20 = v15 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
    v21 = swift_beginAccess(v15 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice, v40, 0, 0);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, v20, v3, v21);
    v22 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_trustedLocationsDetailViewController;
    v23 = *(id *)&v8[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_trustedLocationsDetailViewController];
    v38 = v3;
    v24 = v23;
    v25 = FMIPDevice.safeLocations.getter(v23);
    v37 = v4;
    v26 = v25;
    v27 = (_QWORD *)(*(_QWORD *)&v8[v14] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
    swift_beginAccess(v27, v39, 0, 0);
    v36 = v6;
    v28 = v27[2];
    v29 = v27[3];
    v30 = v27[4];
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRetain(v29);
    sub_1003F9CD8(v26, v19, v18, v28, v29, v30);
    swift_bridgeObjectRelease(v30);

    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v29);
    v31 = *(void **)&v8[v22];
    v32 = objc_allocWithZone((Class)type metadata accessor for FMTransparentNavigationController());
    v33 = v31;
    v34 = sub_1000A750C(v33, 2);
    objc_msgSend(v34, "setDelegate:", v34);

    objc_msgSend(v8, "presentViewController:animated:completion:", v34, 1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v36, v38);
  }
  return result;
}

void sub_1001BEC04()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  void *object;
  id v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  void *v10;
  NSString v11;
  NSString v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  void *v16;
  NSString v17;
  id v18;
  void *v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000030;
  v21._object = (void *)0x80000001004A91F0;
  v2._object = (void *)0x80000001004B23B0;
  v3.value._countAndFlagsBits = 0xD000000000000016;
  v3.value._object = (void *)0x80000001004A91D0;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v21._countAndFlagsBits = 0xD00000000000001BLL;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v21)._object;

  v6 = objc_msgSend(v0, "mainBundle");
  v7._countAndFlagsBits = 0xD000000000000032;
  v22._object = (void *)0x80000001004A91F0;
  v7._object = (void *)0x80000001004B23F0;
  v8.value._countAndFlagsBits = 0xD000000000000016;
  v8.value._object = (void *)0x80000001004A91D0;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0xD00000000000001BLL;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v22)._object;

  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v20 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v11, v12, 1);

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v13 = objc_msgSend(v0, "mainBundle");
  v23._countAndFlagsBits = 0xD000000000000021;
  v23._object = (void *)0x80000001004A5EE0;
  v14._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v14._object = (void *)0xEF454C5449545F4ELL;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v23)._object;

  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v18 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v17, 0, 0);

  objc_msgSend(v20, "addAction:", v18);
  objc_msgSend(v19, "presentViewController:animated:completion:", v20, 1, 0);

}

double sub_1001BEEB4(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  __n128 v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  double result;
  char *v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  _BYTE *v74;
  id v75;
  void *v76;
  uint64_t v77;
  char v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  int v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(char *, unint64_t, uint64_t, __n128);
  __n128 v126;
  char *v127;
  char v128;
  __n128 v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  __n128 v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  int v144;
  char *v145;
  __n128 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  __n128 v155;
  void (*v156)(char *, uint64_t);
  uint64_t v157;
  uint64_t v158;
  __n128 v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(char *, uint64_t);
  uint64_t v168;
  uint64_t v169;
  void (*v170)(char *, char *, uint64_t);
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unsigned __int8 v182;
  _BYTE *v183;
  unsigned __int8 v184;
  unsigned __int8 v185;
  void *v186;
  char *v187;
  id v188;
  void (*v189)(uint64_t, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unsigned __int8 v197;
  int v198;
  int v199;
  uint64_t v200;
  int v201;
  uint64_t (*v202)(char *, char *, uint64_t);
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  char *v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  _BYTE *v238;
  char v239[8];
  char v240[8];

  v228 = a1;
  v222 = type metadata accessor for FMIPFeatures(0);
  v221 = *(_QWORD *)(v222 - 8);
  v2 = __chkstk_darwin(v222);
  v220 = (char *)&v198 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v219 = (char *)&v198 - v4;
  v208 = type metadata accessor for FMIPSeparationMonitoringState(0);
  v215 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin(v208);
  v216 = (char *)&v198 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMFDevice(0);
  v7 = *(_QWORD *)(v6 - 8);
  v235 = v6;
  v236 = v7;
  __chkstk_darwin(v6);
  v234 = (char *)&v198 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005D2BC8);
  v217 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v227 = (uint64_t)&v198 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v223 = (uint64_t)&v198 - v13;
  v218 = v14;
  __chkstk_darwin(v12);
  v229 = (uint64_t)&v198 - v15;
  v207 = type metadata accessor for FMIPDeviceState(0);
  v206 = *(_QWORD *)(v207 - 8);
  v16 = __chkstk_darwin(v207);
  v212 = (char *)&v198 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v211 = (char *)&v198 - v18;
  v19 = sub_100053F2C((uint64_t *)&unk_1005D2A40);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v198 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v210 = (char *)&v198 - v24;
  __chkstk_darwin(v23);
  v231 = (char *)&v198 - v25;
  v233 = type metadata accessor for FMDeviceDetailViewModel(0);
  v26 = __chkstk_darwin(v233);
  v225 = (uint64_t)&v198 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v205 = (uint64_t)&v198 - v28;
  v29 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v29);
  v31 = (char *)&v198 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for FMIPDevice(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = __chkstk_darwin(v32);
  v226 = (char *)&v198 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v34);
  v214 = (char *)&v198 - v37;
  v213 = v38;
  __chkstk_darwin(v36);
  v232 = (char *)&v198 - v39;
  v40 = 1;
  v230 = swift_allocObject(&unk_10054BAD0, 17, 7);
  *(_BYTE *)(v230 + 16) = 1;
  v237 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v238 = v1;
  v41 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
  v209 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource;
  v42 = (uint64_t *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v42, v240, 0, 0);
  v43 = *v42;
  v44 = v42[1];
  swift_retain(v41);
  swift_bridgeObjectRetain(v44);
  v46 = FMIPManager.devices.getter(v45);
  swift_bridgeObjectRetain(v44);
  v47 = sub_100414D38(v46, v43, v44);
  swift_bridgeObjectRelease(v46);
  v48 = swift_bridgeObjectRelease(v44);
  if (v47[2])
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v33 + 16))(v31, (unint64_t)v47+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80)), v32, v48);
    v40 = 0;
  }
  v49 = v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v33 + 56))(v31, v40, 1, v32, v48);
  swift_release(v41);
  swift_bridgeObjectRelease(v47);
  v50 = swift_bridgeObjectRelease(v44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v33 + 48))(v31, 1, v32, v50) == 1)
  {
    sub_1000051EC((uint64_t)v31, &qword_1005D6710);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v51 = type metadata accessor for Logger(0);
    v52 = sub_100056D88(v51, (uint64_t)qword_1005F5748);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.error.getter(v53);
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v55 = 0;
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "FMDeviceDetailContentViewController: cannot enable notify when detach for unknown device", v55, 2u);
      swift_slowDealloc(v55, -1, -1);
    }
    swift_release(v230);

    return result;
  }
  v224 = v33;
  v57 = v232;
  v202 = *(uint64_t (**)(char *, char *, uint64_t))(v33 + 32);
  v58 = v202(v232, v31, v49);
  v59 = (int *)v233;
  v60 = *(int *)(v233 + 88);
  v204 = v60;
  v61 = *(_QWORD *)(v228 + v60);
  if ((v61 & 0x10000) == 0)
  {
    v62 = v237;
    if ((v61 & 0x8000) != 0)
    {
      v63 = v228;
      v64 = (uint64_t)v231;
      if ((*(_BYTE *)(v228 + 40) & 1) == 0)
        goto LABEL_19;
      goto LABEL_16;
    }
LABEL_14:
    v72 = (v61 & 0x10000) == 0;
    v73 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView;
    v74 = v238;
    v75 = *(id *)&v238[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView];
    sub_1001F26E4(1, v72);

    v76 = *(void **)&v74[v73];
    v77 = v230;
    v78 = *(_BYTE *)(v230 + 16);
    v79 = v76;
    sub_1001F292C(v78);

    (*(void (**)(char *, uint64_t))(v224 + 8))(v57, v49);
    v80 = v77;
    goto LABEL_65;
  }
  v62 = v237;
  v65 = *(_QWORD *)(v228 + *(int *)(v233 + 92));
  v66 = *(_QWORD *)(v228 + v60);
  v67 = *(void **)(*(_QWORD *)&v238[v237] + 16);
  v68 = *(id *)&v238[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView];
  v69 = v67;
  v70 = sub_100377758();

  v61 = v66;
  v71 = (v65 >> 15) & 1;
  v59 = (int *)v233;
  sub_1001F24EC(v71, (v70 & 0xFFFFFFFFFFFFFFFDLL) == 1);

  if ((v66 & 0x8000) == 0)
    goto LABEL_14;
  v63 = v228;
  v64 = (uint64_t)v231;
  if (*(_BYTE *)(v228 + 40) != 1)
    goto LABEL_19;
LABEL_16:
  if ((FMIPDevice.shouldDisplaySeparatedLocation.getter(v58) & 1) == 0
    || (v81 = v63 + v59[11], (*(_BYTE *)(v81 + 8) & 1) != 0)
    || (v82 = v63 + v59[10], (*(_BYTE *)(v82 + 8) & 1) != 0))
  {
LABEL_19:
    v83 = v238[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isNotifyWhenFoundOnOverride];
    v84 = v205;
    sub_10004FC74(v63, v205, type metadata accessor for FMDeviceDetailViewModel);
    if (v83 == 2)
      v85 = (*(unsigned __int8 *)(v84 + v59[23]) >> 3) & 1;
    else
      v85 = v83 & 1;
    v199 = v85;
    sub_10004FCB8(v84, type metadata accessor for FMDeviceDetailViewModel);
    v86 = *(_QWORD *)(v63 + v204) & 0x40;
    goto LABEL_23;
  }
  v195 = *(_QWORD *)v82;
  v196 = (*(_QWORD *)v81 >> 7) & 1;
  if (v238[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isNotifyWhenFoundOnOverride] != 2)
    LODWORD(v196) = v238[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isNotifyWhenFoundOnOverride];
  v199 = v196;
  v86 = v195 & 8;
LABEL_23:
  v87 = v238[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isNotifyWhenLeftBehindOnOverride];
  v88 = v225;
  sub_10004FC74(v63, v225, type metadata accessor for FMDeviceDetailViewModel);
  v205 = v86;
  if (v87 == 2)
    v89 = (*(unsigned __int8 *)(v88 + v59[23] + 1) >> 4) & 1;
  else
    v89 = v87 & 1;
  v201 = v89;
  v203 = v49;
  sub_10004FCB8(v88, type metadata accessor for FMDeviceDetailViewModel);
  v90 = v238;
  v91 = *(_QWORD *)&v238[v209] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v91, v239, 0, 0);
  LODWORD(v209) = *(unsigned __int8 *)(v91 + v59[35]);
  v92 = *(_QWORD *)(*(_QWORD *)&v90[v62] + 48);
  v93 = swift_retain(v92);
  dispatch thunk of FMFManager.myInfo.getter(v93);
  swift_release(v92);
  v94 = type metadata accessor for FMFMyInfo(0);
  v95 = *(_QWORD *)(v94 - 8);
  v233 = *(_QWORD *)(v95 + 48);
  v96 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v233)(v64, 1, v94);
  v225 = v95;
  if (v96 == 1)
  {
    sub_1000051EC(v64, (uint64_t *)&unk_1005D2A40);
    v97 = 0;
    v98 = 0;
  }
  else
  {
    v97 = FMFMyInfo.meDeviceId.getter();
    v98 = v99;
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v64, v94);
  }
  v100 = *(_QWORD *)(*(_QWORD *)&v238[v62] + 48);
  v101 = swift_retain(v100);
  v102 = (uint64_t)v210;
  dispatch thunk of FMFManager.myInfo.getter(v101);
  v103 = swift_release(v100);
  v104 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v233)(v102, 1, v94, v103);
  v231 = (char *)v94;
  v200 = v61;
  if ((_DWORD)v104 != 1)
  {
    v108 = FMFMyInfo.deviceId.getter(v104);
    v110 = v109;
    v105 = (*(uint64_t (**)(uint64_t, uint64_t))(v225 + 8))(v102, v94);
    if (!v98)
    {
      v106 = v207;
      v107 = v206;
      if (!v110)
      {
        v198 = 1;
        goto LABEL_40;
      }
      v198 = 0;
      goto LABEL_39;
    }
    if (v110)
    {
      if (v97 == v108 && v98 == v110)
      {
        swift_bridgeObjectRelease(v98);
        v198 = 1;
      }
      else
      {
        v198 = _stringCompareWithSmolCheck(_:_:expecting:)(v97, v98, v108, v110, 0);
        swift_bridgeObjectRelease(v98);
      }
      goto LABEL_38;
    }
LABEL_37:
    v198 = 0;
    v110 = v98;
LABEL_38:
    v106 = v207;
    v107 = v206;
LABEL_39:
    swift_bridgeObjectRelease(v110);
    goto LABEL_40;
  }
  v105 = sub_1000051EC(v102, (uint64_t *)&unk_1005D2A40);
  if (v98)
    goto LABEL_37;
  v198 = 1;
  v106 = v207;
  v107 = v206;
LABEL_40:
  v111 = v211;
  v112 = FMIPDevice.state.getter(v105);
  v113 = v212;
  static FMIPDeviceState.isThisDevice.getter(v112);
  v114 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
  LODWORD(v210) = dispatch thunk of SetAlgebra.isSuperset(of:)(v113, v106, v114);
  v115 = *(void (**)(char *, uint64_t))(v107 + 8);
  v115(v113, v106);
  v115(v111, v106);
  v116 = *(_QWORD *)(*(_QWORD *)&v238[v62] + 48);
  v117 = swift_retain(v116);
  v118 = dispatch thunk of FMFManager.devices.getter(v117);
  v119 = swift_release(v116);
  if (!v118)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v236 + 56))(v229, 1, 1, v235, v119);
    v143 = v208;
    v144 = v200;
    v122 = v227;
    goto LABEL_61;
  }
  v120 = *(_QWORD *)(v118 + 16);
  v121 = v235;
  v122 = v227;
  if (!v120)
  {
LABEL_54:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v236 + 56))(v229, 1, 1, v121, v119);
    swift_bridgeObjectRelease(v118);
    goto LABEL_60;
  }
  v123 = v118 + ((*(unsigned __int8 *)(v236 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v236 + 80));
  v124 = *(_QWORD *)(v236 + 72);
  v125 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v236 + 16);
  v212 = (char *)v118;
  v126 = swift_bridgeObjectRetain(v118);
  v127 = v234;
  while (1)
  {
    v130 = v125(v127, v123, v121, v126);
    v131 = FMFDevice.identifier.getter(v130);
    v133 = v132;
    v134 = *(_QWORD *)(*(_QWORD *)&v238[v62] + 48);
    v135 = swift_retain(v134);
    dispatch thunk of FMFManager.myInfo.getter(v135);
    v136 = swift_release(v134);
    v137 = v22;
    v138 = (uint64_t)v22;
    v139 = v231;
    if (((unsigned int (*)(char *, uint64_t, char *, __n128))v233)(v137, 1, v231, v136) == 1)
    {
      sub_1000051EC(v138, (uint64_t *)&unk_1005D2A40);
      v22 = (char *)v138;
LABEL_51:
      v129 = swift_bridgeObjectRelease(v133);
      goto LABEL_44;
    }
    v140 = FMFMyInfo.meDeviceId.getter();
    v142 = v141;
    (*(void (**)(uint64_t, char *))(v225 + 8))(v138, v139);
    v22 = (char *)v138;
    if (!v142)
      goto LABEL_51;
    if (v131 == v140 && v142 == v133)
    {
      v145 = v212;
      swift_bridgeObjectRelease(v212);
      swift_bridgeObjectRelease(v133);
      goto LABEL_59;
    }
    v128 = _stringCompareWithSmolCheck(_:_:expecting:)(v131, v133, v140, v142, 0);
    swift_bridgeObjectRelease(v133);
    v129 = swift_bridgeObjectRelease(v142);
    if ((v128 & 1) != 0)
      break;
LABEL_44:
    v121 = v235;
    v127 = v234;
    (*(void (**)(char *, uint64_t, __n128))(v236 + 8))(v234, v235, v129);
    v123 += v124;
    --v120;
    v62 = v237;
    if (!v120)
    {
      v118 = (uint64_t)v212;
      v119 = swift_bridgeObjectRelease(v212);
      v122 = v227;
      v63 = v228;
      goto LABEL_54;
    }
  }
  v145 = v212;
  v142 = v212;
LABEL_59:
  v62 = v237;
  v146 = swift_bridgeObjectRelease(v142);
  v147 = v235;
  v148 = v236;
  v149 = v229;
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v236 + 32))(v229, v234, v235, v146);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v148 + 56))(v149, 0, 1, v147);
  swift_bridgeObjectRelease(v145);
  v122 = v227;
  v63 = v228;
LABEL_60:
  v143 = v208;
  v144 = v200;
LABEL_61:
  LODWORD(v234) = v205 != 0;
  LODWORD(v235) = (*(_QWORD *)&v144 & 0x10000) == 0;
  v150 = v238;
  v151 = *(_QWORD *)(*(_QWORD *)&v238[v62] + 24);
  v152 = swift_retain(v151);
  v153 = v62;
  v154 = v216;
  FMIPManager.separationMonitoringState.getter(v152);
  v155 = swift_release(v151);
  LODWORD(v231) = FMIPSeparationMonitoringState.allowsSeparationMonitoringUI.getter(v155);
  v156 = *(void (**)(char *, uint64_t))(v215 + 8);
  v156(v154, v143);
  v157 = *(_QWORD *)(*(_QWORD *)&v150[v153] + 24);
  v158 = swift_retain(v157);
  FMIPManager.separationMonitoringState.getter(v158);
  v159 = swift_release(v157);
  LODWORD(v233) = FMIPSeparationMonitoringState.allowsSeparationMonitoringConfiguration.getter(v159);
  v160 = ((uint64_t (*)(char *, uint64_t))v156)(v154, v143);
  v236 = *(_QWORD *)(v63 + v204);
  v161 = v219;
  v162 = v232;
  v163 = FMIPDevice.features.getter(v160);
  v164 = v220;
  static FMIPFeatures.canBeLeashedByHost.getter(v163);
  v165 = sub_100008000((unint64_t *)&qword_1005D72F0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPFeatures, (uint64_t)&protocol conformance descriptor for FMIPFeatures);
  v166 = v222;
  LODWORD(v228) = dispatch thunk of SetAlgebra.isSuperset(of:)(v164, v222, v165);
  v167 = *(void (**)(char *, uint64_t))(v221 + 8);
  v167(v164, v166);
  v167(v161, v166);
  v168 = v230;
  *(_BYTE *)(v230 + 16) = 0;
  v169 = v224;
  v170 = *(void (**)(char *, char *, uint64_t))(v224 + 16);
  v171 = v214;
  v172 = v203;
  v170(v214, v162, v203);
  v173 = v223;
  sub_100007464(v229, v223, &qword_1005D2BC8);
  v170(v226, v171, v172);
  sub_100007464(v173, v122, &qword_1005D2BC8);
  v174 = *(unsigned __int8 *)(v169 + 80);
  v175 = (v174 + 49) & ~v174;
  v176 = v175 + v213;
  v177 = *(unsigned __int8 *)(v217 + 80);
  v178 = (v177 + v175 + v213 + 2) & ~v177;
  v179 = v178 + v218;
  v180 = swift_allocObject(&unk_10054BAF8, v178 + v218 + 1, v174 | v177 | 7);
  LODWORD(v231) = v231 & 1;
  *(_BYTE *)(v180 + 16) = (_BYTE)v231;
  *(_QWORD *)(v180 + 24) = v168;
  LODWORD(v225) = v198 & 1;
  *(_BYTE *)(v180 + 32) = v198 & 1;
  *(_BYTE *)(v180 + 33) = v210 & 1;
  *(_BYTE *)(v180 + 34) = (v236 & 0x4000) != 0;
  *(_BYTE *)(v180 + 35) = v209;
  LODWORD(v228) = v228 & 1;
  *(_BYTE *)(v180 + 36) = v228;
  *(_QWORD *)(v180 + 40) = v150;
  v181 = v180 + v175;
  v182 = v201;
  *(_BYTE *)(v180 + 48) = v201;
  v202((char *)v181, v171, v172);
  v183 = (_BYTE *)(v180 + v176);
  *v183 = (_BYTE)v234;
  v184 = v199 & 1;
  v183[1] = v199 & 1;
  sub_10005DAA0(v173, v180 + v178, &qword_1005D2BC8);
  v185 = v233 & 1;
  *(_BYTE *)(v180 + v179) = v233 & 1;
  v186 = *(void **)&v150[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView];
  v187 = v150;
  swift_retain(v168);
  v188 = v186;
  sub_1001F26E4(0, v235);

  if ((v210 & 1) != 0)
  {
    sub_1000051EC(v227, &qword_1005D2BC8);
    v189 = *(void (**)(uint64_t, uint64_t))(v224 + 8);
    v190 = v203;
    v189((uint64_t)v226, v203);
    v191 = *(_QWORD *)(*(_QWORD *)&v150[v237] + 24);
    v192 = swift_allocObject(&unk_10054BB20, 32, 7);
    *(_QWORD *)(v192 + 16) = sub_1001D4638;
    *(_QWORD *)(v192 + 24) = v180;
    swift_retain(v191);
    swift_retain(v180);
    FMIPManager.isCompanion(completion:)(sub_100021E58, v192);
    swift_release(v180);
    swift_release(v191);
    swift_release(v192);
  }
  else
  {
    v197 = v185;
    v193 = v227;
    v194 = (uint64_t)v226;
    sub_1001C00E8(0, (char)v231, v168, v225, 0, (v236 & 0x4000) != 0, v209, v228, v187, v182, (uint64_t)v226, v205 != 0, v184, v227, v197);
    swift_release(v180);
    sub_1000051EC(v193, &qword_1005D2BC8);
    v189 = *(void (**)(uint64_t, uint64_t))(v224 + 8);
    v190 = v203;
    v189(v194, v203);
  }
  sub_1000051EC(v229, &qword_1005D2BC8);
  v189((uint64_t)v232, v190);
  v80 = v168;
LABEL_65:
  *(_QWORD *)&result = swift_release(v80).n128_u64[0];
  return result;
}

uint64_t sub_1001C00E8(char a1, char a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8, void *a9, unsigned __int8 a10, uint64_t a11, unsigned __int8 a12, unsigned __int8 a13, uint64_t a14, unsigned __int8 a15)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  _BYTE v56[12];
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  char v75[24];
  _QWORD aBlock[5];
  uint64_t v77;
  char v78[24];
  char v79[32];

  v57 = a8;
  LODWORD(v63) = a7;
  v72 = a6;
  v73 = a5;
  v74 = a4;
  v18 = type metadata accessor for DispatchWorkItemFlags(0);
  v70 = *(_QWORD *)(v18 - 8);
  v71 = v18;
  __chkstk_darwin(v18);
  v69 = &v56[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v68 = type metadata accessor for DispatchQoS(0);
  v67 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v66 = &v56[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = sub_100053F2C(&qword_1005D2BC8);
  v64 = *(_QWORD *)(v21 - 8);
  v22 = *(_QWORD *)(v64 + 64);
  __chkstk_darwin(v21);
  v23 = &v56[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = type metadata accessor for FMIPDevice(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  v27 = &v56[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v65 = a3;
  v28 = (_BYTE *)(a3 + 16);
  if ((a2 & 1) == 0)
  {
    swift_beginAccess(a3 + 16, v79, 1, 0);
    *v28 = 1;
  }
  if ((v74 & 1) != 0 && (v73 & 1) != 0 && (a1 & 1) == 0)
  {
    swift_beginAccess(v28, v75, 1, 0);
    *v28 = 1;
  }
  v61 = a15;
  v60 = a13;
  v59 = a12;
  v58 = a10;
  v62 = a9;
  if ((v72 & 1) == 0 || (v63 & 1) != 0 || ((v74 ^ 1 | v73 | v57) & 1) == 0)
  {
    swift_beginAccess(v28, v78, 1, 0);
    *v28 = 1;
  }
  v29 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v63 = static OS_dispatch_queue.main.getter(v29);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v25 + 16))(&v56[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)], a11, v24);
  sub_100007464(a14, (uint64_t)&v56[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)], &qword_1005D2BC8);
  v30 = *(unsigned __int8 *)(v25 + 80);
  v31 = (v30 + 25) & ~v30;
  v32 = v31 + v26;
  v33 = *(unsigned __int8 *)(v64 + 80);
  v34 = (v33 + v31 + v26 + 4) & ~v33;
  v35 = v34 + v22;
  v36 = (v35 + 9) & 0xFFFFFFFFFFFFFFF8;
  v37 = swift_allocObject(&unk_10054BB48, v36 + 8, v30 | v33 | 7);
  v38 = v24;
  v39 = v62;
  *(_QWORD *)(v37 + 16) = v62;
  *(_BYTE *)(v37 + 24) = v58 & 1;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v25 + 32))(v37 + v31, v27, v38);
  v40 = (_BYTE *)(v37 + v32);
  *v40 = v72 & 1;
  v40[1] = v59 & 1;
  v40[2] = v60 & 1;
  v40[3] = v74 & 1;
  sub_10005DAA0((uint64_t)v23, v37 + v34, &qword_1005D2BC8);
  v41 = (_BYTE *)(v37 + v35);
  *v41 = v73 & 1;
  v41[1] = v61 & 1;
  v42 = v65;
  *(_QWORD *)(v37 + v36) = v65;
  aBlock[4] = sub_1001D4804;
  v77 = v37;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10054BB60;
  v43 = _Block_copy(aBlock);
  v44 = v77;
  v45 = v39;
  swift_retain(v42);
  swift_release(v44);
  v46 = v66;
  static DispatchQoS.unspecified.getter(v47);
  aBlock[0] = _swiftEmptyArrayStorage;
  v48 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v49 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v50 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  v51 = v69;
  v52 = v49;
  v53 = v71;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v52, v50, v71, v48);
  v54 = (void *)v63;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v46, v51, v43);
  _Block_release(v43);

  (*(void (**)(_BYTE *, uint64_t))(v70 + 8))(v51, v53);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v67 + 8))(v46, v68);
}

void sub_1001C05B8(uint64_t a1, int a2, uint64_t a3, int a4, int a5, int a6, int a7, uint64_t a8, unsigned __int8 a9, unsigned __int8 a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  id v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[24];

  v52 = a6;
  v53 = a7;
  v50 = a4;
  v51 = a5;
  v55 = a11;
  v47 = a10;
  v48 = a9;
  v49 = a2;
  v13 = type metadata accessor for FMIPDeviceState(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v44 - v18;
  v20 = sub_100053F2C(&qword_1005D2BC8);
  __chkstk_darwin(v20);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = a1;
  v46 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView;
  v45 = *(id *)(a1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView);
  v23 = FMIPDevice.safeLocations.getter(v45);
  v44 = *(_QWORD *)(v23 + 16);
  swift_bridgeObjectRelease(v23);
  sub_100007464(a8, (uint64_t)v22, &qword_1005D2BC8);
  v24 = type metadata accessor for FMFDevice(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24) == 1)
  {
    v26 = sub_1000051EC((uint64_t)v22, &qword_1005D2BC8);
    v27 = 0;
    v28 = 0;
  }
  else
  {
    v29 = FMFDevice.name.getter();
    v28 = v30;
    v31 = v24;
    v27 = v29;
    v26 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v22, v31);
  }
  v32 = FMIPDevice.state.getter(v26);
  static FMIPDeviceState.separationWarningPaused.getter(v32);
  v33 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
  v34 = dispatch thunk of SetAlgebra.isSuperset(of:)(v17, v13, v33);
  v35 = *(void (**)(char *, uint64_t))(v14 + 8);
  v35(v17, v13);
  v35(v19, v13);
  v36 = v54;
  v37 = *(id *)(*(_QWORD *)(v54 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 16);
  v38 = sub_100377758();

  v39 = (v38 & 0xFFFFFFFFFFFFFFFDLL) == 1;
  v40 = v55;
  v41 = v45;
  sub_1001F1894(v49 & 1, v44, v50 & 1, v51 & 1, v52 & 1, v53 & 1, v27, v28, v48 & 1, (v47 & 1) == 0, v34 & 1, v39);

  swift_bridgeObjectRelease(v28);
  v42 = *(void **)(v36 + v46);
  swift_beginAccess(v40 + 16, v56, 0, 0);
  LOBYTE(v40) = *(_BYTE *)(v40 + 16);
  v43 = v42;
  sub_1001F292C(v40);

}

void sub_1001C08B8(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  int v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  int v50;
  uint64_t v51;
  char v52[24];

  v47 = a2;
  v48 = a3;
  v45 = a1;
  v4 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMIPDevice(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v46 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v49 = (char *)&v43 - v11;
  v12 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 24);
  v13 = (uint64_t *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v13, v52, 0, 0);
  v14 = *v13;
  v15 = v13[1];
  swift_retain(v12);
  swift_bridgeObjectRetain(v15);
  v17 = FMIPManager.devices.getter(v16);
  swift_bridgeObjectRetain(v15);
  v18 = sub_100414D38(v17, v14, v15);
  swift_bridgeObjectRelease(v17);
  v19 = swift_bridgeObjectRelease(v15);
  if (v18[2])
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16))(v6, (unint64_t)v18+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v7, v19);
    v20 = 0;
  }
  else
  {
    v20 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v20, 1, v7);
  swift_release(v12);
  swift_bridgeObjectRelease(v18);
  v21 = swift_bridgeObjectRelease(v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v21) == 1)
  {
    sub_1000051EC((uint64_t)v6, &qword_1005D6710);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v22 = type metadata accessor for Logger(0);
    v23 = sub_100056D88(v22, (uint64_t)qword_1005F5748);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMDeviceDetailContentViewController: cannot enable notify when detach for unknown device", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

  }
  else
  {
    v44 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v44(v49, v6, v7);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100056D88(v27, (uint64_t)qword_1005F5748);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v31 = 67109120;
      v50 = v45 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMDeviceDetailContentViewController: Setting Notify when detached to state = %{BOOL}d", v31, 8u);
      swift_slowDealloc(v31, -1, -1);
    }

    v32 = swift_allocObject(&unk_10054B5D0, 24, 7);
    swift_unknownObjectWeakInit(v32 + 16);
    v33 = v46;
    v34 = v49;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v46, v49, v7);
    v35 = *(unsigned __int8 *)(v8 + 80);
    v36 = (v35 + 24) & ~v35;
    v37 = (v9 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
    v38 = swift_allocObject(&unk_10054BA80, v37 + 16, v35 | 7);
    *(_QWORD *)(v38 + 16) = v32;
    v44((char *)(v38 + v36), v33, v7);
    v39 = (uint64_t *)(v38 + v37);
    v40 = v47;
    v41 = v48;
    *v39 = v47;
    v39[1] = v41;
    sub_1000A190C(v40, v41);
    sub_1000A0F40((uint64_t)sub_1001D44A4, v38, 0, 0);
    v42 = swift_release(v38);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v34, v7, v42);
  }
}

double sub_1001C0D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t Strong;
  double result;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  _BYTE v15[24];

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator)
                                + 24)
                    + 32);
    v13 = (_QWORD *)swift_allocObject(&unk_10054BAA8, 40, 7);
    v13[2] = v11;
    v13[3] = a4;
    v13[4] = a5;
    swift_retain(v12);
    v14 = v11;
    sub_1000A190C(a4, a5);
    sub_1000B7274(a3, (uint64_t)sub_1001D4534, (uint64_t)v13);

    swift_release(v12);
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

void sub_1001C0E0C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  void (*v24)(char *, uint64_t);
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  char v29;
  char v30;
  void *v31;
  id v32;
  uint64_t v33;
  void (*v34)(_BOOL8);
  uint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  void (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a1;
  v41 = a5;
  v8 = type metadata accessor for FMIPActionStatus(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPDeviceState(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v38 - v17;
  if (a2 && *(_QWORD *)(a2 + 16))
  {
    v19 = type metadata accessor for FMIPDevice(0);
    v20 = FMIPDevice.state.getter(v19);
    static FMIPDeviceState.isNotifyWhenDetachedEnabled.getter(v20);
    v21 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
    v22 = dispatch thunk of SetAlgebra.isSuperset(of:)(v16, v12, v21);
    v39 = a4;
    v23 = v22;
    v24 = *(void (**)(char *, uint64_t))(v13 + 8);
    v24(v16, v12);
    v24(v18, v12);
    v25 = *(void **)(*(_QWORD *)(a3 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 16);
    v26 = *(id *)(a3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView);
    v27 = v25;
    v28 = sub_100377758();

    v29 = (v28 & 0xFFFFFFFFFFFFFFFDLL) == 1;
    v30 = v23 & 1;
    a4 = v39;
  }
  else
  {
    v31 = *(void **)(*(_QWORD *)(a3 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 16);
    v26 = *(id *)(a3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView);
    v32 = v31;
    v33 = sub_100377758();

    v29 = (v33 & 0xFFFFFFFFFFFFFFFDLL) == 1;
    v30 = 0;
  }
  sub_1001F24EC(v30, v29);

  if (a4)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for FMIPActionStatus.success(_:), v8);
    v34 = a4;
    v35 = sub_100008000(&qword_1005D9928, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
    v36 = v41;
    swift_retain(v41);
    dispatch thunk of RawRepresentable.rawValue.getter(&v43, v8, v35);
    dispatch thunk of RawRepresentable.rawValue.getter(&v42, v8, v35);
    v37 = v43 == v42;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v34(v37);
    sub_1000327F0((uint64_t)v34, v36);
  }
}

void sub_1001C10E4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  id v34;
  char *v35;
  char *v36;
  char v37[24];

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPDevice(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v35 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v36 = (char *)&v35 - v9;
  v10 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v11 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
  v12 = (uint64_t *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v12, v37, 0, 0);
  v13 = *v12;
  v14 = v12[1];
  swift_retain(v11);
  swift_bridgeObjectRetain(v14);
  v16 = FMIPManager.devices.getter(v15);
  swift_bridgeObjectRetain(v14);
  v17 = sub_100414D38(v16, v13, v14);
  swift_bridgeObjectRelease(v16);
  v18 = swift_bridgeObjectRelease(v14);
  if (v17[2])
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16))(v4, (unint64_t)v17+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5, v18);
    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v19, 1, v5);
  swift_release(v11);
  swift_bridgeObjectRelease(v17);
  v20 = swift_bridgeObjectRelease(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v4, 1, v5, v20) == 1)
  {
    sub_1000051EC((uint64_t)v4, &qword_1005D6710);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v21 = type metadata accessor for Logger(0);
    v22 = sub_100056D88(v21, (uint64_t)qword_1005F5748);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "DeviceDetailContentViewController: cannot enable notify when left behind for unknown device", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

  }
  else
  {
    v26 = v36;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v36, v4, v5);
    v27 = *(_QWORD *)&v1[v10];
    v28 = (uint64_t)v35;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v35, v26, v5);
    v29 = objc_allocWithZone((Class)type metadata accessor for FMNotifyWhenDetachedViewController(0));
    v30 = swift_retain(v27);
    v31 = (char *)sub_10034ACF8(v30, v28);
    v32 = &v31[OBJC_IVAR____TtC6FindMy34FMNotifyWhenDetachedViewController_delegate];
    *((_QWORD *)v32 + 1) = &off_10054B538;
    swift_unknownObjectWeakAssign(v32, v1);
    objc_allocWithZone((Class)type metadata accessor for FMTransparentNavigationController());
    v33 = v31;
    v34 = sub_1000A750C(v33, 2);
    objc_msgSend(v34, "setDelegate:", v34);
    objc_msgSend(v1, "presentViewController:animated:completion:", v34, 1, 0);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v26, v5);
  }
}

void sub_1001C1478(int a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  __n128 v40;
  _BYTE v41[12];
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  char v48[24];

  v4 = v3;
  v44 = a2;
  v45 = a3;
  v42 = a1;
  v5 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v5);
  v7 = &v41[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for FMIPDevice(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v43 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v12 = *(_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
  v13 = (uint64_t *)(*(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v13, v48, 0, 0);
  v14 = *v13;
  v15 = v13[1];
  swift_retain(v12);
  swift_bridgeObjectRetain(v15);
  v17 = FMIPManager.devices.getter(v16);
  swift_bridgeObjectRetain(v15);
  v18 = sub_100414D38(v17, v14, v15);
  swift_bridgeObjectRelease(v17);
  v19 = swift_bridgeObjectRelease(v15);
  if (v18[2])
  {
    (*(void (**)(_BYTE *, unint64_t, uint64_t, __n128))(v9 + 16))(v7, (unint64_t)v18+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8, v19);
    v20 = 0;
  }
  else
  {
    v20 = 1;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v20, 1, v8);
  swift_release(v12);
  swift_bridgeObjectRelease(v18);
  v21 = swift_bridgeObjectRelease(v15);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v21) == 1)
  {
    sub_1000051EC((uint64_t)v7, &qword_1005D6710);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v22 = type metadata accessor for Logger(0);
    v23 = sub_100056D88(v22, (uint64_t)qword_1005F5748);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMDeviceDetailContentViewController: cannot enable/disable show contact details for unknown device", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v11, v7, v8);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100056D88(v27, (uint64_t)qword_1005F5748);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v31 = 67109120;
      v46 = v42 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMDeviceDetailContentViewController: Show contact details button toggled with state = %{BOOL}d", v31, 8u);
      swift_slowDealloc(v31, -1, -1);
    }

    v32 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v4[v43] + 24) + 32);
    v33 = (uint64_t *)(*(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsView]
                    + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_phoneNumber);
    v34 = *v33;
    v35 = v33[1];
    v36 = (_QWORD *)swift_allocObject(&unk_10054BA58, 40, 7);
    v38 = v44;
    v37 = v45;
    v36[2] = v4;
    v36[3] = v38;
    v36[4] = v37;
    swift_retain(v32);
    swift_bridgeObjectRetain(v35);
    v39 = v4;
    sub_1000A190C(v38, v37);
    sub_1000B74B8((uint64_t)v11, v34, v35, (uint64_t)sub_1001D440C, (uint64_t)v36);
    swift_release(v32);
    swift_bridgeObjectRelease(v35);
    v40 = swift_release(v36);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v9 + 8))(v11, v8, v40);
  }
}

void sub_1001C18B0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  id v21;
  uint64_t v22;

  v10 = type metadata accessor for FMIPDeviceState(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v22 - v15;
  if (a2)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v17 = type metadata accessor for FMIPDevice(0);
      v18 = FMIPDevice.state.getter(v17);
      static FMIPDeviceState.isShowContactDetailsEnabled.getter(v18);
      v19 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
      LOBYTE(a2) = dispatch thunk of SetAlgebra.isSuperset(of:)(v14, v10, v19);
      v20 = *(void (**)(char *, uint64_t))(v11 + 8);
      v20(v14, v10);
      v20(v16, v10);
    }
    else
    {
      LOBYTE(a2) = 0;
    }
  }
  v21 = *(id *)(a3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsView);
  sub_10039C410(a2 & 1);

  if (a4)
  {
    swift_retain(a5);
    a4(a1);
    sub_1000327F0((uint64_t)a4, a5);
  }
}

char *sub_1001C1A2C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  id v34;
  char *v36;
  char *v37;
  char v38[24];

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPDevice(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v36 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v37 = (char *)&v36 - v9;
  v10 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v11 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
  v12 = (uint64_t *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v12, v38, 0, 0);
  v13 = *v12;
  v14 = v12[1];
  swift_retain(v11);
  swift_bridgeObjectRetain(v14);
  v16 = FMIPManager.devices.getter(v15);
  swift_bridgeObjectRetain(v14);
  v17 = sub_100414D38(v16, v13, v14);
  swift_bridgeObjectRelease(v16);
  v18 = swift_bridgeObjectRelease(v14);
  if (v17[2])
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16))(v4, (unint64_t)v17+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5, v18);
    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v19, 1, v5);
  swift_release(v11);
  swift_bridgeObjectRelease(v17);
  v20 = swift_bridgeObjectRelease(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v4, 1, v5, v20) == 1)
  {
    sub_1000051EC((uint64_t)v4, &qword_1005D6710);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v21 = type metadata accessor for Logger(0);
    v22 = sub_100056D88(v21, (uint64_t)qword_1005F5748);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "DeviceDetailContentViewController: cannot enable showContactDetails for unknown device", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    return 0;
  }
  else
  {
    v27 = v37;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v37, v4, v5);
    v28 = *(_QWORD *)&v1[v10];
    v29 = (uint64_t)v36;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v36, v27, v5);
    v30 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsPhoneNumber];
    v31 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsPhoneNumber + 8];
    objc_allocWithZone((Class)type metadata accessor for FMContactDetailsWelcomeScreenViewController(0));
    swift_retain(v28);
    swift_bridgeObjectRetain(v31);
    v32 = sub_1001DAFD4(v28, v29, v30, v31);
    swift_release(v28);
    v33 = &v32[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_delegate];
    *((_QWORD *)v33 + 1) = &off_10054B528;
    swift_unknownObjectWeakAssign(v33, v1);
    objc_allocWithZone((Class)type metadata accessor for FMTransparentNavigationController());
    v26 = v32;
    v34 = sub_1000A750C(v26, 2);
    objc_msgSend(v34, "setDelegate:", v34);

    objc_msgSend(v1, "presentViewController:animated:completion:", v34, 1, 0);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v27, v5);
  }
  return v26;
}

void sub_1001C1DF8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  char v42[24];

  v41 = a1;
  v2 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPDevice(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v5);
  v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v40 = (char *)&v38 - v9;
  v10 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 24);
  v11 = (uint64_t *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v11, v42, 0, 0);
  v12 = *v11;
  v13 = v11[1];
  swift_retain(v10);
  swift_bridgeObjectRetain(v13);
  v15 = FMIPManager.devices.getter(v14);
  swift_bridgeObjectRetain(v13);
  v16 = sub_100414D38(v15, v12, v13);
  swift_bridgeObjectRelease(v15);
  v17 = swift_bridgeObjectRelease(v13);
  if (v16[2])
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16))(v4, (unint64_t)v16+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5, v17);
    v18 = 0;
  }
  else
  {
    v18 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v18, 1, v5);
  swift_release(v10);
  swift_bridgeObjectRelease(v16);
  v19 = swift_bridgeObjectRelease(v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v4, 1, v5, v19) == 1)
  {
    sub_1000051EC((uint64_t)v4, &qword_1005D6710);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v20 = type metadata accessor for Logger(0);
    v21 = sub_100056D88(v20, (uint64_t)qword_1005F5748);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "DeviceDetailContentViewController: cannot enable notify when left behind for unknown device", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }

  }
  else
  {
    v25 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v26 = v40;
    v25(v40, v4, v5);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100056D88(v27, (uint64_t)qword_1005F5748);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "DeviceDetailContentViewController: Notify When left behind button toggled", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    v32 = swift_allocObject(&unk_10054B5D0, 24, 7);
    swift_unknownObjectWeakInit(v32 + 16);
    v33 = v39;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v39, v26, v5);
    v34 = *(unsigned __int8 *)(v6 + 80);
    v35 = (v34 + 25) & ~v34;
    v36 = swift_allocObject(&unk_10054BA08, v35 + v7, v34 | 7);
    *(_QWORD *)(v36 + 16) = v32;
    *(_BYTE *)(v36 + 24) = v41 & 1;
    v25((char *)(v36 + v35), v33, v5);
    sub_1000A0F40((uint64_t)sub_1001D439C, v36, 0, 0);
    v37 = swift_release(v36);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v26, v5, v37);
  }
}

